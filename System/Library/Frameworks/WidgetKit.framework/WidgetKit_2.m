uint64_t sub_1909B9140(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  if (a2 > 0x7FFFFFFE)
  {
    v2 = a2 - 0x7FFFFFFF;
    *(_BYTE *)(result + 8) = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2;
  }
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for MetadataGraphicView.ColorMode()
{
  return &type metadata for MetadataGraphicView.ColorMode;
}

ValueMetadata *type metadata accessor for MetadataForegroundColorsModifier()
{
  return &type metadata for MetadataForegroundColorsModifier;
}

uint64_t sub_1909B918C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1909B919C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EB5F8;
  if (!qword_1EE1EB5F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EB600);
    v2[0] = sub_1909B9208();
    v2[1] = sub_1909B93AC();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EB5F8);
  }
  return result;
}

unint64_t sub_1909B9208()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EB5D8;
  if (!qword_1EE1EB5D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EB5E0);
    v2[0] = sub_1909B9274();
    v2[1] = sub_1909B9310();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EB5D8);
  }
  return result;
}

unint64_t sub_1909B9274()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EB550;
  if (!qword_1EE1EB550)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EB558);
    v2[0] = sub_1908AF598(&qword_1EE1EB608, &qword_1EE1EB610, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1908AF598(&qword_1EE1EB650, &qword_1EE1EB658, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EB550);
  }
  return result;
}

unint64_t sub_1909B9310()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EB530;
  if (!qword_1EE1EB530)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EB538);
    v2[0] = sub_1908AF598(&qword_1EE1EB608, &qword_1EE1EB610, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1908AF598(&qword_1EE1EB620, &qword_1EE1EB628, MEMORY[0x1E0CDC908]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EB530);
  }
  return result;
}

unint64_t sub_1909B93AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EB540;
  if (!qword_1EE1EB540)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EB548);
    v2[0] = sub_1908AF598(&qword_1EE1EB608, &qword_1EE1EB610, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1908AF598(&qword_1EE1EB630, &qword_1EE1EB638, MEMORY[0x1E0CDC920]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EB540);
  }
  return result;
}

uint64_t sub_1909B9448@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46A44();
  *a1 = result;
  return result;
}

uint64_t sub_1909B9470@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46A44();
  *a1 = result;
  return result;
}

uint64_t sub_1909B9498()
{
  swift_retain();
  return sub_190A46A50();
}

uint64_t sub_1909B94C0()
{
  swift_retain();
  return sub_190A46A50();
}

uint64_t sub_1909B94E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MetadataGraphicView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1909B952C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MetadataGraphicView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1909B956C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EB1A0;
  if (!qword_1EE1EB1A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EB1A8);
    v2[0] = sub_1909B919C();
    v2[1] = sub_1908AF598(&qword_1EE1EB608, &qword_1EE1EB610, MEMORY[0x1E0CDBF10]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EB1A0);
  }
  return result;
}

uint64_t sub_1909B95F0()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D588 = result;
  return result;
}

uint64_t sub_1909B9614()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B2B8);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D570 = v0;
  *(_QWORD *)algn_1ECF6D578 = 0xD000000000000025;
  qword_1ECF6D580 = 0x8000000190A60F40;
  return result;
}

uint64_t sub_1909B9688(uint64_t a1, uint64_t a2)
{
  return sub_19096CF24(a1, a2, qword_1ECF6B210);
}

uint64_t sub_1909B96A4()
{
  uint64_t v0;

  if (qword_1ECF6B288 != -1)
    swift_once();
  v0 = qword_1ECF6D570;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1909B9718()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D658 = result;
  return result;
}

uint64_t sub_1909B973C()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B2B0);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D640 = v0;
  *(_QWORD *)algn_1ECF6D648 = 0xD00000000000002BLL;
  qword_1ECF6D650 = 0x8000000190A60F70;
  return result;
}

ValueMetadata *type metadata accessor for UserWantsWidgetDataWhenPasscodeLockedKey()
{
  return &type metadata for UserWantsWidgetDataWhenPasscodeLockedKey;
}

ValueMetadata *type metadata accessor for UserWantsLiveActivityDataWhenPasscodeLockedKey()
{
  return &type metadata for UserWantsLiveActivityDataWhenPasscodeLockedKey;
}

uint64_t sub_1909B97D0(uint64_t a1, uint64_t a2)
{
  return sub_19096CF24(a1, a2, &qword_1ECF6B3C0);
}

uint64_t sub_1909B97EC()
{
  uint64_t v0;

  if (qword_1ECF6B3B8 != -1)
    swift_once();
  v0 = qword_1ECF6D640;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1909B9870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  char v38;
  void (*v39)(char *, uint64_t);
  char v40;
  char v41;
  char *v42;
  char v43;
  char v44;
  char v45;
  char *v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char *v55;
  char v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A668);
  MEMORY[0x1E0C80A78](v1);
  v71 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_190A4612C();
  v72 = *(_QWORD *)(v3 - 8);
  v73 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v68 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v67 = (char *)&v66 - v7;
  MEMORY[0x1E0C80A78](v6);
  v69 = (char *)&v66 - v8;
  v9 = sub_190A460E4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A658);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A650);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v66 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v66 - v23;
  v70 = v0;
  sub_190A46150();
  sub_190A460D8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
  v25 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_1909BAFB8((uint64_t)v24, (uint64_t)v15);
  sub_1909BAFB8((uint64_t)v22, v25);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v26((uint64_t)v15, 1, v9) == 1)
  {
    sub_1908AA544((uint64_t)v22, &qword_1ECF6A650);
    sub_1908AA544((uint64_t)v24, &qword_1ECF6A650);
    if (v26(v25, 1, v9) == 1)
    {
      sub_1908AA544((uint64_t)v15, &qword_1ECF6A650);
      return 2;
    }
  }
  else
  {
    sub_1909BAFB8((uint64_t)v15, (uint64_t)v19);
    if (v26(v25, 1, v9) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, v25, v9);
      sub_1908AA2F4(&qword_1ECF6A648, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0AE8], MEMORY[0x1E0CB0B08]);
      v38 = sub_190A47AAC();
      v39 = *(void (**)(char *, uint64_t))(v10 + 8);
      v39(v12, v9);
      sub_1908AA544((uint64_t)v22, &qword_1ECF6A650);
      sub_1908AA544((uint64_t)v24, &qword_1ECF6A650);
      v39(v19, v9);
      sub_1908AA544((uint64_t)v15, &qword_1ECF6A650);
      if ((v38 & 1) != 0)
        return 2;
      goto LABEL_7;
    }
    sub_1908AA544((uint64_t)v22, &qword_1ECF6A650);
    sub_1908AA544((uint64_t)v24, &qword_1ECF6A650);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
  }
  sub_1908AA544((uint64_t)v15, &qword_1ECF6A658);
LABEL_7:
  v28 = (uint64_t)v71;
  sub_190A4615C();
  v30 = v72;
  v29 = v73;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v28, 1, v73) == 1)
  {
    sub_1908AA544(v28, &qword_1ECF6A668);
    return 0;
  }
  v31 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v69, v28, v29);
  v32 = v67;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v67, v31, v29);
  v33 = v68;
  sub_190A46120();
  sub_1908AA2F4(&qword_1ECF6A660, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C88], MEMORY[0x1E0CB0CA0]);
  v34 = sub_190A47AAC();
  v35 = *(void (**)(char *, uint64_t))(v30 + 8);
  v35(v33, v29);
  if ((v34 & 1) != 0)
    goto LABEL_10;
  sub_190A46120();
  v40 = sub_190A47AAC();
  v35(v33, v29);
  if ((v40 & 1) != 0)
    goto LABEL_15;
  sub_190A46120();
  v41 = sub_190A47AAC();
  v35(v33, v29);
  if ((v41 & 1) != 0)
  {
    v35(v32, v29);
    v42 = v31;
LABEL_18:
    v35(v42, v29);
    return 1;
  }
  sub_190A46120();
  v43 = sub_190A47AAC();
  v35(v33, v29);
  if ((v43 & 1) != 0)
    goto LABEL_22;
  sub_190A46120();
  v44 = sub_190A47AAC();
  v35(v33, v29);
  if ((v44 & 1) != 0)
    goto LABEL_22;
  sub_190A46120();
  v45 = sub_190A47AAC();
  v35(v33, v29);
  if ((v45 & 1) != 0)
    goto LABEL_22;
  sub_190A46120();
  v48 = sub_190A47AAC();
  v35(v33, v29);
  if ((v48 & 1) != 0)
    goto LABEL_15;
  sub_190A46120();
  v49 = sub_190A47AAC();
  v35(v33, v29);
  if ((v49 & 1) != 0 || (sub_190A46120(), v50 = sub_190A47AAC(), v35(v33, v29), (v50 & 1) != 0))
  {
LABEL_22:
    v35(v32, v29);
    v46 = v31;
    v47 = v29;
LABEL_23:
    v35(v46, v47);
    return 3;
  }
  sub_190A46120();
  v51 = sub_190A47AAC();
  v35(v33, v29);
  if ((v51 & 1) != 0)
  {
LABEL_10:
    v35(v32, v29);
    v36 = v31;
    v37 = v29;
LABEL_11:
    v35(v36, v37);
    return 2;
  }
  sub_190A46120();
  v52 = sub_190A47AAC();
  v35(v33, v29);
  if ((v52 & 1) != 0)
  {
LABEL_15:
    v35(v32, v29);
    v35(v31, v29);
    return 4;
  }
  sub_190A46120();
  v53 = sub_190A47AAC();
  v35(v33, v29);
  if ((v53 & 1) != 0)
    goto LABEL_10;
  sub_190A46120();
  v54 = sub_190A47AAC();
  v35(v33, v29);
  if ((v54 & 1) != 0)
  {
    v35(v32, v29);
    v42 = v69;
    goto LABEL_18;
  }
  v55 = v68;
  sub_190A46120();
  v56 = sub_190A47AAC();
  v35(v55, v29);
  if ((v56 & 1) != 0)
  {
    v57 = v73;
    v35(v67, v73);
    v36 = v69;
    v37 = v57;
    goto LABEL_11;
  }
  v58 = v68;
  sub_190A46120();
  v59 = v73;
  v60 = sub_190A47AAC();
  v35(v58, v59);
  if ((v60 & 1) != 0)
  {
    v61 = v73;
    v35(v67, v73);
    v46 = v69;
    v47 = v61;
    goto LABEL_23;
  }
  v62 = v68;
  sub_190A46120();
  v63 = v67;
  v64 = v73;
  v65 = sub_190A47AAC();
  v35(v62, v64);
  v35(v63, v64);
  v35(v69, v64);
  if ((v65 & 1) != 0)
    return 4;
  else
    return 0;
}

uint64_t sub_1909BA174()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1909BA19C + 4 * byte_190A57330[*v0]))(1701736302, 0xE400000000000000);
}

uint64_t sub_1909BA19C()
{
  return 0x3170756F7267;
}

uint64_t sub_1909BA1B0()
{
  return 0x3270756F7267;
}

uint64_t sub_1909BA1C4()
{
  return 0x3370756F7267;
}

uint64_t sub_1909BA1D8()
{
  return 0x3470756F7267;
}

__CFNotificationCenter *sub_1909BA1EC()
{
  uint64_t v0;
  uint64_t v1;
  _DWORD *v2;
  __CFNotificationCenter *result;
  __CFNotificationCenter *v4;
  __CFNotificationCenter *v5;
  __CFString *v6;

  type metadata accessor for UnfairLock();
  v1 = swift_allocObject();
  v2 = (_DWORD *)swift_slowAlloc();
  *v2 = 0;
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v0 + 16) = v1;
  *(_BYTE *)(v0 + 24) = 5;
  result = CFNotificationCenterGetLocalCenter();
  if (*MEMORY[0x1E0C9B070])
  {
    v4 = result;
    CFNotificationCenterAddObserver(result, 0, (CFNotificationCallback)sub_1909BA2E0, (CFStringRef)*MEMORY[0x1E0C9B070], 0, CFNotificationSuspensionBehaviorDeliverImmediately);

    v5 = CFNotificationCenterGetDarwinNotifyCenter();
    v6 = (__CFString *)sub_190A47AC4();
    CFNotificationCenterAddObserver(v5, 0, (CFNotificationCallback)sub_1909BA2F4, v6, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

    return (__CFNotificationCenter *)v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1909BA2E0()
{
  return sub_1909BB000();
}

uint64_t sub_1909BA2F4()
{
  return sub_1909BB000();
}

__CFNotificationCenter *sub_1909BA308()
{
  __CFNotificationCenter *result;

  type metadata accessor for PreferredLanguageObserver();
  swift_allocObject();
  result = sub_1909BA1EC();
  off_1ECF6A698 = result;
  return result;
}

uint64_t sub_1909BA344()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PreferredLanguageObserver()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for TextStyleDefinition()
{
  return &type metadata for TextStyleDefinition;
}

uint64_t storeEnumTagSinglePayload for TextStyleDefinition.LanguageGroup(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1909BA3E4 + 4 * byte_190A5733A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1909BA418 + 4 * byte_190A57335[v4]))();
}

uint64_t sub_1909BA418(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909BA420(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909BA428);
  return result;
}

uint64_t sub_1909BA434(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909BA43CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1909BA440(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909BA448(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextStyleDefinition.LanguageGroup()
{
  return &type metadata for TextStyleDefinition.LanguageGroup;
}

unint64_t sub_1909BA468()
{
  unint64_t result;

  result = qword_1EE1EE0C8[0];
  if (!qword_1EE1EE0C8[0])
  {
    result = MEMORY[0x19401429C](&unk_190A57454, &type metadata for TextStyleDefinition.LanguageGroup);
    atomic_store(result, qword_1EE1EE0C8);
  }
  return result;
}

uint64_t sub_1909BA4AC()
{
  uint64_t result;

  if ((sub_1909BA518() & 1) != 0)
    goto LABEL_6;
  if (qword_1ECF6C608 != -1)
    swift_once();
  if ((dyld_program_sdk_at_least() & 1) == 0)
LABEL_6:
    result = CTFontHasExuberatedLineHeight();
  else
    result = 2;
  byte_1ECF6D4E8 = result;
  return result;
}

id sub_1909BA518()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  _OWORD v8[2];

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_standardUserDefaults);
  v2 = (void *)sub_190A47AC4();
  v3 = objc_msgSend(v1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_190A481B4();
    swift_unknownObjectRelease();
    sub_1908AA544((uint64_t)v8, (uint64_t *)&unk_1ECF6C8A0);
    v4 = objc_msgSend(v0, sel_standardUserDefaults);
    v5 = (void *)sub_190A47AC4();
    v6 = objc_msgSend(v4, sel_BOOLForKey_, v5);

  }
  else
  {
    memset(v8, 0, sizeof(v8));
    sub_1908AA544((uint64_t)v8, (uint64_t *)&unk_1ECF6C8A0);
    if (qword_1ECF6C608 != -1)
      swift_once();
    return (id)(dyld_program_sdk_at_least() ^ 1);
  }
  return v6;
}

uint64_t sub_1909BA68C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  int v43;
  void (*v44)(char *, uint64_t);
  uint64_t *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  int v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  int v76;
  unsigned int v77;
  unsigned int v78;

  v2 = sub_190A460E4();
  v75 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v62 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A658);
  v4 = MEMORY[0x1E0C80A78](v71);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v59 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A650);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v59 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v59 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v59 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v73 = (uint64_t)&v59 - v23;
  MEMORY[0x1E0C80A78](v22);
  v72 = (uint64_t)&v59 - v24;
  v25 = sub_190A46168();
  v68 = *(_QWORD *)(v25 - 8);
  v69 = v25;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(_QWORD *)(a1 + 16);
  if (!v28)
    return 0;
  v63 = v21;
  v65 = v18;
  v61 = v12;
  v74 = v8;
  swift_bridgeObjectRetain();
  LODWORD(v12) = 0;
  v76 = 0;
  v59 = a1;
  v29 = a1 + 40;
  v66 = v15;
  v30 = v72;
  v31 = v2;
  v32 = v73;
  v64 = v6;
  v70 = v27;
  do
  {
    v77 = v12;
    swift_bridgeObjectRetain();
    sub_190A46144();
    v78 = sub_1909B9870();
    sub_190A46150();
    sub_190A460D8();
    v33 = v30;
    v34 = v75;
    v35 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56);
    v35(v32, 0, 1, v31);
    v36 = (uint64_t)v74;
    v37 = (uint64_t)&v74[*(int *)(v71 + 48)];
    sub_1909BAFB8(v33, (uint64_t)v74);
    sub_1909BAFB8(v32, v37);
    v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
    if (v38(v36, 1, v31) == 1)
    {
      v39 = v32;
      v40 = (uint64_t)v15;
      sub_1908AA544(v39, &qword_1ECF6A650);
      sub_1908AA544(v33, &qword_1ECF6A650);
      if (v38(v37, 1, v31) == 1)
      {
        sub_1908AA544(v36, &qword_1ECF6A650);
        v76 = 1;
        v41 = v70;
        goto LABEL_15;
      }
      v43 = 0;
      v45 = &qword_1ECF6A658;
      v41 = v70;
    }
    else
    {
      v42 = (uint64_t)v63;
      sub_1909BAFB8(v36, (uint64_t)v63);
      if (v38(v37, 1, v31) == 1)
      {
        sub_1908AA544(v73, &qword_1ECF6A650);
        sub_1908AA544(v72, &qword_1ECF6A650);
        v43 = 0;
        v44 = *(void (**)(char *, uint64_t))(v75 + 8);
        v45 = &qword_1ECF6A658;
      }
      else
      {
        v46 = v75;
        v47 = v62;
        (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v62, v37, v31);
        sub_1908AA2F4(&qword_1ECF6A648, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0AE8], MEMORY[0x1E0CB0B08]);
        v43 = sub_190A47AAC();
        v44 = *(void (**)(char *, uint64_t))(v46 + 8);
        v44(v47, v31);
        v45 = &qword_1ECF6A650;
        sub_1908AA544(v73, &qword_1ECF6A650);
        sub_1908AA544(v72, &qword_1ECF6A650);
      }
      v41 = v70;
      v44((char *)v42, v31);
      v40 = (uint64_t)v66;
    }
    sub_1908AA544((uint64_t)v74, v45);
    v76 |= v43;
LABEL_15:
    v12 = v77;
    if (v77 >= v78)
    {
      (*(void (**)(char *, uint64_t))(v68 + 8))(v41, v69);
      v30 = v72;
      goto LABEL_4;
    }
    v67 = v28;
    v48 = (uint64_t)v65;
    sub_190A46150();
    sub_190A460D8();
    v35(v40, 0, 1, v31);
    v49 = (uint64_t)v64;
    v50 = (uint64_t)&v64[*(int *)(v71 + 48)];
    sub_1909BAFB8(v48, (uint64_t)v64);
    sub_1909BAFB8(v40, v50);
    if (v38(v49, 1, v31) == 1)
    {
      sub_1908AA544(v40, &qword_1ECF6A650);
      sub_1908AA544(v48, &qword_1ECF6A650);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v41, v69);
      v51 = v38(v50, 1, v31);
      v30 = v72;
      v12 = v78;
      v28 = v67;
      if (v51 != 1)
        goto LABEL_21;
      sub_1908AA544(v49, &qword_1ECF6A650);
      v15 = (char *)v40;
      v32 = v73;
LABEL_23:
      if ((v76 & 1) != 0)
        v12 = v77;
      else
        v12 = v12;
      goto LABEL_5;
    }
    v52 = v61;
    sub_1909BAFB8(v49, v61);
    if (v38(v50, 1, v31) == 1)
    {
      v40 = (uint64_t)v66;
      sub_1908AA544((uint64_t)v66, &qword_1ECF6A650);
      sub_1908AA544((uint64_t)v65, &qword_1ECF6A650);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v69);
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v52, v31);
      v30 = v72;
      v12 = v78;
      v28 = v67;
LABEL_21:
      sub_1908AA544(v49, &qword_1ECF6A658);
LABEL_4:
      v15 = (char *)v40;
      v32 = v73;
      goto LABEL_5;
    }
    v53 = v75;
    v54 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v62, v50, v31);
    sub_1908AA2F4(&qword_1ECF6A648, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0AE8], MEMORY[0x1E0CB0B08]);
    v60 = sub_190A47AAC();
    v55 = *(void (**)(char *, uint64_t))(v53 + 8);
    v55(v54, v31);
    v56 = (uint64_t)v66;
    sub_1908AA544((uint64_t)v66, &qword_1ECF6A650);
    sub_1908AA544((uint64_t)v65, &qword_1ECF6A650);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v69);
    v57 = v52;
    v15 = (char *)v56;
    v55((char *)v57, v31);
    sub_1908AA544(v49, &qword_1ECF6A650);
    v30 = v72;
    v32 = v73;
    v12 = v78;
    v28 = v67;
    if ((v60 & 1) != 0)
      goto LABEL_23;
LABEL_5:
    v29 += 16;
    --v28;
  }
  while (v28);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1909BAD88()
{
  _BYTE *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ECF6A6A0 != -1)
    swift_once();
  v0 = off_1ECF6A698;
  v1 = *((_QWORD *)off_1ECF6A698 + 2);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  v3 = v0[24];
  if ((_DWORD)v3 == 5)
  {
    v4 = sub_190A46108();
    v3 = sub_1909BA68C(v4);
    swift_bridgeObjectRelease();
    v0[24] = v3;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  return v3;
}

uint64_t sub_1909BAE2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int v4;

  v2 = sub_190A47440();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(a1, v2);
  if (v4 == *MEMORY[0x1E0CDD788])
    return 0;
  if (v4 == *MEMORY[0x1E0CDD7A8])
    return 1;
  if (v4 == *MEMORY[0x1E0CDD7B0])
    return 2;
  if (v4 == *MEMORY[0x1E0CDD7B8])
    return 3;
  if (v4 == *MEMORY[0x1E0CDD7E8])
    return 4;
  if (v4 == *MEMORY[0x1E0CDD790])
    return 5;
  if (v4 == *MEMORY[0x1E0CDD7A0])
    return 6;
  if (v4 == *MEMORY[0x1E0CDD7C0])
    return 7;
  if (v4 == *MEMORY[0x1E0CDD7E0])
    return 8;
  if (v4 == *MEMORY[0x1E0CDD7C8])
    return 9;
  if (v4 == *MEMORY[0x1E0CDD7D0])
    return 10;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return 12;
}

uint64_t sub_1909BAFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1909BB000()
{
  _BYTE *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  if (qword_1ECF6A6A0 != -1)
    swift_once();
  v0 = off_1ECF6A698;
  v1 = *((_QWORD *)off_1ECF6A698 + 2);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  v0[24] = 5;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  return swift_release();
}

_QWORD *sub_1909BB07C()
{
  uint64_t v0;
  _QWORD *result;

  type metadata accessor for WidgetArchiverAssertionTracker();
  v0 = swift_allocObject();
  result = sub_1909BB7DC();
  qword_1EE1FD730 = v0;
  return result;
}

void sub_1909BB0B4(_QWORD *a1)
{
  id v1;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  unsigned int v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD *v31;
  id v32;
  void *v33;
  id v34[2];

  v34[1] = *(id *)MEMORY[0x1E0C80C00];
  if (a1[3])
  {
    v3 = a1[4];
    v4 = __OFADD__(v3, 1);
    v5 = v3 + 1;
    if (!v4)
    {
      a1[4] = v5;
      return;
    }
    __break(1u);
LABEL_15:
    swift_once();
LABEL_6:
    v19 = sub_190A465A0();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ECF6D528);
    v20 = sub_190A46588();
    v21 = sub_190A47F68();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1908A7000, v20, v21, "Acquired runtime assertion for WidgetArchiver.unarchive", v22, 2u);
      MEMORY[0x194014398](v22, -1, -1);

    }
    else
    {

    }
    return;
  }
  v6 = (void *)a1[5];
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6BDD0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_190A4B0F0;
  v8 = (void *)a1[6];
  *(_QWORD *)(v7 + 32) = v8;
  sub_190A47C74();
  v9 = objc_allocWithZone(MEMORY[0x1E0D87C98]);
  v10 = v6;
  v11 = v8;
  v12 = (void *)sub_190A47AC4();
  sub_1908AB890(0, &qword_1ECF68088);
  v13 = (void *)sub_190A47C50();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v9, sel_initWithExplanation_target_attributes_, v12, v10, v13);

  v34[0] = 0;
  v15 = objc_msgSend(v14, sel_acquireWithError_, v34);
  v16 = v34[0];
  if (v15)
  {
    v17 = (void *)a1[3];
    a1[3] = v14;
    v1 = v14;
    v18 = v16;

    a1[4] = 1;
    if (qword_1ECF6AE58 == -1)
      goto LABEL_6;
    goto LABEL_15;
  }
  v23 = v34[0];
  v24 = (void *)sub_190A45F58();

  swift_willThrow();
  if (qword_1ECF6AE58 != -1)
    swift_once();
  v25 = sub_190A465A0();
  __swift_project_value_buffer(v25, (uint64_t)qword_1ECF6D528);
  v26 = v24;
  v27 = v24;
  v28 = sub_190A46588();
  v29 = sub_190A47F50();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v30 = 138543362;
    v32 = v24;
    v33 = (void *)_swift_stdlib_bridgeErrorToNSError();
    v34[0] = v33;
    sub_190A48178();
    *v31 = v33;

    _os_log_impl(&dword_1908A7000, v28, v29, "Unable to acquire runtime assertion for WidgetArchiver.unarchive - error: %{public}@", v30, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
    swift_arrayDestroy();
    MEMORY[0x194014398](v31, -1, -1);
    MEMORY[0x194014398](v30, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_1909BB4B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_190A47980();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v23 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190A479C8();
  v21 = *(_QWORD *)(v6 - 8);
  v22 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_190A479E0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v19 - v14;
  v16 = *(id *)(v1 + 16);
  sub_190A479D4();
  MEMORY[0x194012C1C](v13, 0.1);
  v20 = *(void (**)(char *, uint64_t))(v10 + 8);
  v20(v13, v9);
  aBlock[4] = sub_1909BB7D4;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1908A9D98;
  aBlock[3] = &block_descriptor_5;
  v17 = _Block_copy(aBlock);
  swift_retain();
  sub_190A47998();
  v24 = MEMORY[0x1E0DEE9D8];
  sub_1908AA2F4((unint64_t *)&qword_1ECF6D318, v3, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
  sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
  sub_190A481E4();
  MEMORY[0x194013210](v15, v8, v5, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
  v20(v15, v9);
  return swift_release();
}

void sub_1909BB720(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(a1 + 32);
  if (v2 < 2)
  {
    *(_QWORD *)(a1 + 32) = 0;
    objc_msgSend(*(id *)(a1 + 24), sel_invalidate);
    v3 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = 0;

  }
  else
  {
    *(_QWORD *)(a1 + 32) = v2 - 1;
  }
}

uint64_t sub_1909BB778()
{
  id *v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WidgetArchiverAssertionTracker()
{
  return objc_opt_self();
}

void sub_1909BB7D4()
{
  uint64_t v0;

  sub_1909BB720(v0);
}

_QWORD *sub_1909BB7DC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  _QWORD v16[2];

  v1 = v0;
  v2 = sub_190A47FF8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190A47FE0();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v6);
  v8 = sub_190A479C8();
  MEMORY[0x1E0C80A78](v8);
  v16[0] = sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3A0);
  sub_190A479A4();
  v16[1] = MEMORY[0x1E0DEE9D8];
  sub_1908AA2F4((unint64_t *)&unk_1ECF6D238, v7, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D228);
  sub_1908AAA08(&qword_1ECF6D230, &qword_1ECF6D228);
  sub_190A481E4();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D0], v2);
  v9 = sub_190A4801C();
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v9;
  v10 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  v11 = objc_msgSend(v10, sel_pid);

  v1[5] = objc_msgSend((id)objc_opt_self(), sel_targetWithPid_, v11);
  v12 = (void *)sub_190A47AC4();
  v13 = (void *)sub_190A47AC4();
  v14 = objc_msgSend((id)objc_opt_self(), sel_attributeWithDomain_name_, v12, v13);

  v1[6] = v14;
  return v1;
}

id sub_1909BBA90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  id *v7;
  void (*v9)(char *, uint64_t);
  id v10;
  uint64_t v11;

  v1 = v0;
  v2 = sub_190A47440();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E0CDD788])
  {
    v7 = (id *)MEMORY[0x1E0CA8698];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDD7A8])
  {
    v7 = (id *)MEMORY[0x1E0CA86A0];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDD7B0])
  {
    v7 = (id *)MEMORY[0x1E0CA86A8];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDD7B8])
  {
    v7 = (id *)MEMORY[0x1E0CA86B0];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDD7E8])
  {
    v7 = (id *)MEMORY[0x1E0CA8650];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDD790])
  {
    v7 = (id *)MEMORY[0x1E0CA8688];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDD7A0])
  {
    v7 = (id *)MEMORY[0x1E0CA8620];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDD7C0])
  {
    v7 = (id *)MEMORY[0x1E0CA8628];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDD7E0])
  {
    v7 = (id *)MEMORY[0x1E0CA8640];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDD7C8])
  {
    v7 = (id *)MEMORY[0x1E0CA8630];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDD7D0])
  {
    v7 = (id *)MEMORY[0x1E0CA8638];
    return *v7;
  }
  v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10 = (id)*MEMORY[0x1E0CA8620];
  v9(v5, v2);
  return v10;
}

id sub_1909BBCB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  id *v7;
  void (*v9)(char *, uint64_t);
  id v10;
  uint64_t v11;

  v1 = v0;
  v2 = sub_190A46EAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E0CDB330])
  {
    v7 = (id *)MEMORY[0x1E0CA8228];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDB368])
  {
    v7 = (id *)MEMORY[0x1E0CA8218];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDB370])
  {
    v7 = (id *)MEMORY[0x1E0CA8210];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDB358])
  {
    v7 = (id *)MEMORY[0x1E0CA8208];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDB328])
  {
    v7 = (id *)MEMORY[0x1E0CA8220];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDB338])
  {
    v7 = (id *)MEMORY[0x1E0CA8230];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDB300])
  {
    v7 = (id *)MEMORY[0x1E0CA8238];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDB348])
  {
    v7 = (id *)MEMORY[0x1E0CA81E8];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDB340])
  {
    v7 = (id *)MEMORY[0x1E0CA81E0];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDB350])
  {
    v7 = (id *)MEMORY[0x1E0CA81F0];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDB318])
  {
    v7 = (id *)MEMORY[0x1E0CA81F8];
    return *v7;
  }
  if (v6 == *MEMORY[0x1E0CDB320])
  {
    v7 = (id *)MEMORY[0x1E0CA8200];
    return *v7;
  }
  v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10 = (id)*MEMORY[0x1E0CA8208];
  v9(v5, v2);
  return v10;
}

id sub_1909BBEF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id result;
  void (*v7)(char *, uint64_t);
  id v8;
  uint64_t v9;

  v1 = v0;
  v2 = sub_190A47368();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  result = (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if ((_DWORD)result == *MEMORY[0x1E0CDD548])
  {
    result = (id)*MEMORY[0x1E0CA8430];
    if (*MEMORY[0x1E0CA8430])
      return result;
    __break(1u);
  }
  if ((_DWORD)result == *MEMORY[0x1E0CDD538])
  {
    result = (id)*MEMORY[0x1E0CA8448];
    if (*MEMORY[0x1E0CA8448])
      return result;
    __break(1u);
  }
  if ((_DWORD)result != *MEMORY[0x1E0CDD550])
    goto LABEL_10;
  result = (id)*MEMORY[0x1E0CA8440];
  if (*MEMORY[0x1E0CA8440])
    return result;
  __break(1u);
LABEL_10:
  if ((_DWORD)result == *MEMORY[0x1E0CDD530])
  {
    result = (id)*MEMORY[0x1E0CA8438];
    if (*MEMORY[0x1E0CA8438])
      return result;
    __break(1u);
  }
  else if (*MEMORY[0x1E0CA8430])
  {
    v7 = *(void (**)(char *, uint64_t))(v3 + 8);
    v8 = (id)*MEMORY[0x1E0CA8430];
    v7(v5, v2);
    return v8;
  }
  __break(1u);
  return result;
}

double sub_1909BC058()
{
  uint64_t v0;
  char v1;

  sub_190A473A4();
  if ((sub_190A47380() & 1) != 0)
  {
    v0 = MEMORY[0x1E0CA84A8];
  }
  else
  {
    sub_190A473B0();
    if ((sub_190A47380() & 1) != 0)
    {
      v0 = MEMORY[0x1E0CA84B8];
    }
    else
    {
      sub_190A4738C();
      if ((sub_190A47380() & 1) != 0)
      {
        v0 = MEMORY[0x1E0CA84B0];
      }
      else
      {
        sub_190A473E0();
        if ((sub_190A47380() & 1) != 0)
        {
          v0 = MEMORY[0x1E0CA84D8];
        }
        else
        {
          sub_190A473C8();
          if ((sub_190A47380() & 1) != 0)
          {
            v0 = MEMORY[0x1E0CA84C8];
          }
          else
          {
            sub_190A473D4();
            v1 = sub_190A47380();
            v0 = MEMORY[0x1E0CA84D0];
            if ((v1 & 1) == 0)
            {
              sub_190A473BC();
              if ((sub_190A47380() & 1) != 0)
              {
                v0 = MEMORY[0x1E0CA84C0];
              }
              else
              {
                sub_190A47398();
                if ((sub_190A47380() & 1) != 0)
                {
                  v0 = MEMORY[0x1E0CA84E0];
                }
                else
                {
                  sub_190A47374();
                  if ((sub_190A47380() & 1) != 0)
                    v0 = MEMORY[0x1E0CA84F0];
                }
              }
            }
          }
        }
      }
    }
  }
  return *(double *)v0;
}

uint64_t ContentSizeCategory.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t result;
  int v8;
  uint64_t v9;

  v1 = v0;
  v2 = sub_190A46EAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E0CDB330])
    return 21336;
  v8 = v6;
  if (v6 == *MEMORY[0x1E0CDB368])
    return 83;
  if (v6 == *MEMORY[0x1E0CDB370])
    return 77;
  if (v6 == *MEMORY[0x1E0CDB358])
    return 76;
  if (v6 == *MEMORY[0x1E0CDB328])
    return 19544;
  result = 5003329;
  if (v8 == *MEMORY[0x1E0CDB338])
    return 5003352;
  if (v8 == *MEMORY[0x1E0CDB300])
    return 1280858200;
  if (v8 == *MEMORY[0x1E0CDB348])
    return 19777;
  if (v8 == *MEMORY[0x1E0CDB340])
    return 19521;
  if (v8 != *MEMORY[0x1E0CDB350])
  {
    if (v8 == *MEMORY[0x1E0CDB318])
    {
      return 1280858177;
    }
    else
    {
      if (v8 != *MEMORY[0x1E0CDB320])
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        return 76;
      }
      return 0x4C58585841;
    }
  }
  return result;
}

uint64_t sub_1909BC3AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(char *, uint64_t, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _QWORD *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t AssociatedConformanceWitness;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  char *v87;
  void (*v88)(char *, char *, uint64_t);
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t);
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(char *, char *, uint64_t);
  char *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  char *v139;
  _QWORD *v140;
  _QWORD *v141;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  void (*v171)(char *, char *, uint64_t);
  uint64_t v172;
  void (*v173)(char *, uint64_t, uint64_t);
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD v184[5];
  char v185;
  _BYTE v186[7];

  v173 = a4;
  v180 = a26;
  v181 = a27;
  v174 = a25;
  v175 = a5;
  v178 = a22;
  v179 = a24;
  v176 = a20;
  v177 = a21;
  v182 = a19;
  v159 = a18;
  v158 = a17;
  v156 = a16;
  v155 = a15;
  v151 = a14;
  v149 = a13;
  v148 = a12;
  v147 = a11;
  v183 = a10;
  v168 = *(_QWORD *)(a23 - 8);
  v34 = *(_QWORD *)(v168 + 64);
  v35 = MEMORY[0x1E0C80A78](a1);
  v160 = (char *)&v143 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x1E0C80A78](v35);
  v167 = (char *)&v143 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v166 = (char *)&v143 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v154 = (char *)&v143 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v165 = (char *)&v143 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v146 = (char *)&v143 - v45;
  MEMORY[0x1E0C80A78](v44);
  v164 = (char *)&v143 - v46;
  v47 = sub_190A45F70();
  MEMORY[0x1E0C80A78](v47);
  v48 = *a8;
  *(_BYTE *)(a9 + 176) = 0;
  v161 = a1;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  v169 = a2;
  *(_QWORD *)(a9 + 16) = 0;
  *(_QWORD *)(a9 + 24) = 0;
  *(_QWORD *)(a9 + 32) = a3;
  v49 = a9;
  v50 = v175;
  *(_QWORD *)(a9 + 160) = v173;
  *(_QWORD *)(a9 + 168) = v50;
  if (a7)
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    swift_bridgeObjectRetain_n();
  }
  else
  {
    v52 = swift_getAssociatedConformanceWitness();
    swift_bridgeObjectRetain_n();
    AssociatedConformanceWitness = v52;
    sub_190A45CC4();
    a6 = sub_190A47AF4();
    a7 = v53;
  }
  v157 = (_QWORD *)v49;
  *(_QWORD *)(v49 + 136) = a6;
  *(_QWORD *)(v49 + 144) = a7;
  *(_BYTE *)(v49 + 152) = v48;
  v54 = v182;
  v144 = AssociatedConformanceWitness;
  v153 = sub_190A45CB8();
  v152 = v55;
  v56 = (_QWORD *)swift_allocObject();
  v150 = v56;
  v57 = v54;
  v58 = v176;
  v59 = v177;
  v56[2] = v54;
  v56[3] = v58;
  v60 = v58;
  v61 = v178;
  v56[4] = v59;
  v56[5] = v61;
  v62 = v179;
  v56[6] = a23;
  v56[7] = v62;
  v63 = v174;
  v64 = v180;
  v65 = v181;
  v56[8] = v174;
  v56[9] = v64;
  v56[10] = v65;
  v66 = v168;
  v173 = *(void (**)(char *, uint64_t, uint64_t))(v168 + 16);
  v173(v164, v183, a23);
  v67 = *(unsigned __int8 *)(v66 + 80);
  v68 = (v67 + 88) & ~v67;
  v163 = v68 + v34;
  v175 = v68;
  v172 = v67 | 7;
  v69 = (v68 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v162 = v69 + 16;
  v170 = v69;
  v70 = (_QWORD *)swift_allocObject();
  v70[2] = v57;
  v70[3] = v60;
  v71 = v178;
  v72 = v179;
  v70[4] = v59;
  v70[5] = v71;
  v70[6] = a23;
  v70[7] = v72;
  v73 = v180;
  v70[8] = v63;
  v70[9] = v73;
  v70[10] = v65;
  v74 = (char *)v70 + v68;
  v75 = v70;
  v145 = v70;
  v171 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
  v171(v74, v164, a23);
  v76 = (_QWORD *)((char *)v75 + v69);
  v77 = v148;
  *v76 = v147;
  v76[1] = v77;
  v78 = v146;
  v79 = v183;
  v80 = v173;
  v173(v146, v183, a23);
  v81 = (_QWORD *)swift_allocObject();
  v82 = v176;
  v81[2] = v57;
  v81[3] = v82;
  v81[4] = v177;
  v81[5] = v71;
  v81[6] = a23;
  v81[7] = v72;
  v84 = v174;
  v83 = v175;
  v85 = v180;
  v81[8] = v174;
  v81[9] = v85;
  v81[10] = v181;
  v86 = v81;
  v164 = (char *)v81;
  v87 = v78;
  v88 = v171;
  v171((char *)v81 + v83, v87, a23);
  v89 = (_QWORD *)((char *)v86 + v170);
  v90 = v151;
  *v89 = v149;
  v89[1] = v90;
  v80(v165, v79, a23);
  v91 = (_QWORD *)swift_allocObject();
  v92 = v182;
  v94 = v176;
  v93 = v177;
  v91[2] = v182;
  v91[3] = v94;
  v95 = v178;
  v96 = v179;
  v91[4] = v93;
  v91[5] = v95;
  v91[6] = a23;
  v91[7] = v96;
  v91[8] = v84;
  v91[9] = v85;
  v97 = v175;
  v98 = (char *)v91 + v175;
  v99 = v181;
  v91[10] = v181;
  v151 = v91;
  v88(v98, v165, a23);
  v100 = (_QWORD *)((char *)v91 + v170);
  v101 = v156;
  *v100 = v155;
  v100[1] = v101;
  v102 = v154;
  v173(v154, v183, a23);
  v103 = (char *)swift_allocObject();
  *((_QWORD *)v103 + 2) = v92;
  *((_QWORD *)v103 + 3) = v94;
  *((_QWORD *)v103 + 4) = v93;
  *((_QWORD *)v103 + 5) = v95;
  *((_QWORD *)v103 + 6) = a23;
  *((_QWORD *)v103 + 7) = v96;
  v104 = v174;
  v105 = v180;
  *((_QWORD *)v103 + 8) = v174;
  *((_QWORD *)v103 + 9) = v105;
  *((_QWORD *)v103 + 10) = v99;
  v171(&v103[v97], v102, a23);
  v106 = &v103[v170];
  v107 = v159;
  *(_QWORD *)v106 = v158;
  *((_QWORD *)v106 + 1) = v107;
  v108 = v183;
  v109 = v173;
  v173(v166, v183, a23);
  v110 = (_QWORD *)swift_allocObject();
  v112 = v176;
  v111 = v177;
  v110[2] = v182;
  v110[3] = v112;
  v114 = v178;
  v113 = v179;
  v110[4] = v111;
  v110[5] = v114;
  v110[6] = a23;
  v110[7] = v113;
  v115 = v180;
  v110[8] = v104;
  v110[9] = v115;
  v116 = (char *)v110 + v175;
  v117 = v181;
  v110[10] = v181;
  v171(v116, v166, a23);
  v109(v167, v108, a23);
  v118 = (char *)swift_allocObject();
  *((_QWORD *)v118 + 2) = v182;
  *((_QWORD *)v118 + 3) = v112;
  *((_QWORD *)v118 + 4) = v111;
  *((_QWORD *)v118 + 5) = v114;
  v119 = v179;
  v120 = v180;
  *((_QWORD *)v118 + 6) = a23;
  *((_QWORD *)v118 + 7) = v119;
  v122 = v174;
  v121 = v175;
  *((_QWORD *)v118 + 8) = v174;
  *((_QWORD *)v118 + 9) = v120;
  *((_QWORD *)v118 + 10) = v117;
  v123 = v171;
  v171(&v118[v121], v167, a23);
  v124 = v160;
  v173(v160, v183, a23);
  v125 = (_QWORD *)swift_allocObject();
  v126 = v182;
  v127 = v176;
  v125[2] = v182;
  v125[3] = v127;
  v128 = v178;
  v125[4] = v177;
  v125[5] = v128;
  v129 = v179;
  v125[6] = a23;
  v125[7] = v129;
  v125[8] = v122;
  v125[9] = v120;
  v130 = (char *)v125 + v175;
  v125[10] = v181;
  v123(v130, v124, a23);
  v132 = type metadata accessor for ControlToggle(0, v126, v144, v131);
  v184[3] = &type metadata for ControlToggleTemplateProvider;
  v184[4] = &off_1E2CC8A50;
  v133 = swift_allocObject();
  v184[0] = v133;
  v134 = v161;
  v135 = v169;
  *(_QWORD *)(v133 + 16) = v161;
  *(_QWORD *)(v133 + 24) = v135;
  v136 = v152;
  *(_QWORD *)(v133 + 32) = v153;
  *(_QWORD *)(v133 + 40) = v136;
  *(_BYTE *)(v133 + 48) = 0;
  *(_DWORD *)(v133 + 49) = *(_DWORD *)v186;
  *(_DWORD *)(v133 + 52) = *(_DWORD *)&v186[3];
  v137 = v150;
  *(_QWORD *)(v133 + 56) = sub_1909C188C;
  *(_QWORD *)(v133 + 64) = v137;
  v138 = v145;
  *(_QWORD *)(v133 + 72) = &unk_1EE1EE1B8;
  *(_QWORD *)(v133 + 80) = v138;
  v139 = v164;
  *(_QWORD *)(v133 + 88) = &unk_1EE1EE1C8;
  *(_QWORD *)(v133 + 96) = v139;
  v140 = v151;
  *(_QWORD *)(v133 + 104) = &unk_1EE1EE1D8;
  *(_QWORD *)(v133 + 112) = v140;
  *(_QWORD *)(v133 + 120) = &unk_1EE1EE1E8;
  *(_QWORD *)(v133 + 128) = v103;
  *(_QWORD *)(v133 + 136) = &unk_1EE1EE1F8;
  *(_QWORD *)(v133 + 144) = v110;
  *(_QWORD *)(v133 + 152) = &unk_1EE1EE208;
  *(_QWORD *)(v133 + 160) = v118;
  *(_QWORD *)(v133 + 168) = &unk_1EE1EE218;
  *(_QWORD *)(v133 + 176) = v125;
  (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v183, a23);
  v185 = 0;
  v141 = v157;
  v157[5] = v134;
  v141[6] = v135;
  v141[7] = 0;
  v141[8] = 0;
  v141[9] = v132;
  v141[10] = &off_1E2CC3998;
  return sub_190977CC4((uint64_t)v184, (uint64_t)(v141 + 11));
}

uint64_t sub_1909BCC40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(char *, uint64_t, uint64_t)@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, _QWORD *a12, uint64_t a13, _QWORD *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t AssociatedConformanceWitness;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  char *v67;
  void (*v68)(char *, uint64_t, uint64_t);
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  _QWORD *v75;
  char *v76;
  void (*v77)(char *, char *, uint64_t);
  _QWORD *v78;
  _QWORD *v79;
  char *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t);
  _QWORD *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  void (*v97)(char *, char *, uint64_t);
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(char *, char *, uint64_t);
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  _QWORD *v116;
  _QWORD *v117;
  _QWORD *v118;
  unint64_t v120;
  _QWORD *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  _QWORD *v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(char *, char *, uint64_t);
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(char *, uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD v155[5];
  char v156;

  v146 = a6;
  v147 = a4;
  v151 = a21;
  v148 = a22;
  v149 = a19;
  v150 = a18;
  v152 = a17;
  v153 = a23;
  v136 = a16;
  v135 = a15;
  v132 = a14;
  v131 = a13;
  v127 = a12;
  v126 = a11;
  v154 = a10;
  v144 = *(_QWORD *)(a20 - 8);
  v30 = *(_QWORD *)(v144 + 64);
  v31 = MEMORY[0x1E0C80A78](a1);
  v138 = (char *)&v120 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x1E0C80A78](v31);
  v137 = (char *)&v120 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v134 = (char *)&v120 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v130 = (char *)&v120 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v124 = (char *)&v120 - v39;
  MEMORY[0x1E0C80A78](v38);
  v122 = (char *)&v120 - v40;
  v41 = sub_190A45F70();
  MEMORY[0x1E0C80A78](v41);
  v42 = *a8;
  *(_BYTE *)(a9 + 176) = 0;
  v139 = a1;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = 0;
  *(_QWORD *)(a9 + 24) = 0;
  *(_QWORD *)(a9 + 32) = a3;
  *(_QWORD *)(a9 + 160) = v147;
  *(_QWORD *)(a9 + 168) = a5;
  v140 = a2;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain_n();
  if (a7)
  {
    v44 = (uint64_t)v146;
  }
  else
  {
    sub_190A45CC4();
    v44 = sub_190A47AF4();
    a7 = v45;
  }
  v123 = AssociatedConformanceWitness;
  v133 = (_QWORD *)a9;
  *(_QWORD *)(a9 + 136) = v44;
  *(_QWORD *)(a9 + 144) = a7;
  *(_BYTE *)(a9 + 152) = v42;
  v46 = v152;
  v129 = sub_190A45CB8();
  v128 = v47;
  v48 = (_QWORD *)swift_allocObject();
  v125 = v48;
  v49 = v46;
  v50 = v150;
  v48[2] = v46;
  v48[3] = v50;
  v52 = v148;
  v51 = v149;
  v48[4] = v149;
  v48[5] = a20;
  v53 = v51;
  v48[6] = v151;
  v48[7] = v52;
  v55 = v153;
  v54 = v154;
  v48[8] = v153;
  v56 = v144;
  v146 = *(void (**)(char *, uint64_t, uint64_t))(v144 + 16);
  v57 = v122;
  v146(v122, v54, a20);
  v58 = *(unsigned __int8 *)(v56 + 80);
  v59 = (v58 + 72) & ~v58;
  v147 = v59;
  v145 = v58 | 7;
  v142 = (v59 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v143 = v59 + v30;
  v120 = v142 + 16;
  v60 = (_QWORD *)swift_allocObject();
  v60[2] = v49;
  v61 = v150;
  v62 = v151;
  v60[3] = v150;
  v60[4] = v53;
  v60[5] = a20;
  v60[6] = v62;
  v60[7] = v52;
  v60[8] = v55;
  v63 = v60;
  v121 = v60;
  v141 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
  v141((char *)v60 + v59, v57, a20);
  v64 = v142;
  v65 = (_QWORD *)((char *)v63 + v142);
  v66 = v127;
  *v65 = v126;
  v65[1] = v66;
  v67 = v124;
  v68 = v146;
  v146(v124, v154, a20);
  v69 = (_QWORD *)swift_allocObject();
  v71 = v152;
  v70 = v153;
  v69[2] = v152;
  v69[3] = v61;
  v72 = v149;
  v69[4] = v149;
  v69[5] = a20;
  v69[6] = v62;
  v69[7] = v52;
  v73 = v147;
  v74 = (char *)v69 + v147;
  v69[8] = v70;
  v75 = v69;
  v127 = v69;
  v76 = v67;
  v77 = v141;
  v141(v74, v76, a20);
  v78 = (_QWORD *)((char *)v75 + v64);
  v79 = v132;
  *v78 = v131;
  v78[1] = v79;
  v80 = v130;
  v68(v130, v154, a20);
  v81 = (_QWORD *)swift_allocObject();
  v83 = v150;
  v82 = v151;
  v81[2] = v71;
  v81[3] = v83;
  v81[4] = v72;
  v81[5] = a20;
  v84 = v148;
  v81[6] = v82;
  v81[7] = v84;
  v85 = (char *)v81 + v73;
  v86 = v153;
  v81[8] = v153;
  v87 = v81;
  v132 = v81;
  v77(v85, v80, a20);
  v88 = (_QWORD *)((char *)v87 + v142);
  v89 = v136;
  *v88 = v135;
  v88[1] = v89;
  v90 = v134;
  v91 = v154;
  v92 = v146;
  v146(v134, v154, a20);
  v93 = (_QWORD *)swift_allocObject();
  v93[2] = v152;
  v93[3] = v83;
  v94 = v149;
  v93[4] = v149;
  v93[5] = a20;
  v93[6] = v82;
  v93[7] = v84;
  v95 = (char *)v93 + v147;
  v93[8] = v86;
  v96 = v90;
  v97 = v141;
  v141(v95, v96, a20);
  v98 = v137;
  v92(v137, v91, a20);
  v99 = (char *)swift_allocObject();
  v100 = v152;
  v101 = v150;
  *((_QWORD *)v99 + 2) = v152;
  *((_QWORD *)v99 + 3) = v101;
  *((_QWORD *)v99 + 4) = v94;
  *((_QWORD *)v99 + 5) = a20;
  v103 = v147;
  v102 = v148;
  *((_QWORD *)v99 + 6) = v151;
  *((_QWORD *)v99 + 7) = v102;
  *((_QWORD *)v99 + 8) = v153;
  v97(&v99[v103], v98, a20);
  v104 = v97;
  v105 = v138;
  v146(v138, v154, a20);
  v106 = (char *)swift_allocObject();
  v107 = v150;
  *((_QWORD *)v106 + 2) = v100;
  *((_QWORD *)v106 + 3) = v107;
  *((_QWORD *)v106 + 4) = v149;
  *((_QWORD *)v106 + 5) = a20;
  *((_QWORD *)v106 + 6) = v151;
  *((_QWORD *)v106 + 7) = v102;
  *((_QWORD *)v106 + 8) = v153;
  v104(&v106[v103], v105, a20);
  v109 = type metadata accessor for ControlToggle(0, v100, v123, v108);
  v155[3] = &type metadata for ControlToggleTemplateProvider;
  v155[4] = &off_1E2CC8A50;
  v110 = swift_allocObject();
  v155[0] = v110;
  v111 = v139;
  v112 = v140;
  *(_QWORD *)(v110 + 16) = v139;
  *(_QWORD *)(v110 + 24) = v112;
  v113 = v128;
  *(_QWORD *)(v110 + 32) = v129;
  *(_QWORD *)(v110 + 40) = v113;
  *(_BYTE *)(v110 + 48) = 0;
  v114 = v125;
  *(_QWORD *)(v110 + 56) = sub_1909C1264;
  *(_QWORD *)(v110 + 64) = v114;
  v115 = v121;
  *(_QWORD *)(v110 + 72) = &unk_1EE1EE158;
  *(_QWORD *)(v110 + 80) = v115;
  *(_QWORD *)(v110 + 88) = 0;
  *(_QWORD *)(v110 + 96) = 0;
  v116 = v127;
  *(_QWORD *)(v110 + 104) = &unk_1EE1EE168;
  *(_QWORD *)(v110 + 112) = v116;
  v117 = v132;
  *(_QWORD *)(v110 + 120) = &unk_1EE1EE178;
  *(_QWORD *)(v110 + 128) = v117;
  *(_QWORD *)(v110 + 136) = &unk_1EE1EE188;
  *(_QWORD *)(v110 + 144) = v93;
  *(_QWORD *)(v110 + 152) = &unk_1EE1EE198;
  *(_QWORD *)(v110 + 160) = v99;
  *(_QWORD *)(v110 + 168) = &unk_1EE1EE1A8;
  *(_QWORD *)(v110 + 176) = v106;
  (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v154, a20);
  v156 = 0;
  v118 = v133;
  v133[5] = v111;
  v118[6] = v112;
  v118[7] = 0;
  v118[8] = 0;
  v118[9] = v109;
  v118[10] = &off_1E2CC3998;
  return sub_190977CC4((uint64_t)v155, (uint64_t)(v118 + 11));
}

uint64_t sub_1909BD390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_190A47D7C();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_190A47D70();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_1908B463C(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_190A47D28();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1909BD4BC()
{
  return swift_task_switch();
}

uint64_t sub_1909BD4D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909BD4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1909BD4F8()
{
  uint64_t v0;
  ValueMetadata *AssociatedTypeWitness;
  uint64_t v2;
  _QWORD *v3;
  uint64_t AssociatedConformanceWitness;

  AssociatedTypeWitness = (ValueMetadata *)swift_getAssociatedTypeWitness();
  if (AssociatedTypeWitness == &type metadata for EmptyConfiguration)
  {
    swift_dynamicCast();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = (uint64_t)AssociatedTypeWitness;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v3;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    *v3 = v0;
    v3[1] = sub_1909756E8;
    return sub_190966918(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v2, AssociatedConformanceWitness);
  }
}

uint64_t sub_1909BD5E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190978388();
  swift_getAssociatedConformanceWitness();
  sub_190A45D48();
  v5 = sub_1909EEA28();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5;
}

uint64_t sub_1909BD6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v6[5] = a6;
  v6[6] = v13;
  v6[3] = a4;
  v6[4] = a5;
  v6[2] = a3;
  v6[7] = swift_task_alloc();
  v6[8] = *(_QWORD *)(a5 - 8);
  v9 = swift_task_alloc();
  v6[9] = v9;
  v6[10] = sub_190A47D64();
  v6[11] = sub_190A47D58();
  v12 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v14 + 48) + *(_QWORD *)(v14 + 48));
  v10 = (_QWORD *)swift_task_alloc();
  v6[12] = v10;
  *v10 = v6;
  v10[1] = sub_1909BD7A4;
  return v12(v9, a1);
}

uint64_t sub_1909BD7A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_1909BD82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v7[5] = a7;
  v7[6] = v14;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a3;
  v7[7] = swift_task_alloc();
  v7[8] = *(_QWORD *)(a5 - 8);
  v10 = swift_task_alloc();
  v7[9] = v10;
  v7[10] = sub_190A47D64();
  v7[11] = sub_190A47D58();
  v13 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v15 + 48) + *(_QWORD *)(v15 + 48));
  v11 = (_QWORD *)swift_task_alloc();
  v7[12] = v11;
  *v11 = v7;
  v11[1] = sub_1909BD7A4;
  return v13(v10, a1);
}

uint64_t sub_1909BD920(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v6 + 40) = v13;
  *(_QWORD *)(v6 + 48) = v14;
  *(_QWORD *)(v6 + 24) = a5;
  *(_QWORD *)(v6 + 32) = a6;
  *(_QWORD *)(v6 + 16) = a4;
  *(_BYTE *)(v6 + 112) = a2;
  *(_QWORD *)(v6 + 56) = swift_task_alloc();
  *(_QWORD *)(v6 + 64) = *(_QWORD *)(a6 - 8);
  v9 = swift_task_alloc();
  *(_QWORD *)(v6 + 72) = v9;
  *(_QWORD *)(v6 + 80) = sub_190A47D64();
  *(_QWORD *)(v6 + 88) = sub_190A47D58();
  v12 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v15 + 48) + *(_QWORD *)(v15 + 48));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 96) = v10;
  *v10 = v6;
  v10[1] = sub_1909BDA14;
  return v12(v9, a1);
}

uint64_t sub_1909BDA14()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_1909BDA9C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;

  *(_QWORD *)(v7 + 32) = a6;
  *(_QWORD *)(v7 + 40) = a7;
  *(_BYTE *)(v7 + 96) = a3;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a5;
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(a7 - 8);
  v9 = swift_task_alloc();
  *(_QWORD *)(v7 + 56) = v9;
  *(_QWORD *)(v7 + 64) = sub_190A47D64();
  *(_QWORD *)(v7 + 72) = sub_190A47D58();
  v12 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v13 + 48) + *(_QWORD *)(v13 + 48));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 80) = v10;
  *v10 = v7;
  v10[1] = sub_1909BDB70;
  return v12(v9, a2);
}

uint64_t sub_1909BDB70()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_1909BDBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  v7[4] = a7;
  v7[5] = v14;
  v7[2] = a2;
  v7[3] = a3;
  v7[6] = *(_QWORD *)(a3 - 8);
  v10 = swift_task_alloc();
  v7[7] = v10;
  v7[8] = sub_190A47D64();
  v7[9] = sub_190A47D58();
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v14 + 48) + *(_QWORD *)(v14 + 48));
  v11 = (_QWORD *)swift_task_alloc();
  v7[10] = v11;
  *v11 = v7;
  v11[1] = sub_1909BDCC8;
  return v13(v10, a1, a7);
}

uint64_t sub_1909BDCC8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD);

  v2 = (_QWORD *)*v1;
  v2[11] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_190A47D28();
    return swift_task_switch();
  }
  else
  {
    v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(v2[5] + 24) + *(_QWORD *)(v2[5] + 24));
    v4 = (_QWORD *)swift_task_alloc();
    v2[12] = v4;
    *v4 = v2;
    v4[1] = sub_1909BDD94;
    return v5(v2[7], v2[4], v2[5]);
  }
}

uint64_t sub_1909BDD94(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 112) = a1 & 1;
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_1909BDE3C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  *(_QWORD *)(v8 + 32) = a8;
  *(_QWORD *)(v8 + 40) = v15;
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  *(_BYTE *)(v8 + 96) = a2;
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(a4 - 8);
  v11 = swift_task_alloc();
  *(_QWORD *)(v8 + 56) = v11;
  *(_QWORD *)(v8 + 64) = sub_190A47D64();
  *(_QWORD *)(v8 + 72) = sub_190A47D58();
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v15 + 48) + *(_QWORD *)(v15 + 48));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 80) = v12;
  *v12 = v8;
  v12[1] = sub_1909BDF10;
  return v14(v11, a1, a8);
}

uint64_t sub_1909BDF10()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_1909BDF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  v8[5] = a8;
  v8[6] = v15;
  v8[3] = a3;
  v8[4] = a4;
  v8[2] = a1;
  v8[7] = *(_QWORD *)(a4 - 8);
  v11 = swift_task_alloc();
  v8[8] = v11;
  v8[9] = sub_190A47D64();
  v8[10] = sub_190A47D58();
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v15 + 48) + *(_QWORD *)(v15 + 48));
  v12 = (_QWORD *)swift_task_alloc();
  v8[11] = v12;
  *v12 = v8;
  v12[1] = sub_1909BE06C;
  return v14(v11, a2, a8);
}

uint64_t sub_1909BE06C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD);

  v2 = (_QWORD *)*v1;
  v2[12] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_190A47D28();
    return swift_task_switch();
  }
  else
  {
    v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v2[6] + 40) + *(_QWORD *)(v2[6] + 40));
    v4 = (_QWORD *)swift_task_alloc();
    v2[13] = v4;
    *v4 = v2;
    v4[1] = sub_1909BE138;
    return v5(v2[2], v2[8], v2[5], v2[6]);
  }
}

uint64_t sub_1909BE138()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_1909BE1C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190978388();
  swift_getAssociatedConformanceWitness();
  sub_190A45D48();
  v5 = sub_1909EEA28();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5;
}

uint64_t sub_1909BE294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v8[5] = a6;
  v8[6] = v16;
  v8[3] = a4;
  v8[4] = a5;
  v8[2] = a3;
  v8[7] = swift_task_alloc();
  v8[8] = *(_QWORD *)(a5 - 8);
  v12 = swift_task_alloc();
  v8[9] = v12;
  v8[10] = sub_190A47D64();
  v8[11] = sub_190A47D58();
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v17 + 48) + *(_QWORD *)(v17 + 48));
  v13 = (_QWORD *)swift_task_alloc();
  v8[12] = v13;
  *v13 = v8;
  v13[1] = sub_1909BE388;
  return v15(v12, a1, a8);
}

uint64_t sub_1909BE388()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_1909BE410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(void (**)(uint64_t))(v0 + 16);
  swift_release();
  v4(v1);
  v5 = sub_190A47884();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_1909BE4B0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909BE4FC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v8 + 40) = a8;
  *(_QWORD *)(v8 + 48) = v15;
  *(_QWORD *)(v8 + 24) = a5;
  *(_QWORD *)(v8 + 32) = a6;
  *(_QWORD *)(v8 + 16) = a4;
  *(_BYTE *)(v8 + 112) = a2;
  *(_QWORD *)(v8 + 56) = swift_task_alloc();
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(a6 - 8);
  v11 = swift_task_alloc();
  *(_QWORD *)(v8 + 72) = v11;
  *(_QWORD *)(v8 + 80) = sub_190A47D64();
  *(_QWORD *)(v8 + 88) = sub_190A47D58();
  v14 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v16 + 48) + *(_QWORD *)(v16 + 48));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 96) = v12;
  *v12 = v8;
  v12[1] = sub_1909BE5F0;
  return v14(v11, a1);
}

uint64_t sub_1909BE5F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_1909BE678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(void (**)(uint64_t, uint64_t))(v0 + 16);
  v5 = *(unsigned __int8 *)(v0 + 112);
  swift_release();
  v4(v5, v1);
  v6 = sub_190A47884();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_1909BE728(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;

  *(_QWORD *)(v7 + 32) = a6;
  *(_QWORD *)(v7 + 40) = a7;
  *(_BYTE *)(v7 + 96) = a3;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a5;
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(a7 - 8);
  v9 = swift_task_alloc();
  *(_QWORD *)(v7 + 56) = v9;
  *(_QWORD *)(v7 + 64) = sub_190A47D64();
  *(_QWORD *)(v7 + 72) = sub_190A47D58();
  v12 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v13 + 48) + *(_QWORD *)(v13 + 48));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 80) = v10;
  *v10 = v7;
  v10[1] = sub_1909BE7FC;
  return v12(v9, a2);
}

uint64_t sub_1909BE7FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_1909BE884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v5 = *(_QWORD *)(v0 + 16);
    (*(void (**)(__int128 *__return_ptr, _QWORD, _QWORD))(v0 + 24))(&v15, *(unsigned __int8 *)(v0 + 96), *(_QWORD *)(v0 + 56));
    v6 = v16;
    v7 = v17;
    v13 = v15;
    v14 = v18;
    v12 = v19;
    v1 = v20;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    v8 = v12;
    *(_OWORD *)v5 = v13;
    *(_QWORD *)(v5 + 16) = v6;
    *(_QWORD *)(v5 + 24) = v7;
  }
  else
  {
    v9 = *(_OWORD **)(v0 + 16);
    *v9 = 0u;
    v9[1] = 0u;
    v14 = 0u;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    v8 = 0uLL;
  }
  v10 = *(_QWORD *)(v0 + 16);
  *(_OWORD *)(v10 + 32) = v14;
  *(_OWORD *)(v10 + 48) = v8;
  *(_QWORD *)(v10 + 64) = v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909BE974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v6[4] = a6;
  v6[5] = v13;
  v6[2] = a2;
  v6[3] = a3;
  v6[6] = *(_QWORD *)(a3 - 8);
  v9 = swift_task_alloc();
  v6[7] = v9;
  v6[8] = sub_190A47D64();
  v6[9] = sub_190A47D58();
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v13 + 48) + *(_QWORD *)(v13 + 48));
  v10 = (_QWORD *)swift_task_alloc();
  v6[10] = v10;
  *v10 = v6;
  v10[1] = sub_1909BEA44;
  return v12(v9, a1, a6);
}

uint64_t sub_1909BEA44()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD);

  v2 = (_QWORD *)*v1;
  v2[11] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_190A47D28();
    return swift_task_switch();
  }
  else
  {
    v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(v2[5] + 24) + *(_QWORD *)(v2[5] + 24));
    v4 = (_QWORD *)swift_task_alloc();
    v2[12] = v4;
    *v4 = v2;
    v4[1] = sub_1909BEB10;
    return v5(v2[7], v2[4], v2[5]);
  }
}

uint64_t sub_1909BEB10(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 112) = a1 & 1;
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_1909BEBB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 24);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 112));
}

uint64_t sub_1909BEC18()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1909BEC58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 24);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1909BECB8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  *(_QWORD *)(v7 + 32) = a7;
  *(_QWORD *)(v7 + 40) = v14;
  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  *(_BYTE *)(v7 + 96) = a2;
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(a4 - 8);
  v10 = swift_task_alloc();
  *(_QWORD *)(v7 + 56) = v10;
  *(_QWORD *)(v7 + 64) = sub_190A47D64();
  *(_QWORD *)(v7 + 72) = sub_190A47D58();
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v14 + 48) + *(_QWORD *)(v14 + 48));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 80) = v11;
  *v11 = v7;
  v11[1] = sub_1909BED8C;
  return v13(v10, a1, a7);
}

uint64_t sub_1909BED8C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_1909BEE14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(unsigned __int8 *)(v0 + 96);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v6, v4, v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v5);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909BEEA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  v7[5] = a7;
  v7[6] = v14;
  v7[3] = a3;
  v7[4] = a4;
  v7[2] = a1;
  v7[7] = *(_QWORD *)(a4 - 8);
  v10 = swift_task_alloc();
  v7[8] = v10;
  v7[9] = sub_190A47D64();
  v7[10] = sub_190A47D58();
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v14 + 48) + *(_QWORD *)(v14 + 48));
  v11 = (_QWORD *)swift_task_alloc();
  v7[11] = v11;
  *v11 = v7;
  v11[1] = sub_1909BEF74;
  return v13(v10, a2, a7);
}

uint64_t sub_1909BEF74()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD);

  v2 = (_QWORD *)*v1;
  v2[12] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_190A47D28();
    return swift_task_switch();
  }
  else
  {
    v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v2[6] + 40) + *(_QWORD *)(v2[6] + 40));
    v4 = (_QWORD *)swift_task_alloc();
    v2[13] = v4;
    *v4 = v2;
    v4[1] = sub_1909BF040;
    return v5(v2[2], v2[8], v2[5], v2[6]);
  }
}

uint64_t sub_1909BF040()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_1909BF0C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 32);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909BF124()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909BF160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 32);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ControlToggle.init<A, B, C, D>(kind:intent:displayName:preferredSize:stateProvider:title:subtitle:value:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, char *a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, __int128 a9, __int128 a10, __int128 a11, uint64_t a12, uint64_t a13, __int128 a14, uint64_t a15, uint64_t a16, __int128 a17, uint64_t a18, uint64_t a19)
{
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48[9];

  v45 = a7;
  v46 = a3;
  v47 = a4;
  v43 = a1;
  v44 = a2;
  v42 = a8;
  v40 = a10;
  v41 = a9;
  v38 = a14;
  v39 = a11;
  v36 = a17;
  v37 = a12;
  v34 = a18;
  v35 = a15;
  v21 = *(_QWORD *)(a16 - 8);
  MEMORY[0x1E0C80A78](a1);
  v23 = (char *)&v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for ToggleStateProviderBox(0, a16, a19, v24);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v34 - v26;
  v28 = *a5;
  swift_getAssociatedConformanceWitness();
  v29 = (void (*)(char *, uint64_t, uint64_t))sub_190A45CB8();
  v31 = v30;
  v48[0] = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, a6, a16);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v27, v23, a16);
  v32 = MEMORY[0x19401429C](&unk_190A576A8, v25);
  sub_1909BC3AC(v43, v44, a13, v29, v31, v46, v47, v48, v42, (uint64_t)v27, v45, v41, *((uint64_t *)&v41 + 1), (_QWORD *)v40, *((uint64_t *)&v40 + 1), v39, *((uint64_t *)&v39 + 1), v37, a13,
    v38,
    *((uint64_t *)&v38 + 1),
    v35,
    v25,
    v36,
    *((uint64_t *)&v36 + 1),
    v34,
    v32);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(a6, a16);
}

uint64_t type metadata accessor for ToggleStateProviderBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ToggleStateProviderBox);
}

uint64_t ControlToggle.init<A, B, C>(kind:intent:displayName:preferredSize:stateProvider:title:value:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, uint64_t, uint64_t)@<X3>, uint64_t a4@<X4>, char *a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, __int128 a9, __int128 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  char v47[9];

  v44 = a7;
  v45 = a3;
  v46 = a4;
  v42 = a1;
  v43 = a2;
  v41 = a8;
  v39 = a10;
  v40 = a9;
  v36 = a14;
  v37 = a13;
  v38 = a11;
  v34 = a17;
  v35 = a16;
  v20 = *(_QWORD *)(a15 - 8);
  MEMORY[0x1E0C80A78](a1);
  v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for ToggleStateProviderBox(0, a15, a18, v23);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v33 - v25;
  v27 = *a5;
  swift_getAssociatedConformanceWitness();
  v28 = sub_190A45CB8();
  v30 = v29;
  v47[0] = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, a6, a15);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v26, v22, a15);
  v31 = MEMORY[0x19401429C](&unk_190A576A8, v24);
  sub_1909BCC40(v42, v43, a12, v28, v30, v45, v46, v47, v41, (uint64_t)v26, v44, (_QWORD *)v40, *((uint64_t *)&v40 + 1), (_QWORD *)v39, *((uint64_t *)&v39 + 1), v38, a12, v37, v36,
    v24,
    v35,
    v34,
    v31);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(a6, a15);
}

uint64_t ControlToggle.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D300);
  v0 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WidgetDescriptor(0) - 8) + 80);
  v1 = (v0 + 32) & ~v0;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_190A4A350;
  sub_190974064(v2 + v1);
  sub_19090D084();
  sub_190A46F00();
  return swift_bridgeObjectRelease();
}

uint64_t ControlToggle.init<A, B, C>(kind:intent:stateProvider:content:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, _QWORD *a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char v45[9];

  v43 = a6;
  v44 = a7;
  v38 = a4;
  v39 = a5;
  v41 = a1;
  v42 = a2;
  v40 = a8;
  v37 = a14;
  v33 = a10;
  v34 = a3;
  v16 = *(_QWORD *)(a12 - 8);
  MEMORY[0x1E0C80A78](a1);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ToggleStateProviderBox(0, a12, a15, v19);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v31 - v21;
  swift_getAssociatedConformanceWitness();
  v23 = sub_190A45CB8();
  v35 = v24;
  v36 = v23;
  v32 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a3, a12);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v22, v18, a12);
  v25 = (_QWORD *)swift_allocObject();
  v26 = v33;
  v25[2] = a9;
  v25[3] = v26;
  v25[4] = a11;
  v25[5] = a12;
  v28 = v37;
  v27 = v38;
  v25[6] = a13;
  v25[7] = v28;
  v25[8] = a15;
  v25[9] = v27;
  v25[10] = v39;
  v29 = MEMORY[0x19401429C](&unk_190A576A8, v20);
  sub_1909079B8(v45);
  sub_1909BCC40(v41, v42, a9, v36, v35, 0, 0, v45, v40, (uint64_t)v22, (uint64_t)sub_1909BF960, v25, v43, v44, 0, 0, a9, v26, a11,
    v20,
    a13,
    v28,
    v29);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v34, a12);
}

uint64_t sub_1909BF858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(uint64_t);
  void (*v12)(char *, uint64_t);
  uint64_t v14;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v14 - v9;
  v11(1);
  sub_1909DA920((uint64_t)v8, a2, (uint64_t)v10);
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, a2);
  sub_1909D989C((uint64_t)v10, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, a2);
}

uint64_t sub_1909BF93C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909BF960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1909BF858(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t ControlToggle.disabled(_:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  _QWORD v14[5];
  char v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[40];
  _BYTE v29[40];

  v4 = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, v4, a2);
  sub_1908CD8F8(v4 + 88, (uint64_t)&v16);
  if (v19 == 1)
    return sub_19094F59C((uint64_t)&v16);
  sub_1908B4BBC(&v16, (uint64_t)v29);
  sub_1908BBDC8((uint64_t)v29, (uint64_t)v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA430);
  if ((swift_dynamicCast() & 1) == 0)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  v13 = v16;
  v8 = v17;
  v9 = v18;
  v10 = v21;
  v11 = v22;
  v14[3] = &type metadata for ControlToggleTemplateProvider;
  v14[4] = &off_1E2CC8A50;
  v12 = swift_allocObject();
  v14[0] = v12;
  *(_OWORD *)(v12 + 16) = v13;
  *(_QWORD *)(v12 + 32) = v8;
  *(_QWORD *)(v12 + 40) = v9;
  *(_BYTE *)(v12 + 48) = a1 & 1;
  *(_OWORD *)(v12 + 56) = v19;
  *(_OWORD *)(v12 + 72) = v20;
  *(_QWORD *)(v12 + 88) = v10;
  *(_QWORD *)(v12 + 96) = v11;
  *(_OWORD *)(v12 + 104) = v23;
  *(_OWORD *)(v12 + 120) = v24;
  *(_OWORD *)(v12 + 136) = v25;
  *(_OWORD *)(v12 + 152) = v26;
  *(_OWORD *)(v12 + 168) = v27;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  v15 = 0;
  return sub_190974614((uint64_t)v14, a3 + 88);
}

uint64_t sub_1909BFB0C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 88))
    swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909BFB80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for ControlToggle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ControlToggle);
}

uint64_t sub_1909BFBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_1909BFBC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 40) + *(_QWORD *)(a4 + 40));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1908CEB54;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ToggleStateProvider.getState(appIntent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_190930C98;
  return v9(a1, a2, a3);
}

uint64_t sub_1909BFCC8()
{
  sub_19090D084();
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for ControlToggleTemplateProvider(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(_QWORD *)(a1 + 72))
    swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ControlToggleTemplateProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = v6;
  v8 = (_OWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v7)
  {
    v9 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v7;
    *(_QWORD *)(a1 + 80) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *v8;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v10;
  v11 = *(_QWORD *)(a2 + 160);
  v12 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v12;
  *(_QWORD *)(a1 + 160) = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ControlToggleTemplateProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 72);
  if (!*(_QWORD *)(a1 + 72))
  {
    if (v6)
    {
      v8 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v6;
      *(_QWORD *)(a1 + 80) = v8;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = v7;
  swift_retain();
  swift_release();
LABEL_8:
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_retain();
  swift_release();
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  swift_retain();
  swift_release();
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  swift_retain();
  swift_release();
  v12 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v12;
  swift_retain();
  swift_release();
  v13 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v13;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for ControlToggleTemplateProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  v6 = *(_QWORD *)(a2 + 72);
  if (!*(_QWORD *)(a1 + 72))
  {
    if (v6)
    {
      v8 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v6;
      *(_QWORD *)(a1 + 80) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = v7;
  swift_release();
LABEL_8:
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_release();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_release();
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlToggleTemplateProvider(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 168))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlToggleTemplateProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 168) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlToggleTemplateProvider()
{
  return &type metadata for ControlToggleTemplateProvider;
}

uint64_t sub_1909C0220(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1909C02D0 + 4 * byte_190A57550[(v7 - 1)]))();
}

void sub_1909C0320(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1909C04D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);

  v5 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v4 + 24) + *(_QWORD *)(v4 + 24));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_19094B3C4;
  return v8(a1, v5, v4);
}

uint64_t sub_1909C0544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v5 + 104) = a5;
  *(_QWORD *)(v5 + 16) = a4;
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v5 + 24) = AssociatedConformanceWitness;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(AssociatedConformanceWitness + 8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v7 = sub_190A48148();
  *(_QWORD *)(v5 + 40) = v7;
  *(_QWORD *)(v5 + 48) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 56) = swift_task_alloc();
  v8 = swift_checkMetadataState();
  *(_QWORD *)(v5 + 64) = v8;
  *(_QWORD *)(v5 + 72) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 80) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1909C069C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_BYTE *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 24);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 + 72) + 16))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 16), v1);
  (*(void (**)(BOOL, uint64_t, uint64_t))(v3 + 24))((v2 & 1) == 0, v1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v4;
  *v4 = v0;
  v4[1] = sub_1909C0738;
  return sub_190A45D0C();
}

uint64_t sub_1909C0738()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    (*(void (**)(_QWORD, _QWORD))(v2[6] + 8))(v2[7], v2[5]);
  return swift_task_switch();
}

uint64_t sub_1909C07AC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C07FC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C084C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1909C201C;
  v8 = a2 + 16;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v8 + 8);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v7 + 24) + *(_QWORD *)(v7 + 24));
  v9 = (_QWORD *)swift_task_alloc();
  v5[2] = v9;
  *v9 = v5;
  v9[1] = sub_19094B3C4;
  return v11(a1, v6, v7);
}

uint64_t sub_1909C08E8(uint64_t a1, char a2, uint64_t a3)
{
  return sub_1909C0DC4(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1909C08F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1908C5090;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1909C0954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1908CEB54;
  v9[4] = a3;
  v9[5] = a4;
  v9[2] = a1;
  v9[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1909C09CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  *(_QWORD *)(v4 + 552) = a3;
  *(_QWORD *)(v4 + 544) = a2;
  *(_QWORD *)(v4 + 536) = a1;
  v5 = *(_OWORD *)(v3 + 144);
  *(_OWORD *)(v4 + 496) = *(_OWORD *)(v3 + 128);
  *(_OWORD *)(v4 + 512) = v5;
  *(_QWORD *)(v4 + 528) = *(_QWORD *)(v3 + 160);
  v6 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(v4 + 432) = *(_OWORD *)(v3 + 64);
  *(_OWORD *)(v4 + 448) = v6;
  v7 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(v4 + 464) = *(_OWORD *)(v3 + 96);
  *(_OWORD *)(v4 + 480) = v7;
  v8 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v4 + 368) = *(_OWORD *)v3;
  *(_OWORD *)(v4 + 384) = v8;
  v9 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(v4 + 400) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v4 + 416) = v9;
  sub_190A47D64();
  *(_QWORD *)(v4 + 560) = sub_190A47D58();
  *(_QWORD *)(v4 + 568) = sub_190A47D28();
  *(_QWORD *)(v4 + 576) = v10;
  return swift_task_switch();
}

uint64_t sub_1909C0A74()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t *boxed_opaque_existential_1;
  id v15;
  _QWORD *v16;

  v1 = *(void **)(v0 + 552);
  v2 = *(uint64_t **)(v0 + 536);
  v3 = *(_OWORD *)(v0 + 512);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 496);
  *(_OWORD *)(v0 + 160) = v3;
  v4 = *(_QWORD *)(v0 + 528);
  v5 = *(_OWORD *)(v0 + 448);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v0 + 96) = v5;
  v6 = *(_OWORD *)(v0 + 480);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v0 + 128) = v6;
  v7 = *(_OWORD *)(v0 + 384);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 368);
  *(_OWORD *)(v0 + 32) = v7;
  v8 = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 400);
  *(_OWORD *)(v0 + 64) = v8;
  *(_QWORD *)(v0 + 176) = v4;
  *(_QWORD *)(v0 + 184) = v1;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 336) = v9;
  v10 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 256) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 272) = v10;
  v11 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 304) = v11;
  v12 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 208) = v12;
  v13 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 240) = v13;
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 176);
  v2[3] = type metadata accessor for ControlTemplateToggle(0);
  v2[4] = sub_1909C1080();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v2);
  sub_1909C10C8(v0 + 368);
  v15 = v1;
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 584) = v16;
  *v16 = v0;
  v16[1] = sub_1909C0B6C;
  return sub_19096324C((uint64_t)boxed_opaque_existential_1, *(_QWORD *)(v0 + 544));
}

uint64_t sub_1909C0B6C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 592) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1909C0BD0()
{
  uint64_t v0;

  sub_1909C118C(v0 + 16);
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C0C10()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 536);
  sub_1909C118C(v0 + 16);
  swift_release();
  __swift_deallocate_boxed_opaque_existential_1(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C0C5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(v1 + 120) + *(_QWORD *)(v1 + 120));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1909C0CBC;
  return v6(a1);
}

uint64_t sub_1909C0CBC(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v4 + 8))();
  else
    return (*(uint64_t (**)(_QWORD))(v4 + 8))(a1 & 1);
}

uint64_t sub_1909C0D24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BOOL8 v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, _BOOL8);

  v5 = a1 > 0;
  v8 = (uint64_t (*)(uint64_t, _BOOL8))(**(int **)(v2 + 136) + *(_QWORD *)(v2 + 136));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1908CEB54;
  return v8(a2, v5);
}

uint64_t sub_1909C0D94()
{
  return *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
}

uint64_t sub_1909C0DC4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)&v20 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_190A47D7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, AssociatedTypeWitness);
  v17 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = 0;
  *((_QWORD *)v18 + 3) = 0;
  *((_QWORD *)v18 + 4) = a3;
  *((_QWORD *)v18 + 5) = a4;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v18[v17], v12, AssociatedTypeWitness);
  v18[v17 + v10] = a2;
  sub_1909BD390((uint64_t)v15, (uint64_t)&unk_1EE1EE140, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_1909C0F2C()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1909C0FB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_BYTE *)(v1 + v5 + *(_QWORD *)(v4 + 64));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1908CEB54;
  return sub_1909C0544(a1, v6, v7, v8, v9);
}

unint64_t sub_1909C1080()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EB180;
  if (!qword_1EE1EB180)
  {
    v1 = type metadata accessor for ControlTemplateToggle(255);
    result = MEMORY[0x19401429C]("Um'R", v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EB180);
  }
  return result;
}

uint64_t sub_1909C10C8(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1908B4C4C(v2);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1909C118C(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(void **)(a1 + 168);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1908B467C(v2);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1909C1254()
{
  return swift_deallocObject();
}

uint64_t sub_1909C1264()
{
  uint64_t v0;

  return sub_1909BE1C0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1909C127C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (uint64_t)v1 + v9;
  v11 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_190930784;
  return sub_1909BE294(a1, v10, v12, v13, v4, v5, v6, v7);
}

uint64_t objectdestroy_35Tm_0()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 40) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 40) - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 40) - 8) + 80)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909C13C4(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v6 = v2[3];
  v16 = v2[2];
  v7 = v2[4];
  v8 = *(_QWORD *)(v2[5] - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (uint64_t)v2 + v9;
  v11 = (_QWORD *)((char *)v2 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v14;
  *v14 = v3;
  v14[1] = sub_190930C98;
  return sub_1909BE4FC(a1, a2, v10, v12, v13, v16, v6, v7);
}

uint64_t sub_1909C14A4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 40) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  if (*(_QWORD *)(v0 + v3))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909C1514(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v15 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)(v3 + 40) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v3 + v8;
  v10 = (uint64_t *)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v13;
  *v13 = v4;
  v13[1] = sub_1908CEB54;
  return sub_1909BE728(a1, a2, a3, v9, v11, v12, v15);
}

uint64_t sub_1909C1600(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  v9 = (uint64_t)v1 + ((v8 + 72) & ~v8);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_190930784;
  return sub_1909BE974(a1, v9, v4, v5, v6, v7);
}

uint64_t sub_1909C16B4(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v5 = v2[2];
  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (uint64_t)v2 + ((v9 + 72) & ~v9);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v11;
  *v11 = v3;
  v11[1] = sub_1908CEB54;
  return sub_1909BECB8(a1, a2, v10, v5, v6, v7, v8);
}

uint64_t objectdestroy_47Tm()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 40) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 40) - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 40) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1909C17C4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v5 = v2[2];
  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (uint64_t)v2 + ((v9 + 72) & ~v9);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v11;
  *v11 = v3;
  v11[1] = sub_1908C5090;
  return sub_1909BEEA0(a1, a2, v10, v5, v6, v7, v8);
}

uint64_t sub_1909C187C()
{
  return swift_deallocObject();
}

uint64_t sub_1909C188C()
{
  uint64_t v0;

  return sub_1909BD5E0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1909C18C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;

  v13 = v1[2];
  v12 = v1[3];
  v4 = *(_QWORD *)(v1[6] - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (uint64_t)v1 + v5;
  v7 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v8 = *v7;
  v9 = v7[1];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_190930C98;
  return sub_1909BD6B4(a1, v6, v8, v9, v13, v12);
}

uint64_t sub_1909C19AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;

  v14 = v1[2];
  v4 = v1[4];
  v13 = v1[3];
  v5 = *(_QWORD *)(v1[6] - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (uint64_t)v1 + v6;
  v8 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  v9 = *v8;
  v10 = v8[1];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_190930C98;
  return sub_1909BD82C(a1, v7, v9, v10, v14, v13, v4);
}

uint64_t objectdestroy_77Tm()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 48) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 48) - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 48) - 8) + 80)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909C1B04(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v14 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)(v2 + 48) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v2 + v7;
  v9 = (uint64_t *)(v2 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_190930C98;
  return sub_1909BD920(a1, a2, v8, v10, v11, v14);
}

uint64_t sub_1909C1BEC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  if (*(_QWORD *)(v0 + v3))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909C1C5C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v15;

  v15 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 48) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v3 + v7;
  v9 = (uint64_t *)(v3 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v12;
  *v12 = v4;
  v12[1] = sub_1908CEB54;
  return sub_1909BDA9C(a1, a2, a3, v8, v10, v11, v15);
}

uint64_t sub_1909C1D4C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (uint64_t)v1 + ((v9 + 88) & ~v9);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_190930C98;
  return sub_1909BDBF8(a1, v10, v4, v5, v6, v7, v8);
}

uint64_t sub_1909C1E10(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v5 = v2[2];
  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v9 = v2[6];
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80);
  v11 = (uint64_t)v2 + ((v10 + 88) & ~v10);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_1908CEB54;
  return sub_1909BDE3C(a1, a2, v11, v5, v6, v7, v8, v9);
}

uint64_t objectdestroy_93Tm()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 48) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 48) - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 48) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1909C1F30(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v5 = v2[2];
  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v9 = v2[6];
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80);
  v11 = (uint64_t)v2 + ((v10 + 88) & ~v10);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_1908CEB54;
  return sub_1909BDF98(a1, a2, v11, v5, v6, v7, v8, v9);
}

__n128 ControlPicker.init<A, B, C, D, E, F, G>(kind:displayName:preferredSize:intentUpdatableProperty:title:value:affordances:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __n128 result;
  uint64_t v36;
  _QWORD v43[8];
  char v44;
  _OWORD v45[12];

  v22 = *a5;
  v23 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a6 + 8);
  v36 = sub_190A45DB4();
  v25 = v24;
  v44 = v22;
  sub_1909C2218(a6, a16, a17, a18, v43);
  if (a12)
    v27 = a13;
  else
    v27 = 0;
  v28 = type metadata accessor for KeyPathPickerBox(0, *(_QWORD *)(*MEMORY[0x1E0C91A88] + *(_QWORD *)(*MEMORY[0x1E0C91B88] + v23 + 8) + 8), a17, v26);
  v29 = sub_19094888C();
  v30 = MEMORY[0x19401429C](&unk_190A57720, v28);
  sub_1909731C4(a1, a2, (uint64_t)&type metadata for EmptyConfiguration, v36, v25, a3, a4, &v44, (uint64_t)v45, (uint64_t)v43, a7, a8, a10, a11, a12, v27, (uint64_t)&type metadata for EmptyConfiguration, a14, a15,
    v28,
    v29,
    a19,
    a20,
    v30);
  v31 = v45[9];
  *(_OWORD *)(a9 + 128) = v45[8];
  *(_OWORD *)(a9 + 144) = v31;
  *(_OWORD *)(a9 + 160) = v45[10];
  v32 = v45[5];
  *(_OWORD *)(a9 + 64) = v45[4];
  *(_OWORD *)(a9 + 80) = v32;
  v33 = v45[7];
  *(_OWORD *)(a9 + 96) = v45[6];
  *(_OWORD *)(a9 + 112) = v33;
  v34 = v45[1];
  *(_OWORD *)a9 = v45[0];
  *(_OWORD *)(a9 + 16) = v34;
  result = (__n128)v45[3];
  *(_OWORD *)(a9 + 32) = v45[2];
  *(__n128 *)(a9 + 48) = result;
  *(_BYTE *)(a9 + 176) = 1;
  return result;
}

uint64_t sub_1909C2218@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v10 = *a1;
  v11 = (_QWORD *)swift_allocObject();
  v12 = (uint64_t *)(v10 + *MEMORY[0x1E0DEE2A8]);
  v13 = v12[1];
  v14 = (_QWORD *)(*MEMORY[0x1E0C91B88] + v13);
  v15 = v14[1];
  v16 = *(_QWORD *)(*MEMORY[0x1E0C91A88] + v15 + 8);
  v11[2] = v16;
  v23 = *v12;
  v24 = v16;
  v11[3] = *v12;
  v22 = v14[2];
  v11[4] = v22;
  v11[5] = v15;
  v11[6] = v13;
  v11[7] = a2;
  v11[8] = a3;
  v11[9] = a4;
  v21 = v14[5];
  v11[10] = v21;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a3;
  v17[4] = a4;
  v17[5] = a1;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a2;
  v18[3] = a3;
  v18[4] = a4;
  v18[5] = a1;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v24;
  v19[3] = v23;
  v19[4] = v22;
  v19[5] = v15;
  v19[6] = v13;
  v19[7] = a2;
  v19[8] = a3;
  v19[9] = a4;
  v19[10] = v21;
  *a5 = &unk_1EE1EE2D8;
  a5[1] = v11;
  a5[2] = &unk_1EE1EE2E8;
  a5[3] = v17;
  a5[4] = &unk_1EE1EE2F8;
  a5[5] = v18;
  a5[6] = &unk_1EE1EE308;
  a5[7] = v19;
  return swift_retain();
}

uint64_t type metadata accessor for KeyPathPickerBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for KeyPathPickerBox);
}

__n128 ControlPicker.init<A, B, C, D, E, F, G, H>(kind:displayName:preferredSize:intentUpdatableProperty:title:subtitle:value:affordances:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  char v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __n128 result;
  uint64_t v40;
  _QWORD v47[8];
  char v48;
  _OWORD v49[12];

  v26 = *a5;
  v27 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a6 + 8);
  v40 = sub_190A45DB4();
  v29 = v28;
  v48 = v26;
  sub_1909C2218(a6, a19, a20, a21, v47);
  if (a14)
    v31 = a15;
  else
    v31 = 0;
  v32 = type metadata accessor for KeyPathPickerBox(0, *(_QWORD *)(*MEMORY[0x1E0C91A88] + *(_QWORD *)(*MEMORY[0x1E0C91B88] + v27 + 8) + 8), a20, v30);
  v33 = sub_19094888C();
  v34 = MEMORY[0x19401429C](&unk_190A57720, v32);
  sub_1909728E8(a1, a2, (uint64_t)&type metadata for EmptyConfiguration, v40, v29, a3, a4, &v48, (uint64_t)v49, (uint64_t)v47, a7, a8, a10, a11, a12, a13, a14, v31, (uint64_t)&type metadata for EmptyConfiguration,
    a16,
    a17,
    a18,
    v32,
    v33,
    a22,
    a23,
    a24,
    v34);
  v35 = v49[9];
  *(_OWORD *)(a9 + 128) = v49[8];
  *(_OWORD *)(a9 + 144) = v35;
  *(_OWORD *)(a9 + 160) = v49[10];
  v36 = v49[5];
  *(_OWORD *)(a9 + 64) = v49[4];
  *(_OWORD *)(a9 + 80) = v36;
  v37 = v49[7];
  *(_OWORD *)(a9 + 96) = v49[6];
  *(_OWORD *)(a9 + 112) = v37;
  v38 = v49[1];
  *(_OWORD *)a9 = v49[0];
  *(_OWORD *)(a9 + 16) = v38;
  result = (__n128)v49[3];
  *(_OWORD *)(a9 + 32) = v49[2];
  *(__n128 *)(a9 + 48) = result;
  *(_BYTE *)(a9 + 176) = 1;
  return result;
}

uint64_t ControlPicker.init<A, B, C, D, E, F, G>(kind:displayName:preferredSize:intentUpdatableProperty:title:value:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  _QWORD v39[8];
  char v40[9];

  v21 = *a5;
  v22 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a6 + 8);
  v23 = (_QWORD *)MEMORY[0x1E0C91B88];
  v31 = sub_190A45DB4();
  v25 = v24;
  v40[0] = v21;
  sub_1909C2760(a6, a16, a17, v39);
  if (!a12)
    a13 = 0;
  v27 = type metadata accessor for KeyPathPickerBox(0, *(_QWORD *)(*MEMORY[0x1E0C91A88] + *(_QWORD *)(*v23 + v22 + 8) + 8), *(_QWORD *)(a16 + 24), v26);
  v28 = sub_19094888C();
  v29 = MEMORY[0x19401429C](&unk_190A57720, v27);
  return sub_1909731C4(a1, a2, (uint64_t)&type metadata for EmptyConfiguration, v31, v25, a3, a4, v40, a9, (uint64_t)v39, a7, a8, a10, a11, a12, a13, (uint64_t)&type metadata for EmptyConfiguration, a14, a15,
           v27,
           v28,
           a18,
           a19,
           v29);
}

uint64_t sub_1909C2760@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v8 = *a1;
  v9 = (_QWORD *)swift_allocObject();
  v10 = (uint64_t *)(v8 + *MEMORY[0x1E0DEE2A8]);
  v11 = v10[1];
  v12 = (_QWORD *)(*MEMORY[0x1E0C91B88] + v11);
  v13 = v12[1];
  v14 = *(_QWORD *)(*MEMORY[0x1E0C91A88] + v13 + 8);
  v9[2] = v14;
  v21 = *v10;
  v22 = v14;
  v9[3] = *v10;
  v20 = v12[2];
  v9[4] = v20;
  v9[5] = v13;
  v9[6] = v11;
  v9[7] = a2;
  v9[8] = a3;
  v15 = v12[5];
  v9[9] = v15;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a2;
  v16[3] = a3;
  v16[4] = a1;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a3;
  v17[4] = a1;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v22;
  v18[3] = v21;
  v18[4] = v20;
  v18[5] = v13;
  v18[6] = v11;
  v18[7] = a2;
  v18[8] = a3;
  v18[9] = v15;
  *a4 = &unk_1EE1EE298;
  a4[1] = v9;
  a4[2] = &unk_1EE1EE2A8;
  a4[3] = v16;
  a4[4] = &unk_1EE1EE2B8;
  a4[5] = v17;
  a4[6] = &unk_1EE1EE2C8;
  a4[7] = v18;
  return swift_retain();
}

uint64_t ControlPicker.init<A, B, C, D, E, F, G, H>(kind:displayName:preferredSize:intentUpdatableProperty:title:subtitle:value:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  char v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;
  _QWORD v43[8];
  char v44[9];

  v25 = *a5;
  v26 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a6 + 8);
  v27 = (_QWORD *)MEMORY[0x1E0C91B88];
  v35 = sub_190A45DB4();
  v29 = v28;
  v44[0] = v25;
  sub_1909C2760(a6, a19, a20, v43);
  if (!a14)
    a15 = 0;
  v31 = type metadata accessor for KeyPathPickerBox(0, *(_QWORD *)(*MEMORY[0x1E0C91A88] + *(_QWORD *)(*v27 + v26 + 8) + 8), *(_QWORD *)(a19 + 24), v30);
  v32 = sub_19094888C();
  v33 = MEMORY[0x19401429C](&unk_190A57720, v31);
  return sub_1909728E8(a1, a2, (uint64_t)&type metadata for EmptyConfiguration, v35, v29, a3, a4, v44, a9, (uint64_t)v43, a7, a8, a10, a11, a12, a13, a14, a15, (uint64_t)&type metadata for EmptyConfiguration,
           a16,
           a17,
           a18,
           v31,
           v32,
           a21,
           a22,
           a23,
           v33);
}

uint64_t ControlPicker.init<A, B, C, D, E, F, G>(kind:displayName:preferredSize:intentUpdatableProperty:title:value:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  _QWORD v40[8];
  char v41[9];

  v21 = *a5;
  v22 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a6 + 8);
  v23 = (_QWORD *)MEMORY[0x1E0C91B88];
  v32 = sub_190A45DB4();
  v25 = v24;
  v41[0] = v21;
  sub_1909C2C48(a6, a16, a17, a20, v40);
  if (a12)
    v27 = a13;
  else
    v27 = 0;
  v28 = type metadata accessor for KeyPathPickerBox(0, *(_QWORD *)(*MEMORY[0x1E0C91A88] + *(_QWORD *)(*v23 + v22 + 8) + 8), *(_QWORD *)(a16 + 24), v26);
  v29 = sub_19094888C();
  v30 = MEMORY[0x19401429C](&unk_190A57720, v28);
  return sub_1909731C4(a1, a2, (uint64_t)&type metadata for EmptyConfiguration, v32, v25, a3, a4, v41, a9, (uint64_t)v40, a7, a8, a10, a11, a12, v27, (uint64_t)&type metadata for EmptyConfiguration, a14, a15,
           v28,
           v29,
           a18,
           a19,
           v30);
}

uint64_t sub_1909C2C48@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v10 = *a1;
  v11 = (_QWORD *)swift_allocObject();
  v12 = (uint64_t *)(v10 + *MEMORY[0x1E0DEE2A8]);
  v13 = v12[1];
  v14 = (_QWORD *)(*MEMORY[0x1E0C91B88] + v13);
  v15 = v14[1];
  v16 = *(_QWORD *)(*MEMORY[0x1E0C91A88] + v15 + 8);
  v11[2] = v16;
  v23 = *v12;
  v24 = v16;
  v11[3] = *v12;
  v22 = v14[2];
  v11[4] = v22;
  v11[5] = v15;
  v11[6] = v13;
  v11[7] = a2;
  v11[8] = a3;
  v21 = v14[5];
  v11[9] = v21;
  v11[10] = a4;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a3;
  v17[4] = a4;
  v17[5] = a1;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a2;
  v18[3] = a3;
  v18[4] = a4;
  v18[5] = a1;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v24;
  v19[3] = v23;
  v19[4] = v22;
  v19[5] = v15;
  v19[6] = v13;
  v19[7] = a2;
  v19[8] = a3;
  v19[9] = v21;
  v19[10] = a4;
  *a5 = &unk_1EE1EE258;
  a5[1] = v11;
  a5[2] = &unk_1EE1EE268;
  a5[3] = v17;
  a5[4] = &unk_1EE1EE278;
  a5[5] = v18;
  a5[6] = &unk_1EE1EE288;
  a5[7] = v19;
  return swift_retain();
}

uint64_t ControlPicker.init<A, B, C, D, E, F, G, H>(kind:displayName:preferredSize:intentUpdatableProperty:title:subtitle:value:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  char v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;
  _QWORD v44[8];
  char v45[9];

  v25 = *a5;
  v26 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a6 + 8);
  v27 = (_QWORD *)MEMORY[0x1E0C91B88];
  v36 = sub_190A45DB4();
  v29 = v28;
  v45[0] = v25;
  sub_1909C2C48(a6, a19, a20, a24, v44);
  if (a14)
    v31 = a15;
  else
    v31 = 0;
  v32 = type metadata accessor for KeyPathPickerBox(0, *(_QWORD *)(*MEMORY[0x1E0C91A88] + *(_QWORD *)(*v27 + v26 + 8) + 8), *(_QWORD *)(a19 + 24), v30);
  v33 = sub_19094888C();
  v34 = MEMORY[0x19401429C](&unk_190A57720, v32);
  return sub_1909728E8(a1, a2, (uint64_t)&type metadata for EmptyConfiguration, v36, v29, a3, a4, v45, a9, (uint64_t)v44, a7, a8, a10, a11, a12, a13, a14, v31, (uint64_t)&type metadata for EmptyConfiguration,
           a16,
           a17,
           a18,
           v32,
           v33,
           a21,
           a22,
           a23,
           v34);
}

uint64_t sub_1909C2F9C()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1909C2FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1909C3054(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1909C30E0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  return a1;
}

uint64_t sub_1909C3144(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1909C318C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1909C31DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[2] = a1;
  v6[3] = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a6 + 16) + 8) + 16);
  v6[4] = swift_getAssociatedTypeWitness();
  v6[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1909C325C()
{
  uint64_t v0;
  uint64_t v1;

  sub_190A482B0();
  swift_getAssociatedConformanceWitness();
  v1 = sub_190A47D10();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1909C32EC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;

  v5[16] = a4;
  v5[17] = a5;
  v5[14] = a2;
  v5[15] = a3;
  v5[13] = a1;
  v6 = *a2;
  v5[18] = *a2;
  v5[19] = *(_QWORD *)(a5 + 8);
  v7 = *(_QWORD *)(v6 + *MEMORY[0x1E0DEE2A8]);
  v5[20] = v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[21] = AssociatedTypeWitness;
  v5[22] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5[23] = swift_task_alloc();
  v5[24] = *(_QWORD *)(v7 - 8);
  v5[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1909C33A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v6 = v4[19];
  v5 = v4[20];
  v7 = v4[15];
  v8 = v4[14];
  v9 = (_QWORD *)(*MEMORY[0x1E0C91B88] + *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v4[18] + 8));
  v10 = *(_QWORD *)(*MEMORY[0x1E0C91A88] + v9[1] + 8);
  type metadata accessor for KeyPathPickerBox(0, v10, v4[16], a4);
  v11 = *(_QWORD *)(*(_QWORD *)(v7 + 8) + 24);
  v4[8] = v5;
  v4[9] = v10;
  v4[10] = v6;
  v4[11] = v11;
  v12 = sub_190A45DD8();
  v4[26] = v12;
  v13 = v9[2];
  v14 = MEMORY[0x19401429C](MEMORY[0x1E0C91A98], v12);
  v4[2] = v5;
  v15 = v9[5];
  v4[3] = v12;
  v4[4] = v13;
  v4[5] = v6;
  v4[6] = v14;
  v4[7] = v15;
  sub_190A45DE4();
  v16 = sub_190A4885C();
  sub_190953F44(v8, v16, (uint64_t)(v4 + 12));
  v4[27] = v4[12];
  sub_190A45C58();
  swift_getAssociatedConformanceWitness();
  v17 = (_QWORD *)swift_task_alloc();
  v4[28] = v17;
  *v17 = v4;
  v17[1] = sub_1909C35A0;
  return sub_190A45D90();
}

uint64_t sub_1909C35A0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;

  v2 = (_QWORD *)*v1;
  v2[29] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[22] + 8))(v2[23], v2[21]);
    return swift_task_switch();
  }
  else
  {
    v4 = v2[26];
    (*(void (**)(_QWORD, _QWORD))(v2[22] + 8))(v2[23], v2[21]);
    v5 = (_QWORD *)swift_task_alloc();
    v2[30] = v5;
    MEMORY[0x19401429C](MEMORY[0x1E0C91A90], v4);
    *v5 = v2;
    v5[1] = sub_1909C3680;
    return sub_190A45C70();
  }
}

uint64_t sub_1909C3680()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[24] + 8))(v2[25], v2[20]);
  return swift_task_switch();
}

uint64_t sub_1909C36F4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C3740()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C3788()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C37D0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;

  v5[22] = a4;
  v5[23] = a5;
  v5[20] = a2;
  v5[21] = a3;
  v5[19] = a1;
  v7 = *a2;
  v5[24] = *(_QWORD *)(a5 + 8);
  v8 = (uint64_t *)(v7 + *MEMORY[0x1E0DEE2A8]);
  v9 = *v8;
  v5[25] = *v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[26] = AssociatedTypeWitness;
  v5[27] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5[28] = swift_task_alloc();
  v5[29] = *(_QWORD *)(v9 - 8);
  v5[30] = swift_task_alloc();
  v11 = v8[1];
  v5[31] = v11;
  v12 = *(_QWORD *)(*MEMORY[0x1E0C91A88] + *(_QWORD *)(*MEMORY[0x1E0C91B88] + v11 + 8) + 8);
  v5[32] = v12;
  v5[33] = *(_QWORD *)(v12 - 8);
  v5[34] = swift_task_alloc();
  v5[35] = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) + 8) + 16);
  v5[36] = swift_getAssociatedTypeWitness();
  v5[37] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1909C3930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *(_QWORD *)(v4 + 248);
  v5 = *(_QWORD *)(v4 + 256);
  v8 = *(_QWORD *)(v4 + 192);
  v7 = *(_QWORD *)(v4 + 200);
  v9 = *(_QWORD *)(v4 + 160);
  v10 = *(_QWORD *)(v4 + 168);
  type metadata accessor for KeyPathPickerBox(0, v5, *(_QWORD *)(v4 + 176), a4);
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 8) + 24);
  *(_QWORD *)(v4 + 64) = v7;
  *(_QWORD *)(v4 + 72) = v5;
  *(_QWORD *)(v4 + 80) = v8;
  *(_QWORD *)(v4 + 88) = v11;
  v12 = sub_190A45DD8();
  *(_QWORD *)(v4 + 304) = v12;
  v13 = *MEMORY[0x1E0C91B88] + v6;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = MEMORY[0x19401429C](MEMORY[0x1E0C91A98], v12);
  *(_QWORD *)(v4 + 16) = v7;
  v16 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v4 + 24) = v12;
  *(_QWORD *)(v4 + 32) = v14;
  *(_QWORD *)(v4 + 40) = v8;
  *(_QWORD *)(v4 + 48) = v15;
  *(_QWORD *)(v4 + 56) = v16;
  sub_190A45DE4();
  v17 = sub_190A4885C();
  sub_190953F44(v9, v17, v4 + 136);
  v18 = *(_QWORD *)(v4 + 152);
  *(_QWORD *)(v4 + 312) = *(_QWORD *)(v4 + 136);
  sub_190A482B0();
  swift_getAssociatedConformanceWitness();
  v19 = sub_190A47D10();
  *(_QWORD *)(v4 + 128) = v19;
  v20 = sub_190A47D04();
  MEMORY[0x19401429C](MEMORY[0x1E0DEAF48], v20);
  sub_190A47E00();
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(v4 + 96);
  *(_QWORD *)(v4 + 144) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDCC0);
  if ((sub_190A47ED8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_190A482B0();
    sub_190A47D10();
    sub_190A47D1C();
    swift_bridgeObjectRelease();
    sub_190A45C58();
    swift_getAssociatedConformanceWitness();
    v21 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v4 + 320) = v21;
    *v21 = v4;
    v21[1] = sub_1909C3CAC;
    return sub_190A45D90();
  }
  else
  {
    v23 = *(_QWORD *)(v4 + 152);
    v24 = MEMORY[0x194012F04](v19, *(_QWORD *)(v4 + 256));
    swift_bridgeObjectRelease();
    sub_190966BB4();
    swift_allocError();
    *(_QWORD *)v25 = v23;
    *(_QWORD *)(v25 + 8) = v24;
    *(_BYTE *)(v25 + 16) = 1;
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v4 + 8))();
  }
}

uint64_t sub_1909C3CAC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;

  v2 = (_QWORD *)*v1;
  v2[41] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[27] + 8))(v2[28], v2[26]);
    return swift_task_switch();
  }
  else
  {
    v4 = v2[38];
    (*(void (**)(_QWORD, _QWORD))(v2[27] + 8))(v2[28], v2[26]);
    v5 = (_QWORD *)swift_task_alloc();
    v2[42] = v5;
    MEMORY[0x19401429C](MEMORY[0x1E0C91A90], v4);
    *v5 = v2;
    v5[1] = sub_1909C3D90;
    return sub_190A45CA0();
  }
}

uint64_t sub_1909C3D90()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 344) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[29] + 8))(v2[30], v2[25]);
  return swift_task_switch();
}

uint64_t sub_1909C3E04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 264);
  v1 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 256);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C3E8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 264);
  v1 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 256);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C3F0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 264);
  v1 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 256);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C3F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v11 = type metadata accessor for KeyPathPickerBox(0, a2, a8, a4);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v12;
  *v12 = v8;
  v12[1] = sub_1908C5090;
  return sub_190954094(a1, a3, v11, a3, (uint64_t)&off_1E2CC4FC0, v14);
}

uint64_t sub_1909C401C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;

  v6[2] = a1;
  v6[3] = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[4] = AssociatedTypeWitness;
  v6[5] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6[6] = swift_task_alloc();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v6[7] = AssociatedConformanceWitness;
  v6[8] = *(_QWORD *)(AssociatedConformanceWitness + 8);
  v9 = swift_getAssociatedTypeWitness();
  v6[9] = v9;
  v6[10] = *(_QWORD *)(v9 - 8);
  v6[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1909C4110()
{
  uint64_t v0;
  _QWORD *v1;

  sub_190A45C58();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_1909C4178;
  return sub_190A45D54();
}

uint64_t sub_1909C4178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_1909C41FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  swift_getAssociatedConformanceWitness();
  v4 = sub_190A45D84();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_1909C4294()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C42D4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;

  v4[15] = a3;
  v4[16] = a4;
  v4[13] = a1;
  v4[14] = a2;
  v5 = *a2;
  v4[17] = *a2;
  v4[18] = *(_QWORD *)(a4 + 8);
  v6 = *(_QWORD *)(v5 + *MEMORY[0x1E0DEE2A8]);
  v4[19] = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[20] = AssociatedTypeWitness;
  v4[21] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[22] = swift_task_alloc();
  v4[23] = *(_QWORD *)(v6 - 8);
  v4[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1909C438C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v6 = v4[18];
  v5 = v4[19];
  v7 = v4[14];
  v8 = v4[15];
  v9 = (_QWORD *)(*MEMORY[0x1E0C91B88] + *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v4[17] + 8));
  v10 = *(_QWORD *)(*MEMORY[0x1E0C91A88] + v9[1] + 8);
  type metadata accessor for KeyPathPickerBox(0, v10, *(_QWORD *)(v8 + 24), a4);
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 8) + 24);
  v4[8] = v5;
  v4[9] = v10;
  v4[10] = v6;
  v4[11] = v11;
  v12 = sub_190A45DD8();
  v4[25] = v12;
  v13 = v9[2];
  v14 = MEMORY[0x19401429C](MEMORY[0x1E0C91A98], v12);
  v4[2] = v5;
  v15 = v9[5];
  v4[3] = v12;
  v4[4] = v13;
  v4[5] = v6;
  v4[6] = v14;
  v4[7] = v15;
  sub_190A45DE4();
  v16 = sub_190A4885C();
  sub_190953F44(v7, v16, (uint64_t)(v4 + 12));
  v4[26] = v4[12];
  sub_190A45C58();
  swift_getAssociatedConformanceWitness();
  v17 = (_QWORD *)swift_task_alloc();
  v4[27] = v17;
  *v17 = v4;
  v17[1] = sub_1909C4584;
  return sub_190A45D90();
}

uint64_t sub_1909C4584()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;

  v2 = (_QWORD *)*v1;
  v2[28] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[21] + 8))(v2[22], v2[20]);
    return swift_task_switch();
  }
  else
  {
    v4 = v2[25];
    (*(void (**)(_QWORD, _QWORD))(v2[21] + 8))(v2[22], v2[20]);
    v5 = (_QWORD *)swift_task_alloc();
    v2[29] = v5;
    MEMORY[0x19401429C](MEMORY[0x1E0C91A90], v4);
    *v5 = v2;
    v5[1] = sub_1909C4664;
    return sub_190A45C70();
  }
}

uint64_t sub_1909C4664()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[23] + 8))(v2[24], v2[19]);
  return swift_task_switch();
}

uint64_t sub_1909C46D8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  v4[21] = a3;
  v4[22] = a4;
  v4[19] = a1;
  v4[20] = a2;
  v5 = *a2;
  v4[23] = *(_QWORD *)(a4 + 8);
  v6 = (uint64_t *)(v5 + *MEMORY[0x1E0DEE2A8]);
  v7 = *v6;
  v4[24] = *v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[25] = AssociatedTypeWitness;
  v4[26] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[27] = swift_task_alloc();
  v4[28] = *(_QWORD *)(v7 - 8);
  v4[29] = swift_task_alloc();
  v9 = v6[1];
  v4[30] = v9;
  v10 = *(_QWORD *)(*MEMORY[0x1E0C91A88] + *(_QWORD *)(*MEMORY[0x1E0C91B88] + v9 + 8) + 8);
  v4[31] = v10;
  v4[32] = *(_QWORD *)(v10 - 8);
  v4[33] = swift_task_alloc();
  v11 = swift_getAssociatedTypeWitness();
  v4[34] = v11;
  v4[35] = *(_QWORD *)(v11 - 8);
  v4[36] = swift_task_alloc();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4[37] = AssociatedConformanceWitness;
  v4[38] = *(_QWORD *)(AssociatedConformanceWitness + 8);
  v13 = swift_getAssociatedTypeWitness();
  v4[39] = v13;
  v4[40] = *(_QWORD *)(v13 - 8);
  v4[41] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1909C489C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v6 = v4[30];
  v5 = v4[31];
  v8 = v4[23];
  v7 = v4[24];
  v9 = v4[21];
  v10 = v4[20];
  type metadata accessor for KeyPathPickerBox(0, v5, *(_QWORD *)(v9 + 24), a4);
  v11 = *(_QWORD *)(*(_QWORD *)(v9 + 8) + 24);
  v4[8] = v7;
  v4[9] = v5;
  v4[10] = v8;
  v4[11] = v11;
  v12 = sub_190A45DD8();
  v4[42] = v12;
  v13 = *MEMORY[0x1E0C91B88] + v6;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = MEMORY[0x19401429C](MEMORY[0x1E0C91A98], v12);
  v4[2] = v7;
  v16 = *(_QWORD *)(v13 + 40);
  v4[3] = v12;
  v4[4] = v14;
  v4[5] = v8;
  v4[6] = v15;
  v4[7] = v16;
  sub_190A45DE4();
  v17 = sub_190A4885C();
  sub_190953F44(v10, v17, (uint64_t)(v4 + 17));
  v4[43] = v4[17];
  sub_190A45C58();
  v18 = (_QWORD *)swift_task_alloc();
  v4[44] = v18;
  *v18 = v4;
  v18[1] = sub_1909C4A64;
  return sub_190A45D54();
}

uint64_t sub_1909C4A64()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[35] + 8))(v2[36], v2[34]);
  return swift_task_switch();
}

uint64_t sub_1909C4AD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v0 + 320);
  v1 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 152);
  swift_getAssociatedConformanceWitness();
  v5 = sub_190A45D84();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(_QWORD *)(v0 + 128) = v5;
  v6 = sub_190A47D04();
  MEMORY[0x19401429C](MEMORY[0x1E0DEAF48], v6);
  sub_190A47E00();
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 144) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDCC0);
  if ((sub_190A47ED8() & 1) != 0)
  {
    sub_190A47D1C();
    swift_bridgeObjectRelease();
    sub_190A45C58();
    swift_getAssociatedConformanceWitness();
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 368) = v7;
    *v7 = v0;
    v7[1] = sub_1909C4D24;
    return sub_190A45D90();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 152);
    v10 = MEMORY[0x194012F04](v5, *(_QWORD *)(v0 + 248));
    swift_bridgeObjectRelease();
    sub_190966BB4();
    swift_allocError();
    *(_QWORD *)v11 = v9;
    *(_QWORD *)(v11 + 8) = v10;
    *(_BYTE *)(v11 + 16) = 1;
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1909C4D24()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;

  v2 = (_QWORD *)*v1;
  v2[47] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[26] + 8))(v2[27], v2[25]);
    return swift_task_switch();
  }
  else
  {
    v4 = v2[42];
    (*(void (**)(_QWORD, _QWORD))(v2[26] + 8))(v2[27], v2[25]);
    v5 = (_QWORD *)swift_task_alloc();
    v2[48] = v5;
    MEMORY[0x19401429C](MEMORY[0x1E0C91A90], v4);
    *v5 = v2;
    v5[1] = sub_1909C4E08;
    return sub_190A45CA0();
  }
}

uint64_t sub_1909C4E08()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 392) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[28] + 8))(v2[29], v2[24]);
  return swift_task_switch();
}

uint64_t sub_1909C4E7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 256);
  v1 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 248);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C4F18()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C4F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 256);
  v1 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 248);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C5028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 256);
  v1 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 248);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C50BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v12;
  _QWORD *v13;

  v12 = type metadata accessor for KeyPathPickerBox(0, a2, *(_QWORD *)(a7 + 24), a4);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v13;
  *v13 = v8;
  v13[1] = sub_1908CEB54;
  return sub_190954094(a1, a3, v12, a3, (uint64_t)&off_1E2CC4FC0, a8);
}

uint64_t sub_1909C514C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v10;

  v6[3] = a6;
  v6[4] = v10;
  v6[2] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[5] = AssociatedTypeWitness;
  v6[6] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6[7] = swift_task_alloc();
  v6[8] = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  v8 = swift_getAssociatedTypeWitness();
  v6[9] = v8;
  v6[10] = *(_QWORD *)(v8 - 8);
  v6[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1909C5248()
{
  uint64_t v0;
  _QWORD *v1;

  sub_190A45C58();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_1909C52B0;
  return sub_190A45D9C();
}

uint64_t sub_1909C52B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_1909C5334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  swift_getAssociatedConformanceWitness();
  v4 = sub_190A45D84();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_1909C53CC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C540C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;

  v4[15] = a3;
  v4[16] = a4;
  v4[13] = a1;
  v4[14] = a2;
  v5 = *a2;
  v4[17] = *a2;
  v4[18] = *(_QWORD *)(a4 + 8);
  v6 = *(_QWORD *)(v5 + *MEMORY[0x1E0DEE2A8]);
  v4[19] = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[20] = AssociatedTypeWitness;
  v4[21] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[22] = swift_task_alloc();
  v4[23] = *(_QWORD *)(v6 - 8);
  v4[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1909C54C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v6 = v4[18];
  v5 = v4[19];
  v7 = v4[14];
  v8 = v4[15];
  v9 = (_QWORD *)(*MEMORY[0x1E0C91B88] + *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v4[17] + 8));
  v10 = *(_QWORD *)(*MEMORY[0x1E0C91A88] + v9[1] + 8);
  type metadata accessor for KeyPathPickerBox(0, v10, *(_QWORD *)(v8 + 24), a4);
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 8) + 24);
  v4[8] = v5;
  v4[9] = v10;
  v4[10] = v6;
  v4[11] = v11;
  v12 = sub_190A45DD8();
  v4[25] = v12;
  v13 = v9[2];
  v14 = MEMORY[0x19401429C](MEMORY[0x1E0C91A98], v12);
  v4[2] = v5;
  v15 = v9[5];
  v4[3] = v12;
  v4[4] = v13;
  v4[5] = v6;
  v4[6] = v14;
  v4[7] = v15;
  sub_190A45DE4();
  v16 = sub_190A4885C();
  sub_190953F44(v7, v16, (uint64_t)(v4 + 12));
  v4[26] = v4[12];
  sub_190A45C58();
  swift_getAssociatedConformanceWitness();
  v17 = (_QWORD *)swift_task_alloc();
  v4[27] = v17;
  *v17 = v4;
  v17[1] = sub_1909C56BC;
  return sub_190A45D90();
}

uint64_t sub_1909C56BC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;

  v2 = (_QWORD *)*v1;
  v2[28] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[21] + 8))(v2[22], v2[20]);
    return swift_task_switch();
  }
  else
  {
    v4 = v2[25];
    (*(void (**)(_QWORD, _QWORD))(v2[21] + 8))(v2[22], v2[20]);
    v5 = (_QWORD *)swift_task_alloc();
    v2[29] = v5;
    MEMORY[0x19401429C](MEMORY[0x1E0C91A90], v4);
    *v5 = v2;
    v5[1] = sub_1909C579C;
    return sub_190A45C70();
  }
}

uint64_t sub_1909C579C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[23] + 8))(v2[24], v2[19]);
  return swift_task_switch();
}

uint64_t sub_1909C5810()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C585C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C58A4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C58EC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5[22] = a4;
  v5[23] = a5;
  v5[20] = a2;
  v5[21] = a3;
  v5[19] = a1;
  v6 = *a2;
  v5[24] = *(_QWORD *)(a4 + 8);
  v7 = (uint64_t *)(v6 + *MEMORY[0x1E0DEE2A8]);
  v8 = *v7;
  v5[25] = *v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[26] = AssociatedTypeWitness;
  v5[27] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5[28] = swift_task_alloc();
  v5[29] = *(_QWORD *)(v8 - 8);
  v5[30] = swift_task_alloc();
  v10 = v7[1];
  v5[31] = v10;
  v11 = *(_QWORD *)(*MEMORY[0x1E0C91A88] + *(_QWORD *)(*MEMORY[0x1E0C91B88] + v10 + 8) + 8);
  v5[32] = v11;
  v5[33] = *(_QWORD *)(v11 - 8);
  v5[34] = swift_task_alloc();
  v12 = swift_getAssociatedTypeWitness();
  v5[35] = v12;
  v5[36] = *(_QWORD *)(v12 - 8);
  v5[37] = swift_task_alloc();
  v5[38] = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  v13 = swift_getAssociatedTypeWitness();
  v5[39] = v13;
  v5[40] = *(_QWORD *)(v13 - 8);
  v5[41] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1909C5AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v6 = v4[31];
  v5 = v4[32];
  v8 = v4[24];
  v7 = v4[25];
  v9 = v4[21];
  v10 = v4[20];
  type metadata accessor for KeyPathPickerBox(0, v5, *(_QWORD *)(v9 + 24), a4);
  v11 = *(_QWORD *)(*(_QWORD *)(v9 + 8) + 24);
  v4[8] = v7;
  v4[9] = v5;
  v4[10] = v8;
  v4[11] = v11;
  v12 = sub_190A45DD8();
  v4[42] = v12;
  v13 = *MEMORY[0x1E0C91B88] + v6;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = MEMORY[0x19401429C](MEMORY[0x1E0C91A98], v12);
  v4[2] = v7;
  v16 = *(_QWORD *)(v13 + 40);
  v4[3] = v12;
  v4[4] = v14;
  v4[5] = v8;
  v4[6] = v15;
  v4[7] = v16;
  sub_190A45DE4();
  v17 = sub_190A4885C();
  sub_190953F44(v10, v17, (uint64_t)(v4 + 17));
  v4[43] = v4[17];
  sub_190A45C58();
  v18 = (_QWORD *)swift_task_alloc();
  v4[44] = v18;
  *v18 = v4;
  v18[1] = sub_1909C5C7C;
  return sub_190A45D9C();
}

uint64_t sub_1909C5C7C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[36] + 8))(v2[37], v2[35]);
  return swift_task_switch();
}

uint64_t sub_1909C5CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v0 + 320);
  v1 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 152);
  swift_getAssociatedConformanceWitness();
  v5 = sub_190A45D84();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(_QWORD *)(v0 + 128) = v5;
  v6 = sub_190A47D04();
  MEMORY[0x19401429C](MEMORY[0x1E0DEAF48], v6);
  sub_190A47E00();
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 144) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDCC0);
  if ((sub_190A47ED8() & 1) != 0)
  {
    sub_190A47D1C();
    swift_bridgeObjectRelease();
    sub_190A45C58();
    swift_getAssociatedConformanceWitness();
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 368) = v7;
    *v7 = v0;
    v7[1] = sub_1909C5F40;
    return sub_190A45D90();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 152);
    v10 = MEMORY[0x194012F04](v5, *(_QWORD *)(v0 + 256));
    swift_bridgeObjectRelease();
    sub_190966BB4();
    swift_allocError();
    *(_QWORD *)v11 = v9;
    *(_QWORD *)(v11 + 8) = v10;
    *(_BYTE *)(v11 + 16) = 1;
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1909C5F40()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;

  v2 = (_QWORD *)*v1;
  v2[47] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[27] + 8))(v2[28], v2[26]);
    return swift_task_switch();
  }
  else
  {
    v4 = v2[42];
    (*(void (**)(_QWORD, _QWORD))(v2[27] + 8))(v2[28], v2[26]);
    v5 = (_QWORD *)swift_task_alloc();
    v2[48] = v5;
    MEMORY[0x19401429C](MEMORY[0x1E0C91A90], v4);
    *v5 = v2;
    v5[1] = sub_1909C6024;
    return sub_190A45CA0();
  }
}

uint64_t sub_1909C6024()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 392) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[29] + 8))(v2[30], v2[25]);
  return swift_task_switch();
}

uint64_t sub_1909C6098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 264);
  v1 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 256);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C6134()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C61B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 264);
  v1 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 256);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C6244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 264);
  v1 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 256);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909C62D8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(*(int *)*v0 + *v0);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1908C4FDC;
  return v4();
}

uint64_t sub_1909C632C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(v1 + 16) + *(_QWORD *)(v1 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1908CEB54;
  return v6(a1);
}

uint64_t sub_1909C6390(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v7 = (uint64_t (*)(uint64_t))(**(int **)(v2 + 32) + *(_QWORD *)(v2 + 32));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = v3;
  v5[1] = sub_1908CEB54;
  return v7(a2);
}

uint64_t sub_1909C63F0()
{
  _OWORD *v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v2 = v0[1];
  *(_OWORD *)(v1 + 16) = *v0;
  *(_OWORD *)(v1 + 32) = v2;
  v3 = v0[3];
  *(_OWORD *)(v1 + 48) = v0[2];
  *(_OWORD *)(v1 + 64) = v3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 80) = v4;
  *v4 = v1;
  v4[1] = sub_1909C6478;
  v7 = (uint64_t (*)(void))(**(int **)(v1 + 16) + *(_QWORD *)(v1 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  v4[2] = v5;
  *v5 = v4;
  v5[1] = sub_1908C4FDC;
  return v7();
}

uint64_t sub_1909C6478(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_1909C64CC(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  v4 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v4;
  v5 = v1[3];
  *(_OWORD *)(v2 + 48) = v1[2];
  *(_OWORD *)(v2 + 64) = v5;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 80) = v6;
  *v6 = v2;
  v6[1] = sub_1909C6D90;
  v9 = (uint64_t (*)(uint64_t))(**(int **)(v2 + 32) + *(_QWORD *)(v2 + 32));
  v7 = (_QWORD *)swift_task_alloc();
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_1908CEB54;
  return v9(a1);
}

uint64_t sub_1909C6560(uint64_t a1, uint64_t a2)
{
  _OWORD *v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v5 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v5;
  v6 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v6;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 80) = v7;
  *v7 = v3;
  v7[1] = sub_1909C65F4;
  v10 = (uint64_t (*)(uint64_t))(**(int **)(v3 + 48) + *(_QWORD *)(v3 + 48));
  v8 = (_QWORD *)swift_task_alloc();
  v7[2] = v8;
  *v8 = v7;
  v8[1] = sub_1908CEB54;
  return v10(a2);
}

uint64_t sub_1909C65F4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1909C663C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_retain();
  return v1;
}

uint64_t sub_1909C6668(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_1909C6670()
{
  return swift_deallocObject();
}

uint64_t sub_1909C6680()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = v0[7];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_190930C98;
  return sub_1909C514C(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1909C671C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909C6740(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t *)v1[5];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1908CEB54;
  return sub_1909C540C(a1, v6, v4, v5);
}

uint64_t sub_1909C67B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = (uint64_t *)v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1908CEB54;
  return sub_1909C58EC(a1, v6, v4, v5, v7);
}

uint64_t sub_1909C682C()
{
  return swift_deallocObject();
}

uint64_t sub_1909C683C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v4 = v1[3];
  v12 = v1[2];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1908CEB54;
  return sub_1909C50BC(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1909C68E4()
{
  return swift_deallocObject();
}

uint64_t sub_1909C68F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = v0[7];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_190930C98;
  return sub_1909C401C(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1909C6980()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909C69A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1908CEB54;
  return sub_1909C42D4(a1, v6, v4, v5);
}

uint64_t sub_1909C6A10(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1908CEB54;
  return sub_1909C46D8(a1, v6, v4, v5);
}

uint64_t sub_1909C6A78()
{
  return swift_deallocObject();
}

uint64_t sub_1909C6A88(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1908CEB54;
  return sub_1909C50BC(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1909C6B28()
{
  return swift_deallocObject();
}

uint64_t sub_1909C6B38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = v0[7];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_190930784;
  return sub_1909C31DC(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1909C6BD4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = (uint64_t *)v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1908CEB54;
  return sub_1909C32EC(a1, v6, v4, v5, v7);
}

uint64_t sub_1909C6C4C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = (uint64_t *)v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1908CEB54;
  return sub_1909C37D0(a1, v6, v4, v5, v7);
}

uint64_t sub_1909C6CC0()
{
  return swift_deallocObject();
}

uint64_t sub_1909C6CD0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v4 = v1[3];
  v12 = v1[2];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1908C5090;
  return sub_1909C3F8C(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1909C6D98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  unsigned int v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    v3 = 0;
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v5 = *(unsigned __int8 *)(a1 + v3 + 32);
      if (v5 >= 0xD || ((0x13BFu >> v5) & 1) == 0)
        break;
      v6 = qword_190A57840[(char)v5];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_1908F23C8(0, v4[2] + 1, 1, v4);
      v8 = v4[2];
      v7 = v4[3];
      if (v8 >= v7 >> 1)
        v4 = sub_1908F23C8((_QWORD *)(v7 > 1), v8 + 1, 1, v4);
      ++v3;
      v4[2] = v8 + 1;
      v4[v8 + 4] = v6;
      if (v1 == v3)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v4;
      }
    }
    result = sub_190A486D0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

unint64_t sub_1909C6EC4(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for WidgetDescriptor(0);
  v9 = MEMORY[0x1E0C80A78](v28);
  v27 = (uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v25 = (uint64_t)&v22 - v12;
  v13 = *(_QWORD *)(a3 + 16);
  if (!v13)
    return MEMORY[0x1E0DEE9D8];
  v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v22 = a3;
  v23 = v14;
  v15 = a3 + v14;
  v26 = v11;
  v16 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v17 = MEMORY[0x1E0DEE9D8];
  v24 = a1;
  do
  {
    a1(v15);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v8, 1, v28) == 1)
    {
      sub_1908AA544((uint64_t)v8, &qword_1ECF6C788);
    }
    else
    {
      v18 = v25;
      sub_190906900((uint64_t)v8, v25);
      sub_190906900(v18, v27);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = sub_1908F23D4(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
      v20 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v17 + 24);
      if (v20 >= v19 >> 1)
        v17 = sub_1908F23D4(v19 > 1, v20 + 1, 1, v17);
      *(_QWORD *)(v17 + 16) = v20 + 1;
      sub_190906900(v27, v17 + v23 + v20 * v16);
      a1 = v24;
    }
    v15 += v16;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v17;
}

BOOL sub_1909C7100(unsigned __int8 a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = a1;
  sub_190A487C0();
  sub_190A487CC();
  v4 = sub_190A48808();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(unsigned __int8 *)(v8 + v11);
    result = v12 == v3;
    if (v12 == v3)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1909C71EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_190A487C0();
    sub_190A47B18();
    v6 = sub_190A48808();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_190A486DC() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_190A486DC() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1909C7320(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = type metadata accessor for WidgetDescriptor(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v22 = (uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v19 - v10;
  v12 = MEMORY[0x1E0DEE9D8];
  v23 = MEMORY[0x1E0DEE9D8];
  v21 = *(_QWORD *)(a1 + 16);
  if (v21)
  {
    v13 = 0;
    v19 = a2;
    v20 = a1;
    while (v13 < *(_QWORD *)(a1 + 16))
    {
      v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v15 = *(_QWORD *)(v6 + 72);
      sub_1908AF5D8(a1 + v14 + v15 * v13, (uint64_t)v11, type metadata accessor for WidgetDescriptor);
      v16 = sub_1909CB7F4((uint64_t)v11);
      if (v2)
      {
        sub_1908B5150((uint64_t)v11, type metadata accessor for WidgetDescriptor);
        swift_release();
        swift_bridgeObjectRelease();
        return v12;
      }
      if ((v16 & 1) != 0)
      {
        sub_190906900((uint64_t)v11, v22);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1908B8C88(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v23;
        v18 = *(_QWORD *)(v23 + 16);
        v17 = *(_QWORD *)(v23 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1908B8C88(v17 > 1, v18 + 1, 1);
          v12 = v23;
        }
        *(_QWORD *)(v12 + 16) = v18 + 1;
        result = sub_190906900(v22, v12 + v14 + v18 * v15);
        a1 = v20;
      }
      else
      {
        result = sub_1908B5150((uint64_t)v11, type metadata accessor for WidgetDescriptor);
      }
      if (v21 == ++v13)
      {
        v12 = v23;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_1909C7510(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = sub_190A46E88();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1908AA2F4(&qword_1EE1EE320, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDB100], MEMORY[0x1E0CDB108]);
    sub_190A47E18();
    sub_190A47E60();
    sub_190A47E3C();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v1, v4);
    if ((v12 & 1) != 0)
    {
      sub_190A47E60();
      v9 = *(void (**)(char *, uint64_t))(v5 + 8);
      v9(v8, v4);
    }
    else
    {
      v10 = v11;
      v9 = *(void (**)(char *, uint64_t))(v5 + 8);
      v9(v8, v4);
      v14 = v10;
    }
    result = sub_190A47E18();
    if (v14 >= v13)
    {
      v11 = v13;
      v12 = v14;
      sub_190A47EB4();
      return ((uint64_t (*)(uint64_t, uint64_t))v9)(v2, v4);
    }
  }
  __break(1u);
  return result;
}

void static Widget.main()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v7 = sub_190A465A0();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ECF6D988);
  v8 = sub_190A46588();
  v9 = sub_190A47F68();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1908A7000, v8, v9, "main [Widget]", v10, 2u);
    MEMORY[0x194014398](v10, -1, -1);
  }

  type metadata accessor for ResolvedWidgetHost(0, a1, a2, v11);
  sub_190A47878();
  v15 = sub_1909CD430((uint64_t)v6, v12, v13, v14);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  *(_QWORD *)&xmmword_1ECF6D940 = v15;
  *((_QWORD *)&xmmword_1ECF6D940 + 1) = &off_1E2CC0898;
  qword_1ECF6D950 = (uint64_t)&off_1E2CC0850;
  swift_release();
  v16 = sub_190A46588();
  v17 = sub_190A47F68();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    *(_DWORD *)v18 = 136315138;
    v23 = xmmword_1ECF6D940;
    v24 = qword_1ECF6D950;
    v25 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C7F8);
    v20 = sub_190A4813C();
    *(_QWORD *)&v23 = sub_1908B35C4(v20, v21, &v25);
    sub_190A48178();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v16, v17, "WidgetHost - %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v19, -1, -1);
    MEMORY[0x194014398](v18, -1, -1);
  }

  sub_1908AB890(0, &qword_1ECF6CFF8);
  v22 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WidgetExtensionXPCServer()), sel_init);
  sub_190A47F38();

}

uint64_t static ControlWidget.main()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  MEMORY[0x1E0C80A78](a1);
  v1 = sub_190A47080();
  v22 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v21 - v2;
  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v4 = sub_190A465A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ECF6D988);
  v5 = sub_190A46588();
  v6 = sub_190A47F68();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1908A7000, v5, v6, "main [Control]", v7, 2u);
    MEMORY[0x194014398](v7, -1, -1);
  }

  sub_190A46750();
  sub_190A4708C();
  v8 = MEMORY[0x19401429C](MEMORY[0x1E0CDBE60], v1);
  type metadata accessor for ResolvedWidgetHost(0, v1, v8, v9);
  *(_QWORD *)&xmmword_1ECF6D940 = sub_1909CD430((uint64_t)v3, v10, v11, v12);
  *((_QWORD *)&xmmword_1ECF6D940 + 1) = &off_1E2CC0898;
  qword_1ECF6D950 = (uint64_t)&off_1E2CC0850;
  swift_release();
  v13 = sub_190A46588();
  v14 = sub_190A47F68();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    *(_DWORD *)v15 = 136315138;
    v23 = xmmword_1ECF6D940;
    v24 = qword_1ECF6D950;
    v25 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C7F8);
    v17 = sub_190A4813C();
    *(_QWORD *)&v23 = sub_1908B35C4(v17, v18, &v25);
    sub_190A48178();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v13, v14, "WidgetHost - %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v16, -1, -1);
    MEMORY[0x194014398](v15, -1, -1);
  }

  sub_1908AB890(0, &qword_1ECF6CFF8);
  v19 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WidgetExtensionXPCServer()), sel_init);
  sub_190A47F38();

  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v3, v1);
}

uint64_t sub_1909C7CC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1909C8014(&qword_1ECF6AA50, (void (*)(uint64_t))sub_1909C7CD8, a1);
}

uint64_t sub_1909C7CD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v28 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v28);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for WidgetDescriptor(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v29 = (uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - v8;
  sub_19090D084();
  result = sub_190A4666C();
  v11 = v31;
  v12 = MEMORY[0x1E0DEE9D8];
  v30 = MEMORY[0x1E0DEE9D8];
  v27 = *(_QWORD *)(v31 + 16);
  if (v27)
  {
    v24 = v4;
    v25 = a1;
    v13 = 0;
    v14 = v27;
    v26 = v5;
    while (v13 < *(_QWORD *)(v11 + 16))
    {
      v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v16 = *(_QWORD *)(v5 + 72);
      sub_1908AF5D8(v11 + v15 + v16 * v13, (uint64_t)v9, type metadata accessor for WidgetDescriptor);
      sub_1908AF5D8((uint64_t)v9, (uint64_t)v3, type metadata accessor for ViewSource);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
          swift_release();
          swift_release();
          v18 = sub_190A46240();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v3, v18);
        }
        else
        {
          sub_1908B5150((uint64_t)v3, type metadata accessor for ViewSource);
        }
        result = sub_1908B5150((uint64_t)v9, type metadata accessor for WidgetDescriptor);
      }
      else
      {
        v19 = *((_QWORD *)v3 + 4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1908B467C(v19);
        swift_release();
        sub_190906900((uint64_t)v9, v29);
        v20 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1908B8C88(0, *(_QWORD *)(v20 + 16) + 1, 1);
          v20 = v30;
        }
        v22 = *(_QWORD *)(v20 + 16);
        v21 = *(_QWORD *)(v20 + 24);
        v5 = v26;
        if (v22 >= v21 >> 1)
        {
          sub_1908B8C88(v21 > 1, v22 + 1, 1);
          v20 = v30;
        }
        *(_QWORD *)(v20 + 16) = v22 + 1;
        result = sub_190906900(v29, v20 + v15 + v22 * v16);
        v14 = v27;
      }
      if (v14 == ++v13)
      {
        v12 = v30;
        v4 = v24;
        a1 = v25;
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v12 + 16))
    {
      sub_1908AF5D8(v12 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a1, type metadata accessor for WidgetDescriptor);
      v23 = 0;
    }
    else
    {
      v23 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, v23, 1, v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1909C8000@<X0>(uint64_t a1@<X8>)
{
  return sub_1909C8014(&qword_1ECF6A738, (void (*)(uint64_t))sub_1909C818C, a1);
}

uint64_t sub_1909C8014@<X0>(_QWORD *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[24];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AA58);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v17[-v11];
  v13 = v3 + *a1;
  swift_beginAccess();
  sub_1908AAA48(v13, (uint64_t)v12, &qword_1ECF6AA58);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1)
    return sub_1909CD828((uint64_t)v12, a3);
  sub_1908AA544((uint64_t)v12, &qword_1ECF6AA58);
  a2(v3);
  sub_1908AAA48(a3, (uint64_t)v10, &qword_1ECF6C788);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  swift_beginAccess();
  sub_1909CD7E0((uint64_t)v10, v13);
  return swift_endAccess();
}

uint64_t sub_1909C818C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v28);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for WidgetDescriptor(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v26 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - v8;
  sub_19090D084();
  result = sub_190A4666C();
  v11 = v30;
  v12 = MEMORY[0x1E0DEE9D8];
  v29 = MEMORY[0x1E0DEE9D8];
  v27 = *(_QWORD *)(v30 + 16);
  if (v27)
  {
    v24 = v4;
    v25 = a1;
    v13 = 0;
    while (1)
    {
      if (v13 >= *(_QWORD *)(v11 + 16))
      {
        __break(1u);
        return result;
      }
      v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v16 = *(_QWORD *)(v5 + 72);
      sub_1908AF5D8(v11 + v15 + v16 * v13, (uint64_t)v9, type metadata accessor for WidgetDescriptor);
      sub_1908AF5D8((uint64_t)v9, (uint64_t)v3, type metadata accessor for ViewSource);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
          swift_release();
          swift_release();
          v18 = sub_190A46240();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v3, v18);
          sub_190906900((uint64_t)v9, v26);
          v19 = v29;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1908B8C88(0, *(_QWORD *)(v19 + 16) + 1, 1);
            v19 = v29;
          }
          v21 = *(_QWORD *)(v19 + 16);
          v20 = *(_QWORD *)(v19 + 24);
          if (v21 >= v20 >> 1)
          {
            sub_1908B8C88(v20 > 1, v21 + 1, 1);
            v19 = v29;
          }
          *(_QWORD *)(v19 + 16) = v21 + 1;
          result = sub_190906900(v26, v19 + v15 + v21 * v16);
          goto LABEL_5;
        }
        sub_1908B5150((uint64_t)v3, type metadata accessor for ViewSource);
      }
      else
      {
        v14 = *((_QWORD *)v3 + 4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1908B467C(v14);
        swift_release();
      }
      result = sub_1908B5150((uint64_t)v9, type metadata accessor for WidgetDescriptor);
LABEL_5:
      if (v27 == ++v13)
      {
        v12 = v29;
        v4 = v24;
        a1 = v25;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v12 + 16))
  {
    sub_1908AF5D8(v12 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a1, type metadata accessor for WidgetDescriptor);
    v22 = 0;
  }
  else
  {
    v22 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, v22, 1, v4);
  return swift_release();
}

uint64_t sub_1909C84B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1909C8014(qword_1ECF69F18, (void (*)(uint64_t))sub_1909C84CC, a1);
}

uint64_t sub_1909C84CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v26 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v26);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for WidgetDescriptor(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v27 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - v8;
  sub_19090D084();
  result = sub_190A4666C();
  v11 = v30;
  v12 = MEMORY[0x1E0DEE9D8];
  v28 = *(_QWORD *)(v30 + 16);
  v29 = MEMORY[0x1E0DEE9D8];
  if (v28)
  {
    v24 = v4;
    v25 = a1;
    v13 = 0;
    while (1)
    {
      if (v13 >= *(_QWORD *)(v11 + 16))
      {
        __break(1u);
        return result;
      }
      v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v16 = *(_QWORD *)(v5 + 72);
      sub_1908AF5D8(v11 + v15 + v16 * v13, (uint64_t)v9, type metadata accessor for WidgetDescriptor);
      sub_1908AF5D8((uint64_t)v9, (uint64_t)v3, type metadata accessor for ViewSource);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload != 1)
        {
          sub_1908B5150((uint64_t)v3, type metadata accessor for ViewSource);
          sub_190906900((uint64_t)v9, v27);
          v19 = v29;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1908B8C88(0, *(_QWORD *)(v19 + 16) + 1, 1);
            v19 = v29;
          }
          v21 = *(_QWORD *)(v19 + 16);
          v20 = *(_QWORD *)(v19 + 24);
          if (v21 >= v20 >> 1)
          {
            sub_1908B8C88(v20 > 1, v21 + 1, 1);
            v19 = v29;
          }
          *(_QWORD *)(v19 + 16) = v21 + 1;
          result = sub_190906900(v27, v19 + v15 + v21 * v16);
          goto LABEL_5;
        }
        __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
        swift_release();
        swift_release();
        v18 = sub_190A46240();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v3, v18);
      }
      else
      {
        v14 = *((_QWORD *)v3 + 4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1908B467C(v14);
        swift_release();
      }
      result = sub_1908B5150((uint64_t)v9, type metadata accessor for WidgetDescriptor);
LABEL_5:
      if (v28 == ++v13)
      {
        v12 = v29;
        v4 = v24;
        a1 = v25;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v12 + 16))
  {
    sub_1908AF5D8(v12 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a1, type metadata accessor for WidgetDescriptor);
    v22 = 0;
  }
  else
  {
    v22 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, v22, 1, v4);
  return swift_release();
}

void sub_1909C87FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[6];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for WidgetDescriptor(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v21 - v9;
  v11 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v12 = objc_msgSend(v11, sel_bundleIdentifier);

  if (v12)
  {
    v13 = sub_190A47ADC();
    v15 = v14;

    sub_1909C7CC4((uint64_t)v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      swift_bridgeObjectRelease();
      sub_1908AA544((uint64_t)v3, &qword_1ECF6C788);
    }
    else
    {
      sub_190906900((uint64_t)v3, (uint64_t)v10);
      v17 = *(_QWORD **)(v0 + 16);
      v16 = *(_QWORD *)(v0 + 24);
      sub_1908AB890(0, &qword_1ECF6AAA0);
      sub_1908AF5D8((uint64_t)v10, (uint64_t)v8, type metadata accessor for WidgetDescriptor);
      swift_bridgeObjectRetain();
      sub_1908B53B8((uint64_t)v17, v16);
      v18 = (void *)sub_1908AF61C(v8, v13, v15, v17, v16);
      objc_msgSend(v18, sel_copy);
      sub_190A481B4();

      swift_unknownObjectRelease();
      sub_1908AB890(0, &qword_1ECF6D250);
      swift_dynamicCast();
      v19 = v21[1];
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6BDD0);
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_190A4B0F0;
      *(_QWORD *)(v20 + 32) = v19;
      v21[2] = v20;
      sub_190A47C74();
      sub_1908B5150((uint64_t)v10, type metadata accessor for WidgetDescriptor);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1909C8A94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  objc_class *Result;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  objc_super v58;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v51 - v6;
  v8 = type metadata accessor for WidgetDescriptor(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v53 = (uint64_t)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v55 = (uint64_t)&v51 - v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v51 - v14;
  v16 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v17 = objc_msgSend(v16, sel_bundleIdentifier);

  if (!v17)
    goto LABEL_21;
  v18 = sub_190A47ADC();
  v20 = v19;

  sub_1909C87FC();
  v54 = v21;
  sub_1909C84B8((uint64_t)v7);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  v23 = v22(v7, 1, v8);
  v52 = v18;
  if (v23 == 1)
  {
    sub_1908AA544((uint64_t)v7, &qword_1ECF6C788);
    v24 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_190906900((uint64_t)v7, (uint64_t)v15);
    v25 = *(_QWORD *)(v1 + 16);
    v26 = *(_QWORD *)(v1 + 24);
    sub_1908AB890(0, qword_1ECF6A3F0);
    v27 = (uint64_t)v15;
    v51 = v15;
    v28 = v8;
    v29 = v20;
    v30 = v55;
    sub_1908AF5D8(v27, v55, type metadata accessor for WidgetDescriptor);
    swift_bridgeObjectRetain();
    sub_1908B53B8(v25, v26);
    v31 = v30;
    v20 = v29;
    v8 = v28;
    v32 = (void *)sub_1909CBBC0(v31, v18, v20, v25, v26);
    objc_msgSend(v32, sel_copy);
    sub_190A481B4();

    swift_unknownObjectRelease();
    sub_1908AB890(0, qword_1ECF6A8E8);
    swift_dynamicCast();
    v33 = v56;
    __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6BDD0);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_190A4B0F0;
    *(_QWORD *)(v34 + 32) = v33;
    v57 = v34;
    sub_190A47C74();
    v24 = v57;
    sub_1908B5150((uint64_t)v51, type metadata accessor for WidgetDescriptor);
  }
  sub_1909C8000((uint64_t)v5);
  if (v22(v5, 1, v8) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1908AA544((uint64_t)v5, &qword_1ECF6C788);
    v35 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v36 = (uint64_t)v5;
    v37 = v53;
    sub_190906900(v36, v53);
    v38 = *(_QWORD *)(v1 + 16);
    v39 = *(_QWORD *)(v1 + 24);
    sub_1908AB890(0, &qword_1EE1EB9A0);
    v40 = v55;
    sub_1908AF5D8(v37, v55, type metadata accessor for WidgetDescriptor);
    swift_bridgeObjectRetain();
    sub_1908B53B8(v38, v39);
    v41 = (void *)sub_1909CC3A4(v40, v52, v20, v38, v39);
    objc_msgSend(v41, sel_copy);
    sub_190A481B4();

    swift_unknownObjectRelease();
    sub_1908AB890(0, &qword_1ECF6B010);
    swift_dynamicCast();
    v42 = v56;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6BDD0);
    v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_190A4B0F0;
    *(_QWORD *)(v43 + 32) = v42;
    v57 = v43;
    sub_190A47C74();
    v35 = v57;
    sub_1908B5150(v37, type metadata accessor for WidgetDescriptor);
  }
  v44 = v54;
  if (v54 >> 62)
  {
    swift_bridgeObjectRetain();
    v48 = sub_190A48484();
    swift_bridgeObjectRelease();
    if (v48 == 1)
      goto LABEL_14;
  }
  else if (*(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
  {
    goto LABEL_14;
  }
  if (v35 >> 62)
  {
    swift_bridgeObjectRetain();
    v49 = sub_190A48484();
    swift_bridgeObjectRelease();
    if (v49 == 1)
      goto LABEL_14;
    goto LABEL_12;
  }
  if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
  {
LABEL_14:
    Result = (objc_class *)type metadata accessor for DescriptorFetchResult();
    v46 = (char *)objc_allocWithZone(Result);
    v47 = sub_190954928(v44);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v46[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_widgetDescriptors] = v47;
    *(_QWORD *)&v46[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_activityDescriptors] = v35;
    *(_QWORD *)&v46[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_controlDescriptors] = v24;

    v58.receiver = v46;
    v58.super_class = Result;
    objc_msgSendSuper2(&v58, sel_init);
    return;
  }
LABEL_12:
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    v50 = sub_190A48484();
    swift_bridgeObjectRelease();
    if (v50 == 1)
      goto LABEL_14;
  }
  else if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
  {
    goto LABEL_14;
  }
  __break(1u);
LABEL_21:
  __break(1u);
}

uint64_t sub_1909C9054()
{
  return sub_1909C9698((void (*)(uint64_t))sub_1909C7CC4);
}

uint64_t sub_1909C9060()
{
  return sub_1909C9698((void (*)(uint64_t))sub_1909C8000);
}

double sub_1909C906C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  double result;
  uint64_t v27;
  _QWORD *v28;

  v5 = *v2;
  v6 = type metadata accessor for ViewSource(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v27 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v27 - v16;
  v28 = v2;
  v19 = type metadata accessor for ResolvedWidgetHost(0, *(_QWORD *)(v5 + 96), *(_QWORD *)(v5 + 104), v18);
  sub_1909FC30C(a1, v19, (uint64_t)&off_1E2CC0850, (uint64_t)v17);
  sub_1908AAA48((uint64_t)v17, (uint64_t)v15, &qword_1ECF6C788);
  v20 = type metadata accessor for WidgetDescriptor(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v15, 1, v20) == 1)
  {
    sub_1908AA544((uint64_t)v17, &qword_1ECF6C788);
    v17 = v15;
  }
  else
  {
    sub_1908AF5D8((uint64_t)v15, (uint64_t)v11, type metadata accessor for ViewSource);
    sub_1908B5150((uint64_t)v15, type metadata accessor for WidgetDescriptor);
    sub_1908AF5D8((uint64_t)v11, (uint64_t)v9, type metadata accessor for ViewSource);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      v23 = *((_QWORD *)v9 + 4);
      v24 = (void (*)(uint64_t))*((_QWORD *)v9 + 6);
      sub_1908B5150((uint64_t)v11, type metadata accessor for ViewSource);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1908B467C(v23);
      v25 = swift_release();
      v24(v25);
      swift_release();
      sub_1908AA544((uint64_t)v17, &qword_1ECF6C788);
      return result;
    }
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
      swift_release();
      swift_release();
      v22 = sub_190A46240();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v9, v22);
    }
    else
    {
      sub_1908B5150((uint64_t)v9, type metadata accessor for ViewSource);
    }
    sub_1908B5150((uint64_t)v11, type metadata accessor for ViewSource);
  }
  sub_1908AA544((uint64_t)v17, &qword_1ECF6C788);
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_QWORD *)(a2 + 32) = 0;
  return result;
}

uint64_t sub_1909C9328@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t);
  __int128 v12;
  uint64_t result;
  __int128 v14;
  _BYTE *v15;
  __int128 v16;
  __int128 v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1909C8000((uint64_t)v4);
  v8 = type metadata accessor for WidgetDescriptor(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8))
  {
    sub_1908AA544((uint64_t)v4, &qword_1ECF6C788);
  }
  else
  {
    sub_1908AF5D8((uint64_t)v4, (uint64_t)v7, type metadata accessor for ViewSource);
    sub_1908AA544((uint64_t)v4, &qword_1ECF6C788);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = &v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0) + 48)];
      v10 = sub_190A46240();
      v11 = *(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
      v12 = *(_OWORD *)v9;
      v16 = *((_OWORD *)v9 + 1);
      v17 = v12;
      result = v11(v7, v10);
      v14 = v16;
      *a1 = v17;
      a1[1] = v14;
      return result;
    }
    sub_1908B5150((uint64_t)v7, type metadata accessor for ViewSource);
  }
  sub_1909302C8();
  swift_allocError();
  *v15 = 0;
  return swift_willThrow();
}

uint64_t sub_1909C94D4()
{
  uint64_t v0;

  swift_release();
  sub_1908AA544(v0 + qword_1ECF6AA50, &qword_1ECF6AA58);
  sub_1908AA544(v0 + qword_1ECF6A738, &qword_1ECF6AA58);
  return sub_1908AA544(v0 + qword_1ECF69F18, &qword_1ECF6AA58);
}

uint64_t sub_1909C9538()
{
  uint64_t v0;

  sub_1908B53FC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_release();
  sub_1908AA544(v0 + qword_1ECF6AA50, &qword_1ECF6AA58);
  sub_1908AA544(v0 + qword_1ECF6A738, &qword_1ECF6AA58);
  sub_1908AA544(v0 + qword_1ECF69F18, &qword_1ECF6AA58);
  return v0;
}

uint64_t sub_1909C95A8()
{
  sub_1909C9538();
  return swift_deallocClassInstance();
}

void sub_1909C95CC()
{
  sub_1909C87FC();
}

uint64_t sub_1909C95EC()
{
  return sub_1909C9054();
}

void sub_1909C960C()
{
  sub_1909C8A94();
}

double sub_1909C962C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1909C906C(a1, a2);
}

uint64_t sub_1909C964C@<X0>(_OWORD *a1@<X8>)
{
  return sub_1909C9328(a1);
}

uint64_t sub_1909C966C()
{
  return sub_1909C9060();
}

uint64_t sub_1909C968C()
{
  return sub_1909C9698((void (*)(uint64_t))sub_1909C84B8);
}

uint64_t sub_1909C9698(void (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WidgetDescriptor(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1908AA544((uint64_t)v4, &qword_1ECF6C788);
    return MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_190906900((uint64_t)v4, (uint64_t)v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D300);
    v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_190A4A350;
    sub_190906900((uint64_t)v9, v10 + v11);
  }
  return v10;
}

uint64_t sub_1909C97CC()
{
  return sub_1909C9698((void (*)(uint64_t))sub_1909C84B8);
}

void static WidgetBundle.main()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v5 = sub_190A465A0();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ECF6D988);
  v6 = sub_190A46588();
  v7 = sub_190A47F68();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1908A7000, v6, v7, "main [WidgetBundle]", v8, 2u);
    MEMORY[0x194014398](v8, -1, -1);
  }

  type metadata accessor for ResolvedWidgetBundleHost();
  sub_190A4672C();
  v9 = sub_1909CD558((uint64_t)v4, a1);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  *(_QWORD *)&xmmword_1ECF6D940 = v9;
  *((_QWORD *)&xmmword_1ECF6D940 + 1) = &off_1E2CC0798;
  qword_1ECF6D950 = (uint64_t)&off_1E2CC0750;
  swift_release();
  v10 = sub_190A46588();
  v11 = sub_190A47F68();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    *(_DWORD *)v12 = 136315138;
    v17 = xmmword_1ECF6D940;
    v18 = qword_1ECF6D950;
    v19 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C7F8);
    v14 = sub_190A4813C();
    *(_QWORD *)&v17 = sub_1908B35C4(v14, v15, &v19);
    sub_190A48178();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v10, v11, "WidgetHost - %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v13, -1, -1);
    MEMORY[0x194014398](v12, -1, -1);
  }

  sub_1908AB890(0, &qword_1ECF6CFF8);
  v16 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WidgetExtensionXPCServer()), sel_init);
  sub_190A47F38();

}

uint64_t sub_1909C9ACC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v0 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for WidgetDescriptor(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v27 = (uint64_t)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23 - v7;
  sub_19090D084();
  result = sub_190A4693C();
  v10 = v29;
  v28 = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(v29 + 16);
  if (v11)
  {
    v12 = 0;
    v25 = v4;
    v26 = v0;
    v24 = v11;
    while (v12 < *(_QWORD *)(v10 + 16))
    {
      v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v14 = *(_QWORD *)(v4 + 72);
      sub_1908AF5D8(v10 + v13 + v14 * v12, (uint64_t)v8, type metadata accessor for WidgetDescriptor);
      sub_1908AF5D8((uint64_t)v8, (uint64_t)v2, type metadata accessor for ViewSource);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
          swift_release();
          swift_release();
          v16 = sub_190A46240();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v2, v16);
        }
        else
        {
          sub_1908B5150((uint64_t)v2, type metadata accessor for ViewSource);
        }
        result = sub_1908B5150((uint64_t)v8, type metadata accessor for WidgetDescriptor);
      }
      else
      {
        v17 = *((_QWORD *)v2 + 4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1908B467C(v17);
        swift_release();
        sub_190906900((uint64_t)v8, v27);
        v18 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1908B8C88(0, *(_QWORD *)(v18 + 16) + 1, 1);
          v18 = v28;
        }
        v20 = *(_QWORD *)(v18 + 16);
        v19 = *(_QWORD *)(v18 + 24);
        v4 = v25;
        if (v20 >= v19 >> 1)
        {
          sub_1908B8C88(v19 > 1, v20 + 1, 1);
          v18 = v28;
        }
        *(_QWORD *)(v18 + 16) = v20 + 1;
        result = sub_190906900(v27, v18 + v13 + v20 * v14);
        v11 = v24;
      }
      if (v11 == ++v12)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    v29 = MEMORY[0x1E0DEE9E8];
    v21 = swift_bridgeObjectRetain();
    v22 = sub_1909C7320(v21, (uint64_t)&v29);
    swift_release();
    swift_bridgeObjectRelease();
    return v22;
  }
  return result;
}

uint64_t sub_1909C9DD0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v0 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for WidgetDescriptor(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v22 = (uint64_t)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v21 - v7;
  sub_19090D084();
  result = sub_190A4693C();
  v10 = v25;
  v11 = MEMORY[0x1E0DEE9D8];
  v23 = *(_QWORD *)(v25 + 16);
  v24 = MEMORY[0x1E0DEE9D8];
  if (!v23)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return v11;
  }
  v12 = 0;
  v21[1] = v0;
  while (v12 < *(_QWORD *)(v10 + 16))
  {
    v14 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v15 = *(_QWORD *)(v4 + 72);
    sub_1908AF5D8(v10 + v14 + v15 * v12, (uint64_t)v8, type metadata accessor for WidgetDescriptor);
    sub_1908AF5D8((uint64_t)v8, (uint64_t)v2, type metadata accessor for ViewSource);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
        swift_release();
        swift_release();
        v17 = sub_190A46240();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v2, v17);
        sub_190906900((uint64_t)v8, v22);
        v18 = v24;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1908B8C88(0, *(_QWORD *)(v18 + 16) + 1, 1);
          v18 = v24;
        }
        v20 = *(_QWORD *)(v18 + 16);
        v19 = *(_QWORD *)(v18 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_1908B8C88(v19 > 1, v20 + 1, 1);
          v18 = v24;
        }
        *(_QWORD *)(v18 + 16) = v20 + 1;
        result = sub_190906900(v22, v18 + v14 + v20 * v15);
        goto LABEL_5;
      }
      sub_1908B5150((uint64_t)v2, type metadata accessor for ViewSource);
    }
    else
    {
      v13 = *((_QWORD *)v2 + 4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1908B467C(v13);
      swift_release();
    }
    result = sub_1908B5150((uint64_t)v8, type metadata accessor for WidgetDescriptor);
LABEL_5:
    if (v23 == ++v12)
    {
      v11 = v24;
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1909CA0A4()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 56))
  {
    v1 = *(_QWORD *)(v0 + 56);
  }
  else
  {
    v1 = sub_1909CA100();
    *(_QWORD *)(v0 + 56) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1909CA100()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v0 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for WidgetDescriptor(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v23 = (uint64_t)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  sub_19090D084();
  result = sub_190A4693C();
  v10 = v26;
  v25 = MEMORY[0x1E0DEE9D8];
  v24 = *(_QWORD *)(v26 + 16);
  if (!v24)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    v26 = MEMORY[0x1E0DEE9E8];
    v20 = swift_bridgeObjectRetain();
    v21 = sub_1909C7320(v20, (uint64_t)&v26);
    swift_release();
    swift_bridgeObjectRelease();
    return v21;
  }
  v11 = 0;
  v22 = v0;
  while (v11 < *(_QWORD *)(v10 + 16))
  {
    v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v14 = *(_QWORD *)(v4 + 72);
    sub_1908AF5D8(v10 + v13 + v14 * v11, (uint64_t)v8, type metadata accessor for WidgetDescriptor);
    sub_1908AF5D8((uint64_t)v8, (uint64_t)v2, type metadata accessor for ViewSource);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 1)
      {
        sub_1908B5150((uint64_t)v2, type metadata accessor for ViewSource);
        sub_190906900((uint64_t)v8, v23);
        v17 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1908B8C88(0, *(_QWORD *)(v17 + 16) + 1, 1);
          v17 = v25;
        }
        v19 = *(_QWORD *)(v17 + 16);
        v18 = *(_QWORD *)(v17 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1908B8C88(v18 > 1, v19 + 1, 1);
          v17 = v25;
        }
        *(_QWORD *)(v17 + 16) = v19 + 1;
        result = sub_190906900(v23, v17 + v13 + v19 * v14);
        goto LABEL_5;
      }
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
      swift_release();
      swift_release();
      v16 = sub_190A46240();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v2, v16);
    }
    else
    {
      v12 = *((_QWORD *)v2 + 4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1908B467C(v12);
      swift_release();
    }
    result = sub_1908B5150((uint64_t)v8, type metadata accessor for WidgetDescriptor);
LABEL_5:
    if (v24 == ++v11)
      goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1909CA400@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  _BYTE *v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, double);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v38 = a2;
  v3 = type metadata accessor for WidgetDescriptor(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_190A46204();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v44 = (uint64_t)&v38 - v12;
  if (qword_1EE1E6038 != -1)
    swift_once();
  v13 = sub_190A465A0();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EE1FD6E8);
  v14 = sub_190A46588();
  v15 = sub_190A47F44();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v40 = v4;
    v17 = v16;
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1908A7000, v14, v15, "WidgetHost activity search: START", v16, 2u);
    v4 = v40;
    MEMORY[0x194014398](v17, -1, -1);
  }

  v18 = sub_1908B51AC();
  v39 = v8;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v19(v44, a1, v7);
  v40 = v7;
  v19((uint64_t)v11, a1, v7);
  v20 = *(_QWORD *)(v18 + 16);
  if (!v20)
    goto LABEL_11;
  v21 = 0;
  v22 = v18 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v23 = *(_QWORD *)(v4 + 72);
  while (1)
  {
    sub_1908AF5D8(v22, (uint64_t)v6, type metadata accessor for WidgetDescriptor);
    swift_bridgeObjectRetain();
    sub_1909CA758((uint64_t)v6, (uint64_t)v11, &v41);
    sub_1908B5150((uint64_t)v6, type metadata accessor for WidgetDescriptor);
    swift_bridgeObjectRelease();
    v24 = v41;
    result = sub_1909CD69C(v41);
    if (v24)
      break;
    ++v21;
    v22 += v23;
    if (v20 == v21)
      goto LABEL_11;
  }
  if (v20 == v21)
  {
LABEL_11:
    v26 = v40;
    v27 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v27(v44, v40);
    swift_bridgeObjectRelease();
    v27((uint64_t)v11, v26);
    sub_1909302C8();
    swift_allocError();
    *v28 = 0;
    return swift_willThrow();
  }
  if (v21 >= *(_QWORD *)(v18 + 16))
  {
    __break(1u);
  }
  else
  {
    sub_1908AF5D8(v22, (uint64_t)v6, type metadata accessor for WidgetDescriptor);
    v29 = v44;
    v30 = sub_1909CA758((uint64_t)v6, v44, &v41);
    v31 = v40;
    v32 = *(void (**)(uint64_t, uint64_t, double))(v39 + 8);
    v32(v29, v40, v30);
    result = sub_1908B5150((uint64_t)v6, type metadata accessor for WidgetDescriptor);
    v33 = v41;
    if ((_QWORD)v41)
    {
      v34 = *((_QWORD *)&v41 + 1);
      v35 = v42;
      v36 = v43;
      swift_bridgeObjectRelease();
      result = ((uint64_t (*)(char *, uint64_t))v32)(v11, v31);
      v37 = v38;
      *v38 = v33;
      v37[1] = v34;
      v37[2] = v35;
      v37[3] = v36;
      return result;
    }
  }
  __break(1u);
  return result;
}

double sub_1909CA758@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(_BYTE *, uint64_t);
  _QWORD *v24;
  double result;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(_BYTE *, uint64_t);
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void (*v41)(_BYTE *, uint64_t);
  os_log_t v42;
  uint64_t v43;
  void (*v44)(_BYTE *, uint64_t);
  _QWORD *v45;
  _BYTE v46[12];
  int v47;
  os_log_t v48;
  uint64_t v49;
  void (*v50)(_BYTE *, uint64_t);
  uint64_t v51;
  double v52[3];
  _QWORD *v53;
  _BYTE *v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v55 = sub_190A46204();
  v57 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v56 = &v46[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v46[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_190A46240();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v54 = &v46[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = &v46[-v15];
  MEMORY[0x1E0C80A78](v14);
  v18 = &v46[-v17];
  sub_1908AF5D8(a1, (uint64_t)v9, type metadata accessor for ViewSource);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v53 = a3;
    v19 = &v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0) + 48)];
    v20 = *(_QWORD *)v19;
    *(_OWORD *)v52 = *(_OWORD *)(v19 + 8);
    v21 = *((_QWORD *)v19 + 3);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v18, v9, v10);
    sub_190A461D4();
    v22 = sub_190A46228();
    v23 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
    v23(v16, v10);
    if ((v22 & 1) != 0)
    {
      v23(v18, v10);
      v24 = v53;
      *v53 = v20;
      result = v52[0];
      *(_OWORD *)(v24 + 1) = *(_OWORD *)v52;
      v24[3] = v21;
    }
    else
    {
      v50 = v23;
      v51 = v21;
      if (qword_1EE1E6038 != -1)
        swift_once();
      v26 = sub_190A465A0();
      __swift_project_value_buffer(v26, (uint64_t)qword_1EE1FD6E8);
      v27 = v54;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16))(v54, v18, v10);
      v29 = v56;
      v28 = v57;
      v30 = v55;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v57 + 16))(v56, a2, v55);
      v31 = sub_190A46588();
      v32 = sub_190A47F44();
      v33 = v32;
      if (os_log_type_enabled(v31, v32))
      {
        v34 = swift_slowAlloc();
        v49 = swift_slowAlloc();
        v59 = v49;
        *(_DWORD *)v34 = 136446466;
        v48 = v31;
        v47 = v33;
        v35 = sub_190A4621C();
        v58 = sub_1908B35C4(v35, v36, &v59);
        sub_190A48178();
        swift_bridgeObjectRelease();
        v37 = v50;
        v50(v27, v10);
        *(_WORD *)(v34 + 12) = 2082;
        sub_190A461D4();
        v38 = sub_190A4621C();
        v40 = v39;
        v37(v16, v10);
        v41 = v37;
        v58 = sub_1908B35C4(v38, v40, &v59);
        sub_190A48178();
        swift_bridgeObjectRelease();
        (*(void (**)(_BYTE *, uint64_t))(v57 + 8))(v56, v30);
        v42 = v48;
        _os_log_impl(&dword_1908A7000, v48, (os_log_type_t)v47, "WidgetHost session search: Candidate Failure - (%{public}s) vs. (%{public}s)", (uint8_t *)v34, 0x16u);
        v43 = v49;
        swift_arrayDestroy();
        MEMORY[0x194014398](v43, -1, -1);
        MEMORY[0x194014398](v34, -1, -1);

        swift_release();
        swift_release();
        v41(v18, v10);
      }
      else
      {

        swift_release();
        swift_release();
        (*(void (**)(_BYTE *, uint64_t))(v28 + 8))(v29, v30);
        v44 = v50;
        v50(v27, v10);
        v44(v18, v10);
      }
      v45 = v53;
      result = 0.0;
      *(_OWORD *)v53 = 0u;
      *((_OWORD *)v45 + 1) = 0u;
    }
  }
  else
  {
    sub_1908B5150((uint64_t)v9, type metadata accessor for ViewSource);
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1909CABE4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  __int128 v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  _BYTE *v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  _OWORD v33[2];
  uint64_t v34;

  v4 = v3;
  v34 = a2;
  v30 = a1;
  v6 = type metadata accessor for WidgetDescriptor(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE1E6038 != -1)
    swift_once();
  v10 = sub_190A465A0();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EE1FD6E8);
  v11 = sub_190A46588();
  v12 = sub_190A47F44();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_1908A7000, v11, v12, "WidgetHost activity context search: START", v13, 2u);
    MEMORY[0x194014398](v13, -1, -1);
  }

  v14 = sub_1908B51AC();
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v28[1] = v14;
    v29 = a3;
    v16 = v14 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v17 = *(_QWORD *)(v7 + 72);
    swift_bridgeObjectRetain();
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1908AF5D8(v16, (uint64_t)v9, type metadata accessor for WidgetDescriptor);
      sub_1909CAEF4((uint64_t)v9, v34, v33);
      if (v4)
      {
        sub_1908B5150((uint64_t)v9, type metadata accessor for WidgetDescriptor);
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        __break(1u);
        return result;
      }
      v4 = 0;
      sub_1908B5150((uint64_t)v9, type metadata accessor for WidgetDescriptor);
      if (*(_QWORD *)&v33[0])
      {
        v32 = v33[0];
        v31 = v33[1];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = sub_1908F3594(0, v18[2] + 1, 1, v18);
        v21 = v18[2];
        v20 = v18[3];
        v22 = v32;
        if (v21 >= v20 >> 1)
        {
          v23 = sub_1908F3594((_QWORD *)(v20 > 1), v21 + 1, 1, v18);
          v22 = v32;
          v18 = v23;
        }
        v18[2] = v21 + 1;
        v19 = &v18[4 * v21];
        *((_OWORD *)v19 + 2) = v22;
        *((_OWORD *)v19 + 3) = v31;
      }
      v16 += v17;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease_n();
    a3 = v29;
    if (!v18[2])
      goto LABEL_18;
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
  {
LABEL_16:
    v24 = v18[4];
    v25 = v18[7];
    v32 = *(_OWORD *)(v18 + 5);
    swift_retain();
    swift_retain();
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a3 = v24;
    *(_OWORD *)(a3 + 8) = v32;
    *(_QWORD *)(a3 + 24) = v25;
    return result;
  }
LABEL_18:
  swift_bridgeObjectRelease();
  sub_1909302C8();
  swift_allocError();
  *v27 = 0;
  return swift_willThrow();
}

double sub_1909CAEF4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  double result;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t *v39;
  int v40;
  os_log_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  __int128 v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v47 = a2;
  v5 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_190A46240();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v46 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v39 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v39 - v15;
  sub_1908AF5D8(a1, (uint64_t)v7, type metadata accessor for ViewSource);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v44 = a3;
    v17 = &v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0) + 48)];
    v18 = *(_QWORD *)v17;
    v45 = *(_OWORD *)(v17 + 8);
    v43 = *((_QWORD *)v17 + 3);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v16, v7, v8);
    sub_190A46234();
    v19 = sub_190A46228();
    v20 = *(void (**)(char *, uint64_t))(v9 + 8);
    v20(v14, v8);
    if ((v19 & 1) != 0)
    {
      v20(v16, v8);
      v21 = v43;
      v22 = v44;
      *v44 = v18;
      result = *(double *)&v45;
      *(_OWORD *)(v22 + 1) = v45;
      v22[3] = v21;
      return result;
    }
    if (qword_1EE1E6038 != -1)
      swift_once();
    v24 = sub_190A465A0();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EE1FD6E8);
    v25 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v26 = v46;
    v25(v46, v16, v8);
    v27 = sub_190A46588();
    v28 = sub_190A47F44();
    v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      v30 = swift_slowAlloc();
      v41 = v27;
      v31 = v30;
      v42 = swift_slowAlloc();
      v50 = v42;
      *(_DWORD *)v31 = 136446466;
      v40 = v29;
      v32 = sub_190A4621C();
      v48 = sub_1908B35C4(v32, v33, &v50);
      v39 = &v49;
      sub_190A48178();
      swift_bridgeObjectRelease();
      v20(v26, v8);
      *(_WORD *)(v31 + 12) = 2082;
      sub_190A46234();
      v34 = sub_190A4621C();
      v36 = v35;
      v20(v14, v8);
      v48 = sub_1908B35C4(v34, v36, &v50);
      sub_190A48178();
      swift_bridgeObjectRelease();
      v37 = v41;
      _os_log_impl(&dword_1908A7000, v41, (os_log_type_t)v40, "WidgetHost session context search: Candidate Failure - (%{public}s) vs. (%{public}s)", (uint8_t *)v31, 0x16u);
      v38 = v42;
      swift_arrayDestroy();
      MEMORY[0x194014398](v38, -1, -1);
      MEMORY[0x194014398](v31, -1, -1);

      swift_release();
      swift_release();
    }
    else
    {

      swift_release();
      swift_release();
      v20(v26, v8);
    }
    v20(v16, v8);
    a3 = v44;
  }
  else
  {
    sub_1908B5150((uint64_t)v7, type metadata accessor for ViewSource);
  }
  result = 0.0;
  *a3 = 0u;
  a3[1] = 0u;
  return result;
}

double sub_1909CB2F4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  double result;
  _BYTE v28[16];
  uint64_t v29;

  v4 = type metadata accessor for ViewSource(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v28[-v8];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v15 = &v28[-v14];
  v16 = sub_1908B5208();
  v29 = a1;
  v17 = sub_1909C6EC4((void (*)(_QWORD))sub_1909CD684, (uint64_t)v28, v16);
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v17 + 16);
  v19 = type metadata accessor for WidgetDescriptor(0);
  v20 = *(_QWORD *)(v19 - 8);
  if (v18)
  {
    sub_1908AF5D8(v17 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80)), (uint64_t)v15, type metadata accessor for WidgetDescriptor);
    v21 = 0;
  }
  else
  {
    v21 = 1;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v15, v21, 1, v19);
  swift_bridgeObjectRelease();
  sub_1908AAA48((uint64_t)v15, (uint64_t)v13, &qword_1ECF6C788);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19) == 1)
  {
    sub_1908AA544((uint64_t)v15, &qword_1ECF6C788);
    v15 = v13;
  }
  else
  {
    sub_1908AF5D8((uint64_t)v13, (uint64_t)v9, type metadata accessor for ViewSource);
    sub_1908B5150((uint64_t)v13, type metadata accessor for WidgetDescriptor);
    sub_1908AF5D8((uint64_t)v9, (uint64_t)v7, type metadata accessor for ViewSource);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      v24 = *((_QWORD *)v7 + 4);
      v25 = (void (*)(uint64_t))*((_QWORD *)v7 + 6);
      sub_1908B5150((uint64_t)v9, type metadata accessor for ViewSource);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1908B467C(v24);
      v26 = swift_release();
      v25(v26);
      swift_release();
      sub_1908AA544((uint64_t)v15, &qword_1ECF6C788);
      return result;
    }
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
      swift_release();
      swift_release();
      v23 = sub_190A46240();
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v7, v23);
    }
    else
    {
      sub_1908B5150((uint64_t)v7, type metadata accessor for ViewSource);
    }
    sub_1908B5150((uint64_t)v9, type metadata accessor for ViewSource);
  }
  sub_1908AA544((uint64_t)v15, &qword_1ECF6C788);
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_QWORD *)(a2 + 32) = 0;
  return result;
}

uint64_t sub_1909CB604()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1909CB630()
{
  uint64_t v0;

  sub_1908B53FC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1909CB674()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *v0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v3 = objc_msgSend(v2, sel_bundleIdentifier);

  if (v3)
  {
    v4 = sub_190A47ADC();
    v6 = v5;

    v7 = sub_1908B5208();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1909CCD7C(v7, v4, v6, v1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1909CB754()
{
  return sub_1908B5208();
}

double sub_1909CB774@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1909CB2F4(a1, a2);
}

uint64_t sub_1909CB794@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1909CA400(a1, a2);
}

uint64_t sub_1909CB7B4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1909CABE4(a1, a2, a3);
}

uint64_t sub_1909CB7D4()
{
  return sub_1908B51AC();
}

uint64_t sub_1909CB7F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v8;
  char v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  unint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1908AF5D8(a1, (uint64_t)v5, v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
      swift_release();
      swift_release();
      v8 = sub_190A46240();
      v36 = 0u;
      v37 = 0u;
      v38 = 0;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v5, v8);
      if (!*((_QWORD *)&v37 + 1))
      {
        sub_1908AA544((uint64_t)&v36, &qword_1EE1EE310);
        v9 = 1;
        return v9 & 1;
      }
    }
    else
    {
      *((_QWORD *)&v37 + 1) = &type metadata for ControlViewSource;
      v38 = sub_1909CD6CC();
      v15 = (_OWORD *)swift_allocObject();
      *(_QWORD *)&v36 = v15;
      v16 = *((_OWORD *)v5 + 3);
      v15[3] = *((_OWORD *)v5 + 2);
      v15[4] = v16;
      v15[5] = *((_OWORD *)v5 + 4);
      *(_OWORD *)((char *)v15 + 89) = *(_OWORD *)(v5 + 73);
      v17 = *((_OWORD *)v5 + 1);
      v15[1] = *(_OWORD *)v5;
      v15[2] = v17;
    }
  }
  else
  {
    v10 = *(_OWORD *)v5;
    v33 = *((_OWORD *)v5 + 1);
    v34 = v10;
    v11 = *((_QWORD *)v5 + 4);
    v12 = *((_QWORD *)v5 + 5);
    *((_QWORD *)&v37 + 1) = &type metadata for TimelineViewSource;
    v38 = sub_1909CD758();
    v13 = swift_allocObject();
    *(_QWORD *)&v36 = v13;
    v14 = v33;
    *(_OWORD *)(v13 + 16) = v34;
    *(_OWORD *)(v13 + 32) = v14;
    *(_QWORD *)(v13 + 48) = v11;
    *(_QWORD *)(v13 + 56) = v12;
    *(_OWORD *)(v13 + 64) = *((_OWORD *)v5 + 3);
  }
  sub_1908B4BBC(&v36, (uint64_t)v39);
  v18 = v40;
  v19 = v41;
  __swift_project_boxed_opaque_existential_1(v39, v40);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
  v9 = sub_1908F5490((uint64_t *)&v36, v20, v21);
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v22 = sub_190A465A0();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ECF6D988);
    sub_1908BBDC8((uint64_t)v39, (uint64_t)&v36);
    v23 = sub_190A46588();
    v24 = sub_190A47F68();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v34 = v1;
      v27 = v26;
      v42 = v26;
      *(_DWORD *)v25 = 136315138;
      *(_QWORD *)&v33 = v25 + 4;
      v28 = *((_QWORD *)&v37 + 1);
      v29 = v38;
      __swift_project_boxed_opaque_existential_1(&v36, *((uint64_t *)&v37 + 1));
      v30 = (*(uint64_t (**)(uint64_t, unint64_t))(v29 + 16))(v28, v29);
      v35 = sub_1908B35C4(v30, v31, &v42);
      sub_190A48178();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
      _os_log_impl(&dword_1908A7000, v23, v24, "Found duplicate widgets of kind %s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v27, -1, -1);
      MEMORY[0x194014398](v25, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    }

  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return v9 & 1;
}

uint64_t sub_1909CBBA0()
{
  return sub_1909CA0A4();
}

uint64_t sub_1909CBBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __int128 *v18;
  uint64_t (*v19)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  void *v25;
  void *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  unint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  char v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t result;
  _QWORD v47[2];
  unint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _OWORD v54[2];
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _OWORD v59[3];

  v48 = a5;
  v49 = a4;
  v47[0] = a3;
  v6 = (int *)type metadata accessor for WidgetDescriptor(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A530);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  MEMORY[0x1E0C80A78](v12);
  v13 = type metadata accessor for ViewSource(0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (__int128 *)((char *)v47 - v17);
  sub_1908AF5D8(a1, (uint64_t)v47 - v17, v19);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
      swift_release();
      swift_release();
      v21 = sub_190A46240();
      v50 = 0u;
      v51 = 0u;
      v52 = 0u;
      v53 = 0u;
      memset(v54, 0, 25);
      (*(void (**)(__int128 *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v18, v21);
    }
    else
    {
      v22 = v18[3];
      v52 = v18[2];
      v53 = v22;
      v54[0] = v18[4];
      *(_OWORD *)((char *)v54 + 9) = *(__int128 *)((char *)v18 + 73);
      v23 = v18[1];
      v50 = *v18;
      v51 = v23;
    }
  }
  else
  {
    sub_1908B5150((uint64_t)v18, type metadata accessor for ViewSource);
    v50 = 0u;
    v51 = 0u;
    v52 = 0u;
    v53 = 0u;
    memset(v54, 0, 25);
  }
  if (*((_QWORD *)&v50 + 1))
  {
    v57 = v52;
    v58 = v53;
    v59[0] = v54[0];
    *(_OWORD *)((char *)v59 + 9) = *(_OWORD *)((char *)v54 + 9);
    v55 = v50;
    v56 = v51;
    sub_190A48058();
    sub_190A462F4();
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A528);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v11, 1, 1, v24);
    v25 = (void *)sub_190A4804C();
    swift_bridgeObjectRetain();
    v26 = (void *)sub_190A47AC4();
    swift_bridgeObjectRelease();
    v27 = v57;
    v28 = (*(uint64_t (**)(_QWORD, _QWORD))(*((_QWORD *)&v57 + 1) + 8))(v57, *((_QWORD *)&v57 + 1));
    v29 = *((_QWORD *)&v56 + 1);
    if (*((_QWORD *)&v56 + 1))
    {
      swift_bridgeObjectRetain();
      v30 = (void *)sub_190A47AC4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v30 = 0;
    }
    v31 = v48;
    v32 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v33 = objc_msgSend(v32, sel_initWithExtensionIdentity_kind_controlType_intentType_, v25, v26, v28, v30, v47[0]);

    v34 = *(_QWORD *)(a1 + v6[10]);
    v35 = v33;
    objc_msgSend(v35, sel_setEnablement_, v34);
    if (*(_QWORD *)(a1 + v6[5] + 8))
    {
      swift_bridgeObjectRetain();
      v36 = (void *)sub_190A47AC4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v36 = 0;
    }
    objc_msgSend(v35, sel_setDisplayName_, v36);

    if (*(_QWORD *)(a1 + v6[6] + 8))
    {
      swift_bridgeObjectRetain();
      v37 = (void *)sub_190A47AC4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v37 = 0;
    }
    objc_msgSend(v35, sel_setWidgetDescription_, v37);

    if (*(_QWORD *)(a1 + v6[12] + 8))
    {
      swift_bridgeObjectRetain();
      v38 = (void *)sub_190A47AC4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v38 = 0;
    }
    objc_msgSend(v35, sel_setEventMachServiceName_, v38);

    v39 = (void *)sub_190A45FE8();
    objc_msgSend(v35, sel_setLocaleToken_, v39);

    v40 = (void *)sub_190A47AC4();
    objc_msgSend(v35, sel_setSdkVersion_, v40);

    objc_msgSend(v35, sel_setHiddenBySensitiveUI_, *(unsigned __int8 *)(a1 + v6[24]));
    v41 = (void *)(*(uint64_t (**)(_QWORD, _QWORD))(*((_QWORD *)&v27 + 1) + 16))(v27, *((_QWORD *)&v27 + 1));
    objc_msgSend(v35, sel_setActionMetadata_, v41);

    if (*(_BYTE *)(a1 + v6[28]) == 1)
    {
      v42 = *(_BYTE *)(a1 + v6[29]) ^ 1;
    }
    else if (*(_BYTE *)(a1 + v6[26]) == 1)
    {
      v42 = *(_BYTE *)(a1 + v6[27]);
    }
    else
    {
      v42 = 1;
    }
    objc_msgSend(v35, sel_setHiddenControl_, v42 & 1);
    objc_msgSend(v35, sel_setDisablesControlStateCaching_, *(unsigned __int8 *)(a1 + v6[30]));
    objc_msgSend(v35, sel_setShowsContextualMenu_, *(unsigned __int8 *)(a1 + v6[31]));
    objc_msgSend(v35, sel_setPreferredControlSize_, *(_QWORD *)(a1 + v6[33]));
    if (v29)
      v43 = *(unsigned __int8 *)(a1 + v6[20]);
    else
      v43 = 0;
    objc_msgSend(v35, sel_setPromptsForUserConfiguration_, v43);
    objc_msgSend(v35, sel_setSupportsPush_, *(_QWORD *)(a1 + v6[32]) != 0);
    v44 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v45 = objc_msgSend(v44, sel_bundlePath);

    sub_190A47ADC();
    LOBYTE(v44) = sub_190A47B60();
    swift_bridgeObjectRelease();
    objc_msgSend(v35, sel_setVisibility_, v44 & 1);

    sub_1908B53FC(v49, v31);
    sub_1908CD934((uint64_t)&v55);
    sub_1908B5150(a1, type metadata accessor for WidgetDescriptor);
    return (uint64_t)v35;
  }
  else
  {
    sub_1908AA544((uint64_t)&v50, &qword_1EE1EE318);
    sub_1908AF5D8(a1, (uint64_t)v8, type metadata accessor for WidgetDescriptor);
    *(_QWORD *)&v55 = 0;
    *((_QWORD *)&v55 + 1) = 0xE000000000000000;
    sub_190A48298();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v55 = 0xD00000000000002BLL;
    *((_QWORD *)&v55 + 1) = 0x8000000190A64190;
    sub_1908AF5D8((uint64_t)v8, (uint64_t)v16, type metadata accessor for ViewSource);
    sub_190A47B00();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    result = sub_190A48448();
    __break(1u);
  }
  return result;
}

uint64_t sub_1909CC3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  int *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  void *v39;
  uint64_t result;
  _QWORD v41[2];
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;

  v43 = a4;
  v44 = a5;
  v41[1] = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A530);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  MEMORY[0x1E0C80A78](v9);
  v10 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB998);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_190A46240();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v45 = (char *)v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1908AF5D8(a1, (uint64_t)v12, type metadata accessor for ViewSource);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
      swift_release();
      swift_release();
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v15, v12, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
      sub_1908B5150((uint64_t)v12, type metadata accessor for ViewSource);
    }
  }
  else
  {
    sub_1908B5150((uint64_t)v12, type metadata accessor for ViewSource);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1908AA544((uint64_t)v15, &qword_1EE1EB998);
    result = sub_190A48448();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v45, v15, v16);
    sub_1908AA2F4(qword_1EE1EA8F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F828]);
    v20 = (void *)sub_190A4627C();
    v21 = sub_190A46000();
    v23 = v22;

    sub_190A48058();
    sub_190A462F4();
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A528);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 1, 1, v24);
    v25 = (void *)sub_190A4804C();
    v26 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v42 = v23;
    v27 = (void *)sub_190A45FE8();
    v28 = objc_msgSend(v26, sel_initWithExtensionIdentity_activityAttributesType_, v25, v27);

    v29 = (int *)type metadata accessor for WidgetDescriptor(0);
    if (*(_QWORD *)(a1 + v29[5] + 8))
    {
      v30 = v28;
      swift_bridgeObjectRetain();
      v31 = (void *)sub_190A47AC4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v32 = v28;
      v31 = 0;
    }
    objc_msgSend(v28, sel_setDisplayName_, v31);

    if (*(_QWORD *)(a1 + v29[6] + 8))
    {
      swift_bridgeObjectRetain();
      v33 = (void *)sub_190A47AC4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v33 = 0;
    }
    objc_msgSend(v28, sel_setWidgetDescription_, v33);

    v34 = v21;
    if (*(_QWORD *)(a1 + v29[12] + 8))
    {
      swift_bridgeObjectRetain();
      v35 = (void *)sub_190A47AC4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = 0;
    }
    objc_msgSend(v28, sel_setEventMachServiceName_, v35);

    v36 = v43;
    v37 = v44;
    v38 = (void *)sub_190A45FE8();
    objc_msgSend(v28, sel_setLocaleToken_, v38);

    v39 = (void *)sub_190A47AC4();
    objc_msgSend(v28, sel_setSdkVersion_, v39);

    objc_msgSend(v28, sel_setPreferredBackgroundStyle_, *(unsigned __int8 *)(a1 + v29[13]));
    objc_msgSend(v28, sel_setSupportsVibrantContent_, *(unsigned __int8 *)(a1 + v29[14]));
    sub_1908B53FC(v34, v42);

    sub_1908B53FC(v36, v37);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v45, v16);
    sub_1908B5150(a1, type metadata accessor for WidgetDescriptor);
    return (uint64_t)v28;
  }
  return result;
}

uint64_t type metadata accessor for ResolvedWidgetHost(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ResolvedWidgetHost);
}

uint64_t sub_1909CC954(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_1908B35C4(v6, v7, a3);
  v8 = *a1 + 8;
  sub_190A48178();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1909CC9C4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1909CCA58(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1909CCC30(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1909CCC30(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1909CCA58(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1909CCBCC(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_190A482A4();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_190A4843C();
      __break(1u);
LABEL_10:
      v2 = sub_190A47B54();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_190A484CC();
    __break(1u);
LABEL_14:
    result = sub_190A4843C();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1909CCBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D398);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1909CCC30(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D398);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1909CCD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t result;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  void *v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v9 = type metadata accessor for WidgetDescriptor(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v13)
  {
    v21[0] = v4;
    v25 = MEMORY[0x1E0DEE9D8];
    sub_190A4837C();
    v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v24 = a2;
    v16 = a1 + v15;
    v17 = sub_1908AB890(0, &qword_1ECF6AAA0);
    v19 = *(_QWORD **)(a4 + 16);
    v18 = *(_QWORD *)(a4 + 24);
    v22 = *(_QWORD *)(v10 + 72);
    v23 = v17;
    v21[1] = MEMORY[0x1E0DEE9B8] + 8;
    do
    {
      sub_1908AF5D8(v16, (uint64_t)v12, type metadata accessor for WidgetDescriptor);
      swift_bridgeObjectRetain();
      sub_1908B53B8((uint64_t)v19, v18);
      v20 = (void *)sub_1908AF61C(v12, v24, a3, v19, v18);
      objc_msgSend(v20, sel_copy);
      sub_190A481B4();

      swift_unknownObjectRelease();
      sub_1908AB890(0, &qword_1ECF6D250);
      swift_dynamicCast();
      sub_190A48358();
      sub_190A48388();
      sub_190A48394();
      sub_190A48364();
      v16 += v22;
      --v13;
    }
    while (v13);
    return v25;
  }
  return result;
}

uint64_t sub_1909CCF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v9 = type metadata accessor for WidgetDescriptor(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v13)
  {
    v21[0] = v4;
    v25 = MEMORY[0x1E0DEE9D8];
    sub_190A4837C();
    v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v24 = a2;
    v16 = a1 + v15;
    v17 = sub_1908AB890(0, qword_1ECF6A3F0);
    v19 = *(_QWORD *)(a4 + 16);
    v18 = *(_QWORD *)(a4 + 24);
    v22 = *(_QWORD *)(v10 + 72);
    v23 = v17;
    v21[1] = MEMORY[0x1E0DEE9B8] + 8;
    do
    {
      sub_1908AF5D8(v16, (uint64_t)v12, type metadata accessor for WidgetDescriptor);
      swift_bridgeObjectRetain();
      sub_1908B53B8(v19, v18);
      v20 = (void *)sub_1909CBBC0((uint64_t)v12, v24, a3, v19, v18);
      objc_msgSend(v20, sel_copy);
      sub_190A481B4();

      swift_unknownObjectRelease();
      sub_1908AB890(0, qword_1ECF6A8E8);
      swift_dynamicCast();
      sub_190A48358();
      sub_190A48388();
      sub_190A48394();
      sub_190A48364();
      v16 += v22;
      --v13;
    }
    while (v13);
    return v25;
  }
  return result;
}

uint64_t sub_1909CD124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v9 = type metadata accessor for WidgetDescriptor(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v13)
  {
    v21[0] = v4;
    v25 = MEMORY[0x1E0DEE9D8];
    sub_190A4837C();
    v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v24 = a2;
    v16 = a1 + v15;
    v17 = sub_1908AB890(0, &qword_1EE1EB9A0);
    v19 = *(_QWORD *)(a4 + 16);
    v18 = *(_QWORD *)(a4 + 24);
    v22 = *(_QWORD *)(v10 + 72);
    v23 = v17;
    v21[1] = MEMORY[0x1E0DEE9B8] + 8;
    do
    {
      sub_1908AF5D8(v16, (uint64_t)v12, type metadata accessor for WidgetDescriptor);
      swift_bridgeObjectRetain();
      sub_1908B53B8(v19, v18);
      v20 = (void *)sub_1909CC3A4((uint64_t)v12, v24, a3, v19, v18);
      objc_msgSend(v20, sel_copy);
      sub_190A481B4();

      swift_unknownObjectRelease();
      sub_1908AB890(0, &qword_1ECF6B010);
      swift_dynamicCast();
      sub_190A48358();
      sub_190A48388();
      sub_190A48394();
      sub_190A48364();
      v16 += v22;
      --v13;
    }
    while (v13);
    return v25;
  }
  return result;
}

uint64_t sub_1909CD2F8(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v2 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 96);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v2[qword_1ECF6AA50];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v10(&v2[qword_1ECF6A738], 1, 1, v9);
  v10(&v2[qword_1ECF69F18], 1, 1, v9);
  sub_190A46684();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  swift_retain();
  *((_QWORD *)v2 + 4) = sub_190A46678();
  swift_release();
  return sub_1909FC090();
}

uint64_t sub_1909CD430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for ResolvedWidgetHost(0, *(_QWORD *)(v4 + 96), *(_QWORD *)(v4 + 104), a4);
  swift_allocObject();
  return sub_1909CD2F8(a1);
}

uint64_t type metadata accessor for ResolvedWidgetBundleHost()
{
  return objc_opt_self();
}

uint64_t sub_1909CD490(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A46954();
  v2[6] = 0;
  v2[7] = 0;
  v2[5] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, a2);
  swift_retain();
  v2[4] = sub_190A46948();
  swift_release();
  return sub_1909FC090();
}

uint64_t sub_1909CD558(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ResolvedWidgetBundleHost();
  swift_allocObject();
  return sub_1909CD490(a1, a2);
}

void sub_1909CD5AC()
{
  unint64_t v0;

  sub_1909CD62C();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

void sub_1909CD62C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ECF6AA40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6C788);
    v0 = sub_190A48148();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ECF6AA40);
  }
}

uint64_t sub_1909CD684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1909FC864(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1909CD69C(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_1909CD6CC()
{
  unint64_t result;

  result = qword_1EE1EB6A8;
  if (!qword_1EE1EB6A8)
  {
    result = MEMORY[0x19401429C](&unk_190A559D0, &type metadata for ControlViewSource);
    atomic_store(result, (unint64_t *)&qword_1EE1EB6A8);
  }
  return result;
}

uint64_t sub_1909CD710()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(v0 + 104) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return swift_deallocObject();
}

unint64_t sub_1909CD758()
{
  unint64_t result;

  result = qword_1ECF6B758;
  if (!qword_1ECF6B758)
  {
    result = MEMORY[0x19401429C](&unk_190A5A98C, &type metadata for TimelineViewSource);
    atomic_store(result, (unint64_t *)&qword_1ECF6B758);
  }
  return result;
}

uint64_t sub_1909CD79C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 48))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909CD7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AA58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1909CD828(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for GaugeTintVibrancyModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1908D1B74(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for GaugeTintVibrancyModifier(uint64_t a1)
{
  return sub_1908CE654(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for GaugeTintVibrancyModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1908D1B74(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1908CE654(v5, v6);
  return a1;
}

uint64_t assignWithTake for GaugeTintVibrancyModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1908CE654(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for GaugeTintVibrancyModifier()
{
  return &type metadata for GaugeTintVibrancyModifier;
}

uint64_t sub_1909CD960()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1909CD970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v26 = a1;
  v28 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B180);
  v25 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B160);
  MEMORY[0x1E0C80A78](v27);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_190A47638();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B188);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)v2;
  v16 = *(_BYTE *)(v2 + 8);
  sub_1908D1B74(v15, v16);
  sub_19096F94C(v15, v16, &v29);
  sub_1908CE654(v15, v16);
  if (v29 == 2)
  {
    sub_190A4765C();
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0CDF3E0], v8);
    sub_190A476A4();
    v17 = sub_1909CDC44();
    sub_190A47578();
    swift_release();
    swift_release();
    v18 = v24;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v7, v14, v12);
    swift_storeEnumTagMultiPayload();
    v29 = v3;
    v30 = v17;
    swift_getOpaqueTypeConformance2();
    sub_190A46F90();
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v14, v12);
  }
  else
  {
    v20 = v25;
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
    v21(v5, v26, v3);
    v21(v7, (uint64_t)v5, v3);
    swift_storeEnumTagMultiPayload();
    v22 = sub_1909CDC44();
    v29 = v3;
    v30 = v22;
    swift_getOpaqueTypeConformance2();
    sub_190A46F90();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  }
}

unint64_t sub_1909CDC44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECF6B178;
  if (!qword_1ECF6B178)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6B180);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDBF10], v1);
    atomic_store(result, (unint64_t *)&qword_1ECF6B178);
  }
  return result;
}

unint64_t sub_1909CDC94()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];
  unint64_t v3;

  result = qword_1ECF6B168;
  if (!qword_1ECF6B168)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6B170);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6B180);
    v3 = sub_1909CDC44();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = v3;
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6B168);
  }
  return result;
}

uint64_t ControlTemplateType.init<A>(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  char *v22;

  v6 = type metadata accessor for ControlTemplatePicker(0);
  MEMORY[0x1E0C80A78](v6);
  v22 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ControlTemplateButton(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ControlTemplateToggle(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, a1, a2);
  if (swift_dynamicCast())
  {
    v18 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
    v18(a1, a2);
    sub_1908BD0B4((uint64_t)v14, a3, type metadata accessor for ControlTemplateToggle);
LABEL_7:
    type metadata accessor for ControlTemplateType();
    swift_storeEnumTagMultiPayload();
    return v18(v17, a2);
  }
  if (swift_dynamicCast())
  {
    v18 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
    v18(a1, a2);
    sub_1908BD0B4((uint64_t)v10, a3, type metadata accessor for ControlTemplateButton);
    goto LABEL_7;
  }
  v19 = (uint64_t)v22;
  if (swift_dynamicCast())
  {
    v18 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
    v18(a1, a2);
    sub_1908BD0B4(v19, a3, type metadata accessor for ControlTemplatePicker);
    goto LABEL_7;
  }
  result = sub_190A48448();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ControlTemplateType()
{
  uint64_t result;

  result = qword_1ECF6BEC0;
  if (!qword_1ECF6BEC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ControlTemplateType.anyTemplate.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t (*v9)(uint64_t);
  unint64_t *v10;
  const char *v11;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1908AF5D8(v2, (uint64_t)v6, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for ControlTemplateButton;
      a1[3] = type metadata accessor for ControlTemplateButton(0);
      v10 = (unint64_t *)&qword_1EE1EB6C8;
      v11 = (const char *)&protocol conformance descriptor for ControlTemplateButton;
    }
    else
    {
      v9 = type metadata accessor for ControlTemplatePicker;
      a1[3] = type metadata accessor for ControlTemplatePicker(0);
      v10 = &qword_1EE1EDCD0;
      v11 = (const char *)&protocol conformance descriptor for ControlTemplatePicker;
    }
  }
  else
  {
    v9 = type metadata accessor for ControlTemplateToggle;
    a1[3] = type metadata accessor for ControlTemplateToggle(0);
    v10 = (unint64_t *)&qword_1EE1EB180;
    v11 = "Um'R";
  }
  a1[4] = sub_1908AA2F4(v10, v9, (uint64_t)v11);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1908BD0B4((uint64_t)v6, (uint64_t)boxed_opaque_existential_1, v9);
}

uint64_t ControlTemplateType.asPlaceholderTemplate()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v24;

  v2 = v1;
  v4 = type metadata accessor for ControlTemplatePicker(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ControlTemplateToggle(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ControlTemplateButton(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1908AF5D8(v2, (uint64_t)v15, v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1908BD0B4((uint64_t)v15, (uint64_t)v12, type metadata accessor for ControlTemplateButton);
      a1[3] = v10;
      a1[4] = sub_1908AA2F4((unint64_t *)&qword_1EE1EB6C8, type metadata accessor for ControlTemplateButton, (uint64_t)&protocol conformance descriptor for ControlTemplateButton);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
      ControlTemplateButton.asPlaceholder()((uint64_t)boxed_opaque_existential_1);
      v19 = (uint64_t)v12;
      v20 = type metadata accessor for ControlTemplateButton;
    }
    else
    {
      sub_1908BD0B4((uint64_t)v15, (uint64_t)v6, type metadata accessor for ControlTemplatePicker);
      a1[3] = v4;
      a1[4] = sub_1908AA2F4(&qword_1EE1EDCD0, type metadata accessor for ControlTemplatePicker, (uint64_t)&protocol conformance descriptor for ControlTemplatePicker);
      v22 = __swift_allocate_boxed_opaque_existential_1(a1);
      ControlTemplatePicker.asPlaceholder()(v22);
      v19 = (uint64_t)v6;
      v20 = type metadata accessor for ControlTemplatePicker;
    }
  }
  else
  {
    sub_1908BD0B4((uint64_t)v15, (uint64_t)v9, type metadata accessor for ControlTemplateToggle);
    a1[3] = v7;
    a1[4] = sub_1908AA2F4((unint64_t *)&qword_1EE1EB180, type metadata accessor for ControlTemplateToggle, (uint64_t)"Um'R");
    v21 = __swift_allocate_boxed_opaque_existential_1(a1);
    ControlTemplateToggle.asPlaceholder()(v21);
    v19 = (uint64_t)v9;
    v20 = type metadata accessor for ControlTemplateToggle;
  }
  return sub_1908B5150(v19, v20);
}

uint64_t ControlTemplateType.button.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1908AF5D8(v2, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1908BD0B4((uint64_t)v6, a1, type metadata accessor for ControlTemplateButton);
    v8 = type metadata accessor for ControlTemplateButton(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 0, 1, v8);
  }
  else
  {
    sub_1908B5150((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ControlTemplateType);
    v10 = type metadata accessor for ControlTemplateButton(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

uint64_t ControlTemplateType.toggle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1908AF5D8(v2, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1908B5150((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ControlTemplateType);
    v8 = type metadata accessor for ControlTemplateToggle(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
  else
  {
    sub_1908BD0B4((uint64_t)v6, a1, type metadata accessor for ControlTemplateToggle);
    v10 = type metadata accessor for ControlTemplateToggle(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 0, 1, v10);
  }
}

uint64_t ControlTemplateType.picker.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1908AF5D8(v2, (uint64_t)v6, v7);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1908BD0B4((uint64_t)v6, a1, type metadata accessor for ControlTemplatePicker);
    v8 = type metadata accessor for ControlTemplatePicker(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 0, 1, v8);
  }
  else
  {
    sub_1908B5150((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ControlTemplateType);
    v10 = type metadata accessor for ControlTemplatePicker(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

uint64_t sub_1909CE64C()
{
  sub_1909CECEC();
  return sub_190A48868();
}

uint64_t sub_1909CE674()
{
  sub_1909CECEC();
  return sub_190A48874();
}

uint64_t sub_1909CE69C()
{
  char *v0;

  return *(_QWORD *)&aToggle_0[8 * *v0];
}

uint64_t sub_1909CE6B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1909D2938(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1909CE6D8()
{
  sub_1909CEC64();
  return sub_190A48868();
}

uint64_t sub_1909CE700()
{
  sub_1909CEC64();
  return sub_190A48874();
}

uint64_t sub_1909CE728()
{
  sub_1909CECA8();
  return sub_190A48868();
}

uint64_t sub_1909CE750()
{
  sub_1909CECA8();
  return sub_190A48874();
}

uint64_t sub_1909CE778()
{
  sub_1909CED30();
  return sub_190A48868();
}

uint64_t sub_1909CE7A0()
{
  sub_1909CED30();
  return sub_190A48874();
}

uint64_t ControlTemplateType.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int EnumCaseMultiPayload;
  uint64_t (*v21)(uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB6F8);
  v41 = *(_QWORD *)(v2 - 8);
  v42 = v2;
  MEMORY[0x1E0C80A78](v2);
  v40 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for ControlTemplatePicker(0);
  MEMORY[0x1E0C80A78](v38);
  v39 = (uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB6F0);
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  MEMORY[0x1E0C80A78](v5);
  v35 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for ControlTemplateButton(0);
  MEMORY[0x1E0C80A78](v34);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB700);
  v32 = *(_QWORD *)(v9 - 8);
  v33 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for ControlTemplateToggle(0);
  MEMORY[0x1E0C80A78](v31);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB6E8);
  v44 = *(_QWORD *)(v17 - 8);
  v45 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909CEC64();
  sub_190A48850();
  sub_1908AF5D8(v43, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ControlTemplateType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v21 = type metadata accessor for ControlTemplateButton;
      sub_1908BD0B4((uint64_t)v16, (uint64_t)v8, type metadata accessor for ControlTemplateButton);
      v47 = 1;
      sub_1909CECEC();
      v22 = v35;
      v23 = v45;
      sub_190A485C8();
      sub_1908AA2F4(&qword_1EE1EB6C0, type metadata accessor for ControlTemplateButton, (uint64_t)&protocol conformance descriptor for ControlTemplateButton);
      v24 = v37;
      sub_190A48640();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v24);
      v25 = (uint64_t)v8;
    }
    else
    {
      v21 = type metadata accessor for ControlTemplatePicker;
      v27 = v39;
      sub_1908BD0B4((uint64_t)v16, v39, type metadata accessor for ControlTemplatePicker);
      v48 = 2;
      sub_1909CECA8();
      v28 = v40;
      v23 = v45;
      sub_190A485C8();
      sub_1908AA2F4(&qword_1EE1ECE80, type metadata accessor for ControlTemplatePicker, (uint64_t)&protocol conformance descriptor for ControlTemplatePicker);
      v29 = v42;
      sub_190A48640();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v29);
      v25 = v27;
    }
  }
  else
  {
    v21 = type metadata accessor for ControlTemplateToggle;
    sub_1908BD0B4((uint64_t)v16, (uint64_t)v13, type metadata accessor for ControlTemplateToggle);
    v46 = 0;
    sub_1909CED30();
    v23 = v45;
    sub_190A485C8();
    sub_1908AA2F4(&qword_1EE1EB170, type metadata accessor for ControlTemplateToggle, (uint64_t)&protocol conformance descriptor for ControlTemplateToggle);
    v26 = v33;
    sub_190A48640();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v26);
    v25 = (uint64_t)v13;
  }
  sub_1908B5150(v25, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v19, v23);
}

unint64_t sub_1909CEC64()
{
  unint64_t result;

  result = qword_1EE1EBEA0;
  if (!qword_1EE1EBEA0)
  {
    result = MEMORY[0x19401429C](&unk_190A57E34, &type metadata for ControlTemplateType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBEA0);
  }
  return result;
}

unint64_t sub_1909CECA8()
{
  unint64_t result;

  result = qword_1EE1EE328;
  if (!qword_1EE1EE328)
  {
    result = MEMORY[0x19401429C](&unk_190A57DE4, &type metadata for ControlTemplateType.PickerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE328);
  }
  return result;
}

unint64_t sub_1909CECEC()
{
  unint64_t result;

  result = qword_1EE1EBB18;
  if (!qword_1EE1EBB18)
  {
    result = MEMORY[0x19401429C](&unk_190A57D94, &type metadata for ControlTemplateType.ButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBB18);
  }
  return result;
}

unint64_t sub_1909CED30()
{
  unint64_t result;

  result = qword_1EE1EB878;
  if (!qword_1EE1EB878)
  {
    result = MEMORY[0x19401429C](&unk_190A57D44, &type metadata for ControlTemplateType.ToggleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EB878);
  }
  return result;
}

uint64_t ControlTemplateType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  char *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  char v63;
  char v64;
  char v65;

  v54 = a2;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB7C8);
  v53 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v55 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB7C0);
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  MEMORY[0x1E0C80A78](v4);
  v59 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB7D0);
  v48 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  MEMORY[0x1E0C80A78](v6);
  v57 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB7B8);
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ControlTemplateType();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v43 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v43 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v43 - v20;
  v22 = a1[3];
  v61 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_1909CEC64();
  v60 = v9;
  v23 = v62;
  sub_190A48838();
  if (v23)
    goto LABEL_9;
  v44 = v16;
  v45 = v19;
  v46 = v13;
  v47 = v21;
  v24 = v57;
  v25 = v58;
  v27 = v59;
  v26 = v60;
  v62 = v10;
  v28 = sub_190A485A4();
  if (*(_QWORD *)(v28 + 16) != 1)
  {
    v29 = v25;
    v30 = sub_190A4831C();
    swift_allocError();
    v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90);
    *v32 = v62;
    sub_190A48508();
    sub_190A48304();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, *MEMORY[0x1E0DEC450], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v26, v29);
LABEL_9:
    v37 = (uint64_t)v61;
    return __swift_destroy_boxed_opaque_existential_1(v37);
  }
  if (*(_BYTE *)(v28 + 32))
  {
    if (*(_BYTE *)(v28 + 32) == 1)
    {
      v64 = 1;
      sub_1909CECEC();
      sub_190A484FC();
      type metadata accessor for ControlTemplateButton(0);
      sub_1908AA2F4(qword_1EE1EBB50, type metadata accessor for ControlTemplateButton, (uint64_t)&protocol conformance descriptor for ControlTemplateButton);
      v35 = (uint64_t)v44;
      v36 = v52;
      sub_190A48580();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v27, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v26, v25);
      v37 = (uint64_t)v61;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      v65 = 2;
      sub_1909CECA8();
      v33 = v55;
      sub_190A484FC();
      type metadata accessor for ControlTemplatePicker(0);
      sub_1908AA2F4(&qword_1EE1ECE78, type metadata accessor for ControlTemplatePicker, (uint64_t)&protocol conformance descriptor for ControlTemplatePicker);
      v39 = (uint64_t)v46;
      v40 = v50;
      sub_190A48580();
      v41 = v56;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v25);
      swift_storeEnumTagMultiPayload();
      v35 = v39;
      v37 = (uint64_t)v61;
    }
  }
  else
  {
    v63 = 0;
    sub_1909CED30();
    sub_190A484FC();
    type metadata accessor for ControlTemplateToggle(0);
    sub_1908AA2F4(&qword_1EE1EB8B0, type metadata accessor for ControlTemplateToggle, (uint64_t)&protocol conformance descriptor for ControlTemplateToggle);
    v35 = (uint64_t)v45;
    v38 = v49;
    sub_190A48580();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v24, v38);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v26, v25);
    v37 = (uint64_t)v61;
    swift_storeEnumTagMultiPayload();
  }
  v42 = (uint64_t)v47;
  sub_1908BD0B4(v35, (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for ControlTemplateType);
  sub_1908BD0B4(v42, v54, (uint64_t (*)(_QWORD))type metadata accessor for ControlTemplateType);
  return __swift_destroy_boxed_opaque_existential_1(v37);
}

uint64_t sub_1909CF3F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ControlTemplateType.init(from:)(a1, a2);
}

uint64_t sub_1909CF408(_QWORD *a1)
{
  return ControlTemplateType.encode(to:)(a1);
}

uint64_t ControlTemplateType.action(for:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(_QWORD);
  int EnumCaseMultiPayload;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t result;
  id v26;
  uint64_t v27;

  v3 = v2;
  v6 = type metadata accessor for ControlTemplateButton(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ControlTemplateToggle.Option(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ControlTemplateToggle(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1908AF5D8(v3, (uint64_t)v17, v18);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1908BD0B4((uint64_t)v17, (uint64_t)v14, type metadata accessor for ControlTemplateToggle);
    if (a1 == 1)
      v24 = *(int *)(v12 + 24);
    else
      v24 = *(int *)(v12 + 28);
    sub_1908AF5D8((uint64_t)&v14[v24], (uint64_t)v11, type metadata accessor for ControlTemplateToggle.Option);
    sub_1908B5150((uint64_t)v14, type metadata accessor for ControlTemplateToggle);
    v20 = (void *)*((_QWORD *)v11 + 2);
    v26 = v20;
    v22 = (uint64_t)v11;
    v23 = type metadata accessor for ControlTemplateToggle.Option;
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1908BD0B4((uint64_t)v17, (uint64_t)v8, type metadata accessor for ControlTemplateButton);
    v20 = *(void **)&v8[*(int *)(v6 + 24)];
    v21 = v20;
    v22 = (uint64_t)v8;
    v23 = type metadata accessor for ControlTemplateButton;
LABEL_9:
    result = sub_1908B5150(v22, v23);
    goto LABEL_10;
  }
  result = sub_1908B5150((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ControlTemplateType);
  v20 = 0;
LABEL_10:
  *a2 = v20;
  return result;
}

uint64_t ControlTemplateType.validateIcon(_:)(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v41 = a1;
  v42 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  MEMORY[0x1E0C80A78](v3);
  v46 = (uint64_t)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_190A47260();
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  MEMORY[0x1E0C80A78](v5);
  v36 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ControlTemplatePicker.Option(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v45 = (uint64_t)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ControlTemplatePicker(0);
  MEMORY[0x1E0C80A78](v10);
  v39 = (uint64_t)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ControlTemplateButton(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ControlTemplateToggle(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1908AF5D8(v44, (uint64_t)v20, v21);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1908BD0B4((uint64_t)v20, (uint64_t)v17, type metadata accessor for ControlTemplateToggle);
    ControlTemplateToggle.validateIcon(_:)(v41, v42);
    return sub_1908B5150((uint64_t)v17, type metadata accessor for ControlTemplateToggle);
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1908BD0B4((uint64_t)v20, (uint64_t)v14, type metadata accessor for ControlTemplateButton);
    ControlTemplateButton.validateIcon(_:)(v41, v42);
    return sub_1908B5150((uint64_t)v14, type metadata accessor for ControlTemplateButton);
  }
  v24 = v39;
  sub_1908BD0B4((uint64_t)v20, v39, type metadata accessor for ControlTemplatePicker);
  v25 = *(_QWORD *)v24;
  v26 = *(_QWORD *)(*(_QWORD *)v24 + 16);
  if (!v26)
    return sub_1908B5150(v39, type metadata accessor for ControlTemplatePicker);
  v43 = v45 + *(int *)(v7 + 20);
  v44 = v2;
  v27 = v25 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v28 = *(_QWORD *)(v8 + 72);
  v35[1] = v25;
  swift_bridgeObjectRetain();
  v29 = v36;
  v30 = v37;
  v31 = v38;
  v40 = v28;
  v32 = v46;
  while (1)
  {
    v33 = v45;
    sub_1908AF5D8(v27, v45, type metadata accessor for ControlTemplatePicker.Option);
    sub_19093AF58(v43, v32);
    sub_1908B5150(v33, type metadata accessor for ControlTemplatePicker.Option);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v32, 1, v31) != 1)
      break;
    sub_1909CFA04(v46);
LABEL_8:
    v27 += v28;
    if (!--v26)
    {
      swift_bridgeObjectRelease();
      return sub_1908B5150(v39, type metadata accessor for ControlTemplatePicker);
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v29, v46, v31);
  v34 = v44;
  v41(v29);
  v44 = v34;
  if (!v34)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v31);
    v28 = v40;
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v31);
  swift_bridgeObjectRelease();
  return sub_1908B5150(v39, type metadata accessor for ControlTemplatePicker);
}

uint64_t sub_1909CFA04(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ControlTemplateType.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t (*v19)(uint64_t);
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for ControlTemplatePicker(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ControlTemplateButton(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ControlTemplateToggle(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1908AF5D8(v1, (uint64_t)v13, v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v19 = type metadata accessor for ControlTemplateToggle;
    sub_1908BD0B4((uint64_t)v13, (uint64_t)v10, type metadata accessor for ControlTemplateToggle);
    v16 = ControlTemplateToggle.debugDescription.getter();
    v17 = (uint64_t)v10;
LABEL_6:
    v18 = v19;
    goto LABEL_7;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v19 = type metadata accessor for ControlTemplatePicker;
    sub_1908BD0B4((uint64_t)v13, (uint64_t)v4, type metadata accessor for ControlTemplatePicker);
    v16 = ControlTemplatePicker.debugDescription.getter();
    v17 = (uint64_t)v4;
    goto LABEL_6;
  }
  sub_1908BD0B4((uint64_t)v13, (uint64_t)v7, type metadata accessor for ControlTemplateButton);
  v16 = ControlTemplateButton.debugDescription.getter();
  v17 = (uint64_t)v7;
  v18 = type metadata accessor for ControlTemplateButton;
LABEL_7:
  sub_1908B5150(v17, v18);
  return v16;
}

uint64_t dispatch thunk of ControlTemplate.associatedURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ControlTemplate.privacySensitive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ControlTemplate.disabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ControlTemplate.validateIcon(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of ControlTemplate.asPlaceholder()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ControlTemplate.rasterizedImagesAllowed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

_QWORD *initializeBufferWithCopyOfBuffer for ControlTemplateType(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, void *);
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  id v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  int *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  _QWORD *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  char *v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  _QWORD *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  unsigned int (*v126)(char *, uint64_t, uint64_t);
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  void *v137;
  char *v138;
  uint64_t v139;
  unsigned int (*v140)(char *, uint64_t, void *);
  unsigned int (*v141)(char *, uint64_t, uint64_t);
  int *v142;
  char *__dst;
  int *__dsta;
  int *__dstb;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      v19 = a2[3];
      a1[2] = a2[2];
      a1[3] = v19;
      a1[4] = a2[4];
      v20 = (int *)type metadata accessor for ControlTemplatePicker(0);
      v21 = v20[7];
      __dst = (char *)a1 + v21;
      v22 = (char *)a2 + v21;
      v23 = sub_190A45FC4();
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v25(v22, 1, v23))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
        memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
      }
      *((_BYTE *)a1 + v20[8]) = *((_BYTE *)a2 + v20[8]);
      *((_BYTE *)a1 + v20[9]) = *((_BYTE *)a2 + v20[9]);
      *((_BYTE *)a1 + v20[10]) = *((_BYTE *)a2 + v20[10]);
      v59 = v20[11];
      v60 = (_QWORD *)((char *)a1 + v59);
      v61 = (_QWORD *)((char *)a2 + v59);
      v62 = v61[1];
      *v60 = *v61;
      v60[1] = v62;
      *((_BYTE *)a1 + v20[12]) = *((_BYTE *)a2 + v20[12]);
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      v9 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
      v10 = v9[6];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_190A47260();
      v14 = *(_QWORD *)(v13 - 8);
      v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v141 = v15;
      v135 = v14;
      v139 = v13;
      if (v15(v12, 1, v13))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      v40 = v9[7];
      v41 = (char *)a1 + v40;
      v42 = (char *)a2 + v40;
      *(_OWORD *)v41 = *(_OWORD *)v42;
      v41[16] = v42[16];
      v43 = v9[8];
      v44 = (_QWORD *)((char *)a1 + v43);
      v45 = (_QWORD *)((char *)a2 + v43);
      v46 = v45[1];
      *v44 = *v45;
      v44[1] = v46;
      v47 = v9[9];
      v48 = (_QWORD *)((char *)a1 + v47);
      v49 = (_QWORD *)((char *)a2 + v47);
      v50 = v49[1];
      *v48 = *v49;
      v48[1] = v50;
      __dstb = (int *)type metadata accessor for ControlTemplateButton(0);
      v51 = __dstb[5];
      v52 = (_QWORD *)((char *)a1 + v51);
      v53 = (char *)a2 + v51;
      v54 = *(_QWORD *)((char *)a2 + v51 + 8);
      *v52 = *(_QWORD *)((char *)a2 + v51);
      v52[1] = v54;
      v55 = *(_QWORD *)((char *)a2 + v51 + 24);
      v52[2] = *(_QWORD *)((char *)a2 + v51 + 16);
      v52[3] = v55;
      v56 = v9[6];
      v138 = (char *)v52 + v56;
      v57 = &v53[v56];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v141(v57, 1, v139))
      {
        v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
        memcpy(v138, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v138, v57, v139);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v138, 0, 1, v139);
      }
      v63 = v9[7];
      v64 = (char *)v52 + v63;
      v65 = &v53[v63];
      *(_OWORD *)v64 = *(_OWORD *)v65;
      v64[16] = v65[16];
      v66 = v9[8];
      v67 = (_QWORD *)((char *)v52 + v66);
      v68 = &v53[v66];
      v69 = *((_QWORD *)v68 + 1);
      *v67 = *(_QWORD *)v68;
      v67[1] = v69;
      v70 = v9[9];
      v71 = (_QWORD *)((char *)v52 + v70);
      v72 = &v53[v70];
      v73 = *((_QWORD *)v72 + 1);
      *v71 = *(_QWORD *)v72;
      v71[1] = v73;
      v74 = __dstb[6];
      v75 = *(void **)((char *)a2 + v74);
      *(_QWORD *)((char *)a1 + v74) = v75;
      v76 = __dstb[7];
      v77 = (char *)a1 + v76;
      v78 = (char *)a2 + v76;
      v79 = sub_190A45FC4();
      v80 = *(_QWORD *)(v79 - 8);
      v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v82 = v75;
      if (v81(v78, 1, v79))
      {
        v83 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v77, v78, v79);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
      }
      *((_BYTE *)a1 + __dstb[8]) = *((_BYTE *)a2 + __dstb[8]);
      *((_BYTE *)a1 + __dstb[9]) = *((_BYTE *)a2 + __dstb[9]);
      v84 = __dstb[10];
      v85 = (_QWORD *)((char *)a1 + v84);
      v86 = (_QWORD *)((char *)a2 + v84);
      v87 = v86[1];
      *v85 = *v86;
      v85[1] = v87;
      *((_BYTE *)a1 + __dstb[11]) = *((_BYTE *)a2 + __dstb[11]);
      swift_bridgeObjectRetain();
    }
    else
    {
      v27 = a2[1];
      *a1 = *a2;
      a1[1] = v27;
      v28 = a2[3];
      a1[2] = a2[2];
      a1[3] = v28;
      __dsta = (int *)type metadata accessor for ControlTemplateToggle(0);
      v29 = __dsta[6];
      v30 = (_QWORD *)((char *)a1 + v29);
      v31 = (char *)a2 + v29;
      v32 = *(_QWORD *)((char *)a2 + v29 + 8);
      *v30 = *(_QWORD *)((char *)a2 + v29);
      v30[1] = v32;
      v33 = *(void **)((char *)a2 + v29 + 16);
      v30[2] = v33;
      v142 = (int *)type metadata accessor for ControlTemplateToggle.Option(0);
      v34 = v142[6];
      v134 = (char *)v30 + v34;
      v136 = &v31[v34];
      v35 = sub_190A47260();
      v36 = *(_QWORD *)(v35 - 8);
      v37 = *(unsigned int (**)(char *, uint64_t, void *))(v36 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38 = v33;
      v140 = v37;
      v133 = v36;
      v137 = (void *)v35;
      if (v37(v136, 1, (void *)v35))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
        memcpy(v134, v136, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v134, v136, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v134, 0, 1, v35);
      }
      v88 = v142;
      v89 = v142[7];
      v90 = (char *)v30 + v89;
      v91 = &v31[v89];
      *(_OWORD *)v90 = *(_OWORD *)v91;
      v90[16] = v91[16];
      v92 = v142[8];
      v93 = (_QWORD *)((char *)v30 + v92);
      v94 = &v31[v92];
      v95 = *((_QWORD *)v94 + 1);
      *v93 = *(_QWORD *)v94;
      v93[1] = v95;
      v96 = v142[9];
      v97 = (_QWORD *)((char *)v30 + v96);
      v98 = &v31[v96];
      v99 = *((_QWORD *)v98 + 1);
      *v97 = *(_QWORD *)v98;
      v97[1] = v99;
      v100 = __dsta[7];
      v101 = (_QWORD *)((char *)a1 + v100);
      v102 = (char *)a2 + v100;
      v103 = *(_QWORD *)((char *)a2 + v100 + 8);
      *v101 = *(_QWORD *)((char *)a2 + v100);
      v101[1] = v103;
      v104 = *(void **)((char *)a2 + v100 + 16);
      v101[2] = v104;
      v105 = v142[6];
      v106 = (char *)v101 + v105;
      v107 = &v102[v105];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v108 = v104;
      if (v140(v107, 1, v137))
      {
        v109 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
        memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v133 + 16))(v106, v107, v137);
        v88 = v142;
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v133 + 56))(v106, 0, 1, v137);
      }
      v110 = v88[7];
      v111 = (char *)v101 + v110;
      v112 = &v102[v110];
      *(_OWORD *)v111 = *(_OWORD *)v112;
      v111[16] = v112[16];
      v113 = v88[8];
      v114 = (_QWORD *)((char *)v101 + v113);
      v115 = &v102[v113];
      v116 = *((_QWORD *)v115 + 1);
      *v114 = *(_QWORD *)v115;
      v114[1] = v116;
      v117 = v88[9];
      v118 = (_QWORD *)((char *)v101 + v117);
      v119 = &v102[v117];
      v120 = *((_QWORD *)v119 + 1);
      *v118 = *(_QWORD *)v119;
      v118[1] = v120;
      v121 = __dsta[8];
      v122 = (char *)a1 + v121;
      v123 = (char *)a2 + v121;
      v124 = sub_190A45FC4();
      v125 = *(_QWORD *)(v124 - 8);
      v126 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v126(v123, 1, v124))
      {
        v127 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
        memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v122, v123, v124);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v122, 0, 1, v124);
      }
      *((_BYTE *)a1 + __dsta[9]) = *((_BYTE *)a2 + __dsta[9]);
      *((_BYTE *)a1 + __dsta[10]) = *((_BYTE *)a2 + __dsta[10]);
      v128 = __dsta[11];
      v129 = (_QWORD *)((char *)a1 + v128);
      v130 = (_QWORD *)((char *)a2 + v128);
      v131 = v130[1];
      *v129 = *v130;
      v129[1] = v131;
      *((_BYTE *)a1 + __dsta[12]) = *((_BYTE *)a2 + __dsta[12]);
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ControlTemplateType(uint64_t a1)
{
  uint64_t result;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = *(int *)(type metadata accessor for ControlTemplatePicker(0) + 28);
  }
  else
  {
    if ((_DWORD)result == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = type metadata accessor for ControlTemplateButton.Option(0);
      v17 = a1 + *(int *)(v16 + 24);
      v18 = sub_190A47260();
      v19 = *(_QWORD *)(v18 - 8);
      v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
      if (!v20(v17, 1, v18))
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = (int *)type metadata accessor for ControlTemplateButton(0);
      v22 = a1 + v21[5];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v23 = v22 + *(int *)(v16 + 24);
      if (!v20(v23, 1, v18))
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v24 = a1 + v21[7];
      v25 = sub_190A45FC4();
      v26 = *(_QWORD *)(v25 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
      return swift_bridgeObjectRelease();
    }
    if ((_DWORD)result)
      return result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = (int *)type metadata accessor for ControlTemplateToggle(0);
    v4 = a1 + v3[6];
    swift_bridgeObjectRelease();

    v5 = type metadata accessor for ControlTemplateToggle.Option(0);
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_190A47260();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (!v9(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = a1 + v3[7];
    swift_bridgeObjectRelease();

    v11 = v10 + *(int *)(v5 + 24);
    if (!v9(v11, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = v3[8];
  }
  v13 = a1 + v12;
  v14 = sub_190A45FC4();
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ControlTemplateType(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  int *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(char *, uint64_t, uint64_t);
  id v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  char *v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  _QWORD *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  unsigned int (*v124)(char *, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  uint64_t v129;
  char *v131;
  uint64_t v132;
  int *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  unsigned int (*v138)(char *, uint64_t, uint64_t);
  unsigned int (*v139)(char *, uint64_t, uint64_t);
  char *__dst;
  int *__dsta;
  int *__dstb;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    v16 = a2[3];
    a1[2] = a2[2];
    a1[3] = v16;
    a1[4] = a2[4];
    v17 = (int *)type metadata accessor for ControlTemplatePicker(0);
    v18 = v17[7];
    __dst = (char *)a1 + v18;
    v19 = (char *)a2 + v18;
    v20 = sub_190A45FC4();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22(v19, 1, v20))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(__dst, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
    }
    *((_BYTE *)a1 + v17[8]) = *((_BYTE *)a2 + v17[8]);
    *((_BYTE *)a1 + v17[9]) = *((_BYTE *)a2 + v17[9]);
    *((_BYTE *)a1 + v17[10]) = *((_BYTE *)a2 + v17[10]);
    v57 = v17[11];
    v58 = (_QWORD *)((char *)a1 + v57);
    v59 = (_QWORD *)((char *)a2 + v57);
    v60 = v59[1];
    *v58 = *v59;
    v58[1] = v60;
    v61 = v17 + 12;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
    v8 = v7[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_190A47260();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v138 = v13;
    v132 = v12;
    v136 = v11;
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v38 = v7[7];
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    *(_OWORD *)v39 = *(_OWORD *)v40;
    v39[16] = v40[16];
    v41 = v7[8];
    v42 = (_QWORD *)((char *)a1 + v41);
    v43 = (_QWORD *)((char *)a2 + v41);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    v45 = v7[9];
    v46 = (_QWORD *)((char *)a1 + v45);
    v47 = (_QWORD *)((char *)a2 + v45);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    __dstb = (int *)type metadata accessor for ControlTemplateButton(0);
    v49 = __dstb[5];
    v50 = (_QWORD *)((char *)a1 + v49);
    v51 = (char *)a2 + v49;
    v52 = *(_QWORD *)((char *)a2 + v49 + 8);
    *v50 = *(_QWORD *)((char *)a2 + v49);
    v50[1] = v52;
    v53 = *(_QWORD *)((char *)a2 + v49 + 24);
    v50[2] = *(_QWORD *)((char *)a2 + v49 + 16);
    v50[3] = v53;
    v54 = v7[6];
    v135 = (char *)v50 + v54;
    v55 = &v51[v54];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v138(v55, 1, v136))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
      memcpy(v135, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v135, v55, v136);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v132 + 56))(v135, 0, 1, v136);
    }
    v62 = v7[7];
    v63 = (char *)v50 + v62;
    v64 = &v51[v62];
    *(_OWORD *)v63 = *(_OWORD *)v64;
    v63[16] = v64[16];
    v65 = v7[8];
    v66 = (_QWORD *)((char *)v50 + v65);
    v67 = &v51[v65];
    v68 = *((_QWORD *)v67 + 1);
    *v66 = *(_QWORD *)v67;
    v66[1] = v68;
    v69 = v7[9];
    v70 = (_QWORD *)((char *)v50 + v69);
    v71 = &v51[v69];
    v72 = *((_QWORD *)v71 + 1);
    *v70 = *(_QWORD *)v71;
    v70[1] = v72;
    v73 = __dstb[6];
    v74 = *(void **)((char *)a2 + v73);
    *(_QWORD *)((char *)a1 + v73) = v74;
    v75 = __dstb[7];
    v76 = (char *)a1 + v75;
    v77 = (char *)a2 + v75;
    v78 = sub_190A45FC4();
    v79 = *(_QWORD *)(v78 - 8);
    v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v81 = v74;
    if (v80(v77, 1, v78))
    {
      v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v76, v77, v78);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
    }
    *((_BYTE *)a1 + __dstb[8]) = *((_BYTE *)a2 + __dstb[8]);
    *((_BYTE *)a1 + __dstb[9]) = *((_BYTE *)a2 + __dstb[9]);
    v83 = __dstb[10];
    v84 = (_QWORD *)((char *)a1 + v83);
    v85 = (_QWORD *)((char *)a2 + v83);
    v86 = v85[1];
    *v84 = *v85;
    v84[1] = v86;
    v61 = __dstb + 11;
  }
  else
  {
    v24 = a2[1];
    *a1 = *a2;
    a1[1] = v24;
    v25 = a2[3];
    a1[2] = a2[2];
    a1[3] = v25;
    __dsta = (int *)type metadata accessor for ControlTemplateToggle(0);
    v26 = __dsta[6];
    v27 = (_QWORD *)((char *)a1 + v26);
    v28 = (char *)a2 + v26;
    v29 = *(_QWORD *)((char *)a2 + v26 + 8);
    *v27 = *(_QWORD *)((char *)a2 + v26);
    v27[1] = v29;
    v30 = *(void **)((char *)a2 + v26 + 16);
    v27[2] = v30;
    v31 = type metadata accessor for ControlTemplateToggle.Option(0);
    v32 = *(int *)(v31 + 24);
    v131 = (char *)v27 + v32;
    v133 = (int *)v31;
    v134 = &v28[v32];
    v33 = sub_190A47260();
    v34 = *(_QWORD *)(v33 - 8);
    v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36 = v30;
    v139 = v35;
    v137 = v33;
    if (v35(v134, 1, v33))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
      memcpy(v131, v134, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v131, v134, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v131, 0, 1, v33);
    }
    v87 = v133[7];
    v88 = (char *)v27 + v87;
    v89 = &v28[v87];
    *(_OWORD *)v88 = *(_OWORD *)v89;
    v88[16] = v89[16];
    v90 = v133[8];
    v91 = (_QWORD *)((char *)v27 + v90);
    v92 = &v28[v90];
    v93 = *((_QWORD *)v92 + 1);
    *v91 = *(_QWORD *)v92;
    v91[1] = v93;
    v94 = v133[9];
    v95 = (_QWORD *)((char *)v27 + v94);
    v96 = &v28[v94];
    v97 = *((_QWORD *)v96 + 1);
    *v95 = *(_QWORD *)v96;
    v95[1] = v97;
    v98 = __dsta[7];
    v99 = (_QWORD *)((char *)a1 + v98);
    v100 = (char *)a2 + v98;
    v101 = *(_QWORD *)((char *)a2 + v98 + 8);
    *v99 = *(_QWORD *)((char *)a2 + v98);
    v99[1] = v101;
    v102 = *(void **)((char *)a2 + v98 + 16);
    v99[2] = v102;
    v103 = v133[6];
    v104 = (char *)v99 + v103;
    v105 = &v100[v103];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v106 = v102;
    if (v139(v105, 1, v137))
    {
      v107 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
      memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v104, v105, v137);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v104, 0, 1, v137);
    }
    v108 = v133[7];
    v109 = (char *)v99 + v108;
    v110 = &v100[v108];
    *(_OWORD *)v109 = *(_OWORD *)v110;
    v109[16] = v110[16];
    v111 = v133[8];
    v112 = (_QWORD *)((char *)v99 + v111);
    v113 = &v100[v111];
    v114 = *((_QWORD *)v113 + 1);
    *v112 = *(_QWORD *)v113;
    v112[1] = v114;
    v115 = v133[9];
    v116 = (_QWORD *)((char *)v99 + v115);
    v117 = &v100[v115];
    v118 = *((_QWORD *)v117 + 1);
    *v116 = *(_QWORD *)v117;
    v116[1] = v118;
    v119 = __dsta[8];
    v120 = (char *)a1 + v119;
    v121 = (char *)a2 + v119;
    v122 = sub_190A45FC4();
    v123 = *(_QWORD *)(v122 - 8);
    v124 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v124(v121, 1, v122))
    {
      v125 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v120, v121, v122);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v120, 0, 1, v122);
    }
    *((_BYTE *)a1 + __dsta[9]) = *((_BYTE *)a2 + __dsta[9]);
    *((_BYTE *)a1 + __dsta[10]) = *((_BYTE *)a2 + __dsta[10]);
    v126 = __dsta[11];
    v127 = (_QWORD *)((char *)a1 + v126);
    v128 = (_QWORD *)((char *)a2 + v126);
    v129 = v128[1];
    *v127 = *v128;
    v127[1] = v129;
    v61 = __dsta + 12;
  }
  *((_BYTE *)a1 + *v61) = *((_BYTE *)a2 + *v61);
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for ControlTemplateType(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  id v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  __int128 v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  void *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  __int128 v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int (*v88)(char *, uint64_t, uint64_t);
  id v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  __int128 v94;
  uint64_t v95;
  _QWORD *v96;
  char *v97;
  uint64_t v98;
  _QWORD *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  unsigned int (*v106)(char *, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  unsigned int (*v118)(char *, uint64_t, uint64_t);
  int *v119;
  char *v120;
  char *v121;
  char *__dst;
  int *__dsta;
  int *__dstb;

  if (a1 != a2)
  {
    sub_1908B5150((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ControlTemplateType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      v13 = (int *)type metadata accessor for ControlTemplatePicker(0);
      v14 = v13[7];
      __dst = (char *)a1 + v14;
      v15 = (char *)a2 + v14;
      v16 = sub_190A45FC4();
      v17 = *(_QWORD *)(v16 - 8);
      v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18(v15, 1, v16))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
        memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v15, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
      }
      *((_BYTE *)a1 + v13[8]) = *((_BYTE *)a2 + v13[8]);
      *((_BYTE *)a1 + v13[9]) = *((_BYTE *)a2 + v13[9]);
      *((_BYTE *)a1 + v13[10]) = *((_BYTE *)a2 + v13[10]);
      v48 = v13[11];
      v49 = (_QWORD *)((char *)a1 + v48);
      v50 = (_QWORD *)((char *)a2 + v48);
      *v49 = *v50;
      v49[1] = v50[1];
      v51 = v13 + 12;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      v5 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
      v6 = v5[6];
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_190A47260();
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v116 = v10;
      v117 = v9;
      if (v11(v8, 1, v9))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      v31 = v5[7];
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      v34 = *(_OWORD *)v33;
      v32[16] = v33[16];
      *(_OWORD *)v32 = v34;
      v35 = v5[8];
      v36 = (_QWORD *)((char *)a1 + v35);
      v37 = (_QWORD *)((char *)a2 + v35);
      *v36 = *v37;
      v36[1] = v37[1];
      v38 = v5[9];
      v39 = (_QWORD *)((char *)a1 + v38);
      v40 = (_QWORD *)((char *)a2 + v38);
      *v39 = *v40;
      v39[1] = v40[1];
      v41 = type metadata accessor for ControlTemplateButton(0);
      v42 = *(int *)(v41 + 20);
      v43 = (_QWORD *)((char *)a1 + v42);
      v44 = (char *)a2 + v42;
      *v43 = *(_QWORD *)((char *)a2 + v42);
      v43[1] = *(_QWORD *)((char *)a2 + v42 + 8);
      v43[2] = *(_QWORD *)((char *)a2 + v42 + 16);
      v43[3] = *(_QWORD *)((char *)a2 + v42 + 24);
      v45 = v5[6];
      v121 = (char *)v43 + v45;
      __dstb = (int *)v41;
      v46 = &v44[v45];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v11(v46, 1, v117))
      {
        v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
        memcpy(v121, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v121, v46, v117);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v121, 0, 1, v117);
      }
      v71 = v5[7];
      v72 = (char *)v43 + v71;
      v73 = &v44[v71];
      v74 = *(_OWORD *)v73;
      v72[16] = v73[16];
      *(_OWORD *)v72 = v74;
      v75 = v5[8];
      v76 = (_QWORD *)((char *)v43 + v75);
      v77 = &v44[v75];
      *v76 = *(_QWORD *)v77;
      v76[1] = *((_QWORD *)v77 + 1);
      v78 = v5[9];
      v79 = (_QWORD *)((char *)v43 + v78);
      v80 = &v44[v78];
      *v79 = *(_QWORD *)v80;
      v79[1] = *((_QWORD *)v80 + 1);
      v81 = __dstb[6];
      v82 = *(void **)((char *)a2 + v81);
      *(_QWORD *)((char *)a1 + v81) = v82;
      v83 = __dstb[7];
      v84 = (char *)a1 + v83;
      v85 = (char *)a2 + v83;
      v86 = sub_190A45FC4();
      v87 = *(_QWORD *)(v86 - 8);
      v88 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v89 = v82;
      if (v88(v85, 1, v86))
      {
        v90 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
        memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v84, v85, v86);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
      }
      *((_BYTE *)a1 + __dstb[8]) = *((_BYTE *)a2 + __dstb[8]);
      *((_BYTE *)a1 + __dstb[9]) = *((_BYTE *)a2 + __dstb[9]);
      v108 = __dstb[10];
      v109 = (_QWORD *)((char *)a1 + v108);
      v110 = (_QWORD *)((char *)a2 + v108);
      *v109 = *v110;
      v109[1] = v110[1];
      v51 = __dstb + 11;
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      __dsta = (int *)type metadata accessor for ControlTemplateToggle(0);
      v20 = __dsta[6];
      v21 = (_QWORD *)((char *)a1 + v20);
      v22 = (char *)a2 + v20;
      *v21 = *(_QWORD *)((char *)a2 + v20);
      v21[1] = *(_QWORD *)((char *)a2 + v20 + 8);
      v23 = *(void **)((char *)a2 + v20 + 16);
      v21[2] = v23;
      v24 = type metadata accessor for ControlTemplateToggle.Option(0);
      v25 = *(int *)(v24 + 24);
      v119 = (int *)v24;
      v120 = (char *)v21 + v25;
      v115 = &v22[v25];
      v26 = sub_190A47260();
      v27 = *(_QWORD *)(v26 - 8);
      v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29 = v23;
      v118 = v28;
      if (v28(v115, 1, v26))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
        memcpy(v120, v115, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v120, v115, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v120, 0, 1, v26);
      }
      v52 = v119[7];
      v53 = (char *)v21 + v52;
      v54 = &v22[v52];
      v55 = *(_OWORD *)v54;
      v53[16] = v54[16];
      *(_OWORD *)v53 = v55;
      v56 = v119[8];
      v57 = (_QWORD *)((char *)v21 + v56);
      v58 = &v22[v56];
      *v57 = *(_QWORD *)v58;
      v57[1] = *((_QWORD *)v58 + 1);
      v59 = v119[9];
      v60 = (_QWORD *)((char *)v21 + v59);
      v61 = &v22[v59];
      *v60 = *(_QWORD *)v61;
      v60[1] = *((_QWORD *)v61 + 1);
      v62 = __dsta[7];
      v63 = (_QWORD *)((char *)a1 + v62);
      v64 = (char *)a2 + v62;
      *v63 = *(_QWORD *)((char *)a2 + v62);
      v63[1] = *(_QWORD *)((char *)a2 + v62 + 8);
      v65 = *(void **)((char *)a2 + v62 + 16);
      v63[2] = v65;
      v66 = v119[6];
      v67 = (char *)v63 + v66;
      v68 = &v64[v66];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v69 = v65;
      if (v118(v68, 1, v26))
      {
        v70 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v67, v68, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v67, 0, 1, v26);
      }
      v91 = v119[7];
      v92 = (char *)v63 + v91;
      v93 = &v64[v91];
      v94 = *(_OWORD *)v93;
      v92[16] = v93[16];
      *(_OWORD *)v92 = v94;
      v95 = v119[8];
      v96 = (_QWORD *)((char *)v63 + v95);
      v97 = &v64[v95];
      *v96 = *(_QWORD *)v97;
      v96[1] = *((_QWORD *)v97 + 1);
      v98 = v119[9];
      v99 = (_QWORD *)((char *)v63 + v98);
      v100 = &v64[v98];
      *v99 = *(_QWORD *)v100;
      v99[1] = *((_QWORD *)v100 + 1);
      v101 = __dsta[8];
      v102 = (char *)a1 + v101;
      v103 = (char *)a2 + v101;
      v104 = sub_190A45FC4();
      v105 = *(_QWORD *)(v104 - 8);
      v106 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v106(v103, 1, v104))
      {
        v107 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
        memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v102, v103, v104);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
      }
      *((_BYTE *)a1 + __dsta[9]) = *((_BYTE *)a2 + __dsta[9]);
      *((_BYTE *)a1 + __dsta[10]) = *((_BYTE *)a2 + __dsta[10]);
      v111 = __dsta[11];
      v112 = (_QWORD *)((char *)a1 + v111);
      v113 = (_QWORD *)((char *)a2 + v111);
      *v112 = *v113;
      v112[1] = v113[1];
      v51 = __dsta + 12;
    }
    *((_BYTE *)a1 + *v51) = *((_BYTE *)a2 + *v51);
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for ControlTemplateType(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  __int128 v5;
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  _OWORD *v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  const void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  const void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int (*v73)(const void *, uint64_t, uint64_t);
  unsigned int (*v74)(const void *, uint64_t, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    v13 = (int *)type metadata accessor for ControlTemplatePicker(0);
    v14 = v13[7];
    v15 = (void *)(a1 + v14);
    v16 = (const void *)(a2 + v14);
    v17 = sub_190A45FC4();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    *(_BYTE *)(a1 + v13[8]) = *(_BYTE *)(a2 + v13[8]);
    goto LABEL_26;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v20 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v20;
    v13 = (int *)type metadata accessor for ControlTemplateToggle(0);
    v21 = v13[6];
    v22 = a1 + v21;
    v23 = a2 + v21;
    *(_OWORD *)v22 = *(_OWORD *)(a2 + v21);
    *(_QWORD *)(v22 + 16) = *(_QWORD *)(a2 + v21 + 16);
    v24 = (int *)type metadata accessor for ControlTemplateToggle.Option(0);
    v25 = v24[6];
    v26 = (void *)(v22 + v25);
    v27 = (const void *)(v23 + v25);
    v28 = sub_190A47260();
    v29 = *(_QWORD *)(v28 - 8);
    v74 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48);
    if (v74(v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v53 = v24[7];
    v54 = v22 + v53;
    v55 = v23 + v53;
    *(_OWORD *)v54 = *(_OWORD *)v55;
    *(_BYTE *)(v54 + 16) = *(_BYTE *)(v55 + 16);
    *(_OWORD *)(v22 + v24[8]) = *(_OWORD *)(v23 + v24[8]);
    *(_OWORD *)(v22 + v24[9]) = *(_OWORD *)(v23 + v24[9]);
    v56 = v13[7];
    v57 = a1 + v56;
    v58 = a2 + v56;
    *(_OWORD *)v57 = *(_OWORD *)(a2 + v56);
    *(_QWORD *)(v57 + 16) = *(_QWORD *)(a2 + v56 + 16);
    v59 = v24[6];
    v60 = (void *)(v57 + v59);
    v61 = (const void *)(v58 + v59);
    if (v74((const void *)(v58 + v59), 1, v28))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v60, v61, v28);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v60, 0, 1, v28);
    }
    v63 = v24[7];
    v64 = v57 + v63;
    v65 = v58 + v63;
    *(_OWORD *)v64 = *(_OWORD *)v65;
    *(_BYTE *)(v64 + 16) = *(_BYTE *)(v65 + 16);
    *(_OWORD *)(v57 + v24[8]) = *(_OWORD *)(v58 + v24[8]);
    *(_OWORD *)(v57 + v24[9]) = *(_OWORD *)(v58 + v24[9]);
    v66 = v13[8];
    v67 = (void *)(a1 + v66);
    v68 = (const void *)(a2 + v66);
    v69 = sub_190A45FC4();
    v70 = *(_QWORD *)(v69 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
    {
      v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v70 + 32))(v67, v68, v69);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
    }
LABEL_26:
    *(_BYTE *)(a1 + v13[9]) = *(_BYTE *)(a2 + v13[9]);
    *(_BYTE *)(a1 + v13[10]) = *(_BYTE *)(a2 + v13[10]);
    *(_OWORD *)(a1 + v13[11]) = *(_OWORD *)(a2 + v13[11]);
    v52 = v13 + 12;
    goto LABEL_27;
  }
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  v7 = v6[6];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_190A47260();
  v11 = *(_QWORD *)(v10 - 8);
  v73 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v73(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v31 = v6[7];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
  *(_OWORD *)(a1 + v6[8]) = *(_OWORD *)(a2 + v6[8]);
  *(_OWORD *)(a1 + v6[9]) = *(_OWORD *)(a2 + v6[9]);
  v34 = (int *)type metadata accessor for ControlTemplateButton(0);
  v35 = v34[5];
  v36 = (_OWORD *)(a1 + v35);
  v37 = a2 + v35;
  v38 = *(_OWORD *)(a2 + v35 + 16);
  *v36 = *(_OWORD *)(a2 + v35);
  v36[1] = v38;
  v39 = v6[6];
  v40 = (char *)v36 + v39;
  v41 = (const void *)(v37 + v39);
  if (v73((const void *)(v37 + v39), 1, v10))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v11 + 32))(v40, v41, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v40, 0, 1, v10);
  }
  v43 = v6[7];
  v44 = (char *)v36 + v43;
  v45 = v37 + v43;
  *(_OWORD *)v44 = *(_OWORD *)v45;
  v44[16] = *(_BYTE *)(v45 + 16);
  *(_OWORD *)((char *)v36 + v6[8]) = *(_OWORD *)(v37 + v6[8]);
  *(_OWORD *)((char *)v36 + v6[9]) = *(_OWORD *)(v37 + v6[9]);
  *(_QWORD *)(a1 + v34[6]) = *(_QWORD *)(a2 + v34[6]);
  v46 = v34[7];
  v47 = (void *)(a1 + v46);
  v48 = (const void *)(a2 + v46);
  v49 = sub_190A45FC4();
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v50 + 32))(v47, v48, v49);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  *(_BYTE *)(a1 + v34[8]) = *(_BYTE *)(a2 + v34[8]);
  *(_BYTE *)(a1 + v34[9]) = *(_BYTE *)(a2 + v34[9]);
  *(_OWORD *)(a1 + v34[10]) = *(_OWORD *)(a2 + v34[10]);
  v52 = v34 + 11;
LABEL_27:
  *(_BYTE *)(a1 + *v52) = *(_BYTE *)(a2 + *v52);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for ControlTemplateType(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  __int128 v5;
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  _OWORD *v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  const void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  const void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  unsigned int (*v73)(const void *, uint64_t, uint64_t);
  unsigned int (*v74)(const void *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_1908B5150(a1, (uint64_t (*)(_QWORD))type metadata accessor for ControlTemplateType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      v13 = (int *)type metadata accessor for ControlTemplatePicker(0);
      v14 = v13[7];
      v15 = (void *)(a1 + v14);
      v16 = (const void *)(a2 + v14);
      v17 = sub_190A45FC4();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      *(_BYTE *)(a1 + v13[8]) = *(_BYTE *)(a2 + v13[8]);
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        v5 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v5;
        v6 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
        v7 = v6[6];
        v8 = (void *)(a1 + v7);
        v9 = (const void *)(a2 + v7);
        v10 = sub_190A47260();
        v11 = *(_QWORD *)(v10 - 8);
        v73 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
        if (v73(v9, 1, v10))
        {
          v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
        }
        v31 = v6[7];
        v32 = a1 + v31;
        v33 = a2 + v31;
        *(_OWORD *)v32 = *(_OWORD *)v33;
        *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
        *(_OWORD *)(a1 + v6[8]) = *(_OWORD *)(a2 + v6[8]);
        *(_OWORD *)(a1 + v6[9]) = *(_OWORD *)(a2 + v6[9]);
        v34 = (int *)type metadata accessor for ControlTemplateButton(0);
        v35 = v34[5];
        v36 = (_OWORD *)(a1 + v35);
        v37 = a2 + v35;
        v38 = *(_OWORD *)(a2 + v35 + 16);
        *v36 = *(_OWORD *)(a2 + v35);
        v36[1] = v38;
        v39 = v6[6];
        v40 = (char *)v36 + v39;
        v41 = (const void *)(v37 + v39);
        if (v73((const void *)(v37 + v39), 1, v10))
        {
          v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
          memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v11 + 32))(v40, v41, v10);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v40, 0, 1, v10);
        }
        v53 = v6[7];
        v54 = (char *)v36 + v53;
        v55 = v37 + v53;
        *(_OWORD *)v54 = *(_OWORD *)v55;
        v54[16] = *(_BYTE *)(v55 + 16);
        *(_OWORD *)((char *)v36 + v6[8]) = *(_OWORD *)(v37 + v6[8]);
        *(_OWORD *)((char *)v36 + v6[9]) = *(_OWORD *)(v37 + v6[9]);
        *(_QWORD *)(a1 + v34[6]) = *(_QWORD *)(a2 + v34[6]);
        v56 = v34[7];
        v57 = (void *)(a1 + v56);
        v58 = (const void *)(a2 + v56);
        v59 = sub_190A45FC4();
        v60 = *(_QWORD *)(v59 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
        {
          v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
          memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v60 + 32))(v57, v58, v59);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
        }
        *(_BYTE *)(a1 + v34[8]) = *(_BYTE *)(a2 + v34[8]);
        *(_BYTE *)(a1 + v34[9]) = *(_BYTE *)(a2 + v34[9]);
        *(_OWORD *)(a1 + v34[10]) = *(_OWORD *)(a2 + v34[10]);
        v71 = v34 + 11;
        goto LABEL_28;
      }
      v20 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v20;
      v13 = (int *)type metadata accessor for ControlTemplateToggle(0);
      v21 = v13[6];
      v22 = a1 + v21;
      v23 = a2 + v21;
      *(_OWORD *)v22 = *(_OWORD *)(a2 + v21);
      *(_QWORD *)(v22 + 16) = *(_QWORD *)(a2 + v21 + 16);
      v24 = (int *)type metadata accessor for ControlTemplateToggle.Option(0);
      v25 = v24[6];
      v26 = (void *)(v22 + v25);
      v27 = (const void *)(v23 + v25);
      v28 = sub_190A47260();
      v29 = *(_QWORD *)(v28 - 8);
      v74 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48);
      if (v74(v27, 1, v28))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v26, v27, v28);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      v43 = v24[7];
      v44 = v22 + v43;
      v45 = v23 + v43;
      *(_OWORD *)v44 = *(_OWORD *)v45;
      *(_BYTE *)(v44 + 16) = *(_BYTE *)(v45 + 16);
      *(_OWORD *)(v22 + v24[8]) = *(_OWORD *)(v23 + v24[8]);
      *(_OWORD *)(v22 + v24[9]) = *(_OWORD *)(v23 + v24[9]);
      v46 = v13[7];
      v47 = a1 + v46;
      v48 = a2 + v46;
      *(_OWORD *)v47 = *(_OWORD *)(a2 + v46);
      *(_QWORD *)(v47 + 16) = *(_QWORD *)(a2 + v46 + 16);
      v49 = v24[6];
      v50 = (void *)(v47 + v49);
      v51 = (const void *)(v48 + v49);
      if (v74((const void *)(v48 + v49), 1, v28))
      {
        v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v50, v51, v28);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v50, 0, 1, v28);
      }
      v62 = v24[7];
      v63 = v47 + v62;
      v64 = v48 + v62;
      *(_OWORD *)v63 = *(_OWORD *)v64;
      *(_BYTE *)(v63 + 16) = *(_BYTE *)(v64 + 16);
      *(_OWORD *)(v47 + v24[8]) = *(_OWORD *)(v48 + v24[8]);
      *(_OWORD *)(v47 + v24[9]) = *(_OWORD *)(v48 + v24[9]);
      v65 = v13[8];
      v66 = (void *)(a1 + v65);
      v67 = (const void *)(a2 + v65);
      v68 = sub_190A45FC4();
      v69 = *(_QWORD *)(v68 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
      {
        v70 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v69 + 32))(v66, v67, v68);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
      }
    }
    *(_BYTE *)(a1 + v13[9]) = *(_BYTE *)(a2 + v13[9]);
    *(_BYTE *)(a1 + v13[10]) = *(_BYTE *)(a2 + v13[10]);
    *(_OWORD *)(a1 + v13[11]) = *(_OWORD *)(a2 + v13[11]);
    v71 = v13 + 12;
LABEL_28:
    *(_BYTE *)(a1 + *v71) = *(_BYTE *)(a2 + *v71);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1909D23B0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for ControlTemplateToggle(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ControlTemplateButton(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for ControlTemplatePicker(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ControlTemplateType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1909D2498 + 4 * byte_190A57935[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1909D24CC + 4 * byte_190A57930[v4]))();
}

uint64_t sub_1909D24CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909D24D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909D24DCLL);
  return result;
}

uint64_t sub_1909D24E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909D24F0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1909D24F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909D24FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplateType.CodingKeys()
{
  return &type metadata for ControlTemplateType.CodingKeys;
}

ValueMetadata *type metadata accessor for ControlTemplateType.ToggleCodingKeys()
{
  return &type metadata for ControlTemplateType.ToggleCodingKeys;
}

ValueMetadata *type metadata accessor for ControlTemplateType.ButtonCodingKeys()
{
  return &type metadata for ControlTemplateType.ButtonCodingKeys;
}

uint64_t _s9WidgetKit19ControlTemplateTypeO16ToggleCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1909D257C + 4 * byte_190A5793A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1909D259C + 4 * byte_190A5793F[v4]))();
}

_BYTE *sub_1909D257C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1909D259C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1909D25A4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1909D25AC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1909D25B4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1909D25BC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplateType.PickerCodingKeys()
{
  return &type metadata for ControlTemplateType.PickerCodingKeys;
}

unint64_t sub_1909D25DC()
{
  unint64_t result;

  result = qword_1EE1EE330;
  if (!qword_1EE1EE330)
  {
    result = MEMORY[0x19401429C](&unk_190A57AF4, &type metadata for ControlTemplateType.PickerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE330);
  }
  return result;
}

unint64_t sub_1909D2624()
{
  unint64_t result;

  result = qword_1EE1EE338;
  if (!qword_1EE1EE338)
  {
    result = MEMORY[0x19401429C](&unk_190A57BAC, &type metadata for ControlTemplateType.ButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE338);
  }
  return result;
}

unint64_t sub_1909D266C()
{
  unint64_t result;

  result = qword_1EE1EE340;
  if (!qword_1EE1EE340)
  {
    result = MEMORY[0x19401429C](&unk_190A57C64, &type metadata for ControlTemplateType.ToggleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE340);
  }
  return result;
}

unint64_t sub_1909D26B4()
{
  unint64_t result;

  result = qword_1EE1EE348;
  if (!qword_1EE1EE348)
  {
    result = MEMORY[0x19401429C](&unk_190A57D1C, &type metadata for ControlTemplateType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE348);
  }
  return result;
}

unint64_t sub_1909D26FC()
{
  unint64_t result;

  result = qword_1EE1EBEE0;
  if (!qword_1EE1EBEE0)
  {
    result = MEMORY[0x19401429C](&unk_190A57BD4, &type metadata for ControlTemplateType.ToggleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBEE0);
  }
  return result;
}

unint64_t sub_1909D2744()
{
  unint64_t result;

  result = qword_1EE1EBED8;
  if (!qword_1EE1EBED8)
  {
    result = MEMORY[0x19401429C](&unk_190A57BFC, &type metadata for ControlTemplateType.ToggleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBED8);
  }
  return result;
}

unint64_t sub_1909D278C()
{
  unint64_t result;

  result = qword_1EE1EBEC0;
  if (!qword_1EE1EBEC0)
  {
    result = MEMORY[0x19401429C](&unk_190A57B1C, &type metadata for ControlTemplateType.ButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBEC0);
  }
  return result;
}

unint64_t sub_1909D27D4()
{
  unint64_t result;

  result = qword_1EE1EBEB8;
  if (!qword_1EE1EBEB8)
  {
    result = MEMORY[0x19401429C](&unk_190A57B44, &type metadata for ControlTemplateType.ButtonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBEB8);
  }
  return result;
}

unint64_t sub_1909D281C()
{
  unint64_t result;

  result = qword_1EE1EBED0;
  if (!qword_1EE1EBED0)
  {
    result = MEMORY[0x19401429C](&unk_190A57A64, &type metadata for ControlTemplateType.PickerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBED0);
  }
  return result;
}

unint64_t sub_1909D2864()
{
  unint64_t result;

  result = qword_1EE1EBEC8;
  if (!qword_1EE1EBEC8)
  {
    result = MEMORY[0x19401429C](&unk_190A57A8C, &type metadata for ControlTemplateType.PickerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBEC8);
  }
  return result;
}

unint64_t sub_1909D28AC()
{
  unint64_t result;

  result = qword_1EE1EBEB0;
  if (!qword_1EE1EBEB0)
  {
    result = MEMORY[0x19401429C](&unk_190A57C8C, &type metadata for ControlTemplateType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBEB0);
  }
  return result;
}

unint64_t sub_1909D28F4()
{
  unint64_t result;

  result = qword_1EE1EBEA8;
  if (!qword_1EE1EBEA8)
  {
    result = MEMORY[0x19401429C](&unk_190A57CB4, &type metadata for ControlTemplateType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBEA8);
  }
  return result;
}

uint64_t sub_1909D2938(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C67676F74 && a2 == 0xE600000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F74747562 && a2 == 0xE600000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72656B636970 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t CHSWidgetFamily.init(_:)(unsigned __int8 *a1)
{
  unsigned int v1;
  uint64_t result;

  v1 = *a1;
  if (v1 < 0xD && ((0x13BFu >> v1) & 1) != 0)
    return qword_190A58240[(char)v1];
  result = sub_190A486D0();
  __break(1u);
  return result;
}

uint64_t InternalWidgetFamily.init(_:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  v2 = result - 1;
  if ((unint64_t)(result - 1) < 0xE && ((0x2E3Fu >> v2) & 1) != 0)
  {
    *a2 = byte_190A581BE[v2];
  }
  else
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v3 = sub_190A465A0();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ECF6D988);
    v4 = sub_190A46588();
    v5 = sub_190A47F50();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v6 = 134217984;
      sub_190A48178();
      _os_log_impl(&dword_1908A7000, v4, v5, "Unrecognized family: %ld", v6, 0xCu);
      MEMORY[0x194014398](v6, -1, -1);
    }

    result = sub_190A48448();
    __break(1u);
  }
  return result;
}

uint64_t CHSWidgetFamily.stableIntegerRepresentation.getter(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xD)
    return 0;
  else
    return qword_190A581D0[a1 - 1];
}

WidgetKit::InternalWidgetFamily __swiftcall InternalWidgetFamily.init(_:)(WidgetKit::WidgetFamily a1)
{
  WidgetKit::InternalWidgetFamily result;

  __asm { BR              X11 }
  return result;
}

void sub_1909D2C6C(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1;
}

void sub_1909D2C78(_BYTE *a1@<X8>)
{
  sub_1909D2C6C(a1);
}

void sub_1909D2C80(_BYTE *a1@<X8>)
{
  sub_1909D2C6C(a1);
}

void sub_1909D2C88(_BYTE *a1@<X8>)
{
  sub_1909D2C6C(a1);
}

void sub_1909D2C90()
{
  sub_190A486D0();
  __break(1u);
}

void WidgetFamily.isAccessory.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1909D2CCC()
{
  return CHSWidgetFamilyIsAccessory();
}

void sub_1909D2D04()
{
  sub_190A486D0();
  __break(1u);
}

uint64_t CHSWidgetFamilyMask.init<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5;

  type metadata accessor for CHSWidgetFamilyMask(0);
  sub_190A47BE4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v5;
}

uint64_t InternalWidgetFamily.chsWidgetFamily.getter()
{
  unsigned __int8 *v0;
  unsigned int v1;
  uint64_t result;

  v1 = *v0;
  if (v1 < 0xD && ((0x13BFu >> v1) & 1) != 0)
    return qword_190A58240[(char)v1];
  result = sub_190A486D0();
  __break(1u);
  return result;
}

void WidgetFamily.debugDescription.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1909D2E28()
{
  return 0x654D6D6574737973;
}

uint64_t sub_1909D2E4C()
{
  return 0x614C6D6574737973;
}

unint64_t sub_1909D2E70()
{
  return 0xD000000000000010;
}

unint64_t sub_1909D2E90()
{
  return 0xD000000000000011;
}

uint64_t sub_1909D2ECC()
{
  return 0x726F737365636361;
}

void sub_1909D2EF4()
{
  sub_190A486D0();
  __break(1u);
}

void WidgetFamily.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1909D2F48()
{
  return 0x654D6D6574737973;
}

uint64_t sub_1909D2F6C()
{
  return 0x614C6D6574737973;
}

unint64_t sub_1909D2F90()
{
  return 0xD000000000000010;
}

unint64_t sub_1909D2FB0()
{
  return 0xD000000000000011;
}

uint64_t sub_1909D2FEC()
{
  return 0x726F737365636361;
}

void sub_1909D3014()
{
  sub_190A486D0();
  __break(1u);
}

WidgetKit::WidgetFamily_optional __swiftcall WidgetFamily.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  unint64_t v2;

  v2 = 0x706050803020100uLL >> (8 * rawValue);
  if ((unint64_t)rawValue >= 8)
    LOBYTE(v2) = 8;
  *v1 = v2;
  return (WidgetKit::WidgetFamily_optional)rawValue;
}

WidgetKit::WidgetFamily_optional sub_1909D3054(Swift::Int *a1)
{
  return WidgetFamily.init(rawValue:)(*a1);
}

void CHSWidgetFamily.init(_:)(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1909D308C()
{
  return 2;
}

uint64_t sub_1909D3098()
{
  return 3;
}

uint64_t sub_1909D30A4()
{
  return 4;
}

uint64_t sub_1909D30B0()
{
  return 10;
}

uint64_t sub_1909D30BC()
{
  return 11;
}

uint64_t sub_1909D30C8()
{
  return 12;
}

void sub_1909D30D4()
{
  sub_190A486D0();
  __break(1u);
}

uint64_t InternalWidgetFamily.debugDescription.getter()
{
  _BYTE *v0;
  uint64_t result;

  result = 0x316C6F72746E6F63;
  switch(*v0)
  {
    case 0:
      result = 0x6D536D6574737973;
      break;
    case 1:
      result = 0x654D6D6574737973;
      break;
    case 2:
      result = 0x614C6D6574737973;
      break;
    case 3:
      result = 0xD000000000000010;
      break;
    case 4:
    case 7:
      result = 0xD000000000000011;
      break;
    case 5:
      result = 0x6772614C7377656ELL;
      break;
    case 8:
      result = 0xD000000000000014;
      break;
    case 9:
      result = 0x726F737365636361;
      break;
    case 0xC:
      return result;
    default:
      result = sub_190A486D0();
      __break(1u);
      break;
  }
  return result;
}

uint64_t InternalWidgetFamily.description.getter()
{
  _BYTE *v0;
  uint64_t result;

  result = 0x316C6F72746E6F63;
  switch(*v0)
  {
    case 0:
      result = 0x6D536D6574737973;
      break;
    case 1:
      result = 0x654D6D6574737973;
      break;
    case 2:
      result = 0x614C6D6574737973;
      break;
    case 3:
      result = 0xD000000000000010;
      break;
    case 4:
    case 7:
      result = 0xD000000000000011;
      break;
    case 5:
      result = 0x6772614C7377656ELL;
      break;
    case 8:
      result = 0xD000000000000014;
      break;
    case 9:
      result = 0x726F737365636361;
      break;
    case 0xC:
      return result;
    default:
      result = sub_190A486D0();
      __break(1u);
      break;
  }
  return result;
}

WidgetKit::InternalWidgetFamily_optional __swiftcall InternalWidgetFamily.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;

  if ((unint64_t)rawValue > 0xC)
    *v1 = 13;
  else
    *v1 = byte_190A582A8[rawValue];
  return (WidgetKit::InternalWidgetFamily_optional)rawValue;
}

uint64_t InternalWidgetFamily.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

WidgetKit::InternalWidgetFamily_optional sub_1909D3410(Swift::Int *a1)
{
  return InternalWidgetFamily.init(rawValue:)(*a1);
}

unint64_t CHSWidgetFamily.stableStringRepresentation.getter(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  v1 = a1 - 1;
  result = 0x316C6F72746E6F63;
  switch(v1)
  {
    case 0:
      result = 0x6D536D6574737973;
      break;
    case 1:
      result = 0x654D6D6574737973;
      break;
    case 2:
      result = 0x614C6D6574737973;
      break;
    case 3:
      result = 0xD000000000000010;
      break;
    case 4:
    case 9:
      result = 0xD000000000000011;
      break;
    case 5:
      result = 0x6772614C7377656ELL;
      break;
    case 10:
      result = 0xD000000000000014;
      break;
    case 11:
      result = 0x726F737365636361;
      break;
    case 13:
      return result;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

BOOL static WidgetFamily.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t sub_1909D3590@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = CHSWidgetFamilyMaskFromWidgetFamily();
  *a2 = result | v3;
  return result;
}

uint64_t CHSWidgetFamilyMask.family(_:)(unint64_t a1, __int16 a2)
{
  char *v3;
  unsigned int v4;
  uint64_t result;

  v3 = CHSWidgetFamilyMask.internalFamilies()(a2);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (*((_QWORD *)v3 + 2) <= a1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v4 = v3[a1 + 32];
  swift_bridgeObjectRelease();
  if (v4 < 0xD && ((0x13BFu >> v4) & 1) != 0)
    return qword_190A582B8[(char)v4];
LABEL_8:
  result = sub_190A48448();
  __break(1u);
  return result;
}

char *CHSWidgetFamilyMask.internalFamilies()(__int16 a1)
{
  char *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;

  if ((a1 & 0x4000) == 0)
  {
    v2 = (char *)MEMORY[0x1E0DEE9D8];
    if ((a1 & 2) == 0)
      goto LABEL_12;
    goto LABEL_7;
  }
  v2 = sub_1908F270C(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v4 = *((_QWORD *)v2 + 2);
  v3 = *((_QWORD *)v2 + 3);
  if (v4 >= v3 >> 1)
    v2 = sub_1908F270C((char *)(v3 > 1), v4 + 1, 1, v2);
  *((_QWORD *)v2 + 2) = v4 + 1;
  v2[v4 + 32] = 12;
  if ((a1 & 2) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1908F270C(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
    v6 = *((_QWORD *)v2 + 2);
    v5 = *((_QWORD *)v2 + 3);
    if (v6 >= v5 >> 1)
      v2 = sub_1908F270C((char *)(v5 > 1), v6 + 1, 1, v2);
    *((_QWORD *)v2 + 2) = v6 + 1;
    v2[v6 + 32] = 0;
  }
LABEL_12:
  if ((a1 & 4) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1908F270C(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
    v8 = *((_QWORD *)v2 + 2);
    v7 = *((_QWORD *)v2 + 3);
    if (v8 >= v7 >> 1)
      v2 = sub_1908F270C((char *)(v7 > 1), v8 + 1, 1, v2);
    *((_QWORD *)v2 + 2) = v8 + 1;
    v2[v8 + 32] = 1;
    if ((a1 & 8) == 0)
    {
LABEL_14:
      if ((a1 & 0x20) == 0)
        goto LABEL_15;
      goto LABEL_31;
    }
  }
  else if ((a1 & 8) == 0)
  {
    goto LABEL_14;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1908F270C(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
  v10 = *((_QWORD *)v2 + 2);
  v9 = *((_QWORD *)v2 + 3);
  if (v10 >= v9 >> 1)
    v2 = sub_1908F270C((char *)(v9 > 1), v10 + 1, 1, v2);
  *((_QWORD *)v2 + 2) = v10 + 1;
  v2[v10 + 32] = 2;
  if ((a1 & 0x20) == 0)
  {
LABEL_15:
    if ((a1 & 0x10) == 0)
      goto LABEL_16;
    goto LABEL_36;
  }
LABEL_31:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1908F270C(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
  v12 = *((_QWORD *)v2 + 2);
  v11 = *((_QWORD *)v2 + 3);
  if (v12 >= v11 >> 1)
    v2 = sub_1908F270C((char *)(v11 > 1), v12 + 1, 1, v2);
  *((_QWORD *)v2 + 2) = v12 + 1;
  v2[v12 + 32] = 4;
  if ((a1 & 0x10) == 0)
  {
LABEL_16:
    if ((a1 & 0x40) == 0)
      goto LABEL_17;
    goto LABEL_41;
  }
LABEL_36:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1908F270C(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
  v14 = *((_QWORD *)v2 + 2);
  v13 = *((_QWORD *)v2 + 3);
  if (v14 >= v13 >> 1)
    v2 = sub_1908F270C((char *)(v13 > 1), v14 + 1, 1, v2);
  *((_QWORD *)v2 + 2) = v14 + 1;
  v2[v14 + 32] = 3;
  if ((a1 & 0x40) == 0)
  {
LABEL_17:
    if ((a1 & 0x400) == 0)
      goto LABEL_18;
    goto LABEL_46;
  }
LABEL_41:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1908F270C(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
  v16 = *((_QWORD *)v2 + 2);
  v15 = *((_QWORD *)v2 + 3);
  if (v16 >= v15 >> 1)
    v2 = sub_1908F270C((char *)(v15 > 1), v16 + 1, 1, v2);
  *((_QWORD *)v2 + 2) = v16 + 1;
  v2[v16 + 32] = 5;
  if ((a1 & 0x400) == 0)
  {
LABEL_18:
    if ((a1 & 0x800) == 0)
      goto LABEL_19;
    goto LABEL_51;
  }
LABEL_46:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1908F270C(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
  v18 = *((_QWORD *)v2 + 2);
  v17 = *((_QWORD *)v2 + 3);
  if (v18 >= v17 >> 1)
    v2 = sub_1908F270C((char *)(v17 > 1), v18 + 1, 1, v2);
  *((_QWORD *)v2 + 2) = v18 + 1;
  v2[v18 + 32] = 7;
  if ((a1 & 0x800) == 0)
  {
LABEL_19:
    if ((a1 & 0x1000) == 0)
      return v2;
    goto LABEL_56;
  }
LABEL_51:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1908F270C(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
  v20 = *((_QWORD *)v2 + 2);
  v19 = *((_QWORD *)v2 + 3);
  if (v20 >= v19 >> 1)
    v2 = sub_1908F270C((char *)(v19 > 1), v20 + 1, 1, v2);
  *((_QWORD *)v2 + 2) = v20 + 1;
  v2[v20 + 32] = 8;
  if ((a1 & 0x1000) != 0)
  {
LABEL_56:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1908F270C(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
    v22 = *((_QWORD *)v2 + 2);
    v21 = *((_QWORD *)v2 + 3);
    if (v22 >= v21 >> 1)
      v2 = sub_1908F270C((char *)(v21 > 1), v22 + 1, 1, v2);
    *((_QWORD *)v2 + 2) = v22 + 1;
    v2[v22 + 32] = 9;
  }
  return v2;
}

_QWORD *CHSWidgetFamilyMask.widgetFamilies.getter(__int16 a1)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;

  if ((a1 & 2) == 0)
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if ((a1 & 4) == 0)
      goto LABEL_12;
    goto LABEL_7;
  }
  v2 = sub_1908F23C8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v4 = v2[2];
  v3 = v2[3];
  if (v4 >= v3 >> 1)
    v2 = sub_1908F23C8((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
  v2[2] = v4 + 1;
  v2[v4 + 4] = 1;
  if ((a1 & 4) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1908F23C8(0, v2[2] + 1, 1, v2);
    v6 = v2[2];
    v5 = v2[3];
    if (v6 >= v5 >> 1)
      v2 = sub_1908F23C8((_QWORD *)(v5 > 1), v6 + 1, 1, v2);
    v2[2] = v6 + 1;
    v2[v6 + 4] = 2;
  }
LABEL_12:
  if ((a1 & 8) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1908F23C8(0, v2[2] + 1, 1, v2);
    v8 = v2[2];
    v7 = v2[3];
    if (v8 >= v7 >> 1)
      v2 = sub_1908F23C8((_QWORD *)(v7 > 1), v8 + 1, 1, v2);
    v2[2] = v8 + 1;
    v2[v8 + 4] = 3;
    if ((a1 & 0x2000) == 0)
    {
LABEL_14:
      if ((a1 & 0x10) == 0)
        goto LABEL_15;
      goto LABEL_30;
    }
  }
  else if ((a1 & 0x2000) == 0)
  {
    goto LABEL_14;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1908F23C8(0, v2[2] + 1, 1, v2);
  v10 = v2[2];
  v9 = v2[3];
  if (v10 >= v9 >> 1)
    v2 = sub_1908F23C8((_QWORD *)(v9 > 1), v10 + 1, 1, v2);
  v2[2] = v10 + 1;
  v2[v10 + 4] = 13;
  if ((a1 & 0x10) == 0)
  {
LABEL_15:
    if ((a1 & 0x40) == 0)
      goto LABEL_16;
    goto LABEL_35;
  }
LABEL_30:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1908F23C8(0, v2[2] + 1, 1, v2);
  v12 = v2[2];
  v11 = v2[3];
  if (v12 >= v11 >> 1)
    v2 = sub_1908F23C8((_QWORD *)(v11 > 1), v12 + 1, 1, v2);
  v2[2] = v12 + 1;
  v2[v12 + 4] = 4;
  if ((a1 & 0x40) == 0)
  {
LABEL_16:
    if ((a1 & 0x400) == 0)
      goto LABEL_17;
    goto LABEL_40;
  }
LABEL_35:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1908F23C8(0, v2[2] + 1, 1, v2);
  v14 = v2[2];
  v13 = v2[3];
  if (v14 >= v13 >> 1)
    v2 = sub_1908F23C8((_QWORD *)(v13 > 1), v14 + 1, 1, v2);
  v2[2] = v14 + 1;
  v2[v14 + 4] = 6;
  if ((a1 & 0x400) == 0)
  {
LABEL_17:
    if ((a1 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_45;
  }
LABEL_40:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1908F23C8(0, v2[2] + 1, 1, v2);
  v16 = v2[2];
  v15 = v2[3];
  if (v16 >= v15 >> 1)
    v2 = sub_1908F23C8((_QWORD *)(v15 > 1), v16 + 1, 1, v2);
  v2[2] = v16 + 1;
  v2[v16 + 4] = 10;
  if ((a1 & 0x800) == 0)
  {
LABEL_18:
    if ((a1 & 0x1000) == 0)
      return v2;
    goto LABEL_50;
  }
LABEL_45:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1908F23C8(0, v2[2] + 1, 1, v2);
  v18 = v2[2];
  v17 = v2[3];
  if (v18 >= v17 >> 1)
    v2 = sub_1908F23C8((_QWORD *)(v17 > 1), v18 + 1, 1, v2);
  v2[2] = v18 + 1;
  v2[v18 + 4] = 11;
  if ((a1 & 0x1000) != 0)
  {
LABEL_50:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1908F23C8(0, v2[2] + 1, 1, v2);
    v20 = v2[2];
    v19 = v2[3];
    if (v20 >= v19 >> 1)
      v2 = sub_1908F23C8((_QWORD *)(v19 > 1), v20 + 1, 1, v2);
    v2[2] = v20 + 1;
    v2[v20 + 4] = 12;
  }
  return v2;
}

uint64_t sub_1909D3F64(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1909D3F74(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

_BYTE **sub_1909D3FA8(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

void *sub_1909D3FB8(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_190A484CC();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_1909D404C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

unint64_t sub_1909D4078()
{
  unint64_t result;

  result = qword_1EE1E5D80;
  if (!qword_1EE1E5D80)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetFamily, &type metadata for WidgetFamily);
    atomic_store(result, (unint64_t *)&qword_1EE1E5D80);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WidgetFamily(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1909D410C + 4 * byte_190A57EF5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1909D4140 + 4 * byte_190A57EF0[v4]))();
}

uint64_t sub_1909D4140(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909D4148(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909D4150);
  return result;
}

uint64_t sub_1909D415C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909D4164);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1909D4168(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909D4170(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetFamily()
{
  return &type metadata for WidgetFamily;
}

uint64_t getEnumTagSinglePayload for InternalWidgetFamily(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalWidgetFamily(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1909D4268 + 4 * byte_190A57EFF[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1909D429C + 4 * byte_190A57EFA[v4]))();
}

uint64_t sub_1909D429C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909D42A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909D42ACLL);
  return result;
}

uint64_t sub_1909D42B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909D42C0);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1909D42C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909D42CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InternalWidgetFamily()
{
  return &type metadata for InternalWidgetFamily;
}

uint64_t EnvironmentValues._widgetMetrics.getter()
{
  uint64_t v1;

  sub_1908BE014();
  sub_190A46C3C();
  return v1;
}

uint64_t EnvironmentValues._widgetMetrics.setter()
{
  sub_1908BE014();
  return sub_190A46C48();
}

id sub_1909D4360()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D101F0]), sel_initWithSize_cornerRadius_, 0.0, 0.0, 0.0);
  qword_1ECF6D8B0 = (uint64_t)result;
  return result;
}

id sub_1909D439C@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_1ECF6C7D8 != -1)
    swift_once();
  v2 = (void *)qword_1ECF6D8B0;
  *a1 = qword_1ECF6D8B0;
  return v2;
}

uint64_t sub_1909D43EC()
{
  sub_1909D5480(&qword_1EE1E68F8, (unint64_t *)&qword_1ECF6CD48, 0x1E0D101F0, MEMORY[0x1E0DEFD00]);
  return sub_190A4681C();
}

uint64_t sub_1909D445C()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D8D8 = result;
  return result;
}

uint64_t sub_1909D4480()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CB70);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D8C0 = v0;
  strcpy(algn_1ECF6D8C8, "widgetMetrics");
  HIWORD(qword_1ECF6D8D0) = -4864;
  return result;
}

uint64_t sub_1909D44FC()
{
  if (qword_1ECF6C8F0 != -1)
    swift_once();
  return swift_retain();
}

id sub_1909D453C@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = *a1;
  return v2;
}

id sub_1909D4568@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = sub_1909D54C0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1909D4598()
{
  uint64_t v0;

  if (qword_1ECF6C8E8 != -1)
    swift_once();
  v0 = qword_1ECF6D8C0;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

void (*EnvironmentValues._widgetMetrics.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = sub_1908BE014();
  sub_190A46C3C();
  return sub_1909D4658;
}

void sub_1909D4658(uint64_t a1, char a2)
{
  id v2;
  id v4;

  v2 = *(id *)a1;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)a1;
  if ((a2 & 1) != 0)
  {
    v4 = v2;
    sub_190A46C48();

  }
  else
  {
    sub_190A46C48();
  }
}

uint64_t sub_1909D4724(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1909D4750 + 4 * byte_190A58320[a1]))(1702521203, 0xE400000000000000);
}

uint64_t sub_1909D4750()
{
  return 0x615272656E726F63;
}

uint64_t sub_1909D4770()
{
  return 0x636146656C616373;
}

uint64_t sub_1909D4790()
{
  return 0x6C797453746E6F66;
}

uint64_t sub_1909D47AC()
{
  return 0x6165724165666173;
}

uint64_t sub_1909D47D0()
{
  return 0x6E4974756F79616CLL;
}

uint64_t sub_1909D47F0()
{
  return 0x4D746E65746E6F63;
}

unint64_t sub_1909D4814()
{
  return 0xD000000000000013;
}

uint64_t sub_1909D483C()
{
  unsigned __int8 *v0;

  return sub_1909D4724(*v0);
}

uint64_t sub_1909D4844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1909D58A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1909D4868()
{
  sub_1909D56B8();
  return sub_190A48868();
}

uint64_t sub_1909D4890()
{
  sub_1909D56B8();
  return sub_190A48874();
}

id sub_1909D48B8(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  void *v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  id v51;
  void *v52;
  void *v53;
  objc_class *v54;
  void *v55;
  void *v56;
  uint64_t v57;
  id v58;
  id v59;
  objc_class *v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  double v71;
  uint64_t v72;
  void *v73;
  objc_super v74;
  objc_super v75;
  double v76;
  double v77;
  char v78;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CD80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909D56B8();
  sub_190A48838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    type metadata accessor for CHSWidgetMetricsCodable();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v76) = 8;
    if ((sub_190A485B0() & 1) != 0)
    {
      v78 = 8;
      sub_19091BF34();
      sub_190A48580();
      v73 = v1;
      v9 = *(_QWORD *)&v76;
      v10 = v77;
      sub_190A46378();
      v11 = (void *)sub_1908AB890(0, (unint64_t *)&qword_1ECF6CD48);
      v12 = (void *)sub_190A46360();
      v42 = v12;
      v66 = v11;
      v71 = v10;
      v72 = v9;
      objc_msgSend(v12, sel_size);
      v44 = v43;
      v46 = v45;
      objc_msgSend(v42, sel_cornerRadius);
      v48 = v47;
      objc_msgSend(v42, sel_scaleFactor);
      v50 = v49;
      v70 = objc_msgSend(v42, sel_fontStyle);
      v67 = objc_msgSend(v42, sel_margins);
      v68 = objc_msgSend(v42, sel_dynamicTextSupport);
      v69 = objc_msgSend(v42, sel_widgetGroupMargins);
      v51 = objc_msgSend(v42, sel_nestedContentMetrics);
      if (v51)
      {
        v52 = v51;
        v65 = sub_1908AB890(0, &qword_1EE1EC908);
        v64 = sub_1909D5480((unint64_t *)&qword_1EE1EE350, &qword_1EE1EC908, 0x1E0CB37E8, MEMORY[0x1E0DEFCF8]);
        sub_190A47A28();

        v53 = (void *)sub_190A47A1C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v53 = 0;
      }
      v66 = v53;
      v54 = (objc_class *)type metadata accessor for CHSWidgetMetricsCodable();
      v74.receiver = v73;
      v74.super_class = v54;
      v55 = v69;
      v56 = v67;
      v3 = objc_msgSendSuper2(&v74, sel_initWithSize_cornerRadius_scaleFactor_fontStyle_margins_supportsDynamicText_widgetGroupMargins_nestedContentMetrics_, v70, v67, v68, v69, v53, v44, v46, v48, v50);

      sub_1908B53FC(v72, *(unint64_t *)&v71);
    }
    else
    {
      type metadata accessor for CGSize(0);
      v78 = 0;
      sub_1908AED38(qword_1ECF6C300, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x1E0C9BA08]);
      sub_190A48580();
      v13 = v76;
      v14 = v77;
      v78 = 1;
      sub_1909314D8();
      sub_190A48580();
      v15 = v76;
      v78 = 2;
      sub_190A48580();
      v16 = v76;
      LOBYTE(v76) = 3;
      v73 = (void *)sub_190A48568();
      type metadata accessor for CGRect(0);
      v78 = 4;
      sub_1908AED38(&qword_1ECF6B998, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
      sub_190A48580();
      CHSEdgeInsetsFromRect();
      v18 = v17;
      v20 = v19;
      v22 = v21;
      v24 = v23;
      v78 = 5;
      sub_190A48580();
      v69 = v24;
      v70 = v22;
      v71 = v20;
      v72 = v18;
      CHSEdgeInsetsFromRect();
      v26 = v25;
      v28 = v27;
      v30 = v29;
      v32 = v31;
      v78 = 6;
      sub_190A48580();
      v65 = v32;
      v66 = v30;
      v67 = v28;
      v68 = v26;
      CHSEdgeInsetsFromRect();
      v34 = v33;
      v36 = v35;
      v38 = v37;
      v40 = v39;
      LOBYTE(v76) = 7;
      v57 = sub_190A48574();
      v64 = *MEMORY[0x1E0D0FEC0];
      v63 = *(_OWORD *)(MEMORY[0x1E0D0FEC0] + 8);
      v62 = *(_QWORD *)(MEMORY[0x1E0D0FEC0] + 24);
      v58 = objc_allocWithZone(MEMORY[0x1E0D101E8]);
      v59 = objc_msgSend(v58, sel_initWithSafeAreaInsets_layoutInsets_contentMargins_backgroundRemovedContentMargins_, *(double *)&v72, v71, *(double *)&v70, *(double *)&v69, *(double *)&v68, *(double *)&v67, *(double *)&v66, *(double *)&v65, v34, v36, v38, v40, v64, v63, v62);
      v60 = (objc_class *)type metadata accessor for CHSWidgetMetricsCodable();
      v75.receiver = v3;
      v75.super_class = v60;
      v3 = objc_msgSendSuper2(&v75, sel_initWithSize_cornerRadius_scaleFactor_fontStyle_margins_supportsDynamicText_widgetGroupMargins_nestedContentMetrics_, v73, v59, v57, 0, 0, v13, v14, v15, v16);

    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_1909D5010(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  unint64_t v11;
  _BYTE v12[16];
  uint64_t v13;
  unint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C780);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909D56B8();
  sub_190A48850();
  sub_190A46378();
  v7 = sub_190A4636C();
  if (v1)
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  v10 = v7;
  v11 = v8;
  v13 = v7;
  v14 = v8;
  v12[15] = 8;
  sub_19091C084();
  sub_190A48640();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  return sub_1908B53FC(v10, v11);
}

id sub_1909D52D4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CHSWidgetMetricsCodable();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CHSWidgetMetricsCodable()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for WidgetMetricsKey()
{
  return &type metadata for WidgetMetricsKey;
}

uint64_t sub_1909D5334(uint64_t a1, uint64_t a2)
{
  return sub_1908AED38(&qword_1ECF6CCD8, a2, (uint64_t (*)(uint64_t))type metadata accessor for CHSWidgetMetricsCodable, MEMORY[0x1E0DEFD00]);
}

id sub_1909D5360@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v5;
  id result;

  v5 = objc_allocWithZone((Class)type metadata accessor for CHSWidgetMetricsCodable());
  result = sub_1909D48B8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1909D53B0(_QWORD *a1)
{
  return sub_1909D5010(a1);
}

BOOL sub_1909D53D0(id *a1, _QWORD *a2)
{
  return objc_msgSend(*a1, sel_compare_, *a2) == (id)-1;
}

uint64_t sub_1909D53FC(uint64_t a1, uint64_t a2)
{
  return sub_1908AED38(&qword_1ECF6CCC8, a2, (uint64_t (*)(uint64_t))type metadata accessor for CHSWidgetMetricsCodable, (uint64_t)&unk_190A58374);
}

uint64_t sub_1909D5428(uint64_t a1, uint64_t a2)
{
  return sub_1908AED38(&qword_1ECF6CCD0, a2, (uint64_t (*)(uint64_t))type metadata accessor for CHSWidgetMetricsCodable, (uint64_t)&unk_190A583E4);
}

uint64_t sub_1909D5454(uint64_t a1, uint64_t a2)
{
  return sub_1908AED38(&qword_1ECF6CCC0, a2, (uint64_t (*)(uint64_t))type metadata accessor for CHSWidgetMetricsCodable, (uint64_t)&unk_190A583BC);
}

uint64_t sub_1909D5480(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_1908AB890(255, a2);
    result = MEMORY[0x19401429C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

id sub_1909D54C0(void *a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  objc_msgSend(a1, sel_size);
  v3 = v2;
  v5 = v4;
  objc_msgSend(a1, sel_cornerRadius);
  v7 = v6;
  objc_msgSend(a1, sel_scaleFactor);
  v9 = v8;
  v10 = objc_msgSend(a1, sel_fontStyle);
  v11 = objc_msgSend(a1, sel_margins);
  v12 = objc_msgSend(a1, sel_dynamicTextSupport);
  v13 = objc_msgSend(a1, sel_widgetGroupMargins);
  v14 = objc_msgSend(a1, sel_nestedContentMetrics);
  if (v14)
  {
    sub_1908AB890(0, &qword_1EE1EC908);
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6CD48);
    sub_1909D5480((unint64_t *)&qword_1EE1EE350, &qword_1EE1EC908, 0x1E0CB37E8, MEMORY[0x1E0DEFCF8]);
    sub_190A47A28();

    v14 = (id)sub_190A47A1C();
    swift_bridgeObjectRelease();
  }
  v15 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CHSWidgetMetricsCodable()), sel_initWithSize_cornerRadius_scaleFactor_fontStyle_margins_supportsDynamicText_widgetGroupMargins_nestedContentMetrics_, v10, v11, v12, v13, v14, v3, v5, v7, v9);

  return v15;
}

unint64_t sub_1909D56B8()
{
  unint64_t result;

  result = qword_1ECF6CCA8;
  if (!qword_1ECF6CCA8)
  {
    result = MEMORY[0x19401429C](&unk_190A5854C, &type metadata for CHSWidgetMetricsCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6CCA8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CHSWidgetMetricsCodable.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1909D5748 + 4 * byte_190A5832E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1909D577C + 4 * byte_190A58329[v4]))();
}

uint64_t sub_1909D577C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909D5784(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909D578CLL);
  return result;
}

uint64_t sub_1909D5798(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909D57A0);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1909D57A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909D57AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CHSWidgetMetricsCodable.CodingKeys()
{
  return &type metadata for CHSWidgetMetricsCodable.CodingKeys;
}

unint64_t sub_1909D57CC()
{
  unint64_t result;

  result = qword_1EE1EE358;
  if (!qword_1EE1EE358)
  {
    result = MEMORY[0x19401429C](&unk_190A58524, &type metadata for CHSWidgetMetricsCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE358);
  }
  return result;
}

unint64_t sub_1909D5814()
{
  unint64_t result;

  result = qword_1ECF6CCB8;
  if (!qword_1ECF6CCB8)
  {
    result = MEMORY[0x19401429C](&unk_190A58494, &type metadata for CHSWidgetMetricsCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6CCB8);
  }
  return result;
}

unint64_t sub_1909D585C()
{
  unint64_t result;

  result = qword_1ECF6CCB0;
  if (!qword_1ECF6CCB0)
  {
    result = MEMORY[0x19401429C](&unk_190A584BC, &type metadata for CHSWidgetMetricsCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6CCB0);
  }
  return result;
}

uint64_t sub_1909D58A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702521203 && a2 == 0xE400000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x636146656C616373 && a2 == 0xEB00000000726F74 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C797453746E6F66 && a2 == 0xE900000000000065 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6165724165666173 && a2 == 0xEE00737465736E49 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E4974756F79616CLL && a2 == 0xEC00000073746573 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4D746E65746E6F63 && a2 == 0xEE00736E69677261 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000190A64500 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000190A64520)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t View.hideViewOnSnapshot()(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  char v6;

  KeyPath = swift_getKeyPath();
  v6 = 0;
  MEMORY[0x194012838](&KeyPath, a1, &type metadata for HideViewOnSnapshotModifier, a2);
  return swift_release();
}

uint64_t HideViewOnSnapshotModifier.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  __swift_destroy_boxed_opaque_existential_1(a1);
  result = swift_getKeyPath();
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t HideViewOnSnapshotModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  char v10;
  double v11;
  uint64_t v12;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE360);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)v2;
  v9 = *(_BYTE *)(v2 + 8);
  sub_1908D1B74(v8, v9);
  v10 = sub_19096EA60(v8, v9);
  sub_1908CE654(v8, v9);
  if ((v10 & 1) != 0)
    v11 = 0.0;
  else
    v11 = 1.0;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE368);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, a1, v12);
  *(double *)&v7[*(int *)(v5 + 36)] = v11;
  return sub_1909D60E0((uint64_t)v7, a2);
}

uint64_t sub_1909D5E84()
{
  sub_1909D6330();
  return sub_190A470F8();
}

uint64_t sub_1909D5EEC()
{
  sub_1909D6330();
  return sub_190A47104();
}

uint64_t sub_1909D5F54()
{
  sub_1909D6330();
  return sub_190A47110();
}

uint64_t sub_1909D5FAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  char v10;
  double v11;
  uint64_t v12;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE360);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)v2;
  v9 = *(_BYTE *)(v2 + 8);
  sub_1908D1B74(v8, v9);
  v10 = sub_19096EA60(v8, v9);
  sub_1908CE654(v8, v9);
  if ((v10 & 1) != 0)
    v11 = 0.0;
  else
    v11 = 1.0;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE368);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, a1, v12);
  *(double *)&v7[*(int *)(v5 + 36)] = v11;
  return sub_1909D60E0((uint64_t)v7, a2);
}

uint64_t sub_1909D60A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  __swift_destroy_boxed_opaque_existential_1(a1);
  result = swift_getKeyPath();
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1909D60E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1909D6128()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1909D613C()
{
  unint64_t result;

  result = qword_1EE1EA8E8;
  if (!qword_1EE1EA8E8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for HideViewOnSnapshotModifier, &type metadata for HideViewOnSnapshotModifier);
    atomic_store(result, (unint64_t *)&qword_1EE1EA8E8);
  }
  return result;
}

unint64_t sub_1909D6184()
{
  unint64_t result;

  result = qword_1EE1EAE10;
  if (!qword_1EE1EAE10)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for HideViewOnSnapshotModifier, &type metadata for HideViewOnSnapshotModifier);
    atomic_store(result, (unint64_t *)&qword_1EE1EAE10);
  }
  return result;
}

unint64_t sub_1909D61CC()
{
  unint64_t result;

  result = qword_1EE1EAE08;
  if (!qword_1EE1EAE08)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for HideViewOnSnapshotModifier, &type metadata for HideViewOnSnapshotModifier);
    atomic_store(result, (unint64_t *)&qword_1EE1EAE08);
  }
  return result;
}

ValueMetadata *type metadata accessor for HideViewOnSnapshotModifier()
{
  return &type metadata for HideViewOnSnapshotModifier;
}

unint64_t sub_1909D6224()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EE370;
  if (!qword_1EE1EE370)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EE360);
    v2[0] = sub_1909D6290();
    v2[1] = MEMORY[0x1E0CD9728];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EE370);
  }
  return result;
}

unint64_t sub_1909D6290()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EE378;
  if (!qword_1EE1EE378)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EE368);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDBF10], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EE378);
  }
  return result;
}

uint64_t sub_1909D62DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_190A46894();
  v4[0] = v1;
  v4[1] = sub_1909D61CC();
  return MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v2, v4);
}

unint64_t sub_1909D6330()
{
  unint64_t result;

  result = qword_1EE1EAE00;
  if (!qword_1EE1EAE00)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for HideViewOnSnapshotModifier, &type metadata for HideViewOnSnapshotModifier);
    atomic_store(result, (unint64_t *)&qword_1EE1EAE00);
  }
  return result;
}

uint64_t sub_1909D6374()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  v0 = sub_190A47B24();
  result = MEMORY[0x194012D90](3081666804, 0xA400000000000000, v0);
  qword_1EE1EE380 = result;
  *(_QWORD *)algn_1EE1EE388 = v2;
  return result;
}

uint64_t static ControlRedactions.title.getter()
{
  return sub_1909D65D0(&qword_1EE1EC530, &qword_1EE1EE380);
}

uint64_t static ControlRedactions.title.setter(uint64_t a1, uint64_t a2)
{
  return sub_1909D665C(a1, a2, &qword_1EE1EC530, &qword_1EE1EE380, algn_1EE1EE388);
}

uint64_t (*static ControlRedactions.title.modify())()
{
  if (qword_1EE1EC530 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1909D646C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  v0 = sub_190A47B24();
  result = MEMORY[0x194012D90](3081666804, 0xA400000000000000, v0);
  qword_1EE1EE390 = result;
  *(_QWORD *)algn_1EE1EE398 = v2;
  return result;
}

uint64_t static ControlRedactions.subtitle.getter()
{
  return sub_1909D65D0(&qword_1EE1EC538, &qword_1EE1EE390);
}

uint64_t static ControlRedactions.subtitle.setter(uint64_t a1, uint64_t a2)
{
  return sub_1909D665C(a1, a2, &qword_1EE1EC538, &qword_1EE1EE390, algn_1EE1EE398);
}

uint64_t (*static ControlRedactions.subtitle.modify())()
{
  if (qword_1EE1EC538 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1909D6564()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  v0 = sub_190A47B24();
  result = MEMORY[0x194012D90](3081666804, 0xA400000000000000, v0);
  qword_1EE1EE3A0 = result;
  *(_QWORD *)algn_1EE1EE3A8 = v2;
  return result;
}

uint64_t static ControlRedactions.value.getter()
{
  return sub_1909D65D0(&qword_1EE1EC540, &qword_1EE1EE3A0);
}

uint64_t sub_1909D65D0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t static ControlRedactions.value.setter(uint64_t a1, uint64_t a2)
{
  return sub_1909D665C(a1, a2, &qword_1EE1EC540, &qword_1EE1EE3A0, algn_1EE1EE3A8);
}

uint64_t sub_1909D665C(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  if (*a3 != -1)
    swift_once();
  swift_beginAccess();
  *a4 = a1;
  *a5 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ControlRedactions.value.modify())()
{
  if (qword_1EE1EC540 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

ValueMetadata *type metadata accessor for ControlRedactions()
{
  return &type metadata for ControlRedactions;
}

uint64_t WidgetConfiguration._containerBackgroundRemovable(_:)(char a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_BYTE *)(v2 + 16) = a1;
  sub_190A2B704((uint64_t)sub_1909D67DC, v2);
  return swift_release();
}

uint64_t sub_1909D67CC()
{
  return swift_deallocObject();
}

uint64_t sub_1909D67DC(uint64_t a1)
{
  uint64_t v1;
  char v3;
  uint64_t result;

  v3 = *(_BYTE *)(v1 + 16);
  result = type metadata accessor for WidgetDescriptor(0);
  *(_BYTE *)(a1 + *(int *)(result + 76)) = v3;
  return result;
}

uint64_t sub_1909D680C()
{
  uint64_t v0;

  v0 = sub_190A472B4();
  __swift_allocate_value_buffer(v0, qword_1ECF6A9C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECF6A9C8);
  return sub_190A472A8();
}

uint64_t static ContainerBackgroundPlacement.widget.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ECF6A9B8 != -1)
    swift_once();
  v2 = sub_190A472B4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ECF6A9C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1909D68D0()
{
  sub_1909A27F8();
  return sub_190A46C54();
}

uint64_t static EnvironmentValues.ShowsWidgetBackgroundKey.defaultValue.getter()
{
  swift_beginAccess();
  return byte_1EE1EE3B0;
}

uint64_t static EnvironmentValues.ShowsWidgetBackgroundKey.defaultValue.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EE1EE3B0 = a1;
  return result;
}

uint64_t (*static EnvironmentValues.ShowsWidgetBackgroundKey.defaultValue.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1909D69BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_beginAccess();
  *a1 = byte_1EE1EE3B0;
  return result;
}

uint64_t _s7SwiftUI17EnvironmentValuesV9WidgetKitE06_showsE10BackgroundSbvs_0()
{
  sub_190942064();
  return sub_190A46C48();
}

uint64_t (*EnvironmentValues.showsWidgetBackground.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_190942064();
  sub_190A46C3C();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_1909D6AA4;
}

uint64_t (*EnvironmentValues._showsWidgetBackground.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_190942064();
  sub_190A46C3C();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_1909D6AA4;
}

uint64_t sub_1909D6B08(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_190A46C48();
}

uint64_t _s7SwiftUI17EnvironmentValuesV9WidgetKitE06_showsE10BackgroundSbvg_0()
{
  unsigned __int8 v1;

  sub_190942064();
  sub_190A46C3C();
  return v1;
}

uint64_t View.widgetBackgroundStyle<A>(_:)()
{
  uint64_t v0;

  if (qword_1ECF6A9B8 != -1)
    swift_once();
  v0 = sub_190A472B4();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECF6A9C8);
  return sub_190A47590();
}

{
  uint64_t v0;

  if (qword_1ECF6A9B8 != -1)
    swift_once();
  v0 = sub_190A472B4();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECF6A9C8);
  return sub_190A47590();
}

uint64_t _s7SwiftUI4ViewP9WidgetKitE09removableD10Background7contentQrqd__yc_tAaBRd__lF_0()
{
  uint64_t v0;

  if (qword_1ECF6A9B8 != -1)
    swift_once();
  v0 = sub_190A472B4();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECF6A9C8);
  sub_190A478CC();
  return sub_190A47584();
}

uint64_t View.widgetBackground<A>(isRemovable:content:)()
{
  uint64_t v0;

  if (qword_1ECF6A9B8 != -1)
    swift_once();
  v0 = sub_190A472B4();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECF6A9C8);
  sub_190A478CC();
  return sub_190A47584();
}

uint64_t sub_1909D6E6C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_190942064();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_1909D6EB8()
{
  sub_190942064();
  return sub_190A46C48();
}

ValueMetadata *type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey()
{
  return &type metadata for EnvironmentValues.ShowsWidgetBackgroundKey;
}

uint64_t sub_1909D6F18()
{
  sub_19090D084();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1909D6F64()
{
  return get_witness_table_7SwiftUI4ViewRzAA14LinearGradientVRsd__r__lqd0__AaBHD3_AaBPAAE19containerBackground_3forQrqd___AA09ContainerG9PlacementVtAA10ShapeStyleRd__lFQOyx_ADQo_HOTm();
}

uint64_t sub_1909D6F78()
{
  return get_witness_table_7SwiftUI4ViewRzAA14LinearGradientVRsd__r__lqd0__AaBHD3_AaBPAAE19containerBackground_3forQrqd___AA09ContainerG9PlacementVtAA10ShapeStyleRd__lFQOyx_ADQo_HOTm();
}

uint64_t get_witness_table_7SwiftUI4ViewRzAA14LinearGradientVRsd__r__lqd0__AaBHD3_AaBPAAE19containerBackground_3forQrqd___AA09ContainerG9PlacementVtAA10ShapeStyleRd__lFQOyx_ADQo_HOTm()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1909D6FC4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1909D6FF8()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_190903624((uint64_t)&unk_1E2CC9680);
  result = swift_arrayDestroy();
  qword_1ECF6ACF8 = v0;
  return result;
}

uint64_t sub_1909D7040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  void *v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for WidgetDescriptor(0);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((_QWORD)xmmword_1ECF6D940)
  {
    v8 = qword_1ECF6D950;
    v9 = *(_BYTE *)(v0 + 32);
    v11 = *(_QWORD *)(v0 + 16);
    v10 = *(_QWORD *)(v0 + 24);
    v12 = *(_BYTE *)(v0 + 8);
    v13 = *(void **)v0;
    v18 = *(_QWORD *)xmmword_1ECF6D940;
    v21 = xmmword_1ECF6D940;
    swift_retain();
    sub_1908D1B68(v13, v12);
    sub_19096A028(v11, v10, v9);
    sub_1908D1B68(v13, v12);
    v14 = (void *)sub_19096E88C(v13, v12);
    sub_1908D1BB0(v13, v12);
    sub_1908D1BB0(v13, v12);
    sub_1908CE660(v11, v10, v9);
    (*(void (**)(void *, uint64_t))(*(_QWORD *)(v8 + 8) + 8))(v14, v18);
    swift_release();

    v15 = v20;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v3, 1, v20) == 1)
    {
      sub_1908AA544((uint64_t)v3, &qword_1ECF6C788);
      v16 = 0;
    }
    else
    {
      sub_190906900((uint64_t)v3, (uint64_t)v7);
      v17 = v7[*(int *)(v15 + 76)];
      sub_190906988((uint64_t)v7);
      v16 = v17 ^ 1;
    }
    return v16 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1909D7214@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  ValueMetadata *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __int128 v23;
  __int128 v24;
  char v25;

  v17 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AB50);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AC80);
  v16 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[1];
  v23 = *v1;
  v24 = v8;
  v25 = *((_BYTE *)v1 + 32);
  sub_190A478CC();
  sub_190A3B46C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v4, 0.0, 1, INFINITY, 0);
  v9 = swift_allocObject();
  v10 = v24;
  *(_OWORD *)(v9 + 16) = v23;
  *(_OWORD *)(v9 + 32) = v10;
  *(_BYTE *)(v9 + 48) = v25;
  sub_1909D7C40((uint64_t)&v23, (void (*)(_QWORD, _QWORD))sub_1908D1B68, (void (*)(uint64_t, uint64_t, uint64_t))sub_19096A028);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AB88);
  v12 = sub_1909D7AC0();
  v13 = sub_1909D7B78();
  sub_190A475C0();
  swift_release();
  sub_1908AA544((uint64_t)v4, &qword_1ECF6AB50);
  v18 = v2;
  v19 = &_s9WidgetKeyVN;
  v20 = v11;
  v21 = v12;
  v22 = v13;
  swift_getOpaqueTypeConformance2();
  sub_1909D7A30();
  sub_190A475D8();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v7, v5);
}

uint64_t sub_1909D7454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  _OWORD v14[2];
  char v15;

  v6 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v6;
  v15 = *(_BYTE *)(a2 + 32);
  sub_1909D7C40(a2, (void (*)(_QWORD, _QWORD))sub_1908D1B68, (void (*)(uint64_t, uint64_t, uint64_t))sub_19096A028);
  if ((sub_1909D7040() & 1) != 0)
  {
    sub_1909D7C40(a2, (void (*)(_QWORD, _QWORD))sub_1908D1BB0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1908CE660);
    if (!a1)
    {
      v7 = 0;
      v8 = 0;
      result = 0;
      goto LABEL_7;
    }
LABEL_6:
    swift_retain();
    v8 = sub_190A468A0();
    result = sub_190A47308();
    v7 = a1;
    goto LABEL_7;
  }
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_BYTE *)(a2 + 32);
  sub_1909D7C40(a2, (void (*)(_QWORD, _QWORD))sub_1908D1B68, (void (*)(uint64_t, uint64_t, uint64_t))sub_19096A028);
  sub_19096A028(v10, v11, v12);
  sub_19096F06C(v10, v11, v12, (uint64_t)v14);
  sub_1908CE660(v10, v11, v12);
  sub_1909D7C40(a2, (void (*)(_QWORD, _QWORD))sub_1908D1BB0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1908CE660);
  v13 = *((_QWORD *)&v14[0] + 1) - 1;
  sub_1909D7C40(a2, (void (*)(_QWORD, _QWORD))sub_1908D1BB0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1908CE660);
  result = 0;
  v7 = 0;
  v8 = 0;
  if (v13 >= 2 && a1)
    goto LABEL_6;
LABEL_7:
  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 8) = v8;
  *(_BYTE *)(a3 + 16) = result;
  return result;
}

BOOL sub_1909D75B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  uint64_t v27;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WidgetDescriptor(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v27 - v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 8))(a1, a3, a4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1908AA544((uint64_t)v9, &qword_1ECF6C788);
    return 0;
  }
  sub_190906900((uint64_t)v9, (uint64_t)v16);
  if (qword_1ECF6AD00 != -1)
    swift_once();
  v17 = qword_1ECF6ACF8;
  v18 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v19 = objc_msgSend(v18, sel_mainBundle);
  v20 = objc_msgSend(v19, sel_bundleIdentifier);

  if (v20)
  {
    v21 = sub_190A47ADC();
    v23 = v22;

  }
  else
  {
    v23 = 0xE300000000000000;
    v21 = 7104878;
  }
  v24 = sub_1909C71EC(v21, v23, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_190906900((uint64_t)v16, (uint64_t)v14);
  if ((v24 & 1) == 0)
  {
    sub_190906988((uint64_t)v14);
    return 0;
  }
  v25 = v14[*(int *)(v10 + 88)];
  sub_190906988((uint64_t)v14);
  return v25 == 2 || (v25 & 1) == 0;
}

ValueMetadata *_s18WidgetSpecifiedKeyVMa()
{
  return &_s18WidgetSpecifiedKeyVN;
}

ValueMetadata *_s9WidgetKeyVMa()
{
  return &_s9WidgetKeyVN;
}

uint64_t destroy for WidgetBackgroundModifier(uint64_t a1)
{
  sub_1908D1BB0(*(id *)a1, *(_BYTE *)(a1 + 8));
  return sub_1908CE660(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for WidgetBackgroundModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a2;
  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B68(*(id *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  LOBYTE(v2) = *(_BYTE *)(v2 + 32);
  sub_19096A028(v6, v7, v2);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v2;
  return a1;
}

uint64_t assignWithCopy for WidgetBackgroundModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  char v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v2 = a2;
  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B68(*(id *)a2, v5);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1908D1BB0(v6, v7);
  v8 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  LOBYTE(v2) = *(_BYTE *)(v2 + 32);
  sub_19096A028(v8, v9, v2);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v2;
  sub_1908CE660(v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for WidgetBackgroundModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1908D1BB0(v6, v7);
  v8 = *((_BYTE *)a2 + 32);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_BYTE *)(a1 + 32) = v8;
  sub_1908CE660(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetBackgroundModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetBackgroundModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetBackgroundModifier()
{
  return &type metadata for WidgetBackgroundModifier;
}

unint64_t sub_1909D7A30()
{
  unint64_t result;

  result = qword_1ECF6AB00;
  if (!qword_1ECF6AB00)
  {
    result = MEMORY[0x19401429C](&unk_190A587AC, &_s18WidgetSpecifiedKeyVN);
    atomic_store(result, (unint64_t *)&qword_1ECF6AB00);
  }
  return result;
}

uint64_t sub_1909D7A74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1909D7A84()
{
  uint64_t v0;

  sub_1908D1BB0(*(id *)(v0 + 16), *(_BYTE *)(v0 + 24));
  sub_1908CE660(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_1909D7AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1909D7454(a1, v2 + 16, a2);
}

unint64_t sub_1909D7AC0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6AB48;
  if (!qword_1ECF6AB48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6AB50);
    v2[0] = sub_1909D7B2C();
    v2[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6AB48);
  }
  return result;
}

unint64_t sub_1909D7B2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECF6AC28;
  if (!qword_1ECF6AC28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6AC30);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDBF10], v1);
    atomic_store(result, (unint64_t *)&qword_1ECF6AC28);
  }
  return result;
}

unint64_t sub_1909D7B78()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1ECF6AB90;
  if (!qword_1ECF6AB90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6AB88);
    v2 = sub_1909D7BDC();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6AB90);
  }
  return result;
}

unint64_t sub_1909D7BDC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6AB78;
  if (!qword_1ECF6AB78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6AB80);
    v2[0] = MEMORY[0x1E0CDFD08];
    v2[1] = MEMORY[0x1E0CDCF90];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6AB78);
  }
  return result;
}

uint64_t sub_1909D7C40(uint64_t a1, void (*a2)(_QWORD, _QWORD), void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(unsigned __int8 *)(a1 + 32);
  a2(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
  a3(v5, v6, v7);
  return a1;
}

uint64_t sub_1909D7C9C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6AC80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6AB50);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6AB88);
  sub_1909D7AC0();
  sub_1909D7B78();
  swift_getOpaqueTypeConformance2();
  sub_1909D7A30();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1909D7D60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1909D7D84()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (qword_1ECF6AE58 != -1)
    swift_once();
  v0 = sub_190A465A0();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECF6D528);
  v1 = sub_190A46588();
  v2 = sub_190A47F68();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1908A7000, v1, v2, "Registering custom view decoders...", v3, 2u);
    MEMORY[0x194014398](v3, -1, -1);
  }

  type metadata accessor for WidgetURLModifier(0);
  sub_1908AA2F4(&qword_1ECF6B8C0, type metadata accessor for WidgetURLModifier, (uint64_t)&protocol conformance descriptor for WidgetURLModifier);
  sub_190A4711C();
  type metadata accessor for _ClockHandRotationEffect(0);
  sub_1908AA2F4((unint64_t *)&unk_1ECF69A60, type metadata accessor for _ClockHandRotationEffect, (uint64_t)&protocol conformance descriptor for _ClockHandRotationEffect);
  sub_190A4711C();
  sub_1909D6330();
  sub_190A4711C();
  sub_1909B5F5C();
  sub_190A468DC();
  sub_1909960A4();
  return sub_190A4711C();
}

uint64_t static WidgetArchiver.registerArchivableViewDecoders.getter()
{
  uint64_t result;

  if (qword_1EE1EAFA8 != -1)
    return swift_once();
  return result;
}

void *static WidgetArchiver.unarchive(from:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)();
  uint64_t v8;
  id v9;
  __int128 v11;
  unsigned __int8 v12;
  uint64_t (*v13)();
  __int128 v14;
  uint64_t v15;

  v3 = sub_190A46F78();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v7 = off_1ECF69D88;
  v8 = qword_1ECF69DA0;
  v11 = *(_OWORD *)&qword_1ECF69D90;
  swift_retain();
  swift_retain();
  v9 = a1;
  sub_190A46F24();
  if (!v1)
  {
    v13 = v7;
    v14 = v11;
    v15 = v8;
    v12 = 3;
    a1 = (void *)sub_1909D8D70((uint64_t)v6, &v12, (uint64_t *)&v13);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  swift_release();
  swift_release();
  return a1;
}

__int128 *static WidgetArchiver.unarchive(from:validationOptions:)(void *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  id v10;
  __int128 v12;
  __int128 v13;
  unsigned __int8 v14;
  _OWORD v15[2];

  v5 = sub_190A46F78();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a2;
  v12 = a2[1];
  v13 = v9;
  v10 = a1;
  sub_190A46F24();
  if (!v2)
  {
    v15[0] = v13;
    v15[1] = v12;
    v14 = 3;
    a2 = (__int128 *)sub_1909D8D70((uint64_t)v8, &v14, (uint64_t *)v15);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return a2;
}

unint64_t static WidgetArchiver.unarchive(from:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)();
  uint64_t v10;
  __int128 v12;
  uint64_t (*v13)();
  __int128 v14;
  uint64_t v15;
  unsigned __int8 v16;

  v5 = sub_190A46F78();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = off_1ECF69D88;
  v10 = qword_1ECF69DA0;
  v12 = *(_OWORD *)&qword_1ECF69D90;
  swift_retain();
  swift_retain();
  sub_1908B53B8(a1, a2);
  sub_190A46F60();
  if (!v2)
  {
    v13 = v9;
    v14 = v12;
    v15 = v10;
    v16 = 3;
    a2 = sub_1909D8D70((uint64_t)v8, &v16, (uint64_t *)&v13);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_release();
  swift_release();
  return a2;
}

__int128 *static WidgetArchiver.unarchive(from:validationOptions:)(uint64_t a1, unint64_t a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v13;
  __int128 v14;
  _OWORD v15[2];
  unsigned __int8 v16;

  v7 = sub_190A46F78();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a3;
  v13 = a3[1];
  v14 = v11;
  sub_1908B53B8(a1, a2);
  sub_190A46F60();
  if (!v3)
  {
    v15[0] = v14;
    v15[1] = v13;
    v16 = 3;
    a3 = (__int128 *)sub_1909D8D70((uint64_t)v10, &v16, (uint64_t *)v15);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return a3;
}

uint64_t static WidgetArchiver.unarchive(from:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[5];
  uint64_t (*v7)();
  __int128 v8;
  uint64_t v9;

  swift_beginAccess();
  v7 = off_1ECF69D88;
  v8 = *(_OWORD *)&qword_1ECF69D90;
  v9 = qword_1ECF69DA0;
  v2 = qword_1EE1EA8E0;
  swift_retain();
  swift_retain();
  if (v2 != -1)
    swift_once();
  v3 = qword_1EE1FD730;
  v6[3] = type metadata accessor for WidgetArchiverAssertionTracker();
  v6[4] = &off_1E2CC2008;
  v6[0] = v3;
  swift_retain();
  v4 = sub_1909D9218(a1, (__int128 *)&v7, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  swift_release();
  swift_release();
  return v4;
}

uint64_t static WidgetArchiver.unarchive(from:validationOptions:)(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[5];
  __int128 v8[2];

  v3 = a2[1];
  v8[0] = *a2;
  v8[1] = v3;
  if (qword_1EE1EA8E0 != -1)
    swift_once();
  v4 = qword_1EE1FD730;
  v7[3] = type metadata accessor for WidgetArchiverAssertionTracker();
  v7[4] = &off_1E2CC2008;
  v7[0] = v4;
  swift_retain();
  v5 = sub_1909D9218(a1, v8, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return v5;
}

unint64_t WidgetArchiver.ValidationError.errorDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = *v0;
  if (*v0 < 0)
  {
    v4 = (id)(v1 & 0x7FFFFFFFFFFFFFFFLL);
    sub_190A48298();
    swift_bridgeObjectRelease();
    v8 = 0xD00000000000001ELL;
    swift_getErrorValue();
    v3 = v7;
  }
  else
  {
    v2 = (id)v1;
    sub_190A48298();
    swift_bridgeObjectRelease();
    v8 = 0xD00000000000001BLL;
    swift_getErrorValue();
    v3 = v6;
  }
  sub_1909E4DD8(v3);
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_1909D9478(v1);
  return v8;
}

uint64_t WidgetArchiver.ValidationOptions.init(isSystemVersionSupported:isBundleSupported:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t sub_1909D86D0()
{
  return 0;
}

uint64_t static WidgetArchiver.ValidationOptions.none.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1909D8994(&off_1EE1E7798, qword_1EE1E77B0, &unk_1EE1E77A0, a1);
}

uint64_t static WidgetArchiver.ValidationOptions.none.setter(_OWORD *a1)
{
  return sub_1909D8A1C(a1, &off_1EE1E7798, (uint64_t)&unk_1EE1E77A0, (uint64_t)qword_1EE1E77B0, &off_1EE1E77A8);
}

uint64_t (*static WidgetArchiver.ValidationOptions.none.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1909D8748()
{
  uint64_t result;
  _QWORD *v1;

  if ((dyld_program_sdk_at_least() & 1) != 0)
    return 0;
  sub_1909D9834();
  result = swift_allocError();
  *v1 = 0xD00000000000001FLL;
  v1[1] = 0x8000000190A64640;
  return result;
}

uint64_t sub_1909D87BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  BOOL v15;
  _QWORD *v16;
  uint64_t v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB230);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for BundleStub();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1909AAD4C(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1909D97F4((uint64_t)v4);
    sub_1909D9834();
    v9 = swift_allocError();
    *v10 = 0xD00000000000001DLL;
    v10[1] = 0x8000000190A645D0;
  }
  else
  {
    sub_1908BD0B4((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
    v11 = *(int *)(v5 + 24);
    v12 = *(_QWORD *)&v8[v11];
    v13 = *(_QWORD *)&v8[v11 + 8];
    v14 = (_QWORD *)(a1 + v11);
    v15 = v12 == *v14 && v13 == v14[1];
    if (v15 || (sub_190A486DC() & 1) != 0)
    {
      sub_1908B5150((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
      return 0;
    }
    else
    {
      sub_1909D9834();
      v9 = swift_allocError();
      *v16 = 0xD000000000000046;
      v16[1] = 0x8000000190A645F0;
      sub_1908B5150((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
    }
  }
  return v9;
}

uint64_t static WidgetArchiver.ValidationOptions.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1909D8994(&off_1ECF69D88, &qword_1ECF69DA0, &qword_1ECF69D90, a1);
}

uint64_t sub_1909D8994@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;

  swift_beginAccess();
  v8 = *a2;
  *(_QWORD *)a4 = *a1;
  *(_OWORD *)(a4 + 8) = *a3;
  *(_QWORD *)(a4 + 24) = v8;
  swift_retain();
  return swift_retain();
}

uint64_t static WidgetArchiver.ValidationOptions.default.setter(_OWORD *a1)
{
  return sub_1909D8A1C(a1, &off_1ECF69D88, (uint64_t)&qword_1ECF69D90, (uint64_t)&qword_1ECF69DA0, &unk_1ECF69D98);
}

uint64_t sub_1909D8A1C(_OWORD *a1, _OWORD *a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  __int128 v8;

  swift_beginAccess();
  v8 = a1[1];
  *a2 = *a1;
  *a5 = v8;
  swift_release();
  return swift_release();
}

uint64_t (*static WidgetArchiver.ValidationOptions.default.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1909D8AD4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF68090);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_190A48400();
  __swift_allocate_value_buffer(v3, qword_1ECF6D3E0);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1ECF6D3E0);
  v7[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF68078);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF68080);
  sub_190A47B00();
  sub_190A483F4();
  v5 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

uint64_t sub_1909D8BC8(uint64_t *a1, uint64_t (**a2)())
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *a2 = sub_1908B4C18;
  a2[1] = (uint64_t (*)())v5;
  return result;
}

uint64_t WidgetArchiver.ValidationOptions.isSystemVersionSupported.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t WidgetArchiver.ValidationOptions.isSystemVersionSupported.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_release();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*WidgetArchiver.ValidationOptions.isSystemVersionSupported.modify())()
{
  return nullsub_1;
}

uint64_t sub_1909D8C9C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 16) = sub_1908B4C18;
  *(_QWORD *)(a2 + 24) = v5;
  return result;
}

uint64_t WidgetArchiver.ValidationOptions.isBundleSupported.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t WidgetArchiver.ValidationOptions.isBundleSupported.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*WidgetArchiver.ValidationOptions.isBundleSupported.modify())()
{
  return nullsub_1;
}

uint64_t sub_1909D8D70(uint64_t a1, unsigned __int8 *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD);
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  unint64_t v46;
  char v47[32];
  _QWORD v48[4];
  char *v49;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB218);
  MEMORY[0x1E0C80A78](v6);
  v42 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for WidgetArchivableMetadata(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v43 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v49 = (char *)&v40 - v11;
  v12 = sub_190A48400();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = *a2;
  v16 = *a3;
  v44 = *(_OWORD *)(a3 + 1);
  v17 = a3[3];
  v40 = a1;
  v18 = sub_190A46F30();
  v46 = v19;
  if (v19 >> 60 == 15)
  {
    v20 = sub_190A4831C();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90);
    *v22 = v8;
    sub_190A48304();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x1E0DEC460], v20);
    swift_willThrow();
  }
  else
  {
    v23 = v18;
    sub_190A45F10();
    swift_allocObject();
    v24 = sub_190A45F04();
    if (qword_1ECF680D0 != -1)
      swift_once();
    v25 = __swift_project_value_buffer(v12, (uint64_t)qword_1ECF6D3E0);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v25, v12);
    v48[3] = &type metadata for WidgetArchiver.ValidationOptions;
    v26 = swift_allocObject();
    v48[0] = v26;
    *(_QWORD *)(v26 + 16) = v16;
    *(_OWORD *)(v26 + 24) = v44;
    *(_QWORD *)(v26 + 40) = v17;
    swift_retain();
    swift_retain();
    v27 = (void (*)(char *, _QWORD))sub_190A45EF8();
    sub_1908E0E04((uint64_t)v48, (uint64_t)v15);
    v27(v47, 0);
    sub_1908AA2F4(&qword_1ECF68148, type metadata accessor for WidgetArchivableMetadata, (uint64_t)&unk_190A4D6E8);
    v28 = (uint64_t)v49;
    v30 = v45;
    v29 = v46;
    sub_190A45EEC();
    if (v30)
    {
      swift_release();
      sub_1908CE500(v23, v29);
    }
    else
    {
      sub_1909D9768(v28, v43);
      v31 = sub_190A46F78();
      v45 = v23;
      *(_QWORD *)&v44 = v24;
      v32 = v29;
      v33 = *(_QWORD *)(v31 - 8);
      v34 = (uint64_t)v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v42, v40, v31);
      v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
      v35(v34, 0, 1, v31);
      type metadata accessor for _TimelineArchivedViewCollection();
      v8 = swift_allocObject();
      *(_BYTE *)(v8 + 16) = 0;
      swift_beginAccess();
      *(_BYTE *)(v8 + 17) = byte_1ECF6C560;
      v36 = v8 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection____lazy_storage___dateRange;
      v37 = sub_190A45E68();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 1, 1, v37);
      v38 = v8 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_archivedStates;
      v35(v8 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_archivedStates, 1, 1, v31);
      sub_1908BD0B4(v43, v8 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata, type metadata accessor for WidgetArchivableMetadata);
      swift_beginAccess();
      sub_1909D97AC(v34, v38);
      swift_endAccess();
      swift_beginAccess();
      *(_BYTE *)(v8 + 17) = v41;
      swift_release();
      sub_1908CE500(v45, v32);
      sub_1908B5150(v28, type metadata accessor for WidgetArchivableMetadata);
    }
  }
  return v8;
}

uint64_t sub_1909D9218(uint64_t a1, __int128 *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 aBlock;
  __int128 v31;
  uint64_t (*v32)();
  uint64_t v33;
  unsigned __int8 v34;

  v28 = a1;
  v5 = sub_190A45FC4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_190A46F78();
  v26 = *(_QWORD *)(v9 - 8);
  v27 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a2;
  v24 = a2[1];
  v25 = v12;
  v13 = a3[3];
  v23 = a3;
  v14 = __swift_project_boxed_opaque_existential_1(a3, v13);
  v15 = *v14;
  v16 = *(void **)(*v14 + 16);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1909D9724;
  *(_QWORD *)(v17 + 24) = v15;
  v32 = sub_1909172D0;
  v33 = v17;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v31 = sub_1909D7D60;
  *((_QWORD *)&v31 + 1) = &block_descriptor_6;
  v18 = _Block_copy(&aBlock);
  v19 = v16;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v19, v18);

  _Block_release(v18);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v18 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v28, v5);
    v21 = v29;
    sub_190A46F18();
    if (!v21)
    {
      aBlock = v25;
      v31 = v24;
      v34 = 3;
      v5 = sub_1909D8D70((uint64_t)v11, &v34, (uint64_t *)&aBlock);
      __swift_project_boxed_opaque_existential_1(v23, v23[3]);
      sub_1909BB4B0();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v27);
    }
    return v5;
  }
  return result;
}

void sub_1909D9478(uint64_t a1)
{

}

uint64_t sub_1909D9484@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = sub_1909D96F4;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v5;
  return swift_retain();
}

uint64_t sub_1909D94D8@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = sub_1909D96F4;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v5;
  return swift_retain();
}

uint64_t *_s15ValidationErrorOwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  sub_1909D955C(*a2);
  *a1 = v3;
  return a1;
}

id sub_1909D955C(uint64_t a1)
{
  return (id)(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

void _s15ValidationErrorOwxx(uint64_t *a1)
{
  sub_1909D9478(*a1);
}

uint64_t *_s15ValidationErrorOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  sub_1909D955C(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1909D9478(v4);
  return a1;
}

uint64_t *_s15ValidationErrorOwta(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1909D9478(v3);
  return a1;
}

uint64_t _s15ValidationErrorOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s15ValidationErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1909D9680(_QWORD *a1)
{
  return *a1 >> 63;
}

_QWORD *sub_1909D968C(_QWORD *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_1909D969C(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for WidgetArchiver.ValidationError()
{
  return &type metadata for WidgetArchiver.ValidationError;
}

ValueMetadata *type metadata accessor for WidgetArchiver.ValidationOptions()
{
  return &type metadata for WidgetArchiver.ValidationOptions;
}

uint64_t sub_1909D96D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909D96F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char v4;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v4 & 1;
  return result;
}

void sub_1909D9724()
{
  _QWORD *v0;

  sub_1909BB0B4(v0);
}

uint64_t sub_1909D972C()
{
  return swift_deallocObject();
}

uint64_t sub_1909D973C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909D9768(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetArchivableMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1909D97AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1909D97F4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB230);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1909D9834()
{
  unint64_t result;

  result = qword_1EE1EE3B8;
  if (!qword_1EE1EE3B8)
  {
    result = MEMORY[0x19401429C](&unk_190A58988, &_s11SimpleErrorON);
    atomic_store(result, (unint64_t *)&qword_1EE1EE3B8);
  }
  return result;
}

ValueMetadata *_s11SimpleErrorOMa()
{
  return &_s11SimpleErrorON;
}

uint64_t sub_1909D989C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_1909D98B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = sub_190A46F84();
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_190A46F90();
}

uint64_t sub_1909D9978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v5 = sub_190A46F84();
  MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_190A46F90();
}

uint64_t EnvironmentValues.widgetRenderingMode.getter()
{
  sub_1909420A8();
  return sub_190A46C3C();
}

uint64_t EnvironmentValues.widgetRenderingMode.setter()
{
  sub_1909420A8();
  return sub_190A46C48();
}

uint64_t View.widgetAccentable(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  void (*v23)(_BYTE *, _BYTE *, uint64_t);
  void (*v24)(_BYTE *, uint64_t);
  void (*v25)(_BYTE *, _BYTE *, uint64_t);
  void (*v26)(_BYTE *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _BYTE v30[12];
  int v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  _QWORD v37[2];
  _QWORD v38[2];
  _QWORD v39[2];

  v34 = a4;
  v35 = a3;
  v31 = a1;
  v5 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v30[-v9];
  v11 = sub_190A46894();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = &v30[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v17 = &v30[-v16];
  v18 = sub_190A46F9C();
  v33 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = &v30[-v20];
  if ((v31 & 1) != 0)
  {
    v22 = v35;
    MEMORY[0x194012838](v19, a2, MEMORY[0x1E0CDCE18], v35);
    v36[0] = v22;
    v36[1] = MEMORY[0x1E0CDCE08];
    MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v11, v36);
    v23 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16);
    v23(v17, v15, v11);
    v24 = *(void (**)(_BYTE *, uint64_t))(v12 + 8);
    v24(v15, v11);
    v23(v15, v17, v11);
    sub_1909D98B4((uint64_t)v15, v11);
    v24(v15, v11);
    v24(v17, v11);
  }
  else
  {
    v25 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16);
    v25(v10, v32, a2);
    v25(v8, v10, a2);
    v39[0] = v35;
    v39[1] = MEMORY[0x1E0CDCE08];
    MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v11, v39);
    sub_1909D9978((uint64_t)v8, v11, a2);
    v26 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
    v26(v8, a2);
    v26(v10, a2);
  }
  v27 = v35;
  v38[0] = v35;
  v38[1] = MEMORY[0x1E0CDCE08];
  v37[0] = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v11, v38);
  v37[1] = v27;
  MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v18, v37);
  v28 = v33;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v33 + 16))(v34, v21, v18);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v28 + 8))(v21, v18);
}

unint64_t WidgetRenderingMode.init(_:)@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  unsigned int v2;

  v2 = 0x10200u >> (8 * result);
  if (result >= 3)
    LOBYTE(v2) = 0;
  *a2 = v2;
  return result;
}

BOOL static WidgetRenderingMode.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL static WidgetRenderingMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

WidgetKit::WidgetRenderingMode __swiftcall WidgetRenderingMode.init(mode:)(WidgetKit::WidgetRenderingMode mode)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)mode.mode;
  return mode;
}

void static WidgetRenderingMode.fullColor.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void static WidgetRenderingMode.accented.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static WidgetRenderingMode.vibrant.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

WidgetKit::WidgetRenderingMode::Mode_optional __swiftcall WidgetRenderingMode.Mode.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (WidgetKit::WidgetRenderingMode::Mode_optional)rawValue;
}

uint64_t WidgetRenderingMode.Mode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

WidgetKit::WidgetRenderingMode::Mode_optional sub_1909D9E14(Swift::Int *a1)
{
  return WidgetRenderingMode.Mode.init(rawValue:)(*a1);
}

uint64_t sub_1909D9E1C()
{
  sub_1909DA8DC();
  return sub_190A47C38();
}

uint64_t sub_1909D9E78()
{
  sub_1909DA8DC();
  return sub_190A47C20();
}

void WidgetRenderingMode.mode.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *WidgetRenderingMode.mode.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*WidgetRenderingMode.mode.modify())()
{
  return nullsub_1;
}

uint64_t WidgetRenderingMode.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6465746E65636361;
  if (*v0 != 1)
    v1 = 0x746E6172626976;
  if (*v0)
    return v1;
  else
    return 0x6F6C6F436C6C7566;
}

uint64_t sub_1909D9F4C()
{
  return 1701080941;
}

uint64_t sub_1909D9F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701080941 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_190A486DC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1909D9FE0()
{
  sub_1909DA1D0();
  return sub_190A48868();
}

uint64_t sub_1909DA008()
{
  sub_1909DA1D0();
  return sub_190A48874();
}

uint64_t sub_1909DA030()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6465746E65636361;
  if (*v0 != 1)
    v1 = 0x746E6172626976;
  if (*v0)
    return v1;
  else
    return 0x6F6C6F436C6C7566;
}

void *static WidgetRenderingMode.allCases.getter()
{
  return &unk_1E2CC13F8;
}

void sub_1909DA09C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E2CC14A0;
}

uint64_t WidgetRenderingMode.hash(into:)()
{
  return sub_190A487CC();
}

uint64_t WidgetRenderingMode.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;
  char v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B080);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909DA1D0();
  sub_190A48850();
  v10 = v7;
  sub_1909DA214();
  sub_190A48640();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1909DA1D0()
{
  unint64_t result;

  result = qword_1ECF6B318;
  if (!qword_1ECF6B318)
  {
    result = MEMORY[0x19401429C](&unk_190A58D6C, &type metadata for WidgetRenderingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B318);
  }
  return result;
}

unint64_t sub_1909DA214()
{
  unint64_t result;

  result = qword_1ECF6B068;
  if (!qword_1ECF6B068)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetRenderingMode.Mode, &type metadata for WidgetRenderingMode.Mode);
    atomic_store(result, (unint64_t *)&qword_1ECF6B068);
  }
  return result;
}

uint64_t WidgetRenderingMode.hashValue.getter()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t WidgetRenderingMode.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B3D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909DA1D0();
  sub_190A48838();
  if (!v2)
  {
    sub_1909DA3E0();
    sub_190A48580();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1909DA3B8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return WidgetRenderingMode.init(from:)(a1, a2);
}

uint64_t sub_1909DA3CC(_QWORD *a1)
{
  return WidgetRenderingMode.encode(to:)(a1);
}

unint64_t sub_1909DA3E0()
{
  unint64_t result;

  result = qword_1ECF6B310;
  if (!qword_1ECF6B310)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetRenderingMode.Mode, &type metadata for WidgetRenderingMode.Mode);
    atomic_store(result, (unint64_t *)&qword_1ECF6B310);
  }
  return result;
}

uint64_t sub_1909DA424()
{
  sub_1909DA59C();
  return sub_190A4681C();
}

uint64_t (*EnvironmentValues.widgetRenderingMode.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = sub_1909420A8();
  sub_190A46C3C();
  return sub_1909DA4CC;
}

uint64_t sub_1909DA4CC(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_190A46C48();
}

unint64_t sub_1909DA504()
{
  unint64_t result;

  result = qword_1EE1EE3C0;
  if (!qword_1EE1EE3C0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetRenderingMode.Mode, &type metadata for WidgetRenderingMode.Mode);
    atomic_store(result, (unint64_t *)&qword_1EE1EE3C0);
  }
  return result;
}

unint64_t sub_1909DA54C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EE3C8;
  if (!qword_1EE1EE3C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EE3D0);
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EE3C8);
  }
  return result;
}

unint64_t sub_1909DA59C()
{
  unint64_t result;

  result = qword_1EE1EADE8;
  if (!qword_1EE1EADE8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetRenderingMode, &type metadata for WidgetRenderingMode);
    atomic_store(result, (unint64_t *)&qword_1EE1EADE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetRenderingMode()
{
  return &type metadata for WidgetRenderingMode;
}

uint64_t _s9WidgetKit19WidgetRenderingModeV4ModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1909DA648 + 4 * byte_190A589D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1909DA67C + 4 * byte_190A589D0[v4]))();
}

uint64_t sub_1909DA67C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909DA684(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909DA68CLL);
  return result;
}

uint64_t sub_1909DA698(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909DA6A0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1909DA6A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909DA6AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetRenderingMode.Mode()
{
  return &type metadata for WidgetRenderingMode.Mode;
}

uint64_t sub_1909DA6C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];
  _QWORD v6[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_190A46894();
  v3 = sub_190A46F9C();
  v6[0] = v1;
  v6[1] = MEMORY[0x1E0CDCE08];
  v5[0] = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v2, v6);
  v5[1] = v1;
  return MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v3, v5);
}

uint64_t storeEnumTagSinglePayload for WidgetRenderingMode.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1909DA798 + 4 * byte_190A589DA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1909DA7B8 + 4 * byte_190A589DF[v4]))();
}

_BYTE *sub_1909DA798(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1909DA7B8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1909DA7C0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1909DA7C8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1909DA7D0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1909DA7D8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WidgetRenderingMode.CodingKeys()
{
  return &type metadata for WidgetRenderingMode.CodingKeys;
}

ValueMetadata *type metadata accessor for WidgetRenderingModeEnvironmentKey()
{
  return &type metadata for WidgetRenderingModeEnvironmentKey;
}

unint64_t sub_1909DA808()
{
  unint64_t result;

  result = qword_1EE1EE3D8;
  if (!qword_1EE1EE3D8)
  {
    result = MEMORY[0x19401429C](&unk_190A58D44, &type metadata for WidgetRenderingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE3D8);
  }
  return result;
}

unint64_t sub_1909DA850()
{
  unint64_t result;

  result = qword_1ECF6B328;
  if (!qword_1ECF6B328)
  {
    result = MEMORY[0x19401429C](&unk_190A58CB4, &type metadata for WidgetRenderingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B328);
  }
  return result;
}

unint64_t sub_1909DA898()
{
  unint64_t result;

  result = qword_1ECF6B320;
  if (!qword_1ECF6B320)
  {
    result = MEMORY[0x19401429C](&unk_190A58CDC, &type metadata for WidgetRenderingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B320);
  }
  return result;
}

unint64_t sub_1909DA8DC()
{
  unint64_t result;

  result = qword_1ECF6B308;
  if (!qword_1ECF6B308)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetRenderingMode.Mode, &type metadata for WidgetRenderingMode.Mode);
    atomic_store(result, (unint64_t *)&qword_1ECF6B308);
  }
  return result;
}

uint64_t sub_1909DA924()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D6D8 = result;
  return result;
}

uint64_t sub_1909DA948()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B518);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D6C0 = v0;
  strcpy(algn_1ECF6D6C8, "displayScale");
  BYTE5(qword_1ECF6D6D0) = 0;
  HIWORD(qword_1ECF6D6D0) = -5120;
  return result;
}

ValueMetadata *type metadata accessor for DisplayScaleKey()
{
  return &type metadata for DisplayScaleKey;
}

unint64_t sub_1909DA9D4()
{
  unint64_t result;

  result = qword_1ECF6C2F0;
  if (!qword_1ECF6C2F0)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEF068], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1ECF6C2F0);
  }
  return result;
}

uint64_t sub_1909DAA20()
{
  if (qword_1ECF6B5F8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1909DAA60()
{
  uint64_t v0;

  if (qword_1ECF6B5F0 != -1)
    swift_once();
  v0 = qword_1ECF6D6C0;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1909DAADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_1909DAAE4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1909DAAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1908C5090;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t IntentTimelineProvider.relevances()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1909DAB80()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)(v0 + 16);
  swift_getAssociatedTypeWitness();
  sub_1908B8234(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909DABCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1908CEB54;
  v7[4] = a2;
  v7[5] = a3;
  v7[3] = a1;
  v10 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(a3 + 64) + *(_QWORD *)(a3 + 64));
  v8 = (_QWORD *)swift_task_alloc();
  v7[6] = v8;
  *v8 = v7;
  v8[1] = sub_1909DACFC;
  return v10(v7 + 2, a2, a3);
}

uint64_t IntentTimelineProvider.relevance()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v8 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(a3 + 64) + *(_QWORD *)(a3 + 64));
  v6 = (_QWORD *)swift_task_alloc();
  v3[6] = v6;
  *v6 = v3;
  v6[1] = sub_1909DACFC;
  return v8(v3 + 2, a2, a3);
}

uint64_t sub_1909DACFC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1909DAD50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;

  v1 = *(_QWORD **)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 16);
  swift_getAssociatedTypeWitness();
  sub_1908B8550(&v3, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t dispatch thunk of IntentTimelineProvider.recommendations()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of IntentTimelineProvider.placeholder(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of IntentTimelineProvider.getSnapshot(for:in:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

uint64_t dispatch thunk of IntentTimelineProvider.getTimeline(for:in:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t dispatch thunk of IntentTimelineProvider.relevances()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 64) + *(_QWORD *)(a3 + 64));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1908CEB54;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of IntentTimelineProvider.relevance()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 72) + *(_QWORD *)(a3 + 72));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1908CEB54;
  return v9(a1, a2, a3);
}

void sub_1909DAEC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  uint64_t v9;
  id v10;

  if (a3 >> 60 != 15)
  {
    v8 = (void *)sub_190A45FE8();
    if (a4)
      goto LABEL_3;
LABEL_5:
    v9 = 0;
    goto LABEL_6;
  }
  v8 = 0;
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v9 = sub_190A45F4C();
LABEL_6:
  v10 = (id)v9;
  (*(void (**)(uint64_t, uint64_t, void *))(a5 + 16))(a5, a1, v8);

}

void sub_1909DAF50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_190A45F4C();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

uint64_t WidgetExtensionSessionOperation.defaultTimeout.getter()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)sub_1909DAFBC + 4 * byte_190A58ED0[*(unsigned __int8 *)(v0 + 8)]))();
}

double sub_1909DAFBC@<D0>(uint64_t a1@<X8>)
{
  return fmax((double)a1 + 5.0, 10.0);
}

double sub_1909DAFD4@<D0>(uint64_t a1@<X8>)
{
  return fmax((double)a1 + 10.0, 20.0);
}

double sub_1909DAFEC@<D0>(uint64_t a1@<X8>)
{
  return (double)a1 * 30.0;
}

double sub_1909DAFFC@<D0>(uint64_t a1@<X8>)
{
  return (double)a1 * 10.0;
}

double sub_1909DB00C@<D0>(uint64_t a1@<X8>)
{
  return dbl_190A59260[a1];
}

BOOL static ExtensionSessionType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ExtensionSessionType.hash(into:)()
{
  return sub_190A487CC();
}

uint64_t ExtensionSessionType.hashValue.getter()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t ExtensionSessionOptions.requiresUserInteractivePriority.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ExtensionSessionOptions.suspensionObserver.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1908AAA48(v1 + 8, a1, &qword_1EE1E5DB0);
}

void ExtensionSessionOptions.sessionType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 48);
}

uint64_t ExtensionSessionOptions.shouldTakeExtensionAssertion.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t ExtensionSessionOptions.environmentVariables.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t (*DefaultWatchdogTimeoutProvider.getter())(uint64_t a1)
{
  return sub_1908B4714;
}

uint64_t sub_1909DB100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_190A47FF8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_190A47FE0();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_190A479C8();
  MEMORY[0x1E0C80A78](v6);
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3A0);
  sub_190A47998();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1908AA2F4((unint64_t *)&unk_1ECF6D238, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D228);
  sub_1908AF598(&qword_1ECF6D230, &qword_1ECF6D228, MEMORY[0x1E0DEAF38]);
  sub_190A481E4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_190A4801C();
  qword_1EE1E5DA8 = result;
  return result;
}

id sub_1909DB2D4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CAA540]), sel_init);
  qword_1EE1E6970 = (uint64_t)result;
  return result;
}

id sub_1909DB304()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CAA540]), sel_init);
  qword_1EE1E6968 = (uint64_t)result;
  return result;
}

uint64_t sub_1909DB334()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for _DefaultExtensionIdentityProvider();
  result = swift_allocObject();
  qword_1EE1E5F48 = v0;
  unk_1EE1E5F50 = &off_1E2CC92F8;
  qword_1EE1E5F30 = result;
  return result;
}

uint64_t static WidgetExtensionSessionFactory.extensionIdentityProvider.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EE1E5F60 != -1)
    swift_once();
  swift_beginAccess();
  return sub_1908BBDC8((uint64_t)&qword_1EE1E5F30, a1);
}

uint64_t static WidgetExtensionSessionFactory.extensionIdentityProvider.setter(uint64_t *a1)
{
  if (qword_1EE1E5F60 != -1)
    swift_once();
  swift_beginAccess();
  __swift_assign_boxed_opaque_existential_1(&qword_1EE1E5F30, a1);
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t (*static WidgetExtensionSessionFactory.extensionIdentityProvider.modify())()
{
  if (qword_1EE1E5F60 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static WidgetExtensionSessionFactory.makeSession(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:)(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[8];
  _WORD v14[24];
  unint64_t v15;

  sub_1908AAA48(a5, (uint64_t)v14, &qword_1EE1E5DB0);
  v9 = sub_1908E034C(MEMORY[0x1E0DEE9D8]);
  v13[0] = a2;
  v14[20] = 256;
  v15 = v9;
  _s9WidgetKit0A23ExtensionSessionFactoryC04makeD03for7options23watchdogTimeoutProviderAA0acD0_pSgypSg_AA0cD7OptionsVSdSgAA0acD9OperationOcSgtFZ_0(a1, v13, a3, a4);
  v11 = v10;
  sub_1908B47EC((uint64_t)v13);
  return v11;
}

uint64_t static WidgetExtensionSessionFactory.makeSession(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:shouldTakeExtensionAssertion:)(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5, char a6)
{
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[8];
  _BYTE v16[48];
  unint64_t v17;

  sub_1908AAA48(a5, (uint64_t)v16, &qword_1EE1E5DB0);
  v11 = sub_1908E034C(MEMORY[0x1E0DEE9D8]);
  v15[0] = a2;
  v16[40] = 0;
  v16[41] = a6;
  v17 = v11;
  _s9WidgetKit0A23ExtensionSessionFactoryC04makeD03for7options23watchdogTimeoutProviderAA0acD0_pSgypSg_AA0cD7OptionsVSdSgAA0acD9OperationOcSgtFZ_0(a1, v15, a3, a4);
  v13 = v12;
  sub_1908B47EC((uint64_t)v15);
  return v13;
}

uint64_t static WidgetExtensionSessionFactory.makeSessionAsync(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:completion:)(uint64_t a1, char a2, uint8_t *a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD), unint64_t a7)
{
  unint64_t v13;
  char v15[8];
  _WORD v16[24];
  unint64_t v17;

  sub_1908AAA48(a5, (uint64_t)v16, &qword_1EE1E5DB0);
  v13 = sub_1908E034C(MEMORY[0x1E0DEE9D8]);
  v15[0] = a2;
  v16[20] = 256;
  v17 = v13;
  static WidgetExtensionSessionFactory.makeSessionAsync(for:options:watchdogTimeoutProvider:completion:)(a1, v15, a3, a4, a6, a7);
  return sub_1908B47EC((uint64_t)v15);
}

uint64_t static WidgetExtensionSessionFactory.makeSessionAsync(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:shouldTakeExtensionAssertion:completion:)(uint64_t a1, char a2, uint8_t *a3, uint64_t a4, uint64_t a5, char a6, void (*a7)(_QWORD), unint64_t a8)
{
  unint64_t v15;
  char v17[8];
  _BYTE v18[48];
  unint64_t v19;

  sub_1908AAA48(a5, (uint64_t)v18, &qword_1EE1E5DB0);
  v15 = sub_1908E034C(MEMORY[0x1E0DEE9D8]);
  v17[0] = a2;
  v18[40] = 0;
  v18[41] = a6;
  v19 = v15;
  static WidgetExtensionSessionFactory.makeSessionAsync(for:options:watchdogTimeoutProvider:completion:)(a1, v17, a3, a4, a7, a8);
  return sub_1908B47EC((uint64_t)v17);
}

void sub_1909DB764(void *a1, void (*a2)(_QWORD), uint64_t a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;

  v8 = sub_190A465A0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE1E5E28 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v8, (uint64_t)qword_1EE1FD688);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  v13 = a1;
  v14 = sub_190A46588();
  v15 = sub_190A47F50();
  if (os_log_type_enabled(v14, v15))
  {
    v24 = v9;
    v25 = a3;
    v26 = a2;
    v16 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v28 = v23;
    *(_DWORD *)v16 = 136446466;
    v17 = objc_msgSend(v13, sel_identifier);
    if (v17)
    {
      v18 = v17;
      v19 = sub_190A47ADC();
      v21 = v20;

      v27 = sub_1908B35C4(v19, v21, &v28);
      sub_190A48178();

      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2048;
      v27 = *(_QWORD *)&a4;
      sub_190A48178();
      _os_log_impl(&dword_1908A7000, v14, v15, "[%{public}s] Unable to create new WidgetExtensionSession because begin request watchdogged after %fs", (uint8_t *)v16, 0x16u);
      v22 = v23;
      swift_arrayDestroy();
      MEMORY[0x194014398](v22, -1, -1);
      MEMORY[0x194014398](v16, -1, -1);

      (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v8);
      v26(0);
    }
    else
    {

      __break(1u);
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    a2(0);
  }
}

uint64_t WidgetExtensionSessionFactory.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1909DB9F0()
{
  uint64_t result;

  type metadata accessor for _RunningBoardInterface();
  result = swift_allocObject();
  qword_1EE1FD6C8 = result;
  return result;
}

uint64_t sub_1909DBA18(unint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  void *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_190A48484();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = MEMORY[0x1E0DEE9D8];
  if (!v6)
  {
LABEL_11:
    a3(v7, a2);
    return swift_bridgeObjectRelease();
  }
  v13 = MEMORY[0x1E0DEE9D8];
  result = sub_190A4837C();
  if ((v6 & 0x8000000000000000) == 0)
  {
    v12 = a3;
    v9 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x194013510](v9, a1);
      else
        v10 = *(id *)(a1 + 8 * v9 + 32);
      v11 = v10;
      ++v9;
      objc_msgSend(v10, sel_copyAsCHSAvocadoDescriptor, v12);

      sub_190A48358();
      sub_190A48388();
      sub_190A48394();
      sub_190A48364();
    }
    while (v6 != v9);
    a3 = v12;
    v7 = v13;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

void sub_1909DBB74(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  _QWORD v18[6];

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a4;
  v14[3] = a5;
  v14[4] = a2;
  v14[5] = a3;
  v14[6] = a6;
  v14[7] = a7;
  v18[4] = sub_1909E4470;
  v18[5] = v14;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 1107296256;
  v18[2] = sub_1909DC2C4;
  v18[3] = &block_descriptor_309;
  v15 = _Block_copy(v18);
  v16 = a4;
  v17 = a5;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_getCurrentDescriptorsWithCompletion_, v15);
  _Block_release(v15);
}

uint64_t sub_1909DBC6C(unint64_t a1, void *a2, void *a3, void (*a4)(uint64_t (*)(), _QWORD *, _QWORD), uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v12 = a2;
  v13 = a3;
  v14 = sub_1909E0624(a1, (uint64_t)v12, (uint64_t)v13, (uint64_t)&v17, (void (*)(uint64_t, uint64_t))sub_1909DBD3C);

  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a6;
  v15[3] = a7;
  v15[4] = v14;
  swift_retain();
  a4(sub_1909E4238, v15, 0);
  return swift_release();
}

uint64_t sub_1909DBD3C(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  int v17;
  char v18;
  void *v19;
  unsigned int v20;
  char v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  id v32;
  void *v33;
  uint64_t v34;
  unsigned int v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  id v42;
  _OWORD v43[3];
  _BYTE v44[24];
  uint64_t v45;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v3, sel_mutableCopy);
  sub_190A481B4();
  swift_unknownObjectRelease();
  sub_1908AB890(0, &qword_1ECF6AAA0);
  swift_dynamicCast();
  v9 = *(void **)&v43[0];
  objc_msgSend(*(id *)&v43[0], sel_setExtensionIdentity_, a1);
  v10 = a1 + *MEMORY[0x1E0D0FE18];
  swift_beginAccess();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A528);
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
  if (v12(v10, 1, v11))
  {
    swift_endAccess();
    v17 = 0;
    v18 = 0;
    v19 = 0;
    goto LABEL_4;
  }
  v13 = sub_190A46300();
  v15 = v14;
  swift_endAccess();
  sub_1908AB890(0, &qword_1EE1E6A88);
  v16 = sub_1909DF360(v13, v15, 1);
  v19 = v16;
  if (!v16)
  {
    v17 = 0;
    v18 = 0;
    goto LABEL_4;
  }
  v36 = objc_msgSend(v16, sel_developerType);
  if (v36 == 1)
  {
    v37 = objc_msgSend(a2, sel_infoDictionary);
    v42 = v37;
    v38 = (void *)sub_190A47AC4();
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6C7D0);
    v39 = objc_msgSend(v37, sel_objectForKey_ofClass_, v38, swift_getObjCClassFromMetadata());

    if (v39)
    {
      sub_190A481B4();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v43, 0, 32);
    }
    sub_1908B4BD4((uint64_t)v43, (uint64_t)v44, (uint64_t *)&unk_1ECF6C8A0);
    if (v45)
    {
      if (swift_dynamicCast())
        goto LABEL_31;
    }
    else
    {
      sub_1908AA544((uint64_t)v44, (uint64_t *)&unk_1ECF6C8A0);
    }
    swift_beginAccess();
    if (v12(v10, 1, v11))
    {
      swift_endAccess();
      v40 = 0;
LABEL_32:
      objc_msgSend(v9, sel_setNativeContainerBundleIdentifier_, v40);

      v17 = 1;
      goto LABEL_33;
    }
    sub_190A46300();
    swift_endAccess();
LABEL_31:
    v40 = (void *)sub_190A47AC4();
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  v17 = v36;
LABEL_33:
  v18 = 1;
LABEL_4:
  v20 = objc_msgSend(v9, sel_enablesMultipleTapTargets);
  if (v17 == 1)
    v21 = v18;
  else
    v21 = 0;
  if ((v21 & 1) == 0 && v20)
    objc_msgSend(v9, sel_setEnablesMultipleTapTargets_, 0);
  v22 = objc_msgSend(v3, sel_widgetVisibility);
  v23 = objc_msgSend(a2, sel_URL);
  sub_190A45FA0();

  v24 = sub_190A45FC4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 0, 1, v24);
  v25 = sub_1909E043C((uint64_t)v22, (uint64_t)v8);
  sub_1908AA544((uint64_t)v8, (uint64_t *)&unk_1ECF6C858);
  objc_msgSend(v9, sel_setWidgetVisibility_, v25);
  v26 = objc_msgSend(v9, sel_sdkVersion);
  v27 = sub_190A47ADC();
  v29 = v28;

  if (v27 == sub_190A47ADC() && v29 == v30)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v31 = sub_190A486DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v31 & 1) == 0)
      goto LABEL_16;
  }
  v32 = objc_msgSend(a2, sel_SDKVersion);
  if (v32)
  {
    v33 = v32;
    objc_msgSend(v9, sel_setSdkVersion_, v32);

  }
LABEL_16:
  objc_msgSend(v9, sel_copy);
  sub_190A481B4();

  swift_unknownObjectRelease();
  sub_1908AB890(0, &qword_1ECF6D250);
  swift_dynamicCast();
  v34 = *(_QWORD *)&v43[0];

  return v34;
}

uint64_t sub_1909DC2C4(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1908AB890(0, &qword_1ECF6D250);
  v2 = sub_190A47C5C();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1909DC33C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  void *v6;
  uint64_t v7;
  id v8;

  sub_1908AB890(0, a4);
  v6 = (void *)sub_190A47C50();
  if (a2)
    v7 = sub_190A45F4C();
  else
    v7 = 0;
  v8 = (id)v7;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v6);

}

void sub_1909DC5BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v11;
  _QWORD *v12;
  void *v13;
  _QWORD v14[6];

  type metadata accessor for PlaceholderRequest();
  v11 = (void *)sub_190A47C50();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a5;
  v12[5] = a6;
  v14[4] = sub_1909E4314;
  v14[5] = v12;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1908B19EC;
  v14[3] = &block_descriptor_269;
  v13 = _Block_copy(v14);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_getPlaceholdersWithRequests_completion_, v11, v13);
  _Block_release(v13);

}

void sub_1909DC6D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v12;
  _QWORD *v13;
  void *v14;
  _QWORD v15[6];

  v12 = (void *)sub_190A47AC4();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a6;
  v13[5] = a7;
  v15[4] = sub_1909E4260;
  v15[5] = v13;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 1107296256;
  v15[2] = sub_1908A9D98;
  v15[3] = &block_descriptor_250;
  v14 = _Block_copy(v15);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_handleURLSessionEventsFor_completion_, v12, v14);
  _Block_release(v14);

}

uint64_t sub_1909DC7C4(void (*a1)(uint64_t (*)(), uint64_t, _QWORD), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  swift_retain();
  a1(sub_1909E426C, v7, 0);
  return swift_release();
}

uint64_t sub_1909DC960(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  _QWORD v19[6];

  v14 = (void *)sub_190A47AC4();
  if (a6)
  {
    swift_unknownObjectRetain();
    objc_opt_self();
    v15 = swift_dynamicCastObjCClass();
    if (!v15)
      swift_unknownObjectRelease();
  }
  else
  {
    v15 = 0;
  }
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a2;
  v16[3] = a3;
  v16[4] = a7;
  v16[5] = a8;
  v19[4] = sub_1909E4208;
  v19[5] = v16;
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 1107296256;
  v19[2] = sub_1908B19EC;
  v19[3] = &block_descriptor_231;
  v17 = _Block_copy(v19);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_attachPreviewAgentWithFrameworkPath_endpoint_handler_, v14, v15, v17);
  _Block_release(v17);

  return swift_unknownObjectRelease();
}

void sub_1909DCAA8(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

void sub_1909DCD5C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, SEL *a10)
{
  _QWORD *v17;
  void *v18;
  _QWORD v19[6];

  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a3;
  v17[4] = a5;
  v17[5] = a6;
  v19[4] = a8;
  v19[5] = v17;
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 1107296256;
  v19[2] = sub_1908B19EC;
  v19[3] = a9;
  v18 = _Block_copy(v19);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, *a10, a4, v18);
  _Block_release(v18);
}

void sub_1909DCF58(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v11;
  _QWORD *v12;
  void *v13;
  _QWORD v14[6];

  type metadata accessor for ControlTemplateRequest();
  v11 = (void *)sub_190A47C50();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a5;
  v12[5] = a6;
  v14[4] = sub_1909E4048;
  v14[5] = v12;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1908B19EC;
  v14[3] = &block_descriptor_175;
  v13 = _Block_copy(v14);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_getControlTemplatesWithRequests_completion_, v11, v13);
  _Block_release(v13);

}

void sub_1909DD06C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  void *v13;
  _QWORD *v14;
  void *v15;
  _QWORD v16[6];

  type metadata accessor for TimelineRequest();
  v13 = (void *)sub_190A47C50();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a2;
  v14[3] = a3;
  v14[4] = a6;
  v14[5] = a7;
  v16[4] = sub_1909E3FF4;
  v16[5] = v14;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1908B19EC;
  v16[3] = &block_descriptor_156;
  v15 = _Block_copy(v16);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_getTimelinesWithRequests_isPreview_completion_, v13, a5 & 1, v15);
  _Block_release(v15);

}

void sub_1909DD20C(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  id v16;
  id v17;
  _DWORD *v18;
  objc_class *v19;
  char *v20;
  id v21;
  id v22;
  char *v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  void *v28;
  _QWORD *v29;
  void *v30;
  __int128 aBlock;
  uint64_t (*v34)();
  void *v35;
  uint64_t (*v36)(void *);
  _QWORD *v37;
  objc_super v38;

  type metadata accessor for UnfairLock();
  v15 = swift_allocObject();
  v16 = a4;
  v17 = a5;
  v18 = (_DWORD *)swift_slowAlloc();
  *v18 = 0;
  *(_QWORD *)(v15 + 16) = v18;
  v19 = (objc_class *)type metadata accessor for TimelineRequest();
  v20 = (char *)objc_allocWithZone(v19);
  *(_QWORD *)&v20[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_widget] = v16;
  *(_QWORD *)&aBlock = v15;
  *((_QWORD *)&aBlock + 1) = v17;
  v21 = v16;
  v22 = a6;
  v23 = v20;
  WidgetEnvironment.filterForExtensions()();
  *(_OWORD *)&v23[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_environment] = aBlock;
  *(_QWORD *)&v23[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle] = v22;
  v23[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_archiveVersion] = 2;
  v24 = v22;

  v38.receiver = v23;
  v38.super_class = v19;
  v25 = objc_msgSendSuper2(&v38, sel_init);

  __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6BDD0);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_190A4B0F0;
  *(_QWORD *)(v26 + 32) = v25;
  sub_190A47C74();
  v27 = v25;
  v28 = (void *)sub_190A47C50();
  swift_bridgeObjectRelease();
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = a2;
  v29[3] = a3;
  v29[4] = a8;
  v29[5] = a9;
  v36 = sub_1909E3F7C;
  v37 = v29;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v34 = sub_1908B19EC;
  v35 = &block_descriptor_137_0;
  v30 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_getTimelinesWithRequests_isPreview_completion_, v28, a7 & 1, v30);
  _Block_release(v30);

}

void sub_1909DD5B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  void *v11;
  _QWORD v12[6];

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v12[4] = sub_1909E3E80;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1909DD74C;
  v12[3] = &block_descriptor_118;
  v11 = _Block_copy(v12);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_getAppIntentsXPCListenerEndpointWithCompletion_, v11);
  _Block_release(v11);
}

uint64_t sub_1909DD694(void *a1, uint64_t a2, unint64_t a3, void *a4, void (*a5)(uint64_t (*)(), _QWORD *, _QWORD), uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v15;
  id v16;
  id v17;

  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a7;
  v15[3] = a8;
  v15[4] = a1;
  v15[5] = a2;
  v15[6] = a3;
  v15[7] = a4;
  v16 = a1;
  swift_retain();
  sub_1908CE0B4(a2, a3);
  v17 = a4;
  a5(sub_1909E3ED8, v15, 0);
  return swift_release();
}

uint64_t sub_1909DD74C(uint64_t a1, void *a2, void *a3, void *a4)
{
  void *v5;
  void (*v7)(void *, void *, unint64_t, void *);
  id v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  id v13;

  v5 = a3;
  v7 = *(void (**)(void *, void *, unint64_t, void *))(a1 + 32);
  if (a3)
  {
    swift_retain();
    v8 = a2;
    v9 = v5;
    v5 = (void *)sub_190A46000();
    v11 = v10;

  }
  else
  {
    swift_retain();
    v12 = a2;
    v11 = 0xF000000000000000;
  }
  v13 = a4;
  v7(a2, v5, v11, a4);

  sub_1908CE500((uint64_t)v5, v11);
  return swift_release();
}

void sub_1909DD8F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v11;
  _QWORD *v12;
  void *v13;
  _QWORD v14[6];

  type metadata accessor for ActivityWidgetRequest(0);
  v11 = (void *)sub_190A47C50();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a5;
  v12[5] = a6;
  v14[4] = sub_1909E3DE0;
  v14[5] = v12;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1908B19EC;
  v14[3] = &block_descriptor_100;
  v13 = _Block_copy(v14);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_getActivitiesWithRequests_completion_, v11, v13);
  _Block_release(v13);

}

uint64_t sub_1909DD9F8(void *a1, void (*a2)(uint64_t, _QWORD *, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v12;
  id v13;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a1;
  v13 = a1;
  swift_retain();
  a2(a7, v12, 0);
  return swift_release();
}

uint64_t sub_1909DDA94(uint64_t a1, int a2, int a3, void *aBlock, void (*a5)(_QWORD), void (*a6)(uint64_t, uint64_t, void *))
{
  void *v9;
  uint64_t v10;

  v9 = _Block_copy(aBlock);
  a5(0);
  v10 = sub_190A47C5C();
  _Block_copy(v9);
  swift_retain();
  a6(v10, a1, v9);
  _Block_release(v9);
  _Block_release(v9);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1909DDB2C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  void *v13;
  _QWORD v14[6];

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a5;
  v12[5] = a6;
  v14[4] = sub_1909E3D84;
  v14[5] = v12;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1908B19EC;
  v14[3] = &block_descriptor_81_0;
  v13 = _Block_copy(v14);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_getWidgetRelevancesWithRequest_completion_, a4, v13);
  _Block_release(v13);
}

uint64_t sub_1909DDC10(void *a1, void (*a2)(uint64_t, _QWORD *, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v12;
  id v13;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a1;
  swift_retain();
  v13 = a1;
  a2(a7, v12, 0);
  return swift_release();
}

uint64_t sub_1909DDE7C(void *a1, uint64_t a2, void (*a3)(void *))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  char v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)(result + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock);
    v8 = *(os_unfair_lock_s **)(v7 + 16);
    swift_retain();
    os_unfair_lock_lock(v8);
    v9 = *(_BYTE *)(v6 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock_invalidated);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
    swift_release();
    if ((v9 & 1) == 0)
    {
      if (qword_1EE1E5E28 != -1)
        swift_once();
      v10 = sub_190A465A0();
      __swift_project_value_buffer(v10, (uint64_t)qword_1EE1FD688);
      swift_retain();
      v11 = a1;
      swift_retain();
      v12 = a1;
      v13 = sub_190A46588();
      v14 = sub_190A47F68();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = swift_slowAlloc();
        v16 = (_QWORD *)swift_slowAlloc();
        v20 = swift_slowAlloc();
        v22 = v20;
        *(_DWORD *)v15 = 136446466;
        v17 = sub_1908B3C54();
        sub_1908B35C4(v17, v18, &v22);
        sub_190A48178();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 12) = 2114;
        v19 = a1;
        v21 = _swift_stdlib_bridgeErrorToNSError();
        sub_190A48178();
        *v16 = v21;

        _os_log_impl(&dword_1908A7000, v13, v14, "%{public}s Unexpected error on session: %{public}@", (uint8_t *)v15, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
        swift_arrayDestroy();
        MEMORY[0x194014398](v16, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x194014398](v20, -1, -1);
        MEMORY[0x194014398](v15, -1, -1);
      }
      else
      {
        swift_release_n();

      }
      sub_1908B026C();
      a3(a1);
    }
    return swift_release();
  }
  return result;
}

id sub_1909DE15C(void *a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(id, _QWORD, uint64_t))
{
  unint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  int v44;
  int v45;
  int v46;

  v41 = MEMORY[0x1940115A8]();
  v42 = v6;
  v43 = v7;
  v44 = v8;
  v45 = v9;
  v46 = v10;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D016E0]), sel_initWithAuditToken_, &v41);
  objc_msgSend(v11, sel_pid);

  if (BSPIDIsBeingDebugged())
  {
    if (qword_1EE1E5E28 != -1)
      swift_once();
    v12 = sub_190A465A0();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EE1FD688);
    swift_retain_n();
    v13 = sub_190A46588();
    v14 = sub_190A47F68();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v16 = swift_slowAlloc();
      v39 = v16;
      *(_DWORD *)v15 = 136446466;
      v17 = sub_1908B3C54();
      v41 = sub_1908B35C4(v17, v18, &v39);
      sub_190A48178();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2082;
      v41 = a3;
      LOBYTE(v42) = a4;
      WidgetExtensionSessionOperation.description.getter();
      v41 = sub_1908B35C4(v19, v20, &v39);
      sub_190A48178();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      MEMORY[0x194014398](v16, -1, -1);
      MEMORY[0x194014398](v15, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    if (qword_1EE1E5E28 != -1)
      swift_once();
    v21 = sub_190A465A0();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EE1FD688);
    swift_retain_n();
    v22 = sub_190A46588();
    v23 = sub_190A47F68();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v39 = v25;
      *(_DWORD *)v24 = 136446466;
      v26 = sub_1908B3C54();
      v41 = sub_1908B35C4(v26, v27, &v39);
      sub_190A48178();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2082;
      v41 = a3;
      LOBYTE(v42) = a4;
      WidgetExtensionSessionOperation.description.getter();
      v41 = sub_1908B35C4(v28, v29, &v39);
      sub_190A48178();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      MEMORY[0x194014398](v25, -1, -1);
      MEMORY[0x194014398](v24, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
    v41 = 0;
    v42 = 0xE000000000000000;
    sub_190A48298();
    swift_bridgeObjectRelease();
    v41 = 0xD000000000000020;
    v42 = 0x8000000190A64A70;
    v39 = a3;
    v40 = a4;
    WidgetExtensionSessionOperation.description.getter();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    v30 = v41;
    v31 = v42;
    v32 = sub_190A47ADC();
    v34 = sub_19096BFDC(v32, v33, 1001, 0, v30, v31);
    a5(v34, 0, 1);

  }
  return objc_msgSend(a1, sel_invalidate);
}

uint64_t sub_1909DE644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E5DE8);
  swift_allocObject();
  swift_retain();
  result = sub_190A465E8();
  *a3 = result;
  return result;
}

uint64_t sub_1909DE6C4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t a1, uint64_t a2, char a3), uint64_t))
{
  uint64_t v6;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_retain();
  a3(sub_1908B4364, v6);
  return swift_release();
}

uint64_t sub_1909DE734(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(id), uint64_t a7, uint64_t a8)
{
  void *v14;
  uint64_t result;
  uint64_t v16;
  id *v17;
  id v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void (*v40)(id);
  id v41;
  id v42;
  uint64_t v43;
  os_unfair_lock_s *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  char v53;
  id v54;

  v14 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v16 = result;
  v17 = (id *)(a3 + 16);
  swift_beginAccess();
  if (*v17)
    objc_msgSend(*v17, sel_cancel);
  swift_beginAccess();
  if (*v17)
    objc_msgSend(*v17, sel_invalidate);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1E5DC0);
  if (v14)
  {
    v51 = v14;
    v18 = v14;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6AE48);
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
    if (!swift_dynamicCast())
    {
      result = sub_190A486D0();
      __break(1u);
      return result;
    }
    v48 = a4;
    v49 = a5;
    if (qword_1EE1E5E28 != -1)
      swift_once();
    v19 = sub_190A465A0();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EE1FD688);
    swift_retain_n();
    v20 = v54;
    v21 = sub_190A46588();
    v22 = sub_190A47F68();
    if (os_log_type_enabled(v21, v22))
    {
      v47 = a7;
      v23 = swift_slowAlloc();
      v45 = (_QWORD *)swift_slowAlloc();
      v46 = swift_slowAlloc();
      v50 = v46;
      *(_DWORD *)v23 = 136446722;
      v24 = sub_1908B3C54();
      v52 = sub_1908B35C4(v24, v25, &v50);
      sub_190A48178();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2082;
      v52 = v48;
      v53 = a5;
      WidgetExtensionSessionOperation.description.getter();
      v52 = sub_1908B35C4(v26, v27, &v50);
      sub_190A48178();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 22) = 2112;
      v52 = (uint64_t)v20;
      v28 = v20;
      sub_190A48178();
      *v45 = v20;

      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
      swift_arrayDestroy();
      MEMORY[0x194014398](v45, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x194014398](v46, -1, -1);
      v29 = v23;
      a7 = v47;
      MEMORY[0x194014398](v29, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v30 = objc_msgSend(v20, sel_domain, v45);
    v31 = sub_190A47ADC();
    v33 = v32;

    if (v31 == sub_190A47ADC() && v33 == v34)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v35 = sub_190A486DC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v35 & 1) == 0)
        goto LABEL_19;
    }
    if (objc_msgSend(v20, sel_code) == (id)1001)
    {
      v52 = v48;
      v53 = v49;
      WidgetExtensionSessionOperation.description.getter();
      v37 = v36;
      v39 = v38;
      v40 = a6;
      v41 = v20;
      swift_retain();
      sub_1909E310C(v37, v39, v16, v40, a7, v41);
      swift_bridgeObjectRelease();
      swift_release();
LABEL_20:

      goto LABEL_21;
    }
LABEL_19:
    v42 = v20;
    a6(v20);
    goto LABEL_20;
  }
LABEL_21:
  v43 = *(_QWORD *)(v16 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock);
  v44 = *(os_unfair_lock_s **)(v43 + 16);
  swift_retain();
  os_unfair_lock_lock(v44);
  swift_beginAccess();
  if (*(_QWORD *)(a8 + 16))
  {
    swift_retain();
    sub_190A465C4();
    swift_beginAccess();
    sub_1908AAA8C();
    swift_endAccess();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  *(_QWORD *)(a8 + 16) = 0;
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v43 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1909DECE0(uint64_t (**a1)(_QWORD))
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;

  v1 = *a1;
  if (qword_1EE1E5E28 != -1)
    swift_once();
  v2 = sub_190A465A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EE1FD688);
  swift_retain_n();
  v3 = sub_190A46588();
  v4 = sub_190A47F68();
  if (os_log_type_enabled(v3, v4))
  {
    v14 = v1;
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v15 = v6;
    *(_DWORD *)v5 = 136446466;
    v7 = sub_1908B3C54();
    sub_1908B35C4(v7, v8, &v15);
    sub_190A48178();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    WidgetExtensionSessionOperation.description.getter();
    sub_1908B35C4(v9, v10, &v15);
    sub_190A48178();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    MEMORY[0x194014398](v6, -1, -1);
    v11 = v5;
    v1 = v14;
    MEMORY[0x194014398](v11, -1, -1);

  }
  else
  {

    v12 = swift_release_n();
  }
  return v1(v12);
}

uint64_t sub_1909DEEE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  if (qword_1EE1E5E28 != -1)
    swift_once();
  v4 = sub_190A465A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EE1FD688);
  swift_retain_n();
  v5 = sub_190A46588();
  v6 = sub_190A47F50();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136446722;
    v9 = sub_1908B3C54();
    sub_1908B35C4(v9, v10, &v13);
    sub_190A48178();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 1024;
    sub_190A48178();
    *(_WORD *)(v7 + 18) = 2048;
    sub_190A48178();
    _os_log_impl(&dword_1908A7000, v5, v6, "%{public}s Extension process termination watchdogged pid (%d) after %fs", (uint8_t *)v7, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v8, -1, -1);
    MEMORY[0x194014398](v7, -1, -1);

  }
  else
  {

    v11 = swift_release_n();
  }
  return a3(v11);
}

void sub_1909DF0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if (qword_1EE1E5E28 != -1)
    swift_once();
  v7 = sub_190A465A0();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EE1FD688);
  swift_retain_n();
  v8 = sub_190A46588();
  v9 = sub_190A47F68();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v14 = v11;
    *(_DWORD *)v10 = 136446466;
    v12 = sub_1908B3C54();
    sub_1908B35C4(v12, v13, &v14);
    sub_190A48178();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 1024;
    sub_190A48178();
    _os_log_impl(&dword_1908A7000, v8, v9, "%{public}s Extension process terminated pid (%d)", (uint8_t *)v10, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x194014398](v11, -1, -1);
    MEMORY[0x194014398](v10, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  sub_190957188(a6);
}

void sub_1909DF2E4(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, id);
  id v6;
  id v7;

  v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, v6);
  swift_release();

}

id sub_1909DF350()
{
  id *v0;

  return objc_msgSend(*v0, sel_invalidate);
}

id sub_1909DF360(uint64_t a1, uint64_t a2, char a3)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (void *)sub_190A47AC4();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bundleRecordWithBundleIdentifier_allowPlaceholder_error_, v4, a3 & 1, v9);

  if (v5)
  {
    v6 = v9[0];
  }
  else
  {
    v7 = v9[0];
    sub_190A45F58();

    swift_willThrow();
  }
  return v5;
}

id sub_1909DF444(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  id v13;
  void *v14;
  id v16;

  v3 = v2;
  objc_msgSend(v3, sel_mutableCopy);
  sub_190A481B4();
  swift_unknownObjectRelease();
  sub_1908AB890(0, &qword_1EE1EB9A0);
  swift_dynamicCast();
  objc_msgSend(v16, sel_setExtensionIdentity_, a1);
  v6 = objc_msgSend(v16, sel_sdkVersion);
  v7 = sub_190A47ADC();
  v9 = v8;

  if (v7 == sub_190A47ADC() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = sub_190A486DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
      goto LABEL_10;
  }
  v13 = objc_msgSend(a2, sel_SDKVersion);
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v16, sel_setSdkVersion_, v13);

  }
LABEL_10:
  objc_msgSend(v16, sel_copy);
  sub_190A481B4();

  swift_unknownObjectRelease();
  sub_1908AB890(0, &qword_1ECF6B010);
  swift_dynamicCast();
  return v16;
}

id sub_1909DF614(uint64_t a1, void *a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20[2];
  __int128 v21;
  _BYTE v22[24];
  uint64_t v23;

  objc_msgSend(v2, sel_mutableCopy);
  sub_190A481B4();
  swift_unknownObjectRelease();
  sub_1908AB890(0, qword_1ECF6A3F0);
  swift_dynamicCast();
  v5 = v20[0];
  objc_msgSend(v20[0], sel_setExtensionIdentity_, a1);
  v6 = a1 + *MEMORY[0x1E0D0FE18];
  swift_beginAccess();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A528);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    v9 = sub_190A46300();
    v11 = v10;
    swift_endAccess();
    sub_1908AB890(0, &qword_1EE1E6A88);
    v12 = sub_1909DF360(v9, v11, 1);
    v13 = v12;
    if (!v12 || objc_msgSend(v12, sel_developerType) != 1)
      goto LABEL_4;
    v16 = objc_msgSend(a2, sel_infoDictionary);
    v17 = (void *)sub_190A47AC4();
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6C7D0);
    v18 = objc_msgSend(v16, sel_objectForKey_ofClass_, v17, swift_getObjCClassFromMetadata());

    if (v18)
    {
      sub_190A481B4();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)v20 = 0u;
      v21 = 0u;
    }
    sub_1908B4BD4((uint64_t)v20, (uint64_t)v22, (uint64_t *)&unk_1ECF6C8A0);
    if (v23)
    {
      if (swift_dynamicCast())
        goto LABEL_18;
    }
    else
    {
      sub_1908AA544((uint64_t)v22, (uint64_t *)&unk_1ECF6C8A0);
    }
    swift_beginAccess();
    if (v8(v6, 1, v7))
    {
      swift_endAccess();
      v19 = 0;
LABEL_19:
      objc_msgSend(v5, sel_setNativeContainerBundleIdentifier_, v19);

      goto LABEL_5;
    }
    sub_190A46300();
    swift_endAccess();
LABEL_18:
    v19 = (void *)sub_190A47AC4();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  swift_endAccess();
  v13 = 0;
LABEL_4:
  objc_msgSend(v20[0], sel_setHiddenControl_, 0);
LABEL_5:
  objc_msgSend(v5, sel_copy);
  sub_190A481B4();

  swift_unknownObjectRelease();
  sub_1908AB890(0, qword_1ECF6A8E8);
  swift_dynamicCast();
  v14 = v20[0];

  return v14;
}

uint64_t sub_1909DF9A8(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_1909DF9C8@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1909DF9F0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v19;

  v2 = v1;
  v4 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = *v2;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v6 = sub_190A48238();
    swift_release();
    if ((v6 & 1) != 0)
    {
      v7 = sub_1909DFD48(v5, a1);
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_190A487C0();
  v8 = *(void **)(a1 + 56);
  swift_bridgeObjectRetain();
  v9 = v8;
  sub_190A48100();

  v10 = sub_190A48808();
  v11 = -1 << *(_BYTE *)(v4 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
    goto LABEL_15;
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6C5E0);
  swift_retain();
  v13 = sub_190A480F4();
  swift_release();
  if ((v13 & 1) == 0)
  {
    v14 = ~v11;
    do
    {
      v12 = (v12 + 1) & v14;
      if (((*(_QWORD *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_15;
      swift_retain();
      v15 = sub_190A480F4();
      swift_release();
    }
    while ((v15 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1908F7878();
    v17 = v19;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * v12);
  sub_1909E00CC(v12);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1909DFC00()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *v0;
  sub_190A487C0();
  swift_bridgeObjectRetain();
  sub_190A47908();
  v2 = sub_190A48808();
  v3 = -1 << *(_BYTE *)(v1 + 32);
  v4 = v2 & ~v3;
  if (((*(_QWORD *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((sub_190A478FC() & 1) == 0)
  {
    v5 = ~v3;
    do
    {
      v4 = (v4 + 1) & v5;
      if (((*(_QWORD *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
        goto LABEL_9;
    }
    while ((sub_190A478FC() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v0;
  v10 = *v0;
  *v0 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1908F7A34();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v4);
  sub_1909E0294(v4);
  *v0 = v10;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1909DFD48(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v3 = v2;
  swift_bridgeObjectRelease();
  v5 = sub_190A48214();
  v6 = swift_unknownObjectRetain();
  v7 = sub_1908F5988(v6, v5);
  v18 = v7;
  sub_190A487C0();
  v8 = *(void **)(a2 + 56);
  swift_retain();
  v9 = v8;
  sub_190A48100();

  v10 = sub_190A48808();
  v11 = -1 << *(_BYTE *)(v7 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v7 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6C5E0);
    swift_retain();
    v13 = sub_190A480F4();
    swift_release();
    if ((v13 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v16 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v12);
      sub_1909E00CC(v12);
      if ((sub_190A480F4() & 1) != 0)
      {
        *v3 = v18;
        return v16;
      }
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        v12 = (v12 + 1) & v14;
        if (((*(_QWORD *)(v7 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          break;
        swift_retain();
        v15 = sub_190A480F4();
        swift_release();
        if ((v15 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1909DFF1C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  swift_bridgeObjectRelease();
  v1 = sub_190A48214();
  v2 = swift_unknownObjectRetain();
  v3 = sub_1908F5B98(v2, v1);
  v10 = v3;
  sub_190A465D0();
  sub_1908AA2F4(&qword_1EE1E5DD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
  swift_retain();
  v4 = sub_190A47A40();
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v7 = ~v5;
    sub_1908AA2F4(&qword_1EE1E5DD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E20]);
    while ((sub_190A47AAC() & 1) == 0)
    {
      v6 = (v6 + 1) & v7;
      if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      {
        swift_release();
        __break(1u);
        break;
      }
    }
    swift_release();
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v6);
    sub_1908B439C(v6);
    if ((sub_190A47AAC() & 1) != 0)
    {
      *v0 = v10;
      return v8;
    }
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1909E00CC(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_190A481F0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        sub_190A487C0();
        v11 = *(void **)(v10 + 56);
        swift_retain();
        v12 = v11;
        sub_190A48100();

        v13 = sub_190A48808();
        swift_release();
        v14 = v13 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v14 < v9)
            goto LABEL_5;
        }
        else if (v14 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(v3 + 48);
          v16 = (_QWORD *)(v15 + 8 * v2);
          v17 = (_QWORD *)(v15 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
          {
            *v16 = *v17;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1909E0294(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_190A481F0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_190A487C0();
        sub_190A47908();
        v10 = sub_190A48808() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9)
            goto LABEL_5;
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(v3 + 48);
          v12 = (_QWORD *)(v11 + 8 * v2);
          v13 = (_QWORD *)(v11 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v12 >= v13 + 1))
          {
            *v12 = *v13;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v14 = *(_QWORD *)(v3 + 16);
  v15 = __OFSUB__(v14, 1);
  v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1909E043C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t);
  _WORD v19[8];
  uint64_t v20;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_190A45FC4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v19 - v12;
  sub_1908AAA48(a2, (uint64_t)v6, (uint64_t *)&unk_1ECF6C858);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1908AA544((uint64_t)v6, (uint64_t *)&unk_1ECF6C858);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    if (a1)
    {
      v14 = *(void (**)(char *, uint64_t))(v8 + 8);
      v14(v11, v7);
      v14(v13, v7);
      return a1;
    }
    v20 = sub_190A45FAC();
    v21 = v15;
    strcpy((char *)v19, "AppleInternal");
    v19[7] = -4864;
    sub_19091210C();
    v16 = sub_190A48190();
    swift_bridgeObjectRelease();
    v17 = *(void (**)(char *, uint64_t))(v8 + 8);
    v17(v11, v7);
    v17(v13, v7);
    if ((v16 & 1) == 0)
      return a1;
  }
  return 1;
}

uint64_t sub_1909E0624(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v14;

  if (a1 >> 62)
    goto LABEL_14;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v8)
      break;
    v14 = MEMORY[0x1E0DEE9D8];
    result = sub_190A4837C();
    if (v8 < 0)
    {
      __break(1u);
      return result;
    }
    v10 = 0;
    while (v8 != v10)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v11 = (id)MEMORY[0x194013510](v10, a1);
      else
        v11 = *(id *)(a1 + 8 * v10 + 32);
      v12 = v11;
      ++v10;
      a5(a2, a3);

      sub_190A48358();
      sub_190A48388();
      sub_190A48394();
      sub_190A48364();
      if (v8 == v10)
        return v14;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v8 = sub_190A48484();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1909E0778(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  _QWORD v22[2];
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A530);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v22 - v10;
  sub_190A46300();
  v12 = objc_allocWithZone(MEMORY[0x1E0CA5848]);
  v13 = sub_1908AB77C();
  v15 = v13;
  if (!v13)
    return 0;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A528);
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v23(v11, 1, 1, v16);
  v17 = objc_msgSend(v15, sel_containingBundleRecord);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, sel_bundleIdentifier);

    if (v19)
    {
      sub_190A47ADC();
      v22[1] = v20;

      sub_190A462F4();
      sub_1908AA544((uint64_t)v11, &qword_1ECF6A530);
      v23(v9, 0, 1, v16);
      sub_1908B4BD4((uint64_t)v9, (uint64_t)v11, &qword_1ECF6A530);
    }
  }
  sub_190A48058();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_1908AAA48((uint64_t)v11, (uint64_t)v9, &qword_1ECF6A530);
  v14 = sub_190A4804C();

  sub_1908AA544((uint64_t)v11, &qword_1ECF6A530);
  return v14;
}

void _s9WidgetKit0A23ExtensionSessionFactoryC04makeD03for7options23watchdogTimeoutProviderAA0acD0_pSgypSg_AA0cD7OptionsVSdSgAA0acD9OperationOcSgtFZ_0(uint64_t a1, _BYTE *a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  void *v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  id v53;
  void (*v54)(char *, char *, uint64_t);
  id v55;
  id v56;
  unint64_t v57;
  unint64_t v58;
  id v59;
  id v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76[5];

  v71 = a2;
  v74 = sub_190A465A0();
  v70 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v69 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_190A46420();
  v62 = *(_QWORD *)(v8 - 8);
  v63 = v8;
  MEMORY[0x1E0C80A78](v8);
  v64 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_190A463F0();
  v11 = *(_QWORD *)(v10 - 8);
  v65 = v10;
  v66 = v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v52 - v15;
  v17 = sub_190A46438();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  v20 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v52 - v22;
  v24 = sub_190A460CC();
  v67 = *(_QWORD *)(v24 - 8);
  v68 = v24;
  MEMORY[0x1E0C80A78](v24);
  v72 = (uint64_t)&v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1908B4714;
  if (a3)
    v26 = (uint64_t (*)(uint64_t))a3;
  v61 = v26;
  if (a3)
    v27 = (uint64_t)a4;
  else
    v27 = 0;
  v73 = v27;
  sub_1908AAA48(a1, (uint64_t)v76, (uint64_t *)&unk_1ECF6C8A0);
  if (v76[3])
  {
    sub_1908B4C4C(a3);
    sub_1908AB890(0, &qword_1EE1E5E18);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v28 = (void *)v75;
      if ((v71[48] & 1) != 0)
      {
        v57 = 0xD000000000000012;
        v58 = 0x8000000190A64750;
        if (qword_1EE1E6980 != -1)
          swift_once();
        v29 = &qword_1EE1E6970;
      }
      else
      {
        if (qword_1EE1E5F28 != -1)
          swift_once();
        v57 = 0;
        v58 = 0;
        v29 = &qword_1EE1E6968;
      }
      v59 = (id)*v29;
      sub_190A460C0();
      v60 = v28;
      v37 = objc_msgSend(v28, sel_identifier);
      if (v37)
      {
        v38 = v37;
        sub_190A47ADC();

        v39 = objc_allocWithZone(MEMORY[0x1E0CA5848]);
        v40 = sub_1908AB77C();
        v41 = objc_allocWithZone(MEMORY[0x1E0CAA538]);
        v56 = v40;
        v55 = objc_msgSend(v41, sel_initWithApplicationExtensionRecord_, v40);
        sub_190A46444();
        v54 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
        v54(v21, v23, v17);
        sub_190A4639C();
        v53 = v59;
        sub_190A463C0();
        v42 = objc_msgSend(v60, sel_preferredLanguages);
        if (v42)
        {
          v43 = v42;
          sub_190A47C5C();

        }
        sub_190A463CC();
        sub_190A463D8();
        swift_bridgeObjectRetain();
        sub_190A463E4();
        v54(v21, v23, v17);
        v44 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
        v45 = swift_allocObject();
        (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v45 + v44, v21, v17);
        sub_190A463B4();
        v46 = v65;
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v14, v16, v65);
        v47 = v64;
        sub_190A463FC();
        sub_190A463A8();
        v48 = (uint64_t)v47;
        v49 = v47;
        v50 = v72;
        sub_1908AD65C((uint64_t)v21, v48, v71, (uint64_t)v61, v73, v72);
        swift_release();

        v51 = *(void (**)(char *, uint64_t))(v18 + 8);
        v51(v21, v17);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v49, v63);
        (*(void (**)(char *, uint64_t))(v66 + 8))(v16, v46);
        v51(v23, v17);
        (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v50, v68);
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
        __break(1u);

        __break(1u);
      }
      return;
    }
  }
  else
  {
    sub_1908B4C4C(a3);
    sub_1908AA544((uint64_t)v76, (uint64_t *)&unk_1ECF6C8A0);
  }
  sub_1908AAA48(a1, (uint64_t)v76, (uint64_t *)&unk_1ECF6C8A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C8A0);
  v30 = sub_190A47B00();
  v32 = v31;
  if (qword_1EE1E5E28 != -1)
    swift_once();
  __swift_project_value_buffer(v74, (uint64_t)qword_1EE1FD688);
  swift_bridgeObjectRetain();
  v33 = sub_190A46588();
  v34 = sub_190A47F68();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v76[0] = v36;
    *(_DWORD *)v35 = 136446210;
    swift_bridgeObjectRetain();
    v75 = sub_1908B35C4(v30, v32, v76);
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1908A7000, v33, v34, "Unable to create new WidgetExtensionSession: extension was not an NSExtension - %{public}s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v36, -1, -1);
    MEMORY[0x194014398](v35, -1, -1);
    swift_release();

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release();
  }
}

uint64_t sub_1909E145C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909E1480()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1909E14AC()
{
  uint64_t v0;

  sub_1909DB764(*(void **)(v0 + 16), *(void (**)(_QWORD))(v0 + 32), *(_QWORD *)(v0 + 40), *(double *)(v0 + 24));
}

void sub_1909E14C0()
{
  sub_1908B5004("Connection to extension process was interrupted: %{public}s");
}

uint64_t sub_1909E14CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_190A460CC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);

  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 96))
    __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 144) & ~v3), v1);
  return swift_deallocObject();
}

unint64_t sub_1909E1584()
{
  unint64_t result;

  result = qword_1EE1EE410;
  if (!qword_1EE1EE410)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ExtensionSessionType, &type metadata for ExtensionSessionType);
    atomic_store(result, (unint64_t *)&qword_1EE1EE410);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ExtensionSessionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1909E1614 + 4 * byte_190A58EF1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1909E1648 + 4 * byte_190A58EEC[v4]))();
}

uint64_t sub_1909E1648(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909E1650(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909E1658);
  return result;
}

uint64_t sub_1909E1664(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909E166CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1909E1670(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909E1678(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t assignWithCopy for ExtensionSessionOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = a1 + 8;
  v5 = (__int128 *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 32) = v6;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, a2 + 8);
      goto LABEL_8;
    }
LABEL_7:
    v7 = *v5;
    v8 = v5[1];
    *(_QWORD *)(v4 + 32) = *((_QWORD *)v5 + 4);
    *(_OWORD *)v4 = v7;
    *(_OWORD *)(v4 + 16) = v8;
    goto LABEL_8;
  }
  if (!v6)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
LABEL_8:
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExtensionSessionOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = a1 + 8;
  if (*(_QWORD *)(a1 + 32))
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtensionSessionOptions(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtensionSessionOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetExtensionSessionOperation(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetExtensionSessionOperation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1909E18E8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 3u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1909E1900(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for WidgetExtensionSessionOperation()
{
  return &type metadata for WidgetExtensionSessionOperation;
}

uint64_t dispatch thunk of ExtensionIdentityProvider.extensionIdentityForExtensionBundleIdentifier(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for _DefaultExtensionIdentityProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for WidgetExtensionSessionFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1909E195C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1909E1964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1909E197C()
{
  return type metadata accessor for _WidgetExtensionSession();
}

uint64_t sub_1909E1984()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_190A46438();
  if (v1 <= 0x3F)
  {
    result = sub_190A46420();
    if (v2 <= 0x3F)
    {
      result = sub_190A460CC();
      if (v3 <= 0x3F)
        return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1909E1A90()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1909E1AB4()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909E1AE8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909E1B0C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1909E1B30()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909E1B6C(void **a1)
{
  uint64_t v1;

  return sub_1909DE734(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), *(void (**)(id))(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_1909E1B84()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909E1BA8(uint64_t (**a1)(_QWORD))
{
  return sub_1909DECE0(a1);
}

void sub_1909E1BB4(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1909E44C0;
  *(_QWORD *)(v8 + 24) = v7;
  swift_retain_n();
  _Block_copy(a2);
  sub_190A4642C();
  sub_190A462F4();
  if (qword_1EE1E5F60 != -1)
    swift_once();
  swift_beginAccess();
  sub_1908BBDC8((uint64_t)&qword_1EE1E5F30, (uint64_t)&v24);
  v9 = v26;
  v10 = v27;
  __swift_project_boxed_opaque_existential_1(&v24, v26);
  v11 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 8))(v6, v9, v10);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
  if (v11)
  {
    swift_beginAccess();
    sub_190A46300();
    swift_endAccess();
    v12 = objc_allocWithZone(MEMORY[0x1E0CA5848]);
    v18 = sub_1908AB77C();
    v24 = 0;
    v25 = 4;
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = v11;
    v19[3] = v18;
    v19[4] = sub_1909E44E8;
    v19[5] = v8;
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = sub_1909E44E8;
    *(_QWORD *)(v20 + 24) = v8;
    swift_retain_n();
    v21 = v11;
    v22 = v18;
    sub_1908AF080((uint64_t)&v24, (uint64_t)sub_1909E4544, (uint64_t)v19, (uint64_t)sub_1909E4540, v20);
    swift_release_n();
    swift_release();
    swift_release();
    swift_release();

  }
  else
  {
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
    v13 = sub_190A47ADC();
    v15 = sub_19096BFDC(v13, v14, 1300, 0, 0xD000000000000011, 0x8000000190A62A30);
    sub_1908AB890(0, &qword_1ECF6BF58);
    v16 = (void *)sub_190A47C50();
    v17 = (void *)sub_190A45F4C();
    ((void (**)(_QWORD, void *, void *))a2)[2](a2, v16, v17);
    swift_release_n();
    swift_release();

  }
}

void sub_1909E1FB4(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  _Block_copy(a2);
  sub_190A4642C();
  sub_190A462F4();
  if (qword_1EE1E5F60 != -1)
    swift_once();
  swift_beginAccess();
  sub_1908BBDC8((uint64_t)&qword_1EE1E5F30, (uint64_t)&v23);
  v8 = v25;
  v9 = v26;
  __swift_project_boxed_opaque_existential_1(&v23, v25);
  v10 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 8))(v6, v8, v9);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  if (v10)
  {
    swift_beginAccess();
    sub_190A46300();
    swift_endAccess();
    v11 = objc_allocWithZone(MEMORY[0x1E0CA5848]);
    v17 = sub_1908AB77C();
    v23 = 0;
    v24 = 4;
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = v10;
    v18[3] = v17;
    v18[4] = sub_1909E43CC;
    v18[5] = v7;
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = sub_1909E43CC;
    *(_QWORD *)(v19 + 24) = v7;
    swift_retain_n();
    v20 = v10;
    v21 = v17;
    sub_1908AF080((uint64_t)&v23, (uint64_t)sub_1909E43F8, (uint64_t)v18, (uint64_t)sub_1909E4404, v19);
    swift_release();
    swift_release();
    swift_release();

  }
  else
  {
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
    v12 = sub_190A47ADC();
    v14 = sub_19096BFDC(v12, v13, 1300, 0, 0xD000000000000011, 0x8000000190A62A30);
    sub_1908AB890(0, &qword_1ECF6D250);
    v15 = (void *)sub_190A47C50();
    v16 = (void *)sub_190A45F4C();
    ((void (**)(_QWORD, void *, void *))a2)[2](a2, v15, v16);
    swift_release();

  }
}

uint64_t sub_1909E2360(unint64_t a1, uint64_t a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a3;
  if (a1 >> 62)
  {
    _Block_copy(a3);
    swift_bridgeObjectRetain();
    v10 = sub_190A48484();
    swift_bridgeObjectRelease();
    if (v10)
    {
      swift_bridgeObjectRetain();
      v7 = sub_190A48484();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
LABEL_7:
    a3[2](a3, 0);
    return swift_release();
  }
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  _Block_copy(a3);
  if (!v6)
    goto LABEL_7;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_4:
  v12 = v7;
  v13 = 1;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = sub_1908CEB50;
  v8[4] = v5;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1908CEB50;
  *(_QWORD *)(v9 + 24) = v5;
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_1908AF080((uint64_t)&v12, (uint64_t)sub_1909E42CC, (uint64_t)v8, (uint64_t)sub_1909E4538, v9);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1909E24DC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t i;
  char **v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t KeyPath;
  uint64_t inited;
  id v29;
  os_unfair_lock_s *v30;
  objc_class *v31;
  char *v32;
  char **v33;
  unint64_t *v34;
  char *v35;
  char *v36;
  unint64_t *v37;
  unint64_t v38;
  id v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  os_unfair_lock_s *v43;
  objc_class *v44;
  char **v45;
  char *v46;
  unint64_t *v47;
  char *v48;
  char *v49;
  unint64_t *v50;
  unint64_t v51;
  id v52;
  uint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  void *v61;
  objc_class *v62;
  char *v63;
  uint64_t *v64;
  char *v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  unint64_t v71;
  uint64_t v72;
  void *aBlock;
  uint64_t v74;
  int64_t v75;
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  id v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  objc_super v86;
  __int128 v87;
  objc_super v88;
  objc_super v89;
  unint64_t v90;

  v72 = a3;
  type metadata accessor for UnfairLock();
  v7 = swift_allocObject();
  aBlock = a4;
  _Block_copy(a4);
  v79 = a2;
  v8 = (_DWORD *)swift_slowAlloc();
  *v8 = 0;
  v85 = v7;
  *(_QWORD *)(v7 + 16) = v8;
  v90 = MEMORY[0x1E0DEE9D8];
  v74 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(a1 + 64);
  v75 = (unint64_t)(v9 + 63) >> 6;
  v76 = a1;
  swift_bridgeObjectRetain();
  v12 = v11;
  i = 0;
  v14 = (char **)0x1F34D2000;
  while (1)
  {
    if (v12)
    {
      v77 = (v12 - 1) & v12;
      v15 = __clz(__rbit64(v12)) | (i << 6);
    }
    else
    {
      v16 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_40;
      if (v16 >= v75)
      {
LABEL_38:
        swift_release();
        v71 = v90;
        _Block_copy(aBlock);
        sub_1909E2360(v71, v72, (void (**)(_QWORD, _QWORD))aBlock);
        _Block_release(aBlock);
        swift_bridgeObjectRelease();

        swift_release();
        _Block_release(aBlock);
        return;
      }
      v17 = *(_QWORD *)(v74 + 8 * v16);
      ++i;
      if (!v17)
      {
        i = v16 + 1;
        if (v16 + 1 >= v75)
          goto LABEL_38;
        v17 = *(_QWORD *)(v74 + 8 * i);
        if (!v17)
        {
          i = v16 + 2;
          if (v16 + 2 >= v75)
            goto LABEL_38;
          v17 = *(_QWORD *)(v74 + 8 * i);
          if (!v17)
          {
            v18 = v16 + 3;
            if (v18 >= v75)
              goto LABEL_38;
            v17 = *(_QWORD *)(v74 + 8 * v18);
            for (i = v18; !v17; ++v18)
            {
              i = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_41;
              if (i >= v75)
                goto LABEL_38;
              v17 = *(_QWORD *)(v74 + 8 * i);
            }
          }
        }
      }
      v77 = (v17 - 1) & v17;
      v15 = __clz(__rbit64(v17)) + (i << 6);
    }
    v78 = i;
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v76 + 48) + v19);
    v21 = *(_QWORD *)(*(_QWORD *)(v76 + 56) + v19);
    v83 = v20;
    if (v21 >> 62)
    {
      v70 = v20;
      swift_bridgeObjectRetain();
      v22 = sub_190A48484();
      if (!v22)
        goto LABEL_5;
    }
    else
    {
      v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      v23 = v20;
      swift_bridgeObjectRetain();
      if (!v22)
        goto LABEL_5;
    }
    if (v22 < 1)
      break;
    v24 = 0;
    v80 = v21 & 0xC000000000000001;
    v81 = v22;
    v82 = v21;
    do
    {
      if (v80)
        v25 = (id)MEMORY[0x194013510](v24, v21);
      else
        v25 = *(id *)(v21 + 8 * v24 + 32);
      v26 = v25;
      KeyPath = swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6BDD0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_190A4B0F0;
      swift_retain();
      v29 = v79;
      *(_QWORD *)(inited + 32) = objc_msgSend(v26, sel_metrics, v72);
      *(_QWORD *)&v87 = inited;
      sub_190A47C74();
      v30 = *(os_unfair_lock_s **)(v85 + 16);
      swift_retain();
      os_unfair_lock_lock(v30);
      v84 = v24;
      if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
      {
        v31 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
        v32 = (char *)objc_allocWithZone(v31);
        v33 = v14;
        v34 = (unint64_t *)&v32[OBJC_IVAR___CHKWidgetEnvironment_tuples];
        v35 = (char *)v29;
        v36 = v32;
        *v34 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
        v37 = (unint64_t *)&v35[OBJC_IVAR___CHKWidgetEnvironment_tuples];
        swift_beginAccess();
        v38 = *v37;
        swift_beginAccess();
        *v34 = v38;
        v14 = v33;
        swift_bridgeObjectRetain();

        swift_bridgeObjectRelease();
        v89.receiver = v36;
        v89.super_class = v31;
        v29 = objc_msgSendSuper2(&v89, (SEL)v33 + 3528);

      }
      v39 = v29;
      swift_retain();
      v40 = swift_bridgeObjectRetain();
      sub_1908E17D4(v40, KeyPath);

      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v85 + 16));
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      v41 = swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6D2F0);
      v42 = swift_initStackObject();
      *(_OWORD *)(v42 + 16) = xmmword_190A4A350;
      InternalWidgetFamily.init(_:)((uint64_t)objc_msgSend(v26, sel_family), (_BYTE *)(v42 + 32));
      v43 = *(os_unfair_lock_s **)(v85 + 16);
      swift_retain();
      os_unfair_lock_lock(v43);
      if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
      {
        v44 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
        v45 = v14;
        v46 = (char *)objc_allocWithZone(v44);
        v47 = (unint64_t *)&v46[OBJC_IVAR___CHKWidgetEnvironment_tuples];
        v48 = (char *)v39;
        v49 = v46;
        *v47 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
        v50 = (unint64_t *)&v48[OBJC_IVAR___CHKWidgetEnvironment_tuples];
        swift_beginAccess();
        v51 = *v50;
        swift_beginAccess();
        *v47 = v51;
        swift_bridgeObjectRetain();

        swift_bridgeObjectRelease();
        v88.receiver = v49;
        v88.super_class = v44;
        v39 = objc_msgSendSuper2(&v88, (SEL)v45 + 3528);

      }
      v52 = v39;
      swift_retain();
      v53 = swift_bridgeObjectRetain();
      sub_1908E1A00(v53, v41);

      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v85 + 16));
      swift_release();
      swift_release();
      swift_setDeallocating();
      v54 = objc_msgSend(v83, sel_extensionIdentity);
      v55 = objc_msgSend(v83, sel_kind);
      v56 = sub_190A47ADC();
      v58 = v57;

      swift_retain();
      v59 = v52;
      v60 = objc_msgSend(v26, sel_fileHandle);
      v61 = v26;
      v62 = (objc_class *)type metadata accessor for PlaceholderRequest();
      v63 = (char *)objc_allocWithZone(v62);
      *(_QWORD *)&v63[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_extensionIdentity] = v54;
      v64 = (uint64_t *)&v63[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_kind];
      *v64 = v56;
      v64[1] = v58;
      *(_QWORD *)&v87 = v85;
      *((_QWORD *)&v87 + 1) = v59;
      v65 = v63;
      v66 = v54;
      WidgetEnvironment.filterForExtensions()();
      *(_OWORD *)&v65[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_environment] = v87;
      *(_QWORD *)&v65[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_fileHandle] = v60;
      v65[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_archiveVersion] = 2;
      v67 = v60;

      v86.receiver = v65;
      v86.super_class = v62;
      v14 = &off_1E2CDA000;
      v68 = objc_msgSendSuper2(&v86, sel_init);

      v69 = v68;
      MEMORY[0x194012E68]();
      if (*(_QWORD *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_190A47C98();
      v24 = v84 + 1;
      sub_190A47CD4();
      sub_190A47C74();

      swift_release();
      v21 = v82;
    }
    while (v81 != v84 + 1);
LABEL_5:

    swift_bridgeObjectRelease();
    v12 = v77;
    i = v78;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
}

uint64_t sub_1909E2C88(unint64_t a1, uint64_t a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a3;
  if (a1 >> 62)
  {
    _Block_copy(a3);
    swift_bridgeObjectRetain();
    v10 = sub_190A48484();
    swift_bridgeObjectRelease();
    if (v10)
    {
      swift_bridgeObjectRetain();
      v7 = sub_190A48484();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
LABEL_7:
    a3[2](a3, 0);
    return swift_release();
  }
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  _Block_copy(a3);
  if (!v6)
    goto LABEL_7;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_4:
  v12 = v7;
  v13 = 0;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = sub_1908CEB50;
  v8[4] = v5;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1908CEB50;
  *(_QWORD *)(v9 + 24) = v5;
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_1908AF080((uint64_t)&v12, (uint64_t)sub_1909E4030, (uint64_t)v8, (uint64_t)sub_1909E4538, v9);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1909E2E00(unint64_t a1, char a2, uint64_t a3, void (**a4)(_QWORD, _QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a4;
  if (a1 >> 62)
  {
    _Block_copy(a4);
    swift_bridgeObjectRetain();
    v12 = sub_190A48484();
    swift_bridgeObjectRelease();
    if (v12)
    {
      swift_bridgeObjectRetain();
      v9 = sub_190A48484();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
LABEL_7:
    a4[2](a4, 0);
    return swift_release();
  }
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  _Block_copy(a4);
  if (!v8)
    goto LABEL_7;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_4:
  v14 = v9;
  v15 = 2;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_BYTE *)(v10 + 24) = a2 & 1;
  *(_QWORD *)(v10 + 32) = sub_1908CEB50;
  *(_QWORD *)(v10 + 40) = v7;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1908CEB50;
  *(_QWORD *)(v11 + 24) = v7;
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_1908AF080((uint64_t)&v14, (uint64_t)sub_1909E3FD8, v10, (uint64_t)sub_1909E4538, v11);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1909E2F90(unint64_t a1, uint64_t a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a3;
  if (a1 >> 62)
  {
    _Block_copy(a3);
    swift_bridgeObjectRetain();
    v10 = sub_190A48484();
    swift_bridgeObjectRelease();
    if (v10)
    {
      swift_bridgeObjectRetain();
      v7 = sub_190A48484();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
LABEL_7:
    a3[2](a3, 0);
    return swift_release();
  }
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  _Block_copy(a3);
  if (!v6)
    goto LABEL_7;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_4:
  v12 = v7;
  v13 = 3;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = sub_1908CEB50;
  v8[4] = v5;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1908CEB50;
  *(_QWORD *)(v9 + 24) = v5;
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_1908AF080((uint64_t)&v12, (uint64_t)sub_1909E3DC8, (uint64_t)v8, (uint64_t)sub_1909E4538, v9);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1909E310C(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(id), uint64_t a5, void *a6)
{
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  void *v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unsigned int v33;
  unint64_t v34;
  unsigned int v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  unint64_t v74;
  id v75;
  _QWORD *v76;
  void *v77;
  id v78;
  void (*v79)(id);
  void *v80;
  id v81;
  void *v82;
  _QWORD *v83;
  void *v84;
  uint64_t v85;
  id aBlock;
  unint64_t v87;
  void (*v88)(uint64_t, void *, void *);
  void *v89;
  void (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;

  v92 = *MEMORY[0x1E0C80C00];
  v12 = (_QWORD *)swift_allocObject();
  v79 = a4;
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v13 = qword_1EE1E5E28;
  swift_retain();
  v78 = a6;
  if (v13 != -1)
    swift_once();
  v14 = sub_190A465A0();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EE1FD688);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v15 = sub_190A46588();
  v16 = sub_190A47F68();
  v83 = v12;
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v18 = (void *)swift_slowAlloc();
    aBlock = v18;
    *(_DWORD *)v17 = 136446466;
    v19 = sub_1908B3C54();
    sub_1908B35C4(v19, v20, (uint64_t *)&aBlock);
    sub_190A48178();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1908B35C4(a1, a2, (uint64_t *)&aBlock);
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x194014398](v18, -1, -1);
    MEMORY[0x194014398](v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v21 = sub_190A46588();
  v22 = sub_190A47F50();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v24 = (void *)swift_slowAlloc();
    aBlock = v24;
    *(_DWORD *)v23 = 136446466;
    v25 = sub_1908B3C54();
    sub_1908B35C4(v25, v26, (uint64_t *)&aBlock);
    sub_190A48178();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1908B35C4(a1, a2, (uint64_t *)&aBlock);
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x194014398](v24, -1, -1);
    MEMORY[0x194014398](v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  sub_1908B026C();
  v27 = objc_allocWithZone(MEMORY[0x1E0D87E00]);
  v28 = (void *)sub_190A47AC4();
  v29 = objc_msgSend(v27, sel_initWithExplanation_, v28);

  objc_msgSend(v29, sel_setReportType_, 0);
  objc_msgSend(v29, sel_setExceptionDomain_, 20);
  objc_msgSend(v29, sel_setExceptionCode_, 1001);
  v30 = MEMORY[0x1940115A8](objc_msgSend(v29, sel_setMaximumTerminationResistance_, 40));
  LODWORD(v27) = v30;
  LODWORD(v28) = v31;
  v33 = v32;
  v35 = v34;
  v36 = HIDWORD(v30);
  v37 = HIDWORD(v31);
  v38 = HIDWORD(v32);
  v39 = HIDWORD(v34);
  v40 = objc_allocWithZone(MEMORY[0x1E0D016E0]);
  aBlock = (id)__PAIR64__(v36, v27);
  v87 = __PAIR64__(v37, v28);
  v88 = (void (*)(uint64_t, void *, void *))__PAIR64__(v38, v33);
  v89 = (void *)__PAIR64__(v39, v35);
  v41 = objc_msgSend(v40, sel_initWithAuditToken_, &aBlock);
  v42 = objc_msgSend(v41, sel_pid);

  v81 = objc_msgSend((id)objc_opt_self(), sel_targetWithPid_, v42);
  v43 = objc_msgSend((id)objc_opt_self(), sel_predicateMatchingTarget_, v81);
  v82 = v29;
  v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D87E08]), sel_initWithPredicate_context_, v43, v29);
  swift_retain_n();
  v45 = sub_190A46588();
  v46 = sub_190A47F68();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = swift_slowAlloc();
    v48 = (void *)swift_slowAlloc();
    aBlock = v48;
    *(_DWORD *)v47 = 136446466;
    v49 = sub_1908B3C54();
    sub_1908B35C4(v49, v50, (uint64_t *)&aBlock);
    sub_190A48178();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 1024;
    sub_190A48178();
    _os_log_impl(&dword_1908A7000, v45, v46, "%{public}s Extension process termination requested (%d)", (uint8_t *)v47, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x194014398](v48, -1, -1);
    MEMORY[0x194014398](v47, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v51 = (void *)objc_opt_self();
  aBlock = 0;
  v52 = v43;
  v53 = objc_msgSend(v51, sel_handleForPredicate_error_, v52, &aBlock);
  v80 = v52;
  if (v53)
  {
    v54 = v53;
    v55 = aBlock;

    v56 = sub_1908B3C54();
    v58 = v57;
    v59 = swift_allocObject();
    *(_QWORD *)(v59 + 16) = a3;
    *(_DWORD *)(v59 + 24) = (_DWORD)v42;
    *(_QWORD *)(v59 + 32) = 0x4014000000000000;
    *(_QWORD *)(v59 + 40) = sub_190961088;
    *(_QWORD *)(v59 + 48) = v83;
    type metadata accessor for CompletionOrWatchdogWrapper();
    swift_allocObject();
    swift_retain();
    swift_retain();
    v60 = sub_190956ED4(v56, v58, 1, (uint64_t)sub_1909E3C84, v59, 5.0);
    v61 = swift_allocObject();
    *(_QWORD *)(v61 + 16) = a3;
    *(_DWORD *)(v61 + 24) = (_DWORD)v42;
    *(_QWORD *)(v61 + 32) = v60;
    *(_QWORD *)(v61 + 40) = sub_190961088;
    *(_QWORD *)(v61 + 48) = v83;
    v90 = sub_1909E3CCC;
    v91 = v61;
    aBlock = (id)MEMORY[0x1E0C809B0];
    v87 = 1107296256;
    v88 = sub_1909DF2E4;
    v89 = &block_descriptor_7;
    v62 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v54, sel_monitorForDeath_, v62);
    _Block_release(v62);
    aBlock = 0;
    if ((objc_msgSend(v44, sel_execute_, &aBlock) & 1) != 0)
    {
      v63 = aBlock;
      sub_190A46390();
      swift_release();

      swift_release();
      return;
    }
    v77 = v44;
    v66 = aBlock;
    v65 = (void *)sub_190A45F58();

    swift_willThrow();
    swift_release();
    v52 = v80;
  }
  else
  {
    v77 = v44;
    v64 = aBlock;
    v65 = (void *)sub_190A45F58();

    swift_willThrow();
  }
  swift_retain();
  v67 = v65;
  swift_retain();
  v68 = v65;
  v69 = sub_190A46588();
  v70 = sub_190A47F50();
  if (os_log_type_enabled(v69, v70))
  {
    v71 = swift_slowAlloc();
    v72 = (_QWORD *)swift_slowAlloc();
    v84 = (void *)swift_slowAlloc();
    aBlock = v84;
    *(_DWORD *)v71 = 136446722;
    v73 = sub_1908B3C54();
    sub_1908B35C4(v73, v74, (uint64_t *)&aBlock);
    sub_190A48178();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v71 + 12) = 1024;
    sub_190A48178();
    *(_WORD *)(v71 + 18) = 2114;
    v75 = v65;
    v85 = _swift_stdlib_bridgeErrorToNSError();
    sub_190A48178();
    *v72 = v85;

    _os_log_impl(&dword_1908A7000, v69, v70, "%{public}s Termination failed for pid %d, with error: %{public}@", (uint8_t *)v71, 0x1Cu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
    swift_arrayDestroy();
    v76 = v72;
    v52 = v80;
    MEMORY[0x194014398](v76, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x194014398](v84, -1, -1);
    MEMORY[0x194014398](v71, -1, -1);
  }
  else
  {
    swift_release_n();

  }
  v79(v78);

  swift_release();
}

uint64_t sub_1909E3C84()
{
  uint64_t v0;

  return sub_1909DEEE4(*(_QWORD *)(v0 + 16), *(unsigned int *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 40));
}

uint64_t sub_1909E3C98()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1909E3CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1909DF0EC(a1, a2, *(_QWORD *)(v2 + 16), *(unsigned int *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void (**)(void))(v2 + 40));
}

uint64_t sub_1909E3CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1909DE6C4(a1, a2, *(void (**)(uint64_t (*)(uint64_t, uint64_t, char), uint64_t))(v2 + 16));
}

uint64_t sub_1909E3CE8(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v1 + 16))(a1, 0, 1);
}

uint64_t objectdestroy_40Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

id sub_1909E3D40(void *a1)
{
  uint64_t v1;

  return sub_1909DE15C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(void (**)(id, _QWORD, uint64_t))(v1 + 40));
}

uint64_t sub_1909E3D50()
{
  return objectdestroy_62Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1909E3D5C(void *a1)
{
  uint64_t v1;

  return sub_1909DDE7C(a1, *(_QWORD *)(v1 + 16), *(void (**)(void *))(v1 + 24));
}

void sub_1909E3D6C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_1909DDB2C(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_1909E3D78()
{
  return objectdestroy_77Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1909E3D84(void *a1)
{
  uint64_t v1;

  return sub_1909DDC10(a1, *(void (**)(uint64_t, _QWORD *, _QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t)&unk_1E2CD1320, (uint64_t)sub_190961058);
}

uint64_t sub_1909E3DB0()
{
  return objectdestroy_83Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_1909E3DBC()
{
  return objectdestroy_62Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_1909E3DC8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_1909DD8F8(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_1909E3DD4()
{
  return objectdestroy_77Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1909E3DE0(void *a1)
{
  uint64_t v1;

  return sub_1909DD9F8(a1, *(void (**)(uint64_t, _QWORD *, _QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t)&unk_1E2CD1410, (uint64_t)sub_190961058);
}

uint64_t sub_1909E3E10()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1909E3E34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1909DAEC0(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

void sub_1909E3E3C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1909DD5B8(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1909E3E44(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, unint64_t, uint64_t))(v1 + 16))(0, 0, 0xF000000000000000, a1);
}

uint64_t sub_1909E3E74()
{
  return objectdestroy_77Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1909E3E80(void *a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v4;

  return sub_1909DD694(a1, a2, a3, a4, *(void (**)(uint64_t (*)(), _QWORD *, _QWORD))(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40));
}

uint64_t sub_1909E3E8C()
{
  uint64_t v0;
  unint64_t v1;

  swift_release();

  v1 = *(_QWORD *)(v0 + 48);
  if (v1 >> 60 != 15)
    sub_1908B53FC(*(_QWORD *)(v0 + 40), v1);

  return swift_deallocObject();
}

uint64_t sub_1909E3ED8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1909E3F04()
{
  id *v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1909E3F40(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1909DD20C(a1, a2, a3, *(void **)(v3 + 16), *(void **)(v3 + 24), *(void **)(v3 + 32), *(_BYTE *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56));
}

uint64_t sub_1909E3F70()
{
  return objectdestroy_77Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1909E3F7C(void *a1)
{
  uint64_t v1;

  return sub_1909DD9F8(a1, *(void (**)(uint64_t, _QWORD *, _QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t)&unk_1E2CD15C8, (uint64_t)sub_190961058);
}

uint64_t sub_1909E3FAC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1909E3FD8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1909DD06C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_1909E3FE8()
{
  return objectdestroy_77Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1909E3FF4(void *a1)
{
  uint64_t v1;

  return sub_1909DD9F8(a1, *(void (**)(uint64_t, _QWORD *, _QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t)&unk_1E2CD16B8, (uint64_t)sub_190961058);
}

uint64_t sub_1909E4024()
{
  return objectdestroy_62Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_1909E4030(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_1909DCF58(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_1909E403C()
{
  return objectdestroy_77Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1909E4048(void *a1)
{
  uint64_t v1;

  return sub_1909DDC10(a1, *(void (**)(uint64_t, _QWORD *, _QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t)&unk_1E2CD17A8, (uint64_t)sub_190961058);
}

uint64_t sub_1909E4074()
{
  return objectdestroy_83Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

void sub_1909E4084(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_1909DCD5C(a1, a2, a3, v3[2], v3[3], v3[4], (uint64_t)&unk_1E2CD1848, (uint64_t)sub_1909E40D8, (uint64_t)&block_descriptor_194, (SEL *)&selRef_setControlState_completion_);
}

uint64_t sub_1909E40CC()
{
  return objectdestroy_77Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1909E40D8(void *a1)
{
  uint64_t v1;

  return sub_1909DD9F8(a1, *(void (**)(uint64_t, _QWORD *, _QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t)&unk_1E2CD1898, (uint64_t)sub_190961058);
}

void sub_1909E410C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_1909DCD5C(a1, a2, a3, v3[2], v3[3], v3[4], (uint64_t)&unk_1E2CD1938, (uint64_t)sub_1909E4160, (uint64_t)&block_descriptor_213, (SEL *)&selRef_pushTokensDidChange_completion_);
}

uint64_t sub_1909E4154()
{
  return objectdestroy_77Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1909E4160(void *a1)
{
  uint64_t v1;

  return sub_1909DD9F8(a1, *(void (**)(uint64_t, _QWORD *, _QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t)&unk_1E2CD1960, (uint64_t)sub_190961058);
}

uint64_t sub_1909E4190()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909E41C4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1909DC960(a1, a2, a3, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

uint64_t sub_1909E41D4(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 16))(0, a1);
}

uint64_t sub_1909E41FC()
{
  return objectdestroy_77Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1909E4208(void *a1)
{
  uint64_t v1;

  return sub_1909DD9F8(a1, *(void (**)(uint64_t, _QWORD *, _QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t)&unk_1E2CD1A50, (uint64_t)sub_1909E4238);
}

uint64_t sub_1909E423C()
{
  return objectdestroy_77Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_1909E4248(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_1909DC6D0(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1909E4254()
{
  return objectdestroy_77Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1909E4260()
{
  uint64_t v0;

  return sub_1909DC7C4(*(void (**)(uint64_t (*)(), uint64_t, _QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1909E426C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(0);
}

uint64_t sub_1909E4290()
{
  return objectdestroy_62Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t objectdestroy_62Tm_0(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release();
  return swift_deallocObject();
}

void sub_1909E42CC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_1909DC5BC(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_1909E42D8()
{
  return objectdestroy_77Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_77Tm_0(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909E4314(void *a1)
{
  uint64_t v1;

  return sub_1909DD9F8(a1, *(void (**)(uint64_t, _QWORD *, _QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t)&unk_1E2CD1C30, (uint64_t)sub_190961058);
}

uint64_t sub_1909E4344(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1908AB890(255, a2);
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEFCF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_37Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1909E43CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1909DC33C(a1, a2, *(_QWORD *)(v2 + 16), &qword_1ECF6D250);
}

void sub_1909E43F8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1909DBB74(a1, a2, a3, *(void **)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_1909E4404(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 16))(MEMORY[0x1E0DEE9D8], a1);
}

uint64_t objectdestroy_287Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909E4470(uint64_t a1)
{
  return sub_1908B5364(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1909DBC6C);
}

uint64_t sub_1909E447C()
{
  return objectdestroy_83Tm_0((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t objectdestroy_83Tm_0(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

void sub_1909E44C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1909DC33C(a1, a2, *(_QWORD *)(v2 + 16), &qword_1ECF6BF58);
}

uint64_t sub_1909E44E8(unint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1909DBA18(a1, a2, *(void (**)(uint64_t, uint64_t))(v2 + 16));
}

uint64_t objectdestroy_281Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909E4660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  double v21;
  void (*v22)(char *, uint64_t, uint64_t);
  unint64_t v23;
  unint64_t v24;
  double v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;

  v43 = a1;
  v48 = a2;
  v47 = sub_190A46930();
  MEMORY[0x1E0C80A78](v47);
  v4 = (double *)((char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE420);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE428);
  MEMORY[0x1E0C80A78](v45);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE430);
  v42 = *(_QWORD *)(v46 - 8);
  v10 = MEMORY[0x1E0C80A78](v46);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v41 = (char *)&v40 - v13;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE438);
  MEMORY[0x1E0C80A78](v44);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE440);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
  v20 = (char *)&v40 - v19;
  v21 = *(double *)(v2 + 24);
  if (v21 == 1.0)
  {
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    v22((char *)&v40 - v19, v43, v16);
    v22(v15, (uint64_t)v20, v16);
    swift_storeEnumTagMultiPayload();
    sub_1909E4CCC();
    v23 = sub_1909E4BF4();
    v24 = sub_1909B296C();
    *(_QWORD *)&v53 = v45;
    *((_QWORD *)&v53 + 1) = v47;
    *(_QWORD *)&v54 = v23;
    *((_QWORD *)&v54 + 1) = v24;
    swift_getOpaqueTypeConformance2();
    sub_190A46F90();
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  }
  else
  {
    v26 = *(double *)(v2 + 16);
    sub_190A478CC();
    sub_190A46738();
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v7, v43, v16);
    v27 = &v7[*(int *)(v5 + 36)];
    v28 = v54;
    *(_OWORD *)v27 = v53;
    *((_OWORD *)v27 + 1) = v28;
    *((_OWORD *)v27 + 2) = v55;
    sub_1909E4BAC((uint64_t)v7, (uint64_t)v9);
    v29 = v45;
    *(double *)&v9[*(int *)(v45 + 36)] = v21;
    sub_1908AA544((uint64_t)v7, &qword_1EE1EE420);
    v30 = v21 * v26;
    v31 = v47;
    v32 = (char *)v4 + *(int *)(v47 + 20);
    v33 = *MEMORY[0x1E0CDB0C0];
    v34 = sub_190A46E7C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v32, v33, v34);
    *v4 = v30;
    v4[1] = v30;
    v35 = sub_1909E4BF4();
    v36 = sub_1909B296C();
    sub_190A47548();
    sub_1909B29B4((uint64_t)v4);
    sub_1908AA544((uint64_t)v9, &qword_1EE1EE428);
    v38 = v41;
    v37 = v42;
    v39 = v46;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v12, v46);
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v15, v38, v39);
    swift_storeEnumTagMultiPayload();
    sub_1909E4CCC();
    v49 = v29;
    v50 = v31;
    v51 = v35;
    v52 = v36;
    swift_getOpaqueTypeConformance2();
    sub_190A46F90();
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v39);
  }
}

uint64_t View.applyScalingModifier(metrics:displayScale:)(_OWORD *a1, uint64_t a2, uint64_t a3, double a4)
{
  __int128 v4;
  _OWORD v6[2];
  double v7;

  v4 = a1[1];
  v6[0] = *a1;
  v6[1] = v4;
  v7 = a4;
  return MEMORY[0x194012838](v6, a2, &type metadata for ActivityScalingModifier, a3);
}

uint64_t sub_1909E4AF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_190A46894();
  v4[0] = v1;
  v4[1] = sub_1909E4B48();
  return MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v2, v4);
}

unint64_t sub_1909E4B48()
{
  unint64_t result;

  result = qword_1EE1EE418;
  if (!qword_1EE1EE418)
  {
    result = MEMORY[0x19401429C](&unk_190A592F8, &type metadata for ActivityScalingModifier);
    atomic_store(result, (unint64_t *)&qword_1EE1EE418);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityScalingModifier()
{
  return &type metadata for ActivityScalingModifier;
}

uint64_t sub_1909E4B9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1909E4BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1909E4BF4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EE448;
  if (!qword_1EE1EE448)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EE428);
    v2[0] = sub_1909E4C60();
    v2[1] = sub_1908D2340();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EE448);
  }
  return result;
}

unint64_t sub_1909E4C60()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EE450;
  if (!qword_1EE1EE450)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EE420);
    v2[0] = sub_1909E4CCC();
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EE450);
  }
  return result;
}

unint64_t sub_1909E4CCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EE458;
  if (!qword_1EE1EE458)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EE440);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDBF10], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EE458);
  }
  return result;
}

unint64_t sub_1909E4D1C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[6];

  result = qword_1EE1EE460;
  if (!qword_1EE1EE460)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EE468);
    v2 = sub_1909E4CCC();
    v3[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EE428);
    v3[3] = sub_190A46930();
    v3[4] = sub_1909E4BF4();
    v3[5] = sub_1909B296C();
    v3[0] = v2;
    v3[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EE1EE460);
  }
  return result;
}

uint64_t sub_1909E4DD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  v6 = sub_190A486AC();
  if (v6)
  {
    v7 = (void *)v6;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  v9 = (void *)sub_190A45F4C();

  v10 = objc_msgSend(v9, sel_debugDescription);
  v11 = sub_190A47ADC();

  return v11;
}

uint64_t sub_1909E4EF8()
{
  uint64_t result;

  sub_1909E517C();
  result = sub_190A48124();
  qword_1ECF6D508 = result;
  return result;
}

uint64_t sub_1909E4F5C()
{
  uint64_t result;

  sub_1909E517C();
  result = sub_190A48124();
  qword_1ECF6D8A8 = result;
  return result;
}

uint64_t sub_1909E4FBC()
{
  uint64_t result;

  sub_1909E517C();
  result = sub_190A48124();
  qword_1ECF6D8A0 = result;
  return result;
}

uint64_t sub_1909E5018(uint64_t a1)
{
  return sub_1909E5084(a1, qword_1ECF6D528, &qword_1ECF6C5F8, (id *)&qword_1ECF6D8A8);
}

uint64_t sub_1909E503C(uint64_t a1)
{
  return sub_1909E5084(a1, qword_1ECF6D510, &qword_1ECF6AD60, (id *)&qword_1ECF6D508);
}

uint64_t sub_1909E5060(uint64_t a1)
{
  return sub_1909E5084(a1, qword_1EE1FD688, &qword_1ECF6C4D0, (id *)&qword_1ECF6D8A0);
}

uint64_t sub_1909E5084(uint64_t a1, uint64_t *a2, _QWORD *a3, id *a4)
{
  uint64_t v7;
  id v8;

  v7 = sub_190A465A0();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  if (*a3 != -1)
    swift_once();
  v8 = *a4;
  return sub_190A465AC();
}

uint64_t sub_1909E510C(uint64_t a1)
{
  return sub_1908AB358(a1, qword_1EE1FD718);
}

uint64_t sub_1909E5130(uint64_t a1)
{
  return sub_1908AB358(a1, qword_1EE1FD6D0);
}

uint64_t sub_1909E515C(uint64_t a1)
{
  return sub_1908AB358(a1, qword_1EE1FD6E8);
}

unint64_t sub_1909E517C()
{
  unint64_t result;

  result = qword_1ECF6C730;
  if (!qword_1ECF6C730)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECF6C730);
  }
  return result;
}

uint64_t sub_1909E51B8(uint64_t a1)
{
  return sub_1908AB358(a1, qword_1EE1FD748);
}

uint64_t sub_1909E51D8(uint64_t a1)
{
  return sub_1908AB358(a1, qword_1EE1FD800);
}

uint64_t sub_1909E51FC(uint64_t a1)
{
  return sub_1908AB358(a1, qword_1ECF6D800);
}

uint64_t sub_1909E5224(uint64_t a1)
{
  return sub_1908AB358(a1, qword_1ECF6D448);
}

uint64_t sub_1909E5244(uint64_t a1)
{
  return sub_1908AB358(a1, qword_1ECF6D4A0);
}

uint64_t sub_1909E5264(uint64_t a1)
{
  return sub_1908AB358(a1, qword_1ECF6D820);
}

void sub_1909E5288(uint64_t a1, unint64_t a2)
{
  void *v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  os_log_type_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;

  v4 = (void *)sub_190A45F4C();
  if (a2)
  {
    v5 = v4;
    swift_bridgeObjectRetain_n();
    v27 = v5;
    v6 = sub_190A46588();
    v7 = sub_190A47F50();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v28 = v9;
      *(_DWORD *)v8 = 136446978;
      swift_bridgeObjectRetain();
      sub_1908B35C4(a1, a2, &v28);
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v8 + 12) = 2082;
      v10 = objc_msgSend(v27, sel_domain);
      v11 = sub_190A47ADC();
      v13 = v12;

      sub_1908B35C4(v11, v13, &v28);
      sub_190A48178();

      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 22) = 2048;
      objc_msgSend(v27, sel_code);

      sub_190A48178();
      *(_WORD *)(v8 + 32) = 2082;
      v14 = objc_msgSend(v27, sel_debugDescription);
      v15 = sub_190A47ADC();
      v17 = v16;

      sub_1908B35C4(v15, v17, &v28);
      sub_190A48178();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1908A7000, v6, v7, "%{public}s: %{public}s (%ld) %{public}s", (uint8_t *)v8, 0x2Au);
LABEL_6:
      swift_arrayDestroy();
      MEMORY[0x194014398](v9, -1, -1);
      MEMORY[0x194014398](v8, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v27 = v4;
    v6 = sub_190A46588();
    v18 = sub_190A47F50();
    if (os_log_type_enabled(v6, v18))
    {
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v28 = v9;
      *(_DWORD *)v8 = 136446722;
      v19 = objc_msgSend(v27, sel_domain);
      v20 = sub_190A47ADC();
      v22 = v21;

      sub_1908B35C4(v20, v22, &v28);
      sub_190A48178();

      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2048;
      objc_msgSend(v27, sel_code);

      sub_190A48178();
      *(_WORD *)(v8 + 22) = 2082;
      v23 = objc_msgSend(v27, sel_debugDescription);
      v24 = sub_190A47ADC();
      v26 = v25;

      sub_1908B35C4(v24, v26, &v28);
      sub_190A48178();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1908A7000, v6, v18, "%{public}s (%ld) %{public}s", (uint8_t *)v8, 0x20u);
      goto LABEL_6;
    }
  }

}

uint64_t EnvironmentValues._widgetInvertsAccentFilterStyle.getter()
{
  unsigned __int8 v1;

  sub_190970184();
  sub_190A46C3C();
  return v1;
}

uint64_t EnvironmentValues._widgetInvertsAccentFilterStyle.setter()
{
  sub_190970184();
  return sub_190A46C48();
}

uint64_t (*EnvironmentValues._widgetInvertsAccentFilterStyle.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_190970184();
  sub_190A46C3C();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_1909E5854;
}

uint64_t sub_1909E5854(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_190A46C48();
}

ValueMetadata *_s33WidgetInvertsAccentFilterStyleKeyVMa()
{
  return &_s33WidgetInvertsAccentFilterStyleKeyVN;
}

uint64_t sub_1909E58A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE470);
    v2 = sub_190A484C0();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(63 - v3) >> 6;
  v7 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v9 = 0;
  while (1)
  {
    if (v5)
    {
      v12 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v6)
      goto LABEL_37;
    v15 = *(_QWORD *)(v27 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v6)
        goto LABEL_37;
      v15 = *(_QWORD *)(v27 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v6)
          goto LABEL_37;
        v15 = *(_QWORD *)(v27 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v6)
            goto LABEL_37;
          v15 = *(_QWORD *)(v27 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
LABEL_28:
    v18 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v13);
    v19 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v13);
    swift_bridgeObjectRetain();
    result = sub_190A480E8();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v7 + 8 * (v21 >> 6))) != 0)
    {
      v10 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v7 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v7 + 8 * v22);
      }
      while (v26 == -1);
      v10 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    v11 = 8 * v10;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v19;
    *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v18;
    ++*(_QWORD *)(v2 + 16);
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v6)
  {
LABEL_37:
    swift_release();
    sub_1908BD134();
    return v2;
  }
  v15 = *(_QWORD *)(v27 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v6)
      goto LABEL_37;
    v15 = *(_QWORD *)(v27 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1909E5B74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE480);
    v2 = sub_190A484C0();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1908B3694(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_190901E94(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_190901E94(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_190901E94(v36, v37);
    sub_190901E94(v37, &v33);
    result = sub_190A48244();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_190901E94(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1908BD134();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void static WidgetPreviewAgent.attachPreviewAgent(extensionIdentifier:frameworkPath:environmentVariables:pidCallback:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(unint64_t), uint64_t a7, void (*a8)(__int128 *), uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void *v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  void *v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  NSObject *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  NSObject *v67;
  NSObject *v68;
  void (*v69)(char *, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  id v85;
  __int128 v86;
  _QWORD v87[2];
  void (*v88)(unint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(__int128 *);
  uint64_t v94;
  uint64_t v95;
  void *v96;
  __int128 aBlock;
  __int128 v98;
  void (*v99)(void *, void *);
  uint64_t v100;
  _BYTE v101[40];
  uint64_t v102;
  __int16 v103;
  uint64_t v104;
  char v105[32];
  __int128 v106;
  uint64_t v107;

  v87[1] = a7;
  v88 = a6;
  v94 = a5;
  v90 = a4;
  v89 = a3;
  v95 = a9;
  v107 = *MEMORY[0x1E0C80C00];
  v92 = sub_190A479E0();
  v91 = *(_QWORD *)(v92 - 8);
  v12 = MEMORY[0x1E0C80A78](v92);
  v14 = (char *)v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v87 - v15;
  v17 = sub_190A47ADC();
  v19 = v18;
  if (qword_1EE1E5E38 != -1)
    swift_once();
  v20 = qword_1EE1E5DA0;
  *(_QWORD *)&v101[24] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
  *(_QWORD *)v101 = v20;
  sub_190901E94(v101, &aBlock);
  swift_bridgeObjectRetain();
  v21 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v106 = v21;
  sub_1908FBC10(&aBlock, v17, v19, isUniquelyReferenced_nonNull_native);
  v23 = v106;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = sub_190A47ADC();
  v26 = v25;
  *(_QWORD *)&v101[24] = MEMORY[0x1E0DEA968];
  *(_QWORD *)v101 = a1;
  *(_QWORD *)&v101[8] = a2;
  sub_190901E94(v101, &aBlock);
  swift_bridgeObjectRetain();
  v27 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v106 = v23;
  sub_1908FBC10(&aBlock, v24, v26, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = (void *)objc_opt_self();
  v29 = swift_bridgeObjectRetain();
  sub_1909E5B74(v29);
  swift_bridgeObjectRelease();
  v30 = (void *)sub_190A47A1C();
  swift_bridgeObjectRelease();
  *(_QWORD *)v101 = 0;
  v31 = objc_msgSend(v28, sel_extensionsWithMatchingAttributes_error_, v30, v101);

  v32 = *(void **)v101;
  if (v31)
  {
    v93 = a8;
    v33 = sub_190A47C5C();
    v34 = v32;

    v35 = *(_QWORD *)(v33 + 16);
    if (v35)
    {
      v36 = v33 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1908B3694(v36, (uint64_t)&aBlock);
        sub_1908B3694((uint64_t)&aBlock, (uint64_t)v105);
        sub_1908AB890(0, &qword_1EE1E5E18);
        if ((swift_dynamicCast() & 1) != 0)
          break;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
        v36 += 32;
        if (!--v35)
        {
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
      }
      v40 = v96;
      swift_bridgeObjectRelease();

      sub_190901E94(&aBlock, v101);
    }
    else
    {
LABEL_9:
      memset(v101, 0, 32);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)&v101[24])
    {
      sub_190901E94(v101, &v106);
      sub_1908B3694((uint64_t)&v106, (uint64_t)v101);
      v41 = sub_1908AB890(0, &qword_1EE1E5E18);
      swift_dynamicCast();
      v42 = (void *)aBlock;
      v102 = 0;
      memset(&v101[8], 0, 32);
      v101[0] = 1;
      v103 = 0;
      v104 = v94;
      *((_QWORD *)&v98 + 1) = v41;
      swift_bridgeObjectRetain();
      v43 = v42;
      _s9WidgetKit0A23ExtensionSessionFactoryC04makeD03for7options23watchdogTimeoutProviderAA0acD0_pSgypSg_AA0cD7OptionsVSdSgAA0acD9OperationOcSgtFZ_0((uint64_t)&aBlock, v101, 0, 0);
      v45 = v44;
      sub_1908B4324((uint64_t)&aBlock);
      if (v45)
      {
        v46 = objc_msgSend(v45, sel_respondsToSelector_, sel_pid);
        if ((v46 & 1) != 0)
          v47 = objc_msgSend(v45, sel_pid);
        else
          v47 = 0;
        LOBYTE(aBlock) = (v46 & 1) == 0;
        v88(v47 | ((unint64_t)aBlock << 32));
        v62 = dispatch_group_create();
        v63 = swift_allocObject();
        *(_OWORD *)(v63 + 16) = 0u;
        *(_OWORD *)(v63 + 32) = 0u;
        *(_BYTE *)(v63 + 48) = 1;
        dispatch_group_enter(v62);
        v64 = (void *)sub_190A47AC4();
        v65 = swift_allocObject();
        *(_QWORD *)(v65 + 16) = v63;
        *(_QWORD *)(v65 + 24) = v62;
        v99 = sub_1909E6EAC;
        v100 = v65;
        *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
        *((_QWORD *)&aBlock + 1) = 1107296256;
        *(_QWORD *)&v98 = sub_1909E6DE4;
        *((_QWORD *)&v98 + 1) = &block_descriptor_8;
        v66 = _Block_copy(&aBlock);
        swift_retain();
        v67 = v62;
        swift_release();
        objc_msgSend(v45, sel_attachPreviewAgentWithFrameworkPath_endpoint_handler_, v64, 0, v66);
        _Block_release(v66);

        v68 = v67;
        sub_190A479D4();
        MEMORY[0x194012C1C](v14, 10.0);
        v69 = *(void (**)(char *, uint64_t))(v91 + 8);
        v70 = v14;
        v71 = v92;
        v69(v70, v92);
        sub_190A47FC8();
        v69(v16, v71);
        if ((sub_190A47974() & 1) != 0)
        {
          sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
          v72 = sub_190A47ADC();
          v74 = sub_19096BFDC(v72, v73, 1051, 0, 0xD000000000000015, 0x8000000190A62B30);
          if (qword_1ECF6D3D8 != -1)
            swift_once();
          v75 = sub_190A465A0();
          v76 = __swift_project_value_buffer(v75, (uint64_t)qword_1ECF6D988);
          v77 = v74;
          sub_1909E5284(0, 0, v76, v77);

          aBlock = (unint64_t)v77;
          v98 = 0uLL;
          LOBYTE(v99) = 1;
          v78 = v77;
          v93(&aBlock);

          swift_release();
        }
        else
        {
          swift_beginAccess();
          if ((*(_BYTE *)(v63 + 48) & 1) != 0)
          {
            sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
            v79 = sub_190A47ADC();
            v81 = sub_19096BFDC(v79, v80, 1050, 0, 0xD000000000000014, 0x8000000190A62B50);
            if (qword_1ECF6D3D8 != -1)
              swift_once();
            v82 = sub_190A465A0();
            v83 = __swift_project_value_buffer(v82, (uint64_t)qword_1ECF6D988);
            v84 = v81;
            sub_1909E5284(0, 0, v83, v84);

            aBlock = (unint64_t)v84;
            v98 = 0uLL;
            LOBYTE(v99) = 1;
            v85 = v84;
            v93(&aBlock);
            swift_release();

          }
          else
          {
            v86 = *(_OWORD *)(v63 + 32);
            aBlock = *(_OWORD *)(v63 + 16);
            v98 = v86;
            LOBYTE(v99) = 0;
            v93(&aBlock);
            swift_release();
          }

        }
        objc_msgSend(v45, sel_invalidate);

        swift_unknownObjectRelease();
      }
      else
      {
        sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
        v55 = sub_190A47ADC();
        v57 = sub_19096BFDC(v55, v56, 1050, 0, 0xD000000000000014, 0x8000000190A62B50);
        if (qword_1ECF6D3D8 != -1)
          swift_once();
        v58 = sub_190A465A0();
        v59 = __swift_project_value_buffer(v58, (uint64_t)qword_1ECF6D988);
        v60 = v57;
        sub_1909E5284(0, 0, v59, v60);

        aBlock = (unint64_t)v60;
        v98 = 0uLL;
        LOBYTE(v99) = 1;
        v61 = v60;
        v93(&aBlock);

      }
      sub_1908B47EC((uint64_t)v101);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v106);
    }
    else
    {
      sub_1908B4324((uint64_t)v101);
      sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
      v48 = sub_190A47ADC();
      v50 = sub_19096BFDC(v48, v49, 1300, 0, 0xD000000000000011, 0x8000000190A62A30);
      if (qword_1ECF6D3D8 != -1)
        swift_once();
      v51 = sub_190A465A0();
      v52 = __swift_project_value_buffer(v51, (uint64_t)qword_1ECF6D988);
      v53 = v50;
      sub_1909E5284(0, 0, v52, v53);

      *(_OWORD *)v101 = (unint64_t)v53;
      *(_QWORD *)&v101[16] = 0;
      *(_QWORD *)&v101[24] = 0;
      v101[32] = 1;
      v54 = v53;
      v93((__int128 *)v101);

    }
  }
  else
  {
    v37 = *(id *)v101;
    swift_bridgeObjectRelease();
    v38 = (void *)sub_190A45F58();

    swift_willThrow();
    *(_OWORD *)v101 = (unint64_t)v38;
    *(_QWORD *)&v101[16] = 0;
    *(_QWORD *)&v101[24] = 0;
    v101[32] = 1;
    v39 = v38;
    a8((__int128 *)v101);

  }
}

void sub_1909E6A50(void *a1, void *a2, uint64_t a3, NSObject *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint8_t *v17;
  uint64_t v19;
  id v20;
  id v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (!a1)
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v19 = sub_190A465A0();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ECF6D988);
    v20 = a2;
    v21 = a2;
    v11 = sub_190A46588();
    v22 = sub_190A47F50();
    if (!os_log_type_enabled(v11, v22))
    {

LABEL_16:
      goto LABEL_17;
    }
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    *(_QWORD *)&v28 = v24;
    *(_DWORD *)v23 = 136446210;
    if (a2)
    {
      swift_getErrorValue();
      v25 = sub_1909E4DD8(v31);
      v27 = v26;
    }
    else
    {
      v27 = 0x8000000190A64C90;
      v25 = 0xD000000000000011;
    }
    v32 = sub_1908B35C4(v25, v27, (uint64_t *)&v28);
    sub_190A48178();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1908A7000, v11, v22, "Preview Agent failed to attach to extension: %{public}s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v24, -1, -1);
    v17 = v23;
LABEL_15:
    MEMORY[0x194014398](v17, -1, -1);
    goto LABEL_16;
  }
  objc_msgSend(a1, sel_realToken);
  v7 = v29;
  v8 = v30;
  swift_beginAccess();
  *(_OWORD *)(a3 + 16) = v28;
  *(_QWORD *)(a3 + 32) = v7;
  *(_QWORD *)(a3 + 40) = v8;
  *(_BYTE *)(a3 + 48) = 0;
  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v9 = sub_190A465A0();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ECF6D988);
  v10 = a1;
  v11 = sub_190A46588();
  v12 = sub_190A47F44();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v32 = v14;
    *(_DWORD *)v13 = 136446210;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE478);
    v15 = sub_190A4813C();
    sub_1908B35C4(v15, v16, &v32);
    sub_190A48178();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v11, v12, "Preview Agent attached to extension: %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v14, -1, -1);
    v17 = v13;
    goto LABEL_15;
  }

LABEL_17:
  dispatch_group_leave(a4);
}

void sub_1909E6DE4(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t WidgetPreviewAgent.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t WidgetPreviewAgent.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1909E6E70()
{
  return swift_deallocObject();
}

uint64_t sub_1909E6E80()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1909E6EAC(void *a1, void *a2)
{
  uint64_t v2;

  sub_1909E6A50(a1, a2, *(_QWORD *)(v2 + 16), *(NSObject **)(v2 + 24));
}

uint64_t type metadata accessor for WidgetPreviewAgent()
{
  return objc_opt_self();
}

uint64_t method lookup function for WidgetPreviewAgent()
{
  return swift_lookUpClassMethod();
}

uint64_t static DataProtectionLevel.systemDefault.setter(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  result = swift_beginAccess();
  byte_1ECF6C560 = v1;
  return result;
}

uint64_t (*static DataProtectionLevel.systemDefault.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

WidgetKit::DataProtectionLevel_optional __swiftcall DataProtectionLevel.init(_:)(NSFileProtectionType a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  WidgetKit::DataProtectionLevel_optional result;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString *v27;
  char v28;
  NSString *v29;

  v3 = v1;
  v4 = sub_190A47ADC();
  v6 = v5;
  if (v4 == sub_190A47ADC() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  v9 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
LABEL_15:

    v21 = 0;
    goto LABEL_16;
  }
  v10 = sub_190A47ADC();
  v12 = v11;
  if (v10 == sub_190A47ADC() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  v15 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
LABEL_18:

    v21 = 1;
    goto LABEL_16;
  }
  v16 = sub_190A47ADC();
  v18 = v17;
  if (v16 == sub_190A47ADC() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
LABEL_20:

    v21 = 2;
    goto LABEL_16;
  }
  v22 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
    goto LABEL_20;
  v23 = sub_190A47ADC();
  v25 = v24;
  if (v23 == sub_190A47ADC() && v25 == v26)
  {
    v27 = a1;

    result.value = swift_bridgeObjectRelease_n();
    v21 = 3;
  }
  else
  {
    v28 = sub_190A486DC();
    v29 = a1;

    swift_bridgeObjectRelease();
    result.value = swift_bridgeObjectRelease();
    if ((v28 & 1) != 0)
      v21 = 3;
    else
      v21 = 4;
  }
LABEL_16:
  *v3 = v21;
  return result;
}

unint64_t DataProtectionLevel.init(_:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 4;
  if (result < 4)
    v2 = result;
  *a2 = v2;
  return result;
}

Swift::Bool __swiftcall DataProtectionLevel.canShowContent(for:)(WidgetKit::DataProtectionLevel a1)
{
  unsigned __int8 *v1;

  return -25 * (unint64_t)*v1 + 100 >= -25 * (unint64_t)*(unsigned __int8 *)a1 + 100;
}

BOOL static DataProtectionLevel.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return -25 * (unint64_t)*a1 + 100 < -25 * (unint64_t)*a2 + 100;
}

uint64_t DataProtectionLevel.rawValue.getter()
{
  unsigned __int8 *v0;

  return -25 * *v0 + 100;
}

id DataProtectionLevel.fileProtectionType.getter()
{
  char *v0;

  return **((id **)&unk_1E2CD20A0 + *v0);
}

unint64_t DataProtectionLevel.description.getter()
{
  unsigned __int8 *v0;

  return ((unint64_t)*v0 << 40) + 0x417373616C43;
}

WidgetKit::DataProtectionLevel_optional __swiftcall DataProtectionLevel.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;

  if (rawValue > 74)
  {
    if (rawValue == 75)
    {
      *v1 = 1;
      return (WidgetKit::DataProtectionLevel_optional)rawValue;
    }
    if (rawValue == 100)
    {
      *v1 = 0;
      return (WidgetKit::DataProtectionLevel_optional)rawValue;
    }
LABEL_8:
    *v1 = 4;
    return (WidgetKit::DataProtectionLevel_optional)rawValue;
  }
  if (rawValue == 25)
  {
    *v1 = 3;
    return (WidgetKit::DataProtectionLevel_optional)rawValue;
  }
  if (rawValue != 50)
    goto LABEL_8;
  *v1 = 2;
  return (WidgetKit::DataProtectionLevel_optional)rawValue;
}

void *static DataProtectionLevel.allCases.getter()
{
  return &unk_1E2CC5EB0;
}

uint64_t sub_1909E72C0()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t sub_1909E730C()
{
  return sub_190A487CC();
}

uint64_t sub_1909E7340()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

WidgetKit::DataProtectionLevel_optional sub_1909E7388(Swift::Int *a1)
{
  return DataProtectionLevel.init(rawValue:)(*a1);
}

void sub_1909E7390(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = -25 * *v1 + 100;
}

void sub_1909E73A8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E2CC5F68;
}

uint64_t sub_1909E73B8()
{
  sub_1909E7570();
  return sub_190A47C38();
}

uint64_t sub_1909E7414()
{
  sub_1909E7570();
  return sub_190A47C20();
}

BOOL sub_1909E7460(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return -25 * (unint64_t)*a2 + 100 >= -25 * (unint64_t)*a1 + 100;
}

BOOL sub_1909E7488(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return -25 * (unint64_t)*a1 + 100 >= -25 * (unint64_t)*a2 + 100;
}

BOOL sub_1909E74B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return -25 * (unint64_t)*a2 + 100 < -25 * (unint64_t)*a1 + 100;
}

unint64_t sub_1909E74DC()
{
  unint64_t result;

  result = qword_1ECF69DB8;
  if (!qword_1ECF69DB8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for DataProtectionLevel, &type metadata for DataProtectionLevel);
    atomic_store(result, (unint64_t *)&qword_1ECF69DB8);
  }
  return result;
}

unint64_t sub_1909E7524()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EE488;
  if (!qword_1EE1EE488)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EE490);
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EE488);
  }
  return result;
}

unint64_t sub_1909E7570()
{
  unint64_t result;

  result = qword_1EE1E5F70;
  if (!qword_1EE1E5F70)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for DataProtectionLevel, &type metadata for DataProtectionLevel);
    atomic_store(result, (unint64_t *)&qword_1EE1E5F70);
  }
  return result;
}

void Cartesian2ProductCollection<>.init(_:environment:)(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v25 = a5;
  v26 = a4;
  v8 = sub_190A46C30();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (__int128 *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, a3);
  sub_190A46C24();
  v19 = (char *)v15 + *(int *)(v12 + 20);
  v20 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v24 = *a2;
  v20(v19, v11, v8);
  *v15 = v24;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v21 = sub_1908BAE48((uint64_t)v15);
  sub_1909EA454((uint64_t)v15);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, a3);
  v27 = v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE498);
  v23 = sub_1909EA490();
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v25, v18, a3);
  v28 = a3;
  v29 = v22;
  v30 = v26;
  v31 = v23;
  type metadata accessor for Cartesian2ProductCollection();
}

uint64_t sub_1909E7744(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v1 + *(int *)(a1 + 52), v3 - 120, v2);
}

uint64_t Cartesian2ProductCollection.count.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = sub_190A47E30();
  v1 = sub_190A47E30();
  result = v0 * v1;
  if ((unsigned __int128)(v0 * (__int128)v1) >> 64 != (v0 * v1) >> 63)
    __break(1u);
  return result;
}

uint64_t Cartesian2ProductCollection.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;

  v17 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)&v16 - v9;
  v11 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v16 - v13;
  sub_1909E7F28((uint64_t)&v16 - v13, (uint64_t)v10, a3, a4);
  sub_1909E80B4(a1, v17);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t Cartesian2ProductCollection.startIndex.getter()
{
  return 0;
}

void sub_1909E7930()
{
  uint64_t TupleTypeMetadata2;
  uint64_t v1;
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v1 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v2 = MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  type metadata accessor for Cartesian2ProductCollection();
}

uint64_t sub_1909E7A74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  Cartesian2ProductCollection.subscript.getter(v1, v9, v4, a1);
  v11 = v8 + *(int *)(v7 + 48);
  v12 = *(void (**)(void))(v6 + 32);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v8, v1, v2);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v13(v11, v9, v3);
  v14 = *(_QWORD *)(v10 - 120) + *(int *)(v7 + 48);
  v12();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v14, v11, v3);
}

void sub_1909E7B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a4 + a3 - 32);
  v5 = *(_QWORD *)(a4 + a3 - 24);
  v7 = *(_QWORD *)(a4 + a3 - 8);
  v19 = *(_QWORD *)(a4 + a3 - 16);
  v20 = a2;
  v17 = v5;
  v18 = v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v13 = (char *)&v17 - v12;
  v14 = *(int *)(v11 + 48);
  v15 = &v13[v14];
  v16 = a1 + v14;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v13, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v15, v16, v9);
  v21 = v6;
  v22 = v17;
  v23 = v19;
  v24 = v18;
  type metadata accessor for Cartesian2ProductCollection();
}

uint64_t sub_1909E7C34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD *);
  uint64_t v11;
  uint64_t v12;

  v10 = Cartesian2ProductCollection.subscript.modify((_QWORD *)(v9 - 112), v6, a1);
  v12 = v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(v11, v7, v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(v12 + *(int *)(v5 + 48), v8, v2);
  return ((uint64_t (*)(uint64_t, _QWORD))v10)(v9 - 112, 0);
}

void (*Cartesian2ProductCollection.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  size_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v23;

  v5 = malloc(0x78uLL);
  *a1 = v5;
  v6 = *(_QWORD *)(a3 - 8);
  v7 = malloc(*(_QWORD *)(v6 + 64));
  v5[4] = v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[5] = AssociatedTypeWitness;
  v9 = swift_getAssociatedTypeWitness();
  v5[6] = v9;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v5[7] = TupleTypeMetadata2;
  v11 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v5[8] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v13 = malloc(v12);
  v5[9] = v13;
  v14 = malloc(v12);
  v5[10] = v14;
  v15 = (uint64_t)v14 + *(int *)(TupleTypeMetadata2 + 48);
  v21 = v15;
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v7, v23, a3);
  sub_1909E7F28((uint64_t)v14, v15, a2, a3);
  (*(void (**)(void *, uint64_t))(v6 + 8))(v7, a3);
  v16 = *(int *)(TupleTypeMetadata2 + 48);
  *((_DWORD *)v5 + 28) = v16;
  v17 = (uint64_t)v13 + v16;
  v18 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5[11] = v18;
  (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v13, v14, AssociatedTypeWitness);
  v19 = *(_QWORD *)(v9 - 8);
  v5[12] = v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, v21, v9);
  v5[13] = Cartesian2ProductCollection.subscript.modify(v5, (uint64_t)v13, v17, a3);
  return sub_1909E7E6C;
}

void sub_1909E7E6C(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 96);
  v3 = *(void **)(*a1 + 80);
  v4 = *(_QWORD *)(*a1 + 88);
  v6 = *(_QWORD *)(*a1 + 64);
  v5 = *(char **)(*a1 + 72);
  v8 = *(_QWORD *)(*a1 + 48);
  v7 = *(_QWORD *)(*a1 + 56);
  v9 = *(_QWORD *)(*a1 + 40);
  v11 = *(void **)(*a1 + 32);
  v10 = &v5[*(int *)(*a1 + 112)];
  (*(void (**)(_QWORD, _QWORD))(*a1 + 104))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v7);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v5, v9);
  free(v3);
  free(v5);
  free(v11);
  free(v1);
}

uint64_t sub_1909E7F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v18 = a1;
  v19 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = (char *)&v16 - v7;
  v9 = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - v11;
  v21 = a3;
  v20 = sub_190A47E30();
  sub_1908BBD84();
  sub_190A481A8();
  v14 = v22;
  v13 = v23;
  sub_1909E96B4();
  sub_1909E9710(v18, v19, (uint64_t)v12, (uint64_t)v8, v13, v14, a4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1909E80B4(uint64_t a1, uint64_t a2)
{
  void (*v4)(_BYTE *, _QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t (*v8)(_BYTE *, _QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[32];

  v4 = (void (*)(_BYTE *, _QWORD))sub_190A47EC0();
  v6 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v6, AssociatedTypeWitness);
  v4(v13, 0);
  v8 = (uint64_t (*)(_BYTE *, _QWORD))sub_190A47EC0();
  v10 = v9;
  v11 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a2, v10, v11);
  return v8(v13, 0);
}

void (*Cartesian2ProductCollection.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  size_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  char *v18;
  char *v19;
  char *v20;
  void (*v21)(void);
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v29;
  void *v30;
  char *v31;
  void *v32;
  uint64_t TupleTypeMetadata2;

  v7 = malloc(0xB0uLL);
  *a1 = v7;
  *v7 = a4;
  v7[1] = v4;
  v7[2] = swift_getAssociatedTypeWitness();
  v7[3] = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7[4] = TupleTypeMetadata2;
  v8 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v7[5] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v7[6] = malloc(v9);
  v32 = malloc(v9);
  v7[7] = v32;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[8] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7[9] = v11;
  v31 = (char *)malloc(*(_QWORD *)(v11 + 64));
  v7[10] = v31;
  v12 = swift_getAssociatedTypeWitness();
  v7[11] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[12] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v7[13] = malloc(v14);
  v30 = malloc(v14);
  v7[14] = v30;
  v15 = swift_getTupleTypeMetadata2();
  v7[15] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v7[16] = v16;
  v17 = *(_QWORD *)(v16 + 64);
  v29 = (char *)malloc(v17);
  v7[17] = v29;
  v18 = (char *)malloc(v17);
  v7[18] = v18;
  v19 = (char *)malloc(v17);
  v7[19] = v19;
  v20 = &v19[*(int *)(v15 + 48)];
  v21 = *(void (**)(void))(v13 + 16);
  v21();
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v22(v20, a3, AssociatedTypeWitness);
  v23 = *(int *)(v15 + 48);
  *((_DWORD *)v7 + 40) = v23;
  v24 = &v18[v23];
  ((void (*)(char *, char *, uint64_t))v21)(v18, v19, v12);
  v22(v24, (uint64_t)v20, AssociatedTypeWitness);
  v25 = *(int *)(v15 + 48);
  *((_DWORD *)v7 + 41) = v25;
  v26 = &v29[v25];
  v21();
  v22(v26, (uint64_t)v20, AssociatedTypeWitness);
  ((void (*)(void *, char *, uint64_t))v21)(v30, v18, v12);
  v22(v31, (uint64_t)v26, AssociatedTypeWitness);
  v27 = *(int *)(TupleTypeMetadata2 + 48);
  *((_DWORD *)v7 + 42) = v27;
  sub_1909E80B4((uint64_t)v32, (uint64_t)v32 + v27);
  return sub_1909E84B8;
}

void sub_1909E84B8(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(void *, uint64_t);
  void (*v20)(void *, uint64_t);
  void *v21;
  void (*v22)(void *, uint64_t);
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;

  v2 = *(_QWORD **)a1;
  v3 = *(int *)(*(_QWORD *)a1 + 164);
  v4 = *(int *)(*(_QWORD *)a1 + 168);
  v5 = *(int *)(*(_QWORD *)a1 + 160);
  v6 = *(char **)(*(_QWORD *)a1 + 144);
  v35 = *(void **)(*(_QWORD *)a1 + 152);
  v7 = *(char **)(*(_QWORD *)a1 + 136);
  v32 = *(_QWORD *)(*(_QWORD *)a1 + 128);
  v33 = *(_QWORD *)(*(_QWORD *)a1 + 120);
  v8 = *(void **)(*(_QWORD *)a1 + 104);
  v38 = *(void **)(*(_QWORD *)a1 + 112);
  v9 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  v31 = *(_QWORD *)(*(_QWORD *)a1 + 96);
  v10 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v37 = *(void **)(*(_QWORD *)a1 + 80);
  v12 = *(char **)(*(_QWORD *)a1 + 56);
  v11 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  v13 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v36 = v6;
  v34 = (void *)v13;
  if ((a2 & 1) != 0)
  {
    v26 = v2[5];
    v14 = v2[3];
    v24 = v2[4];
    v23 = (_QWORD *)*v2;
    v15 = &v12[v4];
    v25 = &v7[v3];
    v27 = &v6[v5];
    v29 = *(char **)(*(_QWORD *)a1 + 136);
    v16 = *(void **)(*(_QWORD *)a1 + 104);
    v17 = v13 + *(int *)(v24 + 48);
    (*(void (**)(uint64_t, char *))(*(_QWORD *)(v2[2] - 8) + 16))(v13, v12);
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v17, v15, v14);
    (*(void (**)(void *, void *, uint64_t))(v31 + 32))(v16, v38, v9);
    v18 = v17;
    v8 = v16;
    v7 = v29;
    sub_1909EA814(v13, v18, (uint64_t)v8, (uint64_t)v37, v23);
    v19 = *(void (**)(void *, uint64_t))(v10 + 8);
    v19(v37, v11);
    v20 = *(void (**)(void *, uint64_t))(v31 + 8);
    v20(v8, v9);
    v21 = v35;
    (*(void (**)(void *, uint64_t))(v32 + 8))(v35, v33);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v24);
    v19(v25, v11);
    v20(v29, v9);
    v19(v27, v11);
  }
  else
  {
    v28 = &v7[v3];
    v30 = &v6[v5];
    sub_1909EA814((uint64_t)v12, (uint64_t)&v12[v4], (uint64_t)v38, (uint64_t)v37, (_QWORD *)*v2);
    v22 = *(void (**)(void *, uint64_t))(v10 + 8);
    v22(v37, v11);
    v20 = *(void (**)(void *, uint64_t))(v31 + 8);
    v20(v38, v9);
    v21 = v35;
    (*(void (**)(void *, uint64_t))(v32 + 8))(v35, v33);
    v22(v28, v11);
    v20(v7, v9);
    v22(v30, v11);
  }
  v20(v36, v9);
  free(v21);
  free(v36);
  free(v7);
  free(v38);
  free(v8);
  free(v37);
  free(v12);
  free(v34);
  free(v2);
}

uint64_t Cartesian2ProductCollection.subscript.setter(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(void);
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(void);
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  void (*v59)(uint64_t, uint64_t);
  void (*v60)(char *, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t TupleTypeMetadata2;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;

  v75 = a3;
  v72 = a1;
  v73 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v68 = AssociatedTypeWitness;
  v87 = v6;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v78 = (char *)&v62 - v7;
  v85 = (_QWORD *)a4;
  v8 = swift_getAssociatedTypeWitness();
  v86 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v76 = (char *)&v62 - v9;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v79 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v10 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v83 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v82 = (char *)&v62 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v81 = (char *)&v62 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v80 = (char *)&v62 - v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v62 - v18;
  v20 = swift_getAssociatedTypeWitness();
  v21 = swift_getAssociatedTypeWitness();
  v22 = swift_getTupleTypeMetadata2();
  v77 = *(_QWORD *)(v22 - 8);
  v23 = v22;
  v84 = v22;
  v24 = MEMORY[0x1E0C80A78](v22);
  v69 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v62 - v27;
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v62 + *(int *)(v23 + 48) - v29;
  v31 = *(_QWORD *)(v20 - 8);
  v32 = *(void (**)(void))(v31 + 32);
  v65 = v31;
  v33 = (char *)&v62 - v29;
  v74 = (char *)&v62 - v29;
  v66 = v20;
  v32();
  v34 = *(_QWORD *)(v21 - 8);
  v35 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v72 = v34;
  v64 = v21;
  v35(v30, v73, v21);
  v36 = *(int *)(v23 + 48);
  v67 = v28;
  v37 = &v28[v36];
  v73 = &v28[v36];
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v33, v20);
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v37, v30, v21);
  v38 = TupleTypeMetadata2;
  v39 = (uint64_t)&v19[*(int *)(TupleTypeMetadata2 + 48)];
  v71 = v19;
  sub_1909E7F28((uint64_t)v19, v39, v75, (uint64_t)v85);
  v40 = v80;
  v41 = (uint64_t)&v80[*(int *)(v38 + 48)];
  v42 = *(void (**)(void))(v86 + 16);
  ((void (*)(char *, char *, uint64_t))v42)(v80, v19, v8);
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16);
  v75 = v41;
  v44 = v68;
  v43(v41, v39, v68);
  v45 = v81;
  v46 = &v81[*(int *)(v38 + 48)];
  ((void (*)(char *, char *, uint64_t))v42)(v81, v40, v8);
  v43((uint64_t)v46, v41, v44);
  v47 = v82;
  v63 = &v82[*(int *)(v38 + 48)];
  v48 = v63;
  ((void (*)(char *, char *, uint64_t))v42)(v82, v45, v8);
  v43((uint64_t)v48, (uint64_t)v46, v44);
  v49 = &v83[*(int *)(v38 + 48)];
  v50 = v8;
  v42();
  v43((uint64_t)v49, (uint64_t)v46, v44);
  v51 = (uint64_t)v76;
  ((void (*)(char *, char *, uint64_t))v42)(v76, v47, v8);
  v52 = (uint64_t)v78;
  v43((uint64_t)v78, (uint64_t)v49, v44);
  v53 = v85;
  v54 = v69;
  v55 = v69 + *(int *)(v84 + 48);
  sub_1909E80B4(v69, v55);
  (*(void (**)(uint64_t, char *, uint64_t))(v65 + 40))(v54, v67, v66);
  (*(void (**)(uint64_t, char *, uint64_t))(v72 + 40))(v55, v73, v64);
  v56 = v55;
  v57 = v51;
  sub_1909EA814(v54, v56, v51, v52, v53);
  v58 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
  v58(v52, v44);
  v59 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
  v59(v57, v50);
  v60 = *(void (**)(char *, uint64_t))(v79 + 8);
  v60(v81, v38);
  v58((uint64_t)v49, v44);
  v59((uint64_t)v83, v50);
  v58((uint64_t)v63, v44);
  v59((uint64_t)v82, v50);
  v60(v71, v38);
  v58(v75, v44);
  v59((uint64_t)v80, v50);
  return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v74, v84);
}

uint64_t Cartesian2ProductCollection.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  char *v23;
  void (*v24)(char *, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = a2;
  v30 = a4;
  v32 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v31 = a5;
  v8 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v29 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v10 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v27 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v27 - v17;
  v19 = (char *)&v27 + *(int *)(v16 + 48) - v17;
  v28 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  v20((char *)&v27 - v17, a3, AssociatedTypeWitness);
  v27 = *(_QWORD *)(v8 - 8);
  v21 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  v21(v19, v30, v8);
  v30 = &v15[*(int *)(TupleTypeMetadata2 + 48)];
  v22 = v30;
  v20(v15, (uint64_t)v18, AssociatedTypeWitness);
  v21(v22, v19, v8);
  v23 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
  v20(v12, (uint64_t)v18, AssociatedTypeWitness);
  v21(v23, v19, v8);
  sub_1909E80B4(v32, v33);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v18, TupleTypeMetadata2);
  v24 = *(void (**)(char *, uint64_t))(v27 + 8);
  v24(v23, v8);
  v25 = *(void (**)(char *, uint64_t))(v28 + 8);
  v25(v12, AssociatedTypeWitness);
  v24(v30, v8);
  return ((uint64_t (*)(char *, uint64_t))v25)(v15, AssociatedTypeWitness);
}

uint64_t Cartesian2ProductCollection.subscript.setter(void (**a1)(_QWORD, _QWORD, _QWORD), char *a2, char *a3, char *a4, _QWORD *a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, _QWORD, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  void (*v42)(void);
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  void (*v56)(uint64_t, uint64_t);
  void (*v57)(uint64_t, uint64_t);
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  void (**v78)(_QWORD, _QWORD, _QWORD);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;

  v69 = a3;
  v70 = a4;
  v68 = a2;
  v78 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v84 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v73 = (char *)&v61 - v7;
  v74 = a5;
  v8 = swift_getAssociatedTypeWitness();
  v82 = *(_QWORD *)(v8 - 8);
  v62 = v8;
  MEMORY[0x1E0C80A78](v8);
  v71 = (char *)&v61 - v9;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v75 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v11 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v85 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v83 = (char *)&v61 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v65 = (char *)&v61 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v61 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v61 - v20;
  v22 = swift_getAssociatedTypeWitness();
  v23 = swift_getAssociatedTypeWitness();
  v24 = swift_getTupleTypeMetadata2();
  v72 = *(_QWORD *)(v24 - 8);
  v86 = v24;
  v25 = MEMORY[0x1E0C80A78](v24);
  v63 = (uint64_t)&v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v77 = (char *)&v61 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v61 = (char *)&v61 + *(int *)(v29 + 48) - v30;
  v31 = v61;
  v80 = *(_QWORD *)(v22 - 8);
  v81 = v22;
  v32 = *(void (**)(char *, _QWORD, uint64_t))(v80 + 32);
  v66 = (char *)&v61 - v30;
  v32((char *)&v61 - v30, v78, v22);
  v78 = *(void (***)(_QWORD, _QWORD, _QWORD))(v23 - 8);
  v79 = v23;
  ((void (**)(char *, char *, uint64_t))v78)[4](v31, v68, v23);
  v33 = TupleTypeMetadata2;
  v76 = TupleTypeMetadata2;
  v34 = v21;
  v35 = &v21[*(int *)(TupleTypeMetadata2 + 48)];
  v36 = v82;
  v37 = *(void (**)(char *, char *, uint64_t))(v82 + 32);
  v67 = v34;
  v38 = v62;
  v37(v34, v69, v62);
  v39 = v84;
  (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v35, v70, AssociatedTypeWitness);
  v40 = v19;
  v41 = &v19[*(int *)(v33 + 48)];
  v42 = *(void (**)(void))(v36 + 16);
  v64 = v40;
  ((void (*)(char *, char *, uint64_t))v42)(v40, v34, v38);
  v43 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
  v70 = v41;
  v43(v41, v35, AssociatedTypeWitness);
  v68 = &v77[*(int *)(v86 + 48)];
  v44 = v68;
  (*(void (**)(void))(v80 + 16))();
  ((void (**)(char *, char *, uint64_t))v78)[2](v44, v61, v79);
  v45 = v76;
  v46 = v65;
  v47 = &v65[*(int *)(v76 + 48)];
  ((void (*)(char *, char *, uint64_t))v42)(v65, v40, v38);
  v43(v47, v41, AssociatedTypeWitness);
  v69 = &v83[*(int *)(v45 + 48)];
  v48 = v69;
  v49 = v83;
  v42();
  v43(v48, v47, AssociatedTypeWitness);
  v50 = &v85[*(int *)(v45 + 48)];
  v42();
  v43(v50, v47, AssociatedTypeWitness);
  v51 = (uint64_t)v71;
  ((void (*)(char *, char *, uint64_t))v42)(v71, v49, v38);
  v52 = (uint64_t)v73;
  v43(v73, v50, AssociatedTypeWitness);
  v53 = v63;
  v54 = v63 + *(int *)(v86 + 48);
  v55 = v74;
  sub_1909E80B4(v63, v54);
  (*(void (**)(uint64_t, char *, uint64_t))(v80 + 40))(v53, v77, v81);
  ((void (**)(uint64_t, char *, uint64_t))v78)[5](v54, v68, v79);
  sub_1909EA814(v53, v54, v51, v52, v55);
  v56 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
  v56(v52, AssociatedTypeWitness);
  v57 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
  v57(v51, v38);
  v58 = *(void (**)(char *, uint64_t))(v75 + 8);
  v59 = v76;
  v58(v46, v76);
  v56((uint64_t)v50, AssociatedTypeWitness);
  v57((uint64_t)v85, v38);
  v56((uint64_t)v69, AssociatedTypeWitness);
  v57((uint64_t)v83, v38);
  v58(v67, v59);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v66, v86);
  v56((uint64_t)v70, AssociatedTypeWitness);
  return ((uint64_t (*)(char *, uint64_t))v57)(v64, v38);
}

Swift::Int __swiftcall Cartesian2ProductCollection.index(_:offsetBy:)(Swift::Int _, Swift::tuple_Int_Int offsetBy)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  void (*v21)(char *, uint64_t);
  Swift::Int v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v26 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v27 = AssociatedTypeWitness;
  v6 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v24 - v9;
  v11 = swift_getAssociatedTypeWitness();
  v25 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v24 - v15;
  v29 = _;
  v28 = sub_190A47E30();
  sub_1908BBD84();
  sub_190A481A8();
  v18 = v30;
  v17 = v31;
  sub_1909E96B4();
  sub_1909E9710((uint64_t)v16, (uint64_t)v10, (uint64_t)v14, (uint64_t)v8, v17, v18, (uint64_t)v3);
  v19 = v27;
  v20 = *(void (**)(char *, uint64_t))(v26 + 8);
  v20(v8, v27);
  v21 = *(void (**)(char *, uint64_t))(v25 + 8);
  v21(v14, v11);
  v22 = sub_1909E987C((uint64_t)v16, (uint64_t)v10, v3);
  v20(v10, v19);
  v21(v16, v11);
  return v22;
}

uint64_t sub_1909E96B4()
{
  sub_190A47E18();
  return sub_190A47E18();
}

uint64_t sub_1909E9710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a2;
  v21 = a6;
  v18 = a1;
  v19 = a5;
  v15 = a3;
  v16 = *(_QWORD *)(*(_QWORD *)(a7 + 32) + 8);
  v17 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))((char *)&v14 - v11, v15, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(&v12[*(int *)(TupleTypeMetadata2 + 48)], v17, v8);
  sub_190A47E48();
  sub_190A47E48();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, TupleTypeMetadata2);
}

uint64_t sub_1909E987C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;

  v43 = a2;
  v5 = *(_QWORD *)(a3[5] + 8);
  v45 = a3[3];
  v46 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v38 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = v38;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v42 = (char *)&v35 - v8;
  v47 = a3;
  v9 = swift_getAssociatedTypeWitness();
  v40 = *(_QWORD *)(v9 - 8);
  v10 = v40;
  MEMORY[0x1E0C80A78](v9);
  v39 = (char *)&v35 - v11;
  v12 = AssociatedTypeWitness;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v44 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v14 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v35 - v18;
  v20 = *(int *)(v17 + 48);
  v41 = v17;
  v21 = (char *)&v35 + v20 - v18;
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v36 = v21;
  v37 = (char *)&v35 - v18;
  v35((char *)&v35 - v18, a1, v9);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v23 = v12;
  v22(v21, v43, v12);
  v24 = (uint64_t)v39;
  v25 = (uint64_t)v42;
  v26 = v47;
  sub_1909E96B4();
  v27 = (uint64_t)&v16[*(int *)(TupleTypeMetadata2 + 48)];
  v35(v16, (uint64_t)v19, v9);
  v22((char *)v27, (uint64_t)v36, v23);
  v28 = sub_1909E9BB8(v24, v25, (uint64_t)v16, v27, v26);
  v43 = v29;
  v30 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
  v30(v25, v23);
  v31 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
  v31(v24, v9);
  v30(v27, v23);
  v31((uint64_t)v16, v9);
  v32 = sub_190A47E30();
  result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v37, v41);
  v34 = v28 * v32;
  if ((unsigned __int128)(v28 * (__int128)v32) >> 64 != (v28 * v32) >> 63)
  {
    __break(1u);
    goto LABEL_5;
  }
  result = v34 + v43;
  if (__OFADD__(v34, v43))
LABEL_5:
    __break(1u);
  return result;
}

void Cartesian2ProductCollection.init(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for Cartesian2ProductCollection();
}

uint64_t sub_1909E9B84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

uint64_t sub_1909E9BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v21 = a2;
  v22 = a3;
  v26 = *(_QWORD *)(a5[4] + 8);
  v27 = a4;
  v24 = a5[2];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v25 = *(_QWORD *)(a5[5] + 8);
  v23 = a5[3];
  v8 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v20 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v10 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v20 - v13;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16);
  v15((char *)&v20 - v13, a1, AssociatedTypeWitness);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v16(&v14[*(int *)(TupleTypeMetadata2 + 48)], v21, v8);
  v15(v12, v22, AssociatedTypeWitness);
  v16(&v12[*(int *)(TupleTypeMetadata2 + 48)], v27, v8);
  v17 = sub_190A47E54();
  sub_190A47E54();
  v18 = *(void (**)(char *, uint64_t))(v20 + 8);
  v18(v12, TupleTypeMetadata2);
  v18(v14, TupleTypeMetadata2);
  return v17;
}

uint64_t sub_1909E9D8C()
{
  return sub_190A47DF4();
}

uint64_t sub_1909E9D9C()
{
  return sub_190A47E0C();
}

uint64_t sub_1909E9DA8()
{
  MEMORY[0x19401429C](&protocol conformance descriptor for Cartesian2ProductCollection<A, B>);
  return sub_190A47DE8();
}

_QWORD *sub_1909E9DF8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1909EA2F8(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB508]);
}

uint64_t sub_1909E9E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x19401429C](&protocol conformance descriptor for Cartesian2ProductCollection<A, B>, a3);
  return sub_190A47DF4();
}

uint64_t sub_1909E9E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x19401429C](&protocol conformance descriptor for Cartesian2ProductCollection<A, B>, a4);
  return sub_190A47DD0();
}

uint64_t sub_1909E9ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x19401429C](&protocol conformance descriptor for Cartesian2ProductCollection<A, B>, a3);
  return sub_190A47E0C();
}

uint64_t sub_1909E9F20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Cartesian2ProductCollection.endIndex.getter();
  *a1 = result;
  return result;
}

void (*sub_1909E9F44(uint64_t **a1, uint64_t *a2, uint64_t a3))(uint64_t *a1, uint64_t a2)
{
  uint64_t *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  char *v11;
  void (*v12)(_QWORD *);
  uint64_t v13;
  uint64_t v14;

  v6 = (uint64_t *)malloc(0x40uLL);
  *a1 = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6[4] = TupleTypeMetadata2;
  v10 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v6[5] = v10;
  v11 = (char *)malloc(*(_QWORD *)(v10 + 64));
  v6[6] = (uint64_t)v11;
  v12 = sub_1909EA0C8(v6, *a2, a3);
  v14 = v13;
  v6[7] = (uint64_t)v12;
  (*(void (**)(char *))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(&v11[*(int *)(TupleTypeMetadata2 + 48)], v14, v8);
  return sub_1909EA074;
}

void sub_1909EA074(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(*a1 + 40) + 8))(*(_QWORD *)(*a1 + 48), *(_QWORD *)(*a1 + 32));
  v4 = *(void **)(v3 + 48);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v3, a2);
  free(v4);
  free((void *)v3);
}

void (*sub_1909EA0C8(uint64_t *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  void *v8;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a1 = TupleTypeMetadata2;
  v7 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  a1[1] = v7;
  v8 = malloc(*(_QWORD *)(v7 + 64));
  a1[2] = (uint64_t)v8;
  Cartesian2ProductCollection.subscript.getter((uint64_t)v8, (uint64_t)v8 + *(int *)(TupleTypeMetadata2 + 48), a2, a3);
  return sub_1909EA1B8;
}

void sub_1909EA1B8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  (*(void (**)(void *, _QWORD))(a1[1] + 8))(v1, *a1);
  free(v1);
}

uint64_t sub_1909EA1EC(uint64_t a1)
{
  MEMORY[0x19401429C](&protocol conformance descriptor for Cartesian2ProductCollection<A, B>, a1);
  return sub_190A47E00();
}

void sub_1909EA240(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_1909EA250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1909EA4DC(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x1E0DEA3C0]);
}

uint64_t sub_1909EA274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1909EA4DC(a1, a2, a3, a4, MEMORY[0x1E0DEA4B0], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x1E0DEA3D0]);
}

uint64_t sub_1909EA29C()
{
  MEMORY[0x19401429C](&protocol conformance descriptor for Cartesian2ProductCollection<A, B>);
  return sub_190A47DDC();
}

_QWORD *sub_1909EA2EC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1909EA2F8(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB500]);
}

_QWORD *sub_1909EA2F8(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  v7 = MEMORY[0x19401429C](&protocol conformance descriptor for Cartesian2ProductCollection<A, B>);
  result = a4(&v9, a1, a2, v7, MEMORY[0x1E0DEB458]);
  *a1 = v9;
  return result;
}

uint64_t sub_1909EA35C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = v2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(a2, v4, a1);
  MEMORY[0x19401429C](&protocol conformance descriptor for Cartesian2ProductCollection<A, B>, a1);
  result = sub_190A483E8();
  *(_QWORD *)(a2 + *(int *)(result + 36)) = 0;
  return result;
}

uint64_t sub_1909EA3BC(uint64_t a1)
{
  MEMORY[0x19401429C](&protocol conformance descriptor for Cartesian2ProductCollection<A, B>, a1);
  return sub_190A47E84();
}

uint64_t sub_1909EA3F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = MEMORY[0x19401429C](&protocol conformance descriptor for Cartesian2ProductCollection<A, B>, a1);
  v4 = sub_1909EA688(v1, a1, v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
  return v4;
}

uint64_t sub_1909EA454(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1909EA490()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EE4A0;
  if (!qword_1EE1EE4A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EE498);
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEAF58], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EE4A0);
  }
  return result;
}

uint64_t sub_1909EA4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  uint64_t (*v23)(char *, char *, uint64_t, uint64_t);

  v23 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v22 - v14;
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v22 - v17;
  v19 = sub_190A47A7C();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  v20 = v23(v18, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_1909EA68C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t result;
  void (*v16)(char *, uint64_t);
  uint64_t v17;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = sub_190A47EE4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  v11 = sub_190A47A7C();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, a1, v4);
  v12(v8, a2, v4);
  if ((v11 & 1) == 0)
  {
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    result = ((uint64_t (*)(char *, uint64_t))v16)(v10, v4);
    goto LABEL_5;
  }
  v13 = sub_190A47A7C();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  result = ((uint64_t (*)(char *, uint64_t))v14)(v10, v4);
  if ((v13 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_1909EA814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = a4;
  v33 = a5[4];
  v34 = a3;
  v31 = a5[2];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v35 = a5;
  v37 = a5[5];
  v36 = a5[3];
  v9 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v32 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v11 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v28 - v15;
  v17 = (char *)&v28 + *(int *)(v14 + 48) - v15;
  v18 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 32);
  v20 = v18;
  v29 = AssociatedTypeWitness;
  v30 = v18;
  v19((char *)&v28 - v15, a1, AssociatedTypeWitness);
  v21 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v17, a2, v9);
  v22 = &v13[*(int *)(TupleTypeMetadata2 + 48)];
  v23 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v23(v13, v16, AssociatedTypeWitness);
  v24 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v24(v22, v17, v9);
  sub_190A47ECC();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v9);
  v25 = &v13[*(int *)(TupleTypeMetadata2 + 48)];
  v26 = v29;
  v23(v13, v16, v29);
  v24(v25, v17, v9);
  sub_190A47ECC();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v16, TupleTypeMetadata2);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v13, v26);
}

void type metadata accessor for Cartesian2ProductCollection()
{
  JUMPOUT(0x1940141E8);
}

void sub_1909EAA4C()
{
  JUMPOUT(0x19401429CLL);
}

uint64_t sub_1909EAA5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1909EAB74(a1, a2, a3, MEMORY[0x1E0DEB8B8]);
}

unint64_t sub_1909EAA68()
{
  unint64_t result;

  result = qword_1EE1EE4A8[0];
  if (!qword_1EE1EE4A8[0])
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEB440], MEMORY[0x1E0DEB418]);
    atomic_store(result, qword_1EE1EE4A8);
  }
  return result;
}

uint64_t sub_1909EAAAC(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x19401429C](&protocol conformance descriptor for Cartesian2ProductCollection<A, B>);
  return MEMORY[0x19401429C](MEMORY[0x1E0DEDE40], a1, &v3);
}

void sub_1909EAAF4()
{
  JUMPOUT(0x19401429CLL);
}

uint64_t sub_1909EAB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1909EAB74(a1, a2, a3, MEMORY[0x1E0DEB890]);
}

uint64_t sub_1909EAB10(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x19401429C](&protocol conformance descriptor for Cartesian2ProductCollection<A, B>);
  return MEMORY[0x19401429C](MEMORY[0x1E0DEDE28], a1, &v3);
}

void sub_1909EAB58()
{
  JUMPOUT(0x19401429CLL);
}

uint64_t sub_1909EAB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1909EAB74(a1, a2, a3, MEMORY[0x1E0DEB8C0]);
}

uint64_t sub_1909EAB74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  _QWORD v8[2];

  v6 = sub_1909EAA68();
  v8[0] = MEMORY[0x1E0DEB458];
  v8[1] = v6;
  return MEMORY[0x19401429C](a4, a1, v8);
}

void sub_1909EABBC()
{
  JUMPOUT(0x19401429CLL);
}

void sub_1909EABCC()
{
  JUMPOUT(0x19401429CLL);
}

uint64_t sub_1909EABE4()
{
  return 32;
}

__n128 sub_1909EABF0(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1909EABFC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1909EAC88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v7 + 80));
  if (v10 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (v9 & (unint64_t)~v8) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, ((unint64_t)a2 + v9) & v14, v5);
  }
  return v4;
}

uint64_t sub_1909EAD58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_1909EADB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1909EAE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1909EAE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1909EAEF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1909EAF60(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1909EB03C + 4 * byte_190A595F0[v17 - 1]))();
}

void sub_1909EB0B8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

double sub_1909EB2C8()
{
  double result;

  result = 14.5;
  xmmword_1EE1E6438 = xmmword_190A59840;
  qword_1EE1E6448 = 0x402D000000000000;
  unk_1EE1E6450 = 0;
  byte_1EE1E6458 = 1;
  qword_1EE1E6460 = 0x402A000000000000;
  qword_1EE1E6468 = 0;
  byte_1EE1E6470 = 1;
  qword_1EE1E6478 = 0x402D000000000000;
  unk_1EE1E6480 = 0;
  byte_1EE1E6488 = 1;
  qword_1EE1E6490 = 0x402A000000000000;
  qword_1EE1E6498 = 0;
  byte_1EE1E64A0 = 1;
  return result;
}

uint64_t type metadata accessor for DefaultActivityFontDefinition()
{
  return objc_opt_self();
}

unint64_t sub_1909EB32C()
{
  uint64_t inited;
  void *v1;
  id v2;

  if (qword_1EE1E62C0 != -1)
    swift_once();
  if (!dyld_program_sdk_at_least())
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190A4A350;
  v1 = (void *)*MEMORY[0x1E0CA82F8];
  *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEBB98];
  *(_QWORD *)(inited + 32) = v1;
  *(_QWORD *)(inited + 40) = 7;
  v2 = v1;
  return sub_1908DFEC8(inited);
}

uint64_t sub_1909EB3E4(unsigned __int8 a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned __int8 v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_1EE1E62C0 != -1)
    swift_once();
  if (!dyld_program_sdk_at_least())
    return 0;
  if (qword_1EE1E64B0 != -1)
    swift_once();
  v2 = *((_QWORD *)&xmmword_1EE1E6438 + 1);
  v3 = qword_1EE1E6448;
  v4 = qword_1EE1E6478;
  v8 = xmmword_1EE1E6438;
  v9 = qword_1EE1E6490;
  v10 = qword_1EE1E6460;
  if (qword_1ECF6AAE8 != -1)
    swift_once();
  v5 = byte_1ECF6D4E8;
  v6 = sub_1909BAD88();
  if (v5 == 2)
  {
    if (v6 >= 3u)
    {
      v3 = v4;
      switch(a1)
      {
        case 5u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
          v3 = v9;
          break;
        default:
          return v3;
      }
    }
    else
    {
      switch(a1)
      {
        case 5u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
          v3 = v10;
          break;
        default:
          return v3;
      }
    }
  }
  else if (a1 - 7 < 4 || a1 == 5)
  {
    return v2;
  }
  else
  {
    return v8;
  }
  return v3;
}

uint64_t sub_1909EB5EC()
{
  uint64_t v0;

  if (qword_1EE1E62C0 != -1)
    swift_once();
  if (!dyld_program_sdk_at_least())
    return 0;
  sub_190A473C8();
  return v0;
}

uint64_t type metadata accessor for CompactJindoActivityFontDefinition()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ExpandedJindoActivityFontDefinition()
{
  return objc_opt_self();
}

uint64_t sub_1909EB698()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1909EB708(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  void (*v15)(uint64_t *, uint64_t *, uint64_t);
  unint64_t v16;
  unint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = ~v8;
  v10 = v7 + v8;
  v11 = ((v7 + v8 + ((v7 + v8 + ((v7 + v8) & ~v8)) & ~v8)) & ~v8) + v7;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v15(a1, a2, *(_QWORD *)(a3 + 16));
    v16 = ((unint64_t)a2 + v10) & v9;
    v15((uint64_t *)(((unint64_t)v4 + v10) & v9), (uint64_t *)v16, v5);
    v17 = (v10 + v16) & v9;
    v15((uint64_t *)((v10 + (((unint64_t)v4 + v10) & v9)) & v9), (uint64_t *)v17, v5);
    v15((uint64_t *)((v10 + ((v10 + (((unint64_t)v4 + v10) & v9)) & v9)) & v9), (uint64_t *)((v10 + v17) & v9), v5);
  }
  return v4;
}

uint64_t sub_1909EB814(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v11)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v11 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v11(a1, v3);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = v5 + v6;
  v8 = (v5 + v6 + a1) & ~v6;
  v11(v8, v3);
  v9 = (v7 + v8) & ~v6;
  v11(v9, v3);
  return ((uint64_t (*)(uint64_t, uint64_t))v11)((v7 + v9) & ~v6, v3);
}

uint64_t sub_1909EB8AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a2) & ~v8;
  v7((v9 + a1) & ~v8, v10, v5);
  v11 = (v9 + v10) & ~v8;
  v7((v9 + ((v9 + a1) & ~v8)) & ~v8, v11, v5);
  v7((v9 + ((v9 + ((v9 + a1) & ~v8)) & ~v8)) & ~v8, (v9 + v11) & ~v8, v5);
  return a1;
}

uint64_t sub_1909EB960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a2) & ~v8;
  v7((v9 + a1) & ~v8, v10, v5);
  v11 = (v9 + v10) & ~v8;
  v7((v9 + ((v9 + a1) & ~v8)) & ~v8, v11, v5);
  v7((v9 + ((v9 + ((v9 + a1) & ~v8)) & ~v8)) & ~v8, (v9 + v11) & ~v8, v5);
  return a1;
}

uint64_t sub_1909EBA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a2) & ~v8;
  v7((v9 + a1) & ~v8, v10, v5);
  v11 = (v9 + v10) & ~v8;
  v7((v9 + ((v9 + a1) & ~v8)) & ~v8, v11, v5);
  v7((v9 + ((v9 + ((v9 + a1) & ~v8)) & ~v8)) & ~v8, (v9 + v11) & ~v8, v5);
  return a1;
}

uint64_t sub_1909EBAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a2) & ~v8;
  v7((v9 + a1) & ~v8, v10, v5);
  v11 = (v9 + v10) & ~v8;
  v7((v9 + ((v9 + a1) & ~v8)) & ~v8, v11, v5);
  v7((v9 + ((v9 + ((v9 + a1) & ~v8)) & ~v8)) & ~v8, (v9 + v11) & ~v8, v5);
  return a1;
}

uint64_t sub_1909EBB7C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = ((*(_QWORD *)(v4 + 64) + v7 + ((*(_QWORD *)(v4 + 64) + v7 + ((*(_QWORD *)(v4 + 64) + v7) & ~v7)) & ~v7)) & ~v7)
     + *(_QWORD *)(v4 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v6 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return v5 + v12 + 1;
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1909EBC4C + 4 * byte_190A598E8[(v8 - 1)]))();
}

void sub_1909EBC9C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  size_t v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = ((*(_QWORD *)(v6 + 64) + v8 + ((*(_QWORD *)(v6 + 64) + v8 + ((*(_QWORD *)(v6 + 64) + v8) & ~v8)) & ~v8)) & ~v8)
     + *(_QWORD *)(v6 + 64);
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      v14 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v15 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t _s14IndexedStorageVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s14IndexedStorageVMn);
}

uint64_t EnvironmentValues.showsWidgetLabel.getter()
{
  unsigned __int8 v1;

  sub_190901AD4();
  sub_190A46C3C();
  return v1;
}

uint64_t EnvironmentValues.showsWidgetLabel.setter()
{
  sub_190901AD4();
  return sub_190A46C48();
}

uint64_t View.widgetLabel<A>(label:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v7 = sub_190A472F0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 - v9;
  sub_190A472E4();
  MEMORY[0x194012838](v10, a3, v7, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t View.widgetLabel(_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD v7[4];
  char v8;
  uint64_t v9;

  v7[2] = a1;
  v7[3] = a2;
  v8 = a3;
  v9 = a4;
  return View.widgetLabel<A>(label:)((uint64_t)sub_1909EC0AC, (uint64_t)v7, a5, MEMORY[0x1E0CDDD78], a6);
}

uint64_t sub_1909EC018@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_190A474AC();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1909EC0AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1909EC018(a1);
}

uint64_t View.widgetLabel<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[8];

  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a4;
  v6[5] = a5;
  v6[6] = a1;
  return View.widgetLabel<A>(label:)((uint64_t)sub_1909EC19C, (uint64_t)v6, a2, MEMORY[0x1E0CDDD78], a4);
}

uint64_t sub_1909EC110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_190A474B8();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  *(_QWORD *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_1909EC19C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1909EC110(*(_QWORD *)(v1 + 48), a1);
}

uint64_t (*EnvironmentValues.showsWidgetLabel.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_190901AD4();
  sub_190A46C3C();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_1909EC20C;
}

uint64_t sub_1909EC20C(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_190A46C48();
}

uint64_t sub_1909EC248(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];

  v1 = *(_QWORD *)(a1 + 16);
  v2 = sub_190A472F0();
  v3 = sub_190A46894();
  v5[0] = v1;
  v5[1] = MEMORY[0x19401429C](MEMORY[0x1E0CDD1E0], v2);
  return MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v3, v5);
}

uint64_t sub_1909EC2C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE1E6C20);
  v2 = sub_190A46894();
  v4[0] = v1;
  v4[1] = sub_1909EC320();
  return MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v2, v4);
}

unint64_t sub_1909EC320()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1E6C18;
  if (!qword_1EE1E6C18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE1E6C20);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDD1E0], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1E6C18);
  }
  return result;
}

uint64_t sub_1909EC36C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE1E6C20);
  v2 = sub_190A46894();
  v4[0] = v1;
  v4[1] = sub_1909EC320();
  return MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v2, v4);
}

ValueMetadata *type metadata accessor for ShowsWidgetLabelEnvironmentKey()
{
  return &type metadata for ShowsWidgetLabelEnvironmentKey;
}

uint64_t _s9WidgetKit26StaticControlConfigurationV4bodyQrvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v3 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19094F7F4(v1, (uint64_t)v5);
  swift_storeEnumTagMultiPayload();
  sub_1909F2CA8((uint64_t)v5, a1);
  v6 = *(int *)(type metadata accessor for WidgetDescriptor(0) + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v6) = &unk_1E2CC8168;
  return result;
}

_QWORD *StaticControlConfiguration.init(kind:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *result;

  v14 = sub_1909048C8();
  v16 = v15;
  result = (_QWORD *)swift_allocObject();
  result[2] = a5;
  result[3] = a6;
  result[4] = a3;
  result[5] = a4;
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = 0;
  *(_QWORD *)(a7 + 24) = 0;
  *(_QWORD *)(a7 + 32) = v14;
  *(_QWORD *)(a7 + 40) = v16;
  *(_QWORD *)(a7 + 48) = &unk_1EE1EE5B8;
  *(_QWORD *)(a7 + 56) = result;
  *(_BYTE *)(a7 + 88) = 1;
  return result;
}

uint64_t sub_1909EC534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  v7[12] = a1;
  v7[17] = swift_task_alloc();
  sub_190A47D64();
  v7[18] = sub_190A47D58();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_1909EC5C0()
{
  uint64_t v0;
  void (*v1)(void);
  uint64_t v2;
  __int128 v3;

  v1 = *(void (**)(void))(v0 + 104);
  swift_release();
  sub_190A47158();
  v1();
  sub_190A4714C();
  sub_190904C2C();
  sub_190A47140();
  if (*(_QWORD *)(v0 + 80))
  {
    v2 = *(_QWORD *)(v0 + 96);
    v3 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v0 + 32) = v3;
    *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 88);
    sub_1908B4BBC((__int128 *)(v0 + 16), v2);
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_190904CFC(v0 + 56);
    return sub_190A48448();
  }
}

uint64_t sub_1909EC704()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909EC728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v8 = v3[2];
  v9 = v3[3];
  v11 = v3[4];
  v10 = v3[5];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v12;
  *v12 = v4;
  v12[1] = sub_1908CEB54;
  return sub_1909EC534(a1, a2, a3, v11, v10, v8, v9);
}

uint64_t StaticControlConfiguration.init<A>(kind:provider:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t result;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v15 = sub_1909048C8();
  v23 = v16;
  v24 = v15;
  v17 = *(_QWORD *)(a7 - 8);
  v18 = (*(unsigned __int8 *)(v17 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = (*(_QWORD *)(v17 + 64) + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (char *)swift_allocObject();
  *((_QWORD *)v20 + 2) = a6;
  *((_QWORD *)v20 + 3) = a7;
  *((_QWORD *)v20 + 4) = a8;
  *((_QWORD *)v20 + 5) = a10;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 32))(&v20[v18], a3, a7);
  v22 = &v20[v19];
  *(_QWORD *)v22 = a4;
  *((_QWORD *)v22 + 1) = a5;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = 0;
  *(_QWORD *)(a9 + 24) = 0;
  *(_QWORD *)(a9 + 32) = v24;
  *(_QWORD *)(a9 + 40) = v23;
  *(_QWORD *)(a9 + 48) = &unk_1EE1EE5C8;
  *(_QWORD *)(a9 + 56) = v20;
  *(_BYTE *)(a9 + 88) = 1;
  return result;
}

uint64_t sub_1909EC8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v8[18] = a8;
  v8[19] = v15;
  v8[16] = a6;
  v8[17] = a7;
  v8[14] = a4;
  v8[15] = a5;
  v8[12] = a1;
  v8[13] = a3;
  v8[20] = swift_task_alloc();
  v8[21] = *(_QWORD *)(a8 - 8);
  v8[22] = swift_task_alloc();
  v11 = _s9WidgetKit14ValueGeneratorVMa_0(0, a8, v16, v10);
  v8[23] = v11;
  v8[24] = *(_QWORD *)(v11 - 8);
  v8[25] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[26] = AssociatedTypeWitness;
  v8[27] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[28] = swift_task_alloc();
  sub_190A47D64();
  v8[29] = sub_190A47D58();
  v8[30] = sub_190A47D28();
  v8[31] = v13;
  return swift_task_switch();
}

uint64_t sub_1909EC9E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[25];
  v3 = v0[21];
  v2 = v0[22];
  v4 = v0[18];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v0[14], v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v4);
  v5 = (_QWORD *)swift_task_alloc();
  v0[32] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_1909ECA78;
  return sub_1909ECF4C(v0[28], v0[13], v0[23]);
}

uint64_t sub_1909ECA78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 200);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_1909ECB00()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(void (**)(uint64_t))(v0 + 120);
  swift_release();
  sub_190A47158();
  v2(v1);
  sub_190A4714C();
  sub_190904C2C();
  sub_190A47140();
  if (*(_QWORD *)(v0 + 80))
  {
    v4 = *(_QWORD *)(v0 + 216);
    v3 = *(_QWORD *)(v0 + 224);
    v5 = *(_QWORD *)(v0 + 208);
    v6 = *(_QWORD *)(v0 + 96);
    v7 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v0 + 32) = v7;
    *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 88);
    sub_1908B4BBC((__int128 *)(v0 + 16), v6);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_190904CFC(v0 + 56);
    return sub_190A48448();
  }
}

uint64_t sub_1909ECC8C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909ECCF4()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909ECD64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v7 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = v3 + v10;
  v12 = (uint64_t *)(v3 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  v13 = *v12;
  v14 = v12[1];
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v15;
  *v15 = v4;
  v15[1] = sub_1908CEB54;
  return sub_1909EC8BC(a1, a2, a3, v11, v13, v14, v7, v8);
}

uint64_t sub_1909ECE30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of ControlValueProvider.previewValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ControlValueProvider.currentValue()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1908C5090;
  return v9(a1, a2, a3);
}

uint64_t type metadata accessor for StaticControlConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StaticControlConfiguration);
}

unint64_t sub_1909ECEF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EBAC8;
  if (!qword_1EE1EBAC8)
  {
    v1 = type metadata accessor for ControlDescriptorConfiguration();
    result = MEMORY[0x19401429C](&unk_190A50AA0, v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EBAC8);
  }
  return result;
}

uint64_t _s9WidgetKit14ValueGeneratorVMa_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s9WidgetKit14ValueGeneratorVMn_0);
}

uint64_t sub_1909ECF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;

  v4[3] = a2;
  v4[4] = v3;
  v4[2] = a1;
  v4[5] = *(_QWORD *)(a3 + 24);
  v4[6] = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[7] = AssociatedTypeWitness;
  v4[8] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1909ECFD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 == 1)
  {
    if (qword_1EE1EB680 != -1)
      swift_once();
    v9 = sub_190A465A0();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EE1FD748);
    v10 = sub_190A46588();
    v11 = sub_190A47F68();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1908A7000, v10, v11, "Fetching preview value", v12, 2u);
      MEMORY[0x194014398](v12, -1, -1);
    }
    v14 = *(_QWORD *)(v0 + 40);
    v13 = *(_QWORD *)(v0 + 48);

    (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else if (v1)
  {
    return sub_190A48448();
  }
  else
  {
    if (qword_1EE1EB680 != -1)
      swift_once();
    v2 = sub_190A465A0();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EE1FD748);
    v3 = sub_190A46588();
    v4 = sub_190A47F68();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1908A7000, v3, v4, "Fetching current value", v5, 2u);
      MEMORY[0x194014398](v5, -1, -1);
    }
    v6 = *(_QWORD *)(v0 + 40);

    v15 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(v6 + 24) + *(_QWORD *)(v6 + 24));
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v7;
    *v7 = v0;
    v7[1] = sub_1909ED258;
    return v15(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 40));
  }
}

uint64_t sub_1909ED258()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1909ED2BC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 32))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909ED304()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v1 = *(void **)(v0 + 88);
  sub_19094F7B8();
  v2 = sub_190A47ADC();
  v4 = v3;
  v5 = v1;
  sub_19096BFDC(v2, v4, 1106, v1, 0xD00000000000002ALL, 0x8000000190A61F50);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909ED3B8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1909ED468 + 4 * byte_190A59990[(v7 - 1)]))();
}

void sub_1909ED4B8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

void static ControlAction.legacyAction.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t ControlAction.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  uint64_t result;
  unint64_t v12;
  unint64_t v13;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1908AB890(0, (unint64_t *)&qword_1EE1EA408);
  v9 = (void *)sub_1909EEA28();
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D10070]), sel_initWithIntent_, v9);

  if (v10)
  {
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
    *a3 = v10;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
    v12 = 0;
    v13 = 0xE000000000000000;
    sub_190A48298();
    swift_bridgeObjectRelease();
    v12 = 0xD000000000000025;
    v13 = 0x8000000190A64DB0;
    swift_getDynamicType();
    sub_190A48880();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    result = sub_190A48448();
    __break(1u);
  }
  return result;
}

WidgetKit::ActionAuthenticationPolicy_optional __swiftcall ActionAuthenticationPolicy.init(rawValue:)(Swift::Int32 rawValue)
{
  char *v1;
  char v2;

  if (rawValue >= 3)
    v2 = 3;
  else
    v2 = rawValue;
  *v1 = v2;
  return (WidgetKit::ActionAuthenticationPolicy_optional)rawValue;
}

uint64_t ActionAuthenticationPolicy.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1909ED828()
{
  sub_190A487C0();
  sub_190A487E4();
  return sub_190A48808();
}

uint64_t sub_1909ED86C()
{
  return sub_190A487E4();
}

uint64_t sub_1909ED894()
{
  sub_190A487C0();
  sub_190A487E4();
  return sub_190A48808();
}

WidgetKit::ActionAuthenticationPolicy_optional sub_1909ED8D4(Swift::Int32 *a1)
{
  return ActionAuthenticationPolicy.init(rawValue:)(*a1);
}

void sub_1909ED8DC(_DWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

void ControlAction.Storage.hash(into:)()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  if (*v0)
  {
    sub_190A487CC();
    v2 = v1;
    sub_190A48100();

  }
  else
  {
    sub_190A487CC();
  }
}

uint64_t ControlAction.Storage.hashValue.getter()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_190A487C0();
  sub_190A487CC();
  if (v1)
  {
    v2 = v1;
    sub_190A48100();

  }
  return sub_190A48808();
}

uint64_t sub_1909ED9CC()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_190A487C0();
  sub_190A487CC();
  if (v1)
  {
    v2 = v1;
    sub_190A48100();

  }
  return sub_190A48808();
}

void sub_1909EDA34()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  if (*v0)
  {
    sub_190A487CC();
    v2 = v1;
    sub_190A48100();

  }
  else
  {
    sub_190A487CC();
  }
}

uint64_t sub_1909EDAB0()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_190A487C0();
  sub_190A487CC();
  if (v1)
  {
    v2 = v1;
    sub_190A48100();

  }
  return sub_190A48808();
}

id ControlAction.storage.getter@<X0>(void **a1@<X8>)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *a1 = *v1;
  return v2;
}

void ControlAction.storage.setter(void **a1)
{
  id *v1;
  void *v2;

  v2 = *a1;

  *v1 = v2;
}

uint64_t (*ControlAction.storage.modify())()
{
  return nullsub_1;
}

void static ControlAction.legacyAction<A>(_:)(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t ControlAction.init(intentReference:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t ControlAction.init<A, B>(_:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  void *v21;
  id v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t result;
  char *v25;
  char *v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;

  v27 = a5;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v10);
  v26 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v26 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v19((char *)&v26 - v17, a1, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, a3);
  sub_190A45D60();
  sub_1908AB890(0, (unint64_t *)&qword_1EE1EA408);
  v21 = (void *)sub_1909EEA28();
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D10070]), sel_initWithIntent_, v21);

  if (v22)
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, a3);
    v23 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v23(a1, a4);
    result = ((uint64_t (*)(char *, uint64_t))v23)(v18, a4);
    *v27 = v22;
  }
  else
  {
    v28 = 0;
    v29 = 0xE000000000000000;
    sub_190A48298();
    swift_bridgeObjectRelease();
    v28 = 0xD000000000000025;
    v29 = 0x8000000190A64DB0;
    v25 = v26;
    v19(v26, (uint64_t)v18, a4);
    swift_getDynamicType();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v25, a4);
    sub_190A48880();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    result = sub_190A48448();
    __break(1u);
  }
  return result;
}

void ControlAction.authenticationPolicy.getter(char *a1@<X8>)
{
  id *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  char v10;

  if (*v1)
  {
    v3 = *v1;
    v4 = objc_msgSend(v3, sel_intent);
    objc_opt_self();
    v5 = (void *)swift_dynamicCastObjCClass();

    if (!v5)
  }
  else
  {
    v3 = 0;
    v5 = 0;
  }
  v6 = objc_msgSend(v5, sel_linkAction);

  if (!v6)
    goto LABEL_11;
  v7 = objc_msgSend(v6, sel_authenticationPolicyAllowingImplicit_, 0);
  if (!v7)
  {

LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, sel_integerValue);

  if (v9)
    v10 = 2;
  else
    v10 = 1;
LABEL_12:
  *a1 = v10;
}

id ControlAction.lnAction.getter()
{
  id *v0;
  id v1;
  id v2;
  void *v3;
  id v4;

  if (*v0)
  {
    v1 = *v0;
    v2 = objc_msgSend(v1, sel_intent);
    objc_opt_self();
    v3 = (void *)swift_dynamicCastObjCClass();

    if (!v3)
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(v3, sel_linkAction);

  return v4;
}

void LNAction.authenticationPolicy.getter(char *a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  char v6;

  v3 = objc_msgSend(v1, sel_authenticationPolicyAllowingImplicit_, 0);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_integerValue);

    if (v5)
      v6 = 2;
    else
      v6 = 1;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
}

void *ControlAction.inIntent.getter()
{
  void **v0;
  void *result;
  id v2;

  result = *v0;
  if (*v0)
  {
    v2 = objc_msgSend(result, sel_intent);
    objc_opt_self();
    result = (void *)swift_dynamicCastObjCClass();
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

void ControlAction.hash(into:)()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  if (*v0)
  {
    sub_190A487CC();
    v2 = v1;
    sub_190A48100();

  }
  else
  {
    sub_190A487CC();
  }
}

uint64_t ControlAction.hashValue.getter()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_190A487C0();
  sub_190A487CC();
  if (v1)
  {
    v2 = v1;
    sub_190A48100();

  }
  return sub_190A48808();
}

uint64_t ControlAction.debugDescription.getter()
{
  id *v0;
  id v1;
  id v2;

  if (!*v0)
    return 0xD00000000000001ALL;
  v1 = *v0;
  sub_190A48298();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v1, sel_description);
  sub_190A47ADC();

  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();

  return 0x2E6C6F72746E6F43;
}

uint64_t sub_1909EE224(char *a1, char *a2)
{
  return sub_190A27A94(*a1, *a2);
}

uint64_t sub_1909EE230()
{
  sub_190A487C0();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_1909EE2AC()
{
  sub_190A47B18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1909EE304()
{
  sub_190A487C0();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_1909EE37C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_190A484F0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1909EE3D8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x656761726F7473;
  if (*v1)
    v2 = 0x746E65746E69;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1909EE414()
{
  _BYTE *v0;

  if (*v0)
    return 0x746E65746E69;
  else
    return 0x656761726F7473;
}

uint64_t sub_1909EE44C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_190A484F0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1909EE4AC()
{
  sub_1909EECE4();
  return sub_190A48868();
}

uint64_t sub_1909EE4D4()
{
  sub_1909EECE4();
  return sub_190A48874();
}

uint64_t ControlAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[2];
  char v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB1C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909EECE4();
  sub_190A48838();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v14[0]) = 0;
  v9 = sub_190A48568();
  if (v9 == 1)
  {
    v15 = 1;
    sub_19091BF34();
    sub_190A48580();
    v10 = v14[0];
    v11 = v14[1];
    sub_1908AB890(0, &qword_1EE1EB1C0);
    v12 = sub_190A47F8C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1908B53FC(v10, v11);
LABEL_6:
    *a2 = v12;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  if (!v9)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v12 = 0;
    goto LABEL_6;
  }
  result = sub_190A48448();
  __break(1u);
  return result;
}

void ControlAction.encode(to:)(_QWORD *a1)
{
  void **v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD v13[2];
  char v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA418);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909EECE4();
  sub_190A48850();
  if (v8)
  {
    LOBYTE(v13[0]) = 0;
    v9 = v8;
    sub_190A48628();
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

      return;
    }
    sub_1908AB890(0, &qword_1EE1EB1C0);
    v10 = sub_190A47F80();
    v12 = v11;
    v13[0] = v10;
    v13[1] = v11;
    v14 = 1;
    sub_19091C084();
    sub_190A48640();

    sub_1908B53FC(v10, v12);
  }
  else
  {
    LOBYTE(v13[0]) = 0;
    sub_190A48628();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1909EE8D8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ControlAction.init(from:)(a1, a2);
}

void sub_1909EE8EC(_QWORD *a1)
{
  ControlAction.encode(to:)(a1);
}

BOOL _s9WidgetKit13ControlActionV7StorageO2eeoiySbAE_AEtFZ_0(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      sub_1908AB890(0, (unint64_t *)&qword_1ECF6C5E0);
      v4 = v3;
      v5 = v2;
      v6 = sub_190A480F4();

      return v6 & 1;
    }
    return 0;
  }
  return !v3;
}

uint64_t _s9WidgetKit13ControlActionV2eeoiySbAC_ACtFZ_0(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  char v8;

  v2 = *a1;
  v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      sub_1908AB890(0, (unint64_t *)&qword_1ECF6C5E0);
      v4 = v2;
      v5 = v3;
      v6 = v4;
      v7 = v5;
      v8 = sub_190A480F4();

      if ((v8 & 1) != 0)
        return 1;
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1909EEA28()
{
  id v0;
  id v1;
  id v2;
  uint64_t result;
  void *v4;

  sub_190A45D3C();
  sub_1908AB890(0, (unint64_t *)&qword_1EE1EB978);
  if (swift_dynamicCast()
    && (sub_190A45CDC(), sub_1908AB890(0, &qword_1EE1EA410), swift_dynamicCast()))
  {
    v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v1 = objc_msgSend(v0, sel_bundleIdentifier);

    if (v1)
    {
      v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithAppBundleIdentifier_linkAction_linkActionMetadata_, v1, v4, v4);

      return (uint64_t)v2;
    }
  }
  else
  {
    sub_190A48298();
    swift_bridgeObjectRelease();
    sub_190A48880();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
  }
  result = sub_190A48448();
  __break(1u);
  return result;
}

unint64_t sub_1909EECE4()
{
  unint64_t result;

  result = qword_1EE1EB860;
  if (!qword_1EE1EB860)
  {
    result = MEMORY[0x19401429C](&unk_190A59DD4, &type metadata for ControlAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EB860);
  }
  return result;
}

unint64_t sub_1909EED2C()
{
  unint64_t result;

  result = qword_1EE1EE660;
  if (!qword_1EE1EE660)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ActionAuthenticationPolicy, &type metadata for ActionAuthenticationPolicy);
    atomic_store(result, (unint64_t *)&qword_1EE1EE660);
  }
  return result;
}

unint64_t sub_1909EED74()
{
  unint64_t result;

  result = qword_1EE1EE668;
  if (!qword_1EE1EE668)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ControlAction.Storage, &type metadata for ControlAction.Storage);
    atomic_store(result, (unint64_t *)&qword_1EE1EE668);
  }
  return result;
}

unint64_t sub_1909EEDBC()
{
  unint64_t result;

  result = qword_1EE1EE670;
  if (!qword_1EE1EE670)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ControlAction, &type metadata for ControlAction);
    atomic_store(result, (unint64_t *)&qword_1EE1EE670);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActionAuthenticationPolicy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1909EEE4C + 4 * byte_190A59A85[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1909EEE80 + 4 * byte_190A59A80[v4]))();
}

uint64_t sub_1909EEE80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909EEE88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909EEE90);
  return result;
}

uint64_t sub_1909EEE9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909EEEA4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1909EEEA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909EEEB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionAuthenticationPolicy()
{
  return &type metadata for ActionAuthenticationPolicy;
}

void **assignWithCopy for ControlAction(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

void **assignWithTake for ControlAction(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for ControlAction()
{
  return &type metadata for ControlAction;
}

void **initializeBufferWithCopyOfBuffer for ControlAction.Storage(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for ControlAction.Storage(id *a1)
{

}

void **assignWithCopy for ControlAction.Storage(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

void **assignWithTake for ControlAction.Storage(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for ControlAction.Storage()
{
  return &type metadata for ControlAction.Storage;
}

uint64_t storeEnumTagSinglePayload for ControlAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1909EF034 + 4 * byte_190A59A8F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1909EF068 + 4 * byte_190A59A8A[v4]))();
}

uint64_t sub_1909EF068(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909EF070(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909EF078);
  return result;
}

uint64_t sub_1909EF084(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909EF08CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1909EF090(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909EF098(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlAction.CodingKeys()
{
  return &type metadata for ControlAction.CodingKeys;
}

unint64_t sub_1909EF0B8()
{
  unint64_t result;

  result = qword_1EE1EE678;
  if (!qword_1EE1EE678)
  {
    result = MEMORY[0x19401429C](&unk_190A59DAC, &type metadata for ControlAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE678);
  }
  return result;
}

unint64_t sub_1909EF100()
{
  unint64_t result;

  result = qword_1EE1EB870;
  if (!qword_1EE1EB870)
  {
    result = MEMORY[0x19401429C](&unk_190A59CE4, &type metadata for ControlAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EB870);
  }
  return result;
}

unint64_t sub_1909EF148()
{
  unint64_t result;

  result = qword_1EE1EB868;
  if (!qword_1EE1EB868)
  {
    result = MEMORY[0x19401429C](&unk_190A59D0C, &type metadata for ControlAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EB868);
  }
  return result;
}

uint64_t sub_1909EF194()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D778 = result;
  return result;
}

uint64_t sub_1909EF1B8()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B540);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D760 = v0;
  *(_QWORD *)algn_1ECF6D768 = 0xD000000000000013;
  qword_1ECF6D770 = 0x8000000190A64EA0;
  return result;
}

ValueMetadata *type metadata accessor for ContentSizeCategoryKey()
{
  return &type metadata for ContentSizeCategoryKey;
}

unint64_t sub_1909EF240()
{
  unint64_t result;

  result = qword_1ECF6B6B0;
  if (!qword_1ECF6B6B0)
  {
    result = MEMORY[0x19401429C](&unk_190A59EE4, &type metadata for ContentSizeCategoryKey.CodableContentSizeCategory);
    atomic_store(result, (unint64_t *)&qword_1ECF6B6B0);
  }
  return result;
}

unint64_t sub_1909EF288()
{
  unint64_t result;

  result = qword_1ECF6B6C8;
  if (!qword_1ECF6B6C8)
  {
    result = MEMORY[0x19401429C](&unk_190A59EBC, &type metadata for ContentSizeCategoryKey.CodableContentSizeCategory);
    atomic_store(result, (unint64_t *)&qword_1ECF6B6C8);
  }
  return result;
}

unint64_t sub_1909EF2D0()
{
  unint64_t result;

  result = qword_1ECF6B6A8;
  if (!qword_1ECF6B6A8)
  {
    result = MEMORY[0x19401429C](&unk_190A59E94, &type metadata for ContentSizeCategoryKey.CodableContentSizeCategory);
    atomic_store(result, (unint64_t *)&qword_1ECF6B6A8);
  }
  return result;
}

uint64_t sub_1909EF314(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1909EF350 + 4 * byte_190A59E30[a1]))(0x616D536172747865, 0xEA00000000006C6CLL);
}

uint64_t sub_1909EF350()
{
  return 0x6C6C616D73;
}

uint64_t sub_1909EF364()
{
  return 0x6D756964656DLL;
}

uint64_t sub_1909EF378()
{
  return 0x656772616CLL;
}

uint64_t sub_1909EF38C()
{
  return 0x72614C6172747865;
}

uint64_t sub_1909EF3A8()
{
  return 0x7478456172747865;
}

unint64_t sub_1909EF3CC()
{
  return 0xD000000000000014;
}

uint64_t sub_1909EF46C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1909EF314(*a1);
  v5 = v4;
  if (v3 == sub_1909EF314(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1909EF4F4()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_190A487C0();
  sub_1909EF314(v1);
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_1909EF554()
{
  unsigned __int8 *v0;

  sub_1909EF314(*v0);
  sub_190A47B18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1909EF594()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_190A487C0();
  sub_1909EF314(v1);
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_1909EF5F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1909F0014();
  *a1 = result;
  return result;
}

uint64_t sub_1909EF61C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1909EF314(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1909EF644()
{
  sub_1909EFB60();
  return sub_190A47C2C();
}

uint64_t sub_1909EF6A0()
{
  sub_1909EFB60();
  return sub_190A47C14();
}

uint64_t sub_1909EF6EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1909EF314(*a1);
  v5 = v4;
  if (v3 == sub_1909EF314(v2) && v5 == v6)
    v8 = 0;
  else
    v8 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1909EF774(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  char v9;

  v2 = *a1;
  v3 = sub_1909EF314(*a2);
  v5 = v4;
  if (v3 == sub_1909EF314(v2) && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
    v9 = 1;
  }
  else
  {
    v8 = sub_190A486DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v8 ^ 1;
  }
  return v9 & 1;
}

uint64_t sub_1909EF80C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  char v9;

  v2 = *a2;
  v3 = sub_1909EF314(*a1);
  v5 = v4;
  if (v3 == sub_1909EF314(v2) && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
    v9 = 1;
  }
  else
  {
    v8 = sub_190A486DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v8 ^ 1;
  }
  return v9 & 1;
}

uint64_t sub_1909EF8A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a1;
  v3 = sub_1909EF314(*a2);
  v5 = v4;
  if (v3 == sub_1909EF314(v2) && v5 == v6)
    v8 = 0;
  else
    v8 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1909EF92C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1909EF960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *MEMORY[0x1E0CDB330];
  v2 = sub_190A46EAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
}

uint64_t sub_1909EFA24()
{
  if (qword_1ECF6B6D8 != -1)
    swift_once();
  return swift_retain();
}

void sub_1909EFA64(char *a1)
{
  sub_1909EF92C(*a1);
}

uint64_t sub_1909EFA7C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1909EFBA4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1909EFAA4()
{
  uint64_t v0;

  if (qword_1ECF6B4E0 != -1)
    swift_once();
  v0 = qword_1ECF6D760;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1909EFB1C()
{
  unint64_t result;

  result = qword_1ECF6B6B8;
  if (!qword_1ECF6B6B8)
  {
    result = MEMORY[0x19401429C](&unk_190A59F2C, &type metadata for ContentSizeCategoryKey.CodableContentSizeCategory);
    atomic_store(result, (unint64_t *)&qword_1ECF6B6B8);
  }
  return result;
}

unint64_t sub_1909EFB60()
{
  unint64_t result;

  result = qword_1ECF6B6C0;
  if (!qword_1ECF6B6C0)
  {
    result = MEMORY[0x19401429C](&unk_190A59FEC, &type metadata for ContentSizeCategoryKey.CodableContentSizeCategory);
    atomic_store(result, (unint64_t *)&qword_1ECF6B6C0);
  }
  return result;
}

uint64_t sub_1909EFBA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *, uint64_t, uint64_t);
  int v7;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];
  uint64_t v15[6];

  v2 = sub_190A46EAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v6(v5, a1, v2);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v7 == *MEMORY[0x1E0CDB330])
    return 0;
  if (v7 == *MEMORY[0x1E0CDB368])
    return 1;
  if (v7 == *MEMORY[0x1E0CDB370])
    return 2;
  if (v7 == *MEMORY[0x1E0CDB358])
    return 3;
  if (v7 == *MEMORY[0x1E0CDB328])
    return 4;
  if (v7 == *MEMORY[0x1E0CDB338])
    return 5;
  if (v7 == *MEMORY[0x1E0CDB300])
    return 6;
  if (v7 == *MEMORY[0x1E0CDB348])
    return 7;
  if (v7 == *MEMORY[0x1E0CDB340])
    return 8;
  if (v7 == *MEMORY[0x1E0CDB350])
    return 9;
  if (v7 == *MEMORY[0x1E0CDB318])
    return 10;
  if (v7 == *MEMORY[0x1E0CDB320])
    return 11;
  v15[3] = v2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  v6((char *)boxed_opaque_existential_1, a1, v2);
  v10 = sub_190A48334();
  swift_allocError();
  v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1ED3B8);
  sub_1908B3694((uint64_t)v15, v12);
  v14[0] = sub_190A482C8();
  v14[1] = v13;
  sub_190A47B3C();
  v15[5] = 66;
  sub_190A4867C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A48304();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v12, *MEMORY[0x1E0DEC4B0], v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t getEnumTagSinglePayload for ContentSizeCategoryKey.CodableContentSizeCategory(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentSizeCategoryKey.CodableContentSizeCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1909EFF94 + 4 * byte_190A59E4D[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1909EFFC8 + 4 * byte_190A59E48[v4]))();
}

uint64_t sub_1909EFFC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909EFFD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909EFFD8);
  return result;
}

uint64_t sub_1909EFFE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909EFFECLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1909EFFF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909EFFF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentSizeCategoryKey.CodableContentSizeCategory()
{
  return &type metadata for ContentSizeCategoryKey.CodableContentSizeCategory;
}

uint64_t sub_1909F0014()
{
  unint64_t v0;

  v0 = sub_190A484F0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC)
    return 12;
  else
    return v0;
}

void static ControlSize._1x1.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

BOOL static ControlSize.Storage.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ControlSize.Storage.hash(into:)()
{
  return sub_190A487CC();
}

uint64_t sub_1909F00A0()
{
  char *v0;

  return *(_QWORD *)&a1x1_0[8 * *v0];
}

uint64_t sub_1909F00B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1909F16C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1909F00DC()
{
  sub_1909F0558();
  return sub_190A48868();
}

uint64_t sub_1909F0104()
{
  sub_1909F0558();
  return sub_190A48874();
}

uint64_t sub_1909F012C()
{
  sub_1909F0668();
  return sub_190A48868();
}

uint64_t sub_1909F0154()
{
  sub_1909F0668();
  return sub_190A48874();
}

uint64_t sub_1909F017C()
{
  sub_1909F0624();
  return sub_190A48868();
}

uint64_t sub_1909F01A4()
{
  sub_1909F0624();
  return sub_190A48874();
}

uint64_t sub_1909F01CC()
{
  sub_1909F05E0();
  return sub_190A48868();
}

uint64_t sub_1909F01F4()
{
  sub_1909F05E0();
  return sub_190A48874();
}

uint64_t sub_1909F021C()
{
  sub_1909F059C();
  return sub_190A48868();
}

uint64_t sub_1909F0244()
{
  sub_1909F059C();
  return sub_190A48874();
}

void ControlSize.Storage.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE680);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x1E0C80A78](v4);
  v18 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE688);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x1E0C80A78](v6);
  v15 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE690);
  v13 = *(_QWORD *)(v8 - 8);
  v14 = v8;
  MEMORY[0x1E0C80A78](v8);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE698);
  MEMORY[0x1E0C80A78](v12);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE6A0);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v10 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909F0558();
  sub_190A48850();
  __asm { BR              X9 }
}

uint64_t sub_1909F0424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_1909F0668();
  sub_190A485C8();
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v2, *(_QWORD *)(v4 - 168));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v0);
}

unint64_t sub_1909F0558()
{
  unint64_t result;

  result = qword_1EE1EE6A8;
  if (!qword_1EE1EE6A8)
  {
    result = MEMORY[0x19401429C](&unk_190A5A69C, &type metadata for ControlSize.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE6A8);
  }
  return result;
}

unint64_t sub_1909F059C()
{
  unint64_t result;

  result = qword_1EE1EE6B0;
  if (!qword_1EE1EE6B0)
  {
    result = MEMORY[0x19401429C](&unk_190A5A64C, &type metadata for ControlSize.Storage._2x2CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE6B0);
  }
  return result;
}

unint64_t sub_1909F05E0()
{
  unint64_t result;

  result = qword_1EE1EE6B8;
  if (!qword_1EE1EE6B8)
  {
    result = MEMORY[0x19401429C](&unk_190A5A5FC, &type metadata for ControlSize.Storage._2x1CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE6B8);
  }
  return result;
}

unint64_t sub_1909F0624()
{
  unint64_t result;

  result = qword_1EE1EE6C0;
  if (!qword_1EE1EE6C0)
  {
    result = MEMORY[0x19401429C](&unk_190A5A5AC, &type metadata for ControlSize.Storage._1x2CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE6C0);
  }
  return result;
}

unint64_t sub_1909F0668()
{
  unint64_t result;

  result = qword_1EE1EE6C8;
  if (!qword_1EE1EE6C8)
  {
    result = MEMORY[0x19401429C](&unk_190A5A55C, &type metadata for ControlSize.Storage._1x1CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE6C8);
  }
  return result;
}

uint64_t ControlSize.Storage.hashValue.getter()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t ControlSize.Storage.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v21[7];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE6D0);
  v21[5] = *(_QWORD *)(v3 - 8);
  v21[6] = v3;
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE6D8);
  v21[4] = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE6E0);
  v21[2] = *(_QWORD *)(v6 - 8);
  v21[3] = v6;
  MEMORY[0x1E0C80A78](v6);
  v24 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE6E8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE6F0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1909F0558();
  v15 = v28;
  sub_190A48838();
  if (!v15)
  {
    v21[0] = v9;
    v21[1] = v8;
    v28 = v11;
    v16 = sub_190A485A4();
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X9 }
    v17 = sub_190A4831C();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90);
    *v19 = &type metadata for ControlSize.Storage;
    sub_190A48508();
    sub_190A48304();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x1E0DEC450], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_1909F0B74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ControlSize.Storage.init(from:)(a1, a2);
}

void sub_1909F0B88(_QWORD *a1)
{
  ControlSize.Storage.encode(to:)(a1);
}

void ControlSize.storage.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void static ControlSize._1x2.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static ControlSize._2x1.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void static ControlSize._2x2.getter(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

BOOL static ControlSize.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ControlSize.hash(into:)()
{
  return sub_190A487CC();
}

uint64_t sub_1909F0C08()
{
  sub_1909F0D54();
  return sub_190A48868();
}

uint64_t sub_1909F0C30()
{
  sub_1909F0D54();
  return sub_190A48874();
}

uint64_t ControlSize.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;
  char v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE6F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909F0D54();
  sub_190A48850();
  v10 = v7;
  sub_1909F0D98();
  sub_190A48640();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1909F0D54()
{
  unint64_t result;

  result = qword_1EE1EE700;
  if (!qword_1EE1EE700)
  {
    result = MEMORY[0x19401429C](&unk_190A5A50C, &type metadata for ControlSize.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE700);
  }
  return result;
}

unint64_t sub_1909F0D98()
{
  unint64_t result;

  result = qword_1EE1EE708;
  if (!qword_1EE1EE708)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ControlSize.Storage, &type metadata for ControlSize.Storage);
    atomic_store(result, (unint64_t *)&qword_1EE1EE708);
  }
  return result;
}

uint64_t ControlSize.hashValue.getter()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t ControlSize.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE710);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909F0D54();
  sub_190A48838();
  if (!v2)
  {
    sub_1909F0F64();
    sub_190A48580();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1909F0F3C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ControlSize.init(from:)(a1, a2);
}

uint64_t sub_1909F0F50(_QWORD *a1)
{
  return ControlSize.encode(to:)(a1);
}

unint64_t sub_1909F0F64()
{
  unint64_t result;

  result = qword_1EE1EE718;
  if (!qword_1EE1EE718)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ControlSize.Storage, &type metadata for ControlSize.Storage);
    atomic_store(result, (unint64_t *)&qword_1EE1EE718);
  }
  return result;
}

uint64_t ControlSize.debugDescription.getter()
{
  _QWORD v1[2];

  strcpy((char *)v1, "ControlSize.");
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  return v1[0];
}

unint64_t sub_1909F1014()
{
  unint64_t result;

  result = qword_1EE1EE720;
  if (!qword_1EE1EE720)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ControlSize.Storage, &type metadata for ControlSize.Storage);
    atomic_store(result, (unint64_t *)&qword_1EE1EE720);
  }
  return result;
}

unint64_t sub_1909F105C()
{
  unint64_t result;

  result = qword_1EE1EE728;
  if (!qword_1EE1EE728)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ControlSize, &type metadata for ControlSize);
    atomic_store(result, (unint64_t *)&qword_1EE1EE728);
  }
  return result;
}

uint64_t sub_1909F10A0()
{
  _QWORD v1[2];

  strcpy((char *)v1, "ControlSize.");
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  return v1[0];
}

ValueMetadata *type metadata accessor for ControlSize()
{
  return &type metadata for ControlSize;
}

ValueMetadata *type metadata accessor for ControlSize.Storage()
{
  return &type metadata for ControlSize.Storage;
}

uint64_t storeEnumTagSinglePayload for ControlSize.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1909F116C + 4 * byte_190A5A030[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1909F118C + 4 * byte_190A5A035[v4]))();
}

_BYTE *sub_1909F116C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1909F118C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1909F1194(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1909F119C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1909F11A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1909F11AC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ControlSize.CodingKeys()
{
  return &type metadata for ControlSize.CodingKeys;
}

uint64_t _s9WidgetKit11ControlSizeV7StorageOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1909F1214 + 4 * byte_190A5A03F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1909F1248 + 4 * byte_190A5A03A[v4]))();
}

uint64_t sub_1909F1248(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909F1250(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909F1258);
  return result;
}

uint64_t sub_1909F1264(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909F126CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1909F1270(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909F1278(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlSize.Storage.CodingKeys()
{
  return &type metadata for ControlSize.Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for ControlSize.Storage._1x1CodingKeys()
{
  return &type metadata for ControlSize.Storage._1x1CodingKeys;
}

ValueMetadata *type metadata accessor for ControlSize.Storage._1x2CodingKeys()
{
  return &type metadata for ControlSize.Storage._1x2CodingKeys;
}

ValueMetadata *type metadata accessor for ControlSize.Storage._2x1CodingKeys()
{
  return &type metadata for ControlSize.Storage._2x1CodingKeys;
}

ValueMetadata *type metadata accessor for ControlSize.Storage._2x2CodingKeys()
{
  return &type metadata for ControlSize.Storage._2x2CodingKeys;
}

unint64_t sub_1909F12D8()
{
  unint64_t result;

  result = qword_1EE1EE730;
  if (!qword_1EE1EE730)
  {
    result = MEMORY[0x19401429C](&unk_190A5A42C, &type metadata for ControlSize.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE730);
  }
  return result;
}

unint64_t sub_1909F1320()
{
  unint64_t result;

  result = qword_1EE1EE738;
  if (!qword_1EE1EE738)
  {
    result = MEMORY[0x19401429C](&unk_190A5A4E4, &type metadata for ControlSize.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE738);
  }
  return result;
}

unint64_t sub_1909F1368()
{
  unint64_t result;

  result = qword_1EE1EE740;
  if (!qword_1EE1EE740)
  {
    result = MEMORY[0x19401429C](&unk_190A5A454, &type metadata for ControlSize.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE740);
  }
  return result;
}

unint64_t sub_1909F13B0()
{
  unint64_t result;

  result = qword_1EE1EE748;
  if (!qword_1EE1EE748)
  {
    result = MEMORY[0x19401429C](&unk_190A5A47C, &type metadata for ControlSize.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE748);
  }
  return result;
}

unint64_t sub_1909F13F8()
{
  unint64_t result;

  result = qword_1EE1EE750;
  if (!qword_1EE1EE750)
  {
    result = MEMORY[0x19401429C](&unk_190A5A34C, &type metadata for ControlSize.Storage._1x1CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE750);
  }
  return result;
}

unint64_t sub_1909F1440()
{
  unint64_t result;

  result = qword_1EE1EE758;
  if (!qword_1EE1EE758)
  {
    result = MEMORY[0x19401429C](&unk_190A5A374, &type metadata for ControlSize.Storage._1x1CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE758);
  }
  return result;
}

unint64_t sub_1909F1488()
{
  unint64_t result;

  result = qword_1EE1EE760;
  if (!qword_1EE1EE760)
  {
    result = MEMORY[0x19401429C](&unk_190A5A2FC, &type metadata for ControlSize.Storage._1x2CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE760);
  }
  return result;
}

unint64_t sub_1909F14D0()
{
  unint64_t result;

  result = qword_1EE1EE768;
  if (!qword_1EE1EE768)
  {
    result = MEMORY[0x19401429C](&unk_190A5A324, &type metadata for ControlSize.Storage._1x2CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE768);
  }
  return result;
}

unint64_t sub_1909F1518()
{
  unint64_t result;

  result = qword_1EE1EE770;
  if (!qword_1EE1EE770)
  {
    result = MEMORY[0x19401429C](&unk_190A5A2AC, &type metadata for ControlSize.Storage._2x1CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE770);
  }
  return result;
}

unint64_t sub_1909F1560()
{
  unint64_t result;

  result = qword_1EE1EE778;
  if (!qword_1EE1EE778)
  {
    result = MEMORY[0x19401429C](&unk_190A5A2D4, &type metadata for ControlSize.Storage._2x1CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE778);
  }
  return result;
}

unint64_t sub_1909F15A8()
{
  unint64_t result;

  result = qword_1EE1EE780;
  if (!qword_1EE1EE780)
  {
    result = MEMORY[0x19401429C](&unk_190A5A25C, &type metadata for ControlSize.Storage._2x2CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE780);
  }
  return result;
}

unint64_t sub_1909F15F0()
{
  unint64_t result;

  result = qword_1EE1EE788;
  if (!qword_1EE1EE788)
  {
    result = MEMORY[0x19401429C](&unk_190A5A284, &type metadata for ControlSize.Storage._2x2CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE788);
  }
  return result;
}

unint64_t sub_1909F1638()
{
  unint64_t result;

  result = qword_1EE1EE790;
  if (!qword_1EE1EE790)
  {
    result = MEMORY[0x19401429C](&unk_190A5A39C, &type metadata for ControlSize.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE790);
  }
  return result;
}

unint64_t sub_1909F1680()
{
  unint64_t result;

  result = qword_1EE1EE798;
  if (!qword_1EE1EE798)
  {
    result = MEMORY[0x19401429C](&unk_190A5A3C4, &type metadata for ControlSize.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE798);
  }
  return result;
}

uint64_t sub_1909F16C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 829960543 && a2 == 0xE400000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 846737759 && a2 == 0xE400000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 829960799 && a2 == 0xE400000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 846738015 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1909F182C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1909F1834(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1909F183C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_1909F1844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_1909F184C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

ValueMetadata *type metadata accessor for WidgetDescriptorKey()
{
  return &type metadata for WidgetDescriptorKey;
}

uint64_t sub_1909F1864(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    type metadata accessor for ViewSource(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v14 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v14;
      *(_QWORD *)(a1 + 16) = a2[2];
      v15 = a2[5];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
      *(_QWORD *)(a1 + 40) = v15;
      v16 = *((_BYTE *)a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v16 & 1) != 0)
      {
        v17 = a2[7];
        *(_QWORD *)(a1 + 48) = a2[6];
        *(_QWORD *)(a1 + 56) = v17;
        swift_retain();
      }
      else
      {
        v22 = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(a1 + 72) = v22;
        (**(void (***)(uint64_t, uint64_t))(v22 - 8))(a1 + 48, (uint64_t)(a2 + 6));
      }
      *(_BYTE *)(a1 + 88) = v16;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = sub_190A46240();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0) + 48);
      v10 = a1 + v9;
      v11 = (uint64_t)a2 + v9;
      *(_QWORD *)v10 = *(_QWORD *)v11;
      v12 = *(_QWORD *)(v11 + 24);
      *(_OWORD *)(v10 + 8) = *(_OWORD *)(v11 + 8);
      *(_QWORD *)(v10 + 24) = v12;
      swift_retain();
      swift_retain();
    }
    else
    {
      v18 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v18;
      v19 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v19;
      v20 = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v20)
      {
        v21 = a2[5];
        *(_QWORD *)(a1 + 32) = v20;
        *(_QWORD *)(a1 + 40) = v21;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      }
      v23 = a2[7];
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v24 = a3[5];
    v25 = a3[6];
    v26 = (_QWORD *)(a1 + v24);
    v27 = (uint64_t *)((char *)a2 + v24);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = (_QWORD *)(a1 + v25);
    v30 = (uint64_t *)((char *)a2 + v25);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = a3[8];
    *(_QWORD *)(a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(_QWORD *)(a1 + v32) = *(uint64_t *)((char *)a2 + v32);
    v33 = a3[10];
    *(_QWORD *)(a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(_QWORD *)(a1 + v33) = *(uint64_t *)((char *)a2 + v33);
    v34 = a3[12];
    *(_QWORD *)(a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    v35 = (_QWORD *)(a1 + v34);
    v36 = (uint64_t *)((char *)a2 + v34);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = a3[14];
    *(_BYTE *)(a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    *(_BYTE *)(a1 + v38) = *((_BYTE *)a2 + v38);
    v39 = a3[16];
    *(_BYTE *)(a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    *(_BYTE *)(a1 + v39) = *((_BYTE *)a2 + v39);
    v40 = a3[18];
    *(_BYTE *)(a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
    *(_QWORD *)(a1 + v40) = *(uint64_t *)((char *)a2 + v40);
    v41 = a3[20];
    *(_BYTE *)(a1 + a3[19]) = *((_BYTE *)a2 + a3[19]);
    *(_BYTE *)(a1 + v41) = *((_BYTE *)a2 + v41);
    v42 = a3[22];
    *(_BYTE *)(a1 + a3[21]) = *((_BYTE *)a2 + a3[21]);
    *(_BYTE *)(a1 + v42) = *((_BYTE *)a2 + v42);
    v43 = a3[23];
    v44 = a3[24];
    v45 = (_QWORD *)(a1 + v43);
    v46 = (uint64_t *)((char *)a2 + v43);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    *(_BYTE *)(a1 + v44) = *((_BYTE *)a2 + v44);
    v48 = a3[26];
    *(_BYTE *)(a1 + a3[25]) = *((_BYTE *)a2 + a3[25]);
    *(_BYTE *)(a1 + v48) = *((_BYTE *)a2 + v48);
    v49 = a3[28];
    *(_BYTE *)(a1 + a3[27]) = *((_BYTE *)a2 + a3[27]);
    *(_BYTE *)(a1 + v49) = *((_BYTE *)a2 + v49);
    v50 = a3[30];
    *(_BYTE *)(a1 + a3[29]) = *((_BYTE *)a2 + a3[29]);
    *(_BYTE *)(a1 + v50) = *((_BYTE *)a2 + v50);
    v51 = a3[32];
    *(_BYTE *)(a1 + a3[31]) = *((_BYTE *)a2 + a3[31]);
    *(_OWORD *)(a1 + v51) = *(_OWORD *)((char *)a2 + v51);
    v52 = a3[34];
    *(_QWORD *)(a1 + a3[33]) = *(uint64_t *)((char *)a2 + a3[33]);
    v53 = (_QWORD *)(a1 + v52);
    v54 = (uint64_t *)((char *)a2 + v52);
    v55 = v54[1];
    *v53 = *v54;
    v53[1] = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1909F1BF0(uint64_t a1, uint64_t a2, int *a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;

  if (a1 != a2)
  {
    sub_19094CD98(a1);
    type metadata accessor for ViewSource(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      v13 = *(_BYTE *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v13 & 1) != 0)
      {
        v14 = *(_QWORD *)(a2 + 56);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = v14;
        swift_retain();
      }
      else
      {
        v17 = *(_QWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 72) = v17;
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1 + 48, a2 + 48);
      }
      *(_BYTE *)(a1 + 88) = v13;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_190A46240();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0) + 48);
      v9 = (_QWORD *)(a1 + v8);
      v10 = (_QWORD *)(a2 + v8);
      v11 = v10[1];
      *v9 = *v10;
      v9[1] = v11;
      v12 = v10[3];
      v9[2] = v10[2];
      v9[3] = v12;
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      v15 = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15)
      {
        v16 = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 32) = v15;
        *(_QWORD *)(a1 + 40) = v16;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      }
      v18 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v19 = a3[5];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[6];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v25 = a3[12];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  v28 = a3[23];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  *(_BYTE *)(a1 + a3[26]) = *(_BYTE *)(a2 + a3[26]);
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  *(_BYTE *)(a1 + a3[28]) = *(_BYTE *)(a2 + a3[28]);
  *(_BYTE *)(a1 + a3[29]) = *(_BYTE *)(a2 + a3[29]);
  *(_BYTE *)(a1 + a3[30]) = *(_BYTE *)(a2 + a3[30]);
  *(_BYTE *)(a1 + a3[31]) = *(_BYTE *)(a2 + a3[31]);
  *(_OWORD *)(a1 + a3[32]) = *(_OWORD *)(a2 + a3[32]);
  *(_QWORD *)(a1 + a3[33]) = *(_QWORD *)(a2 + a3[33]);
  v31 = a3[34];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1909F2008(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for ViewSource(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_190A46240();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0) + 48);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *((_OWORD *)v10 + 1);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v11;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v12 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
  v13 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  v14 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  v15 = a3[12];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  *(_OWORD *)&a1[v15] = *(_OWORD *)&a2[v15];
  v16 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  a1[v16] = a2[v16];
  v17 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  a1[v17] = a2[v17];
  v18 = a3[18];
  a1[a3[17]] = a2[a3[17]];
  *(_QWORD *)&a1[v18] = *(_QWORD *)&a2[v18];
  v19 = a3[20];
  a1[a3[19]] = a2[a3[19]];
  a1[v19] = a2[v19];
  v20 = a3[22];
  a1[a3[21]] = a2[a3[21]];
  a1[v20] = a2[v20];
  v21 = a3[24];
  *(_OWORD *)&a1[a3[23]] = *(_OWORD *)&a2[a3[23]];
  a1[v21] = a2[v21];
  v22 = a3[26];
  a1[a3[25]] = a2[a3[25]];
  a1[v22] = a2[v22];
  v23 = a3[28];
  a1[a3[27]] = a2[a3[27]];
  a1[v23] = a2[v23];
  v24 = a3[30];
  a1[a3[29]] = a2[a3[29]];
  a1[v24] = a2[v24];
  v25 = a3[32];
  a1[a3[31]] = a2[a3[31]];
  *(_OWORD *)&a1[v25] = *(_OWORD *)&a2[v25];
  v26 = a3[34];
  *(_QWORD *)&a1[a3[33]] = *(_QWORD *)&a2[a3[33]];
  *(_OWORD *)&a1[v26] = *(_OWORD *)&a2[v26];
  return a1;
}

char *sub_1909F21EC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;

  if (a1 != a2)
  {
    sub_19094CD98((uint64_t)a1);
    v6 = type metadata accessor for ViewSource(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_190A46240();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0) + 48);
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v11;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v17 = a3[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  v22 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  *(_QWORD *)&a1[v22] = *(_QWORD *)&a2[v22];
  v23 = a3[12];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v27 = *(_QWORD *)v25;
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = v27;
  *((_QWORD *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
  v28 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  a1[v28] = a2[v28];
  v29 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  a1[v29] = a2[v29];
  v30 = a3[18];
  a1[a3[17]] = a2[a3[17]];
  *(_QWORD *)&a1[v30] = *(_QWORD *)&a2[v30];
  swift_bridgeObjectRelease();
  v31 = a3[20];
  a1[a3[19]] = a2[a3[19]];
  a1[v31] = a2[v31];
  v32 = a3[22];
  a1[a3[21]] = a2[a3[21]];
  a1[v32] = a2[v32];
  v33 = a3[23];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v37 = *(_QWORD *)v35;
  v36 = *((_QWORD *)v35 + 1);
  *(_QWORD *)v34 = v37;
  *((_QWORD *)v34 + 1) = v36;
  swift_bridgeObjectRelease();
  v38 = a3[25];
  a1[a3[24]] = a2[a3[24]];
  a1[v38] = a2[v38];
  v39 = a3[27];
  a1[a3[26]] = a2[a3[26]];
  a1[v39] = a2[v39];
  v40 = a3[29];
  a1[a3[28]] = a2[a3[28]];
  a1[v40] = a2[v40];
  v41 = a3[31];
  a1[a3[30]] = a2[a3[30]];
  a1[v41] = a2[v41];
  v42 = a3[33];
  *(_OWORD *)&a1[a3[32]] = *(_OWORD *)&a2[a3[32]];
  *(_QWORD *)&a1[v42] = *(_QWORD *)&a2[v42];
  v43 = a3[34];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v47 = *(_QWORD *)v45;
  v46 = *((_QWORD *)v45 + 1);
  *(_QWORD *)v44 = v47;
  *((_QWORD *)v44 + 1) = v46;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1909F2460()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909F246C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for ViewSource(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1909F24E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909F24F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ViewSource(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t sub_1909F256C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ViewSource(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1909F2650(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v13 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v13;
      *(_QWORD *)(a1 + 16) = a2[2];
      v14 = a2[5];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
      *(_QWORD *)(a1 + 40) = v14;
      v15 = *((_BYTE *)a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v15 & 1) != 0)
      {
        v16 = a2[7];
        *(_QWORD *)(a1 + 48) = a2[6];
        *(_QWORD *)(a1 + 56) = v16;
        swift_retain();
      }
      else
      {
        v21 = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(a1 + 72) = v21;
        (**(void (***)(uint64_t, uint64_t))(v21 - 8))(a1 + 48, (uint64_t)(a2 + 6));
      }
      *(_BYTE *)(a1 + 88) = v15;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_190A46240();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0) + 48);
      v9 = a1 + v8;
      v10 = (uint64_t)a2 + v8;
      *(_QWORD *)v9 = *(_QWORD *)v10;
      v11 = *(_QWORD *)(v10 + 24);
      *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
      *(_QWORD *)(v9 + 24) = v11;
      swift_retain();
      swift_retain();
    }
    else
    {
      v17 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v17;
      v18 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v18;
      v19 = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v19)
      {
        v20 = a2[5];
        *(_QWORD *)(a1 + 32) = v19;
        *(_QWORD *)(a1 + 40) = v20;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      }
      v22 = a2[7];
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1909F2828(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(_BYTE *)(a1 + 88) & 1) == 0)
        return __swift_destroy_boxed_opaque_existential_1(a1 + 48);
      return swift_release();
    case 1:
      v3 = sub_190A46240();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
      swift_release();
      return swift_release();
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 32))
        swift_release();
      return swift_release();
  }
  return result;
}

uint64_t sub_1909F28F8(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 != a2)
  {
    sub_19094CD98(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      v11 = *(_BYTE *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v11 & 1) != 0)
      {
        v12 = *(_QWORD *)(a2 + 56);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = v12;
        swift_retain();
      }
      else
      {
        v15 = *(_QWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 72) = v15;
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 48, a2 + 48);
      }
      *(_BYTE *)(a1 + 88) = v11;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v5 = sub_190A46240();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0) + 48);
      v7 = (_QWORD *)(a1 + v6);
      v8 = (_QWORD *)(a2 + v6);
      v9 = v8[1];
      *v7 = *v8;
      v7[1] = v9;
      v10 = v8[3];
      v7[2] = v8[2];
      v7[3] = v10;
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      v13 = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13)
      {
        v14 = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 32) = v13;
        *(_QWORD *)(a1 + 40) = v14;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      }
      v16 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1909F2AB4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_190A46240();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0) + 48);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = *((_OWORD *)v9 + 1);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v10;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1909F2B60(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;

  if (a1 != a2)
  {
    sub_19094CD98((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_190A46240();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0) + 48);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = *((_OWORD *)v9 + 1);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v10;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1909F2C1C()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  const char *v3;
  char *v4;
  void *v5;

  v3 = "@";
  result = sub_190A46240();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v4 = &v2;
    v5 = &unk_190A5A880;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1909F2CA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  char v15;
  uint64_t result;

  v4 = (int *)type metadata accessor for WidgetDescriptor(0);
  v5 = (_QWORD *)(a2 + v4[5]);
  *v5 = 0;
  v5[1] = 0;
  v6 = (_QWORD *)(a2 + v4[6]);
  *v6 = 0;
  v6[1] = 0;
  v7 = v4[7];
  if (qword_1ECF6D128 != -1)
    swift_once();
  *(_QWORD *)(a2 + v7) = qword_1ECF6D0C0;
  *(_QWORD *)(a2 + v4[8]) = &unk_1E2CC0B78;
  v8 = v4[9];
  v9 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a2 + v8) = sub_190901360(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(a2 + v4[10]) = 0;
  *(_QWORD *)(a2 + v4[11]) = 0;
  v10 = (_QWORD *)(a2 + v4[12]);
  *v10 = 0;
  v10[1] = 0;
  *(_BYTE *)(a2 + v4[13]) = 0;
  *(_BYTE *)(a2 + v4[14]) = 0;
  *(_BYTE *)(a2 + v4[15]) = 0;
  *(_BYTE *)(a2 + v4[16]) = 1;
  *(_BYTE *)(a2 + v4[17]) = 0;
  *(_QWORD *)(a2 + v4[18]) = v9;
  *(_BYTE *)(a2 + v4[20]) = 0;
  *(_BYTE *)(a2 + v4[22]) = 2;
  v11 = (uint64_t *)(a2 + v4[23]);
  swift_bridgeObjectRetain();
  *v11 = sub_1909F3A40();
  v11[1] = v12;
  *(_BYTE *)(a2 + v4[24]) = 0;
  *(_BYTE *)(a2 + v4[25]) = 0;
  *(_BYTE *)(a2 + v4[26]) = 0;
  *(_BYTE *)(a2 + v4[27]) = 0;
  *(_BYTE *)(a2 + v4[28]) = 0;
  *(_BYTE *)(a2 + v4[29]) = 0;
  *(_BYTE *)(a2 + v4[30]) = 0;
  *(_BYTE *)(a2 + v4[31]) = 0;
  v13 = (_QWORD *)(a2 + v4[32]);
  *v13 = 0;
  v13[1] = 0;
  *(_QWORD *)(a2 + v4[33]) = 0;
  v14 = (_QWORD *)(a2 + v4[34]);
  *v14 = 0;
  v14[1] = 0;
  sub_1909F33E0(a1, a2);
  if (qword_1ECF6C608 != -1)
    swift_once();
  *(_BYTE *)(a2 + v4[19]) = dyld_program_sdk_at_least();
  v15 = dyld_program_sdk_at_least();
  result = sub_19094CD98(a1);
  *(_BYTE *)(a2 + v4[21]) = v15 ^ 1;
  return result;
}

uint64_t sub_1909F2EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v27 = a5;
  v28 = a7;
  v17 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a4;
  sub_19094F7F4(a1, (uint64_t)v19);
  swift_storeEnumTagMultiPayload();
  sub_1909F2CA8((uint64_t)v19, a9);
  v21 = (int *)type metadata accessor for WidgetDescriptor(0);
  v22 = v21[7];
  swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + v22) = &unk_1E2CC0AD8;
  *(_QWORD *)(a9 + v21[33]) = v20;
  v23 = (_QWORD *)(a9 + v21[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v23 = a2;
  v23[1] = a3;
  v24 = (_QWORD *)(a9 + v21[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v24 = v27;
  v24[1] = a6;
  v25 = (_QWORD *)(a9 + v21[34]);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v25 = v28;
  v25[1] = a8;
  *(_BYTE *)(a9 + v21[30]) = a10;
  *(_BYTE *)(a9 + v21[25]) = a10;
  return result;
}

__n128 sub_1909F3014@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  __n128 result;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __n128 v19;

  v2 = v1;
  v4 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1909F33E0(v2, (uint64_t)v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
      swift_release();
      swift_release();
      v8 = sub_190A46240();
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 32) = 0;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
    }
    else
    {
      *(_QWORD *)(a1 + 24) = &type metadata for ControlViewSource;
      *(_QWORD *)(a1 + 32) = sub_1909CD6CC();
      v15 = (_OWORD *)swift_allocObject();
      *(_QWORD *)a1 = v15;
      v16 = *((_OWORD *)v6 + 3);
      v15[3] = *((_OWORD *)v6 + 2);
      v15[4] = v16;
      v15[5] = *((_OWORD *)v6 + 4);
      *(_OWORD *)((char *)v15 + 89) = *(_OWORD *)(v6 + 73);
      result = *(__n128 *)v6;
      v17 = *((_OWORD *)v6 + 1);
      v15[1] = *(_OWORD *)v6;
      v15[2] = v17;
    }
  }
  else
  {
    v10 = *(__n128 *)v6;
    v18 = *((_OWORD *)v6 + 1);
    v19 = v10;
    v11 = *((_QWORD *)v6 + 4);
    v12 = *((_QWORD *)v6 + 5);
    *(_QWORD *)(a1 + 24) = &type metadata for TimelineViewSource;
    *(_QWORD *)(a1 + 32) = sub_1909CD758();
    v13 = swift_allocObject();
    *(_QWORD *)a1 = v13;
    v14 = v18;
    *(__n128 *)(v13 + 16) = v19;
    *(_OWORD *)(v13 + 32) = v14;
    *(_QWORD *)(v13 + 48) = v11;
    *(_QWORD *)(v13 + 56) = v12;
    result = *((__n128 *)v6 + 3);
    *(__n128 *)(v13 + 64) = result;
  }
  return result;
}

uint64_t sub_1909F3198(uint64_t *a1, uint64_t *a2)
{
  return sub_1909F3998(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_1909F31B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  char v7;
  void *v8;
  void (*v9)(char *, uint64_t);
  uint64_t result;
  _QWORD v12[4];

  v0 = sub_190A462B8();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v12[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v12[-1] - v5;
  sub_190A46330();
  sub_190A46324();
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_190A46318();
  if (qword_1ECF6D0D0 != -1)
    swift_once();
  if (dyld_program_sdk_at_least())
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x1E0D0F608], v0);
    v7 = sub_190A462AC();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    if ((v7 & 1) != 0)
      v8 = &unk_1E2CC0B50;
    else
      v8 = &unk_1E2CC0B00;
  }
  else
  {
    v8 = &unk_1E2CC0B28;
  }
  v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  swift_bridgeObjectRetain();
  v9(v6, v0);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  qword_1ECF6D0C0 = (uint64_t)v8;
  return result;
}

void sub_1909F3340()
{
  qword_1EE1FD790 = MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1909F3354@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1EE1EB970 != -1)
    swift_once();
  *a1 = qword_1EE1FD790;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1909F33A4(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  uint64_t v3;

  a2(&v3);
  return sub_190961C1C(v3);
}

uint64_t sub_1909F33E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ViewSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1909F3424()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(v0 + 104) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return swift_deallocObject();
}

uint64_t sub_1909F346C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 48))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909F34B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  char v44;
  uint64_t v46;
  _QWORD v48[2];
  char *v49;
  uint64_t v50;
  _OWORD v51[4];
  _OWORD v52[2];
  _OWORD v53[4];
  _OWORD v54[3];

  v4 = sub_190A46240();
  v50 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v49 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v48 - v7;
  v9 = type metadata accessor for ViewSource(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (_OWORD *)((char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (_QWORD *)((char *)v48 - v14);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v48 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE7A0);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_1909F33E0(a1, (uint64_t)v21);
  sub_1909F33E0(a2, v22);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1909F33E0((uint64_t)v21, (uint64_t)v15);
    v29 = *v15;
    v30 = v15[1];
    v32 = v15[2];
    v31 = v15[3];
    v33 = v15[4];
    if (swift_getEnumCaseMultiPayload())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1908B467C(v33);
      swift_release();
      goto LABEL_11;
    }
    v50 = v33;
    v38 = *(_QWORD *)v22;
    v39 = *(_QWORD *)(v22 + 8);
    v40 = *(_QWORD *)(v22 + 16);
    v41 = *(_QWORD *)(v22 + 24);
    v49 = *(char **)(v22 + 32);
    v48[1] = *(_QWORD *)(v22 + 40);
    v42 = v29 == v38 && v30 == v39;
    if (v42 || (v43 = v40, v44 = sub_190A486DC(), v40 = v43, (v44 & 1) != 0))
    {
      if (v31)
      {
        if (v41)
        {
          if (v32 != v40 || v31 != v41)
          {
            v27 = sub_190A486DC();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_27:
            v46 = v50;
            sub_1908B467C((uint64_t)v49);
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            sub_1908B467C(v46);
            swift_release();
            goto LABEL_28;
          }
LABEL_26:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v27 = 1;
          goto LABEL_27;
        }
      }
      else if (!v41)
      {
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = 0;
    goto LABEL_27;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1909F33E0((uint64_t)v21, (uint64_t)v17);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
    swift_release();
    swift_release();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
      swift_release();
      v24 = v50;
      v25 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
      v25(v8, v17, v4);
      v26 = (uint64_t)v49;
      v25(v49, (char *)v22, v4);
      v27 = sub_190A46228();
      v28 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v28(v26, v4);
      v28((uint64_t)v8, v4);
LABEL_28:
      sub_19094CD98((uint64_t)v21);
      return v27 & 1;
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v17, v4);
  }
  else
  {
    sub_1909F33E0((uint64_t)v21, (uint64_t)v12);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v34 = v12[3];
      v53[2] = v12[2];
      v53[3] = v34;
      v54[0] = v12[4];
      *(_OWORD *)((char *)v54 + 9) = *(_OWORD *)((char *)v12 + 73);
      v35 = v12[1];
      v53[0] = *v12;
      v53[1] = v35;
      v36 = *(_OWORD *)(v22 + 48);
      v51[2] = *(_OWORD *)(v22 + 32);
      v51[3] = v36;
      v52[0] = *(_OWORD *)(v22 + 64);
      *(_OWORD *)((char *)v52 + 9) = *(_OWORD *)(v22 + 73);
      v37 = *(_OWORD *)(v22 + 16);
      v51[0] = *(_OWORD *)v22;
      v51[1] = v37;
      v27 = sub_190997ECC(v53, v51);
      sub_1908CD934((uint64_t)v51);
      sub_1908CD934((uint64_t)v53);
      goto LABEL_28;
    }
    sub_1908CD934((uint64_t)v12);
  }
LABEL_11:
  sub_1909F3958((uint64_t)v21);
  v27 = 0;
  return v27 & 1;
}

uint64_t sub_1909F3958(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE7A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1909F3998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v12;
  uint64_t result;

  if (a1 == a5 && a2 == a6 || (v12 = sub_190A486DC(), result = 0, (v12 & 1) != 0))
  {
    result = (a4 | a8) == 0;
    if (a4 && a8)
    {
      if (a3 == a7 && a4 == a8)
        return 1;
      else
        return sub_190A486DC();
    }
  }
  return result;
}

uint64_t sub_1909F3A40()
{
  int program_sdk_version;
  uint64_t result;
  uint64_t v2;

  program_sdk_version = dyld_get_program_sdk_version();
  v2 = sub_190A4867C();
  sub_190A47B3C();
  sub_190A4867C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  result = v2;
  if (program_sdk_version)
  {
    sub_190A4867C();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    return v2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetURLSessionEventConfiguration()
{
  return &type metadata for WidgetURLSessionEventConfiguration;
}

uint64_t destroy for TimelineViewSource(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
    swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for TimelineViewSource(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v7 = a2 + 4;
  v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    v8 = a2[5];
    a1[4] = v6;
    a1[5] = v8;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *v7;
  }
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for TimelineViewSource(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[4];
  if (!a1[4])
  {
    if (v4)
    {
      v6 = a2[5];
      a1[4] = v4;
      a1[5] = v6;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[5];
  a1[4] = v4;
  a1[5] = v5;
  swift_retain();
  swift_release();
LABEL_8:
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TimelineViewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
  {
    if (v6)
    {
      v8 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v6;
      *(_QWORD *)(a1 + 40) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  swift_release();
LABEL_8:
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TimelineViewSource()
{
  return &type metadata for TimelineViewSource;
}

unint64_t sub_1909F3DAC(uint64_t a1)
{
  unint64_t result;

  result = sub_1909F3DD0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1909F3DD0()
{
  unint64_t result;

  result = qword_1ECF6B4C8;
  if (!qword_1ECF6B4C8)
  {
    result = MEMORY[0x19401429C](&unk_190A5A954, &type metadata for TimelineViewSource);
    atomic_store(result, (unint64_t *)&qword_1ECF6B4C8);
  }
  return result;
}

uint64_t sub_1909F3E14()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_190A46EAC();
  __swift_allocate_value_buffer(v0, qword_1EE1FD818);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE1FD818);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CDB358], v0);
}

double sub_1909F3E6C()
{
  return 16.0;
}

uint64_t sub_1909F3E74(void *a1, uint64_t a2, char a3)
{
  uint64_t result;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  unint64_t v13;
  double v14;
  void *v15;
  id v16;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v18[2];
  double v19[3];
  uint64_t v20;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5B8);
  result = swift_initStackObject();
  *(_OWORD *)(result + 16) = xmmword_190A4A360;
  v6 = (void *)*MEMORY[0x1E0CA8400];
  *(_QWORD *)(result + 64) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(result + 32) = v6;
  *(_QWORD *)(result + 40) = 0x8000;
  v7 = (void *)*MEMORY[0x1E0CA8450];
  if (*MEMORY[0x1E0CA8450])
  {
    v8 = result;
    *(_QWORD *)(result + 72) = v7;
    type metadata accessor for CFString(0);
    *(_QWORD *)(v8 + 104) = v9;
    *(_QWORD *)(v8 + 80) = a1;
    v10 = v6;
    v11 = a1;
    v12 = v7;
    v13 = sub_1908DFEC8(v8);
    if ((a3 & 1) == 0)
    {
      v14 = sub_1909BC058();
      v15 = (void *)*MEMORY[0x1E0CA84E8];
      v20 = MEMORY[0x1E0DEF040];
      v19[0] = v14;
      sub_190901E94(v19, v18);
      v16 = v15;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1908FBEB0(v18, v16, isUniquelyReferenced_nonNull_native);

      swift_bridgeObjectRelease();
    }
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1909F3FAC()
{
  return sub_1908DFEC8(MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1909F3FB8(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5, double a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  int v38;
  uint64_t v39;
  void *v40;
  id v41;
  char v42;
  uint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  char *v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _OWORD v54[2];
  __int128 v55;
  uint64_t v56;

  v51 = a5;
  v49 = a4;
  v50 = a3;
  v9 = sub_190A468E8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v48 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_190A47368();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC00);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v22(a1, 1, v15) == 1)
  {
    if (a2)
    {
      v23 = a2;
    }
    else
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E0CDD550], v15);
      v23 = sub_1909BBEF0();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    }
LABEL_7:
    v24 = v52;
    v25 = (*(uint64_t (**)(id, uint64_t, _QWORD))(v52 + 120))(v23, v50, v49 & 1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5B8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_190A5A9B0;
    v27 = (void *)*MEMORY[0x1E0CA83D8];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CA83D8];
    v28 = MEMORY[0x1E0DEF040];
    *(double *)(inited + 40) = a6;
    v29 = (void *)*MEMORY[0x1E0CA8418];
    *(_QWORD *)(inited + 64) = v28;
    *(_QWORD *)(inited + 72) = v29;
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C498);
    *(_QWORD *)(inited + 80) = v25;
    v31 = (void *)*MEMORY[0x1E0CA82F8];
    *(_QWORD *)(inited + 104) = v30;
    *(_QWORD *)(inited + 112) = v31;
    *(_QWORD *)(inited + 144) = MEMORY[0x1E0DEBB98];
    *(_QWORD *)(inited + 120) = 7;
    v32 = v27;
    v33 = v29;
    v34 = v31;
    v35 = sub_1908DFEC8(inited);
    sub_1908AAA48(v51, (uint64_t)v14, &qword_1ECF6AE40);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9) == 1)
    {
      v36 = sub_1908AA544((uint64_t)v14, &qword_1ECF6AE40);
LABEL_15:
      v43 = (*(uint64_t (**)(uint64_t))(v24 + 128))(v36);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v55 = v35;
      sub_1909F746C(v43, (uint64_t)sub_1909F7430, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v55);
      swift_bridgeObjectRelease();
      type metadata accessor for CFString(0);
      sub_1909F82D8((unint64_t *)&qword_1ECF6C598, (uint64_t)&unk_190A4A2C8);
      v45 = sub_190A47A1C();

      swift_bridgeObjectRelease();
      return v45;
    }
    v37 = v48;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v48, v14, v9);
    v38 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v37, v9);
    if (v38 != *MEMORY[0x1E0CD9EF0])
    {
      if (v38 == *MEMORY[0x1E0CD9EE8])
      {
        v39 = 1;
LABEL_14:
        (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
        v40 = (void *)*MEMORY[0x1E0CA8368];
        v56 = MEMORY[0x1E0DEB418];
        *(_QWORD *)&v55 = v39;
        sub_190901E94(&v55, v54);
        v41 = v40;
        v42 = swift_isUniquelyReferenced_nonNull_native();
        v53 = v35;
        sub_1908FBEB0(v54, v41, v42);
        v35 = v53;

        v36 = swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v37, v9);
    }
    v39 = 0;
    goto LABEL_14;
  }
  sub_1908AAA48(a1, (uint64_t)v21, &qword_1ECF6BC00);
  if (v22((uint64_t)v21, 1, v15) != 1)
  {
    v23 = sub_1909BBEF0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
    goto LABEL_7;
  }
  __break(1u);
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1909F4470(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;

  v6 = v5;
  v30 = a4;
  v29 = a3;
  v32 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_190A47440();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_190A46EE8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = a5;
  sub_190A47428();
  v20 = (*(double (**)(uint64_t, char *))(v6 + 88))(a1, v19);
  v21 = v16;
  v22 = v29;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  if ((v30 & 1) != 0)
    v22 = (*(double (**)(char *))(v6 + 104))(v15);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_190A4741C();
  v23 = (void *)sub_1909F3FB8(v32, 0, v22, 0, (uint64_t)v11, v20);
  sub_1908AA544((uint64_t)v11, &qword_1ECF6AE40);
  v24 = sub_1909BBA90();
  if (qword_1EE1EC558 != -1)
    swift_once();
  v25 = sub_190A46EAC();
  __swift_project_value_buffer(v25, (uint64_t)qword_1EE1FD818);
  v26 = sub_1909BBCB0();
  v27 = CTFontDescriptorCreateWithTextStyleAndAttributes();

  return v27;
}

uint64_t sub_1909F46A8(uint64_t a1, void *a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  double v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _BYTE v24[4];
  int v25;
  void *v26;

  v25 = a4;
  v26 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC00);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_190A46EE8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = &v24[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_190A47428();
  v17 = (*(double (**)(uint64_t, _BYTE *))(v4 + 96))(a1, v16);
  (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v16, v13);
  if ((v25 & 1) != 0)
    a3 = (*(double (**)(uint64_t))(v4 + 112))(a1);
  v18 = sub_190A47368();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v12, 1, 1, v18);
  sub_190A4741C();
  v19 = (void *)sub_1909F3FB8((uint64_t)v12, v26, a3, 0, (uint64_t)v9, v17);
  sub_1908AA544((uint64_t)v9, &qword_1ECF6AE40);
  sub_1908AA544((uint64_t)v12, &qword_1ECF6BC00);
  if (qword_1EE1EC558 != -1)
    swift_once();
  v20 = sub_190A46EAC();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EE1FD818);
  v21 = sub_1909BBCB0();
  v22 = CTFontDescriptorCreateWithTextStyleAndAttributes();

  return v22;
}

uint64_t type metadata accessor for DefaultClockComplicationFontDefinition()
{
  return objc_opt_self();
}

uint64_t sub_1909F48FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  return sub_1909F4470(a1, a2, a3, a4 & 1, a5);
}

uint64_t sub_1909F4904(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  sub_1909F4470(a1, a2, a3, a4 & 1, a5);
  return sub_190A47350();
}

uint64_t sub_1909F492C(uint64_t a1, uint64_t a2, char a3, double a4)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  v7 = a3 & 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A4741C();
  v11 = (void *)sub_1909F3FB8(a1, 0, a2, v7, (uint64_t)v10, a4);
  sub_1908AA544((uint64_t)v10, &qword_1ECF6AE40);
  v12 = CTFontDescriptorCreateWithAttributesAndOptions();

  return v12;
}

uint64_t sub_1909F4A10(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  return sub_1909F46A8(a1, a2, a3, a4 & 1);
}

uint64_t sub_1909F4A18(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  sub_1909F46A8(a1, a2, a3, a4 & 1);
  return sub_190A47350();
}

double sub_1909F4A50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  double v13;
  BOOL v17;
  BOOL v18;
  BOOL v20;
  int v22;
  double v23;
  uint64_t v25;

  v4 = sub_190A46EE8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_190A47440();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  v13 = 15.0;
  if (v12 != *MEMORY[0x1E0CDD788]
    && v12 != *MEMORY[0x1E0CDD7A8]
    && v12 != *MEMORY[0x1E0CDD7B0]
    && v12 != *MEMORY[0x1E0CDD7B8])
  {
    v13 = 10.0;
    v17 = v12 == *MEMORY[0x1E0CDD7E8] || v12 == *MEMORY[0x1E0CDD790];
    v18 = v17 || v12 == *MEMORY[0x1E0CDD7A0];
    if (!v18 && v12 != *MEMORY[0x1E0CDD7C0])
    {
      v13 = 8.5;
      v20 = v12 == *MEMORY[0x1E0CDD7E0] || v12 == *MEMORY[0x1E0CDD7C8];
      if (!v20 && v12 != *MEMORY[0x1E0CDD7D0])
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        v13 = 10.0;
      }
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  v23 = 1.0;
  if (v22 != *MEMORY[0x1E0CDB728])
  {
    if (v22 == *MEMORY[0x1E0CDB740])
    {
      v23 = 1.1;
    }
    else if (v22 == *MEMORY[0x1E0CDB730])
    {
      v23 = 1.06;
    }
    else
    {
      v23 = 1.19;
      if (v22 != *MEMORY[0x1E0CDB748] && v22 != *MEMORY[0x1E0CDB758])
      {
        v23 = 1.1;
        if (v22 != *MEMORY[0x1E0CDB738])
        {
          if (v22 == *MEMORY[0x1E0CDB750])
          {
            v23 = 1.21;
          }
          else
          {
            (*(void (**)(char *, uint64_t, double, double))(v5 + 8))(v7, v4, 1.1, 1.1);
            v23 = 1.0;
          }
        }
      }
    }
  }
  return v13 * v23;
}

double sub_1909F4D04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  int v8;
  __n128 v9;
  double v11;
  uint64_t v13;

  v3 = sub_190A46EE8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CFString(0);
  sub_1909F82D8((unint64_t *)&unk_1ECF6C588, (uint64_t)&unk_190A4A29C);
  v7 = sub_190A4633C();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  v9.n128_u64[0] = 1.0;
  if (v8 != *MEMORY[0x1E0CDB728])
  {
    v9.n128_u64[0] = 0x3FF199999999999ALL;
    if (v8 != *MEMORY[0x1E0CDB740])
    {
      if (v8 == *MEMORY[0x1E0CDB730])
      {
        v9.n128_u64[0] = 0x3FF0F5C28F5C28F6;
      }
      else if (v8 == *MEMORY[0x1E0CDB748] || v8 == *MEMORY[0x1E0CDB758])
      {
        v9.n128_u64[0] = 0x3FF30A3D70A3D70ALL;
      }
      else if (v8 != *MEMORY[0x1E0CDB738])
      {
        if (v8 == *MEMORY[0x1E0CDB750])
        {
          v9.n128_u64[0] = 0x3FF35C28F5C28F5CLL;
        }
        else
        {
          (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v9);
          v9.n128_u64[0] = 1.0;
        }
      }
    }
  }
  v11 = 10.0;
  if ((v7 & 1) != 0)
    v11 = 7.0;
  return v11 * v9.n128_f64[0];
}

double sub_1909F4EC4(uint64_t a1)
{
  return sub_1909F6FCC(a1, (double (*)(void))MEMORY[0x1E0CDD5E0], (void (*)(void))MEMORY[0x1E0CDD5E8], (void (*)(void))MEMORY[0x1E0CDD5F8]);
}

uint64_t sub_1909F4EE0(uint64_t a1)
{
  return sub_1909F53A0(a1, MEMORY[0x1E0CDD5E8], MEMORY[0x1E0CDD5E0]);
}

uint64_t type metadata accessor for CornerClockComplicationFontDefinition()
{
  return objc_opt_self();
}

double sub_1909F4F14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  double v13;
  BOOL v17;
  BOOL v18;
  BOOL v20;
  int v22;
  double v23;
  uint64_t v25;

  v4 = sub_190A46EE8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_190A47440();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  v13 = 9.0;
  if (v12 != *MEMORY[0x1E0CDD788]
    && v12 != *MEMORY[0x1E0CDD7A8]
    && v12 != *MEMORY[0x1E0CDD7B0]
    && v12 != *MEMORY[0x1E0CDD7B8])
  {
    v13 = 7.0;
    v17 = v12 == *MEMORY[0x1E0CDD7E8] || v12 == *MEMORY[0x1E0CDD790];
    v18 = v17 || v12 == *MEMORY[0x1E0CDD7A0];
    if (!v18 && v12 != *MEMORY[0x1E0CDD7C0])
    {
      v13 = 6.0;
      v20 = v12 == *MEMORY[0x1E0CDD7E0] || v12 == *MEMORY[0x1E0CDD7C8];
      if (!v20 && v12 != *MEMORY[0x1E0CDD7D0])
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        v13 = 7.0;
      }
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  v23 = 1.0;
  if (v22 != *MEMORY[0x1E0CDB728])
  {
    if (v22 == *MEMORY[0x1E0CDB740])
    {
      v23 = 1.1;
    }
    else if (v22 == *MEMORY[0x1E0CDB730])
    {
      v23 = 1.06;
    }
    else
    {
      v23 = 1.19;
      if (v22 != *MEMORY[0x1E0CDB748] && v22 != *MEMORY[0x1E0CDB758])
      {
        v23 = 1.1;
        if (v22 != *MEMORY[0x1E0CDB738])
        {
          if (v22 == *MEMORY[0x1E0CDB750])
          {
            v23 = 1.21;
          }
          else
          {
            (*(void (**)(char *, uint64_t, double, double))(v5 + 8))(v7, v4, 1.1, 1.1);
            v23 = 1.0;
          }
        }
      }
    }
  }
  return v13 * v23;
}

double sub_1909F51C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  int v8;
  __n128 v9;
  double v11;
  uint64_t v13;

  v3 = sub_190A46EE8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CFString(0);
  sub_1909F82D8((unint64_t *)&unk_1ECF6C588, (uint64_t)&unk_190A4A29C);
  v7 = sub_190A4633C();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  v9.n128_u64[0] = 1.0;
  if (v8 != *MEMORY[0x1E0CDB728])
  {
    v9.n128_u64[0] = 0x3FF199999999999ALL;
    if (v8 != *MEMORY[0x1E0CDB740])
    {
      if (v8 == *MEMORY[0x1E0CDB730])
      {
        v9.n128_u64[0] = 0x3FF0F5C28F5C28F6;
      }
      else if (v8 == *MEMORY[0x1E0CDB748] || v8 == *MEMORY[0x1E0CDB758])
      {
        v9.n128_u64[0] = 0x3FF30A3D70A3D70ALL;
      }
      else if (v8 != *MEMORY[0x1E0CDB738])
      {
        if (v8 == *MEMORY[0x1E0CDB750])
        {
          v9.n128_u64[0] = 0x3FF35C28F5C28F5CLL;
        }
        else
        {
          (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v9);
          v9.n128_u64[0] = 1.0;
        }
      }
    }
  }
  v11 = 7.0;
  if ((v7 & 1) != 0)
    v11 = 5.0;
  return v11 * v9.n128_f64[0];
}

double sub_1909F5388(uint64_t a1)
{
  return sub_1909F6FCC(a1, (double (*)(void))MEMORY[0x1E0CDD5E0], (void (*)(void))MEMORY[0x1E0CDD5E0], (void (*)(void))MEMORY[0x1E0CDD5F8]);
}

uint64_t sub_1909F53A0(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t (*v5)(void);

  type metadata accessor for CFString(0);
  sub_1909F82D8((unint64_t *)&unk_1ECF6C588, (uint64_t)&unk_190A4A29C);
  if ((sub_190A4633C() & 1) != 0)
    v5 = a2;
  else
    v5 = a3;
  return v5();
}

uint64_t type metadata accessor for CornerSmallClockComplicationFontDefinition()
{
  return objc_opt_self();
}

double sub_1909F5440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  double v16;
  BOOL v20;
  int v22;
  double v23;
  uint64_t v25;

  v4 = sub_190A46EE8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_190A47440();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == *MEMORY[0x1E0CDD788]
    || v12 == *MEMORY[0x1E0CDD7A8]
    || v12 == *MEMORY[0x1E0CDD7B0]
    || v12 == *MEMORY[0x1E0CDD7B8])
  {
    v16 = 19.5;
  }
  else
  {
    v16 = 12.0;
    if (v12 != *MEMORY[0x1E0CDD7E8]
      && v12 != *MEMORY[0x1E0CDD790]
      && v12 != *MEMORY[0x1E0CDD7A0]
      && v12 != *MEMORY[0x1E0CDD7C0])
    {
      v16 = 10.5;
      v20 = v12 == *MEMORY[0x1E0CDD7E0] || v12 == *MEMORY[0x1E0CDD7C8];
      if (!v20 && v12 != *MEMORY[0x1E0CDD7D0])
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        v16 = 12.0;
      }
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  v23 = 1.0;
  if (v22 != *MEMORY[0x1E0CDB728])
  {
    if (v22 == *MEMORY[0x1E0CDB740])
    {
      v23 = 1.1;
    }
    else if (v22 == *MEMORY[0x1E0CDB730])
    {
      v23 = 1.06;
    }
    else
    {
      v23 = 1.19;
      if (v22 != *MEMORY[0x1E0CDB748] && v22 != *MEMORY[0x1E0CDB758])
      {
        v23 = 1.1;
        if (v22 != *MEMORY[0x1E0CDB738])
        {
          if (v22 == *MEMORY[0x1E0CDB750])
          {
            v23 = 1.21;
          }
          else
          {
            (*(void (**)(char *, uint64_t, double, double))(v5 + 8))(v7, v4, 1.1, 1.1);
            v23 = 1.0;
          }
        }
      }
    }
  }
  return v16 * v23;
}

double sub_1909F5700(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  int v8;
  __n128 v9;
  double v11;
  uint64_t v13;

  v3 = sub_190A46EE8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CFString(0);
  sub_1909F82D8((unint64_t *)&unk_1ECF6C588, (uint64_t)&unk_190A4A29C);
  v7 = sub_190A4633C();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  v9.n128_u64[0] = 1.0;
  if (v8 != *MEMORY[0x1E0CDB728])
  {
    v9.n128_u64[0] = 0x3FF199999999999ALL;
    if (v8 != *MEMORY[0x1E0CDB740])
    {
      if (v8 == *MEMORY[0x1E0CDB730])
      {
        v9.n128_u64[0] = 0x3FF0F5C28F5C28F6;
      }
      else if (v8 == *MEMORY[0x1E0CDB748] || v8 == *MEMORY[0x1E0CDB758])
      {
        v9.n128_u64[0] = 0x3FF30A3D70A3D70ALL;
      }
      else if (v8 != *MEMORY[0x1E0CDB738])
      {
        if (v8 == *MEMORY[0x1E0CDB750])
        {
          v9.n128_u64[0] = 0x3FF35C28F5C28F5CLL;
        }
        else
        {
          (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v9);
          v9.n128_u64[0] = 1.0;
        }
      }
    }
  }
  v11 = 12.0;
  if ((v7 & 1) != 0)
    v11 = 7.5;
  return v11 * v9.n128_f64[0];
}

uint64_t type metadata accessor for CircularClockComplicationFontDefinition()
{
  return objc_opt_self();
}

double sub_1909F58E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  int v8;
  __n128 v9;
  double v11;
  uint64_t v13;

  v3 = sub_190A46EE8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CFString(0);
  sub_1909F82D8((unint64_t *)&unk_1ECF6C588, (uint64_t)&unk_190A4A29C);
  v7 = sub_190A4633C();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  v9.n128_u64[0] = 1.0;
  if (v8 != *MEMORY[0x1E0CDB728])
  {
    v9.n128_u64[0] = 0x3FF199999999999ALL;
    if (v8 != *MEMORY[0x1E0CDB740])
    {
      if (v8 == *MEMORY[0x1E0CDB730])
      {
        v9.n128_u64[0] = 0x3FF0F5C28F5C28F6;
      }
      else if (v8 == *MEMORY[0x1E0CDB748] || v8 == *MEMORY[0x1E0CDB758])
      {
        v9.n128_u64[0] = 0x3FF30A3D70A3D70ALL;
      }
      else if (v8 != *MEMORY[0x1E0CDB738])
      {
        if (v8 == *MEMORY[0x1E0CDB750])
        {
          v9.n128_u64[0] = 0x3FF35C28F5C28F5CLL;
        }
        else
        {
          (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v9);
          v9.n128_u64[0] = 1.0;
        }
      }
    }
  }
  v11 = 16.0;
  if ((v7 & 1) != 0)
    v11 = 11.5;
  return v11 * v9.n128_f64[0];
}

double sub_1909F5AA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  double v10;
  double v12;
  BOOL v14;
  double v16;
  uint64_t v17;

  v2 = sub_190A47440();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E0CDD788]
    || v6 == *MEMORY[0x1E0CDD7A8]
    || v6 == *MEMORY[0x1E0CDD7B0]
    || v6 == *MEMORY[0x1E0CDD7B8])
  {
    goto LABEL_18;
  }
  if (v6 == *MEMORY[0x1E0CDD7E8])
  {
    sub_190A473E0();
    return v10;
  }
  if (v6 == *MEMORY[0x1E0CDD790] || v6 == *MEMORY[0x1E0CDD7A0])
  {
LABEL_18:
    sub_190A473D4();
    return v10;
  }
  if (v6 != *MEMORY[0x1E0CDD7C0])
  {
    v14 = v6 == *MEMORY[0x1E0CDD7E0] || v6 == *MEMORY[0x1E0CDD7C8];
    if (!v14 && v6 != *MEMORY[0x1E0CDD7D0])
    {
      sub_190A473D4();
      v12 = v16;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v12;
    }
  }
  sub_190A473C8();
  return v10;
}

uint64_t type metadata accessor for RectangularClockComplicationFontDefinition()
{
  return objc_opt_self();
}

uint64_t sub_1909F5C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int v24;
  uint64_t result;
  BOOL v26;
  BOOL v29;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;

  v4 = sub_190A46EE8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v41 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v42 = (char *)&v40 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v43 = (char *)&v40 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v40 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v40 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v40 - v18;
  v20 = sub_190A47440();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, a1, v20);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v23, v20);
  if (v24 == *MEMORY[0x1E0CDD788])
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v19, a2, v4);
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v19, v4);
    v26 = (_DWORD)result == *MEMORY[0x1E0CDB718] || (_DWORD)result == *MEMORY[0x1E0CDB720];
    if (!v26
      && (_DWORD)result != *MEMORY[0x1E0CDB728]
      && (_DWORD)result != *MEMORY[0x1E0CDB740]
      && (_DWORD)result != *MEMORY[0x1E0CDB730]
      && (_DWORD)result != *MEMORY[0x1E0CDB748]
      && (_DWORD)result != *MEMORY[0x1E0CDB758]
      && (_DWORD)result != *MEMORY[0x1E0CDB738]
      && (_DWORD)result != *MEMORY[0x1E0CDB750])
    {
      return (*(uint64_t (**)(char *, uint64_t, double))(v5 + 8))(v19, v4, 26.0);
    }
  }
  else if (v24 == *MEMORY[0x1E0CDD7A8] || v24 == *MEMORY[0x1E0CDD7B0] || v24 == *MEMORY[0x1E0CDD7B8])
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v17, a2, v4);
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v17, v4);
    v29 = (_DWORD)result == *MEMORY[0x1E0CDB718] || (_DWORD)result == *MEMORY[0x1E0CDB720];
    if (!v29
      && (_DWORD)result != *MEMORY[0x1E0CDB728]
      && (_DWORD)result != *MEMORY[0x1E0CDB740]
      && (_DWORD)result != *MEMORY[0x1E0CDB730]
      && (_DWORD)result != *MEMORY[0x1E0CDB748]
      && (_DWORD)result != *MEMORY[0x1E0CDB758]
      && (_DWORD)result != *MEMORY[0x1E0CDB738]
      && (_DWORD)result != *MEMORY[0x1E0CDB750])
    {
      return (*(uint64_t (**)(char *, uint64_t, double))(v5 + 8))(v17, v4, 41.5);
    }
  }
  else if (v24 == *MEMORY[0x1E0CDD7E8] || v24 == *MEMORY[0x1E0CDD7A0])
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v14, a2, v4);
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v14, v4);
    if ((_DWORD)result != *MEMORY[0x1E0CDB718]
      && (_DWORD)result != *MEMORY[0x1E0CDB720]
      && (_DWORD)result != *MEMORY[0x1E0CDB728]
      && (_DWORD)result != *MEMORY[0x1E0CDB740]
      && (_DWORD)result != *MEMORY[0x1E0CDB730]
      && (_DWORD)result != *MEMORY[0x1E0CDB748]
      && (_DWORD)result != *MEMORY[0x1E0CDB758]
      && (_DWORD)result != *MEMORY[0x1E0CDB738]
      && (_DWORD)result != *MEMORY[0x1E0CDB750])
    {
      return (*(uint64_t (**)(char *, uint64_t, double))(v5 + 8))(v14, v4, 17.0);
    }
  }
  else if (v24 == *MEMORY[0x1E0CDD7C0])
  {
    v31 = v5;
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v33 = v43;
    v32(v43, a2, v4);
    result = (*(uint64_t (**)(char *, uint64_t))(v31 + 88))(v33, v4);
    if ((_DWORD)result != *MEMORY[0x1E0CDB718]
      && (_DWORD)result != *MEMORY[0x1E0CDB720]
      && (_DWORD)result != *MEMORY[0x1E0CDB728]
      && (_DWORD)result != *MEMORY[0x1E0CDB740]
      && (_DWORD)result != *MEMORY[0x1E0CDB730]
      && (_DWORD)result != *MEMORY[0x1E0CDB748]
      && (_DWORD)result != *MEMORY[0x1E0CDB758]
      && (_DWORD)result != *MEMORY[0x1E0CDB738]
      && (_DWORD)result != *MEMORY[0x1E0CDB750])
    {
      return (*(uint64_t (**)(char *, uint64_t, double))(v31 + 8))(v33, v4, 14.0);
    }
  }
  else if (v24 == *MEMORY[0x1E0CDD7C8])
  {
    v34 = v5;
    v35 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v36 = v42;
    v35(v42, a2, v4);
    result = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v36, v4);
    if ((_DWORD)result != *MEMORY[0x1E0CDB718]
      && (_DWORD)result != *MEMORY[0x1E0CDB720]
      && (_DWORD)result != *MEMORY[0x1E0CDB728]
      && (_DWORD)result != *MEMORY[0x1E0CDB740]
      && (_DWORD)result != *MEMORY[0x1E0CDB730]
      && (_DWORD)result != *MEMORY[0x1E0CDB748]
      && (_DWORD)result != *MEMORY[0x1E0CDB758]
      && (_DWORD)result != *MEMORY[0x1E0CDB738]
      && (_DWORD)result != *MEMORY[0x1E0CDB750])
    {
      return (*(uint64_t (**)(char *, uint64_t, double))(v34 + 8))(v36, v4, 10.5);
    }
  }
  else if (v24 == *MEMORY[0x1E0CDD7D0])
  {
    v37 = v5;
    v38 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v39 = v41;
    v38(v41, a2, v4);
    result = (*(uint64_t (**)(char *, uint64_t))(v37 + 88))(v39, v4);
    if ((_DWORD)result != *MEMORY[0x1E0CDB718]
      && (_DWORD)result != *MEMORY[0x1E0CDB720]
      && (_DWORD)result != *MEMORY[0x1E0CDB728]
      && (_DWORD)result != *MEMORY[0x1E0CDB740]
      && (_DWORD)result != *MEMORY[0x1E0CDB730]
      && (_DWORD)result != *MEMORY[0x1E0CDB748]
      && (_DWORD)result != *MEMORY[0x1E0CDB758]
      && (_DWORD)result != *MEMORY[0x1E0CDB738]
      && (_DWORD)result != *MEMORY[0x1E0CDB750])
    {
      return (*(uint64_t (**)(char *, uint64_t, double))(v37 + 8))(v39, v4, 15.0);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    sub_1909F80FC(a2);
    return sub_1909F7AD0(a1, a2);
  }
  return result;
}

double sub_1909F64D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  char v8;
  int v9;
  __n128 v10;
  double v12;
  uint64_t v14;

  v3 = sub_190A46EE8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1909F80FC(a2);
  type metadata accessor for CFString(0);
  sub_1909F82D8((unint64_t *)&unk_1ECF6C588, (uint64_t)&unk_190A4A29C);
  v8 = sub_190A4633C();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  v10.n128_u64[0] = 1.0;
  if (v9 != *MEMORY[0x1E0CDB728])
  {
    v10.n128_u64[0] = 0x3FF199999999999ALL;
    if (v9 != *MEMORY[0x1E0CDB740])
    {
      if (v9 == *MEMORY[0x1E0CDB730])
      {
        v10.n128_u64[0] = 0x3FF0F5C28F5C28F6;
      }
      else if (v9 == *MEMORY[0x1E0CDB748] || v9 == *MEMORY[0x1E0CDB758])
      {
        v10.n128_u64[0] = 0x3FF30A3D70A3D70ALL;
      }
      else if (v9 != *MEMORY[0x1E0CDB738])
      {
        if (v9 == *MEMORY[0x1E0CDB750])
        {
          v10.n128_u64[0] = 0x3FF35C28F5C28F5CLL;
        }
        else
        {
          (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v10);
          v10.n128_u64[0] = 1.0;
        }
      }
    }
  }
  v12 = 16.0;
  if ((v8 & 1) != 0)
    v12 = 11.5;
  return v7 * (v12 * v10.n128_f64[0]);
}

double sub_1909F66B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  double v7;
  double v10;
  double v16;
  uint64_t v17;

  v2 = sub_190A47440();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 != *MEMORY[0x1E0CDD788])
  {
    if (v6 == *MEMORY[0x1E0CDD7A8] || v6 == *MEMORY[0x1E0CDD7B0] || v6 == *MEMORY[0x1E0CDD7B8])
      goto LABEL_13;
    if (v6 == *MEMORY[0x1E0CDD7E8])
    {
      sub_190A473E0();
      return v7;
    }
    if (v6 == *MEMORY[0x1E0CDD790])
    {
LABEL_13:
      sub_190A473D4();
      return v7;
    }
    if (v6 != *MEMORY[0x1E0CDD7A0]
      && v6 != *MEMORY[0x1E0CDD7C0]
      && v6 != *MEMORY[0x1E0CDD7E0]
      && v6 != *MEMORY[0x1E0CDD7C8]
      && v6 != *MEMORY[0x1E0CDD7D0])
    {
      sub_190A473D4();
      v10 = v16;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v10;
    }
  }
  sub_190A473C8();
  return v7;
}

uint64_t type metadata accessor for RectangularHomeScreenComplicationFontDefinition()
{
  return objc_opt_self();
}

double sub_1909F6858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  int v23;
  double result;
  uint64_t v25;

  v4 = sub_190A46EE8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_190A47440();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 != *MEMORY[0x1E0CDD788]
    && v12 != *MEMORY[0x1E0CDD7A8]
    && v12 != *MEMORY[0x1E0CDD7B0]
    && v12 != *MEMORY[0x1E0CDD7B8]
    && v12 != *MEMORY[0x1E0CDD7E8]
    && v12 != *MEMORY[0x1E0CDD790]
    && v12 != *MEMORY[0x1E0CDD7A0]
    && v12 != *MEMORY[0x1E0CDD7C0]
    && v12 != *MEMORY[0x1E0CDD7E0]
    && v12 != *MEMORY[0x1E0CDD7C8]
    && v12 != *MEMORY[0x1E0CDD7D0])
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  v23 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  result = 8.5;
  if (v23 != *MEMORY[0x1E0CDB728])
  {
    if (v23 == *MEMORY[0x1E0CDB740])
    {
      return 9.35;
    }
    else if (v23 == *MEMORY[0x1E0CDB730])
    {
      return 9.01;
    }
    else
    {
      result = 10.115;
      if (v23 != *MEMORY[0x1E0CDB748] && v23 != *MEMORY[0x1E0CDB758])
      {
        result = 9.35;
        if (v23 != *MEMORY[0x1E0CDB738])
        {
          if (v23 == *MEMORY[0x1E0CDB750])
          {
            return 10.285;
          }
          else
          {
            (*(void (**)(char *, uint64_t, double, double))(v5 + 8))(v7, v4, 9.35, 9.35);
            return 8.5;
          }
        }
      }
    }
  }
  return result;
}

double sub_1909F6AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  __n128 v8;
  uint64_t v11;

  v3 = sub_190A46EE8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CFString(0);
  sub_1909F82D8((unint64_t *)&unk_1ECF6C588, (uint64_t)&unk_190A4A29C);
  sub_190A4633C();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  v8.n128_u64[0] = 8.5;
  if (v7 != *MEMORY[0x1E0CDB728])
  {
    v8.n128_u64[0] = 0x4022B33333333334;
    if (v7 != *MEMORY[0x1E0CDB740])
    {
      if (v7 == *MEMORY[0x1E0CDB730])
      {
        v8.n128_u64[0] = 0x4022051EB851EB85;
      }
      else if (v7 == *MEMORY[0x1E0CDB748] || v7 == *MEMORY[0x1E0CDB758])
      {
        v8.n128_u64[0] = 0x40243AE147AE147BLL;
      }
      else if (v7 != *MEMORY[0x1E0CDB738])
      {
        if (v7 == *MEMORY[0x1E0CDB750])
        {
          v8.n128_u64[0] = 0x402491EB851EB852;
        }
        else
        {
          (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v8);
          v8.n128_u64[0] = 8.5;
        }
      }
    }
  }
  return v8.n128_f64[0];
}

double sub_1909F6C90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  double v13;
  double v14;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;

  v2 = sub_190A47440();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  v31 = *MEMORY[0x1E0CDD788];
  v30 = *MEMORY[0x1E0CDD7A8];
  v29 = *MEMORY[0x1E0CDD7B0];
  v28 = *MEMORY[0x1E0CDD7B8];
  v27 = *MEMORY[0x1E0CDD7E8];
  v7 = *MEMORY[0x1E0CDD790];
  v8 = *MEMORY[0x1E0CDD7A0];
  v9 = *MEMORY[0x1E0CDD7C0];
  v10 = *MEMORY[0x1E0CDD7E0];
  v11 = *MEMORY[0x1E0CDD7C8];
  v12 = *MEMORY[0x1E0CDD7D0];
  sub_190A473E0();
  v14 = v13;
  if (v6 != v31
    && v6 != v30
    && v6 != v29
    && v6 != v28
    && v6 != v27
    && v6 != v7
    && v6 != v8
    && v6 != v9
    && v6 != v10
    && v6 != v11
    && v6 != v12)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v14;
}

uint64_t sub_1909F6E34()
{
  type metadata accessor for CFString(0);
  sub_1909F82D8((unint64_t *)&unk_1ECF6C588, (uint64_t)&unk_190A4A29C);
  sub_190A4633C();
  return sub_190A473E0();
}

uint64_t type metadata accessor for InlineClockComplicationFontDefinition()
{
  return objc_opt_self();
}

double sub_1909F6EBC(uint64_t a1)
{
  return sub_1909F6FCC(a1, (double (*)(void))MEMORY[0x1E0CDD5E8], (void (*)(void))MEMORY[0x1E0CDD5C0], (void (*)(void))MEMORY[0x1E0CDD5E0]);
}

uint64_t sub_1909F6ED8(uint64_t a1)
{
  return sub_1909F53A0(a1, MEMORY[0x1E0CDD5C0], MEMORY[0x1E0CDD5E8]);
}

uint64_t type metadata accessor for CornerLightClockComplicationFontDefinition()
{
  return objc_opt_self();
}

double sub_1909F6F0C(uint64_t a1)
{
  return sub_1909F6FCC(a1, (double (*)(void))MEMORY[0x1E0CDD5E8], (void (*)(void))MEMORY[0x1E0CDD5E8], (void (*)(void))MEMORY[0x1E0CDD5E0]);
}

uint64_t type metadata accessor for CornerSmallLightClockComplicationFontDefinition()
{
  return objc_opt_self();
}

double sub_1909F6F44(uint64_t a1)
{
  return sub_1909F6FCC(a1, (double (*)(void))MEMORY[0x1E0CDD5F8], (void (*)(void))MEMORY[0x1E0CDD5E0], (void (*)(void))MEMORY[0x1E0CDD590]);
}

uint64_t sub_1909F6F60(uint64_t a1)
{
  return sub_1909F53A0(a1, MEMORY[0x1E0CDD5E0], MEMORY[0x1E0CDD5F8]);
}

uint64_t type metadata accessor for CornerSemiboldClockComplicationFontDefinition()
{
  return objc_opt_self();
}

double sub_1909F6F94(uint64_t a1)
{
  return sub_1909F6FCC(a1, (double (*)(void))MEMORY[0x1E0CDD5F8], (void (*)(void))MEMORY[0x1E0CDD5F8], (void (*)(void))MEMORY[0x1E0CDD590]);
}

uint64_t type metadata accessor for CornerSmallSemiboldClockComplicationFontDefinition()
{
  return objc_opt_self();
}

double sub_1909F6FCC(uint64_t a1, double (*a2)(void), void (*a3)(void), void (*a4)(void))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  double v16;
  int v17;
  double v20;
  int v22;
  int v23;
  int v24;
  uint64_t v27;

  v8 = sub_190A47440();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == *MEMORY[0x1E0CDD788]
    || v12 == *MEMORY[0x1E0CDD7A8]
    || v12 == *MEMORY[0x1E0CDD7B0]
    || v12 == *MEMORY[0x1E0CDD7B8])
  {
    a3();
    return v16;
  }
  v17 = v12;
  if (v12 == *MEMORY[0x1E0CDD7E8])
  {
    a4();
    return v16;
  }
  if (v12 == *MEMORY[0x1E0CDD790] || v12 == *MEMORY[0x1E0CDD7A0] || v12 == *MEMORY[0x1E0CDD7C0])
    return a2();
  v22 = *MEMORY[0x1E0CDD7E0];
  v23 = *MEMORY[0x1E0CDD7C8];
  v24 = *MEMORY[0x1E0CDD7D0];
  v20 = a2();
  if (v17 != v22 && v17 != v23 && v17 != v24)
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v20;
}

uint64_t type metadata accessor for CircularSemiboldClockComplicationFontDefinition()
{
  return objc_opt_self();
}

double sub_1909F7190(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  int v10;
  double v12;
  double v13;
  int v15;
  int v16;
  int v17;
  double v18;
  uint64_t v21;

  v2 = sub_190A47440();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E0CDD788]
    || v6 == *MEMORY[0x1E0CDD7A8]
    || v6 == *MEMORY[0x1E0CDD7B0]
    || v6 == *MEMORY[0x1E0CDD7B8])
  {
    goto LABEL_17;
  }
  v10 = v6;
  if (v6 == *MEMORY[0x1E0CDD7E8])
  {
LABEL_19:
    sub_190A4738C();
    return v12;
  }
  if (v6 == *MEMORY[0x1E0CDD790] || v6 == *MEMORY[0x1E0CDD7A0])
  {
LABEL_17:
    sub_190A473E0();
    return v12;
  }
  if (v6 == *MEMORY[0x1E0CDD7C0])
    goto LABEL_19;
  v15 = *MEMORY[0x1E0CDD7E0];
  v16 = *MEMORY[0x1E0CDD7C8];
  v17 = *MEMORY[0x1E0CDD7D0];
  sub_190A473E0();
  v13 = v18;
  if (v10 != v15 && v10 != v16 && v10 != v17)
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v13;
}

uint64_t type metadata accessor for RectangularSemiboldClockComplicationFontDefinition()
{
  return objc_opt_self();
}

uint64_t sub_1909F7344(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1909F7964(a2, a3 & 1);
}

uint64_t type metadata accessor for CornerMonoClockComplicationFontDefinition()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for CornerSmallMonoClockComplicationFontDefinition()
{
  return objc_opt_self();
}

unint64_t sub_1909F7394()
{
  uint64_t inited;
  void *v1;
  id v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190A4A350;
  v1 = (void *)*MEMORY[0x1E0CA8320];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CA8320];
  *(_QWORD *)(inited + 64) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
  *(_QWORD *)(inited + 40) = &unk_1E2CC9498;
  v2 = v1;
  return sub_1908DFEC8(inited);
}

uint64_t type metadata accessor for CircularMonoClockComplicationFontDefinition()
{
  return objc_opt_self();
}

id sub_1909F7430@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;

  v4 = *a1;
  sub_1908B3694((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  *a2 = v4;
  return v4;
}

uint64_t sub_1909F746C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _OWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void *i;
  _OWORD *v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  _OWORD v42[2];
  _OWORD v43[2];
  void *v44;
  _OWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v46 = a1;
  v47 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v48 = v8;
  v49 = 0;
  v50 = v11 & v9;
  v51 = a2;
  v52 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1909F7794((uint64_t)&v44);
  v12 = v44;
  if (!v44)
    goto LABEL_27;
  sub_190901E94(v45, v43);
  v13 = *(_QWORD **)a5;
  v15 = sub_1908D371C((uint64_t)v12);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v19 = v14;
  if (v13[3] >= v18)
  {
    if ((a4 & 1) != 0)
    {
      if ((v14 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_1908FD128();
      if ((v19 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v23 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(_QWORD *)(v23[6] + 8 * v15) = v12;
    sub_190901E94(v43, (_OWORD *)(v23[7] + 32 * v15));
    v24 = v23[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v23[2] = v26;
LABEL_16:
    sub_1909F7794((uint64_t)&v44);
    for (i = v44; v44; i = v44)
    {
      sub_190901E94(v45, v43);
      v29 = *(_QWORD **)a5;
      v31 = sub_1908D371C((uint64_t)i);
      v32 = v29[2];
      v33 = (v30 & 1) == 0;
      v34 = v32 + v33;
      if (__OFADD__(v32, v33))
        goto LABEL_28;
      v35 = v30;
      if (v29[3] < v34)
      {
        sub_1908F9644(v34, 1);
        v36 = sub_1908D371C((uint64_t)i);
        if ((v35 & 1) != (v37 & 1))
          goto LABEL_30;
        v31 = v36;
      }
      if ((v35 & 1) != 0)
      {
        sub_1908B3694((uint64_t)v43, (uint64_t)v42);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);

        v28 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v31);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
        sub_190901E94(v42, v28);
      }
      else
      {
        v38 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        *(_QWORD *)(v38[6] + 8 * v31) = i;
        sub_190901E94(v43, (_OWORD *)(v38[7] + 32 * v31));
        v39 = v38[2];
        v25 = __OFADD__(v39, 1);
        v40 = v39 + 1;
        if (v25)
          goto LABEL_29;
        v38[2] = v40;
      }
      sub_1909F7794((uint64_t)&v44);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1908BD134();
    return swift_release();
  }
  sub_1908F9644(v18, a4 & 1);
  v20 = sub_1908D371C((uint64_t)v12);
  if ((v19 & 1) == (v21 & 1))
  {
    v15 = v20;
    if ((v19 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_1908B3694((uint64_t)v43, (uint64_t)v42);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);

    v22 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    sub_190901E94(v42, v22);
    goto LABEL_16;
  }
LABEL_30:
  type metadata accessor for CFString(0);
  result = sub_190A48754();
  __break(1u);
  return result;
}

uint64_t sub_1909F7794@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  id v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  void (*v18)(_OWORD *);
  uint64_t result;
  _OWORD v20[2];
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v10);
    sub_1908B3694(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v24 + 8);
    *(_QWORD *)&v24[0] = v11;
    v12 = v11;
    goto LABEL_23;
  }
  v13 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v14 = (unint64_t)(v6 + 64) >> 6;
  if (v13 < v14)
  {
    v15 = *(_QWORD *)(v4 + 8 * v13);
    if (v15)
    {
LABEL_7:
      v9 = (v15 - 1) & v15;
      v10 = __clz(__rbit64(v15)) + (v13 << 6);
      v7 = v13;
      goto LABEL_3;
    }
    v16 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v14)
    {
      v15 = *(_QWORD *)(v4 + 8 * v16);
      if (v15)
      {
LABEL_10:
        v13 = v16;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v14)
      {
        v15 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v15)
        {
          v13 = v5 + 3;
          goto LABEL_7;
        }
        v16 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v14)
        {
          v15 = *(_QWORD *)(v4 + 8 * v16);
          if (v15)
            goto LABEL_10;
          v13 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v14)
          {
            v15 = *(_QWORD *)(v4 + 8 * v13);
            if (v15)
              goto LABEL_7;
            v7 = v14 - 1;
            v17 = v5 + 6;
            while (v14 != v17)
            {
              v15 = *(_QWORD *)(v4 + 8 * v17++);
              if (v15)
              {
                v13 = v17 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  v25 = 0;
  memset(v24, 0, sizeof(v24));
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v18 = (void (*)(_OWORD *))v1[5];
  result = sub_1909F8318((uint64_t)v24, (uint64_t)v22);
  if (*(_QWORD *)&v22[0])
  {
    v20[0] = v22[0];
    v20[1] = v22[1];
    v21 = v23;
    v18(v20);
    return sub_1908AA544((uint64_t)v20, &qword_1EE1EE7B0);
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1909F7964(uint64_t a1, char a2)
{
  uint64_t result;
  void *v4;
  void *v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  unint64_t v17;
  id v18;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v20[2];
  __int128 v21;
  uint64_t v22;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5B8);
  result = swift_initStackObject();
  *(_OWORD *)(result + 16) = xmmword_190A5A9B0;
  v4 = (void *)*MEMORY[0x1E0CA8400];
  *(_QWORD *)(result + 64) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(result + 32) = v4;
  *(_QWORD *)(result + 40) = 0x8000;
  v5 = (void *)*MEMORY[0x1E0CA8450];
  if (!*MEMORY[0x1E0CA8450])
  {
    __break(1u);
    goto LABEL_7;
  }
  v6 = (_QWORD *)result;
  *(_QWORD *)(result + 72) = v5;
  v7 = (void *)*MEMORY[0x1E0CA8420];
  if (!*MEMORY[0x1E0CA8420])
  {
LABEL_7:
    __break(1u);
    return result;
  }
  type metadata accessor for CFString(0);
  v6[10] = v7;
  v8 = (void *)*MEMORY[0x1E0CA84E8];
  v9 = (uint64_t *)MEMORY[0x1E0CA84D8];
  v6[13] = v10;
  v6[14] = v8;
  v11 = *v9;
  v12 = MEMORY[0x1E0DEF040];
  v6[18] = MEMORY[0x1E0DEF040];
  v6[15] = v11;
  v13 = v4;
  v14 = v8;
  v15 = v7;
  v16 = v5;
  v17 = sub_1908DFEC8((uint64_t)v6);
  if ((a2 & 1) == 0)
  {
    v22 = v12;
    *(_QWORD *)&v21 = sub_1909BC058();
    sub_190901E94(&v21, v20);
    v18 = v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1908FBEB0(v20, v18, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
  }
  return v17;
}

uint64_t sub_1909F7AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t result;
  BOOL v22;
  BOOL v25;
  char *v27;
  uint64_t v28;
  char *v29;

  v4 = sub_190A46EE8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v29 = (char *)&v28 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v28 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v28 - v14;
  v16 = sub_190A47440();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v19, v16);
  if (v20 == *MEMORY[0x1E0CDD788])
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v15, a2, v4);
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v15, v4);
    v22 = (_DWORD)result == *MEMORY[0x1E0CDB718] || (_DWORD)result == *MEMORY[0x1E0CDB720];
    if (!v22
      && (_DWORD)result != *MEMORY[0x1E0CDB728]
      && (_DWORD)result != *MEMORY[0x1E0CDB740]
      && (_DWORD)result != *MEMORY[0x1E0CDB730]
      && (_DWORD)result != *MEMORY[0x1E0CDB748]
      && (_DWORD)result != *MEMORY[0x1E0CDB758]
      && (_DWORD)result != *MEMORY[0x1E0CDB738]
      && (_DWORD)result != *MEMORY[0x1E0CDB750])
    {
      return (*(uint64_t (**)(char *, uint64_t, double))(v5 + 8))(v15, v4, 26.0);
    }
    return result;
  }
  if (v20 != *MEMORY[0x1E0CDD7A8] && v20 != *MEMORY[0x1E0CDD7B0] && v20 != *MEMORY[0x1E0CDD7B8])
  {
    v25 = v20 == *MEMORY[0x1E0CDD7E8] || v20 == *MEMORY[0x1E0CDD790];
    if (!v25 && v20 != *MEMORY[0x1E0CDD7A0])
    {
      if (v20 == *MEMORY[0x1E0CDD7C0])
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v13, a2, v4);
        result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v13, v4);
        if ((_DWORD)result != *MEMORY[0x1E0CDB718]
          && (_DWORD)result != *MEMORY[0x1E0CDB720]
          && (_DWORD)result != *MEMORY[0x1E0CDB728]
          && (_DWORD)result != *MEMORY[0x1E0CDB740]
          && (_DWORD)result != *MEMORY[0x1E0CDB730]
          && (_DWORD)result != *MEMORY[0x1E0CDB748]
          && (_DWORD)result != *MEMORY[0x1E0CDB758]
          && (_DWORD)result != *MEMORY[0x1E0CDB738]
          && (_DWORD)result != *MEMORY[0x1E0CDB750])
        {
          return (*(uint64_t (**)(char *, uint64_t, double))(v5 + 8))(v13, v4, 15.5);
        }
        return result;
      }
      if (v20 != *MEMORY[0x1E0CDD7E0])
      {
        if (v20 == *MEMORY[0x1E0CDD7C8])
        {
          v27 = v29;
          (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v29, a2, v4);
          result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v27, v4);
          if ((_DWORD)result != *MEMORY[0x1E0CDB718]
            && (_DWORD)result != *MEMORY[0x1E0CDB720]
            && (_DWORD)result != *MEMORY[0x1E0CDB728]
            && (_DWORD)result != *MEMORY[0x1E0CDB740]
            && (_DWORD)result != *MEMORY[0x1E0CDB730]
            && (_DWORD)result != *MEMORY[0x1E0CDB748]
            && (_DWORD)result != *MEMORY[0x1E0CDB758]
            && (_DWORD)result != *MEMORY[0x1E0CDB738]
            && (_DWORD)result != *MEMORY[0x1E0CDB750])
          {
            return (*(uint64_t (**)(char *, uint64_t, double))(v5 + 8))(v27, v4, 10.0);
          }
          return result;
        }
        if (v20 != *MEMORY[0x1E0CDD7D0])
          (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      }
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if ((_DWORD)result != *MEMORY[0x1E0CDB728]
    && (_DWORD)result != *MEMORY[0x1E0CDB740]
    && (_DWORD)result != *MEMORY[0x1E0CDB730]
    && (_DWORD)result != *MEMORY[0x1E0CDB748]
    && (_DWORD)result != *MEMORY[0x1E0CDB758]
    && (_DWORD)result != *MEMORY[0x1E0CDB738]
    && (_DWORD)result != *MEMORY[0x1E0CDB750])
  {
    return (*(uint64_t (**)(char *, uint64_t, double, double))(v5 + 8))(v8, v4, 1.1, 1.1);
  }
  return result;
}

double sub_1909F80FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  double v11;
  double v14;
  double v15;
  uint64_t v17;

  v2 = sub_190A47440();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190A46EE8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  v11 = 0.0;
  if (v10 != *MEMORY[0x1E0CDB718] && v10 != *MEMORY[0x1E0CDB720])
  {
    v11 = 16.0;
    if (v10 != *MEMORY[0x1E0CDB728])
    {
      if (v10 == *MEMORY[0x1E0CDB740])
      {
LABEL_15:
        v11 = 17.0;
        goto LABEL_16;
      }
      if (v10 != *MEMORY[0x1E0CDB730])
      {
        if (v10 == *MEMORY[0x1E0CDB748] || v10 == *MEMORY[0x1E0CDB758])
          goto LABEL_15;
        if (v10 != *MEMORY[0x1E0CDB738])
        {
          if (v10 != *MEMORY[0x1E0CDB750])
            (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
          goto LABEL_15;
        }
      }
    }
  }
LABEL_16:
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CDD7A0], v2);
  sub_1909F7AD0((uint64_t)v5, a1);
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v11 / v15;
}

uint64_t sub_1909F82D8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CFString(255);
    result = MEMORY[0x19401429C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1909F8318(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ActivityPreviewContext.subscript.getter@<X0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t AssociatedTypeWitness;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(_QWORD **__return_ptr, char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  int EnumCaseMultiPayload;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  int *v81;
  uint64_t v82;
  char *v83;
  char v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  int v97;
  __int128 v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int *v128;
  _QWORD *v129;
  _QWORD *v130;
  __int128 v131;
  uint64_t v132;

  v124 = a3;
  v125 = a4;
  v127 = a5;
  v128 = a1;
  v126 = type metadata accessor for ActivityPreviewContextKey();
  MEMORY[0x1E0C80A78](v126);
  v114 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v120);
  v109 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB998);
  MEMORY[0x1E0C80A78](v8);
  v119 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for WidgetDescriptor(0);
  v115 = *(_QWORD *)(v111 - 8);
  MEMORY[0x1E0C80A78](v111);
  v121 = (uint64_t)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  v12 = MEMORY[0x1E0C80A78](v11);
  v110 = (uint64_t)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v112 = (uint64_t)&v90 - v14;
  v113 = sub_190A46240();
  v15 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v17 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a2 + 16);
  v19 = *(_QWORD *)(a2 + 24);
  v122 = a2;
  v21 = type metadata accessor for ActivityViewContext(0, v18, v19, v20);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v90 - v23;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v26 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v28 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v26);
  v30 = MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v90 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v30);
  if ((int *)v126 != v128)
    return sub_190A46D2C();
  v102 = v19;
  v126 = v37;
  v117 = v35;
  v107 = v24;
  v118 = result;
  v100 = v17;
  v103 = v22;
  v99 = v15;
  v104 = v21;
  v108 = v18;
  v38 = v122;
  v39 = v123;
  v40 = (_QWORD *)xmmword_1ECF6D940;
  if (!(_QWORD)xmmword_1ECF6D940)
  {
    __break(1u);
    return result;
  }
  v105 = qword_1ECF6D950;
  v101 = v36;
  v41 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
  v116 = (char *)&v90 - v34;
  v42 = v108;
  v41((char *)&v90 - v34, v123, v108);
  v43 = v118;
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v117 + 16);
  v45 = v126;
  v44(v126, v39 + *(int *)(v38 + 36), v118);
  v46 = *(unsigned __int8 *)(v39 + *(int *)(v38 + 40));
  v41(v32, (uint64_t)v116, v42);
  v47 = v43;
  v48 = v105;
  v44((uint64_t)v28, v45, v47);
  v49 = v107;
  v50 = v102;
  sub_19093D994(0xD000000000000016, 0x8000000190A61DD0, (uint64_t)v32, (uint64_t)v28, v46, v42, v102, v107);
  v51 = *v40;
  v129 = v40;
  v52 = *(void (**)(_QWORD **__return_ptr, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
  v106 = v40;
  swift_retain();
  v52(&v130, v49, v42, v50, v51, v48);
  v97 = v46;
  v96 = v130;
  v98 = v131;
  v53 = v132;
  sub_190A45E2C();
  swift_allocObject();
  v54 = sub_190A45E20();
  v55 = sub_190A45E14();
  v95 = v56;
  swift_getAssociatedConformanceWitness();
  v57 = sub_190A45E14();
  v90 = v58;
  v91 = v57;
  v92 = v54;
  v93 = v55;
  v94 = v53;
  v130 = v106;
  v59 = (*(uint64_t (**)(uint64_t))(v105 + 64))(v51);
  sub_190A46234();
  v60 = *(_QWORD *)(v59 + 16);
  if (!v60)
  {
    v74 = 1;
    v75 = v114;
    v62 = v113;
LABEL_22:
    v76 = v112;
    goto LABEL_25;
  }
  v61 = v59 + ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80));
  v105 = *(_QWORD *)(v115 + 72);
  v102 = v59;
  swift_bridgeObjectRetain();
  v62 = v113;
  v63 = v99;
  v64 = (uint64_t)v109;
  v65 = v121;
  while (1)
  {
    sub_1908AF5D8(v61, v65, type metadata accessor for WidgetDescriptor);
    sub_1908AF5D8(v65, v64, type metadata accessor for ViewSource);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
        swift_release();
        swift_release();
        v68 = (uint64_t)v119;
        (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v119, v64, v62);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v68, 0, 1, v62);
      }
      else
      {
        v68 = (uint64_t)v119;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v119, 1, 1, v62);
        sub_1908B5150(v64, type metadata accessor for ViewSource);
      }
    }
    else
    {
      sub_1908B5150(v64, type metadata accessor for ViewSource);
      v68 = (uint64_t)v119;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v119, 1, 1, v62);
    }
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v68, 1, v62) == 1)
    {
      sub_1908AA544(v68, &qword_1EE1EB998);
      sub_190A46210();
LABEL_19:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    v69 = sub_190A46210();
    v71 = v70;
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v68, v62);
    v72 = sub_190A46210();
    if (!v71)
      goto LABEL_19;
    if (v69 == v72 && v71 == v73)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_24;
    }
    v66 = sub_190A486DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v66 & 1) != 0)
      break;
LABEL_7:
    v65 = v121;
    sub_1908B5150(v121, type metadata accessor for WidgetDescriptor);
    v61 += v105;
    if (!--v60)
    {
      swift_bridgeObjectRelease();
      v74 = 1;
      v75 = v114;
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease();
LABEL_24:
  v76 = v112;
  sub_190906900(v121, v112);
  v74 = 0;
  v75 = v114;
LABEL_25:
  v77 = v111;
  v78 = v115;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v115 + 56))(v76, v74, 1, v111);
  swift_bridgeObjectRelease();
  v79 = v110;
  sub_1908AAA48(v76, v110, &qword_1ECF6C788);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v79, 1, v77) == 1)
  {
    sub_1908AA544(v79, &qword_1ECF6C788);
    v80 = &unk_1E2CC6F48;
  }
  else
  {
    v80 = *(void **)(v79 + *(int *)(v77 + 32));
    swift_bridgeObjectRetain();
    sub_1908B5150(v79, type metadata accessor for WidgetDescriptor);
  }
  swift_release();
  swift_release();
  sub_1908AA544(v76, &qword_1ECF6C788);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v107, v104);
  (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v126, v118);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v116, v108);
  v81 = v128;
  v82 = v99;
  v83 = v100;
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))(&v75[v128[5]], v100, v62);
  v84 = *(_BYTE *)(v123 + *(int *)(v122 + 44));
  *(_QWORD *)v75 = v96;
  *(_OWORD *)(v75 + 8) = v98;
  *((_QWORD *)v75 + 3) = v94;
  v85 = v81[7];
  v86 = (uint64_t *)&v75[v81[6]];
  *v86 = v93;
  v86[1] = v95;
  v87 = (uint64_t *)&v75[v85];
  v88 = v90;
  *v87 = v91;
  v87[1] = v88;
  v89 = v81[9];
  v75[v81[8]] = v97;
  v75[v89] = v84;
  *(_QWORD *)&v75[v81[10]] = v80;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v62);
  swift_getAssociatedTypeWitness();
  return swift_dynamicCast();
}

uint64_t type metadata accessor for ActivityPreviewContextKey()
{
  uint64_t result;

  result = qword_1EE1EE868;
  if (!qword_1EE1EE868)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1909F8EC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t result;

  v12 = *a4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a7, a1, a5);
  v14 = (int *)type metadata accessor for ActivityPreviewContext(0, a5, a6, v13);
  v15 = a7 + v14[9];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v15, a2, AssociatedTypeWitness);
  *(_BYTE *)(a7 + v14[10]) = a3;
  *(_BYTE *)(a7 + v14[11]) = v12;
  return result;
}

uint64_t sub_1909F8F8C@<X0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return ActivityPreviewContext.subscript.getter(a1, a4, a2, a3, a5);
}

uint64_t ActivityPreviewContentCategory.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_190A484F0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

unint64_t ActivityPreviewContentCategory.rawValue.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_1909F9010()
{
  sub_190A487C0();
  sub_190A47B18();
  return sub_190A48808();
}

uint64_t sub_1909F9064()
{
  return sub_190A47B18();
}

uint64_t sub_1909F9080()
{
  sub_190A487C0();
  sub_190A47B18();
  return sub_190A48808();
}

uint64_t sub_1909F90D0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_190A484F0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1909F9120(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000021;
  a1[1] = 0x8000000190A5FF20;
}

uint64_t sub_1909F9140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE7D0);
  __swift_allocate_value_buffer(v0, qword_1EE1EE7B8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE1EE7B8);
  v2 = type metadata accessor for ActivityPreviewContextKey();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t static ActivityPreviewContextKey.defaultValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EE1EC560 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE7D0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE1EE7B8);
  swift_beginAccess();
  return sub_1908AAA48(v3, a1, &qword_1EE1EE7D0);
}

uint64_t static ActivityPreviewContextKey.defaultValue.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EE1EC560 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE7D0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE1EE7B8);
  swift_beginAccess();
  sub_1909F92E0(a1, v3);
  swift_endAccess();
  return sub_1908AA544(a1, &qword_1EE1EE7D0);
}

uint64_t sub_1909F92E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE7D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t (*static ActivityPreviewContextKey.defaultValue.modify())()
{
  uint64_t v0;

  if (qword_1EE1EC560 != -1)
    swift_once();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE7D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE1EE7B8);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ActivityPreviewContextKey.viewSource.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_QWORD *)(a1 + 24) = v2;
  swift_retain();
  return swift_retain();
}

uint64_t ActivityPreviewContextKey.attributesType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ActivityPreviewContextKey() + 20);
  v4 = sub_190A46240();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ActivityPreviewContextKey.attributesData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for ActivityPreviewContextKey() + 24);
  v2 = *(_QWORD *)v1;
  sub_1908B53B8(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t ActivityPreviewContextKey.contentStatePayload.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for ActivityPreviewContextKey() + 28);
  v2 = *(_QWORD *)v1;
  sub_1908B53B8(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t ActivityPreviewContextKey.isStale.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActivityPreviewContextKey() + 32));
}

uint64_t ActivityPreviewContextKey.viewKind.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ActivityPreviewContextKey();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

unint64_t ActivityPreviewContextKey.contentCategory.getter()
{
  return 0xD000000000000021;
}

uint64_t ActivityPreviewContextKey.previewContentCategory.getter()
{
  return sub_190A46480();
}

uint64_t ActivityPreviewContextKey.supportedFamilies.getter()
{
  type metadata accessor for ActivityPreviewContextKey();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1909F9550@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EE1EC560 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE7D0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE1EE7B8);
  swift_beginAccess();
  return sub_1908AAA48(v3, a1, &qword_1EE1EE7D0);
}

BOOL static ActivityPreviewViewKind.DynamicIslandPreviewViewState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ActivityPreviewViewKind.DynamicIslandPreviewViewState.hash(into:)()
{
  return sub_190A487CC();
}

uint64_t ActivityPreviewViewKind.DynamicIslandPreviewViewState.hashValue.getter()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t ActivityAttributes.previewContext(_:isStale:viewKind:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, _BYTE *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v25 = a1;
  v26 = a2;
  v27 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v13 = (char *)&v22 - v12;
  v14 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ActivityPreviewContext(0, a4, a5, v17);
  v23 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v22 - v19;
  LOBYTE(a3) = *a3;
  v29 = sub_190A47650();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v24, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v25, AssociatedTypeWitness);
  v28 = (char)a3;
  sub_1909F8EC8((uint64_t)v16, (uint64_t)v13, v26, &v28, a4, a5, (uint64_t)v20);
  MEMORY[0x19401429C](&protocol conformance descriptor for ActivityPreviewContext<A>, v18);
  sub_190A4753C();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v18);
  return swift_release();
}

uint64_t type metadata accessor for ActivityPreviewContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActivityPreviewContext);
}

unint64_t sub_1909F9830()
{
  unint64_t result;

  result = qword_1EE1EE7D8;
  if (!qword_1EE1EE7D8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ActivityPreviewContentCategory, &type metadata for ActivityPreviewContentCategory);
    atomic_store(result, (unint64_t *)&qword_1EE1EE7D8);
  }
  return result;
}

unint64_t sub_1909F9878()
{
  unint64_t result;

  result = qword_1EE1EE7E0[0];
  if (!qword_1EE1EE7E0[0])
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ActivityPreviewViewKind.DynamicIslandPreviewViewState, &type metadata for ActivityPreviewViewKind.DynamicIslandPreviewViewState);
    atomic_store(result, qword_1EE1EE7E0);
  }
  return result;
}

uint64_t sub_1909F98BC()
{
  uint64_t AssociatedTypeWitness;
  unint64_t v1;
  unint64_t v2;

  AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_1909F9978(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _BYTE *v22;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (v7 + v10) & ~v10;
  v13 = *(_QWORD *)(v9 + 64);
  v14 = v13 + v12 + 2;
  v15 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v9 + 80));
  if (v15 > 7 || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0 || v14 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  else
  {
    v19 = AssociatedTypeWitness;
    v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v21 = ((unint64_t)a2 + v11) & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v20, v21, v19);
    v22 = (_BYTE *)((((unint64_t)a1 + v11) & v20) + v13);
    *v22 = *(_BYTE *)(v21 + v13);
    v22[1] = *(_BYTE *)(v21 + v13 + 1);
  }
  return a1;
}

uint64_t sub_1909F9A98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(a1, *(_QWORD *)(a2 + 16));
  v4 = *(_QWORD *)(v3 + 64) + a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))((v4 + *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80), AssociatedTypeWitness);
}

uint64_t sub_1909F9B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10, v11, AssociatedTypeWitness);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = (_BYTE *)(v10 + v12);
  v14 = (_BYTE *)(v11 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  return a1;
}

uint64_t sub_1909F9BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 24))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v10, v11, AssociatedTypeWitness);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = (_BYTE *)(v10 + v12);
  v14 = (_BYTE *)(v11 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  return a1;
}

uint64_t sub_1909F9C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10, v11, AssociatedTypeWitness);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = (_BYTE *)(v10 + v12);
  v14 = (_BYTE *)(v11 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  return a1;
}

uint64_t sub_1909F9D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 40))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v10, v11, AssociatedTypeWitness);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = (_BYTE *)(v10 + v12);
  v14 = (_BYTE *)(v11 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  return a1;
}

uint64_t sub_1909F9E04(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  unsigned int v25;
  int v26;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (v11 <= 0xFE)
    v11 = 254;
  if (!a2)
    return 0;
  v12 = AssociatedTypeWitness;
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = *(_QWORD *)(v6 + 64) + v13;
  v15 = *(_QWORD *)(v9 + 64);
  if (a2 <= v11)
    goto LABEL_25;
  v16 = v15 + (v14 & ~v13) + 2;
  v17 = 8 * v16;
  if (v16 > 3)
    goto LABEL_9;
  v19 = ((a2 - v11 + ~(-1 << v17)) >> v17) + 1;
  if (HIWORD(v19))
  {
    v18 = *(_DWORD *)(a1 + v16);
    if (v18)
      goto LABEL_16;
  }
  else
  {
    if (v19 <= 0xFF)
    {
      if (v19 < 2)
        goto LABEL_25;
LABEL_9:
      v18 = *(unsigned __int8 *)(a1 + v16);
      if (!*(_BYTE *)(a1 + v16))
        goto LABEL_25;
LABEL_16:
      v20 = (v18 - 1) << v17;
      if (v16 > 3)
        v20 = 0;
      if ((_DWORD)v15 + (v14 & ~(_DWORD)v13) != -2)
      {
        if (v16 <= 3)
          v21 = v15 + (v14 & ~(_DWORD)v13) + 2;
        else
          v21 = 4;
        __asm { BR              X12 }
      }
      v26 = v11 + v20;
      return (v26 + 1);
    }
    v18 = *(unsigned __int16 *)(a1 + v16);
    if (*(_WORD *)(a1 + v16))
      goto LABEL_16;
  }
LABEL_25:
  if ((_DWORD)v7 == v11)
  {
    v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    v23 = a1;
    v10 = v7;
    v12 = v5;
    return v22(v23, v10, v12);
  }
  v23 = (v14 + a1) & ~v13;
  if ((_DWORD)v10 == v11)
  {
    v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    return v22(v23, v10, v12);
  }
  v25 = *(unsigned __int8 *)(v23 + v15);
  if (v25 < 2)
    return 0;
  v26 = (v25 + 2147483646) & 0x7FFFFFFF;
  return (v26 + 1);
}

void sub_1909F9FE0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  size_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= 0xFE)
    v11 = 254;
  else
    v11 = v10;
  v12 = *(_QWORD *)(v9 + 64)
      + ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + 2;
  if (a3 <= v11)
  {
    v13 = 0u;
  }
  else if (v12 <= 3)
  {
    v15 = ((a3 - v11 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (v11 < a2)
  {
    v14 = ~v11 + a2;
    if (v12 < 4)
    {
      if (*(_DWORD *)(v9 + 64)
         + ((*(_DWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~*(unsigned __int8 *)(v9 + 80)) != -2)
      {
        v16 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X15 }
}

uint64_t storeEnumTagSinglePayload for ActivityPreviewContentCategory(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1909FA278 + 4 * byte_190A5ADAE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1909FA298 + 4 * byte_190A5ADB3[v4]))();
}

_BYTE *sub_1909FA278(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1909FA298(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1909FA2A0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1909FA2A8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1909FA2B0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1909FA2B8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ActivityPreviewContentCategory()
{
  return &type metadata for ActivityPreviewContentCategory;
}

uint64_t initializeBufferWithCopyOfBuffer for ActivityPreviewContextKey(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = v5;
    v8 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a3[5];
    v10 = a1 + v9;
    v11 = (uint64_t)a2 + v9;
    v12 = sub_190A46240();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_retain();
    swift_retain();
    v13(v10, v11, v12);
    v14 = a3[6];
    v15 = (uint64_t *)(a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = *v16;
    v18 = v16[1];
    sub_1908B53B8(*v16, v18);
    *v15 = v17;
    v15[1] = v18;
    v19 = a3[7];
    v20 = (uint64_t *)(a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = *v21;
    v23 = v21[1];
    sub_1908B53B8(*v21, v23);
    *v20 = v22;
    v20[1] = v23;
    v24 = a3[9];
    *(_BYTE *)(a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *(_BYTE *)(a1 + v24) = *((_BYTE *)a2 + v24);
    *(_QWORD *)(a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ActivityPreviewContextKey(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_release();
  v4 = a1 + a2[5];
  v5 = sub_190A46240();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_1908B53FC(*(_QWORD *)(a1 + a2[6]), *(_QWORD *)(a1 + a2[6] + 8));
  sub_1908B53FC(*(_QWORD *)(a1 + a2[7]), *(_QWORD *)(a1 + a2[7] + 8));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActivityPreviewContextKey(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_190A46240();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain();
  swift_retain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (uint64_t *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v15 = *v14;
  v16 = v14[1];
  sub_1908B53B8(*v14, v16);
  *v13 = v15;
  v13[1] = v16;
  v17 = a3[7];
  v18 = (uint64_t *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v20 = *v19;
  v21 = v19[1];
  sub_1908B53B8(*v19, v21);
  *v18 = v20;
  v18[1] = v21;
  v22 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ActivityPreviewContextKey(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_retain();
  swift_release();
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_190A46240();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = a3[6];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = *v14;
  v16 = v14[1];
  sub_1908B53B8(*v14, v16);
  v17 = *v13;
  v18 = v13[1];
  *v13 = v15;
  v13[1] = v16;
  sub_1908B53FC(v17, v18);
  v19 = a3[7];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = *v21;
  v23 = v21[1];
  sub_1908B53B8(*v21, v23);
  v24 = *v20;
  v25 = v20[1];
  *v20 = v22;
  v20[1] = v23;
  sub_1908B53FC(v24, v25);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ActivityPreviewContextKey(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_190A46240();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  v12 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  return a1;
}

_OWORD *assignWithTake for ActivityPreviewContextKey(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_190A46240();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = *(_QWORD *)((char *)a1 + v10);
  v12 = *(_QWORD *)((char *)a1 + v10 + 8);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  sub_1908B53FC(v11, v12);
  v13 = a3[7];
  v14 = *(_QWORD *)((char *)a1 + v13);
  v15 = *(_QWORD *)((char *)a1 + v13 + 8);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  sub_1908B53FC(v14, v15);
  v16 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v16) = *((_BYTE *)a2 + v16);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityPreviewContextKey()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909FA838(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_190A46240();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ActivityPreviewContextKey()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1909FA8C0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_190A46240();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1909FA934()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190A46240();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityPreviewViewKind(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    v7 = v6 >= 3;
    v8 = v6 - 3;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1909FAA24 + 4 * byte_190A5ADB8[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for ActivityPreviewViewKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1909FAACC + 4 * byte_190A5ADC2[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1909FAB00 + 4 * byte_190A5ADBD[v5]))();
}

uint64_t sub_1909FAB00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909FAB08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909FAB10);
  return result;
}

uint64_t sub_1909FAB1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909FAB24);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1909FAB28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909FAB30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909FAB3C(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

_BYTE *sub_1909FAB50(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

ValueMetadata *type metadata accessor for ActivityPreviewViewKind()
{
  return &type metadata for ActivityPreviewViewKind;
}

uint64_t storeEnumTagSinglePayload for ActivityPreviewViewKind.DynamicIslandPreviewViewState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1909FABBC + 4 * byte_190A5ADCC[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1909FABF0 + 4 * byte_190A5ADC7[v4]))();
}

uint64_t sub_1909FABF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909FABF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909FAC00);
  return result;
}

uint64_t sub_1909FAC0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909FAC14);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1909FAC18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909FAC20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityPreviewViewKind.DynamicIslandPreviewViewState()
{
  return &type metadata for ActivityPreviewViewKind.DynamicIslandPreviewViewState;
}

unint64_t sub_1909FAC40()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1EE1EE878;
  if (!qword_1EE1EE878)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EE880);
    v2 = sub_1909FACAC();
    v3[0] = MEMORY[0x1E0CDF5B0];
    v3[1] = v2;
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EE1EE878);
  }
  return result;
}

unint64_t sub_1909FACAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EE888;
  if (!qword_1EE1EE888)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE1EE890);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDBEF0], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EE888);
  }
  return result;
}

uint64_t sub_1909FACF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 24) + *(_QWORD *)(a4 + 24));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1908C5090;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1909FAD80(char a1, uint64_t a2, uint64_t a3)
{
  char v4;

  v4 = a1;
  return MEMORY[0x194012838](&v4, a2, &type metadata for ExtractionViewModifier, a3);
}

double sub_1909FADB0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  _OWORD v21[2];
  uint64_t v22;
  uint64_t v23;

  v8 = sub_190A46C30();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v10);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A46FD8();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, a3);
  sub_190A46FE4();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
  sub_190A46FA8();
  sub_190A46FCC();
  sub_190904FB0();
  sub_190A46FB4();
  v21[0] = v21[1];
  v16 = v22;
  v17 = v23;
  LOBYTE(a3) = sub_190A46FC0();
  swift_release();
  v18 = type metadata accessor for ExtractedControlValueMetadata(0);
  v19 = a4 + *(int *)(v18 + 20);
  result = *(double *)v21;
  *(_OWORD *)v19 = v21[0];
  *(_QWORD *)(v19 + 16) = v16;
  *(_QWORD *)(v19 + 24) = v17;
  *(_BYTE *)(a4 + *(int *)(v18 + 24)) = a3 & 1;
  return result;
}

uint64_t type metadata accessor for ExtractedControlValueMetadata(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1EE1EE8A0);
}

uint64_t sub_1909FAF34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;

  v8 = sub_190A46C30();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A46FD8();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, a3);
  sub_190A46FE4();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
  sub_190A46FA8();
  sub_190A46FCC();
  LOBYTE(a3) = sub_190A46FC0();
  swift_release();
  result = type metadata accessor for ExtractedControlMetadata(0);
  *(_BYTE *)(a4 + *(int *)(result + 20)) = a3 & 1;
  return result;
}

uint64_t type metadata accessor for ExtractedControlMetadata(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1EE1EE8B0);
}

_QWORD *sub_1909FB078(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_190A47284();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = v11[3];
    v10[2] = v11[2];
    v10[3] = v13;
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1909FB124(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_190A47284();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1909FB174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_190A47284();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = v10[3];
  v9[2] = v10[2];
  v9[3] = v12;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1909FB1F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v6 = sub_190A47284();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = *(_QWORD *)(v9 + 16);
  v8[3] = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1909FB2A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;

  v6 = sub_190A47284();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t sub_1909FB310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_190A47284();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  v8[2] = *(_QWORD *)(v9 + 16);
  v8[3] = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1909FB3A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909FB3AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_190A47284();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1909FB438()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909FB444(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_190A47284();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_1909FB4C0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190A47284();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ExtractionViewModifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1909FB588 + 4 * byte_190A5B0C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1909FB5BC + 4 * byte_190A5B0C0[v4]))();
}

uint64_t sub_1909FB5BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909FB5C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909FB5CCLL);
  return result;
}

uint64_t sub_1909FB5D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909FB5E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1909FB5E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909FB5EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExtractionViewModifier()
{
  return &type metadata for ExtractionViewModifier;
}

_QWORD *sub_1909FB608(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_190A47284();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1909FB690(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_190A47284();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1909FB6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_190A47284();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1909FB720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_190A47284();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1909FB77C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_190A47284();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1909FB7D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_190A47284();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1909FB834()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909FB840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_190A47284();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1909FB8CC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909FB8D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_190A47284();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_1909FB950()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190A47284();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1909FB9C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1909FB9D0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t KeyPath;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;

  v25 = a2;
  v23 = a1;
  v24 = a3;
  v22 = sub_190A47950();
  v3 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190A47968();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_190A469A8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE8C0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A4795C();
  sub_190A47944();
  sub_1909FBBE8();
  sub_190A4696C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v22);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  KeyPath = swift_getKeyPath();
  v18 = (uint64_t *)&v16[*(int *)(v14 + 36)];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB648);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v18 + *(int *)(v19 + 28), v13, v10);
  *v18 = KeyPath;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE8D0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v16, v23, v20);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1909FBC38();
  sub_190A47560();
  return sub_1909FBCD4((uint64_t)v16);
}

uint64_t sub_1909FBBE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 *v2;

  return sub_1909FB9D0(a1, *v2, a2);
}

unint64_t sub_1909FBBE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EE8C8;
  if (!qword_1EE1EE8C8)
  {
    v1 = sub_190A47968();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CE85C8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EE8C8);
  }
  return result;
}

unint64_t sub_1909FBC38()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EE8D8;
  if (!qword_1EE1EE8D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EE8C0);
    v2[0] = sub_1908AF598((unint64_t *)&unk_1EE1EE8E0, &qword_1EE1EE8D0, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1908AF598(&qword_1EE1EB640, &qword_1EE1EB648, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EE8D8);
  }
  return result;
}

uint64_t sub_1909FBCD4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE8C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1909FBD14()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EE8C0);
  sub_1909FBC38();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1909FBD60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1909FBD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t sub_1909FBD90(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_1909FBD98@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  char *v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t result;
  __int128 v26;
  _OWORD *v27;
  __int128 v28;
  id v29;
  uint64_t v30;
  _OWORD *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _OWORD v39[2];

  v31 = a4;
  v34 = a3;
  v32 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v32);
  v7 = (__int128 *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WidgetDescriptor(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a1;
  v15 = objc_msgSend(a1, sel_kind);
  v16 = sub_190A47ADC();
  v18 = v17;

  sub_1909FC3E8(v16, v18, a2, v34, (uint64_t)v10);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    v19 = &qword_1ECF6C788;
    v20 = v10;
  }
  else
  {
    sub_190906900((uint64_t)v10, (uint64_t)v14);
    sub_1908AF5D8((uint64_t)v14, (uint64_t)v7, type metadata accessor for ViewSource);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
        swift_release();
        swift_release();
        v22 = sub_190A46240();
        v35 = 0u;
        v36 = 0u;
        v37 = 0u;
        v38 = 0u;
        memset(v39, 0, 25);
        (*(void (**)(__int128 *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v7, v22);
      }
      else
      {
        v23 = v7[3];
        v37 = v7[2];
        v38 = v23;
        v39[0] = v7[4];
        *(_OWORD *)((char *)v39 + 9) = *(__int128 *)((char *)v7 + 73);
        v24 = v7[1];
        v35 = *v7;
        v36 = v24;
      }
    }
    else
    {
      sub_1908B5150((uint64_t)v7, type metadata accessor for ViewSource);
      v35 = 0u;
      v36 = 0u;
      v37 = 0u;
      v38 = 0u;
      memset(v39, 0, 25);
    }
    result = sub_1908B5150((uint64_t)v14, type metadata accessor for WidgetDescriptor);
    if (*((_QWORD *)&v35 + 1))
    {
      v26 = v38;
      v27 = v31;
      v31[2] = v37;
      v27[3] = v26;
      v27[4] = v39[0];
      *(_OWORD *)((char *)v27 + 73) = *(_OWORD *)((char *)v39 + 9);
      v28 = v36;
      *v27 = v35;
      v27[1] = v28;
      return result;
    }
    v19 = &qword_1EE1EE318;
    v20 = (char *)&v35;
  }
  sub_1908AA544((uint64_t)v20, v19);
  v29 = objc_msgSend(v33, sel_kind);
  sub_190A47ADC();

  sub_1909FCEA0();
  swift_bridgeObjectRelease();
  return swift_willThrow();
}

uint64_t sub_1909FC090()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v18;
  id v19[4];

  v1 = v0;
  v19[3] = *(id *)MEMORY[0x1E0C80C00];
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D50]), sel_init);
  v19[0] = v2;

  v18 = v19[0];
  v3 = v19[0];

  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v4 = sub_190A465A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ECF6D988);
  v5 = sub_190A46588();
  v6 = sub_190A47F68();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (void *)swift_slowAlloc();
    v19[0] = v8;
    *(_DWORD *)v7 = 136315138;
    swift_beginAccess();
    v9 = objc_msgSend(v18, sel_base64EncodedStringWithOptions_, 0);
    v10 = sub_190A47ADC();
    v12 = v11;

    sub_1908B35C4(v10, v12, (uint64_t *)v19);
    sub_190A48178();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v5, v6, "Locale token: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v8, -1, -1);
    MEMORY[0x194014398](v7, -1, -1);
  }

  swift_beginAccess();
  v13 = v18;
  v14 = sub_190A46000();
  v16 = v15;

  *(_QWORD *)(v1 + 16) = v14;
  *(_QWORD *)(v1 + 24) = v16;

  return v1;
}

uint64_t sub_1909FC30C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  v7 = a1;
  v8 = sub_1909FCC6C(v6, a1);
  swift_bridgeObjectRelease();

  v9 = *(_QWORD *)(v8 + 16);
  v10 = type metadata accessor for WidgetDescriptor(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (v9)
  {
    sub_1908AF5D8(v8 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), a4, type metadata accessor for WidgetDescriptor);
    v12 = 0;
  }
  else
  {
    v12 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a4, v12, 1, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1909FC3DC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1909FC30C(a1, a2, (uint64_t)&off_1E2CC0850, a3);
}

uint64_t sub_1909FC3E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  _OWORD *v30;
  __int128 v31;
  __int128 v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t (*v39)(uint64_t, unint64_t);
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  unint64_t v56;
  _BYTE v57[48];

  v51 = a1;
  v9 = type metadata accessor for ViewSource(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v46 - v13;
  v49 = type metadata accessor for WidgetDescriptor(0);
  v15 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  v19 = *(_QWORD *)(v18 + 16);
  if (!v19)
  {
    v43 = 1;
    v44 = v49;
    goto LABEL_24;
  }
  v47 = v15;
  v48 = a5;
  v20 = v18 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v21 = *(_QWORD *)(v15 + 72);
  v46 = v18;
  swift_bridgeObjectRetain();
  v50 = v9;
  do
  {
    sub_1908AF5D8(v20, (uint64_t)v17, type metadata accessor for WidgetDescriptor);
    sub_1908AF5D8((uint64_t)v17, (uint64_t)v14, type metadata accessor for ViewSource);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
        swift_release();
        swift_release();
        v24 = sub_190A46240();
        v54 = 0u;
        v55 = 0u;
        v56 = 0;
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v14, v24);
        if (!*((_QWORD *)&v55 + 1))
        {
          sub_1908AA544((uint64_t)&v54, &qword_1EE1EE310);
          goto LABEL_4;
        }
      }
      else
      {
        *((_QWORD *)&v55 + 1) = &type metadata for ControlViewSource;
        v56 = sub_1909CD6CC();
        v30 = (_OWORD *)swift_allocObject();
        *(_QWORD *)&v54 = v30;
        v31 = *((_OWORD *)v14 + 3);
        v30[3] = *((_OWORD *)v14 + 2);
        v30[4] = v31;
        v30[5] = *((_OWORD *)v14 + 4);
        *(_OWORD *)((char *)v30 + 89) = *(_OWORD *)(v14 + 73);
        v32 = *((_OWORD *)v14 + 1);
        v30[1] = *(_OWORD *)v14;
        v30[2] = v32;
      }
    }
    else
    {
      v25 = *(_OWORD *)v14;
      v52 = *((_OWORD *)v14 + 1);
      v53 = v25;
      v26 = *((_QWORD *)v14 + 4);
      v27 = *((_QWORD *)v14 + 5);
      *((_QWORD *)&v55 + 1) = &type metadata for TimelineViewSource;
      v56 = sub_1909CD758();
      v28 = swift_allocObject();
      *(_QWORD *)&v54 = v28;
      v29 = v52;
      *(_OWORD *)(v28 + 16) = v53;
      *(_OWORD *)(v28 + 32) = v29;
      *(_QWORD *)(v28 + 48) = v26;
      *(_QWORD *)(v28 + 56) = v27;
      *(_OWORD *)(v28 + 64) = *((_OWORD *)v14 + 3);
    }
    sub_1908B4BBC(&v54, (uint64_t)v57);
    sub_1908AF5D8((uint64_t)v17, (uint64_t)v12, type metadata accessor for ViewSource);
    v33 = swift_getEnumCaseMultiPayload();
    if (!v33)
    {
      sub_1908B5150((uint64_t)v12, type metadata accessor for ViewSource);
      goto LABEL_15;
    }
    if (v33 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
      swift_release();
      swift_release();
      v34 = sub_190A46240();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v12, v34);
LABEL_15:
      sub_1908BBDC8((uint64_t)v57, (uint64_t)&v54);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
      goto LABEL_4;
    }
    v35 = v21;
    sub_1908B5150((uint64_t)v12, type metadata accessor for ViewSource);
    sub_1908BBDC8((uint64_t)v57, (uint64_t)&v54);
    v36 = a2;
    v37 = *((_QWORD *)&v55 + 1);
    v38 = v56;
    __swift_project_boxed_opaque_existential_1(&v54, *((uint64_t *)&v55 + 1));
    v39 = *(uint64_t (**)(uint64_t, unint64_t))(v38 + 16);
    v40 = v38;
    a2 = v36;
    v41 = v39(v37, v40);
    if (v41 == v51 && v42 == v36)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
LABEL_20:
      swift_bridgeObjectRelease();
      a5 = v48;
      sub_190906900((uint64_t)v17, v48);
      v43 = 0;
      goto LABEL_22;
    }
    v22 = sub_190A486DC();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
    v21 = v35;
    if ((v22 & 1) != 0)
      goto LABEL_20;
LABEL_4:
    sub_1908B5150((uint64_t)v17, type metadata accessor for WidgetDescriptor);
    v20 += v21;
    --v19;
  }
  while (v19);
  swift_bridgeObjectRelease();
  v43 = 1;
  a5 = v48;
LABEL_22:
  v44 = v49;
  v15 = v47;
LABEL_24:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a5, v43, 1, v44);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1909FC858@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1909FC30C(a1, a2, (uint64_t)&off_1E2CC0750, a3);
}

uint64_t sub_1909FC864@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 v47;
  uint64_t v48;

  v7 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v10 = (_QWORD *)((char *)v37 - v9);
  if (!a2)
    goto LABEL_29;
  sub_1908AF5D8(a1, (uint64_t)v37 - v9, type metadata accessor for ViewSource);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1908B5150((uint64_t)v10, type metadata accessor for ViewSource);
LABEL_29:
    v35 = type metadata accessor for WidgetDescriptor(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a3, 1, 1, v35);
  }
  v12 = *v10;
  v11 = v10[1];
  v13 = v10[4];
  v14 = v10[5];
  v44 = v10[3];
  v45 = v13;
  v46 = v10[7];
  v43 = a2;
  v15 = objc_msgSend(v43, sel_kind);
  v16 = sub_190A47ADC();
  v18 = v17;

  if (v12 == v16 && v11 == v18)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1908B467C(v45);

LABEL_28:
      swift_release();
      goto LABEL_29;
    }
  }
  v41 = v11;
  v40 = type metadata accessor for WidgetDescriptor(0);
  v21 = *(int *)(v40 + 28);
  v42 = a1;
  v22 = *(_QWORD *)(a1 + v21);
  v23 = *(_QWORD *)(v22 + 16);
  v24 = MEMORY[0x1E0DEE9D8];
  if (v23)
  {
    v37[1] = v14;
    v38 = a3;
    v39 = v3;
    v48 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1908B8DD4(0, v23, 0);
    v25 = 0;
    v24 = v48;
    while (1)
    {
      v26 = *(unsigned __int8 *)(v22 + v25 + 32);
      if (v26 >= 0xD || ((0x13BFu >> v26) & 1) == 0)
        goto LABEL_31;
      v27 = byte_190A5B2D8[(char)v26];
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v48 = v24;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1908B8DD4(0, *(_QWORD *)(v24 + 16) + 1, 1);
        v24 = v48;
      }
      v30 = *(_QWORD *)(v24 + 16);
      v29 = *(_QWORD *)(v24 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1908B8DD4(v29 > 1, v30 + 1, 1);
        v24 = v48;
      }
      ++v25;
      *(_QWORD *)(v24 + 16) = v30 + 1;
      *(_BYTE *)(v24 + v30 + 32) = v27;
      if (v23 == v25)
      {
        swift_bridgeObjectRelease();
        a3 = v38;
        break;
      }
    }
  }
  v31 = v43;
  InternalWidgetFamily.init(_:)((uint64_t)objc_msgSend(v43, sel_family), &v47);
  if (v47 >= 0xDu || ((0x13BFu >> v47) & 1) == 0)
  {
LABEL_31:
    result = sub_190A486D0();
    __break(1u);
    return result;
  }
  v32 = *(_QWORD *)(v24 + 16);
  v33 = v42;
  if (!v32)
  {
LABEL_27:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1908B467C(v45);
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  v34 = 0;
  while (qword_190A5B270[(char)v47] != *(unsigned __int8 *)(v24 + v34 + 32))
  {
    if (v32 == ++v34)
      goto LABEL_27;
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1908B467C(v45);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1908AF5D8(v33, a3, type metadata accessor for WidgetDescriptor);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(a3, 0, 1, v40);
}

uint64_t sub_1909FCC28()
{
  uint64_t v0;

  sub_1908B53FC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WidgetHost()
{
  return objc_opt_self();
}

unint64_t sub_1909FCC6C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[2];
  unint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for WidgetDescriptor(0);
  v8 = *(_QWORD *)(v26 - 8);
  v9 = MEMORY[0x1E0C80A78](v26);
  v25 = (uint64_t)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v24 = (uint64_t)v21 - v11;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    return MEMORY[0x1E0DEE9D8];
  v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v21[1] = a1;
  v22 = v13;
  v14 = a1 + v13;
  v15 = *(_QWORD *)(v8 + 72);
  swift_bridgeObjectRetain();
  v16 = MEMORY[0x1E0DEE9D8];
  v23 = a2;
  do
  {
    sub_1909FC864(v14, a2, (uint64_t)v7);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v26) == 1)
    {
      sub_1908AA544((uint64_t)v7, &qword_1ECF6C788);
    }
    else
    {
      v17 = v24;
      sub_190906900((uint64_t)v7, v24);
      sub_190906900(v17, v25);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_1908F23D4(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
      v19 = *(_QWORD *)(v16 + 16);
      v18 = *(_QWORD *)(v16 + 24);
      if (v19 >= v18 >> 1)
        v16 = sub_1908F23D4(v18 > 1, v19 + 1, 1, v16);
      *(_QWORD *)(v16 + 16) = v19 + 1;
      sub_190906900(v25, v16 + v22 + v19 * v15);
      a2 = v23;
    }
    v14 += v15;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v16;
}

id sub_1909FCEA0()
{
  uint64_t v0;
  uint64_t v1;

  sub_19094F7B8();
  sub_190A48298();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v0 = sub_190A47ADC();
  return sub_19096BFDC(v0, v1, 1100, 0, 0xD00000000000002BLL, 0x8000000190A65390);
}

uint64_t sub_1909FCF50()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(v0 + 104) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return swift_deallocObject();
}

uint64_t sub_1909FCF98()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 48))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t ControlPushInfo.token.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1908B53B8(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

ValueMetadata *type metadata accessor for ControlPushInfo()
{
  return &type metadata for ControlPushInfo;
}

uint64_t sub_1909FD01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t sub_1909FD034(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;

  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 8))(a3, a5);
  a1(v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a3, a5);
}

uint64_t sub_1909FD0BC(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  unint64_t v9;
  unint64_t v10;
  id v11;
  os_unfair_lock_t *v12;
  id v13;

  if (a1 == a2)
  {
    v12 = (os_unfair_lock_t *)(a1 + 16);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 16));
    v13 = *(id *)(a3 + 8);
    sub_1908E56DC((uint64_t)a5);

  }
  else
  {
    if (a1 >= a2)
      v9 = a2;
    else
      v9 = a1;
    if (a1 >= a2)
      v10 = a1;
    else
      v10 = a2;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v9 + 16));
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v10 + 16));
    v11 = *(id *)(a3 + 8);
    sub_1908E56DC((uint64_t)a5);

    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 16));
    v12 = (os_unfair_lock_t *)(a2 + 16);
  }
  os_unfair_lock_unlock(*v12);

  return swift_release();
}

void sub_1909FD184()
{
  uint64_t v0;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(_QWORD *)v0 + 16));
}

void sub_1909FD190()
{
  uint64_t v0;

  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)v0 + 16));
}

uint64_t sub_1909FD19C(unint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  char v6;
  os_unfair_lock_t *v7;

  if (a1 == a2)
  {
    v7 = (os_unfair_lock_t *)(a1 + 16);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 16));
    sub_19092E5B8();
    v6 = sub_190A480F4();
  }
  else
  {
    if (a1 >= a2)
      v4 = a2;
    else
      v4 = a1;
    if (a1 >= a2)
      v5 = a1;
    else
      v5 = a2;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 16));
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v5 + 16));
    sub_19092E5B8();
    v6 = sub_190A480F4();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 16));
    v7 = (os_unfair_lock_t *)(a2 + 16);
  }
  os_unfair_lock_unlock(*v7);
  return v6 & 1;
}

id TimelineRequest.__allocating_init(widget:environment:fileHandle:archiveVersion:)(void *a1, __int128 *a2, void *a3, char *a4)
{
  objc_class *v4;
  id v9;
  id v10;

  v9 = objc_allocWithZone(v4);
  v10 = sub_1909FE6A0(a1, a2, a3, a4);

  return v10;
}

id TimelineRequest.widget.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_widget);
}

id TimelineRequest.environment.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v3;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_environment + 8);
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_environment);
  a1[1] = v3;
  swift_retain();
  return v3;
}

id TimelineRequest.fileHandle.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle);
}

void TimelineRequest.archiveVersion.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_archiveVersion);
}

void sub_1909FD33C(char *a1)
{
  sub_190A277D8(*a1);
}

void sub_1909FD348()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_190A487C0();
  __asm { BR              X9 }
}

uint64_t sub_1909FD390()
{
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

void sub_1909FD418()
{
  __asm { BR              X10 }
}

uint64_t sub_1909FD450()
{
  sub_190A47B18();
  return swift_bridgeObjectRelease();
}

void sub_1909FD4C4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_190A487C0();
  __asm { BR              X9 }
}

uint64_t sub_1909FD508()
{
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_1909FD590@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1909FE74C();
  *a1 = result;
  return result;
}

uint64_t sub_1909FD5BC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1909FD5E8 + 4 * byte_190A5B354[*v0]))();
}

void sub_1909FD5E8(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6E6F7269766E65;
  a1[1] = 0xEB00000000746E65;
}

void sub_1909FD60C(_QWORD *a1@<X8>)
{
  *a1 = 0x646E6148656C6966;
  a1[1] = 0xEA0000000000656CLL;
}

void sub_1909FD62C(char *a1@<X8>)
{
  strcpy(a1, "archiveVersion");
  a1[15] = -18;
}

uint64_t sub_1909FD654()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1909FD680 + 4 * byte_190A5B358[*v0]))(0x746567646977, 0xE600000000000000);
}

uint64_t sub_1909FD680()
{
  return 0x6D6E6F7269766E65;
}

uint64_t sub_1909FD6A0()
{
  return 0x646E6148656C6966;
}

uint64_t sub_1909FD6BC()
{
  return 0x5665766968637261;
}

uint64_t sub_1909FD6E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1909FE74C();
  *a1 = result;
  return result;
}

uint64_t sub_1909FD704()
{
  sub_1909FEF8C();
  return sub_190A48868();
}

uint64_t sub_1909FD72C()
{
  sub_1909FEF8C();
  return sub_190A48874();
}

uint64_t sub_1909FD754(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;
  char v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1EA6E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909FF40C();
  sub_190A48850();
  v10 = v7;
  sub_190980244();
  sub_190A485EC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1909FD850@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A570);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909FF40C();
  sub_190A48838();
  if (!v2)
  {
    sub_19098319C();
    sub_190A4852C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1909FD96C()
{
  return 0x5665766968637261;
}

uint64_t sub_1909FD990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x5665766968637261 && a2 == 0xEE006E6F69737265)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_190A486DC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1909FDA48()
{
  sub_1909FF40C();
  return sub_190A48868();
}

uint64_t sub_1909FDA70()
{
  sub_1909FF40C();
  return sub_190A48874();
}

uint64_t sub_1909FDA98@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1909FD850(a1, a2);
}

uint64_t sub_1909FDAAC(_QWORD *a1)
{
  return sub_1909FD754(a1);
}

id TimelineRequest.init(widget:environment:fileHandle:archiveVersion:)(void *a1, __int128 *a2, void *a3, char *a4)
{
  id v6;

  v6 = sub_1909FE6A0(a1, a2, a3, a4);

  return v6;
}

_QWORD *TimelineRequest.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1909FE794(a1);
}

uint64_t sub_1909FDB10(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  __int128 v24;
  unint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  uint64_t v31;

  v3 = v1;
  v31 = *MEMORY[0x1E0C80C00];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE910);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909FEF8C();
  sub_190A48850();
  v30 = *(_OWORD *)(v3 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_environment);
  v29 = 1;
  sub_19091BFBC();
  sub_190A48640();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = (void *)objc_opt_self();
  v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_widget);
  *(_QWORD *)&v30 = 0;
  v12 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v11, 1, &v30);
  v13 = (id)v30;
  if (v12)
  {
    v28 = sub_190A46000();
    v15 = v14;

  }
  else
  {
    v16 = v13;
    v17 = (void *)sub_190A45F58();

    swift_willThrow();
    v28 = 0;
    v15 = 0xF000000000000000;
  }
  v26 = v3;
  v18 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle);
  *(_QWORD *)&v30 = 0;
  v19 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v18, 1, &v30);
  v20 = (id)v30;
  if (v19)
  {
    *(_QWORD *)&v27 = sub_190A46000();
    *((_QWORD *)&v27 + 1) = v21;

  }
  else
  {
    v22 = v20;
    v23 = (void *)sub_190A45F58();

    swift_willThrow();
    *(_QWORD *)&v27 = 0;
    *((_QWORD *)&v27 + 1) = 0xF000000000000000;
  }
  *(_QWORD *)&v30 = v28;
  *((_QWORD *)&v30 + 1) = v15;
  v29 = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1ED7F0);
  sub_190955EEC();
  sub_190A48640();
  v25 = v15;
  v24 = v27;
  v30 = v27;
  v29 = 2;
  sub_190A48640();
  LOBYTE(v30) = *(_BYTE *)(v26 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_archiveVersion);
  v29 = 3;
  sub_190980244();
  sub_190A485EC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1908CE500(v24, *((unint64_t *)&v24 + 1));
  return sub_1908CE500(v28, v25);
}

id TimelineRequest.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return TimelineRequest.init(coder:)(a1);
}

id TimelineRequest.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  id v14;
  id v15;
  uint64_t v16;
  _DWORD *v17;
  objc_class *v18;
  char *v19;
  id v20;
  char *v21;
  id v22;
  id v23;
  id v24;
  char v25;
  objc_super v26;
  __int128 v27;

  sub_1908AB890(0, (unint64_t *)&qword_1ECF6BF60);
  v3 = v1;
  v4 = (void *)sub_190A48088();
  type metadata accessor for WidgetEnvironment.Storage();
  v5 = (void *)sub_190A48088();
  sub_1908AB890(0, (unint64_t *)&unk_1ECF6D060);
  v6 = (void *)sub_190A48088();
  sub_1908AB890(0, &qword_1ECF6D310);
  v7 = sub_190A48088();
  if (!v7)
  {

LABEL_4:
    goto LABEL_5;
  }
  v8 = (void *)v7;
  v9 = sub_190A46000();
  v11 = v10;

  sub_190A45F10();
  swift_allocObject();
  sub_190A45F04();
  sub_1909FEFD0();
  sub_190A45EEC();
  if (!v4)
  {
    swift_release();

    sub_1908B53FC(v9, v11);
    goto LABEL_5;
  }
  if (!v5)
  {
    swift_release();

    sub_1908B53FC(v9, v11);
    goto LABEL_4;
  }
  if (v6)
  {
    v25 = v27;
    v14 = v4;
    v15 = v5;
    v24 = v6;

    type metadata accessor for UnfairLock();
    v16 = swift_allocObject();
    v23 = v15;
    v17 = (_DWORD *)swift_slowAlloc();
    *v17 = 0;
    *(_QWORD *)(v16 + 16) = v17;
    v18 = (objc_class *)type metadata accessor for TimelineRequest();
    v19 = (char *)objc_allocWithZone(v18);
    *(_QWORD *)&v19[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_widget] = v14;
    *(_QWORD *)&v27 = v16;
    *((_QWORD *)&v27 + 1) = v23;
    v20 = v14;
    v21 = v19;
    WidgetEnvironment.filterForExtensions()();
    *(_OWORD *)&v21[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_environment] = v27;
    *(_QWORD *)&v21[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle] = v24;
    v21[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_archiveVersion] = v25;
    v22 = v24;

    v26.receiver = v21;
    v26.super_class = v18;
    v12 = objc_msgSendSuper2(&v26, sel_init);
    swift_release();

    sub_1908B53FC(v9, v11);
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return v12;
  }
  swift_release();

  sub_1908B53FC(v9, v11);
LABEL_5:
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1909FE2D0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  os_unfair_lock_s *v8;
  id v9;
  os_unfair_lock_s *v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  void *v19;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_widget);
  v5 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_environment);
  v7 = *(void **)(v2 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_environment + 8);
  v8 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain_n();
  v9 = v7;
  os_unfair_lock_lock(v8);
  v10 = *(os_unfair_lock_s **)(v6 + 16);
  v11 = v9;
  os_unfair_lock_unlock(v10);

  swift_release_n();
  v12 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v11, v12);

  v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle);
  v14 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v13, v14);

  sub_190A45F40();
  swift_allocObject();
  sub_190A45F34();
  sub_190A45F1C();
  sub_1909FF034();
  v15 = sub_190A45F28();
  v17 = v16;
  v18 = (void *)sub_190A45FE8();
  v19 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v18, v19);

  sub_1908B53FC(v15, v17);
  return swift_release();
}

id TimelineRequest.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void TimelineRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TimelineRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TimelineRequest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_QWORD *sub_1909FE658@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1909FE794(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1909FE680(_QWORD *a1)
{
  return sub_1909FDB10(a1);
}

id sub_1909FE6A0(void *a1, __int128 *a2, void *a3, char *a4)
{
  char *v4;
  char v7;
  char *v8;
  id v9;
  id v10;
  objc_super v12;
  __int128 v13;

  v7 = *a4;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_widget] = a1;
  v13 = *a2;
  v8 = v4;
  v9 = a1;
  WidgetEnvironment.filterForExtensions()();
  *(_OWORD *)&v8[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_environment] = v13;
  *(_QWORD *)&v8[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle] = a3;
  v8[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_archiveVersion] = v7;
  v10 = a3;

  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for TimelineRequest();
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t sub_1909FE74C()
{
  unint64_t v0;

  v0 = sub_190A484F0();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

_QWORD *sub_1909FE794(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  __int128 v14;
  objc_class *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  id v22;
  char v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  Class v37;
  objc_class *v38;
  char *v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  _BYTE *v45;
  id v46;
  uint64_t v47;
  objc_class *v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  id v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  Class v58;
  __int128 v59;
  char *v60;
  __int128 v61;
  uint64_t v62;
  _QWORD *v63;
  objc_super v64;
  __int128 v65;
  char v66;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1EE940);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v63 = a1;
  v8 = __swift_project_boxed_opaque_existential_1(a1, v7);
  v9 = sub_1909FEF8C();
  sub_190A48838();
  if (!v1)
  {
    v62 = v4;
    v66 = 1;
    sub_19091BE58();
    sub_190A48580();
    v10 = v3;
    v11 = v65;
    v66 = 3;
    sub_19098319C();
    sub_190A4852C();
    v61 = v11;
    v12 = v65;
    v66 = 0;
    sub_19091BF34();
    sub_190A48580();
    v60 = v6;
    v14 = v65;
    v15 = (objc_class *)sub_1908AB890(0, (unint64_t *)&unk_1ECF6A620);
    v16 = sub_1908AB890(0, (unint64_t *)&qword_1ECF6BF60);
    v59 = v14;
    v17 = v16;
    v18 = (void *)sub_190A47FB0();
    v58 = v15;
    if (v18)
    {
      v23 = v12;
      v66 = 2;
      v24 = v18;
      sub_190A48580();
      v31 = v65;
      v56 = sub_1908AB890(0, (unint64_t *)&unk_1ECF6D060);
      v57 = *((_QWORD *)&v31 + 1);
      v32 = sub_190A47FB0();
      v33 = (void *)*((_QWORD *)&v61 + 1);
      if (v32)
      {
        v58 = (Class)type metadata accessor for TimelineRequest();
        v39 = (char *)objc_allocWithZone(v58);
        v40 = v24;
        v41 = v39;
        *(_QWORD *)&v39[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_widget] = v40;
        *(_QWORD *)&v65 = v61;
        *((_QWORD *)&v65 + 1) = v33;
        v42 = v40;
        v43 = v33;
        v44 = *((id *)&v31 + 1);
        swift_retain();
        *((_QWORD *)&v61 + 1) = v43;
        v45 = v41;
        WidgetEnvironment.filterForExtensions()();
        *(_OWORD *)&v45[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_environment] = v65;
        *(_QWORD *)&v45[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle] = v44;
        v45[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_archiveVersion] = v23;
        v46 = v44;

        v64.receiver = v45;
        v64.super_class = v58;
        v8 = objc_msgSendSuper2(&v64, sel_init);

        sub_1908B53FC(v31, v57);
        sub_1908B53FC(v59, *((unint64_t *)&v59 + 1));

        swift_release();
        (*(void (**)(char *, uint64_t))(v62 + 8))(v60, v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
        return v8;
      }
      v55 = v31;

      v47 = sub_190A4831C();
      v48 = (objc_class *)swift_allocError();
      v50 = v49;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90);
      *v50 = v56;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE40);
      v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = xmmword_190A4A350;
      *(_QWORD *)(v51 + 56) = &type metadata for TimelineRequest.CodingKeys;
      *(_QWORD *)(v51 + 64) = v9;
      *(_BYTE *)(v51 + 32) = 2;
      sub_190A48304();
      v52 = *MEMORY[0x1E0DEC460];
      (*(void (**)(uint64_t *))(*(_QWORD *)(v47 - 8) + 104))(v50);
      v58 = v48;
      swift_willThrow();
      v54 = v24;
      v34 = sub_190A4831C();
      swift_allocError();
      v8 = v35;
      v53[1] = (char *)v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90) + 48);
      *v8 = v56;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE40);
      v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_190A4A350;
      *(_QWORD *)(v36 + 56) = &type metadata for TimelineRequest.CodingKeys;
      *(_QWORD *)(v36 + 64) = v9;
      *(_BYTE *)(v36 + 32) = 2;
      v37 = v58;
      v38 = v58;
      sub_190A48304();
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v8, v52, v34);
      swift_willThrow();
      sub_1908B53FC(v55, v57);
      sub_1908B53FC(v59, *((unint64_t *)&v59 + 1));

      swift_release();
    }
    else
    {
      v25 = sub_190A4831C();
      v26 = (void *)swift_allocError();
      v28 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90);
      *v28 = v17;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE40);
      v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_190A4A350;
      *(_QWORD *)(v29 + 56) = &type metadata for TimelineRequest.CodingKeys;
      *(_QWORD *)(v29 + 64) = v9;
      *(_BYTE *)(v29 + 32) = 0;
      sub_190A48304();
      v30 = *MEMORY[0x1E0DEC460];
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v28, v30, v25);
      swift_willThrow();
      v19 = sub_190A4831C();
      swift_allocError();
      v8 = v20;
      v58 = (Class)((char *)v20 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90) + 48));
      *v8 = v17;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE40);
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_190A4A350;
      *(_QWORD *)(v21 + 56) = &type metadata for TimelineRequest.CodingKeys;
      *(_QWORD *)(v21 + 64) = v9;
      *(_BYTE *)(v21 + 32) = 0;
      v22 = v26;
      sub_190A48304();
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v8, v30, v19);
      swift_willThrow();
      sub_1908B53FC(v59, *((unint64_t *)&v59 + 1));

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v62 + 8))(v60, v10);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  return v8;
}

unint64_t sub_1909FEF8C()
{
  unint64_t result;

  result = qword_1EE1EE918;
  if (!qword_1EE1EE918)
  {
    result = MEMORY[0x19401429C](&unk_190A5B550, &type metadata for TimelineRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE918);
  }
  return result;
}

unint64_t sub_1909FEFD0()
{
  unint64_t result;

  result = qword_1ECF6A560;
  if (!qword_1ECF6A560)
  {
    result = MEMORY[0x19401429C](&unk_190A5B528, &type metadata for TimelineRequest.CodingProxy);
    atomic_store(result, (unint64_t *)&qword_1ECF6A560);
  }
  return result;
}

uint64_t type metadata accessor for TimelineRequest()
{
  return objc_opt_self();
}

unint64_t sub_1909FF034()
{
  unint64_t result;

  result = qword_1EE1EA6A8;
  if (!qword_1EE1EA6A8)
  {
    result = MEMORY[0x19401429C](&unk_190A5B500, &type metadata for TimelineRequest.CodingProxy);
    atomic_store(result, (unint64_t *)&qword_1EE1EA6A8);
  }
  return result;
}

uint64_t method lookup function for TimelineRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static TimelineRequest.supportsSecureCoding.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of TimelineRequest.__allocating_init(widget:environment:fileHandle:archiveVersion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of TimelineRequest.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of TimelineRequest.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of TimelineRequest.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of TimelineRequest.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t getEnumTagSinglePayload for TimelineRequest.CodingProxy(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v6;
  int v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  if (*a1 <= 2u)
    v6 = 2;
  else
    v6 = *a1;
  v7 = v6 - 3;
  if (*a1 < 2u)
    v8 = -1;
  else
    v8 = v7;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TimelineRequest.CodingProxy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1909FF1E8 + 4 * byte_190A5B361[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1909FF21C + 4 * byte_190A5B35C[v4]))();
}

uint64_t sub_1909FF21C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909FF224(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909FF22CLL);
  return result;
}

uint64_t sub_1909FF238(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909FF240);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1909FF244(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909FF24C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TimelineRequest.CodingProxy()
{
  return &type metadata for TimelineRequest.CodingProxy;
}

uint64_t storeEnumTagSinglePayload for TimelineRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1909FF2B4 + 4 * byte_190A5B36B[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1909FF2E8 + 4 * byte_190A5B366[v4]))();
}

uint64_t sub_1909FF2E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909FF2F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909FF2F8);
  return result;
}

uint64_t sub_1909FF304(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909FF30CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1909FF310(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909FF318(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TimelineRequest.CodingKeys()
{
  return &type metadata for TimelineRequest.CodingKeys;
}

unint64_t sub_1909FF338()
{
  unint64_t result;

  result = qword_1EE1EE928;
  if (!qword_1EE1EE928)
  {
    result = MEMORY[0x19401429C](&unk_190A5B4D8, &type metadata for TimelineRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE928);
  }
  return result;
}

unint64_t sub_1909FF380()
{
  unint64_t result;

  result = qword_1EE1EE930;
  if (!qword_1EE1EE930)
  {
    result = MEMORY[0x19401429C](&unk_190A5B410, &type metadata for TimelineRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE930);
  }
  return result;
}

unint64_t sub_1909FF3C8()
{
  unint64_t result;

  result = qword_1EE1EE938;
  if (!qword_1EE1EE938)
  {
    result = MEMORY[0x19401429C](&unk_190A5B438, &type metadata for TimelineRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE938);
  }
  return result;
}

unint64_t sub_1909FF40C()
{
  unint64_t result;

  result = qword_1ECF6A5D8;
  if (!qword_1ECF6A5D8)
  {
    result = MEMORY[0x19401429C](&unk_190A5B658, &type metadata for TimelineRequest.CodingProxy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6A5D8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TimelineRequest.CodingProxy.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1909FF490 + 4 * byte_190A5B370[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1909FF4B0 + 4 * byte_190A5B375[v4]))();
}

_BYTE *sub_1909FF490(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1909FF4B0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1909FF4B8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1909FF4C0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1909FF4C8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1909FF4D0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TimelineRequest.CodingProxy.CodingKeys()
{
  return &type metadata for TimelineRequest.CodingProxy.CodingKeys;
}

unint64_t sub_1909FF4F0()
{
  unint64_t result;

  result = qword_1EE1EE950;
  if (!qword_1EE1EE950)
  {
    result = MEMORY[0x19401429C](&unk_190A5B630, &type metadata for TimelineRequest.CodingProxy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE950);
  }
  return result;
}

unint64_t sub_1909FF538()
{
  unint64_t result;

  result = qword_1ECF6A5F8;
  if (!qword_1ECF6A5F8)
  {
    result = MEMORY[0x19401429C](&unk_190A5B5A0, &type metadata for TimelineRequest.CodingProxy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6A5F8);
  }
  return result;
}

unint64_t sub_1909FF580()
{
  unint64_t result;

  result = qword_1ECF6A5E0[0];
  if (!qword_1ECF6A5E0[0])
  {
    result = MEMORY[0x19401429C](&unk_190A5B5C8, &type metadata for TimelineRequest.CodingProxy.CodingKeys);
    atomic_store(result, qword_1ECF6A5E0);
  }
  return result;
}

uint64_t sub_1909FF5C4(char a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;

  if ((a2 & 1) != 0)
    v3 = 0x647261646E617473;
  else
    v3 = 0x6573616572636E69;
  if ((a2 & 1) != 0)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE900000000000064;
  if ((a1 & 1) != 0)
    v5 = 0x647261646E617473;
  else
    v5 = 0x6573616572636E69;
  if ((a1 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE900000000000064;
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n();
    v7 = 1;
  }
  else
  {
    v8 = sub_190A486DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v8 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_1909FF67C(char a1, char a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;

  LOBYTE(v2) = a1;
  if (a2)
  {
    if (a2 == 1)
      v3 = 1684828002;
    else
      v3 = 1701736302;
    v4 = 0xE400000000000000;
    v2 = v2;
    if ((_BYTE)v2)
    {
LABEL_6:
      if (v2 == 1)
        v5 = 1684828002;
      else
        v5 = 1701736302;
      v6 = 0xE400000000000000;
      if (v3 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x72616C75676572;
    v2 = v2;
    if ((_BYTE)v2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v3 != 0x72616C75676572)
  {
LABEL_15:
    v8 = sub_190A486DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v8 ^ 1;
    return v7 & 1;
  }
LABEL_13:
  if (v4 != v6)
    goto LABEL_15;
  swift_bridgeObjectRelease_n();
  v7 = 1;
  return v7 & 1;
}

uint64_t sub_1909FF784(char a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;

  if ((a2 & 1) != 0)
    v3 = 0x5079616C70736964;
  else
    v3 = 1111970419;
  if ((a2 & 1) != 0)
    v4 = 0xE900000000000033;
  else
    v4 = 0xE400000000000000;
  if ((a1 & 1) != 0)
    v5 = 0x5079616C70736964;
  else
    v5 = 1111970419;
  if ((a1 & 1) != 0)
    v6 = 0xE900000000000033;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n();
    v7 = 1;
  }
  else
  {
    v8 = sub_190A486DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v8 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_1909FF834(char a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;

  if ((a2 & 1) != 0)
    v3 = 1802658148;
  else
    v3 = 0x746867696CLL;
  if ((a2 & 1) != 0)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a1 & 1) != 0)
    v5 = 1802658148;
  else
    v5 = 0x746867696CLL;
  if ((a1 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n();
    v7 = 1;
  }
  else
  {
    v8 = sub_190A486DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v8 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_1909FF8DC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1802658148;
  else
    v3 = 0x746867696CLL;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1802658148;
  else
    v5 = 0x746867696CLL;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n();
    v7 = 1;
  }
  else
  {
    v8 = sub_190A486DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v8 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_1909FF980(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x5079616C70736964;
  else
    v3 = 1111970419;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE900000000000033;
  if ((a2 & 1) != 0)
    v5 = 0x5079616C70736964;
  else
    v5 = 1111970419;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000033;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n();
    v7 = 1;
  }
  else
  {
    v8 = sub_190A486DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v8 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_1909FFA2C(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;

  if (a1)
  {
    if (a1 == 1)
      v2 = 1684828002;
    else
      v2 = 1701736302;
    v3 = 0xE400000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 1684828002;
      else
        v5 = 1701736302;
      v6 = 0xE400000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE700000000000000;
    v2 = 0x72616C75676572;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v2 != 0x72616C75676572)
  {
LABEL_15:
    v8 = sub_190A486DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v8 ^ 1;
    return v7 & 1;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  swift_bridgeObjectRelease_n();
  v7 = 1;
  return v7 & 1;
}

uint64_t sub_1909FFB30(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x647261646E617473;
  else
    v3 = 0x6573616572636E69;
  if (v2)
    v4 = 0xE900000000000064;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x647261646E617473;
  else
    v5 = 0x6573616572636E69;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE900000000000064;
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n();
    v7 = 1;
  }
  else
  {
    v8 = sub_190A486DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v8 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_1909FFBE4(char a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if ((a2 & 1) != 0)
    v3 = 1802658148;
  else
    v3 = 0x746867696CLL;
  if ((a2 & 1) != 0)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a1 & 1) != 0)
    v5 = 1802658148;
  else
    v5 = 0x746867696CLL;
  if ((a1 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 0;
  else
    v7 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1909FFC80(char a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if ((a2 & 1) != 0)
    v3 = 0x5079616C70736964;
  else
    v3 = 1111970419;
  if ((a2 & 1) != 0)
    v4 = 0xE900000000000033;
  else
    v4 = 0xE400000000000000;
  if ((a1 & 1) != 0)
    v5 = 0x5079616C70736964;
  else
    v5 = 1111970419;
  if ((a1 & 1) != 0)
    v6 = 0xE900000000000033;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 0;
  else
    v7 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1909FFD24(char a1, char a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  LOBYTE(v2) = a1;
  if (a2)
  {
    if (a2 == 1)
      v3 = 1684828002;
    else
      v3 = 1701736302;
    v4 = 0xE400000000000000;
    v2 = v2;
    if ((_BYTE)v2)
    {
LABEL_6:
      if (v2 == 1)
        v5 = 1684828002;
      else
        v5 = 1701736302;
      v6 = 0xE400000000000000;
      if (v3 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x72616C75676572;
    v2 = v2;
    if ((_BYTE)v2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v3 != 0x72616C75676572)
  {
LABEL_15:
    v7 = sub_190A486DC();
    goto LABEL_16;
  }
LABEL_13:
  if (v4 != v6)
    goto LABEL_15;
  v7 = 0;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1909FFE20(char a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if ((a2 & 1) != 0)
    v3 = 0x647261646E617473;
  else
    v3 = 0x6573616572636E69;
  if ((a2 & 1) != 0)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE900000000000064;
  if ((a1 & 1) != 0)
    v5 = 0x647261646E617473;
  else
    v5 = 0x6573616572636E69;
  if ((a1 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE900000000000064;
  if (v3 == v5 && v4 == v6)
    v7 = 0;
  else
    v7 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1909FFECC()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D6A0 = result;
  return result;
}

uint64_t sub_1909FFEF0()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B508);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D688 = v0;
  unk_1ECF6D690 = 0x686353726F6C6F63;
  qword_1ECF6D698 = 0xEB00000000656D65;
  return result;
}

ValueMetadata *type metadata accessor for ColorSchemeKey()
{
  return &type metadata for ColorSchemeKey;
}

unint64_t sub_1909FFF7C()
{
  unint64_t result;

  result = qword_1ECF6B5A0;
  if (!qword_1ECF6B5A0)
  {
    result = MEMORY[0x19401429C](&unk_190A5B740, &type metadata for ColorSchemeKey.CodableColorScheme);
    atomic_store(result, (unint64_t *)&qword_1ECF6B5A0);
  }
  return result;
}

unint64_t sub_1909FFFC4()
{
  unint64_t result;

  result = qword_1ECF6B5B8;
  if (!qword_1ECF6B5B8)
  {
    result = MEMORY[0x19401429C](&unk_190A5B718, &type metadata for ColorSchemeKey.CodableColorScheme);
    atomic_store(result, (unint64_t *)&qword_1ECF6B5B8);
  }
  return result;
}

unint64_t sub_190A0000C()
{
  unint64_t result;

  result = qword_1ECF6B598;
  if (!qword_1ECF6B598)
  {
    result = MEMORY[0x19401429C](&unk_190A5B6F0, &type metadata for ColorSchemeKey.CodableColorScheme);
    atomic_store(result, (unint64_t *)&qword_1ECF6B598);
  }
  return result;
}

uint64_t sub_190A00050(char *a1, char *a2)
{
  return sub_190A279FC(*a1, *a2);
}

uint64_t sub_190A0005C()
{
  sub_190A487C0();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_190A000D0()
{
  sub_190A47B18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190A00120()
{
  sub_190A487C0();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_190A00190@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_190A484F0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_190A001EC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1802658148;
  if (!*v1)
    v2 = 0x746867696CLL;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_190A00220()
{
  sub_190A00520();
  return sub_190A47C2C();
}

uint64_t sub_190A0027C()
{
  sub_190A00520();
  return sub_190A47C14();
}

uint64_t sub_190A002C8(char *a1, char *a2)
{
  return sub_190A00488(*a1, *a2);
}

uint64_t sub_190A002D4(char *a1, char *a2)
{
  return sub_1909FF834(*a1, *a2);
}

uint64_t sub_190A002E0(char *a1, char *a2)
{
  return sub_1909FF8DC(*a1, *a2);
}

uint64_t sub_190A002EC(char *a1, char *a2)
{
  return sub_1909FFBE4(*a1, *a2);
}

uint64_t sub_190A002F8()
{
  if (qword_1ECF6B4F8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_190A00338@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  uint64_t v4;
  unsigned int *v5;

  v3 = *a1;
  v4 = sub_190A4669C();
  v5 = (unsigned int *)MEMORY[0x1E0CD86D0];
  if (!v3)
    v5 = (unsigned int *)MEMORY[0x1E0CD86E0];
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a2, *v5, v4);
}

uint64_t sub_190A003A0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_190A00564(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_190A003CC()
{
  uint64_t v0;

  if (qword_1ECF6B590 != -1)
    swift_once();
  v0 = qword_1ECF6D688;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_190A00444()
{
  unint64_t result;

  result = qword_1ECF6B5A8;
  if (!qword_1ECF6B5A8)
  {
    result = MEMORY[0x19401429C](&unk_190A5B788, &type metadata for ColorSchemeKey.CodableColorScheme);
    atomic_store(result, (unint64_t *)&qword_1ECF6B5A8);
  }
  return result;
}

uint64_t sub_190A00488(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1802658148;
  else
    v3 = 0x746867696CLL;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1802658148;
  else
    v5 = 0x746867696CLL;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 0;
  else
    v7 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

unint64_t sub_190A00520()
{
  unint64_t result;

  result = qword_1ECF6B5B0;
  if (!qword_1ECF6B5B0)
  {
    result = MEMORY[0x19401429C](&unk_190A5B834, &type metadata for ColorSchemeKey.CodableColorScheme);
    atomic_store(result, (unint64_t *)&qword_1ECF6B5B0);
  }
  return result;
}

uint64_t sub_190A00564(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *, uint64_t, uint64_t);
  int v7;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t v16[6];

  v2 = sub_190A4669C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v6(v5, a1, v2);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v7 == *MEMORY[0x1E0CD86E0] || v7 == *MEMORY[0x1E0CD86D0])
    return v7 != *MEMORY[0x1E0CD86E0];
  v16[3] = v2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  v6((char *)boxed_opaque_existential_1, a1, v2);
  v10 = sub_190A48334();
  swift_allocError();
  v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1ED3B8);
  sub_1908B3694((uint64_t)v16, v12);
  v15[0] = sub_190A482C8();
  v15[1] = v13;
  sub_190A47B3C();
  v16[5] = 36;
  sub_190A4867C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A48304();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v12, *MEMORY[0x1E0DEC4B0], v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t storeEnumTagSinglePayload for ColorSchemeKey.CodableColorScheme(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190A007A4 + 4 * byte_190A5B6B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190A007D8 + 4 * byte_190A5B6B0[v4]))();
}

uint64_t sub_190A007D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A007E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190A007E8);
  return result;
}

uint64_t sub_190A007F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190A007FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190A00800(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A00808(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ColorSchemeKey.CodableColorScheme()
{
  return &type metadata for ColorSchemeKey.CodableColorScheme;
}

uint64_t sub_190A00824()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ControlCenterClient();
  v0 = swift_allocObject();
  result = sub_190A02AC0();
  qword_1EE1FD830 = v0;
  return result;
}

uint64_t sub_190A0085C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_190A47980();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_190A479C8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(_QWORD *)(v3 + 16);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v3;
  v15[3] = a1;
  v15[4] = a2;
  aBlock[4] = sub_190A0303C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1908A9D98;
  aBlock[3] = &block_descriptor_34_0;
  v16 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_190A47998();
  v18[1] = MEMORY[0x1E0DEE9D8];
  sub_1908AA2F4((unint64_t *)&qword_1ECF6D318, v7, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
  sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
  sub_190A481E4();
  MEMORY[0x194013234](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_190A00A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  void *v5;
  void *v6;

  result = sub_190A01FCC();
  if (result)
  {
    v5 = (void *)result;
    if (a3)
      v6 = (void *)sub_190A47AC4();
    else
      v6 = 0;
    objc_msgSend(v5, sel_reloadAllControlsForBundleIdentifier_, v6);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_190A00AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_190A47980();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_190A479C8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(_QWORD *)(v3 + 16);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v3;
  v15[3] = a1;
  v15[4] = a2;
  aBlock[4] = sub_190A03078;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1908A9D98;
  aBlock[3] = &block_descriptor_40;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_190A47998();
  v18[1] = MEMORY[0x1E0DEE9D8];
  sub_1908AA2F4((unint64_t *)&qword_1ECF6D318, v7, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
  sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
  sub_190A481E4();
  MEMORY[0x194013234](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_190A00CCC()
{
  uint64_t result;
  void *v1;
  void *v2;

  result = sub_190A01FCC();
  if (result)
  {
    v1 = (void *)result;
    v2 = (void *)sub_190A47AC4();
    objc_msgSend(v1, sel_reloadControlsOfKind_, v2);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_190A00D40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v4 = sub_190A47980();
  v20 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_190A479C8();
  v18 = *(_QWORD *)(v7 - 8);
  v19 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE9C8);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v17[1] = *(_QWORD *)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_190A02DCC;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1908A9D98;
  aBlock[3] = &block_descriptor_15;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_190A47998();
  v21 = MEMORY[0x1E0DEE9D8];
  sub_1908AA2F4((unint64_t *)&qword_1ECF6D318, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
  sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
  sub_190A481E4();
  MEMORY[0x194013234](0, v9, v6, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v19);
  return swift_release();
}

uint64_t sub_190A00FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD aBlock[6];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE9C8);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = sub_190A01FCC();
  if (v6)
  {
    v7 = (void *)v6;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v3);
    v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v9 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
    aBlock[4] = sub_190A02E64;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_190A01F38;
    aBlock[3] = &block_descriptor_21;
    v10 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v7, sel_currentConfigurations_, v10);
    _Block_release(v10);
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
    v12 = sub_190A47ADC();
    sub_19096BFDC(v12, v13, 1102, 0, 0xD000000000000014, 0x8000000190A62A70);
    return sub_190A47D34();
  }
}

void sub_190A01148(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE9C8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 60 == 15)
  {
    if (a3)
    {
LABEL_3:
      v22 = a3;
      v14 = a3;
      sub_190A47D34();
      return;
    }
  }
  else
  {
    v21 = a4;
    sub_190A45F10();
    swift_allocObject();
    sub_1908B53B8(a1, a2);
    sub_190A45F04();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE9D0);
    sub_190A02EBC();
    sub_190A45EEC();
    swift_release();
    v15 = v22;
    if (v22)
    {
      v16 = sub_190A47D7C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v13, 1, 1, v16);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v21, v8);
      v17 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v18 = (char *)swift_allocObject();
      *((_QWORD *)v18 + 2) = 0;
      *((_QWORD *)v18 + 3) = 0;
      *((_QWORD *)v18 + 4) = v15;
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v18[v17], (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
      v19 = v15;
      sub_19095ADDC((uint64_t)v13, (uint64_t)&unk_1EE1EE9F0, (uint64_t)v18);
      sub_1908CE500(a1, a2);
      swift_release();

      return;
    }
    sub_1908CE500(a1, a2);
    if (a3)
      goto LABEL_3;
  }
  v22 = (void *)MEMORY[0x1E0DEE9D8];
  sub_190A47D40();
}

uint64_t sub_190A013BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 256) = a4;
  *(_QWORD *)(v5 + 264) = a5;
  return swift_task_switch();
}

uint64_t sub_190A013D4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  unint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  id v37;
  id v38;
  _QWORD *v39;
  uint64_t v40;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 256) + OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_controls);
  *(_QWORD *)(v0 + 272) = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_190A48484();
    v2 = result;
    *(_QWORD *)(v0 + 280) = result;
    if (result)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 280) = v2;
    if (v2)
    {
LABEL_3:
      *(_QWORD *)(v0 + 288) = *(_QWORD *)(*(_QWORD *)(v0 + 256)
                                        + OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_tokens);
      if (v2 < 1)
      {
        __break(1u);
        return result;
      }
      v4 = 0;
      v40 = v0 + 16;
      v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      while (1)
      {
        *(_QWORD *)(v0 + 296) = v4;
        *(_QWORD *)(v0 + 304) = v5;
        v6 = *(_QWORD *)(v0 + 272);
        if ((v6 & 0xC000000000000001) != 0)
          v7 = (id)MEMORY[0x194013510]();
        else
          v7 = *(id *)(v6 + 8 * v4 + 32);
        v8 = v7;
        *(_QWORD *)(v0 + 312) = v7;
        if (*(_QWORD *)(*(_QWORD *)(v0 + 288) + 16))
        {
          v9 = v7;
          v10 = sub_1908D2CFC((uint64_t)v9);
          if ((v11 & 1) != 0)
          {
            v12 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v0 + 288) + 56) + 16 * v10);
            v13 = *v12;
            v14 = v12[1];
            sub_1908B53B8(*v12, v14);
          }
          else
          {
            v13 = 0;
            v14 = 0xF000000000000000;
          }

        }
        else
        {
          v13 = 0;
          v14 = 0xF000000000000000;
        }
        *(_QWORD *)(v0 + 320) = v13;
        *(_QWORD *)(v0 + 328) = v14;
        v15 = v8;
        sub_1908CE0B4(v13, v14);
        *(_QWORD *)(v0 + 48) = v15;
        v16 = v15;
        v17 = objc_msgSend(v16, sel_kind);
        v18 = sub_190A47ADC();
        v20 = v19;

        *(_QWORD *)(v0 + 16) = v18;
        *(_QWORD *)(v0 + 24) = v20;
        *(_QWORD *)(v0 + 32) = v13;
        *(_QWORD *)(v0 + 40) = v14;
        v21 = objc_msgSend(v16, sel_intentReference);
        if (v21)
        {
          v22 = v21;
          v23 = objc_msgSend(v21, sel_intent);
          *(_QWORD *)(v0 + 336) = v23;

          if (v23)
          {
            objc_opt_self();
            v24 = (void *)swift_dynamicCastObjCClass();
            if (v24)
            {
              v37 = objc_msgSend(v24, sel_linkAction);
              if (v37)
              {
                v38 = v37;
                *(_QWORD *)(v0 + 240) = sub_1908AB890(0, (unint64_t *)&qword_1EE1EB978);
                *(_QWORD *)(v0 + 216) = v38;
              }
              else
              {
                *(_OWORD *)(v0 + 216) = 0u;
                *(_OWORD *)(v0 + 232) = 0u;
              }
              v39 = (_QWORD *)swift_task_alloc();
              *(_QWORD *)(v0 + 344) = v39;
              *v39 = v0;
              v39[1] = sub_190A017C0;
              return sub_190A45C4C();
            }

          }
        }

        *(_QWORD *)(v0 + 88) = 0;
        *(_OWORD *)(v0 + 56) = 0u;
        *(_OWORD *)(v0 + 72) = 0u;
        sub_1908CD9EC(v40, v0 + 96);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v5 = *(_QWORD **)(v0 + 304);
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v5 = sub_1908F282C(0, v5[2] + 1, 1, *(_QWORD **)(v0 + 304));
        v27 = v5[2];
        v26 = v5[3];
        if (v27 >= v26 >> 1)
          v5 = sub_1908F282C((_QWORD *)(v26 > 1), v27 + 1, 1, v5);
        v28 = *(_QWORD *)(v0 + 320);
        v29 = *(_QWORD *)(v0 + 328);
        v30 = *(void **)(v0 + 312);
        v31 = *(_QWORD *)(v0 + 280);
        v32 = *(_QWORD *)(v0 + 296) + 1;
        v5[2] = v27 + 1;
        v33 = &v5[10 * v27];
        v33[2] = *(_OWORD *)(v0 + 96);
        v34 = *(_OWORD *)(v0 + 112);
        v35 = *(_OWORD *)(v0 + 128);
        v36 = *(_OWORD *)(v0 + 160);
        v33[5] = *(_OWORD *)(v0 + 144);
        v33[6] = v36;
        v33[3] = v34;
        v33[4] = v35;

        sub_1908CE500(v28, v29);
        sub_1908CDA28(v40);
        if (v32 == v31)
          goto LABEL_31;
        v4 = *(_QWORD *)(v0 + 296) + 1;
      }
    }
  }
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_31:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 248) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE9C8);
  sub_190A47D40();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190A017C0()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)

  else
    sub_1908B4324(v2 + 216);
  return swift_task_switch();
}

uint64_t sub_190A01830()
{
  uint64_t v0;
  void *v1;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v36;
  id v37;
  _QWORD *v38;
  uint64_t v39;

  v39 = v0 + 16;
  v1 = *(void **)(v0 + 336);

  sub_1908B4BD4(v0 + 176, v0 + 56, &qword_1EE1EA700);
  while (1)
  {
    sub_1908CD9EC(v39, v0 + 96);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v3 = *(_QWORD **)(v0 + 304);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v3 = sub_1908F282C(0, v3[2] + 1, 1, *(_QWORD **)(v0 + 304));
    v5 = v3[2];
    v4 = v3[3];
    if (v5 >= v4 >> 1)
      v3 = sub_1908F282C((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
    v7 = *(_QWORD *)(v0 + 320);
    v6 = *(_QWORD *)(v0 + 328);
    v8 = *(void **)(v0 + 312);
    v9 = *(_QWORD *)(v0 + 280);
    v10 = *(_QWORD *)(v0 + 296) + 1;
    v3[2] = v5 + 1;
    v11 = &v3[10 * v5];
    v11[2] = *(_OWORD *)(v0 + 96);
    v12 = *(_OWORD *)(v0 + 112);
    v13 = *(_OWORD *)(v0 + 128);
    v14 = *(_OWORD *)(v0 + 160);
    v11[5] = *(_OWORD *)(v0 + 144);
    v11[6] = v14;
    v11[3] = v12;
    v11[4] = v13;

    sub_1908CE500(v7, v6);
    sub_1908CDA28(v39);
    if (v10 == v9)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 248) = v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE9C8);
      sub_190A47D40();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v15 = *(_QWORD *)(v0 + 296) + 1;
    *(_QWORD *)(v0 + 296) = v15;
    *(_QWORD *)(v0 + 304) = v3;
    v16 = *(_QWORD *)(v0 + 272);
    v17 = (v16 & 0xC000000000000001) != 0 ? (id)MEMORY[0x194013510]() : *(id *)(v16 + 8 * v15 + 32);
    v18 = v17;
    *(_QWORD *)(v0 + 312) = v17;
    if (*(_QWORD *)(*(_QWORD *)(v0 + 288) + 16))
    {
      v19 = v17;
      v20 = sub_1908D2CFC((uint64_t)v19);
      if ((v21 & 1) != 0)
      {
        v22 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v0 + 288) + 56) + 16 * v20);
        v23 = *v22;
        v24 = v22[1];
        sub_1908B53B8(*v22, v24);
      }
      else
      {
        v23 = 0;
        v24 = 0xF000000000000000;
      }

    }
    else
    {
      v23 = 0;
      v24 = 0xF000000000000000;
    }
    *(_QWORD *)(v0 + 320) = v23;
    *(_QWORD *)(v0 + 328) = v24;
    v25 = v18;
    sub_1908CE0B4(v23, v24);
    *(_QWORD *)(v0 + 48) = v25;
    v26 = v25;
    v27 = objc_msgSend(v26, sel_kind);
    v28 = sub_190A47ADC();
    v30 = v29;

    *(_QWORD *)(v0 + 16) = v28;
    *(_QWORD *)(v0 + 24) = v30;
    *(_QWORD *)(v0 + 32) = v23;
    *(_QWORD *)(v0 + 40) = v24;
    v31 = objc_msgSend(v26, sel_intentReference);
    if (v31)
    {
      v32 = v31;
      v33 = objc_msgSend(v31, sel_intent);
      *(_QWORD *)(v0 + 336) = v33;

      if (v33)
        break;
    }
LABEL_3:

    *(_QWORD *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  objc_opt_self();
  v34 = (void *)swift_dynamicCastObjCClass();
  if (!v34)
  {

    goto LABEL_3;
  }
  v36 = objc_msgSend(v34, sel_linkAction);
  if (v36)
  {
    v37 = v36;
    *(_QWORD *)(v0 + 240) = sub_1908AB890(0, (unint64_t *)&qword_1EE1EB978);
    *(_QWORD *)(v0 + 216) = v37;
  }
  else
  {
    *(_OWORD *)(v0 + 216) = 0u;
    *(_OWORD *)(v0 + 232) = 0u;
  }
  v38 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 344) = v38;
  *v38 = v0;
  v38[1] = sub_190A017C0;
  return sub_190A45C4C();
}

uint64_t sub_190A01BA8()
{
  uint64_t v0;
  void *v1;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v36;
  id v37;
  _QWORD *v38;
  uint64_t v39;

  v1 = *(void **)(v0 + 336);

  sub_1908B4324(v0 + 216);
  *(_OWORD *)(v0 + 176) = 0u;
  v39 = v0 + 16;
  *(_OWORD *)(v0 + 192) = 0u;
  *(_QWORD *)(v0 + 208) = 0;
  sub_1908B4BD4(v0 + 176, v0 + 56, &qword_1EE1EA700);
  while (1)
  {
    sub_1908CD9EC(v39, v0 + 96);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v3 = *(_QWORD **)(v0 + 304);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v3 = sub_1908F282C(0, v3[2] + 1, 1, *(_QWORD **)(v0 + 304));
    v5 = v3[2];
    v4 = v3[3];
    if (v5 >= v4 >> 1)
      v3 = sub_1908F282C((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
    v7 = *(_QWORD *)(v0 + 320);
    v6 = *(_QWORD *)(v0 + 328);
    v8 = *(void **)(v0 + 312);
    v9 = *(_QWORD *)(v0 + 280);
    v10 = *(_QWORD *)(v0 + 296) + 1;
    v3[2] = v5 + 1;
    v11 = &v3[10 * v5];
    v11[2] = *(_OWORD *)(v0 + 96);
    v12 = *(_OWORD *)(v0 + 112);
    v13 = *(_OWORD *)(v0 + 128);
    v14 = *(_OWORD *)(v0 + 160);
    v11[5] = *(_OWORD *)(v0 + 144);
    v11[6] = v14;
    v11[3] = v12;
    v11[4] = v13;

    sub_1908CE500(v7, v6);
    sub_1908CDA28(v39);
    if (v10 == v9)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 248) = v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE9C8);
      sub_190A47D40();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v15 = *(_QWORD *)(v0 + 296) + 1;
    *(_QWORD *)(v0 + 296) = v15;
    *(_QWORD *)(v0 + 304) = v3;
    v16 = *(_QWORD *)(v0 + 272);
    v17 = (v16 & 0xC000000000000001) != 0 ? (id)MEMORY[0x194013510]() : *(id *)(v16 + 8 * v15 + 32);
    v18 = v17;
    *(_QWORD *)(v0 + 312) = v17;
    if (*(_QWORD *)(*(_QWORD *)(v0 + 288) + 16))
    {
      v19 = v17;
      v20 = sub_1908D2CFC((uint64_t)v19);
      if ((v21 & 1) != 0)
      {
        v22 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v0 + 288) + 56) + 16 * v20);
        v23 = *v22;
        v24 = v22[1];
        sub_1908B53B8(*v22, v24);
      }
      else
      {
        v23 = 0;
        v24 = 0xF000000000000000;
      }

    }
    else
    {
      v23 = 0;
      v24 = 0xF000000000000000;
    }
    *(_QWORD *)(v0 + 320) = v23;
    *(_QWORD *)(v0 + 328) = v24;
    v25 = v18;
    sub_1908CE0B4(v23, v24);
    *(_QWORD *)(v0 + 48) = v25;
    v26 = v25;
    v27 = objc_msgSend(v26, sel_kind);
    v28 = sub_190A47ADC();
    v30 = v29;

    *(_QWORD *)(v0 + 16) = v28;
    *(_QWORD *)(v0 + 24) = v30;
    *(_QWORD *)(v0 + 32) = v23;
    *(_QWORD *)(v0 + 40) = v24;
    v31 = objc_msgSend(v26, sel_intentReference);
    if (v31)
    {
      v32 = v31;
      v33 = objc_msgSend(v31, sel_intent);
      *(_QWORD *)(v0 + 336) = v33;

      if (v33)
        break;
    }
LABEL_3:

    *(_QWORD *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  objc_opt_self();
  v34 = (void *)swift_dynamicCastObjCClass();
  if (!v34)
  {

    goto LABEL_3;
  }
  v36 = objc_msgSend(v34, sel_linkAction);
  if (v36)
  {
    v37 = v36;
    *(_QWORD *)(v0 + 240) = sub_1908AB890(0, (unint64_t *)&qword_1EE1EB978);
    *(_QWORD *)(v0 + 216) = v37;
  }
  else
  {
    *(_OWORD *)(v0 + 216) = 0u;
    *(_OWORD *)(v0 + 232) = 0u;
  }
  v38 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 344) = v38;
  *v38 = v0;
  v38[1] = sub_190A017C0;
  return sub_190A45C4C();
}

uint64_t sub_190A01F38(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  void (*v5)(void *, unint64_t, void *);
  id v6;
  unint64_t v7;
  unint64_t v8;
  id v9;

  v4 = a2;
  v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v6 = v4;
    v4 = (void *)sub_190A46000();
    v8 = v7;

  }
  else
  {
    swift_retain();
    v8 = 0xF000000000000000;
  }
  v9 = a3;
  v5(v4, v8, a3);

  sub_1908CE500((uint64_t)v4, v8);
  return swift_release();
}

uint64_t sub_190A01FCC()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  _OWORD v12[2];
  _BYTE v13[24];
  uint64_t v14;

  BSDispatchQueueAssert();
  sub_190A02208();
  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    v2 = v1;
    if (-[NSObject remoteTarget](v2, sel_remoteTarget))
    {
      sub_190A481B4();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v12, 0, sizeof(v12));
    }
    sub_1908B4BD4((uint64_t)v12, (uint64_t)v13, (uint64_t *)&unk_1ECF6C8A0);
    if (v14)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE9C0);
      if ((swift_dynamicCast() & 1) != 0)
      {

        return v11;
      }
    }
    else
    {
      sub_1908B4324((uint64_t)v13);
    }
    if (qword_1EE1EC548 != -1)
      swift_once();
    v7 = sub_190A465A0();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EE1FD800);
    v8 = sub_190A46588();
    v9 = sub_190A47F5C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1908A7000, v8, v9, "Failed to cast connection to server interface protocol", v10, 2u);
      MEMORY[0x194014398](v10, -1, -1);
    }

  }
  else
  {
    if (qword_1EE1EC548 != -1)
      swift_once();
    v3 = sub_190A465A0();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EE1FD800);
    v2 = sub_190A46588();
    v4 = sub_190A47F5C();
    if (os_log_type_enabled(v2, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1908A7000, v2, v4, "Failed to establish a connection", v5, 2u);
      MEMORY[0x194014398](v5, -1, -1);
    }
  }

  return 0;
}

void sub_190A02208()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _OWORD v7[2];

  BSDispatchQueueAssert();
  sub_190A02358();
  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    v2 = v1;
    if (objc_msgSend(v2, sel_remoteTarget))
    {
      sub_190A481B4();

      swift_unknownObjectRelease();
      sub_1908B4324((uint64_t)v7);
    }
    else
    {
      memset(v7, 0, sizeof(v7));
      sub_1908B4324((uint64_t)v7);
      if (qword_1EE1EC548 != -1)
        swift_once();
      v3 = sub_190A465A0();
      __swift_project_value_buffer(v3, (uint64_t)qword_1EE1FD800);
      v4 = sub_190A46588();
      v5 = sub_190A47F68();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v6 = 0;
        _os_log_impl(&dword_1908A7000, v4, v5, "Activating client connection.", v6, 2u);
        MEMORY[0x194014398](v6, -1, -1);
      }

      objc_msgSend(v2, sel_activate);
    }
  }
}

void sub_190A02358()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t aBlock[7];

  BSDispatchQueueAssert();
  if (!*(_QWORD *)(v0 + 24))
  {
    v1 = (void *)sub_190A47AC4();
    v2 = (void *)sub_190A47AC4();
    v12 = objc_msgSend((id)objc_opt_self(), sel_endpointForMachName_service_instance_, v1, v2, 0);

    if (v12)
    {
      v3 = objc_msgSend((id)objc_opt_self(), sel_connectionWithEndpoint_, v12);
      if (!v3)
      {
LABEL_11:

        return;
      }
      v4 = *(void **)(v0 + 24);
      *(_QWORD *)(v0 + 24) = v3;
      v5 = v3;

      v6 = swift_allocObject();
      *(_QWORD *)(v6 + 16) = sub_190A02D3C;
      *(_QWORD *)(v6 + 24) = v0;
      aBlock[4] = (uint64_t)sub_1909172D0;
      aBlock[5] = v6;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_190A02A38;
      aBlock[3] = (uint64_t)&block_descriptor_9;
      v7 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      objc_msgSend(v5, sel_configureConnection_, v7);

      _Block_release(v7);
      LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if ((v5 & 1) == 0)
        return;
      __break(1u);
    }
    if (qword_1EE1EC548 != -1)
      swift_once();
    v8 = sub_190A465A0();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EE1FD800);
    v12 = sub_190A46588();
    v9 = sub_190A47F5C();
    if (os_log_type_enabled(v12, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      aBlock[0] = v11;
      *(_DWORD *)v10 = 136446210;
      aBlock[6] = sub_1908B35C4(0xD00000000000001ELL, 0x8000000190A62460, aBlock);
      sub_190A48178();
      _os_log_impl(&dword_1908A7000, v12, v9, "Unable to get endpoint for mach-service: %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v11, -1, -1);
      MEMORY[0x194014398](v10, -1, -1);

      return;
    }
    goto LABEL_11;
  }
}

void sub_190A02684(void *a1, uint64_t a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, void *);
  void *v17;
  void (*v18)(uint64_t);
  uint64_t v19;

  v4 = (void *)sub_190A47AC4();
  v5 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v4);

  if (qword_1EE1EC500 != -1)
    swift_once();
  v6 = qword_1EE1ED8B8;
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_protocolForProtocol_, v6);
  objc_msgSend(v5, sel_setClient_, v8);

  if (qword_1EE1EC508 != -1)
    swift_once();
  v9 = objc_msgSend(v7, sel_protocolForProtocol_, qword_1EE1ED8C0);
  objc_msgSend(v5, sel_setServer_, v9);

  if (qword_1EE1EC510 != -1)
    swift_once();
  objc_msgSend(a1, sel_setServiceQuality_, qword_1EE1ED8C8);
  objc_msgSend(a1, sel_setInterface_, v5);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  v18 = sub_190A02940;
  v19 = 0;
  v10 = MEMORY[0x1E0C809B0];
  v14 = MEMORY[0x1E0C809B0];
  v15 = 1107296256;
  v16 = sub_1908AA2A4;
  v17 = &block_descriptor_3;
  v11 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setActivationHandler_, v11);
  _Block_release(v11);
  v18 = sub_190A0294C;
  v19 = 0;
  v14 = v10;
  v15 = 1107296256;
  v16 = sub_1908AA2A4;
  v17 = &block_descriptor_6;
  v12 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setInterruptionHandler_, v12);
  _Block_release(v12);
  v18 = sub_190A02958;
  v19 = 0;
  v14 = v10;
  v15 = 1107296256;
  v16 = sub_1908AA2A4;
  v17 = &block_descriptor_9;
  v13 = _Block_copy(&v14);
  objc_msgSend(a1, sel_setInvalidationHandler_, v13);
  _Block_release(v13);

}

void sub_190A02940(uint64_t a1)
{
  sub_190A02964(a1, "Connection Activated");
}

void sub_190A0294C(uint64_t a1)
{
  sub_190A02964(a1, "Connection Interrupted");
}

void sub_190A02958(uint64_t a1)
{
  sub_190A02964(a1, "Connection Invalidated");
}

void sub_190A02964(uint64_t a1, const char *a2)
{
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  if (qword_1EE1EC548 != -1)
    swift_once();
  v3 = sub_190A465A0();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EE1FD800);
  oslog = sub_190A46588();
  v4 = sub_190A47F68();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1908A7000, oslog, v4, a2, v5, 2u);
    MEMORY[0x194014398](v5, -1, -1);
  }

}

uint64_t sub_190A02A38(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

uint64_t sub_190A02A74()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ControlCenterClient()
{
  return objc_opt_self();
}

uint64_t sub_190A02AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  _QWORD v9[2];

  v1 = sub_190A47FF8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_190A47FE0();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v5);
  v7 = sub_190A479C8();
  MEMORY[0x1E0C80A78](v7);
  v9[0] = sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3A0);
  sub_190A479A4();
  v9[1] = MEMORY[0x1E0DEE9D8];
  sub_1908AA2F4((unint64_t *)&unk_1ECF6D238, v6, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D228);
  sub_1908AAA08(&qword_1ECF6D230, &qword_1ECF6D228);
  sub_190A481E4();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF8D8], v1);
  *(_QWORD *)(v0 + 16) = sub_190A4801C();
  *(_QWORD *)(v0 + 24) = 0;
  return v0;
}

uint64_t sub_190A02C90()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = *v0;
  return swift_task_switch();
}

uint64_t sub_190A02CAC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED390);
  *v1 = v0;
  v1[1] = sub_190935E58;
  return sub_190A48718();
}

void sub_190A02D3C(void *a1)
{
  uint64_t v1;

  sub_190A02684(a1, v1);
}

uint64_t sub_190A02D44()
{
  return swift_deallocObject();
}

uint64_t sub_190A02D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE9C8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_190A02DCC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE9C8) - 8) + 80);
  return sub_190A00FA0(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_190A02E00()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE9C8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_190A02E64(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE9C8) - 8) + 80);
  sub_190A01148(a1, a2, a3, v3 + ((v7 + 16) & ~v7));
}

unint64_t sub_190A02EBC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE1EE9D8;
  if (!qword_1EE1EE9D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EE9D0);
    v2 = sub_1908AA2F4(&qword_1EE1EE9E0, (uint64_t (*)(uint64_t))type metadata accessor for ControlsConfigurationXPCContainer, (uint64_t)&protocol conformance descriptor for ControlsConfigurationXPCContainer);
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEE9A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EE9D8);
  }
  return result;
}

uint64_t sub_190A02F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE9C8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_190A02FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE9C8) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = v0 + ((v2 + 40) & ~v2);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1908C5090;
  v5[32] = v3;
  v5[33] = v4;
  return swift_task_switch();
}

uint64_t sub_190A0303C()
{
  uint64_t *v0;

  return sub_190A00A54(v0[2], v0[3], v0[4]);
}

uint64_t objectdestroy_30Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190A03078()
{
  return sub_190A00CCC();
}

__n128 sub_190A030BC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  char v3;
  char v4;
  char v5;
  __int128 v6;
  __n128 result;

  v2 = *(_BYTE *)(a1 + 16) & 1;
  v3 = *(_BYTE *)(a1 + 17) & 1;
  v4 = *(_BYTE *)(a1 + 40) & 1;
  v5 = *(_BYTE *)(a1 + 41) & 1;
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_BYTE *)(a2 + 16) = v2;
  *(_BYTE *)(a2 + 17) = v3;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_BYTE *)(a2 + 40) = v4;
  *(_BYTE *)(a2 + 41) = v5;
  v6 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 48) = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 64) = v6;
  result = *(__n128 *)(a1 + 80);
  *(__n128 *)(a2 + 80) = result;
  return result;
}

uint64_t sub_190A03110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;

  v4[29] = a3;
  v4[30] = v3;
  v4[27] = a1;
  v4[28] = a2;
  v4[31] = type metadata accessor for ControlTemplateToggle(0);
  v4[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  v4[33] = swift_task_alloc();
  type metadata accessor for ControlTemplateToggle.Option(0);
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  v4[38] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB690);
  v4[39] = swift_task_alloc();
  v4[40] = swift_task_alloc();
  v4[41] = type metadata accessor for ExtractedControlMetadata(0);
  v4[42] = swift_task_alloc();
  v6 = *(_QWORD *)(a3 + 16);
  v4[43] = v6;
  v4[44] = *(_QWORD *)(v6 - 8);
  v4[45] = swift_task_alloc();
  v7 = sub_190A46894();
  v4[46] = v7;
  v4[47] = *(_QWORD *)(v7 - 8);
  v4[48] = swift_task_alloc();
  sub_190A47D64();
  v4[49] = sub_190A47D58();
  sub_190A47D28();
  return swift_task_switch();
}

void sub_190A032E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  __int128 v8;
  __int128 v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  int v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 344);
  v42 = *(_QWORD *)(v0 + 336);
  v44 = *(_QWORD *)(v0 + 352);
  v47 = *(_QWORD *)(v0 + 328);
  v6 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 240);
  v40 = *(_QWORD *)(v0 + 224);
  swift_release();
  v7 = *(void (**)(void))(v5 + 64);
  v8 = *(_OWORD *)(v5 + 25);
  v9 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)v5;
  *(_OWORD *)(v0 + 128) = v9;
  *(_OWORD *)(v0 + 137) = v8;
  v10 = *(unsigned __int8 *)(v0 + 128);
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = 0;
  v7();
  v12 = *(_QWORD *)(v6 + 32);
  v46 = v10;
  sub_1909FAD80(v10, v4, v12);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v2, v4);
  MEMORY[0x19401429C](&unk_190A5B958, v6);
  v13 = sub_19093A4B0();
  v45 = v12;
  *(_QWORD *)(v0 + 200) = v12;
  *(_QWORD *)(v0 + 208) = v13;
  MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v3, v0 + 200);
  sub_1909FAF34(v1, v40, v3, v42);
  if (*(_BYTE *)(v42 + *(int *)(v47 + 20)) == 1)
    *(_BYTE *)(v11 + 16) = 1;
  v14 = *(uint64_t (**)(_QWORD))(v0 + 112);
  v48 = v11;
  if (v14)
  {
    v15 = v14(*(_QWORD *)(v0 + 224));
    v17 = v16;
    v19 = v18 & 1;
  }
  else
  {
    v15 = 0;
    v17 = 0;
    v19 = 1;
  }
  v20 = *(_QWORD *)(v0 + 320);
  sub_190A47194();
  v21 = sub_190A471D0();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  v24 = v23(v20, 1, v21);
  v25 = *(_QWORD *)(v0 + 320);
  v43 = v15;
  if (v24 == 1)
  {
    sub_1908AA544(v25, &qword_1EE1EB690);
  }
  else
  {
    v26 = (void *)sub_190A471C4();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v25, v21);
    v27 = objc_msgSend(v26, (SEL)0x1F2A60448);

    sub_190A47ADC();
  }
  v28 = *(_QWORD *)(v0 + 312);
  sub_190A471A0();
  v29 = v23(v28, 1, v21);
  v30 = *(_QWORD *)(v0 + 312);
  v41 = v17;
  if (v29 == 1)
  {
    sub_1908AA544(v30, &qword_1EE1EB690);
  }
  else
  {
    v31 = (void *)sub_190A471C4();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v30, v21);
    v32 = objc_msgSend(v31, sel_string);

    sub_190A47ADC();
  }
  v33 = *(_QWORD *)(v0 + 344);
  v35 = *(_QWORD *)(v0 + 296);
  v34 = *(_QWORD *)(v0 + 304);
  v37 = *(_QWORD *)(v0 + 232);
  v36 = *(_QWORD *)(v0 + 240);
  v38 = *(_QWORD *)(v0 + 224);
  sub_190A4726C();
  LOBYTE(v39) = v19;
  sub_190A03900(1, v36, v46, v38, v34, v48, v43, v41, v35, v39, v33, *(_QWORD *)(v37 + 24), v45, *(_QWORD *)(v37 + 40));
}

#error "190A03648: call analysis failed (funcsize=12)"

uint64_t sub_190A0364C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  int *v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if ((v0 & 1) == 0)
  {
    swift_beginAccess();
    *(_DWORD *)(v2 - 96) = *v24;
  }
  *(_QWORD *)(v2 - 128) = *(_QWORD *)(v1 + 384);
  v27 = *(_QWORD *)(v1 + 376);
  v28 = *(_QWORD *)(v1 + 368);
  *(_QWORD *)(v2 - 120) = *(_QWORD *)(v1 + 360);
  v26 = *(_QWORD *)(v1 + 336);
  v3 = *(_QWORD *)(v1 + 312);
  *(_QWORD *)(v2 - 112) = *(_QWORD *)(v1 + 320);
  *(_QWORD *)(v2 - 104) = v3;
  v5 = *(_QWORD *)(v1 + 280);
  v4 = *(_QWORD *)(v1 + 288);
  v21 = v4;
  v6 = *(_QWORD *)(v1 + 264);
  v7 = *(_QWORD *)(v1 + 272);
  v9 = *(int **)(v1 + 248);
  v8 = *(_QWORD **)(v1 + 256);
  v22 = *(_QWORD *)(v1 + 216);
  v23 = *(_QWORD *)(v1 + 296);
  v25 = *(_QWORD *)(v1 + 304);
  sub_190A04204(v23, v5);
  sub_190A04204(v4, v7);
  v10 = sub_190A45FC4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v6, 1, 1, v10);
  v20 = *(_BYTE *)(v1 + 129);
  sub_1908B4BD4(v1 + 136, v1 + 184, &qword_1ECF6C2E8);
  v19 = *(_BYTE *)(v1 + 152);
  v12 = (uint64_t)v8 + v9[8];
  v11(v12, 1, 1, v10);
  v13 = (_QWORD *)((char *)v8 + v9[11]);
  *v13 = 0;
  v13[1] = 0;
  *v8 = v18;
  v8[1] = v17;
  v8[2] = v16;
  v8[3] = v15;
  sub_1908BD0B4(v5, (uint64_t)v8 + v9[6], type metadata accessor for ControlTemplateToggle.Option);
  sub_1908BD0B4(v7, (uint64_t)v8 + v9[7], type metadata accessor for ControlTemplateToggle.Option);
  sub_19093AF24(v1 + 184);
  sub_1908DCA84(v6, v12, (uint64_t *)&unk_1ECF6C858);
  *((_BYTE *)v8 + v9[9]) = *(_DWORD *)(v2 - 96);
  *((_BYTE *)v8 + v9[10]) = v20;
  sub_1908DCA84(v1 + 184, (uint64_t)v13, &qword_1ECF6C2E8);
  *((_BYTE *)v8 + v9[12]) = v19;
  sub_1908BD0B4((uint64_t)v8, v22, type metadata accessor for ControlTemplateToggle);
  sub_1908B5150(v21, type metadata accessor for ControlTemplateToggle.Option);
  sub_1908B5150(v23, type metadata accessor for ControlTemplateToggle.Option);
  sub_1908AA544(v25, (uint64_t *)&unk_1ECF6A3B8);
  sub_1908B5150(v26, type metadata accessor for ExtractedControlMetadata);
  (*(void (**)(_QWORD, uint64_t))(v27 + 8))(*(_QWORD *)(v2 - 128), v28);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_190A038F0()
{
  return swift_deallocObject();
}

void sub_190A03900(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD v44[3];
  int v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[2];

  v64 = a8;
  v63 = a7;
  v44[1] = a6;
  v47 = a5;
  v60 = a4;
  v53 = a3;
  v65 = a9;
  v58 = a13;
  v52 = a14;
  v54 = a11;
  v49 = type metadata accessor for ControlTemplateToggle.Option(0);
  MEMORY[0x1E0C80A78](v49);
  v62 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  v18 = MEMORY[0x1E0C80A78](v17);
  v48 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v44[2] = (char *)v44 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v66 = (char *)v44 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v55 = (char *)v44 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v46 = (char *)v44 - v27;
  MEMORY[0x1E0C80A78](v26);
  v68 = (char *)v44 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB690);
  MEMORY[0x1E0C80A78](v29);
  v51 = (char *)v44 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for ExtractedControlValueMetadata(0);
  v31 = MEMORY[0x1E0C80A78](v67);
  v69 = (char *)v44 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(_QWORD *)(a12 - 8);
  MEMORY[0x1E0C80A78](v31);
  v35 = (char *)v44 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6A8E0);
  v36 = sub_190A46894();
  v50 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)v44 - v37;
  v39 = sub_190A46894();
  v59 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v45 = *(unsigned __int8 *)(a2 + 40);
  v40 = *(void (**)(uint64_t))(a2 + 48);
  v57 = *(_QWORD *)(a2 + 80);
  v56 = *(_QWORD *)(a2 + 88);
  v61 = a1;
  v40(a1);
  swift_getKeyPath();
  LOBYTE(v70) = 1;
  v41 = v52;
  sub_190A474F4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v35, a12);
  v42 = sub_19093A464();
  v74[0] = v41;
  v74[1] = v42;
  v43 = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v36, v74);
  sub_1909FAD80(v53, v36, v43);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v36);
  v70 = v54;
  v71 = a12;
  v72 = v58;
  v73 = v41;
  type metadata accessor for ControlWidgetToggleParser();
}

uint64_t sub_190A03D04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  int v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;

  MEMORY[0x19401429C](&unk_190A5B958, a1);
  v7 = sub_19093A4B0();
  *(_QWORD *)(v6 - 216) = v5;
  *(_QWORD *)(v6 - 208) = v7;
  v8 = v1;
  v9 = *(_QWORD *)(v6 - 376);
  MEMORY[0x19401429C](v8, v3, v6 - 216);
  *(_QWORD *)(v6 - 320) = v4;
  v10 = *(_QWORD *)(v6 - 304);
  *(_QWORD *)(v6 - 304) = v3;
  sub_1909FADB0(v4, v10, v3, v2);
  sub_190A47194();
  v11 = sub_190A471D0();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    sub_1908AA544(v9, &qword_1EE1EB690);
    *(_QWORD *)(v6 - 352) = 0;
    *(_QWORD *)(v6 - 360) = 0;
  }
  else
  {
    v13 = (void *)sub_190A471C4();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
    v14 = objc_msgSend(v13, sel_string);

    *(_QWORD *)(v6 - 352) = sub_190A47ADC();
    *(_QWORD *)(v6 - 360) = v15;

  }
  v16 = *(int **)(v6 - 392);
  v17 = *(_QWORD *)(v6 - 400);
  v19 = *(_QWORD *)(v6 - 248);
  v18 = *(_QWORD *)(v6 - 240);
  v20 = *(_QWORD *)(v6 - 408);
  v21 = *(_QWORD *)(v6 - 416);
  sub_190A4726C();
  v22 = *(_QWORD *)(v6 - 344);
  sub_19093AF58(v20, v22);
  v23 = sub_190A47260();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  if (v25(v21, 1, v23) == 1)
  {
    sub_1908B4BD4(v22, v18, (uint64_t *)&unk_1ECF6A3B8);
    sub_1908AA544(v21, (uint64_t *)&unk_1ECF6A3B8);
  }
  else
  {
    sub_1908AA544(v22, (uint64_t *)&unk_1ECF6A3B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v18, v21, v23);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
  }
  v26 = *(_QWORD *)(v6 - 256);
  v27 = *(_DWORD *)(v6 - 420);
  if (*(_BYTE *)(v2 + *(int *)(v19 + 24)) == 1)
  {
    v28 = (_BYTE *)(*(_QWORD *)(v6 - 440) + 16);
    swift_beginAccess();
    *v28 = 1;
    v26 = *(_QWORD *)(v6 - 256);
    v19 = *(_QWORD *)(v6 - 248);
  }
  *(_DWORD *)(v6 - 248) = *(unsigned __int8 *)(v6 + 16);
  sub_19093AF58(v18, v26);
  if ((v27 & 1) != 0)
  {
    sub_1908AA544(v26, (uint64_t *)&unk_1ECF6A3B8);
    (*(void (**)(_QWORD))(v6 - 328))(*(_DWORD *)(v6 - 296) & 1);
    v32 = *(_QWORD *)(v6 - 224);
  }
  else
  {
    v29 = v26;
    v30 = v26;
    v31 = *(_QWORD *)(v6 - 432);
    sub_19093AF58(v29, v31);
    if (v25(v31, 1, v23) == 1)
    {
      sub_1908AA544(v30, (uint64_t *)&unk_1ECF6A3B8);
      sub_1908AA544(v31, (uint64_t *)&unk_1ECF6A3B8);
      (*(void (**)(_QWORD))(v6 - 328))(*(_DWORD *)(v6 - 296) & 1);
      v32 = *(_QWORD *)(v6 - 224);
LABEL_15:
      *(_QWORD *)(v6 - 296) = v32;
      v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
      v34(v17, 1, 1, v23);
      goto LABEL_16;
    }
    v33 = sub_190A47254();
    sub_1908AA544(v30, (uint64_t *)&unk_1ECF6A3B8);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v31, v23);
    (*(void (**)(_QWORD))(v6 - 328))(*(_DWORD *)(v6 - 296) & 1);
    v32 = *(_QWORD *)(v6 - 224);
    if ((v33 & 1) == 0)
      goto LABEL_15;
  }
  *(_QWORD *)(v6 - 296) = v32;
  sub_19093AF58(v18, v17);
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
LABEL_16:
  v35 = (uint64_t *)(v2 + *(int *)(v19 + 20));
  v37 = *v35;
  v36 = v35[1];
  v38 = v35[3];
  *(_QWORD *)(v6 - 256) = v35[2];
  v39 = *(_QWORD **)(v6 - 288);
  v40 = (uint64_t)v39 + v16[6];
  v34(v40, 1, 1, v23);
  v41 = (char *)v39 + v16[7];
  *(_QWORD *)v41 = 0;
  *((_QWORD *)v41 + 1) = 0;
  v41[16] = 1;
  v42 = (_QWORD *)((char *)v39 + v16[8]);
  *v42 = 0;
  v42[1] = 0;
  v43 = (_QWORD *)((char *)v39 + v16[9]);
  *v43 = 0;
  v43[1] = 0;
  v44 = *(_QWORD *)(v6 - 360);
  *v39 = *(_QWORD *)(v6 - 352);
  v39[1] = v44;
  v39[2] = *(_QWORD *)(v6 - 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1908DCA84(v17, v40, (uint64_t *)&unk_1ECF6A3B8);
  v45 = *(_QWORD *)(v6 - 272);
  *(_QWORD *)v41 = *(_QWORD *)(v6 - 280);
  *((_QWORD *)v41 + 1) = v45;
  v41[16] = *(_DWORD *)(v6 - 248) & 1;
  swift_bridgeObjectRelease();
  *v42 = v37;
  v42[1] = v36;
  swift_bridgeObjectRelease();
  *v43 = *(_QWORD *)(v6 - 256);
  v43[1] = v38;
  sub_1908BD0B4((uint64_t)v39, *(_QWORD *)(v6 - 264), type metadata accessor for ControlTemplateToggle.Option);
  sub_1908AA544(*(_QWORD *)(v6 - 240), (uint64_t *)&unk_1ECF6A3B8);
  sub_1908B5150(*(_QWORD *)(v6 - 232), type metadata accessor for ExtractedControlValueMetadata);
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 312) + 8))(*(_QWORD *)(v6 - 320), *(_QWORD *)(v6 - 304));
}

uint64_t sub_190A04204(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ControlTemplateToggle.Option(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void type metadata accessor for ControlWidgetToggleParser()
{
  JUMPOUT(0x1940141E8);
}

uint64_t sub_190A0425C(_QWORD *a1)
{
  if (*a1)
    swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_190A042A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)a2)
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_190A0435C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  if (!*(_QWORD *)a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 8) = v6;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  swift_retain();
  swift_release();
LABEL_8:
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_BYTE *)(a1 + 17) = *((_BYTE *)a2 + 17);
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_BYTE *)(a1 + 41) = *((_BYTE *)a2 + 41);
  v7 = a2[7];
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = v7;
  swift_retain();
  swift_release();
  v8 = a2[9];
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = v8;
  swift_retain();
  swift_release();
  v9 = a2[11];
  *(_QWORD *)(a1 + 80) = a2[10];
  *(_QWORD *)(a1 + 88) = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_190A04460(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  if (!*(_QWORD *)a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 8) = v6;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  swift_release();
LABEL_8:
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_BYTE *)(a1 + 17) = *((_BYTE *)a2 + 17);
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_BYTE *)(a1 + 41) = *((_BYTE *)a2 + 41);
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
  swift_release();
  *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
  swift_release();
  *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
  swift_release();
  return a1;
}

uint64_t sub_190A04528(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_190A04570(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_190A045CC@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *v1;
  v3 = *((_QWORD *)v1 + 1);
  v4 = *((_QWORD *)v1 + 6);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 41) = v2;
  *(_QWORD *)(a1 + 48) = v3;
  v5 = *((_OWORD *)v1 + 2);
  *(_OWORD *)(a1 + 56) = *((_OWORD *)v1 + 1);
  *(_OWORD *)(a1 + 72) = v5;
  *(_QWORD *)(a1 + 88) = v4;
  swift_retain();
  swift_retain();
  return swift_retain();
}

__n128 sub_190A0463C@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v9;
  char v10;
  char v11;
  __n128 result;

  v9 = *(_BYTE *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 17);
  v11 = *(_BYTE *)(a1 + 40);
  *(_OWORD *)a9 = *(_OWORD *)a1;
  *(_BYTE *)(a9 + 16) = v9 & 1;
  *(_BYTE *)(a9 + 17) = v10 & 1;
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a9 + 24) = result;
  *(_BYTE *)(a9 + 40) = v11 & 1;
  *(_BYTE *)(a9 + 41) = a2;
  *(_QWORD *)(a9 + 48) = a3;
  *(_QWORD *)(a9 + 56) = a4;
  *(_QWORD *)(a9 + 64) = a5;
  *(_QWORD *)(a9 + 72) = a6;
  *(_QWORD *)(a9 + 80) = a7;
  *(_QWORD *)(a9 + 88) = a8;
  return result;
}

void ControlWidgetToggle.body.getter()
{
  swift_retain();
  swift_retain();
  swift_retain();
  type metadata accessor for ControlWidgetToggleTemplateProvider();
}

uint64_t sub_190A04738(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;

  v4 = MEMORY[0x19401429C](&unk_190A5BB00, a1);
  sub_1909728D0((uint64_t)v34, a1, (uint64_t)&v24);
  v5 = v24;
  v13[0] = v24;
  v13[1] = v25;
  v14 = v26;
  v15 = v27;
  v16 = v28;
  v17 = v29;
  v18 = v30;
  v19 = v31;
  v20 = v32;
  v21 = *(_OWORD *)(v2 + 56);
  v22 = *(_OWORD *)(v2 + 72);
  v23 = v33;
  v7 = type metadata accessor for TemplateDescriptorPreference(0, a1, v4, v6);
  MEMORY[0x19401429C](&unk_190A5E7E0, v7);
  v8 = *(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  v8(v34, v13, v7);
  sub_1908B467C(v5);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v9 = v34[0];
  v10 = v41;
  v11 = v42;
  v24 = v34[0];
  v25 = v34[1];
  v26 = v35;
  v27 = v36;
  v28 = v37;
  v29 = v38;
  v30 = v39;
  v31 = v40;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)(v2 + 152);
  *(_OWORD *)(v2 + 72) = *(_OWORD *)(v2 + 168);
  v32 = v10;
  v33 = v11;
  v8(v1, &v24, v7);
  sub_1908B467C(v9);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

void type metadata accessor for ControlWidgetToggleTemplateProvider()
{
  JUMPOUT(0x1940141E8);
}

void static ControlWidgetToggle._controlType.getter()
{
  type metadata accessor for ControlWidgetToggle();
}

void type metadata accessor for ControlWidgetToggle()
{
  JUMPOUT(0x1940141E8);
}

void sub_190A04938()
{
  static ControlWidgetToggle._controlType.getter();
}

uint64_t ControlWidgetToggle.init<>(isOn:action:label:valueLabel:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, __int128 a11, uint64_t a12)
{
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;

  v17 = *(_QWORD *)(a10 - 8);
  v18 = (*(unsigned __int8 *)(v17 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a7;
  *(_QWORD *)(v19 + 24) = a8;
  *(_QWORD *)(v19 + 32) = a10;
  *(_OWORD *)(v19 + 40) = a11;
  *(_QWORD *)(v19 + 56) = a12;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v17 + 32))(v19 + v18, a2, a10);
  *(_BYTE *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a5;
  *(_QWORD *)(a9 + 16) = a6;
  *(_QWORD *)(a9 + 24) = a3;
  *(_QWORD *)(a9 + 32) = a4;
  *(_QWORD *)(a9 + 40) = sub_190A04ADC;
  *(_QWORD *)(a9 + 48) = v19;
  return result;
}

uint64_t sub_190A04A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, _QWORD *a3@<X8>)
{
  char v4;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;

  v4 = a1;
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  v11 = v4;
  return ControlAction.init<A, B>(_:value:)((uint64_t)v7, (uint64_t)&v11, MEMORY[0x1E0DEAFA0], a2, a3);
}

uint64_t sub_190A04ADC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_190A04A38(a1, *(_QWORD *)(v2 + 32), a2);
}

uint64_t ControlWidgetToggle.init<>(isOn:action:label:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;

  v23 = a8;
  v25 = a3;
  v26 = a4;
  v24 = a1;
  v14 = *(_QWORD *)(a6 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](a1);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v14 + 16))(v16);
  v17 = sub_190A04C38();
  v18 = (*(unsigned __int8 *)(v14 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = a5;
  *((_QWORD *)v19 + 3) = &type metadata for ControlWidgetToggleDefaultLabel;
  *((_QWORD *)v19 + 4) = a6;
  *((_QWORD *)v19 + 5) = a7;
  v20 = v23;
  *((_QWORD *)v19 + 6) = v17;
  *((_QWORD *)v19 + 7) = v20;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], v16, a6);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(a2, a6);
  *(_BYTE *)a9 = v24;
  *(_QWORD *)(a9 + 8) = sub_190A04C30;
  *(_QWORD *)(a9 + 16) = 0;
  v22 = v26;
  *(_QWORD *)(a9 + 24) = v25;
  *(_QWORD *)(a9 + 32) = v22;
  *(_QWORD *)(a9 + 40) = sub_190A04ADC;
  *(_QWORD *)(a9 + 48) = v19;
  return result;
}

uint64_t sub_190A04C30@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t sub_190A04C38()
{
  unint64_t result;

  result = qword_1EE1EEA80[0];
  if (!qword_1EE1EEA80[0])
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ControlWidgetToggleDefaultLabel, &type metadata for ControlWidgetToggleDefaultLabel);
    atomic_store(result, qword_1EE1EEA80);
  }
  return result;
}

double ControlWidgetToggleDefaultLabel.body.getter@<D0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  double result;
  __int128 v7;
  __int128 v8;
  char v9;

  if (*v1 == 1)
  {
    if (qword_1EE1EC570 != -1)
      swift_once();
    v3 = qword_1EE1FD838;
    v4 = unk_1EE1FD840;
    v5 = byte_1EE1FD848;
  }
  else
  {
    if (qword_1EE1EC578 != -1)
      swift_once();
    v3 = qword_1EE1FD858;
    v4 = unk_1EE1FD860;
    v5 = byte_1EE1FD868;
  }
  sub_190950F28(v3, v4, v5);
  swift_bridgeObjectRetain();
  sub_190A46F90();
  result = *(double *)&v7;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_190A04D88()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_190A46E70();
  type metadata accessor for WidgetKitSentinelClass();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  result = sub_190A474AC();
  qword_1EE1FD838 = result;
  unk_1EE1FD840 = v3;
  byte_1EE1FD848 = v4 & 1;
  qword_1EE1FD850 = v5;
  return result;
}

id static NSBundle.widgetKit.getter()
{
  uint64_t ObjCClassFromMetadata;

  type metadata accessor for WidgetKitSentinelClass();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  return objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
}

uint64_t sub_190A04EBC()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_190A46E70();
  type metadata accessor for WidgetKitSentinelClass();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  result = sub_190A474AC();
  qword_1EE1FD858 = result;
  unk_1EE1FD860 = v3;
  byte_1EE1FD868 = v4 & 1;
  qword_1EE1FD870 = v5;
  return result;
}

uint64_t type metadata accessor for WidgetKitSentinelClass()
{
  return objc_opt_self();
}

id sub_190A05004()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ControlWidgetToggle<>.init<>(_:isOn:action:valueLabel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a7;
  v37 = a8;
  v35 = a5;
  v33 = a12;
  v34 = a13;
  v31 = a6;
  v32 = a10;
  v18 = *(_QWORD *)(a11 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](a1);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v21, a11);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a2;
  *(_BYTE *)(v22 + 32) = a3;
  *(_QWORD *)(v22 + 40) = a4;
  v23 = (*(unsigned __int8 *)(v18 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v24 = (char *)swift_allocObject();
  v25 = v32;
  *((_QWORD *)v24 + 2) = MEMORY[0x1E0CDDD78];
  *((_QWORD *)v24 + 3) = v25;
  v26 = MEMORY[0x1E0CDDD58];
  *((_QWORD *)v24 + 4) = a11;
  *((_QWORD *)v24 + 5) = v26;
  v27 = v34;
  *((_QWORD *)v24 + 6) = v33;
  *((_QWORD *)v24 + 7) = v27;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v24[v23], v20, a11);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v31, a11);
  *(_BYTE *)a9 = v35;
  v29 = v37;
  *(_QWORD *)(a9 + 8) = v36;
  *(_QWORD *)(a9 + 16) = v29;
  *(_QWORD *)(a9 + 24) = sub_1909EC0AC;
  *(_QWORD *)(a9 + 32) = v22;
  *(_QWORD *)(a9 + 40) = sub_190A04ADC;
  *(_QWORD *)(a9 + 48) = v24;
  return result;
}

uint64_t sub_190A051A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t ControlWidgetToggle<>.init<A>(_:isOn:action:valueLabel:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;

  v41 = a4;
  v42 = a5;
  v38 = a1;
  v39 = a3;
  v40 = a2;
  v35 = a11;
  v36 = a12;
  v17 = *(_QWORD *)(a8 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  v19 = MEMORY[0x1E0C80A78](a1);
  v20 = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v21 - 8);
  v34[1] = *(_QWORD *)(v22 + 64);
  MEMORY[0x1E0C80A78](v19);
  v37 = (char *)v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v22 + 16))();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, a1, a8);
  v24 = (*(unsigned __int8 *)(v17 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v25 = (char *)swift_allocObject();
  *((_QWORD *)v25 + 2) = a6;
  *((_QWORD *)v25 + 3) = a7;
  v26 = a8;
  v34[0] = a8;
  *((_QWORD *)v25 + 4) = a8;
  *((_QWORD *)v25 + 5) = a10;
  v28 = v35;
  v27 = v36;
  *((_QWORD *)v25 + 6) = v35;
  *((_QWORD *)v25 + 7) = v27;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v25[v24], v20, v26);
  v29 = (*(unsigned __int8 *)(v22 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v30 = (char *)swift_allocObject();
  *((_QWORD *)v30 + 2) = MEMORY[0x1E0CDDD78];
  *((_QWORD *)v30 + 3) = a6;
  v31 = MEMORY[0x1E0CDDD58];
  *((_QWORD *)v30 + 4) = a7;
  *((_QWORD *)v30 + 5) = v31;
  *((_QWORD *)v30 + 6) = a10;
  *((_QWORD *)v30 + 7) = v28;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v30[v29], v37, a7);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v39, a7);
  result = (*(uint64_t (**)(uint64_t, _QWORD))(v17 + 8))(v38, v34[0]);
  *(_BYTE *)a9 = v40;
  v33 = v42;
  *(_QWORD *)(a9 + 8) = v41;
  *(_QWORD *)(a9 + 16) = v33;
  *(_QWORD *)(a9 + 24) = sub_190A05448;
  *(_QWORD *)(a9 + 32) = v25;
  *(_QWORD *)(a9 + 40) = sub_190A04ADC;
  *(_QWORD *)(a9 + 48) = v30;
  return result;
}

uint64_t sub_190A053B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_190A474B8();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  *(_QWORD *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_190A05448@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 32) - 8) + 80);
  return sub_190A053B4(v1 + ((v2 + 64) & ~v2), a1);
}

uint64_t sub_190A0546C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190A054A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190A054B8()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_190A054E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_190A05550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_190A055CC(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t sub_190A05628(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_190A05670(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ControlWidgetToggleDefaultLabel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190A05708 + 4 * byte_190A5B985[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190A0573C + 4 * byte_190A5B980[v4]))();
}

uint64_t sub_190A0573C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A05744(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190A0574CLL);
  return result;
}

uint64_t sub_190A05758(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190A05760);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190A05764(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A0576C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlWidgetToggleDefaultLabel()
{
  return &type metadata for ControlWidgetToggleDefaultLabel;
}

void sub_190A05788()
{
  type metadata accessor for ControlWidgetToggleTemplateProvider();
}

uint64_t sub_190A057B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = MEMORY[0x19401429C](&unk_190A5BB00, a1);
  v4 = type metadata accessor for TemplateDescriptorPreference(255, a1, v2, v3);
  return MEMORY[0x19401429C](&unk_190A5E7E0, v4);
}

unint64_t sub_190A057F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EEB08;
  if (!qword_1EE1EEB08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE1EEB10);
    v2[0] = MEMORY[0x1E0CDDD58];
    v2[1] = MEMORY[0x1E0CDDD58];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EEB08);
  }
  return result;
}

uint64_t sub_190A05854()
{
  uint64_t v0;
  uint64_t v1;

  return sub_19097797C(*(uint64_t (**)(uint64_t))(v1 + 8), v1, *(_BYTE *)(v0 + 41) & 1);
}

uint64_t sub_190A0586C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[20] = a3;
  v4[21] = v3;
  v4[18] = a1;
  v4[19] = a2;
  sub_190A47D64();
  v4[22] = sub_190A47D58();
  v4[23] = sub_190A47D28();
  v4[24] = v5;
  return swift_task_switch();
}

void sub_190A058DC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (_QWORD *)v0[20];
  v2 = (uint64_t *)v0[21];
  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  sub_190A030BC((uint64_t)v2, (uint64_t)(v0 + 2));
  sub_190A05CA8(v2);
  v0[25] = swift_task_alloc();
  v0[14] = v3;
  v0[15] = v4;
  v0[16] = v5;
  v0[17] = v6;
  type metadata accessor for ControlWidgetToggleParser();
}

uint64_t sub_190A05958(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  v1[1] = sub_190A05988;
  return sub_190A03110(*(_QWORD *)(v2 + 144), *(_QWORD *)(v2 + 152), a1);
}

uint64_t sub_190A05988()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 208) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_190A05D14((uint64_t *)(v2 + 16));
  return swift_task_switch();
}

uint64_t sub_190A059F4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190A05A28()
{
  uint64_t v0;

  sub_190A05D14((uint64_t *)(v0 + 16));
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190A05A68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_BYTE *)(v1 + 16);
  v6 = *(_BYTE *)(v1 + 17);
  v8 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v9 = *(_BYTE *)(v1 + 40);
  sub_1908B4C4C(v3);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = v6;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v9;
  return swift_bridgeObjectRetain();
}

__n128 sub_190A05AD4(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __n128 result;

  sub_1908B467C(*(_QWORD *)v1);
  swift_bridgeObjectRelease();
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v3;
  result = *(__n128 *)(a1 + 25);
  *(__n128 *)(v1 + 25) = result;
  return result;
}

uint64_t sub_190A05B10()
{
  _OWORD *v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _QWORD *v5;

  v2 = v0[3];
  *(_OWORD *)(v1 + 48) = v0[2];
  *(_OWORD *)(v1 + 64) = v2;
  v3 = v0[5];
  *(_OWORD *)(v1 + 80) = v0[4];
  *(_OWORD *)(v1 + 96) = v3;
  v4 = v0[1];
  *(_OWORD *)(v1 + 16) = *v0;
  *(_OWORD *)(v1 + 32) = v4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 112) = v5;
  *v5 = v1;
  v5[1] = sub_190A05B7C;
  return sub_190A05B7C(*(_BYTE *)(v1 + 57) & 1);
}

uint64_t sub_190A05B7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_190A05BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v3;
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = v3[3];
  *(_OWORD *)(v4 + 48) = v3[2];
  *(_OWORD *)(v4 + 64) = v8;
  v9 = v3[5];
  *(_OWORD *)(v4 + 80) = v3[4];
  *(_OWORD *)(v4 + 96) = v9;
  v10 = v3[1];
  *(_OWORD *)(v4 + 16) = *v3;
  *(_OWORD *)(v4 + 32) = v10;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 112) = v11;
  *v11 = v4;
  v11[1] = sub_190A05C60;
  return sub_190A0586C(a1, a2, a3);
}

uint64_t sub_190A05C60()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t *sub_190A05CA8(uint64_t *a1)
{
  sub_1908B4C4C(*a1);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t *sub_190A05D14(uint64_t *a1)
{
  sub_1908B467C(*a1);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t IntentRecommendation.init<A>(intent:description:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v7 + 16))((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = a1;
  v10 = sub_190A474B8();
  v12 = v11;
  v14 = v13 & 1;
  v15 = sub_19096C780();
  v17 = v16;
  sub_19090D1C4(v10, v12, v14);

  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v20, a3);
  *a4 = v9;
  a4[1] = v15;
  a4[2] = v17;
  return result;
}

uint64_t IntentConfiguration.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v23 = a2;
  v21 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v21);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WidgetDescriptor(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v22 = (uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v2[2];
  v10 = *v2;
  v26 = v2[1];
  v27 = v9;
  v25 = v10;
  v11 = v26;
  v12 = v9;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(a1 + 32);
  v14 = v2[1];
  *(_OWORD *)(v13 + 40) = *v2;
  *(_OWORD *)(v13 + 56) = v14;
  *(_OWORD *)(v13 + 72) = v2[2];
  v15 = v25;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = v15;
  *(_OWORD *)v5 = v11;
  *((_OWORD *)v5 + 1) = v12;
  *((_QWORD *)v5 + 4) = sub_1908B49AC;
  *((_QWORD *)v5 + 5) = v13;
  *((_QWORD *)v5 + 6) = sub_190A06288;
  *((_QWORD *)v5 + 7) = v16;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_19090D03C((uint64_t)&v25);
  swift_retain();
  swift_retain();
  swift_retain();
  v17 = v22;
  sub_1909F2CA8((uint64_t)v5, v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D300);
  v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_190A4A350;
  sub_1908AF5D8(v17, v19 + v18, type metadata accessor for WidgetDescriptor);
  v24 = v19;
  sub_19090D084();
  sub_190A46F00();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_190906988(v17);
}

uint64_t sub_190A060FC@<X0>(void (*a1)(_QWORD *__return_ptr)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t *boxed_opaque_existential_1;
  __int128 v7;
  _QWORD v8[3];
  __int128 v9;

  a1(v8);
  v7 = v9;
  v3 = v9;
  v4 = __swift_project_boxed_opaque_existential_1(v8, v9);
  *(_OWORD *)(a2 + 24) = v7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1, v4, v3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t IntentRecommendation.init(intent:description:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v9 = a1;
  v10 = sub_19096C780();
  v12 = v11;
  sub_19090D1C4(a2, a3, a4 & 1);

  result = swift_bridgeObjectRelease();
  *a5 = v9;
  a5[1] = v10;
  a5[2] = v12;
  return result;
}

uint64_t sub_190A06230()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190A06264()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190A06288@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_190A060FC(*(void (**)(_QWORD *__return_ptr))(v1 + 16), a1);
}

uint64_t IntentRecommendation.init(intent:description:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v3 = a1;
  v4 = sub_190A474AC();
  v6 = v5;
  v8 = v7 & 1;
  v9 = sub_19096C780();
  v11 = v10;

  sub_19090D1C4(v4, v6, v8);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  a2[1] = v9;
  a2[2] = v11;
  return result;
}

uint64_t IntentConfiguration.init<A>(kind:intent:provider:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, void (**a7)()@<X8>, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void (*v12)();
  void (*v13)();
  void (*v14)();
  void (*v15)();
  void (*v16)();
  void (*v17)();
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v24;

  v24 = sub_19093B430(a5, a1);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = *(_QWORD *)(a8 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (*(_QWORD *)(v18 + 64) + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (char *)swift_allocObject();
  *((_QWORD *)v21 + 2) = a5;
  *((_QWORD *)v21 + 3) = a6;
  *((_QWORD *)v21 + 4) = a8;
  *((_QWORD *)v21 + 5) = a9;
  *((_QWORD *)v21 + 6) = a10;
  *((_QWORD *)v21 + 7) = v24;
  *((_QWORD *)v21 + 8) = v13;
  *((_QWORD *)v21 + 9) = v15;
  *((_QWORD *)v21 + 10) = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(&v21[v19], a2, a8);
  v22 = &v21[v20];
  *(_QWORD *)v22 = a3;
  *((_QWORD *)v22 + 1) = a4;
  *a7 = sub_1908B4948;
  a7[1] = (void (*)())v21;
  a7[2] = (void (*)())v24;
  a7[3] = v13;
  a7[4] = v15;
  a7[5] = v17;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_190A0649C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190A06530()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for IntentConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IntentConfiguration);
}

uint64_t sub_190A0657C(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *sub_190A065A4(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_190A065E0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190A06640(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190A06684()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_190A0670C@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v3 = *a1;
  sub_19091210C();
  v4 = v3;
  swift_bridgeObjectRetain_n();
  v5 = v4;
  v6 = sub_190A474B8();
  v8 = v7;
  v10 = v9 & 1;
  v11 = sub_19096C780();
  v13 = v12;
  sub_19090D1C4(v6, v8, v10);
  swift_bridgeObjectRelease();

  result = swift_bridgeObjectRelease();
  *a2 = v5;
  a2[1] = v11;
  a2[2] = v13;
  return result;
}

uint64_t sub_190A06808(void *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  char v19;
  char v20;
  __int128 v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41[2];
  uint64_t v42;
  __int16 v43;
  char v44;
  __int128 v45;
  char v46;

  v36 = a1;
  v4 = *(_QWORD **)v2;
  v37 = type metadata accessor for TimelineReloadPolicy();
  v5 = MEMORY[0x1E0C80A78](v37);
  v40 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v4[11];
  v35 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v4[12];
  v11 = v4[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v38 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v39 = AssociatedTypeWitness;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)&v34 - v13;
  v15 = *(void **)(a2 + 8);
  v17 = *(_QWORD *)(a2 + 32);
  v18 = *(_WORD *)(a2 + 40);
  v19 = *(_BYTE *)(a2 + 42);
  v20 = *(_BYTE *)(a2 + 64);
  *(_QWORD *)&v41[0] = *(_QWORD *)a2;
  v16 = *(_QWORD *)&v41[0];
  *((_QWORD *)&v41[0] + 1) = v15;
  v41[1] = *(_OWORD *)(a2 + 16);
  v42 = v17;
  v43 = v18;
  v44 = v19;
  v21 = *(_OWORD *)(a2 + 48);
  v22 = v14;
  v45 = v21;
  v46 = v20;
  (*(void (**)(__int128 *, uint64_t, uint64_t))(v10 + 40))(v41, v11, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C488);
  v23 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ViewableTimelineEntry() - 8) + 80);
  v24 = (v23 + 32) & ~v23;
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_190A4A350;
  (*(void (**)(char *))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 128)))(v22);
  v26 = sub_190A30B3C((uint64_t)v9, v7, v25 + v24);
  (*(void (**)(char *, uint64_t, double))(v35 + 8))(v9, v7, v26);
  *(_QWORD *)&v41[0] = v16;
  *((_QWORD *)&v41[0] + 1) = v15;
  v27 = qword_1ECF6BE60;
  v28 = v36;
  swift_retain();
  v29 = v15;
  if (v27 != -1)
    swift_once();
  v30 = __swift_project_value_buffer(v37, (uint64_t)qword_1ECF6BE78);
  v31 = v40;
  sub_1908AF5D8(v30, v40, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  v32 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v28, v41, (_QWORD *)v25, v31, 1);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v22, v39);
  return v32;
}

uint64_t sub_190A06AC0(void *a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD);
  uint64_t v38;
  uint64_t aBlock[7];
  _OWORD v40[4];
  char v41;

  v37 = a3;
  v38 = a4;
  v7 = sub_190A47980();
  v36 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_190A479C8();
  v10 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_OWORD *)(a2 + 48);
  v40[2] = *(_OWORD *)(a2 + 32);
  v40[3] = v13;
  v41 = *(_BYTE *)(a2 + 64);
  v14 = *(_OWORD *)(a2 + 16);
  v40[0] = *(_OWORD *)a2;
  v40[1] = v14;
  v15 = objc_msgSend(a1, sel_intentReference);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, sel__typedIntent);

    if (v17)
    {
      swift_getAssociatedTypeWitness();
      v18 = swift_dynamicCastUnknownClass();
      if (v18)
      {
        v19 = v18;
        sub_1908B45BC();
        v34 = sub_190A48004();
        v20 = swift_allocObject();
        *(_QWORD *)(v20 + 16) = v4;
        *(_QWORD *)(v20 + 24) = v19;
        v21 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(v20 + 64) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(v20 + 80) = v21;
        *(_BYTE *)(v20 + 96) = *(_BYTE *)(a2 + 64);
        v22 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(v20 + 32) = *(_OWORD *)a2;
        *(_OWORD *)(v20 + 48) = v22;
        v23 = v38;
        *(_QWORD *)(v20 + 104) = v37;
        *(_QWORD *)(v20 + 112) = v23;
        *(_QWORD *)(v20 + 120) = a1;
        aBlock[4] = (uint64_t)sub_190A09CC4;
        aBlock[5] = v20;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_1908A9D98;
        aBlock[3] = (uint64_t)&block_descriptor_10;
        v24 = _Block_copy(aBlock);
        swift_retain();
        v25 = v17;
        sub_190911E34((uint64_t)v40);
        swift_retain();
        v26 = a1;
        swift_release();
        sub_190A47998();
        aBlock[0] = MEMORY[0x1E0DEE9D8];
        sub_1909AD560();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
        sub_1909AD5A8();
        sub_190A481E4();
        v27 = (void *)v34;
        MEMORY[0x194013234](0, v12, v9, v24);
        _Block_release(v24);

        (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v7);
        return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v35);
      }

    }
  }
  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v29 = sub_190A465A0();
  __swift_project_value_buffer(v29, (uint64_t)qword_1ECF6D988);
  v30 = sub_190A46588();
  v31 = sub_190A47F50();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    aBlock[0] = v33;
    *(_DWORD *)v32 = 136446210;
    aBlock[6] = sub_1908B35C4(0xD00000000000001ELL, 0x8000000190A656C0, aBlock);
    sub_190A48178();
    _os_log_impl(&dword_1908A7000, v30, v31, "No intent in %{public}s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v33, -1, -1);
    MEMORY[0x194014398](v32, -1, -1);
  }

  return v37(0);
}

uint64_t sub_190A06EC0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  void (*v19)(uint64_t, _OWORD *, uint64_t (*)(uint64_t), uint64_t, _QWORD, uint64_t);
  id v20;
  _OWORD v22[4];
  char v23;

  v12 = *a1;
  v13 = *(_OWORD *)(a3 + 48);
  v22[2] = *(_OWORD *)(a3 + 32);
  v22[3] = v13;
  v23 = *(_BYTE *)(a3 + 64);
  v14 = *(_OWORD *)(a3 + 16);
  v22[0] = *(_OWORD *)a3;
  v22[1] = v14;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a4;
  *(_QWORD *)(v15 + 32) = a5;
  *(_QWORD *)(v15 + 40) = a6;
  v16 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v15 + 80) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v15 + 96) = v16;
  *(_BYTE *)(v15 + 112) = *(_BYTE *)(a3 + 64);
  v17 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v15 + 48) = *(_OWORD *)a3;
  *(_OWORD *)(v15 + 64) = v17;
  v18 = *(_QWORD *)(v12 + 96);
  v19 = *(void (**)(uint64_t, _OWORD *, uint64_t (*)(uint64_t), uint64_t, _QWORD, uint64_t))(v18 + 48);
  swift_retain();
  swift_retain();
  v20 = a6;
  sub_190911E34(a3);
  v19(a2, v22, sub_190A09CDC, v15, *(_QWORD *)(v12 + 80), v18);
  return swift_release();
}

uint64_t sub_190A06FBC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  void *v31;
  id v32;
  char *v33;
  uint64_t v34;
  char *v35;
  void *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD aBlock[7];

  v44 = a5;
  v45 = a6;
  v42 = a3;
  v43 = a4;
  v41 = a2;
  v7 = (_QWORD *)*a2;
  v49 = sub_190A47980();
  v52 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v48 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_190A479C8();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x1E0C80A78](v9);
  v46 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v7[12];
  v39 = v7[10];
  v40 = v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v16 = (char *)&v38 - v15;
  sub_1908B45BC();
  v47 = sub_190A48004();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, AssociatedTypeWitness);
  v17 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = (v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = (char *)swift_allocObject();
  *((_QWORD *)v21 + 2) = v39;
  v22 = v40;
  *((_QWORD *)v21 + 3) = v7[11];
  *((_QWORD *)v21 + 4) = v22;
  *((_QWORD *)v21 + 5) = v7[13];
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v21[v17], v16, AssociatedTypeWitness);
  v23 = v42;
  *(_QWORD *)&v21[v18] = v41;
  v24 = &v21[v19];
  v26 = v43;
  v25 = v44;
  *(_QWORD *)v24 = v23;
  *((_QWORD *)v24 + 1) = v26;
  *(_QWORD *)&v21[v20] = v25;
  v27 = &v21[(v20 + 15) & 0xFFFFFFFFFFFFFFF8];
  v28 = v45;
  v29 = *(_OWORD *)(v45 + 48);
  *((_OWORD *)v27 + 2) = *(_OWORD *)(v45 + 32);
  *((_OWORD *)v27 + 3) = v29;
  v27[64] = *(_BYTE *)(v28 + 64);
  v30 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v30;
  aBlock[4] = sub_190A09DDC;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1908A9D98;
  aBlock[3] = &block_descriptor_47;
  v31 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  v32 = v25;
  sub_190911E34(v28);
  swift_release();
  v33 = v46;
  sub_190A47998();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1909AD560();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
  sub_1909AD5A8();
  v35 = v48;
  v34 = v49;
  sub_190A481E4();
  v36 = (void *)v47;
  MEMORY[0x194013234](0, v33, v35, v31);
  _Block_release(v31);

  (*(void (**)(char *, uint64_t))(v52 + 8))(v35, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v33, v51);
}

uint64_t sub_190A072C4(uint64_t a1, uint64_t *a2, void (*a3)(void), uint64_t a4, void *a5, __int128 *a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  __int128 *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(void);
  __int128 v41;
  __int128 v42;

  v35 = a6;
  v36 = a5;
  v39 = a4;
  v40 = a3;
  v31 = a1;
  v7 = *a2;
  v37 = type metadata accessor for TimelineReloadPolicy();
  v8 = MEMORY[0x1E0C80A78](v37);
  v38 = (uint64_t)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[1] = *(_QWORD *)(v7 + 88);
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_190A46084();
  v32 = *(_QWORD *)(v10 - 8);
  v33 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C488);
  v13 = (int *)type metadata accessor for ViewableTimelineEntry();
  v14 = *(unsigned __int8 *)(*((_QWORD *)v13 - 1) + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_190A4A350;
  v34 = (_QWORD *)v16;
  v17 = v16 + v15;
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v19 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8);
  v20 = swift_checkMetadataState();
  v21 = v31;
  v19(v20, AssociatedConformanceWitness);
  (*(void (**)(uint64_t))((char *)a2 + *(_QWORD *)(*a2 + 128)))(v21);
  v22 = sub_190A47884();
  v23 = v17 + v13[7];
  v24 = type metadata accessor for WidgetViewMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v17, v12, v33);
  *(_QWORD *)(v17 + v13[5]) = v22;
  v25 = v17 + v13[6];
  *(_QWORD *)v25 = 0;
  *(_QWORD *)(v25 + 8) = 0;
  *(_BYTE *)(v25 + 16) = 1;
  *(_OWORD *)(v17 + v13[8]) = xmmword_190A4A370;
  v41 = *v35;
  v42 = v41;
  v26 = v36;
  sub_190917544((uint64_t)&v42);
  if (qword_1ECF6BE60 != -1)
    swift_once();
  v27 = __swift_project_value_buffer(v37, (uint64_t)qword_1ECF6BE78);
  v28 = v38;
  sub_1908AF5D8(v27, v38, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v26, &v41, v34, v28, 1);
  v40();
  return swift_release();
}

uint64_t sub_190A075D8(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  unint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  char v42;

  v33 = a4;
  v36 = a5;
  v37 = a6;
  v35 = a1;
  v7 = *v6;
  v8 = *(_QWORD *)(*v6 + 80);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v12[3];
  v40 = v12[2];
  v41 = v13;
  v42 = *((_BYTE *)v12 + 64);
  v14 = v12[1];
  v38 = *v12;
  v39 = v14;
  (*(void (**)(char *))(v9 + 16))(v11);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = (v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v16 + 87) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v8;
  *(_OWORD *)(v20 + 24) = *(_OWORD *)(v7 + 88);
  *(_QWORD *)(v20 + 40) = *(_QWORD *)(v7 + 104);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v20 + v15, v11, v8);
  v21 = v32;
  v22 = v33;
  *(_QWORD *)(v20 + v16) = v33;
  v23 = v20 + v21;
  *(_BYTE *)(v23 + 64) = v42;
  v24 = v41;
  *(_OWORD *)(v23 + 32) = v40;
  *(_OWORD *)(v23 + 48) = v24;
  v25 = v39;
  *(_OWORD *)v23 = v38;
  *(_OWORD *)(v23 + 16) = v25;
  *(_QWORD *)(v20 + v17) = v34;
  v26 = (_QWORD *)(v20 + v18);
  v27 = v37;
  *v26 = v36;
  v26[1] = v27;
  v28 = v35;
  *(_QWORD *)(v20 + v19) = v35;
  v29 = v22;
  sub_190911E34((uint64_t)&v38);
  swift_retain();
  swift_retain();
  v30 = v28;
  sub_1909AD338((uint64_t)sub_190A099A8, v20);
  return swift_release();
}

uint64_t sub_190A07774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  void (*v20)(uint64_t, _OWORD *, uint64_t (*)(uint64_t), uint64_t, _QWORD, uint64_t);
  id v21;
  _OWORD v23[4];
  char v24;

  v13 = *a4;
  v14 = *(_OWORD *)(a3 + 48);
  v23[2] = *(_OWORD *)(a3 + 32);
  v23[3] = v14;
  v24 = *(_BYTE *)(a3 + 64);
  v15 = *(_OWORD *)(a3 + 16);
  v23[0] = *(_OWORD *)a3;
  v23[1] = v15;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a4;
  *(_QWORD *)(v16 + 24) = a5;
  *(_QWORD *)(v16 + 32) = a6;
  *(_QWORD *)(v16 + 40) = a7;
  v17 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v16 + 80) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v16 + 96) = v17;
  *(_BYTE *)(v16 + 112) = *(_BYTE *)(a3 + 64);
  v18 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v16 + 48) = *(_OWORD *)a3;
  *(_OWORD *)(v16 + 64) = v18;
  v19 = *(_QWORD *)(v13 + 96);
  v20 = *(void (**)(uint64_t, _OWORD *, uint64_t (*)(uint64_t), uint64_t, _QWORD, uint64_t))(v19 + 56);
  swift_retain();
  swift_retain();
  v21 = a7;
  sub_190911E34(a3);
  v20(a2, v23, sub_190A09A10, v16, *(_QWORD *)(v13 + 80), v19);
  return swift_release();
}

uint64_t sub_190A0786C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  _QWORD *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  id v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;

  v38 = a5;
  v39 = a6;
  v36 = a3;
  v37 = a4;
  v7 = *(_QWORD **)a2;
  v34 = *(_QWORD *)(*(_QWORD *)a2 + 96);
  v35 = a2;
  v33 = v7[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = type metadata accessor for Timeline(0, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v32 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v32 - v14, a1, v11);
  v16 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v17 = (v13 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = (char *)swift_allocObject();
  *((_QWORD *)v20 + 2) = v33;
  v21 = v34;
  *((_QWORD *)v20 + 3) = v7[11];
  *((_QWORD *)v20 + 4) = v21;
  *((_QWORD *)v20 + 5) = v7[13];
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v20[v16], v15, v11);
  v22 = v36;
  *(_QWORD *)&v20[v17] = v35;
  v23 = &v20[v18];
  v25 = v37;
  v24 = v38;
  *(_QWORD *)v23 = v22;
  *((_QWORD *)v23 + 1) = v25;
  *(_QWORD *)&v20[v19] = v24;
  v26 = &v20[(v19 + 15) & 0xFFFFFFFFFFFFFFF8];
  v27 = v39;
  v28 = *(_OWORD *)(v39 + 48);
  *((_OWORD *)v26 + 2) = *(_OWORD *)(v39 + 32);
  *((_OWORD *)v26 + 3) = v28;
  v26[64] = *(_BYTE *)(v27 + 64);
  v29 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v29;
  swift_retain();
  swift_retain();
  v30 = v24;
  sub_190911E34(v27);
  sub_1909AD338((uint64_t)sub_190A09B8C, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_190A07A44(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, void *a5, __int128 *a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  char *v21;
  _QWORD *v22;
  id v23;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void (*v28)(void);
  __int128 v29;
  __int128 v30;

  v26 = a5;
  v27 = a4;
  v28 = a3;
  v25 = a1;
  v8 = type metadata accessor for TimelineReloadPolicy();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v14 = type metadata accessor for Timeline(0, AssociatedTypeWitness, AssociatedConformanceWitness, v13);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v25 - v16);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6AFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (uint64_t *)((char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v15 + 16))(v17, v25, v14);
  v21 = (char *)type metadata accessor for ViewableTimelineEntry();
  sub_190A1A004(v17, (uint64_t)sub_190A096C0, a2, v21, AssociatedTypeWitness, (uint64_t)&protocol witness table for ViewableTimelineEntry, AssociatedConformanceWitness, v20);
  v30 = *a6;
  v29 = *a6;
  v22 = (_QWORD *)*v20;
  sub_1908AF5D8((uint64_t)v20 + *(int *)(v18 + 36), (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  v23 = v26;
  sub_190917544((uint64_t)&v30);
  swift_bridgeObjectRetain();
  WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v23, &v29, v22, (uint64_t)v10, 1);
  v28();
  swift_release();
  return sub_1908AA544((uint64_t)v20, (uint64_t *)&unk_1ECF6AFF0);
}

void sub_190A07C80(void *a1, __int128 *a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  char v23;
  char v24;
  __int128 v25;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v25 = *a2;
  v6 = *((_QWORD *)a2 + 2);
  v7 = *((_QWORD *)a2 + 3);
  v8 = *((_QWORD *)a2 + 4);
  v9 = *((_BYTE *)a2 + 40);
  v10 = *((_BYTE *)a2 + 42);
  v11 = *((_QWORD *)a2 + 6);
  v12 = *((_QWORD *)a2 + 7);
  v23 = *((_BYTE *)a2 + 64);
  v24 = *((_BYTE *)a2 + 41);
  v13 = objc_msgSend(a1, sel_intentReference);
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v13, sel__typedIntent);

    if (v15)
    {
      swift_getAssociatedTypeWitness();
      v16 = (void *)swift_dynamicCastUnknownClass();
      if (v16)
      {
        v17 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 120);
        v28 = v25;
        v29 = v6;
        v30 = v7;
        v31 = v8;
        v32 = v9;
        v33 = v24;
        v34 = v10;
        v35 = v11;
        v36 = v12;
        v37 = v23;
        sub_190A075D8(a1, v17, (uint64_t)&v28, v16, (uint64_t)a3, a4);

        return;
      }

    }
  }
  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v18 = sub_190A465A0();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ECF6D988);
  v19 = sub_190A46588();
  v20 = sub_190A47F50();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    *(_QWORD *)&v28 = v22;
    *(_DWORD *)v21 = 136446210;
    v38 = sub_1908B35C4(0xD00000000000001ELL, 0x8000000190A656A0, (uint64_t *)&v28);
    sub_190A48178();
    _os_log_impl(&dword_1908A7000, v19, v20, "No intent in %{public}s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v22, -1, -1);
    MEMORY[0x194014398](v21, -1, -1);
  }

  a3(0);
}

uint64_t sub_190A07F04(void *a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __int128 v29;
  __int128 v30;
  char *v31;
  uint64_t v32;
  _QWORD v34[2];
  uint64_t v35;
  char *v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  char v45;

  v39 = a7;
  v40 = a4;
  v35 = a5;
  v37 = a1;
  v11 = (_QWORD *)*v7;
  v12 = *(_QWORD *)(a6 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](a1);
  v36 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v16;
  v17 = a2[3];
  v43 = a2[2];
  v44 = v17;
  v45 = *((_BYTE *)a2 + 64);
  v18 = a2[1];
  v41 = *a2;
  v42 = v18;
  v19 = sub_190A47D7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v16, 1, 1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a3, a6);
  sub_190A47D64();
  swift_retain();
  v37 = v37;
  sub_190911E34((uint64_t)&v41);
  swift_retain();
  v20 = sub_190A47D58();
  v21 = (*(unsigned __int8 *)(v12 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v22 = (v13 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = (char *)swift_allocObject();
  v25 = MEMORY[0x1E0DF06E8];
  *((_QWORD *)v24 + 2) = v20;
  *((_QWORD *)v24 + 3) = v25;
  *((_QWORD *)v24 + 4) = v11[10];
  *((_QWORD *)v24 + 5) = v11[11];
  *((_QWORD *)v24 + 6) = a6;
  *((_QWORD *)v24 + 7) = v11[12];
  v26 = v39;
  *((_QWORD *)v24 + 8) = v11[13];
  *((_QWORD *)v24 + 9) = v26;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v24[v21], v36, a6);
  *(_QWORD *)&v24[v22] = v34[1];
  v27 = (uint64_t)v38;
  *(_QWORD *)&v24[v23] = v37;
  v28 = &v24[(v23 + 15) & 0xFFFFFFFFFFFFFFF8];
  v29 = v44;
  *((_OWORD *)v28 + 2) = v43;
  *((_OWORD *)v28 + 3) = v29;
  v28[64] = v45;
  v30 = v42;
  *(_OWORD *)v28 = v41;
  *((_OWORD *)v28 + 1) = v30;
  v31 = &v24[(v23 + 87) & 0xFFFFFFFFFFFFFFF8];
  v32 = v35;
  *(_QWORD *)v31 = v40;
  *((_QWORD *)v31 + 1) = v32;
  sub_19095ADDC(v27, (uint64_t)&unk_1EE1EEBE8, (uint64_t)v24);
  return swift_release();
}

uint64_t sub_190A08138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v8[61] = v11;
  v8[62] = v12;
  v8[59] = a7;
  v8[60] = a8;
  v8[57] = a5;
  v8[58] = a6;
  v8[56] = a4;
  v8[63] = *a5;
  v8[64] = *(_QWORD *)(v12 - 8);
  v8[65] = swift_task_alloc();
  v8[66] = swift_task_alloc();
  sub_190A47D64();
  v8[67] = sub_190A47D58();
  v8[68] = sub_190A47D28();
  v8[69] = v9;
  return swift_task_switch();
}

uint64_t sub_190A081F0()
{
  uint64_t v0;
  void (*v1)(_QWORD, _QWORD, _QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  _OWORD *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _QWORD *v20;
  uint64_t v21;
  __int128 v22;

  v1 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 512) + 16);
  v1(*(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 496));
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 472);
    v3 = *(_QWORD *)(v0 + 376);
    v4 = *(_QWORD *)(v0 + 384);
    *(_QWORD *)(v0 + 560) = v4;
    v5 = *(_BYTE *)(v0 + 392);
    v6 = *(_QWORD *)(v0 + 400);
    v7 = *(_QWORD *)(v0 + 408);
    *(_QWORD *)(v0 + 568) = v7;
    *(_OWORD *)(v0 + 192) = *(_OWORD *)v2;
    v8 = *(_OWORD *)(v2 + 16);
    v9 = *(_OWORD *)(v2 + 32);
    v10 = *(_OWORD *)(v2 + 48);
    *(_BYTE *)(v0 + 256) = *(_BYTE *)(v2 + 64);
    *(_OWORD *)(v0 + 224) = v9;
    *(_OWORD *)(v0 + 240) = v10;
    *(_OWORD *)(v0 + 208) = v8;
    *(_QWORD *)(v0 + 336) = v3;
    *(_QWORD *)(v0 + 344) = v4;
    *(_BYTE *)(v0 + 352) = v5;
    *(_QWORD *)(v0 + 360) = v6;
    *(_QWORD *)(v0 + 368) = v7;
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 576) = v11;
    *v11 = v0;
    v11[1] = sub_1909102B0;
    return sub_190A08488(*(_QWORD *)(v0 + 464), (_OWORD *)(v0 + 192), (__int128 *)(v0 + 336));
  }
  else
  {
    v13 = (_OWORD *)(v0 + 104);
    v1(*(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 496));
    if ((swift_dynamicCast() & 1) == 0)
    {
      v21 = *(_QWORD *)(v0 + 504);
      *v13 = 0u;
      *(_OWORD *)(v0 + 120) = 0u;
      *(_OWORD *)(v0 + 136) = 0u;
      *(_OWORD *)(v0 + 152) = 0u;
      *(_OWORD *)(v0 + 168) = 0u;
      *(_QWORD *)(v0 + 184) = 0;
      swift_release();
      sub_1908AA544(v0 + 104, qword_1EE1ECF40);
      v22 = *(_OWORD *)(v21 + 96);
      *(_OWORD *)(v0 + 416) = *(_OWORD *)(v21 + 80);
      *(_OWORD *)(v0 + 432) = v22;
      type metadata accessor for IntentTimelineEntryProvider.Errors();
    }
    v14 = *(_QWORD *)(v0 + 472);
    v15 = *(_OWORD *)(v0 + 152);
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 136);
    *(_OWORD *)(v0 + 64) = v15;
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 168);
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 184);
    v16 = *(_OWORD *)(v0 + 120);
    *(_OWORD *)(v0 + 16) = *v13;
    *(_OWORD *)(v0 + 32) = v16;
    *(_OWORD *)(v0 + 264) = *(_OWORD *)v14;
    v18 = *(_OWORD *)(v14 + 32);
    v17 = *(_OWORD *)(v14 + 48);
    v19 = *(_OWORD *)(v14 + 16);
    *(_BYTE *)(v0 + 328) = *(_BYTE *)(v14 + 64);
    *(_OWORD *)(v0 + 296) = v18;
    *(_OWORD *)(v0 + 312) = v17;
    *(_OWORD *)(v0 + 280) = v19;
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 600) = v20;
    *v20 = v0;
    v20[1] = sub_1909103BC;
    return sub_190A08BC8(*(_QWORD *)(v0 + 464), v0 + 264, v0 + 16);
  }
}

uint64_t sub_190A083FC(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void (*v3)(void *, uint64_t);
  id v4;

  MEMORY[0x19401429C](&unk_190A5BD90, a1);
  v2 = (void *)swift_allocError();
  swift_willThrow();
  v3 = *(void (**)(void *, uint64_t))(v1 + 480);
  v4 = v2;
  v3(v2, 1);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_190A08488(uint64_t a1, _OWORD *a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  *(_QWORD *)(v4 + 64) = a1;
  *(_QWORD *)(v4 + 72) = v3;
  *(_QWORD *)(v4 + 80) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6AFF0);
  *(_QWORD *)(v4 + 88) = swift_task_alloc();
  *(_QWORD *)(v4 + 96) = type metadata accessor for TimelineReloadPolicy();
  *(_QWORD *)(v4 + 104) = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v4 + 112) = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v4 + 120) = AssociatedConformanceWitness;
  v10 = type metadata accessor for Timeline(0, AssociatedTypeWitness, AssociatedConformanceWitness, v9);
  *(_QWORD *)(v4 + 128) = v10;
  *(_QWORD *)(v4 + 136) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v4 + 144) = swift_task_alloc();
  *(_QWORD *)(v4 + 152) = swift_task_alloc();
  v11 = *a3;
  *(_OWORD *)(v4 + 160) = *a2;
  *(_OWORD *)(v4 + 176) = v11;
  *(_BYTE *)(v4 + 264) = *((_BYTE *)a3 + 16);
  *(_OWORD *)(v4 + 192) = *(__int128 *)((char *)a3 + 24);
  sub_190A47D64();
  *(_QWORD *)(v4 + 208) = sub_190A47D58();
  *(_QWORD *)(v4 + 216) = sub_190A47D28();
  *(_QWORD *)(v4 + 224) = v12;
  return swift_task_switch();
}

uint64_t sub_190A0860C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  char v5;
  _QWORD *v6;
  __int128 v8;
  __int128 v9;

  if (qword_1ECF6BB68 != -1)
    swift_once();
  v1 = sub_190A465A0();
  *(_QWORD *)(v0 + 232) = __swift_project_value_buffer(v1, (uint64_t)qword_1ECF6D820);
  v2 = sub_190A46588();
  v3 = sub_190A47F68();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1908A7000, v2, v3, "Preview entries request being handled by IntentConfiguration", v4, 2u);
    MEMORY[0x194014398](v4, -1, -1);
  }
  v5 = *(_BYTE *)(v0 + 264);
  v8 = *(_OWORD *)(v0 + 176);
  v9 = *(_OWORD *)(v0 + 192);

  *(_OWORD *)(v0 + 16) = v8;
  *(_BYTE *)(v0 + 32) = v5;
  *(_OWORD *)(v0 + 40) = v9;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v6;
  *v6 = v0;
  v6[1] = sub_190A0873C;
  return TimelineEntryPreviewSource.unwrapTimeline<A>(for:)(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
}

uint64_t sub_190A0873C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 248) = a1;
  *(_QWORD *)(v3 + 256) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_190A087A8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  __int128 v27;

  swift_release();
  swift_bridgeObjectRetain();
  v1 = sub_190A46588();
  v2 = sub_190A47F68();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 248);
    v4 = *(_QWORD *)(v0 + 112);
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 134217984;
    *(_QWORD *)(v0 + 56) = MEMORY[0x194012F04](v3, v4);
    sub_190A48178();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v1, v2, "IntentConfiguration resolved entry source to have %ld entries", v5, 0xCu);
    MEMORY[0x194014398](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  if (qword_1ECF6BE60 != -1)
    swift_once();
  v6 = *(_QWORD *)(v0 + 248);
  v25 = *(void **)(v0 + 168);
  v7 = *(_QWORD **)(v0 + 152);
  v9 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD **)(v0 + 144);
  v11 = *(_QWORD *)(v0 + 120);
  v10 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 112);
  v14 = *(uint64_t **)(v0 + 88);
  v23 = *(_QWORD *)(v0 + 80);
  v24 = *(_QWORD *)(v0 + 160);
  v22 = *(_QWORD *)(v0 + 72);
  v26 = *(void **)(v0 + 64);
  v15 = __swift_project_value_buffer(*(_QWORD *)(v0 + 96), (uint64_t)qword_1ECF6BE78);
  sub_1908AF5D8(v15, v12, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  Timeline.init(entries:policy:)(v6, v12, v13, v11, v7);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(v8, v7, v10);
  v16 = (char *)type metadata accessor for ViewableTimelineEntry();
  sub_190A1A004(v8, (uint64_t)sub_190A096C0, v22, v16, v13, (uint64_t)&protocol witness table for ViewableTimelineEntry, v11, v14);
  *(_QWORD *)&v27 = v24;
  *((_QWORD *)&v27 + 1) = v25;
  v17 = (_QWORD *)*v14;
  sub_1908AF5D8((uint64_t)v14 + *(int *)(v23 + 36), v12, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  v18 = v26;
  swift_retain();
  v19 = v25;
  swift_bridgeObjectRetain();
  v20 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v18, &v27, v17, v12, 0);
  sub_1908AA544((uint64_t)v14, (uint64_t *)&unk_1ECF6AFF0);
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v7, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v20);
}

double sub_190A08A7C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;

  v16 = a3;
  v5 = *a2;
  v6 = *(_QWORD *)(*a2 + 88);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v15 - v10, a1, AssociatedTypeWitness);
  (*(void (**)(uint64_t))((char *)a2 + *(_QWORD *)(*a2 + 128)))(a1);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return sub_190A308CC((uint64_t)v11, (uint64_t)v8, AssociatedTypeWitness, v6, AssociatedConformanceWitness, *(_QWORD *)(v5 + 104), v16);
}

uint64_t sub_190A08BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  *(_QWORD *)(v4 + 104) = a3;
  *(_QWORD *)(v4 + 112) = v3;
  *(_QWORD *)(v4 + 96) = a1;
  v6 = *v3;
  *(_QWORD *)(v4 + 120) = *v3;
  v7 = *(_QWORD *)(v6 + 80);
  *(_QWORD *)(v4 + 128) = v7;
  *(_QWORD *)(v4 + 136) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 144) = swift_task_alloc();
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 64) = v8;
  *(_BYTE *)(v4 + 80) = *(_BYTE *)(a2 + 64);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 32) = v9;
  *(_QWORD *)(v4 + 152) = sub_190A47D64();
  *(_QWORD *)(v4 + 160) = sub_190A47D58();
  *(_QWORD *)(v4 + 168) = sub_190A47D28();
  *(_QWORD *)(v4 + 176) = v10;
  return swift_task_switch();
}

uint64_t sub_190A08C84()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  if (qword_1ECF6BB68 != -1)
    swift_once();
  v1 = sub_190A465A0();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ECF6D820);
  v2 = sub_190A46588();
  v3 = sub_190A47F68();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1908A7000, v2, v3, "Preview provider request being handled by IntentConfiguration", v4, 2u);
    MEMORY[0x194014398](v4, -1, -1);
  }
  v5 = v0[18];
  v6 = v0[16];

  v7 = TimelineProviderPreviewSource.unwrapContent<A>(for:)(v5, v6, v6);
  v0[23] = v7;
  v8 = v7;
  v9 = v0[18];
  v10 = v0[14];
  v11 = v0[12];
  v0[24] = sub_190A47D58();
  v12 = (_QWORD *)swift_task_alloc();
  v0[25] = v12;
  v12[2] = v10;
  v12[3] = v11;
  v12[4] = v9;
  v12[5] = v0 + 2;
  v12[6] = v8;
  v13 = (_QWORD *)swift_task_alloc();
  v0[26] = v13;
  type metadata accessor for WidgetViewCollection();
  *v13 = v0;
  v13[1] = sub_190A08E84;
  return sub_190A486A0();
}

uint64_t sub_190A08E84()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_190A08EEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_190A08F5C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  void *v17;

  v17 = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED090);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  sub_190A075D8(a3, a4, a5, v17, (uint64_t)sub_190917068, v14);
  return swift_release();
}

uint64_t sub_190A09068(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_190A47D7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_190A47D64();
  swift_retain();
  swift_retain();
  v10 = sub_190A47D58();
  v11 = (_QWORD *)swift_allocObject();
  v12 = MEMORY[0x1E0DF06E8];
  v11[2] = v10;
  v11[3] = v12;
  v11[4] = v3;
  v11[5] = a1;
  v11[6] = a2;
  sub_19095ADDC((uint64_t)v8, (uint64_t)&unk_1EE1EEBD8, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_190A09160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;

  v6[2] = a5;
  v6[3] = a6;
  v6[4] = sub_190A47D64();
  v6[5] = sub_190A47D58();
  v7 = (_QWORD *)swift_task_alloc();
  v6[6] = v7;
  *v7 = v6;
  v7[1] = sub_190911298;
  return sub_190A091C8();
}

uint64_t sub_190A091C8()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  int *v8;

  v2 = *v0;
  v1[7] = sub_190A47D64();
  v1[8] = sub_190A47D58();
  v3 = *(_QWORD *)(v2 + 96);
  v1[9] = v3;
  v4 = *(int **)(v3 + 72);
  v5 = *(_QWORD *)(v2 + 80);
  v1[10] = v5;
  v8 = (int *)((char *)v4 + *v4);
  v6 = (_QWORD *)swift_task_alloc();
  v1[11] = v6;
  *v6 = v1;
  v6[1] = sub_190A09278;
  return ((uint64_t (*)(_QWORD *, uint64_t, uint64_t))v8)(v1 + 6, v5, v3);
}

uint64_t sub_190A09278()
{
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_190A092E8()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  objc_class *v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  objc_super *v13;
  _BYTE *v14;
  _BYTE *v15;
  objc_super *v16;

  swift_release();
  if (*(_QWORD *)(v0 + 48))
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v4 = type metadata accessor for WidgetRelevances(0, AssociatedTypeWitness, v2, v3);
    v8 = sub_190A3A4BC(v4, v5, v6, v7);
    swift_bridgeObjectRelease();
    v9 = (objc_class *)type metadata accessor for WidgetRelevanceFetchResult();
    v10 = objc_allocWithZone(v9);
    v10[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 0;
    v11 = v10;
    v12 = sub_1909AE1FC(v8);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v11[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = v12;

    *(_QWORD *)(v0 + 32) = v11;
    v13 = (objc_super *)(v0 + 32);
  }
  else
  {
    v9 = (objc_class *)type metadata accessor for WidgetRelevanceFetchResult();
    v14 = objc_allocWithZone(v9);
    v14[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 1;
    v15 = v14;
    *(_QWORD *)&v15[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = sub_1909AE1FC(MEMORY[0x1E0DEE9D8]);

    *(_QWORD *)(v0 + 16) = v15;
    v13 = (objc_super *)(v0 + 16);
  }
  v13->super_class = v9;
  v16 = -[objc_super init](v13, sel_init);
  return (*(uint64_t (**)(objc_super *))(v0 + 8))(v16);
}

uint64_t sub_190A09430()
{
  sub_19090D084();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190A09480(void *a1, uint64_t a2)
{
  return sub_190A06808(a1, a2);
}

uint64_t sub_190A094A0(void *a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  return sub_190A06AC0(a1, a2, a3, a4);
}

void sub_190A094C0(void *a1, __int128 *a2, void (*a3)(_QWORD), uint64_t a4)
{
  sub_190A07C80(a1, a2, a3, a4);
}

uint64_t sub_190A094E0(void *a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_190A07F04(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_190A09500(uint64_t a1, uint64_t a2)
{
  return sub_190A09068(a1, a2);
}

uint64_t sub_190A09520(uint64_t a1)
{
  MEMORY[0x19401429C](&unk_190A5BCF0, a1);
  return sub_19096C574();
}

uint64_t sub_190A09554(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x19401429C](&unk_190A5BC90);
  result = MEMORY[0x19401429C](&unk_190A5BCB8, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_190A09598()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190A095CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1908CEB54;
  return sub_190A09160(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_190A0964C(uint64_t a1)
{
  uint64_t v1;

  return sub_190A08F5C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_190A0965C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED090);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

double sub_190A096C0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_190A08A7C(a1, v2, a2);
}

uint64_t sub_190A096D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190A097C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v3 = *(_QWORD *)(v1[6] - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1[2];
  v8 = v1[3];
  v9 = (uint64_t)v1 + v4;
  v10 = *(_QWORD **)((char *)v1 + v5);
  v11 = *(_QWORD *)((char *)v1 + v6);
  v12 = (uint64_t)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = *(_QWORD *)((char *)v1 + ((v6 + 87) & 0xFFFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1908C5090;
  return sub_190A08138(a1, v7, v8, v9, v10, v11, v12, v13);
}

void type metadata accessor for IntentTimelineEntryProvider.Errors()
{
  JUMPOUT(0x1940141E8);
}

uint64_t sub_190A098C4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  objc_release(*(id *)(v0
                     + ((((((v3 + 87) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
  return swift_deallocObject();
}

uint64_t sub_190A099A8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 87) & 0xFFFFFFFFFFFFFFF8;
  return sub_190A07774(v0 + v2, *(_QWORD *)(v0 + v3), v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8), *(uint64_t **)(v0 + v4), *(_QWORD *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v0 + ((((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_190A09A10(uint64_t a1)
{
  return sub_1909175E0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD *))sub_190A0786C);
}

uint64_t sub_190A09A1C()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = type metadata accessor for Timeline(0, AssociatedTypeWitness, AssociatedConformanceWitness, v3);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  swift_bridgeObjectRelease();
  v8 = v0 + v6 + *(int *)(v4 + 36);
  v9 = sub_190A46084();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = (((((v7 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190A09B8C()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = *(_QWORD *)(type metadata accessor for Timeline(0, AssociatedTypeWitness, AssociatedConformanceWitness, v3) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_190A07A44(v0 + v5, *(_QWORD *)(v0 + v6), *(void (**)(void))(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v0 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), (__int128 *)(v0+ ((((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_190A09C60()
{
  id *v0;

  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_190A09CC4()
{
  uint64_t v0;

  return sub_190A06EC0(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 32, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(void **)(v0 + 120));
}

uint64_t sub_190A09CDC(uint64_t a1)
{
  return sub_1909175E0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD *))sub_190A06FBC);
}

uint64_t sub_190A09CE8()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190A09DDC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_190A072C4(v0 + v2, *(uint64_t **)(v0 + v3), *(void (**)(void))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), (__int128 *)(v0+ ((((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_190A09E5C@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_190A0670C(a1, a2);
}

uint64_t sub_190A09E7C(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_190A09EBC + 4 * byte_190A5BB20[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_190A09EDC + 4 * byte_190A5BB25[v4]))();
}

_BYTE *sub_190A09EBC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_190A09EDC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190A09EE4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190A09EEC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190A09EF4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190A09EFC(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_190A09F08()
{
  JUMPOUT(0x19401429CLL);
}

uint64_t ControlWidgetConfiguration.displayName(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190A0A044(a1, a2, a3);
}

uint64_t sub_190A09F2C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  uint64_t v14;

  v7 = *(_QWORD *)(*MEMORY[0x1E0DEC880] + *a1 + 8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v14 - v9;
  (*(void (**)(char *))(v8 + 16))((char *)&v14 - v9);
  v11 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = a3;
  *((_QWORD *)v12 + 3) = v7;
  *((_QWORD *)v12 + 4) = a4;
  *((_QWORD *)v12 + 5) = a1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v12[v11], v10, v7);
  swift_retain();
  sub_190A0A344((uint64_t)sub_190A0A7A4, (uint64_t)v12);
  return swift_release();
}

uint64_t ControlWidgetConfiguration.description(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190A0A044(a1, a2, a3);
}

uint64_t sub_190A0A044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *KeyPath;
  uint64_t v11;
  _QWORD v13[2];

  v6 = sub_190A45F70();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = (_QWORD *)swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v13[0] = sub_190A47AF4();
  v13[1] = v11;
  sub_190A09F2C(KeyPath, (uint64_t)v13, a2, a3);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t ControlWidgetConfiguration.promptsForUserConfiguration()(uint64_t a1, uint64_t a2)
{
  _QWORD *KeyPath;
  char v6;

  KeyPath = (_QWORD *)swift_getKeyPath();
  v6 = 1;
  sub_190A09F2C(KeyPath, (uint64_t)&v6, a1, a2);
  return swift_release();
}

uint64_t ControlWidgetConfiguration.pushHandler(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *KeyPath;
  _QWORD v10[2];

  KeyPath = (_QWORD *)swift_getKeyPath();
  v10[0] = a1;
  v10[1] = a2;
  sub_190A09F2C(KeyPath, (uint64_t)v10, a3, a4);
  return swift_release();
}

uint64_t ControlWidgetConfiguration.enabled(_:)(char a1, uint64_t a2, uint64_t a3)
{
  _QWORD *KeyPath;
  uint64_t v7;
  uint64_t v9;

  KeyPath = (_QWORD *)swift_getKeyPath();
  v7 = 1;
  if ((a1 & 1) == 0)
    v7 = 2;
  v9 = v7;
  sub_190A09F2C(KeyPath, (uint64_t)&v9, a2, a3);
  return swift_release();
}

uint64_t ControlWidgetConfiguration.showsContextualMenu(_:)(char a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_BYTE *)(v2 + 16) = a1;
  sub_190A0A344((uint64_t)sub_190A0A314, v2);
  return swift_release();
}

uint64_t sub_190A0A304()
{
  return swift_deallocObject();
}

uint64_t sub_190A0A314(uint64_t a1)
{
  uint64_t v1;
  char v3;
  uint64_t result;

  v3 = *(_BYTE *)(v1 + 16);
  result = type metadata accessor for WidgetDescriptor(0);
  *(_BYTE *)(a1 + *(int *)(result + 124)) = v3;
  return result;
}

uint64_t sub_190A0A344(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_19090D084();
  swift_retain();
  sub_190A47188();
  return swift_release();
}

uint64_t ControlWidgetConfiguration.showsInSystemSpaces()()
{
  return sub_190A0A344((uint64_t)sub_190A0A3FC, 0);
}

uint64_t ControlWidgetConfiguration.showsInControlCenter()()
{
  return sub_190A0A344((uint64_t)sub_190A0A3FC, 0);
}

uint64_t sub_190A0A418(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for WidgetDescriptor(0);
  *(_BYTE *)(a1 + *(int *)(result + 116)) = 1;
  *(_BYTE *)(a1 + *(int *)(result + 112)) = 1;
  return result;
}

uint64_t ControlWidgetConfiguration.preferredControlSize(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *KeyPath;
  uint64_t v8;

  v5 = *a1;
  KeyPath = (_QWORD *)swift_getKeyPath();
  v8 = v5;
  sub_190A09F2C(KeyPath, (uint64_t)&v8, a2, a3);
  return swift_release();
}

void static ControlWidgetSize.small.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void static ControlWidgetSize.medium.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

uint64_t static ControlWidgetSize.medium(vertical:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  v2 = 1;
  if ((result & 1) == 0)
    v2 = 2;
  *a2 = v2;
  return result;
}

void static ControlWidgetSize.large.getter(_QWORD *a1@<X8>)
{
  *a1 = 3;
}

BOOL static ControlWidgetSize.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_190A0A508()
{
  sub_19090D084();
  return sub_190A47188();
}

uint64_t sub_190A0A56C(uint64_t result, uint64_t (*a2)(unint64_t))
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  unint64_t i;
  uint64_t v7;

  v2 = *(_QWORD *)result;
  v3 = *(_QWORD *)(*(_QWORD *)result + 16);
  if (v3)
  {
    v5 = (_QWORD *)result;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_9:
      v2 = sub_190A41350(v2);
    for (i = 0; i != v3; ++i)
    {
      if (i >= *(_QWORD *)(v2 + 16))
      {
        __break(1u);
        goto LABEL_9;
      }
      v7 = type metadata accessor for WidgetDescriptor(0);
      result = a2(v2+ ((*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * i);
    }
    *v5 = v2;
  }
  return result;
}

uint64_t sub_190A0A620(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t))(v1 + 16))((char *)&v5 - v2, v3);
  return swift_setAtWritableKeyPath();
}

ValueMetadata *type metadata accessor for ControlWidgetSize()
{
  return &type metadata for ControlWidgetSize;
}

uint64_t sub_190A0A6C0()
{
  sub_19090D084();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190A0A70C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190A0A730(uint64_t a1)
{
  uint64_t v1;

  return sub_190A0A56C(a1, *(uint64_t (**)(unint64_t))(v1 + 16));
}

uint64_t sub_190A0A738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_190A0A7A4(uint64_t a1)
{
  return sub_190A0A620(a1);
}

uint64_t sub_190A0A7C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = v2;
  *(_QWORD *)(a1 + 56) = v3;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 80) = v4;
  v5 = v2;
  swift_retain();
  return swift_retain();
}

__n128 sub_190A0A824@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  __int128 v8;
  __n128 result;

  v7 = *a2;
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a7 = *(_OWORD *)a1;
  *(_OWORD *)(a7 + 16) = v8;
  result = *(__n128 *)(a1 + 25);
  *(__n128 *)(a7 + 25) = result;
  *(_QWORD *)(a7 + 48) = v7;
  *(_QWORD *)(a7 + 56) = a3;
  *(_QWORD *)(a7 + 64) = a4;
  *(_QWORD *)(a7 + 72) = a5;
  *(_QWORD *)(a7 + 80) = a6;
  return result;
}

void ControlWidgetButton.body.getter()
{
  id *v0;
  id v1;

  v1 = *v0;
  swift_retain();
  swift_retain();
  type metadata accessor for ControlWidgetButtonTemplateProvider();
}

void sub_190A0A8D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _QWORD v20[2];
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;

  v5 = MEMORY[0x19401429C](&unk_190A5C070, a1);
  sub_1909728D0(v3 - 168, a1, (uint64_t)&v30);
  v6 = v30;
  v7 = v37;
  v20[0] = v30;
  v20[1] = v31;
  v21 = v32;
  v22 = v33;
  v23 = v34;
  v24 = v35;
  v25 = v36;
  v26 = v37;
  v27 = v38;
  v28 = *(_OWORD *)(v2 + 64);
  v29 = v39;
  v9 = type metadata accessor for TemplateDescriptorPreference(0, a1, v5, v8);
  MEMORY[0x19401429C](&unk_190A5E7E0, v9);
  sub_1909DA920((uint64_t)v20, v9, v3 - 168);
  sub_1908B467C(v6);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  v11 = *(_QWORD *)(v3 - 160);
  v12 = *(_BYTE *)(v3 - 152);
  v13 = *(_BYTE *)(v3 - 151);
  v14 = *(_QWORD *)(v3 - 144);
  v15 = *(_QWORD *)(v3 - 136);
  v16 = *(_BYTE *)(v3 - 128);
  v18 = *(void **)(v3 - 120);
  v17 = *(_QWORD *)(v3 - 112);
  v19 = *(_QWORD *)(v3 - 88);
  v30 = *(_QWORD *)(v3 - 168);
  v10 = v30;
  v31 = v11;
  v32 = v12;
  v33 = v13;
  v34 = v14;
  v35 = v15;
  v36 = v16;
  v37 = v18;
  v38 = v17;
  *(_OWORD *)(v2 + 64) = *(_OWORD *)(v3 - 104);
  v39 = v19;
  sub_1909D989C((uint64_t)&v30, v9, v1);
  sub_1908B467C(v10);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

}

void type metadata accessor for ControlWidgetButtonTemplateProvider()
{
  JUMPOUT(0x1940141E8);
}

void static ControlWidgetButton._controlType.getter()
{
  type metadata accessor for ControlWidgetButton();
}

void type metadata accessor for ControlWidgetButton()
{
  JUMPOUT(0x1940141E8);
}

void sub_190A0AA98()
{
  static ControlWidgetButton._controlType.getter();
}

uint64_t ControlWidgetButton.init<>(action:label:actionLabel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X7>, _QWORD *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;

  v14 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v17);
  ControlAction.init<A>(_:)((uint64_t)v16, a6, &v20);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(a1, a6);
  *a7 = v20;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  return result;
}

uint64_t ControlWidgetButton.init<>(action:label:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v10 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v13);
  ControlAction.init<A>(_:)((uint64_t)v12, a4, &v16);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, a4);
  *a5 = v16;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = nullsub_1;
  a5[4] = 0;
  return result;
}

{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v10 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v13);
  ControlAction.init<A>(_:)((uint64_t)v12, a4, &v16);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, a4);
  *a5 = v16;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = nullsub_1;
  a5[4] = 0;
  return result;
}

__n128 ControlWidgetButton<>.init<>(_:action:actionLabel:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 result;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  __int128 v27;

  v23 = a6;
  v24 = a7;
  v15 = *(_QWORD *)(a9 - 8);
  MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, a9);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  *(_BYTE *)(v19 + 32) = a3;
  *(_QWORD *)(v19 + 40) = a4;
  ControlWidgetButton.init<>(action:label:actionLabel:)((uint64_t)v17, (uint64_t)sub_1909EC0AC, v19, v23, v24, a9, &v25);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a5, a9);
  result = v26;
  v21 = v27;
  *(_QWORD *)a8 = v25;
  *(__n128 *)(a8 + 8) = result;
  *(_OWORD *)(a8 + 24) = v21;
  return result;
}

uint64_t sub_190A0AE30()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

__n128 ControlWidgetButton<>.init<A>(_:action:actionLabel:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __n128 result;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  __int128 v38;

  v32 = a5;
  v33 = a8;
  v34 = a3;
  v35 = a4;
  v29 = a1;
  v30 = a2;
  v31 = a11;
  v15 = *(_QWORD *)(a7 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = MEMORY[0x1E0C80A78](a1);
  v18 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a1, a7);
  v23 = (*(unsigned __int8 *)(v15 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v24 = (char *)swift_allocObject();
  *((_QWORD *)v24 + 2) = v32;
  *((_QWORD *)v24 + 3) = a6;
  v25 = v33;
  *((_QWORD *)v24 + 4) = a7;
  *((_QWORD *)v24 + 5) = v25;
  v26 = v31;
  *((_QWORD *)v24 + 6) = a10;
  *((_QWORD *)v24 + 7) = v26;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v24[v23], v18, a7);
  ControlWidgetButton.init<>(action:label:actionLabel:)((uint64_t)v22, (uint64_t)sub_190A05448, (uint64_t)v24, v34, v35, a6, &v36);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v30, a6);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v29, a7);
  result = v37;
  v28 = v38;
  *(_QWORD *)a9 = v36;
  *(__n128 *)(a9 + 8) = result;
  *(_OWORD *)(a9 + 24) = v28;
  return result;
}

uint64_t sub_190A0AFEC()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_190A0B048()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190A0B084()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190A0B094(id *a1)
{

  swift_release();
  return swift_release();
}

uint64_t sub_190A0B0C4(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  id v6;

  v3 = *((_QWORD *)a2 + 4);
  v4 = *a2;
  v5 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = v3;
  v6 = (id)v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_190A0B11C(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_190A0B18C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ControlWidgetButtonDefaultActionLabel()
{
  return &type metadata for ControlWidgetButtonDefaultActionLabel;
}

void sub_190A0B1F0()
{
  type metadata accessor for ControlWidgetButtonTemplateProvider();
}

uint64_t sub_190A0B218(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = MEMORY[0x19401429C](&unk_190A5C070, a1);
  v4 = type metadata accessor for TemplateDescriptorPreference(255, a1, v2, v3);
  return MEMORY[0x19401429C](&unk_190A5E7E0, v4);
}

uint64_t sub_190A0B25C()
{
  return MEMORY[0x1E0CE0400];
}

uint64_t sub_190A0B268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  *(_QWORD *)(v4 + 232) = a2;
  *(_QWORD *)(v4 + 240) = a3;
  *(_QWORD *)(v4 + 224) = a1;
  *(_OWORD *)(v4 + 248) = *(_OWORD *)v3;
  *(_BYTE *)(v4 + 408) = *(_BYTE *)(v3 + 16);
  *(_BYTE *)(v4 + 409) = *(_BYTE *)(v3 + 17);
  *(_OWORD *)(v4 + 264) = *(_OWORD *)(v3 + 24);
  *(_BYTE *)(v4 + 410) = *(_BYTE *)(v3 + 40);
  *(_QWORD *)(v4 + 280) = *(_QWORD *)(v3 + 48);
  v5 = *(_OWORD *)(v3 + 72);
  *(_OWORD *)(v4 + 288) = *(_OWORD *)(v3 + 56);
  *(_OWORD *)(v4 + 304) = v5;
  sub_190A47D64();
  *(_QWORD *)(v4 + 320) = sub_190A47D58();
  *(_QWORD *)(v4 + 328) = sub_190A47D28();
  *(_QWORD *)(v4 + 336) = v6;
  return swift_task_switch();
}

void sub_190A0B318()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  id v26;
  uint64_t v27;
  _QWORD v28[2];
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void *v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;

  v2 = *(void **)(v0 + 280);
  v1 = *(_QWORD *)(v0 + 288);
  v3 = *(_BYTE *)(v0 + 410);
  v4 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 272);
  v6 = *(_BYTE *)(v0 + 409);
  v7 = *(_BYTE *)(v0 + 408);
  v8 = *(_QWORD *)(v0 + 256);
  v10 = *(_QWORD **)(v0 + 240);
  v27 = *(_QWORD *)(v0 + 312);
  v28[0] = *(_QWORD *)(v0 + 248);
  v9 = v28[0];
  v28[1] = v8;
  v29 = v7;
  v30 = v6;
  v31 = v4;
  v32 = v5;
  v33 = v3;
  v34 = v2;
  v35 = v1;
  v36 = *(_OWORD *)(v0 + 296);
  v37 = v27;
  v11 = v10[2];
  v12 = v10[3];
  v13 = v10[4];
  v14 = v10[5];
  sub_190939B44((uint64_t)v28, v0 + 16);
  v15 = *(_QWORD *)(v0 + 16);
  v16 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 344) = v15;
  *(_QWORD *)(v0 + 352) = v16;
  v17 = *(_BYTE *)(v0 + 32);
  v18 = *(_BYTE *)(v0 + 33);
  v19 = *(_QWORD *)(v0 + 40);
  v20 = *(_QWORD *)(v0 + 48);
  v21 = *(_BYTE *)(v0 + 56);
  v22 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 360) = v20;
  *(_QWORD *)(v0 + 368) = v22;
  v24 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 384) = v24;
  *(_QWORD *)(v0 + 104) = v15;
  *(_QWORD *)(v0 + 112) = v16;
  *(_BYTE *)(v0 + 120) = v17;
  *(_BYTE *)(v0 + 121) = v18;
  *(_QWORD *)(v0 + 128) = v19;
  *(_QWORD *)(v0 + 136) = v20;
  *(_BYTE *)(v0 + 144) = v21;
  *(_QWORD *)(v0 + 152) = v22;
  *(_QWORD *)(v0 + 160) = v23;
  v25 = *(_OWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 376) = v25;
  *(_OWORD *)(v0 + 168) = v25;
  *(_QWORD *)(v0 + 184) = v24;
  sub_1908B4C4C(v9);
  swift_bridgeObjectRetain();
  v26 = v2;
  swift_retain();
  swift_retain();
  *(_QWORD *)(v0 + 392) = swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v11;
  *(_QWORD *)(v0 + 200) = v12;
  *(_QWORD *)(v0 + 208) = v13;
  *(_QWORD *)(v0 + 216) = v14;
  type metadata accessor for ControlWidgetButtonParser();
}

uint64_t sub_190A0B464(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *v2 = v1;
  v2[1] = sub_190A0B49C;
  return sub_190939B88(*(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 232), a1);
}

uint64_t sub_190A0B49C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v2 = *(void **)(*(_QWORD *)v1 + 368);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 344);
  *(_QWORD *)(*(_QWORD *)v1 + 400) = v0;
  swift_task_dealloc();
  sub_1908B467C(v3);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_task_switch();
}

uint64_t sub_190A0B54C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190A0B580()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190A0B5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1908C5090;
  return sub_190A0B268(a1, a2, a3);
}

uint64_t ViewStatesArchiver.archiveToData()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for _MapStates(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  swift_retain();
  MEMORY[0x19401429C](&unk_190A5C1B8, v4);
  v5 = sub_190A46D98();
  swift_release();
  return v5;
}

uint64_t type metadata accessor for _MapStates(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _MapStates);
}

uint64_t ViewStatesArchiver.encodesCustomFontsAsURLs.setter()
{
  return sub_190A46E04();
}

uint64_t ViewStatesArchiver.encodesPreciseTextLayout.setter()
{
  return sub_190A46E1C();
}

uint64_t ViewStatesArchiver.deploymentVersion.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_190A46F54();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  sub_190A46DEC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ViewStatesArchiver.archive(to:)(NSFileHandle to)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = type metadata accessor for _MapStates(0, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v2);
  swift_retain();
  MEMORY[0x19401429C](&unk_190A5C1B8, v3);
  sub_190A46D8C();
  swift_release();
}

uint64_t ViewStatesArchiver.encodesPreciseTextLayout.getter()
{
  return sub_190A46E10() & 1;
}

uint64_t sub_190A0B838@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = ViewStatesArchiver.encodesPreciseTextLayout.getter();
  *a1 = result & 1;
  return result;
}

uint64_t (*ViewStatesArchiver.encodesPreciseTextLayout.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = sub_190A46E10() & 1;
  return sub_190A0B8B0;
}

uint64_t sub_190A0B8B0(uint64_t a1, uint64_t a2)
{
  return sub_190A0B964(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDAD78]);
}

uint64_t ViewStatesArchiver.encodesCustomFontsAsURLs.getter()
{
  return sub_190A46DF8() & 1;
}

uint64_t sub_190A0B8E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = ViewStatesArchiver.encodesCustomFontsAsURLs.getter();
  *a1 = result & 1;
  return result;
}

uint64_t (*ViewStatesArchiver.encodesCustomFontsAsURLs.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = sub_190A46DF8() & 1;
  return sub_190A0B958;
}

uint64_t sub_190A0B958(uint64_t a1, uint64_t a2)
{
  return sub_190A0B964(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDAD68]);
}

uint64_t sub_190A0B964(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(*(unsigned __int8 *)(a1 + 8));
}

uint64_t ViewStatesArchiver.deploymentVersion.getter()
{
  return sub_190A46DE0();
}

uint64_t sub_190A0B9AC()
{
  return ViewStatesArchiver.deploymentVersion.getter();
}

uint64_t sub_190A0B9DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_190A46F54();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return ViewStatesArchiver.deploymentVersion.setter((uint64_t)v4);
}

void (*ViewStatesArchiver.deploymentVersion.modify(_QWORD *a1, uint64_t a2))(uint64_t a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = sub_190A46F54();
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v5[5] = malloc(v8);
  sub_190A46DE0();
  return sub_190A0BAE0;
}

void sub_190A0BAE0(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    v5 = v2[2];
    v6 = v2[3];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 32), v4, v5);
    ViewStatesArchiver.deploymentVersion.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    ViewStatesArchiver.deploymentVersion.setter(*(_QWORD *)(*(_QWORD *)a1 + 40));
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_190A0BB70()
{
  return ViewStatesArchiver.encodesPreciseTextLayout.setter();
}

uint64_t sub_190A0BB94()
{
  return 16;
}

__n128 sub_190A0BBA0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_190A0BBB0()
{
  return ViewStatesArchiver.encodesCustomFontsAsURLs.setter();
}

uint64_t sub_190A0BBD4()
{
  return 16;
}

__n128 sub_190A0BBE0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_190A0BBF4()
{
  return 16;
}

__n128 sub_190A0BC00(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_190A0BC10()
{
  swift_release();
  return swift_release();
}

_QWORD *sub_190A0BC38(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_190A0BC6C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_190A0BCC8(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for ViewStatesArchiver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ViewStatesArchiver);
}

void sub_190A0BD10()
{
  unint64_t v0;

  sub_190A0BE60();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

id sub_190A0BD94(void *a1)
{
  uint64_t v2;

  if (!swift_weakLoadStrong())
    return a1;
  v2 = sub_190A0C35C((uint64_t)a1);
  swift_release();
  return (id)v2;
}

uint64_t sub_190A0BE00()
{
  uint64_t v0;

  swift_weakDestroy();
  swift_bridgeObjectRelease();
  sub_190A0C674(v0 + qword_1EE1E62F0);
  return v0;
}

uint64_t sub_190A0BE34()
{
  sub_190A0BE00();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _SimpleDelegate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _SimpleDelegate);
}

void sub_190A0BE60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ECF6BBC8)
  {
    sub_190A464C8();
    v0 = sub_190A48148();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ECF6BBC8);
  }
}

uint64_t sub_190A0BEB4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

id sub_190A0BF34(void *a1)
{
  return sub_190A0BD94(a1);
}

uint64_t sub_190A0BF54(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)v1 + *(_QWORD *)(v2 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 88) + 48))(v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

uint64_t sub_190A0C014(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  v4 = (_QWORD *)*v1;
  v6 = v4[10];
  v5 = v4[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = v4[13];
  swift_retain();
  sub_190A46E4C();
  sub_190A46E58();
  swift_release();
  v9 = *(_QWORD *)((char *)v2 + v8);
  swift_beginAccess();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 64);
  v12 = type metadata accessor for _SimpleDelegate(0, v6, v5, v11);
  swift_retain();
  v13 = MEMORY[0x19401429C](&unk_190A5C178, v12);
  v10(a1, v9, v12, v13, v6, v5);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_190A0C15C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;

  v2 = *v0;
  v3 = *(_QWORD *)(*v0 + 80);
  v4 = *(_QWORD *)(*v0 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = (char *)&v15 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)v0 + *(_QWORD *)(v2 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v3);
  sub_190A45E2C();
  swift_allocObject();
  sub_190A45E20();
  v13 = (uint64_t)v11;
  (*(void (**)(uint64_t, uint64_t))(v4 + 56))(v3, v4);
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v3);
    swift_release();
  }
  else
  {
    swift_getAssociatedConformanceWitness();
    v13 = sub_190A45E14();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v3);
  }
  return v13;
}

uint64_t sub_190A0C35C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t)v1 + *(_QWORD *)(v3 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 + 88) + 72))(a1, v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v9;
}

uint64_t sub_190A0C43C()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_190A0C488(uint64_t a1)
{
  return sub_190A0BF54(a1);
}

uint64_t sub_190A0C4A8(uint64_t a1)
{
  return sub_190A0C014(a1);
}

uint64_t sub_190A0C4C8()
{
  return sub_190A0C15C();
}

void sub_190A0C4E8()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  NSObject *oslog;
  uint64_t v7;

  if (qword_1EE1E6038 != -1)
    swift_once();
  v0 = sub_190A465A0();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE1FD6E8);
  oslog = sub_190A46588();
  v1 = sub_190A47F50();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    v3 = swift_slowAlloc();
    v7 = v3;
    *(_DWORD *)v2 = 136315138;
    v4 = sub_190A48880();
    sub_1908B35C4(v4, v5, &v7);
    sub_190A48178();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, oslog, v1, "Failed to encode %s", v2, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v3, -1, -1);
    MEMORY[0x194014398](v2, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_190A0C674(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BBD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static WidgetFontDefinitionFactory.fontDefinition(from:for:)(void *a1, unsigned __int8 *a2)
{
  unsigned __int8 v3;

  v3 = *a2;
  return sub_190A0C6DC(a1, &v3);
}

uint64_t sub_190A0C6DC(void *a1, unsigned __int8 *a2)
{
  int v2;
  uint64_t v3;
  uint64_t (*v4)();
  unint64_t *v5;

  v2 = *a2;
  switch((unint64_t)objc_msgSend(a1, sel_fontStyle))
  {
    case 1uLL:
      v3 = type metadata accessor for ContentSizeCategoryIncrementingFontDefinition();
      v4 = type metadata accessor for ContentSizeCategoryIncrementingFontDefinition;
      v5 = (unint64_t *)&unk_1ECF6A730;
      break;
    case 2uLL:
      v3 = type metadata accessor for ContentSizeCategoryDecrementingFontDefinition();
      v4 = type metadata accessor for ContentSizeCategoryDecrementingFontDefinition;
      v5 = (unint64_t *)&unk_1ECF6A970;
      break;
    case 6uLL:
      if (v2 == 7)
      {
        v3 = type metadata accessor for CompactCircularFontDefinition();
        v4 = type metadata accessor for CompactCircularFontDefinition;
        v5 = (unint64_t *)&unk_1EE1EED98;
      }
      else
      {
        v3 = type metadata accessor for CompactRectangularFontDefinition();
        v4 = type metadata accessor for CompactRectangularFontDefinition;
        v5 = (unint64_t *)&unk_1EE1EED90;
      }
      break;
    case 7uLL:
      if (v2 == 7)
      {
        v3 = type metadata accessor for RegularCircularFontDefinition();
        v4 = type metadata accessor for RegularCircularFontDefinition;
        v5 = (unint64_t *)&unk_1EE1EBF48;
      }
      else
      {
        v3 = type metadata accessor for RegularRectangularFontDefinition();
        v4 = type metadata accessor for RegularRectangularFontDefinition;
        v5 = (unint64_t *)&unk_1ECF69ED0;
      }
      break;
    case 8uLL:
      if (v2 == 7)
      {
        v3 = type metadata accessor for LargeCircularFontDefinition();
        v4 = type metadata accessor for LargeCircularFontDefinition;
        v5 = (unint64_t *)&unk_1ECF6A4A0;
      }
      else
      {
        v3 = type metadata accessor for LargeRectangularFontDefinition();
        v4 = type metadata accessor for LargeRectangularFontDefinition;
        v5 = (unint64_t *)&unk_1ECF69EC0;
      }
      break;
    case 0xBuLL:
      v3 = type metadata accessor for iOSLikeFontDefinition();
      v4 = type metadata accessor for iOSLikeFontDefinition;
      v5 = (unint64_t *)&unk_1EE1EED88;
      break;
    default:
      v3 = type metadata accessor for TightLeadingFontDefinition();
      v4 = type metadata accessor for TightLeadingFontDefinition;
      v5 = (unint64_t *)&unk_1ECF6A9C0;
      break;
  }
  sub_190A0C8A0(v5, (uint64_t (*)(uint64_t))v4);
  return v3;
}

uint64_t sub_190A0C888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for WidgetFontDefinitionFactory()
{
  return &type metadata for WidgetFontDefinitionFactory;
}

uint64_t sub_190A0C8A0(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x19401429C](&unk_190A4FD4C, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t View.activityBackgroundTint(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  v6 = type metadata accessor for _ActivityBackgroundTintModifier();
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_QWORD *)((char *)v8 + *(int *)(v6 + 20)) = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
  swift_storeEnumTagMultiPayload();
  *v8 = a1;
  swift_retain();
  MEMORY[0x194012838](v8, a2, v6, a3);
  return sub_190A0C9F8((uint64_t)v8);
}

uint64_t type metadata accessor for _ActivityBackgroundTintModifier()
{
  uint64_t result;

  result = qword_1EE1EB208;
  if (!qword_1EE1EB208)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_190A0C9F8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for _ActivityBackgroundTintModifier();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_190A0CA34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  type metadata accessor for _ActivityBackgroundTintModifier();
  v2 = sub_190A46894();
  v4[0] = v1;
  v4[1] = sub_190A0CA90();
  return MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v2, v4);
}

unint64_t sub_190A0CA90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EB200;
  if (!qword_1EE1EB200)
  {
    v1 = type metadata accessor for _ActivityBackgroundTintModifier();
    result = MEMORY[0x19401429C](&unk_190A5C2C8, v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EB200);
  }
  return result;
}

uint64_t *sub_190A0CAD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_190A46C30();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_190A0CBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_190A46C30();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_190A0CC24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_190A46C30();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    *v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_190A0CCCC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_190950F44((uint64_t)a1 + v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_190A46C30();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_190A0CD98(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_190A46C30();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_190A0CE40(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_190950F44((uint64_t)a1 + v6);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_190A46C30();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_190A0CF08()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190A0CF14(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED6F8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v9);
  }
}

uint64_t sub_190A0CFA0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_190A0CFAC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED6F8);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_190A0D024()
{
  unint64_t v0;

  sub_190950FB0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_190A0D098()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190A0D0A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;

  v5 = sub_190A46C30();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = (char *)&v24 - v8;
  v10 = *v2;
  if (*v2)
  {
    sub_19096EC18((uint64_t)&v24 - v8);
    sub_190A47674();
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v19 = v12 | ((unint64_t)v14 << 32);
    v20 = v16 | ((unint64_t)v18 << 32);
  }
  else
  {
    v19 = 0;
    v20 = 0;
  }
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA4F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a2, a1, v21);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA4A0);
  v23 = a2 + *(int *)(result + 36);
  *(_QWORD *)v23 = v19;
  *(_QWORD *)(v23 + 8) = v20;
  *(_BYTE *)(v23 + 16) = v10 == 0;
  return result;
}

void sub_190A0D1E0(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
}

double sub_190A0D1F0(uint64_t a1, void (*a2)(__int128 *__return_ptr))
{
  char v3;
  double result;
  __int128 v5;
  char v6;

  a2(&v5);
  v3 = v6;
  result = *(double *)&v5;
  *(_OWORD *)a1 = v5;
  *(_BYTE *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_190A0D230()
{
  sub_190A0D350();
  return sub_190A46C54();
}

ValueMetadata *type metadata accessor for _ActivityBackgroundTintPreferenceKey()
{
  return &type metadata for _ActivityBackgroundTintPreferenceKey;
}

unint64_t sub_190A0D26C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EA498;
  if (!qword_1EE1EA498)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EA4A0);
    v2[0] = sub_1908AF598(&qword_1EE1EA4E8, &qword_1EE1EA4F0, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1908AF598(&qword_1EE1EB988, &qword_1EE1EB990, MEMORY[0x1E0CDCAD0]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EA498);
  }
  return result;
}

unint64_t sub_190A0D30C()
{
  unint64_t result;

  result = qword_1EE1E66E8;
  if (!qword_1EE1E66E8)
  {
    result = MEMORY[0x19401429C](&unk_190A5C348, &type metadata for _ActivityBackgroundTintPreferenceKey);
    atomic_store(result, (unint64_t *)&qword_1EE1E66E8);
  }
  return result;
}

unint64_t sub_190A0D350()
{
  unint64_t result;

  result = qword_1EE1E66E0;
  if (!qword_1EE1E66E0)
  {
    result = MEMORY[0x19401429C](&unk_190A5C390, &type metadata for _ActivityBackgroundTintPreferenceKey);
    atomic_store(result, (unint64_t *)&qword_1EE1E66E0);
  }
  return result;
}

_QWORD *sub_190A0D394(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_190A460CC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = (void *)v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    v13 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
    swift_retain();
    v14 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_190A0D460(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_190A460CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190A0D4D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  void *v11;
  uint64_t v12;
  id v13;

  v6 = sub_190A460CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = (void *)v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  swift_retain();
  v13 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_190A0D570(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;

  v6 = sub_190A460CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_retain();
  swift_release();
  v10 = *(void **)(v9 + 8);
  v11 = *(void **)(v8 + 8);
  *(_QWORD *)(v8 + 8) = v10;
  v12 = v10;

  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_190A0D644(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_190A460CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t sub_190A0D6BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v6 = sub_190A460CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_release();
  v10 = *(void **)(v8 + 8);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);

  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_190A0D774()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190A0D780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_190A460CC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_190A0D7FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190A0D808(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_190A460CC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ActivityViewStates.Metadata(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1EE1EABF0);
}

uint64_t sub_190A0D894()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190A460CC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_190A0D920(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD *v64;
  _OWORD *v65;
  uint64_t v66;
  unsigned int (*v67)(_OWORD *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v86)(char *, uint64_t, uint64_t);

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    v20 = (_QWORD *)(v19 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = (void *)a2[2];
    a1[2] = v6;
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    *(_OWORD *)v8 = *(_OWORD *)((char *)a2 + v7);
    v8[16] = *((_BYTE *)a2 + v7 + 16);
    *(_OWORD *)(v8 + 24) = *(_OWORD *)((char *)a2 + v7 + 24);
    v8[40] = *((_BYTE *)a2 + v7 + 40);
    *((_QWORD *)v8 + 6) = *(_QWORD *)((char *)a2 + v7 + 48);
    *(_OWORD *)(v8 + 56) = *(_OWORD *)((char *)a2 + v7 + 56);
    *(_OWORD *)(v8 + 72) = *(_OWORD *)((char *)a2 + v7 + 72);
    v8[88] = *((_BYTE *)a2 + v7 + 88);
    *((_OWORD *)v8 + 6) = *(_OWORD *)((char *)a2 + v7 + 96);
    v10 = type metadata accessor for MetricsRequest(0);
    v11 = *(int *)(v10 + 40);
    v12 = &v8[v11];
    v13 = &v9[v11];
    v14 = sub_190A46EE8();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_retain();
    v17 = v6;
    v86 = v16;
    v82 = v15;
    if (v16(v13, 1, v14))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v21 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
    v22 = &v8[v21];
    v23 = &v9[v21];
    v24 = (int *)type metadata accessor for JindoMetricsDefinition(0);
    v25 = *((_QWORD *)v24 - 1);
    v26 = a2;
    v20 = a1;
    v81 = v14;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v80 = v25;
      *(_OWORD *)v22 = *(_OWORD *)v23;
      v28 = v24[5];
      v29 = &v22[v28];
      v30 = &v23[v28];
      v29[16] = v30[16];
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *(_OWORD *)(v29 + 24) = *(_OWORD *)(v30 + 24);
      v29[40] = v30[40];
      *((_QWORD *)v29 + 6) = *((_QWORD *)v30 + 6);
      *(_OWORD *)(v29 + 56) = *(_OWORD *)(v30 + 56);
      *(_OWORD *)(v29 + 72) = *(_OWORD *)(v30 + 72);
      v29[88] = v30[88];
      *((_OWORD *)v29 + 6) = *((_OWORD *)v30 + 6);
      v31 = *(int *)(v10 + 40);
      v32 = &v29[v31];
      v33 = &v30[v31];
      if (v86(&v30[v31], 1, v14))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v32, v33, v14);
        v26 = a2;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v32, 0, 1, v14);
      }
      v35 = v24[6];
      v36 = &v22[v35];
      v37 = &v23[v35];
      *(_OWORD *)v36 = *(_OWORD *)v37;
      v36[16] = v37[16];
      *(_OWORD *)(v36 + 24) = *(_OWORD *)(v37 + 24);
      v36[40] = v37[40];
      *((_QWORD *)v36 + 6) = *((_QWORD *)v37 + 6);
      *(_OWORD *)(v36 + 56) = *(_OWORD *)(v37 + 56);
      *(_OWORD *)(v36 + 72) = *(_OWORD *)(v37 + 72);
      v36[88] = v37[88];
      *((_OWORD *)v36 + 6) = *((_OWORD *)v37 + 6);
      v38 = *(int *)(v10 + 40);
      v39 = &v36[v38];
      v40 = &v37[v38];
      if (v86(&v37[v38], 1, v14))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v39, v40, v14);
        v26 = a2;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v39, 0, 1, v14);
      }
      v42 = v24[7];
      v43 = &v22[v42];
      v44 = &v23[v42];
      *(_OWORD *)v43 = *(_OWORD *)v44;
      v43[16] = v44[16];
      *(_OWORD *)(v43 + 24) = *(_OWORD *)(v44 + 24);
      v43[40] = v44[40];
      *((_QWORD *)v43 + 6) = *((_QWORD *)v44 + 6);
      *(_OWORD *)(v43 + 56) = *(_OWORD *)(v44 + 56);
      *(_OWORD *)(v43 + 72) = *(_OWORD *)(v44 + 72);
      v43[88] = v44[88];
      *((_OWORD *)v43 + 6) = *((_OWORD *)v44 + 6);
      v45 = *(int *)(v10 + 40);
      v46 = &v43[v45];
      v47 = &v44[v45];
      if (v86(&v44[v45], 1, v14))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        v49 = v82;
      }
      else
      {
        v50 = v47;
        v49 = v82;
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v46, v50, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v46, 0, 1, v14);
      }
      v51 = v24[8];
      v52 = &v22[v51];
      v53 = &v23[v51];
      *(_OWORD *)v52 = *(_OWORD *)v53;
      v52[16] = v53[16];
      *(_OWORD *)(v52 + 24) = *(_OWORD *)(v53 + 24);
      v52[40] = v53[40];
      *((_QWORD *)v52 + 6) = *((_QWORD *)v53 + 6);
      *(_OWORD *)(v52 + 56) = *(_OWORD *)(v53 + 56);
      *(_OWORD *)(v52 + 72) = *(_OWORD *)(v53 + 72);
      v52[88] = v53[88];
      *((_OWORD *)v52 + 6) = *((_OWORD *)v53 + 6);
      v54 = *(int *)(v10 + 40);
      v55 = &v52[v54];
      v56 = &v53[v54];
      if (v86(&v53[v54], 1, v14))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v55, v56, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v55, 0, 1, v14);
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v80 + 56))(v22, 0, 1, v24);
    }
    v58 = a3[7];
    v59 = a3[8];
    v60 = (_QWORD *)((char *)a1 + v58);
    v61 = (_QWORD *)((char *)v26 + v58);
    v62 = v61[1];
    *v60 = *v61;
    v60[1] = v62;
    *((_BYTE *)a1 + v59) = *((_BYTE *)v26 + v59);
    v63 = a3[10];
    *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)v26 + a3[9]);
    v64 = (_OWORD *)((char *)a1 + v63);
    v65 = (_OWORD *)((char *)v26 + v63);
    v66 = *(_QWORD *)(v10 - 8);
    v67 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v66 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v67(v65, 1, v10))
    {
      v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA528);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      *v64 = *v65;
      *((_BYTE *)v64 + 16) = *((_BYTE *)v65 + 16);
      *(_OWORD *)((char *)v64 + 24) = *(_OWORD *)((char *)v65 + 24);
      *((_BYTE *)v64 + 40) = *((_BYTE *)v65 + 40);
      *((_QWORD *)v64 + 6) = *((_QWORD *)v65 + 6);
      *(_OWORD *)((char *)v64 + 56) = *(_OWORD *)((char *)v65 + 56);
      *(_OWORD *)((char *)v64 + 72) = *(_OWORD *)((char *)v65 + 72);
      *((_BYTE *)v64 + 88) = *((_BYTE *)v65 + 88);
      v64[6] = v65[6];
      v69 = *(int *)(v10 + 40);
      v70 = (char *)v64 + v69;
      v71 = (char *)v65 + v69;
      if (v86(v71, 1, v81))
      {
        v72 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v70, v71, v81);
        v26 = a2;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v70, 0, 1, v81);
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v64, 0, 1, v10);
    }
    v73 = a3[11];
    v74 = (char *)a1 + v73;
    v75 = (char *)v26 + v73;
    v76 = sub_190A46C30();
    v77 = *(_QWORD *)(v76 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
    {
      v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
      memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v74, v75, v76);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
    }
    *((_BYTE *)a1 + a3[12]) = *((_BYTE *)v26 + a3[12]);
  }
  return v20;
}

uint64_t sub_190A0E068(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  swift_release();

  v4 = a1 + a2[6];
  v5 = type metadata accessor for MetricsRequest(0);
  v6 = v4 + *(int *)(v5 + 40);
  v7 = sub_190A46EE8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v10 = v4 + *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v11 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11))
  {
    v12 = *(int *)(v5 + 40);
    v13 = v10 + v11[5] + v12;
    if (!v9(v13, 1, v7))
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
      v12 = *(int *)(v5 + 40);
    }
    v14 = v10 + v11[6] + v12;
    if (!v9(v14, 1, v7))
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v14, v7);
      v12 = *(int *)(v5 + 40);
    }
    v15 = v10 + v11[7] + v12;
    if (!v9(v15, 1, v7))
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v15, v7);
      v12 = *(int *)(v5 + 40);
    }
    v16 = v10 + v11[8] + v12;
    if (!v9(v16, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v16, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = a1 + a2[10];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v17, 1, v5))
  {
    v18 = v17 + *(int *)(v5 + 40);
    if (!v9(v18, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v18, v7);
  }
  v19 = a1 + a2[11];
  v20 = sub_190A46C30();
  v21 = *(_QWORD *)(v20 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  return result;
}

_QWORD *sub_190A0E2E0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  _OWORD *v58;
  uint64_t v59;
  unsigned int (*v60)(_OWORD *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  v5 = a3[6];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  *(_OWORD *)v6 = *(_OWORD *)((char *)a2 + v5);
  v6[16] = *((_BYTE *)a2 + v5 + 16);
  *(_OWORD *)(v6 + 24) = *(_OWORD *)((char *)a2 + v5 + 24);
  v6[40] = *((_BYTE *)a2 + v5 + 40);
  *((_QWORD *)v6 + 6) = *(_QWORD *)((char *)a2 + v5 + 48);
  *(_OWORD *)(v6 + 56) = *(_OWORD *)((char *)a2 + v5 + 56);
  *(_OWORD *)(v6 + 72) = *(_OWORD *)((char *)a2 + v5 + 72);
  v6[88] = *((_BYTE *)a2 + v5 + 88);
  *((_OWORD *)v6 + 6) = *(_OWORD *)((char *)a2 + v5 + 96);
  v8 = type metadata accessor for MetricsRequest(0);
  v9 = *(int *)(v8 + 40);
  v10 = &v6[v9];
  v11 = &v7[v9];
  v12 = sub_190A46EE8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_retain();
  v15 = v4;
  if (v14(v11, 1, v12))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v17 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v18 = &v6[v17];
  v19 = &v7[v17];
  v20 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v21 = *((_QWORD *)v20 - 1);
  v74 = v13;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v73 = v21;
    *(_OWORD *)v18 = *(_OWORD *)v19;
    v23 = v20[5];
    v24 = &v18[v23];
    v25 = &v19[v23];
    v24[16] = v25[16];
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 24) = *(_OWORD *)(v25 + 24);
    v24[40] = v25[40];
    *((_QWORD *)v24 + 6) = *((_QWORD *)v25 + 6);
    *(_OWORD *)(v24 + 56) = *(_OWORD *)(v25 + 56);
    *(_OWORD *)(v24 + 72) = *(_OWORD *)(v25 + 72);
    v24[88] = v25[88];
    *((_OWORD *)v24 + 6) = *((_OWORD *)v25 + 6);
    v26 = *(int *)(v8 + 40);
    v27 = &v24[v26];
    v28 = &v25[v26];
    if (v14(&v25[v26], 1, v12))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v27, v28, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v27, 0, 1, v12);
    }
    v30 = v20[6];
    v31 = &v18[v30];
    v32 = &v19[v30];
    *(_OWORD *)v31 = *(_OWORD *)v32;
    v31[16] = v32[16];
    *(_OWORD *)(v31 + 24) = *(_OWORD *)(v32 + 24);
    v31[40] = v32[40];
    *((_QWORD *)v31 + 6) = *((_QWORD *)v32 + 6);
    *(_OWORD *)(v31 + 56) = *(_OWORD *)(v32 + 56);
    *(_OWORD *)(v31 + 72) = *(_OWORD *)(v32 + 72);
    v31[88] = v32[88];
    *((_OWORD *)v31 + 6) = *((_OWORD *)v32 + 6);
    v33 = *(int *)(v8 + 40);
    v34 = &v31[v33];
    v35 = &v32[v33];
    if (v14(&v32[v33], 1, v12))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v34, v35, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v34, 0, 1, v12);
    }
    v37 = v20[7];
    v38 = &v18[v37];
    v39 = &v19[v37];
    *(_OWORD *)v38 = *(_OWORD *)v39;
    v38[16] = v39[16];
    *(_OWORD *)(v38 + 24) = *(_OWORD *)(v39 + 24);
    v38[40] = v39[40];
    *((_QWORD *)v38 + 6) = *((_QWORD *)v39 + 6);
    *(_OWORD *)(v38 + 56) = *(_OWORD *)(v39 + 56);
    *(_OWORD *)(v38 + 72) = *(_OWORD *)(v39 + 72);
    v38[88] = v39[88];
    *((_OWORD *)v38 + 6) = *((_OWORD *)v39 + 6);
    v40 = *(int *)(v8 + 40);
    v41 = &v38[v40];
    v42 = &v39[v40];
    if (v14(&v39[v40], 1, v12))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v41, v42, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v41, 0, 1, v12);
    }
    v44 = v20[8];
    v45 = &v18[v44];
    v46 = &v19[v44];
    *(_OWORD *)v45 = *(_OWORD *)v46;
    v45[16] = v46[16];
    *(_OWORD *)(v45 + 24) = *(_OWORD *)(v46 + 24);
    v45[40] = v46[40];
    *((_QWORD *)v45 + 6) = *((_QWORD *)v46 + 6);
    *(_OWORD *)(v45 + 56) = *(_OWORD *)(v46 + 56);
    *(_OWORD *)(v45 + 72) = *(_OWORD *)(v46 + 72);
    v45[88] = v46[88];
    *((_OWORD *)v45 + 6) = *((_OWORD *)v46 + 6);
    v47 = *(int *)(v8 + 40);
    v48 = &v45[v47];
    v49 = &v46[v47];
    if (v14(&v46[v47], 1, v12))
    {
      v50 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v48, v49, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v48, 0, 1, v12);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v73 + 56))(v18, 0, 1, v20);
  }
  v51 = a3[7];
  v52 = a3[8];
  v53 = (_QWORD *)((char *)a1 + v51);
  v54 = (_QWORD *)((char *)a2 + v51);
  v55 = v54[1];
  *v53 = *v54;
  v53[1] = v55;
  *((_BYTE *)a1 + v52) = *((_BYTE *)a2 + v52);
  v56 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  v57 = (_OWORD *)((char *)a1 + v56);
  v58 = (_OWORD *)((char *)a2 + v56);
  v59 = *(_QWORD *)(v8 - 8);
  v60 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v59 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v60(v58, 1, v8))
  {
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA528);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    *v57 = *v58;
    *((_BYTE *)v57 + 16) = *((_BYTE *)v58 + 16);
    *(_OWORD *)((char *)v57 + 24) = *(_OWORD *)((char *)v58 + 24);
    *((_BYTE *)v57 + 40) = *((_BYTE *)v58 + 40);
    *((_QWORD *)v57 + 6) = *((_QWORD *)v58 + 6);
    *(_OWORD *)((char *)v57 + 56) = *(_OWORD *)((char *)v58 + 56);
    *(_OWORD *)((char *)v57 + 72) = *(_OWORD *)((char *)v58 + 72);
    *((_BYTE *)v57 + 88) = *((_BYTE *)v58 + 88);
    v57[6] = v58[6];
    v62 = *(int *)(v8 + 40);
    v63 = (char *)v57 + v62;
    v64 = (char *)v58 + v62;
    if (v14(v64, 1, v12))
    {
      v65 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v63, v64, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v63, 0, 1, v12);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v57, 0, 1, v8);
  }
  v66 = a3[11];
  v67 = (char *)a1 + v66;
  v68 = (char *)a2 + v66;
  v69 = sub_190A46C30();
  v70 = *(_QWORD *)(v69 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
  {
    v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
  }
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  return a1;
}

_QWORD *sub_190A0E9D8(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, int *);
  int v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int v55;
  int v56;
  uint64_t v57;
  char *v58;
  char *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  char *v99;
  char *v100;
  int v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  char *v112;
  char *v113;
  int v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  uint64_t v124;
  char *v125;
  char *v126;
  int v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t (*v137)(char *, uint64_t, uint64_t);
  int v138;
  int v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  uint64_t v144;
  void *v145;
  char *v146;
  uint64_t v147;
  size_t v148;
  void *v149;
  char *v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  char *v156;
  char *v157;
  int v158;
  int v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t (*v165)(char *, uint64_t, uint64_t);
  int v166;
  int v167;
  uint64_t v168;
  int *v170;
  uint64_t v171;
  uint64_t (*v172)(char *, uint64_t, uint64_t);
  uint64_t v173;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  v9 = a3[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = *(_OWORD *)((char *)a2 + v9);
  v10[16] = *((_BYTE *)a2 + v9 + 16);
  *(_OWORD *)v10 = v12;
  v13 = *(_OWORD *)((char *)a2 + v9 + 24);
  v10[40] = *((_BYTE *)a2 + v9 + 40);
  *(_OWORD *)(v10 + 24) = v13;
  *((_QWORD *)v10 + 6) = *(_QWORD *)((char *)a2 + v9 + 48);
  v14 = *(_OWORD *)((char *)a2 + v9 + 56);
  v15 = *(_OWORD *)((char *)a2 + v9 + 72);
  v10[88] = *((_BYTE *)a2 + v9 + 88);
  *(_OWORD *)(v10 + 72) = v15;
  *(_OWORD *)(v10 + 56) = v14;
  *((_QWORD *)v10 + 12) = *(_QWORD *)((char *)a2 + v9 + 96);
  *((_QWORD *)v10 + 13) = *(_QWORD *)((char *)a2 + v9 + 104);
  v173 = type metadata accessor for MetricsRequest(0);
  v16 = *(int *)(v173 + 40);
  v17 = &v10[v16];
  v18 = &v11[v16];
  v19 = sub_190A46EE8();
  v171 = *(_QWORD *)(v19 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v171 + 48);
  v21 = v20(v17, 1, v19);
  v172 = v20;
  v22 = v20(v18, 1, v19);
  v170 = a3;
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v171 + 8))(v17, v19);
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v171 + 24))(v17, v18, v19);
LABEL_7:
  v24 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v25 = &v10[v24];
  v26 = &v11[v24];
  v27 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v28 = *((_QWORD *)v27 - 1);
  v29 = *(uint64_t (**)(char *, uint64_t, int *))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (v31)
    {
      sub_1908B5150((uint64_t)v25, type metadata accessor for JindoMetricsDefinition);
      goto LABEL_13;
    }
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
    v45 = v27[5];
    v46 = &v25[v45];
    v47 = &v26[v45];
    v48 = *(_OWORD *)v47;
    v46[16] = v47[16];
    *(_OWORD *)v46 = v48;
    v49 = *(_OWORD *)(v47 + 24);
    v46[40] = v47[40];
    *(_OWORD *)(v46 + 24) = v49;
    *((_QWORD *)v46 + 6) = *((_QWORD *)v47 + 6);
    v50 = *(_OWORD *)(v47 + 56);
    v51 = *(_OWORD *)(v47 + 72);
    v46[88] = v47[88];
    *(_OWORD *)(v46 + 72) = v51;
    *(_OWORD *)(v46 + 56) = v50;
    *((_QWORD *)v46 + 12) = *((_QWORD *)v47 + 12);
    *((_QWORD *)v46 + 13) = *((_QWORD *)v47 + 13);
    v52 = *(int *)(v173 + 40);
    v53 = &v46[v52];
    v54 = &v47[v52];
    v55 = v172(&v46[v52], 1, v19);
    v56 = v172(v54, 1, v19);
    if (v55)
    {
      if (!v56)
      {
        (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v53, v54, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v53, 0, 1, v19);
        goto LABEL_32;
      }
    }
    else
    {
      if (!v56)
      {
        (*(void (**)(char *, char *, uint64_t))(v171 + 24))(v53, v54, v19);
LABEL_32:
        v91 = v27[6];
        v92 = &v25[v91];
        v93 = &v26[v91];
        v94 = *(_OWORD *)v93;
        v92[16] = v93[16];
        *(_OWORD *)v92 = v94;
        v95 = *(_OWORD *)(v93 + 24);
        v92[40] = v93[40];
        *(_OWORD *)(v92 + 24) = v95;
        *((_QWORD *)v92 + 6) = *((_QWORD *)v93 + 6);
        v96 = *(_OWORD *)(v93 + 56);
        v97 = *(_OWORD *)(v93 + 72);
        v92[88] = v93[88];
        *(_OWORD *)(v92 + 72) = v97;
        *(_OWORD *)(v92 + 56) = v96;
        *((_QWORD *)v92 + 12) = *((_QWORD *)v93 + 12);
        *((_QWORD *)v92 + 13) = *((_QWORD *)v93 + 13);
        v98 = *(int *)(v173 + 40);
        v99 = &v92[v98];
        v100 = &v93[v98];
        v101 = v172(&v92[v98], 1, v19);
        v102 = v172(v100, 1, v19);
        if (v101)
        {
          if (!v102)
          {
            (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v99, v100, v19);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v99, 0, 1, v19);
            goto LABEL_38;
          }
        }
        else
        {
          if (!v102)
          {
            (*(void (**)(char *, char *, uint64_t))(v171 + 24))(v99, v100, v19);
LABEL_38:
            v104 = v27[7];
            v105 = &v25[v104];
            v106 = &v26[v104];
            v107 = *(_OWORD *)v106;
            v105[16] = v106[16];
            *(_OWORD *)v105 = v107;
            v108 = *(_OWORD *)(v106 + 24);
            v105[40] = v106[40];
            *(_OWORD *)(v105 + 24) = v108;
            *((_QWORD *)v105 + 6) = *((_QWORD *)v106 + 6);
            v109 = *(_OWORD *)(v106 + 56);
            v110 = *(_OWORD *)(v106 + 72);
            v105[88] = v106[88];
            *(_OWORD *)(v105 + 72) = v110;
            *(_OWORD *)(v105 + 56) = v109;
            *((_QWORD *)v105 + 12) = *((_QWORD *)v106 + 12);
            *((_QWORD *)v105 + 13) = *((_QWORD *)v106 + 13);
            v111 = *(int *)(v173 + 40);
            v112 = &v105[v111];
            v113 = &v106[v111];
            v114 = v172(&v105[v111], 1, v19);
            v115 = v172(v113, 1, v19);
            if (v114)
            {
              if (!v115)
              {
                (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v112, v113, v19);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v112, 0, 1, v19);
                goto LABEL_44;
              }
            }
            else
            {
              if (!v115)
              {
                (*(void (**)(char *, char *, uint64_t))(v171 + 24))(v112, v113, v19);
LABEL_44:
                v44 = v170;
                v117 = v27[8];
                v118 = &v25[v117];
                v119 = &v26[v117];
                v120 = *(_OWORD *)v119;
                v118[16] = v119[16];
                *(_OWORD *)v118 = v120;
                v121 = *(_OWORD *)(v119 + 24);
                v118[40] = v119[40];
                *(_OWORD *)(v118 + 24) = v121;
                *((_QWORD *)v118 + 6) = *((_QWORD *)v119 + 6);
                v122 = *(_OWORD *)(v119 + 56);
                v123 = *(_OWORD *)(v119 + 72);
                v118[88] = v119[88];
                *(_OWORD *)(v118 + 72) = v123;
                *(_OWORD *)(v118 + 56) = v122;
                *((_QWORD *)v118 + 12) = *((_QWORD *)v119 + 12);
                *((_QWORD *)v118 + 13) = *((_QWORD *)v119 + 13);
                v124 = *(int *)(v173 + 40);
                v125 = &v118[v124];
                v126 = &v119[v124];
                v127 = v172(&v118[v124], 1, v19);
                v128 = v172(v126, 1, v19);
                if (v127)
                {
                  if (!v128)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v125, v126, v19);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v125, 0, 1, v19);
                    goto LABEL_50;
                  }
                }
                else
                {
                  if (!v128)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v171 + 24))(v125, v126, v19);
                    goto LABEL_50;
                  }
                  (*(void (**)(char *, uint64_t))(v171 + 8))(v125, v19);
                }
                v129 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
                memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
                goto LABEL_50;
              }
              (*(void (**)(char *, uint64_t))(v171 + 8))(v112, v19);
            }
            v116 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
            memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
            goto LABEL_44;
          }
          (*(void (**)(char *, uint64_t))(v171 + 8))(v99, v19);
        }
        v103 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
        goto LABEL_38;
      }
      (*(void (**)(char *, uint64_t))(v171 + 8))(v53, v19);
    }
    v90 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    goto LABEL_32;
  }
  if (v31)
  {
LABEL_13:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    v44 = v170;
    goto LABEL_50;
  }
  *(_OWORD *)v25 = *(_OWORD *)v26;
  v32 = v27[5];
  v33 = &v25[v32];
  v34 = &v26[v32];
  v35 = *(_OWORD *)v34;
  v33[16] = v34[16];
  *(_OWORD *)v33 = v35;
  v36 = *(_OWORD *)(v34 + 24);
  v33[40] = v34[40];
  *(_OWORD *)(v33 + 24) = v36;
  *((_QWORD *)v33 + 6) = *((_QWORD *)v34 + 6);
  v37 = *(_OWORD *)(v34 + 56);
  v38 = *(_OWORD *)(v34 + 72);
  v33[88] = v34[88];
  *(_OWORD *)(v33 + 72) = v38;
  *(_OWORD *)(v33 + 56) = v37;
  *((_QWORD *)v33 + 12) = *((_QWORD *)v34 + 12);
  *((_QWORD *)v33 + 13) = *((_QWORD *)v34 + 13);
  v39 = *(int *)(v173 + 40);
  v40 = &v33[v39];
  v41 = &v34[v39];
  if (v20(&v34[v39], 1, v19))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v40, v41, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v40, 0, 1, v19);
  }
  v57 = v27[6];
  v58 = &v25[v57];
  v59 = &v26[v57];
  v60 = *(_OWORD *)v59;
  v58[16] = v59[16];
  *(_OWORD *)v58 = v60;
  v61 = *(_OWORD *)(v59 + 24);
  v58[40] = v59[40];
  *(_OWORD *)(v58 + 24) = v61;
  *((_QWORD *)v58 + 6) = *((_QWORD *)v59 + 6);
  v62 = *(_OWORD *)(v59 + 56);
  v63 = *(_OWORD *)(v59 + 72);
  v58[88] = v59[88];
  *(_OWORD *)(v58 + 72) = v63;
  *(_OWORD *)(v58 + 56) = v62;
  *((_QWORD *)v58 + 12) = *((_QWORD *)v59 + 12);
  *((_QWORD *)v58 + 13) = *((_QWORD *)v59 + 13);
  v64 = *(int *)(v173 + 40);
  v65 = &v58[v64];
  v66 = &v59[v64];
  if (v20(&v59[v64], 1, v19))
  {
    v67 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v65, v66, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v65, 0, 1, v19);
  }
  v68 = v27[7];
  v69 = &v25[v68];
  v70 = &v26[v68];
  v71 = *(_OWORD *)v70;
  v69[16] = v70[16];
  *(_OWORD *)v69 = v71;
  v72 = *(_OWORD *)(v70 + 24);
  v69[40] = v70[40];
  *(_OWORD *)(v69 + 24) = v72;
  *((_QWORD *)v69 + 6) = *((_QWORD *)v70 + 6);
  v73 = *(_OWORD *)(v70 + 56);
  v74 = *(_OWORD *)(v70 + 72);
  v69[88] = v70[88];
  *(_OWORD *)(v69 + 72) = v74;
  *(_OWORD *)(v69 + 56) = v73;
  *((_QWORD *)v69 + 12) = *((_QWORD *)v70 + 12);
  *((_QWORD *)v69 + 13) = *((_QWORD *)v70 + 13);
  v75 = *(int *)(v173 + 40);
  v76 = &v69[v75];
  v77 = &v70[v75];
  if (v20(&v70[v75], 1, v19))
  {
    v78 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v76, v77, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v76, 0, 1, v19);
  }
  v79 = v27[8];
  v80 = &v25[v79];
  v81 = &v26[v79];
  v82 = *(_OWORD *)v81;
  v80[16] = v81[16];
  *(_OWORD *)v80 = v82;
  v83 = *(_OWORD *)(v81 + 24);
  v80[40] = v81[40];
  *(_OWORD *)(v80 + 24) = v83;
  *((_QWORD *)v80 + 6) = *((_QWORD *)v81 + 6);
  v84 = *(_OWORD *)(v81 + 56);
  v85 = *(_OWORD *)(v81 + 72);
  v80[88] = v81[88];
  *(_OWORD *)(v80 + 72) = v85;
  *(_OWORD *)(v80 + 56) = v84;
  *((_QWORD *)v80 + 12) = *((_QWORD *)v81 + 12);
  *((_QWORD *)v80 + 13) = *((_QWORD *)v81 + 13);
  v86 = *(int *)(v173 + 40);
  v87 = &v80[v86];
  v88 = &v81[v86];
  v44 = v170;
  if (v20(&v81[v86], 1, v19))
  {
    v89 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v87, v88, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v87, 0, 1, v19);
  }
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
LABEL_50:
  v130 = v44[7];
  v131 = (char *)a1 + v130;
  v132 = (char *)a2 + v130;
  *(_QWORD *)((char *)a1 + v130) = *(_QWORD *)((char *)a2 + v130);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v131 + 1) = *((_QWORD *)v132 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v44[8]) = *((_BYTE *)a2 + v44[8]);
  *(_QWORD *)((char *)a1 + v44[9]) = *(_QWORD *)((char *)a2 + v44[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v133 = v44[10];
  v134 = (uint64_t)a1 + v133;
  v135 = (char *)a2 + v133;
  v136 = *(_QWORD *)(v173 - 8);
  v137 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v136 + 48);
  v138 = v137((char *)a1 + v133, 1, v173);
  v139 = v137(v135, 1, v173);
  if (!v138)
  {
    if (!v139)
    {
      v151 = *(_OWORD *)v135;
      *(_BYTE *)(v134 + 16) = v135[16];
      *(_OWORD *)v134 = v151;
      v152 = *(_OWORD *)(v135 + 24);
      *(_BYTE *)(v134 + 40) = v135[40];
      *(_OWORD *)(v134 + 24) = v152;
      *(_QWORD *)(v134 + 48) = *((_QWORD *)v135 + 6);
      v153 = *(_OWORD *)(v135 + 56);
      v154 = *(_OWORD *)(v135 + 72);
      *(_BYTE *)(v134 + 88) = v135[88];
      *(_OWORD *)(v134 + 72) = v154;
      *(_OWORD *)(v134 + 56) = v153;
      *(_QWORD *)(v134 + 96) = *((_QWORD *)v135 + 12);
      *(_QWORD *)(v134 + 104) = *((_QWORD *)v135 + 13);
      v155 = *(int *)(v173 + 40);
      v156 = (char *)(v134 + v155);
      v157 = &v135[v155];
      v158 = v172(v156, 1, v19);
      v159 = v172(v157, 1, v19);
      if (v158)
      {
        if (!v159)
        {
          (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v156, v157, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v156, 0, 1, v19);
          goto LABEL_63;
        }
      }
      else
      {
        if (!v159)
        {
          (*(void (**)(char *, char *, uint64_t))(v171 + 24))(v156, v157, v19);
          goto LABEL_63;
        }
        (*(void (**)(char *, uint64_t))(v171 + 8))(v156, v19);
      }
      v148 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0) - 8) + 64);
      v149 = v156;
      v150 = v157;
LABEL_57:
      memcpy(v149, v150, v148);
      goto LABEL_63;
    }
    sub_1908B5150(v134, type metadata accessor for MetricsRequest);
LABEL_56:
    v148 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA528) - 8) + 64);
    v149 = (void *)v134;
    v150 = v135;
    goto LABEL_57;
  }
  if (v139)
    goto LABEL_56;
  v140 = *(_OWORD *)v135;
  *(_BYTE *)(v134 + 16) = v135[16];
  *(_OWORD *)v134 = v140;
  v141 = *(_OWORD *)(v135 + 24);
  *(_BYTE *)(v134 + 40) = v135[40];
  *(_OWORD *)(v134 + 24) = v141;
  *(_QWORD *)(v134 + 48) = *((_QWORD *)v135 + 6);
  v142 = *(_OWORD *)(v135 + 56);
  v143 = *(_OWORD *)(v135 + 72);
  *(_BYTE *)(v134 + 88) = v135[88];
  *(_OWORD *)(v134 + 72) = v143;
  *(_OWORD *)(v134 + 56) = v142;
  *(_QWORD *)(v134 + 96) = *((_QWORD *)v135 + 12);
  *(_QWORD *)(v134 + 104) = *((_QWORD *)v135 + 13);
  v144 = *(int *)(v173 + 40);
  v145 = (void *)(v134 + v144);
  v146 = &v135[v144];
  if (v172(v146, 1, v19))
  {
    v147 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v171 + 16))(v145, v146, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v145, 0, 1, v19);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v136 + 56))(v134, 0, 1, v173);
LABEL_63:
  v160 = v44[11];
  v161 = (char *)a1 + v160;
  v162 = (char *)a2 + v160;
  v163 = sub_190A46C30();
  v164 = *(_QWORD *)(v163 - 8);
  v165 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v164 + 48);
  v166 = v165(v161, 1, v163);
  v167 = v165(v162, 1, v163);
  if (!v166)
  {
    if (!v167)
    {
      (*(void (**)(char *, char *, uint64_t))(v164 + 24))(v161, v162, v163);
      goto LABEL_69;
    }
    (*(void (**)(char *, uint64_t))(v164 + 8))(v161, v163);
    goto LABEL_68;
  }
  if (v167)
  {
LABEL_68:
    v168 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
    memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
    goto LABEL_69;
  }
  (*(void (**)(char *, char *, uint64_t))(v164 + 16))(v161, v162, v163);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v164 + 56))(v161, 0, 1, v163);
LABEL_69:
  *((_BYTE *)a1 + v44[12]) = *((_BYTE *)a2 + v44[12]);
  return a1;
}

uint64_t sub_190A0F7F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  _OWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  const void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(const void *, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(a2 + v6 + 16);
  *(_OWORD *)v7 = *(_OWORD *)(a2 + v6);
  *(_BYTE *)(v7 + 40) = *(_BYTE *)(a2 + v6 + 40);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)(a2 + v6 + 24);
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(a2 + v6 + 48);
  *(_OWORD *)(v7 + 72) = *(_OWORD *)(a2 + v6 + 72);
  *(_OWORD *)(v7 + 56) = *(_OWORD *)(a2 + v6 + 56);
  *(_BYTE *)(v7 + 88) = *(_BYTE *)(a2 + v6 + 88);
  *(_OWORD *)(v7 + 96) = *(_OWORD *)(a2 + v6 + 96);
  v9 = type metadata accessor for MetricsRequest(0);
  v10 = *(int *)(v9 + 40);
  v11 = (void *)(v7 + v10);
  v12 = (const void *)(v8 + v10);
  v13 = sub_190A46EE8();
  v14 = *(_QWORD *)(v13 - 8);
  v70 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  if (v70(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v17 = (_OWORD *)(v7 + v16);
  v18 = (_OWORD *)(v8 + v16);
  v19 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v20 = *((_QWORD *)v19 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v68 = v20;
    v69 = v14;
    *v17 = *v18;
    v22 = v19[5];
    v23 = (char *)v17 + v22;
    v24 = (char *)v18 + v22;
    v23[16] = v24[16];
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 24) = *(_OWORD *)(v24 + 24);
    v23[40] = v24[40];
    *((_QWORD *)v23 + 6) = *((_QWORD *)v24 + 6);
    *(_OWORD *)(v23 + 56) = *(_OWORD *)(v24 + 56);
    *(_OWORD *)(v23 + 72) = *(_OWORD *)(v24 + 72);
    v23[88] = v24[88];
    *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
    v25 = *(int *)(v9 + 40);
    v26 = &v23[v25];
    v27 = &v24[v25];
    if (v70(&v24[v25], 1, v13))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v26, v27, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v26, 0, 1, v13);
    }
    v29 = v19[6];
    v30 = (char *)v17 + v29;
    v31 = (char *)v18 + v29;
    *(_OWORD *)v30 = *(_OWORD *)v31;
    v30[16] = v31[16];
    *(_OWORD *)(v30 + 24) = *(_OWORD *)(v31 + 24);
    v30[40] = v31[40];
    *((_QWORD *)v30 + 6) = *((_QWORD *)v31 + 6);
    *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
    *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
    v30[88] = v31[88];
    *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
    v32 = *(int *)(v9 + 40);
    v33 = &v30[v32];
    v34 = &v31[v32];
    if (v70(&v31[v32], 1, v13))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v33, v34, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v33, 0, 1, v13);
    }
    v36 = v19[7];
    v37 = (char *)v17 + v36;
    v38 = (char *)v18 + v36;
    *(_OWORD *)v37 = *(_OWORD *)v38;
    v37[16] = v38[16];
    *(_OWORD *)(v37 + 24) = *(_OWORD *)(v38 + 24);
    v37[40] = v38[40];
    *((_QWORD *)v37 + 6) = *((_QWORD *)v38 + 6);
    *(_OWORD *)(v37 + 56) = *(_OWORD *)(v38 + 56);
    *(_OWORD *)(v37 + 72) = *(_OWORD *)(v38 + 72);
    v37[88] = v38[88];
    *((_OWORD *)v37 + 6) = *((_OWORD *)v38 + 6);
    v39 = *(int *)(v9 + 40);
    v40 = &v37[v39];
    v41 = &v38[v39];
    if (v70(&v38[v39], 1, v13))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      v14 = v69;
    }
    else
    {
      v43 = v41;
      v14 = v69;
      (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v40, v43, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v40, 0, 1, v13);
    }
    v44 = v19[8];
    v45 = (char *)v17 + v44;
    v46 = (char *)v18 + v44;
    *(_OWORD *)v45 = *(_OWORD *)v46;
    v45[16] = v46[16];
    *(_OWORD *)(v45 + 24) = *(_OWORD *)(v46 + 24);
    v45[40] = v46[40];
    *((_QWORD *)v45 + 6) = *((_QWORD *)v46 + 6);
    *(_OWORD *)(v45 + 56) = *(_OWORD *)(v46 + 56);
    *(_OWORD *)(v45 + 72) = *(_OWORD *)(v46 + 72);
    v45[88] = v46[88];
    *((_OWORD *)v45 + 6) = *((_OWORD *)v46 + 6);
    v47 = *(int *)(v9 + 40);
    v48 = &v45[v47];
    v49 = &v46[v47];
    if (v70(&v46[v47], 1, v13))
    {
      v50 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v48, v49, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v48, 0, 1, v13);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v68 + 56))(v17, 0, 1, v19);
  }
  v51 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v51) = *(_BYTE *)(a2 + v51);
  v52 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v53 = (_OWORD *)(a1 + v52);
  v54 = (_OWORD *)(a2 + v52);
  v55 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(a2 + v52, 1, v9))
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA528);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    *v53 = *v54;
    *((_BYTE *)v53 + 16) = *((_BYTE *)v54 + 16);
    *(_OWORD *)((char *)v53 + 24) = *(_OWORD *)((char *)v54 + 24);
    *((_BYTE *)v53 + 40) = *((_BYTE *)v54 + 40);
    *((_QWORD *)v53 + 6) = *((_QWORD *)v54 + 6);
    *(_OWORD *)((char *)v53 + 56) = *(_OWORD *)((char *)v54 + 56);
    *(_OWORD *)((char *)v53 + 72) = *(_OWORD *)((char *)v54 + 72);
    *((_BYTE *)v53 + 88) = *((_BYTE *)v54 + 88);
    v53[6] = v54[6];
    v57 = *(int *)(v9 + 40);
    v58 = (char *)v53 + v57;
    v59 = (char *)v54 + v57;
    if (v70(v59, 1, v13))
    {
      v60 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v58, v59, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v58, 0, 1, v13);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v53, 0, 1, v9);
  }
  v61 = a3[11];
  v62 = (void *)(a1 + v61);
  v63 = (const void *)(a2 + v61);
  v64 = sub_190A46C30();
  v65 = *(_QWORD *)(v64 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
  {
    v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v65 + 32))(v62, v63, v64);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
  }
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  return a1;
}

_QWORD *sub_190A0FED8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, int *);
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  int v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  int v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t (*v101)(char *, uint64_t, uint64_t);
  int v102;
  int v103;
  uint64_t v104;
  void *v105;
  char *v106;
  uint64_t v107;
  size_t v108;
  void *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  int v114;
  int v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t (*v121)(char *, uint64_t, uint64_t);
  int v122;
  int v123;
  uint64_t v124;
  int *v126;
  uint64_t v127;
  uint64_t (*v128)(char *, uint64_t, uint64_t);
  uint64_t v129;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  v7 = (void *)a1[2];
  a1[2] = a2[2];

  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  *(_OWORD *)v9 = *(_OWORD *)((char *)a2 + v8);
  v9[16] = *((_BYTE *)a2 + v8 + 16);
  *(_OWORD *)(v9 + 24) = *(_OWORD *)((char *)a2 + v8 + 24);
  v9[40] = *((_BYTE *)a2 + v8 + 40);
  *((_QWORD *)v9 + 6) = *(_QWORD *)((char *)a2 + v8 + 48);
  *(_OWORD *)(v9 + 56) = *(_OWORD *)((char *)a2 + v8 + 56);
  *(_OWORD *)(v9 + 72) = *(_OWORD *)((char *)a2 + v8 + 72);
  v9[88] = *((_BYTE *)a2 + v8 + 88);
  *((_OWORD *)v9 + 6) = *(_OWORD *)((char *)a2 + v8 + 96);
  v129 = type metadata accessor for MetricsRequest(0);
  v11 = *(int *)(v129 + 40);
  v12 = &v9[v11];
  v13 = &v10[v11];
  v14 = sub_190A46EE8();
  v127 = *(_QWORD *)(v14 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v127 + 48);
  v16 = v15(v12, 1, v14);
  v128 = v15;
  v17 = v15(v13, 1, v14);
  v126 = a3;
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v127 + 8))(v12, v14);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v127 + 40))(v12, v13, v14);
LABEL_7:
  v19 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v20 = &v9[v19];
  v21 = &v10[v19];
  v22 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v23 = *((_QWORD *)v22 - 1);
  v24 = *(uint64_t (**)(char *, uint64_t, int *))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (v26)
    {
      sub_1908B5150((uint64_t)v20, type metadata accessor for JindoMetricsDefinition);
      goto LABEL_13;
    }
    *(_OWORD *)v20 = *(_OWORD *)v21;
    v36 = v22[5];
    v37 = &v20[v36];
    v38 = &v21[v36];
    *(_OWORD *)v37 = *(_OWORD *)v38;
    v37[16] = v38[16];
    *(_OWORD *)(v37 + 24) = *(_OWORD *)(v38 + 24);
    v37[40] = v38[40];
    *((_QWORD *)v37 + 6) = *((_QWORD *)v38 + 6);
    *(_OWORD *)(v37 + 56) = *(_OWORD *)(v38 + 56);
    *(_OWORD *)(v37 + 72) = *(_OWORD *)(v38 + 72);
    v37[88] = v38[88];
    *((_OWORD *)v37 + 6) = *((_OWORD *)v38 + 6);
    v39 = *(int *)(v129 + 40);
    v40 = &v37[v39];
    v41 = &v38[v39];
    v42 = v128(&v37[v39], 1, v14);
    v43 = v128(v41, 1, v14);
    if (v42)
    {
      if (!v43)
      {
        (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v40, v41, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v40, 0, 1, v14);
        goto LABEL_32;
      }
    }
    else
    {
      if (!v43)
      {
        (*(void (**)(char *, char *, uint64_t))(v127 + 40))(v40, v41, v14);
LABEL_32:
        v66 = v22[6];
        v67 = &v20[v66];
        v68 = &v21[v66];
        *(_OWORD *)v67 = *(_OWORD *)v68;
        v67[16] = v68[16];
        *(_OWORD *)(v67 + 24) = *(_OWORD *)(v68 + 24);
        v67[40] = v68[40];
        *((_QWORD *)v67 + 6) = *((_QWORD *)v68 + 6);
        *(_OWORD *)(v67 + 56) = *(_OWORD *)(v68 + 56);
        *(_OWORD *)(v67 + 72) = *(_OWORD *)(v68 + 72);
        v67[88] = v68[88];
        *((_OWORD *)v67 + 6) = *((_OWORD *)v68 + 6);
        v69 = *(int *)(v129 + 40);
        v70 = &v67[v69];
        v71 = &v68[v69];
        v72 = v128(&v67[v69], 1, v14);
        v73 = v128(v71, 1, v14);
        if (v72)
        {
          if (!v73)
          {
            (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v70, v71, v14);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v70, 0, 1, v14);
            goto LABEL_38;
          }
        }
        else
        {
          if (!v73)
          {
            (*(void (**)(char *, char *, uint64_t))(v127 + 40))(v70, v71, v14);
LABEL_38:
            v75 = v22[7];
            v76 = &v20[v75];
            v77 = &v21[v75];
            *(_OWORD *)v76 = *(_OWORD *)v77;
            v76[16] = v77[16];
            *(_OWORD *)(v76 + 24) = *(_OWORD *)(v77 + 24);
            v76[40] = v77[40];
            *((_QWORD *)v76 + 6) = *((_QWORD *)v77 + 6);
            *(_OWORD *)(v76 + 56) = *(_OWORD *)(v77 + 56);
            *(_OWORD *)(v76 + 72) = *(_OWORD *)(v77 + 72);
            v76[88] = v77[88];
            *((_OWORD *)v76 + 6) = *((_OWORD *)v77 + 6);
            v78 = *(int *)(v129 + 40);
            v79 = &v76[v78];
            v80 = &v77[v78];
            v81 = v128(&v76[v78], 1, v14);
            v82 = v128(v80, 1, v14);
            if (v81)
            {
              if (!v82)
              {
                (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v79, v80, v14);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v79, 0, 1, v14);
                goto LABEL_44;
              }
            }
            else
            {
              if (!v82)
              {
                (*(void (**)(char *, char *, uint64_t))(v127 + 40))(v79, v80, v14);
LABEL_44:
                v35 = v126;
                v84 = v22[8];
                v85 = &v20[v84];
                v86 = &v21[v84];
                *(_OWORD *)v85 = *(_OWORD *)v86;
                v85[16] = v86[16];
                *(_OWORD *)(v85 + 24) = *(_OWORD *)(v86 + 24);
                v85[40] = v86[40];
                *((_QWORD *)v85 + 6) = *((_QWORD *)v86 + 6);
                *(_OWORD *)(v85 + 56) = *(_OWORD *)(v86 + 56);
                *(_OWORD *)(v85 + 72) = *(_OWORD *)(v86 + 72);
                v85[88] = v86[88];
                *((_OWORD *)v85 + 6) = *((_OWORD *)v86 + 6);
                v87 = *(int *)(v129 + 40);
                v88 = &v85[v87];
                v89 = &v86[v87];
                v90 = v128(&v85[v87], 1, v14);
                v91 = v128(v89, 1, v14);
                if (v90)
                {
                  if (!v91)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v88, v89, v14);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v88, 0, 1, v14);
                    goto LABEL_50;
                  }
                }
                else
                {
                  if (!v91)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v127 + 40))(v88, v89, v14);
                    goto LABEL_50;
                  }
                  (*(void (**)(char *, uint64_t))(v127 + 8))(v88, v14);
                }
                v92 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
                memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
                goto LABEL_50;
              }
              (*(void (**)(char *, uint64_t))(v127 + 8))(v79, v14);
            }
            v83 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
            memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
            goto LABEL_44;
          }
          (*(void (**)(char *, uint64_t))(v127 + 8))(v70, v14);
        }
        v74 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        goto LABEL_38;
      }
      (*(void (**)(char *, uint64_t))(v127 + 8))(v40, v14);
    }
    v65 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_32;
  }
  if (v26)
  {
LABEL_13:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    v35 = v126;
    goto LABEL_50;
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
  v27 = v22[5];
  v28 = &v20[v27];
  v29 = &v21[v27];
  v28[16] = v29[16];
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 24) = *(_OWORD *)(v29 + 24);
  v28[40] = v29[40];
  *((_QWORD *)v28 + 6) = *((_QWORD *)v29 + 6);
  *(_OWORD *)(v28 + 56) = *(_OWORD *)(v29 + 56);
  *(_OWORD *)(v28 + 72) = *(_OWORD *)(v29 + 72);
  v28[88] = v29[88];
  *((_OWORD *)v28 + 6) = *((_OWORD *)v29 + 6);
  v30 = *(int *)(v129 + 40);
  v31 = &v28[v30];
  v32 = &v29[v30];
  if (v15(&v29[v30], 1, v14))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v31, v32, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v31, 0, 1, v14);
  }
  v44 = v22[6];
  v45 = &v20[v44];
  v46 = &v21[v44];
  *(_OWORD *)v45 = *(_OWORD *)v46;
  v45[16] = v46[16];
  *(_OWORD *)(v45 + 24) = *(_OWORD *)(v46 + 24);
  v45[40] = v46[40];
  *((_QWORD *)v45 + 6) = *((_QWORD *)v46 + 6);
  *(_OWORD *)(v45 + 56) = *(_OWORD *)(v46 + 56);
  *(_OWORD *)(v45 + 72) = *(_OWORD *)(v46 + 72);
  v45[88] = v46[88];
  *((_OWORD *)v45 + 6) = *((_OWORD *)v46 + 6);
  v47 = *(int *)(v129 + 40);
  v48 = &v45[v47];
  v49 = &v46[v47];
  if (v15(&v46[v47], 1, v14))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v48, v49, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v48, 0, 1, v14);
  }
  v51 = v22[7];
  v52 = &v20[v51];
  v53 = &v21[v51];
  *(_OWORD *)v52 = *(_OWORD *)v53;
  v52[16] = v53[16];
  *(_OWORD *)(v52 + 24) = *(_OWORD *)(v53 + 24);
  v52[40] = v53[40];
  *((_QWORD *)v52 + 6) = *((_QWORD *)v53 + 6);
  *(_OWORD *)(v52 + 56) = *(_OWORD *)(v53 + 56);
  *(_OWORD *)(v52 + 72) = *(_OWORD *)(v53 + 72);
  v52[88] = v53[88];
  *((_OWORD *)v52 + 6) = *((_OWORD *)v53 + 6);
  v54 = *(int *)(v129 + 40);
  v55 = &v52[v54];
  v56 = &v53[v54];
  if (v15(&v53[v54], 1, v14))
  {
    v57 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v55, v56, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v55, 0, 1, v14);
  }
  v58 = v22[8];
  v59 = &v20[v58];
  v60 = &v21[v58];
  *(_OWORD *)v59 = *(_OWORD *)v60;
  v59[16] = v60[16];
  *(_OWORD *)(v59 + 24) = *(_OWORD *)(v60 + 24);
  v59[40] = v60[40];
  *((_QWORD *)v59 + 6) = *((_QWORD *)v60 + 6);
  *(_OWORD *)(v59 + 56) = *(_OWORD *)(v60 + 56);
  *(_OWORD *)(v59 + 72) = *(_OWORD *)(v60 + 72);
  v59[88] = v60[88];
  *((_OWORD *)v59 + 6) = *((_OWORD *)v60 + 6);
  v61 = *(int *)(v129 + 40);
  v62 = &v59[v61];
  v63 = &v60[v61];
  v35 = v126;
  if (v15(&v60[v61], 1, v14))
  {
    v64 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v62, v63, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v62, 0, 1, v14);
  }
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
LABEL_50:
  v93 = v35[7];
  v94 = (char *)a1 + v93;
  v95 = (char *)a2 + v93;
  *(_QWORD *)((char *)a1 + v93) = *(_QWORD *)((char *)a2 + v93);
  swift_bridgeObjectRelease();
  *((_QWORD *)v94 + 1) = *((_QWORD *)v95 + 1);
  swift_bridgeObjectRelease();
  v96 = v35[9];
  *((_BYTE *)a1 + v35[8]) = *((_BYTE *)a2 + v35[8]);
  *(_QWORD *)((char *)a1 + v96) = *(_QWORD *)((char *)a2 + v96);
  swift_bridgeObjectRelease();
  v97 = v35[10];
  v98 = (uint64_t)a1 + v97;
  v99 = (char *)a2 + v97;
  v100 = *(_QWORD *)(v129 - 8);
  v101 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v100 + 48);
  v102 = v101((char *)a1 + v97, 1, v129);
  v103 = v101(v99, 1, v129);
  if (!v102)
  {
    if (!v103)
    {
      *(_OWORD *)v98 = *(_OWORD *)v99;
      *(_BYTE *)(v98 + 16) = v99[16];
      *(_OWORD *)(v98 + 24) = *(_OWORD *)(v99 + 24);
      *(_BYTE *)(v98 + 40) = v99[40];
      *(_QWORD *)(v98 + 48) = *((_QWORD *)v99 + 6);
      *(_OWORD *)(v98 + 56) = *(_OWORD *)(v99 + 56);
      *(_OWORD *)(v98 + 72) = *(_OWORD *)(v99 + 72);
      *(_BYTE *)(v98 + 88) = v99[88];
      *(_OWORD *)(v98 + 96) = *((_OWORD *)v99 + 6);
      v111 = *(int *)(v129 + 40);
      v112 = (char *)(v98 + v111);
      v113 = &v99[v111];
      v114 = v128(v112, 1, v14);
      v115 = v128(v113, 1, v14);
      if (v114)
      {
        if (!v115)
        {
          (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v112, v113, v14);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v112, 0, 1, v14);
          goto LABEL_63;
        }
      }
      else
      {
        if (!v115)
        {
          (*(void (**)(char *, char *, uint64_t))(v127 + 40))(v112, v113, v14);
          goto LABEL_63;
        }
        (*(void (**)(char *, uint64_t))(v127 + 8))(v112, v14);
      }
      v108 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0) - 8) + 64);
      v109 = v112;
      v110 = v113;
LABEL_57:
      memcpy(v109, v110, v108);
      goto LABEL_63;
    }
    sub_1908B5150(v98, type metadata accessor for MetricsRequest);
LABEL_56:
    v108 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA528) - 8) + 64);
    v109 = (void *)v98;
    v110 = v99;
    goto LABEL_57;
  }
  if (v103)
    goto LABEL_56;
  *(_OWORD *)v98 = *(_OWORD *)v99;
  *(_BYTE *)(v98 + 16) = v99[16];
  *(_OWORD *)(v98 + 24) = *(_OWORD *)(v99 + 24);
  *(_BYTE *)(v98 + 40) = v99[40];
  *(_QWORD *)(v98 + 48) = *((_QWORD *)v99 + 6);
  *(_OWORD *)(v98 + 56) = *(_OWORD *)(v99 + 56);
  *(_OWORD *)(v98 + 72) = *(_OWORD *)(v99 + 72);
  *(_BYTE *)(v98 + 88) = v99[88];
  *(_OWORD *)(v98 + 96) = *((_OWORD *)v99 + 6);
  v104 = *(int *)(v129 + 40);
  v105 = (void *)(v98 + v104);
  v106 = &v99[v104];
  if (v128(v106, 1, v14))
  {
    v107 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v127 + 32))(v105, v106, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v105, 0, 1, v14);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v100 + 56))(v98, 0, 1, v129);
LABEL_63:
  v116 = v35[11];
  v117 = (char *)a1 + v116;
  v118 = (char *)a2 + v116;
  v119 = sub_190A46C30();
  v120 = *(_QWORD *)(v119 - 8);
  v121 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v120 + 48);
  v122 = v121(v117, 1, v119);
  v123 = v121(v118, 1, v119);
  if (!v122)
  {
    if (!v123)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v117, v118, v119);
      goto LABEL_69;
    }
    (*(void (**)(char *, uint64_t))(v120 + 8))(v117, v119);
    goto LABEL_68;
  }
  if (v123)
  {
LABEL_68:
    v124 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
    memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
    goto LABEL_69;
  }
  (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v117, v118, v119);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v117, 0, 1, v119);
LABEL_69:
  *((_BYTE *)a1 + v35[12]) = *((_BYTE *)a2 + v35[12]);
  return a1;
}

uint64_t sub_190A10C68()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190A10C74(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ActivityMetricsDefinition(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA528);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[10];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[11];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_190A10D40()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190A10D4C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for ActivityMetricsDefinition(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA528);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[10];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[11];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ActivityViewStates(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1EE1EAC00);
}

void sub_190A10E28()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for ActivityMetricsDefinition(319);
  if (v0 <= 0x3F)
  {
    sub_1908BBFB0(319, &qword_1EE1EB1F8, (void (*)(uint64_t))type metadata accessor for MetricsRequest);
    if (v1 <= 0x3F)
    {
      sub_1908BBFB0(319, (unint64_t *)&qword_1ECF6BCE8, (void (*)(uint64_t))MEMORY[0x1E0CDAA30]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_190A10F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _BYTE *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t result;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v32 = a1;
  v9 = sub_190A46C30();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  MEMORY[0x1E0C80A78](v33);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a3;
  v31 = (id)a3[1];
  LOBYTE(a3) = *a4;
  *a5 = 0;
  v16 = (int *)type metadata accessor for ActivityViewStates(0);
  *((_BYTE *)a5 + v16[8]) = 0;
  *(uint64_t *)((char *)a5 + v16[9]) = MEMORY[0x1E0DEE9E0];
  v17 = (char *)a5 + v16[10];
  v18 = type metadata accessor for MetricsRequest(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))((char *)a5 + v16[11], 1, 1, v9);
  v19 = (uint64_t)a5 + v16[6];
  v30 = a2;
  sub_1908AF5D8(a2, v19, type metadata accessor for ActivityMetricsDefinition);
  *((_BYTE *)a5 + v16[12]) = (_BYTE)a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1E6770);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_190A4A350;
  *(_QWORD *)(v20 + 32) = v32;
  v34 = v20;
  sub_190A47C74();
  v21 = v34;
  swift_retain();
  swift_retain();
  v22 = v31;
  swift_bridgeObjectRetain();
  sub_190A46C24();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(&v14[*(int *)(v33 + 20)], v12, v9);
  *(_QWORD *)v14 = v15;
  *((_QWORD *)v14 + 1) = v22;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v23 = sub_1908BAE48((uint64_t)v14);
  sub_1908B5150((uint64_t)v14, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  swift_release();
  result = swift_bridgeObjectRelease();
  v25 = (uint64_t *)((char *)a5 + v16[7]);
  *v25 = v21;
  v25[1] = v23;
  v26 = *(_QWORD *)(v21 + 16);
  v27 = *(_QWORD *)(v23 + 16);
  v28 = v26 * v27;
  if ((unsigned __int128)(v26 * (__int128)v27) >> 64 == (v26 * v27) >> 63)
  {
    result = sub_1908B5150(v30, type metadata accessor for ActivityMetricsDefinition);
    *a5 = v28;
    a5[1] = v15;
    a5[2] = (uint64_t)v22;
  }
  else
  {
    __break(1u);
  }
  return result;
}

int64_t sub_190A11188(double a1, double a2)
{
  CGImage *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t result;
  CGColorSpace *v10;
  int64_t BitsPerPixel;
  uint64_t v12;
  int64_t v13;
  size_t BitsPerComponent;
  uint32_t AlphaInfo;
  CGContextRef v16;
  CGContextRef v17;
  double v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  CGContext *v25;
  CGColor *GenericRGB;
  CGImageRef Image;
  _QWORD v28[2];
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;

  v5 = sub_190A46288();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = CGImageGetColorSpace(v2);
  if (!result)
    return 0;
  if (a1 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (a1 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((*(_QWORD *)&a1 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&a2 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_19;
  }
  if (a2 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (a2 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v10 = (CGColorSpace *)result;
  BitsPerPixel = CGImageGetBitsPerPixel(v2);
  result = CGImageGetBitsPerComponent(v2);
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (BitsPerPixel == 0x8000000000000000 && result == -1)
    goto LABEL_24;
  v12 = BitsPerPixel / result;
  v13 = (uint64_t)a1 * (BitsPerPixel / result);
  if ((unsigned __int128)((uint64_t)a1 * (__int128)v12) >> 64 == v13 >> 63)
  {
    BitsPerComponent = CGImageGetBitsPerComponent(v2);
    AlphaInfo = CGImageGetAlphaInfo(v2);
    v16 = CGBitmapContextCreate(0, (uint64_t)a1, (uint64_t)a2, BitsPerComponent, v13, v10, AlphaInfo);
    if (v16)
    {
      v17 = v16;
      v18 = CGRectMake();
      v20 = v19;
      v22 = v21;
      v24 = v23;
      v25 = v17;
      v29.origin.x = v18;
      v29.origin.y = v20;
      v29.size.width = v22;
      v29.size.height = v24;
      CGRectGetMinX(v29);
      v30.origin.x = v18;
      v30.origin.y = v20;
      v30.size.width = v22;
      v30.size.height = v24;
      v28[1] = CGRectGetMidX(v30);
      v31.origin.x = v18;
      v31.origin.y = v20;
      v31.size.width = v22;
      v31.size.height = v24;
      CGRectGetMaxX(v31);
      v32.origin.x = v18;
      v32.origin.y = v20;
      v32.size.width = v22;
      v32.size.height = v24;
      CGRectGetMinY(v32);
      v33.origin.x = v18;
      v33.origin.y = v20;
      v33.size.width = v22;
      v33.size.height = v24;
      CGRectGetMidY(v33);
      v34.origin.x = v18;
      v34.origin.y = v20;
      v34.size.width = v22;
      v34.size.height = v24;
      CGRectGetMaxY(v34);
      GenericRGB = CGColorCreateGenericRGB(0.25, 0.25, 0.25, 1.0);
      CGContextSetFillColorWithColor(v25, GenericRGB);

      sub_190A47EF0();
      sub_190A47EFC();
      sub_190A47EFC();
      sub_190A47EFC();
      sub_190A47EFC();
      CGContextClosePath(v25);
      (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0C9B8A0], v5);
      sub_190A47F08();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      Image = CGBitmapContextCreateImage(v25);

      return (int64_t)Image;
    }

    return 0;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_190A11500(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v11;
  char v12;
  __int128 v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6758);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190A137B4();
  sub_190A48850();
  LOBYTE(v13) = 0;
  sub_190A460CC();
  sub_1908AA2F4((unint64_t *)&unk_1EE1E6010, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  sub_190A48640();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for ActivityViewStates.Metadata(0);
    v13 = *(_OWORD *)(v3 + v9[5]);
    v12 = 1;
    sub_19091BFBC();
    sub_190A48640();
    *(_QWORD *)&v13 = *(_QWORD *)(v3 + v9[6]);
    v12 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EACF8);
    sub_190A1383C(&qword_1EE1E66F8, (uint64_t (*)(void))sub_190A138A4, MEMORY[0x1E0DEAF10]);
    sub_190A48640();
    *(_QWORD *)&v13 = *(_QWORD *)(v3 + v9[7]);
    v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EACF0);
    sub_1909AA024(&qword_1EE1E66F0, (uint64_t (*)(void))sub_1909AA098, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEA0B8]);
    sub_190A48640();
    LOBYTE(v13) = *(_BYTE *)(v3 + v9[8]);
    v12 = 4;
    sub_19097BF0C();
    sub_190A48640();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_190A11788@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  __int128 v23;
  char v24;

  v17 = a2;
  v18 = sub_190A460CC();
  v3 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v19 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6AC0);
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for ActivityViewStates.Metadata(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190A137B4();
  v21 = v7;
  v11 = (uint64_t)v22;
  sub_190A48838();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = v5;
  v22 = a1;
  LOBYTE(v23) = 0;
  sub_1908AA2F4((unint64_t *)&unk_1EE1E6928, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  v13 = v18;
  v12 = v19;
  sub_190A48580();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v12, v13);
  v24 = 1;
  sub_19091BE58();
  sub_190A48580();
  *(_OWORD *)&v10[v8[5]] = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EACF8);
  v24 = 2;
  sub_190A1383C(&qword_1EE1E6A68, (uint64_t (*)(void))sub_190A137F8, MEMORY[0x1E0DEAF40]);
  sub_190A48580();
  *(_QWORD *)&v10[v8[6]] = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EACF0);
  v24 = 3;
  sub_1909AA024(&qword_1EE1E6A60, (uint64_t (*)(void))sub_1909A9F98, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEA0D8]);
  sub_190A48580();
  *(_QWORD *)&v10[v8[7]] = v23;
  v24 = 4;
  sub_19097BFD8();
  sub_190A48580();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v20);
  v10[v8[8]] = v23;
  sub_1908AF5D8((uint64_t)v10, v17, type metadata accessor for ActivityViewStates.Metadata);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return sub_1908B5150((uint64_t)v10, type metadata accessor for ActivityViewStates.Metadata);
}

uint64_t sub_190A11BF0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_190A11C14 + 4 * byte_190A5C3C0[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_190A11C14()
{
  return 0x6D6E6F7269766E65;
}

uint64_t sub_190A11C34()
{
  return 0x7367615477656976;
}

unint64_t sub_190A11C4C()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_190A11C68()
{
  return 0x6465766968637261;
}

uint64_t sub_190A11C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_190A13AA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190A11CB0()
{
  sub_190A137B4();
  return sub_190A48868();
}

uint64_t sub_190A11CD8()
{
  sub_190A137B4();
  return sub_190A48874();
}

uint64_t sub_190A11D00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_190A11788(a1, a2);
}

uint64_t sub_190A11D14(_QWORD *a1)
{
  return sub_190A11500(a1);
}

uint64_t sub_190A11D28()
{
  return sub_1908AA2F4(&qword_1EE1E69C8, type metadata accessor for ActivityViewStates.Metadata, (uint64_t)&unk_190A5C45C);
}

uint64_t sub_190A11D54()
{
  return sub_1908AA2F4(&qword_1EE1E6398, type metadata accessor for ActivityViewStates.Metadata, (uint64_t)&unk_190A5C434);
}

uint64_t sub_190A11D80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  __int128 v10;

  v2 = v1;
  sub_190A460C0();
  v4 = *(void **)(v1 + 16);
  *(_QWORD *)&v10 = *(_QWORD *)(v1 + 8);
  *((_QWORD *)&v10 + 1) = v4;
  swift_retain();
  v5 = v4;
  WidgetEnvironment.filterForArchiving()();
  v6 = type metadata accessor for ActivityViewStates(0);
  v7 = *(_QWORD *)(v1 + *(int *)(v6 + 36));
  LOBYTE(v2) = *(_BYTE *)(v2 + *(int *)(v6 + 48));
  v8 = (int *)type metadata accessor for ActivityViewStates.Metadata(0);
  *(_OWORD *)(a1 + v8[5]) = v10;
  *(_QWORD *)(a1 + v8[6]) = &unk_1E2CC53A0;
  *(_QWORD *)(a1 + v8[7]) = v7;
  *(_BYTE *)(a1 + v8[8]) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_190A11E28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t result;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(char *, unint64_t, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)();
  unint64_t *v69;
  void *v70;
  uint64_t v71;
  char *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  char v79;
  char v80;
  double v81;
  double v82;
  double v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  double v87;
  double v88;
  double v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  double v94;
  double v95;
  uint64_t v96;
  __int128 v97;
  char v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  unsigned int *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char isUniquelyReferenced_nonNull_native;
  void (*v112)(char *, uint64_t);
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  __int128 v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(char *, unint64_t, uint64_t);
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  __int128 v146;
  double v147;
  double v148;
  double v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  __int16 v153;
  __int128 v154;
  char v155;
  char v156;
  char v157;
  uint64_t v158;

  v136 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB968);
  MEMORY[0x1E0C80A78](v4);
  v130 = (char *)&v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_190A4669C();
  v131 = *(_QWORD *)(v132 - 8);
  v6 = MEMORY[0x1E0C80A78](v132);
  v116 = (char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v135 = (char *)&v113 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA4B8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v115 = (uint64_t)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v113 - v12;
  v14 = sub_190A46990();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
  MEMORY[0x1E0C80A78](v17);
  v123 = (uint64_t)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for CommonActivityArchivingModifiers();
  v19 = MEMORY[0x1E0C80A78](v125);
  v124 = (char *)&v113 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v127 = (uint64_t)&v113 - v21;
  *(_QWORD *)&v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E60C0);
  v22 = MEMORY[0x1E0C80A78](v128);
  v126 = (uint64_t)&v113 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v142 = (uint64_t *)((char *)&v113 - v24);
  v120 = sub_190A46EAC();
  v119 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v120);
  v26 = (char *)&v113 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for MetricsRequest(0);
  v133 = *(void (**)(char *, unint64_t, uint64_t))(v122 - 8);
  v27 = MEMORY[0x1E0C80A78](v122);
  v129 = (uint64_t)&v113 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v27);
  v121 = (uint64_t)&v113 - v30;
  MEMORY[0x1E0C80A78](v29);
  v138 = (uint64_t)&v113 - v31;
  v140 = sub_190A46C30();
  v139 = *(_QWORD *)(v140 - 8);
  v32 = MEMORY[0x1E0C80A78](v140);
  v134 = (char *)&v113 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x1E0C80A78](v32);
  v36 = (char *)&v113 - v35;
  MEMORY[0x1E0C80A78](v34);
  v38 = (char *)&v113 - v37;
  result = type metadata accessor for ActivityViewStates(0);
  v145 = result;
  v40 = *(int *)(result + 28);
  v141 = v2;
  v41 = (uint64_t *)(v2 + v40);
  v42 = *(_QWORD *)(v2 + v40 + 8);
  v43 = *(_QWORD *)(v42 + 16);
  if (!v43)
  {
    __break(1u);
    goto LABEL_33;
  }
  v44 = a1 / v43;
  if (a1 / v43 < 0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v45 = *v41;
  if (v44 >= *(_QWORD *)(v45 + 16))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v46 = a1 % v43;
  if (v46 < 0)
  {
LABEL_35:
    __break(1u);
    return result;
  }
  v117 = v16;
  v113 = v9;
  v114 = v13;
  v143 = v36;
  v118 = a1;
  v47 = *(_QWORD *)(v45 + 8 * v44 + 32);
  v48 = v139;
  v49 = v42
      + ((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80))
      + *(_QWORD *)(v139 + 72) * v46;
  v50 = *(void (**)(char *, unint64_t, uint64_t))(v139 + 16);
  v51 = v38;
  v144 = v38;
  v52 = v140;
  v50(v51, v49, v140);
  v53 = v145;
  v54 = v141;
  v137 = v47;
  swift_retain();
  sub_190A469FC();
  v55 = v138;
  ActivityMetricsDefinition.listItemMetrics(for:)((uint64_t)v26, v138);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v26, v120);
  v56 = v54 + *(int *)(v53 + 40);
  sub_1908AA544(v56, &qword_1EE1EA528);
  sub_1908AF5D8(v55, v56, type metadata accessor for MetricsRequest);
  v57 = v122;
  (*((void (**)(uint64_t, _QWORD, uint64_t, uint64_t))v133 + 7))(v56, 0, 1, v122);
  v58 = v54 + *(int *)(v53 + 44);
  v59 = v52;
  v60 = v144;
  sub_1908AA544(v58, (uint64_t *)&unk_1ECF6C868);
  v133 = v50;
  v50((char *)v58, (unint64_t)v60, v59);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v58, 0, 1, v59);
  v61 = v121;
  sub_1908AF5D8(v55, v121, type metadata accessor for MetricsRequest);
  v62 = v124;
  *v124 = 4;
  v63 = v125;
  v64 = (uint64_t)&v62[*(int *)(v125 + 20)];
  sub_1908BD0B4(v61, v64, type metadata accessor for MetricsRequest);
  v65 = v123;
  sub_1908AAA48(v64 + *(int *)(v57 + 40), v123, qword_1EE1EAFB0);
  v66 = sub_190A46EE8();
  LODWORD(v57) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 48))(v65, 1, v66);
  sub_1908AA544(v65, qword_1EE1EAFB0);
  if ((_DWORD)v57 == 1)
  {
    v67 = type metadata accessor for DefaultActivityFontDefinition();
    v68 = type metadata accessor for DefaultActivityFontDefinition;
    v69 = (unint64_t *)&unk_1EE1E6628;
    v70 = &unk_190A4FD4C;
  }
  else
  {
    v67 = type metadata accessor for RectangularHomeScreenComplicationFontDefinition();
    v68 = type metadata accessor for RectangularHomeScreenComplicationFontDefinition;
    v69 = &qword_1EE1ED3C8;
    v70 = &unk_190A5AD2C;
  }
  v71 = sub_1908AA2F4(v69, (uint64_t (*)(uint64_t))v68, (uint64_t)v70);
  v72 = v143;
  v73 = (uint64_t *)&v62[*(int *)(v63 + 24)];
  *v73 = v67;
  v73[1] = v71;
  v74 = (uint64_t)v62;
  v75 = v127;
  sub_1908BD0B4(v74, v127, (uint64_t (*)(_QWORD))type metadata accessor for CommonActivityArchivingModifiers);
  v76 = v142;
  sub_1908AF5D8(v75, (uint64_t)v142 + *(int *)(v128 + 36), (uint64_t (*)(_QWORD))type metadata accessor for CommonActivityArchivingModifiers);
  *v76 = v137;
  swift_retain();
  sub_1908B5150(v75, (uint64_t (*)(_QWORD))type metadata accessor for CommonActivityArchivingModifiers);
  sub_1908AAA48((uint64_t)v76, v126, &qword_1EE1E60C0);
  sub_190A13680();
  *(_QWORD *)&v146 = sub_190A47884();
  sub_190A46E58();
  v77 = (void (*)(char *, char *, uint64_t))v133;
  v133(v72, (unint64_t)v60, v59);
  sub_190A46978();
  sub_190A46AF8();
  v77(v134, v72, v59);
  sub_190A46D50();
  v78 = v129;
  sub_1908AF5D8(v55, v129, type metadata accessor for MetricsRequest);
  v79 = *(_BYTE *)(v78 + 16);
  v80 = *(_BYTE *)(v78 + 40);
  sub_1908B5150(v78, type metadata accessor for MetricsRequest);
  LOBYTE(v146) = v79;
  LOBYTE(v158) = v80;
  sub_190A46D5C();
  if ((*(_BYTE *)(v55 + 40) & 1) != 0)
  {
    v83 = *(double *)(v55 + 24);
    if (*(double *)(v55 + 32) < v82)
      v82 = *(double *)(v55 + 32);
    v84 = v141;
    v85 = v135;
    v86 = (uint64_t)v130;
    if (v82 > v83)
      v83 = v82;
  }
  else
  {
    v83 = *(double *)(v55 + 24);
    v84 = v141;
    v85 = v135;
    v86 = (uint64_t)v130;
  }
  if ((*(_BYTE *)(v55 + 16) & 1) != 0)
  {
    v87 = *(double *)v55;
    if (*(double *)(v55 + 8) < v81)
      v81 = *(double *)(v55 + 8);
    if (v81 > *(double *)v55)
      v87 = v81;
  }
  else
  {
    v87 = *(double *)v55;
  }
  v88 = *(double *)(v55 + 48);
  v89 = *(double *)(v55 + 104);
  if (v89 != 1.0)
  {
    sub_190A469E4();
    v91 = v90;
    v92 = (uint64_t)v114;
    sub_1908AAA48((uint64_t)v142, (uint64_t)v114, &qword_1EE1E60C0);
    v93 = v92 + *(int *)(v113 + 36);
    *(double *)v93 = v87;
    *(double *)(v93 + 8) = v83;
    *(double *)(v93 + 16) = v88;
    *(double *)(v93 + 24) = v89;
    *(_QWORD *)(v93 + 32) = v91;
    sub_1908AAA48(v92, v115, &qword_1EE1EA4B8);
    sub_190A13704();
    *(_QWORD *)&v146 = sub_190A47884();
    sub_190A46E58();
    sub_190A469E4();
    v95 = 1.0 / v94;
    v87 = v95 * floor((v87 * v89 + v95 * 0.5) / v95);
    v83 = v95 * floor((v83 * v89 + v95 * 0.5) / v95);
    sub_1908AA544(v92, &qword_1EE1EA4B8);
  }
  sub_190A0D350();
  sub_190A46DBC();
  v141 = *((_QWORD *)&v146 + 1);
  v96 = v146;
  LODWORD(v130) = LOBYTE(v147);
  sub_190A13770();
  sub_190A46DBC();
  v97 = v146;
  v98 = LOBYTE(v147);
  v99 = *(int *)(v145 + 48);
  if ((*(_BYTE *)(v84 + v99) & 1) != 0)
  {
    v100 = 1;
    v101 = v140;
    v102 = v143;
  }
  else
  {
    LODWORD(v127) = LOBYTE(v147);
    v128 = v146;
    v129 = v96;
    sub_190A470D4();
    sub_190A46DBC();
    v103 = v131;
    v104 = v132;
    v105 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v86, 1, v132);
    v106 = (unsigned int *)MEMORY[0x1E0CD86D0];
    if (v105 == 1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v103 + 104))(v85, *MEMORY[0x1E0CD86D0], v104);
      sub_1908AA544(v86, &qword_1EE1EB968);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v103 + 32))(v85, v86, v104);
    }
    if ((sub_190A46AC8() & 1) != 0)
    {
      v107 = v131;
      v108 = v132;
      (*(void (**)(char *, _QWORD, uint64_t))(v131 + 104))(v116, *v106, v132);
      v109 = v135;
    }
    else
    {
      v107 = v131;
      v109 = v135;
      v108 = v132;
      (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v116, v135, v132);
    }
    v102 = v143;
    sub_190A469C0();
    v101 = v140;
    v133(v134, (unint64_t)v102, v140);
    sub_190A46D50();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v109, v108);
    v100 = *(_BYTE *)(v84 + v99);
    v96 = v129;
    v97 = v128;
    v98 = v127;
  }
  v146 = 0uLL;
  v147 = v87;
  v148 = v83;
  v149 = v88 * v89;
  v150 = 0;
  v151 = v96;
  v152 = v141;
  v153 = v130;
  v154 = v97;
  v155 = v98;
  v156 = 0;
  v157 = v100;
  v110 = *(int *)(v145 + 36);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v158 = *(_QWORD *)(v84 + v110);
  *(_QWORD *)(v84 + v110) = 0x8000000000000000;
  sub_1908FBD40((uint64_t)&v146, v118, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v84 + v110) = v158;
  swift_bridgeObjectRelease();
  sub_190A46E34();
  swift_release();
  v112 = *(void (**)(char *, uint64_t))(v139 + 8);
  v112(v102, v101);
  sub_1908AA544((uint64_t)v142, &qword_1EE1E60C0);
  sub_1908B5150(v138, type metadata accessor for MetricsRequest);
  return ((uint64_t (*)(char *, uint64_t))v112)(v144, v101);
}

CGImageRef sub_190A12B14(CGImage *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  double v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  NSObject *v41;
  unint64_t v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  unint64_t v49;
  uint64_t v50;
  CGImage *v51;
  double v52;
  double Height;
  uint64_t v54;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  CGImageRef v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  size_t Width;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_190A46C30();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v61 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA528);
  MEMORY[0x1E0C80A78](v8);
  v65 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MetricsRequest(0);
  v63 = *(_QWORD *)(v10 - 8);
  v64 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = 91;
  v68 = 0xE100000000000000;
  LODWORD(Width) = CGImageGetIdentifier();
  sub_190A4867C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  Width = CGImageGetWidth(a1);
  sub_190A4867C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  Width = CGImageGetHeight(a1);
  sub_190A4867C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v13 = v68;
  v62 = v67;
  if (qword_1ECF6AE58 != -1)
    swift_once();
  v14 = sub_190A465A0();
  v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1ECF6D528);
  swift_bridgeObjectRetain_n();
  v58 = v15;
  v16 = sub_190A46588();
  v17 = sub_190A47F68();
  if (os_log_type_enabled(v16, v17))
  {
    v59 = a1;
    v18 = swift_slowAlloc();
    v57 = v4;
    v19 = v13;
    v20 = (uint8_t *)v18;
    v21 = swift_slowAlloc();
    v60 = v6;
    v22 = v21;
    v67 = v21;
    *(_DWORD *)v20 = 136446210;
    swift_bridgeObjectRetain();
    Width = sub_1908B35C4(v62, v19, &v67);
    a1 = v59;
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1908A7000, v16, v17, "%{public}s Filtering image", v20, 0xCu);
    swift_arrayDestroy();
    v23 = v22;
    v6 = v60;
    MEMORY[0x194014398](v23, -1, -1);
    v24 = v20;
    v13 = v19;
    v4 = v57;
    MEMORY[0x194014398](v24, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v25 = type metadata accessor for ActivityViewStates(0);
  v27 = v65;
  v26 = v66;
  sub_1908AAA48(v66 + *(int *)(v25 + 40), v65, &qword_1EE1EA528);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v27, 1, v64) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1908AA544(v27, &qword_1EE1EA528);
    sub_190A135D8();
    swift_allocError();
    *(_OWORD *)v28 = xmmword_190A567D0;
    *(_QWORD *)(v28 + 16) = 0;
    *(_QWORD *)(v28 + 24) = 0;
    *(_BYTE *)(v28 + 32) = 0;
    swift_willThrow();
    return (CGImageRef)v4;
  }
  sub_1908BD0B4(v27, (uint64_t)v12, type metadata accessor for MetricsRequest);
  sub_1908AAA48(v26 + *(int *)(v25 + 44), (uint64_t)v4, (uint64_t *)&unk_1ECF6C868);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1908AA544((uint64_t)v4, (uint64_t *)&unk_1ECF6C868);
    sub_190A135D8();
    swift_allocError();
    *(_QWORD *)v29 = 0xD000000000000013;
    *(_QWORD *)(v29 + 8) = 0x8000000190A63AE0;
    *(_QWORD *)(v29 + 16) = 0;
    *(_QWORD *)(v29 + 24) = 0;
    *(_BYTE *)(v29 + 32) = 0;
    swift_willThrow();
LABEL_26:
    sub_1908B5150((uint64_t)v12, type metadata accessor for MetricsRequest);
    return (CGImageRef)v4;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v61, v4, v5);
  sub_190A469E4();
  v31 = 8;
  if (!v12[16])
    v31 = 0;
  v32 = fmax(v30 * *(double *)&v12[v31] * 1.2, 80.0);
  v33 = 24;
  if (v12[40])
    v33 = 32;
  v34 = fmax(v30 * *(double *)&v12[v33] * 1.2, 80.0);
  if (v32 <= (double)(uint64_t)CGImageGetWidth(a1) || v34 <= (double)(uint64_t)CGImageGetHeight(a1))
  {
    v40 = sub_190A11188(v32, v34);
    if (v40)
    {
      v4 = (char *)v40;
      swift_bridgeObjectRetain();
      v41 = sub_190A46588();
      v42 = v13;
      v43 = sub_190A47F5C();
      if (os_log_type_enabled(v41, v43))
      {
        v44 = swift_slowAlloc();
        v60 = v6;
        v45 = v44;
        v46 = swift_slowAlloc();
        v67 = v46;
        *(_DWORD *)v45 = 136446722;
        swift_bridgeObjectRetain();
        Width = sub_1908B35C4(v62, v42, &v67);
        v66 = v5;
        sub_190A48178();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v45 + 12) = 2050;
        Width = *(_QWORD *)&v32;
        sub_190A48178();
        *(_WORD *)(v45 + 22) = 2050;
        Width = *(_QWORD *)&v34;
        sub_190A48178();
        _os_log_impl(&dword_1908A7000, v41, v43, "%{public}s Max size exceeded: %{public}fx%{public}f; using placeholder image",
          (uint8_t *)v45,
          0x20u);
        swift_arrayDestroy();
        MEMORY[0x194014398](v46, -1, -1);
        MEMORY[0x194014398](v45, -1, -1);

        (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v66);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        (*(void (**)(char *, uint64_t))(v6 + 8))(v61, v5);
      }
    }
    else
    {
      v59 = a1;
      v60 = v6;
      swift_bridgeObjectRetain();
      v47 = sub_190A46588();
      v48 = sub_190A47F5C();
      if (os_log_type_enabled(v47, v48))
      {
        v4 = (char *)swift_slowAlloc();
        v49 = v13;
        v50 = swift_slowAlloc();
        v67 = v50;
        *(_DWORD *)v4 = 136446722;
        swift_bridgeObjectRetain();
        Width = sub_1908B35C4(v62, v49, &v67);
        sub_190A48178();
        swift_bridgeObjectRelease_n();
        *((_WORD *)v4 + 6) = 2050;
        Width = *(_QWORD *)&v32;
        sub_190A48178();
        *((_WORD *)v4 + 11) = 2050;
        Width = *(_QWORD *)&v34;
        sub_190A48178();
        _os_log_impl(&dword_1908A7000, v47, v48, "%{public}s Max size exceeded: %{public}fx%{public}f; unable to create placeholder image",
          (uint8_t *)v4,
          0x20u);
        swift_arrayDestroy();
        MEMORY[0x194014398](v50, -1, -1);
        MEMORY[0x194014398](v4, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v51 = v59;
      v52 = (double)(uint64_t)CGImageGetWidth(v59);
      Height = (double)(uint64_t)CGImageGetHeight(v51);
      sub_190A135D8();
      swift_allocError();
      *(double *)v54 = v52;
      *(double *)(v54 + 8) = Height;
      *(double *)(v54 + 16) = v32;
      *(double *)(v54 + 24) = v34;
      *(_BYTE *)(v54 + 32) = 1;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v5);
    }
    goto LABEL_26;
  }
  v59 = a1;
  swift_bridgeObjectRetain();
  v35 = sub_190A46588();
  v36 = sub_190A47F68();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc();
    v38 = swift_slowAlloc();
    v60 = v6;
    v39 = v38;
    v67 = v38;
    *(_DWORD *)v37 = 136446210;
    swift_bridgeObjectRetain();
    Width = sub_1908B35C4(v62, v13, &v67);
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1908A7000, v35, v36, "%{public}s Image permitted", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v39, -1, -1);
    MEMORY[0x194014398](v37, -1, -1);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v5);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v61, v5);
  }
  sub_1908B5150((uint64_t)v12, type metadata accessor for MetricsRequest);
  return v59;
}

uint64_t sub_190A1359C@<X0>(uint64_t a1@<X8>)
{
  return sub_190A11D80(a1);
}

uint64_t sub_190A135B0(uint64_t a1, uint64_t a2)
{
  return sub_190A11E28(a1, a2);
}

CGImageRef sub_190A135C4(CGImage *a1)
{
  return sub_190A12B14(a1);
}

unint64_t sub_190A135D8()
{
  unint64_t result;

  result = qword_1EE1EEDA0;
  if (!qword_1EE1EEDA0)
  {
    result = MEMORY[0x19401429C](&unk_190A5C60C, &type metadata for ActivityViewStates.ArchivingError);
    atomic_store(result, (unint64_t *)&qword_1EE1EEDA0);
  }
  return result;
}

uint64_t sub_190A1361C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v5;
  uint64_t result;

  a4();
  v5 = *a1 + 8;
  result = sub_190A48178();
  *a1 = v5;
  return result;
}

double CGRectMake()
{
  return 0.0;
}

unint64_t sub_190A13680()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EE1E60B8;
  if (!qword_1EE1E60B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E60C0);
    v2 = sub_1908AA2F4(&qword_1EE1E66C8, (uint64_t (*)(uint64_t))type metadata accessor for CommonActivityArchivingModifiers, (uint64_t)&unk_190A4F998);
    v3[0] = MEMORY[0x1E0CDFD08];
    v3[1] = v2;
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EE1E60B8);
  }
  return result;
}

unint64_t sub_190A13704()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EEDA8;
  if (!qword_1EE1EEDA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EA4B8);
    v2[0] = sub_190A13680();
    v2[1] = sub_1909E4B48();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EEDA8);
  }
  return result;
}

unint64_t sub_190A13770()
{
  unint64_t result;

  result = qword_1EE1EA580;
  if (!qword_1EE1EA580)
  {
    result = MEMORY[0x19401429C](&unk_190A5CCFC, &type metadata for _ActivitySystemActionForegroundColorPreferenceKey);
    atomic_store(result, (unint64_t *)&qword_1EE1EA580);
  }
  return result;
}

unint64_t sub_190A137B4()
{
  unint64_t result;

  result = qword_1EE1EABD8;
  if (!qword_1EE1EABD8)
  {
    result = MEMORY[0x19401429C](&unk_190A5C5BC, &type metadata for ActivityViewStates.Metadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EABD8);
  }
  return result;
}

unint64_t sub_190A137F8()
{
  unint64_t result;

  result = qword_1EE1E69A8;
  if (!qword_1EE1E69A8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ActivityViewTag, &type metadata for ActivityViewTag);
    atomic_store(result, (unint64_t *)&qword_1EE1E69A8);
  }
  return result;
}

uint64_t sub_190A1383C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EACF8);
    v8 = a2();
    result = MEMORY[0x19401429C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_190A138A4()
{
  unint64_t result;

  result = qword_1EE1E62D8;
  if (!qword_1EE1E62D8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ActivityViewTag, &type metadata for ActivityViewTag);
    atomic_store(result, (unint64_t *)&qword_1EE1E62D8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActivityViewStates.Metadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_190A13934 + 4 * byte_190A5C3CA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_190A13968 + 4 * byte_190A5C3C5[v4]))();
}

uint64_t sub_190A13968(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A13970(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190A13978);
  return result;
}

uint64_t sub_190A13984(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190A1398CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_190A13990(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A13998(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityViewStates.Metadata.CodingKeys()
{
  return &type metadata for ActivityViewStates.Metadata.CodingKeys;
}

ValueMetadata *type metadata accessor for ActivityViewStates.ArchivingError()
{
  return &type metadata for ActivityViewStates.ArchivingError;
}

unint64_t sub_190A139CC()
{
  unint64_t result;

  result = qword_1EE1EEDB0;
  if (!qword_1EE1EEDB0)
  {
    result = MEMORY[0x19401429C](&unk_190A5C594, &type metadata for ActivityViewStates.Metadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EEDB0);
  }
  return result;
}

unint64_t sub_190A13A14()
{
  unint64_t result;

  result = qword_1EE1EABE8;
  if (!qword_1EE1EABE8)
  {
    result = MEMORY[0x19401429C](&unk_190A5C504, &type metadata for ActivityViewStates.Metadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EABE8);
  }
  return result;
}

unint64_t sub_190A13A5C()
{
  unint64_t result;

  result = qword_1EE1EABE0;
  if (!qword_1EE1EABE0)
  {
    result = MEMORY[0x19401429C](&unk_190A5C52C, &type metadata for ActivityViewStates.Metadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EABE0);
  }
  return result;
}

uint64_t sub_190A13AA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7367615477656976 && a2 == 0xE800000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000190A63B00 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6465766968637261 && a2 == 0xEE00796C696D6146)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t ControlTemplateToggle.Option.init(value:action:icon:tint:status:actionHint:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t result;

  v17 = *a3;
  v18 = (int *)type metadata accessor for ControlTemplateToggle.Option(0);
  v19 = (uint64_t)a9 + v18[6];
  v20 = sub_190A47260();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = (char *)a9 + v18[7];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = 1;
  v22 = (_QWORD *)((char *)a9 + v18[8]);
  *v22 = 0;
  v22[1] = 0;
  v23 = (_QWORD *)((char *)a9 + v18[9]);
  *v23 = 0;
  v23[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = v17;
  sub_1908DCA84(a4, v19, (uint64_t *)&unk_1ECF6A3B8);
  *(_QWORD *)v21 = a5;
  *((_QWORD *)v21 + 1) = a6;
  v21[16] = a7 & 1;
  swift_bridgeObjectRelease();
  *v22 = a8;
  v22[1] = a10;
  result = swift_bridgeObjectRelease();
  *v23 = a11;
  v23[1] = a12;
  return result;
}

uint64_t type metadata accessor for ControlTemplateToggle.Option(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1ECF6BEF0);
}

uint64_t ControlTemplateToggle.init(title:subtitle:on:off:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, _QWORD *a9@<X8>, char a10, uint64_t a11, uint64_t a12, char a13)
{
  int *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t result;

  v20 = (int *)type metadata accessor for ControlTemplateToggle(0);
  v21 = (uint64_t)a9 + v20[8];
  v22 = sub_190A45FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  v23 = (_QWORD *)((char *)a9 + v20[11]);
  *v23 = 0;
  v23[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  sub_1908BD0B4(a5, (uint64_t)a9 + v20[6], type metadata accessor for ControlTemplateToggle.Option);
  sub_1908BD0B4(a6, (uint64_t)a9 + v20[7], type metadata accessor for ControlTemplateToggle.Option);
  sub_1908DCA84(a7, v21, (uint64_t *)&unk_1ECF6C858);
  *((_BYTE *)a9 + v20[9]) = a8;
  *((_BYTE *)a9 + v20[10]) = a10;
  result = swift_bridgeObjectRelease();
  *v23 = a11;
  v23[1] = a12;
  *((_BYTE *)a9 + v20[12]) = a13;
  return result;
}

uint64_t type metadata accessor for ControlTemplateToggle(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1ECF6BF00);
}

uint64_t ControlTemplateToggle.asPlaceholder()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char *v24;
  _QWORD *v25;
  _QWORD *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  _QWORD *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  char *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  char *v66;
  uint64_t *v67;

  v67 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v2);
  v66 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for ControlTemplateToggle.Option(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v65 = (uint64_t *)((char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v50 - v10);
  if (qword_1EE1EC530 != -1)
    swift_once();
  swift_beginAccess();
  v63 = qword_1EE1EE380;
  v64 = *(_QWORD *)algn_1EE1EE388;
  v12 = qword_1EE1EC538;
  swift_bridgeObjectRetain();
  if (v12 != -1)
    swift_once();
  swift_beginAccess();
  v61 = qword_1EE1EE390;
  v62 = *(_QWORD *)algn_1EE1EE398;
  v13 = qword_1EE1EC540;
  swift_bridgeObjectRetain();
  if (v13 != -1)
    swift_once();
  swift_beginAccess();
  v14 = *(_QWORD *)algn_1EE1EE3A8;
  v55 = qword_1EE1EE3A0;
  v15 = (int *)type metadata accessor for ControlTemplateToggle(0);
  v16 = v15[7];
  v60 = v1;
  v17 = v1 + v16;
  v51 = *(void **)(v1 + v16 + 16);
  v58 = v1 + v16 + v7[6];
  sub_1908AAA48(v58, (uint64_t)v6, (uint64_t *)&unk_1ECF6A3B8);
  v18 = v7[6];
  v19 = (uint64_t *)(v17 + v7[7]);
  v52 = *v19;
  v53 = v19[1];
  v54 = *((unsigned __int8 *)v19 + 16);
  v20 = (uint64_t)v11 + v18;
  v21 = sub_190A47260();
  v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v57 = v21;
  v56(v20, 1, 1, v21);
  v22 = v7[7];
  v23 = v11;
  v59 = (char *)v11;
  v24 = (char *)v11 + v22;
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v24[16] = 1;
  v25 = (uint64_t *)((char *)v23 + v7[8]);
  *v25 = 0;
  v25[1] = 0;
  v26 = (uint64_t *)((char *)v23 + v7[9]);
  *v26 = 0;
  v26[1] = 0;
  *v23 = v55;
  v23[1] = v14;
  v27 = v51;
  v23[2] = (uint64_t)v51;
  v28 = v27;
  swift_bridgeObjectRetain();
  v50 = v6;
  sub_1908DCA84((uint64_t)v6, v20, (uint64_t *)&unk_1ECF6A3B8);
  v29 = v53;
  *(_QWORD *)v24 = v52;
  *((_QWORD *)v24 + 1) = v29;
  v24[16] = v54;
  swift_bridgeObjectRelease();
  *v25 = 0;
  v25[1] = 0;
  swift_bridgeObjectRelease();
  *v26 = 0;
  v26[1] = 0;
  v31 = qword_1EE1EE3A0;
  v30 = *(_QWORD *)algn_1EE1EE3A8;
  v32 = *(void **)(v17 + 16);
  sub_1908AAA48(v58, (uint64_t)v6, (uint64_t *)&unk_1ECF6A3B8);
  v33 = *v19;
  v58 = v19[1];
  LODWORD(v55) = *((unsigned __int8 *)v19 + 16);
  v34 = v65;
  v35 = (uint64_t)v65 + v7[6];
  v56(v35, 1, 1, v57);
  v36 = (char *)v34 + v7[7];
  *(_QWORD *)v36 = 0;
  *((_QWORD *)v36 + 1) = 0;
  v36[16] = 1;
  v37 = (uint64_t *)((char *)v34 + v7[8]);
  *v37 = 0;
  v37[1] = 0;
  v38 = (uint64_t *)((char *)v34 + v7[9]);
  *v38 = 0;
  v38[1] = 0;
  *v34 = v31;
  v34[1] = v30;
  v34[2] = (uint64_t)v32;
  v39 = v32;
  swift_bridgeObjectRetain();
  sub_1908DCA84((uint64_t)v50, v35, (uint64_t *)&unk_1ECF6A3B8);
  v40 = v58;
  *(_QWORD *)v36 = v33;
  *((_QWORD *)v36 + 1) = v40;
  v36[16] = v55;
  swift_bridgeObjectRelease();
  *v37 = 0;
  v37[1] = 0;
  swift_bridgeObjectRelease();
  v41 = sub_190A45FC4();
  *v38 = 0;
  v38[1] = 0;
  v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
  v43 = (uint64_t)v66;
  v42(v66, 1, 1, v41);
  LOBYTE(v31) = *(_BYTE *)(v60 + v15[9]);
  LOBYTE(v32) = *(_BYTE *)(v60 + v15[10]);
  LOBYTE(v36) = *(_BYTE *)(v60 + v15[12]);
  v44 = v67;
  v45 = (uint64_t)v67 + v15[8];
  v42((char *)v45, 1, 1, v41);
  v46 = (uint64_t *)((char *)v44 + v15[11]);
  *v46 = 0;
  v46[1] = 0;
  v47 = v64;
  *v44 = v63;
  v44[1] = v47;
  v48 = v62;
  v44[2] = v61;
  v44[3] = v48;
  sub_1908BD0B4((uint64_t)v59, (uint64_t)v44 + v15[6], type metadata accessor for ControlTemplateToggle.Option);
  sub_1908BD0B4((uint64_t)v34, (uint64_t)v44 + v15[7], type metadata accessor for ControlTemplateToggle.Option);
  sub_1908DCA84(v43, v45, (uint64_t *)&unk_1ECF6C858);
  *((_BYTE *)v44 + v15[9]) = v31;
  *((_BYTE *)v44 + v15[10]) = (_BYTE)v32;
  result = swift_bridgeObjectRelease();
  *v46 = 0;
  v46[1] = 0;
  *((_BYTE *)v44 + v15[12]) = (_BYTE)v36;
  return result;
}

uint64_t ControlTemplateToggle.validateIcon(_:)(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *);
  uint64_t v27;
  uint64_t v28;

  v26 = a1;
  v28 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v22 - v7;
  v9 = sub_190A47260();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v24 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v22 - v13;
  v15 = type metadata accessor for ControlTemplateToggle(0);
  v16 = *(int *)(v15 + 24);
  v25 = v2;
  v17 = v2 + v16;
  v18 = type metadata accessor for ControlTemplateToggle.Option(0);
  sub_1908AAA48(v17 + *(int *)(v18 + 24), (uint64_t)v8, (uint64_t *)&unk_1ECF6A3B8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v19(v8, 1, v9) == 1)
  {
    sub_1908AA544((uint64_t)v8, (uint64_t *)&unk_1ECF6A3B8);
  }
  else
  {
    v23 = v6;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v8, v9);
    v20 = v27;
    v26(v14);
    if (v20)
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    v6 = v23;
  }
  sub_1908AAA48(v25 + *(int *)(v15 + 28) + *(int *)(v18 + 24), (uint64_t)v6, (uint64_t *)&unk_1ECF6A3B8);
  if (v19(v6, 1, v9) == 1)
    return sub_1908AA544((uint64_t)v6, (uint64_t *)&unk_1ECF6A3B8);
  v14 = v24;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v24, v6, v9);
  v26(v14);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, v9);
}

uint64_t ControlTemplateToggle.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  unsigned int v14;
  uint64_t v15;
  _QWORD v17[2];
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  const char *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v17 - v6;
  v22 = 0;
  v23 = 0xE000000000000000;
  sub_190A48298();
  sub_190A47B3C();
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v8 = type metadata accessor for ControlTemplateToggle(0);
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v9 = v0 + *(int *)(v8 + 24);
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  v17[1] = "\n    on:\n        value: ";
  sub_190A47B3C();
  v21 = *(_QWORD *)(v9 + 16);
  sub_190A483DC();
  v20 = "\n        action: ";
  sub_190A47B3C();
  v10 = type metadata accessor for ControlTemplateToggle.Option(0);
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  sub_1908AAA48(v9 + *(int *)(v10 + 24), (uint64_t)v7, (uint64_t *)&unk_1ECF6A3B8);
  v11 = sub_190A47260();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v7, 1, v11);
  v17[0] = v12;
  v18 = v13;
  v19 = "\n        status: ";
  if (v14 == 1)
  {
    sub_1908AA544((uint64_t)v7, (uint64_t *)&unk_1ECF6A3B8);
  }
  else
  {
    sub_190A471DC();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v11);
  }
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v15 = v1 + *(int *)(v8 + 28);
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v21 = *(_QWORD *)(v15 + 16);
  sub_190A483DC();
  sub_190A47B3C();
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  sub_1908AAA48(v15 + *(int *)(v10 + 24), (uint64_t)v5, (uint64_t *)&unk_1ECF6A3B8);
  if (v18(v5, 1, v11) == 1)
  {
    sub_1908AA544((uint64_t)v5, (uint64_t *)&unk_1ECF6A3B8);
  }
  else
  {
    sub_190A471DC();
    (*(void (**)(char *, uint64_t))(v17[0] + 8))(v5, v11);
  }
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  return v22;
}

uint64_t sub_190A14D48()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for ControlTemplateToggle(0);
  __swift_allocate_value_buffer(v0, qword_1EE1EA478);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE1EA478);
  return sub_190A14D90(v1);
}

uint64_t sub_190A14D90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  int *v32;
  _OWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v41 = a1;
  v40 = type metadata accessor for ControlTemplateToggle(0);
  MEMORY[0x1E0C80A78](v40);
  v37 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v2);
  v39 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for ControlTemplateToggle.Option(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v38 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char **)((char *)&v37 - v11);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char **)((char *)&v37 - v14);
  MEMORY[0x1E0C80A78](v13);
  v42 = (uint64_t)&v37 - v16;
  v17 = sub_190A47260();
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v6, 1, 1, v17);
  v19 = (uint64_t)v15 + v7[6];
  v18((char *)v19, 1, 1, v17);
  v20 = (char *)v15 + v7[7];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 1;
  v21 = (_QWORD *)((char *)v15 + v7[8]);
  *v21 = 0;
  v21[1] = 0;
  v22 = (_QWORD *)((char *)v15 + v7[9]);
  *v22 = 0;
  v22[1] = 0;
  *v15 = 0;
  v15[1] = 0;
  v15[2] = 0;
  sub_1908DCA84((uint64_t)v6, v19, (uint64_t *)&unk_1ECF6A3B8);
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 1;
  swift_bridgeObjectRelease();
  *v21 = 0;
  v21[1] = 0;
  swift_bridgeObjectRelease();
  *v22 = 0;
  v22[1] = 0;
  v23 = v42;
  sub_1908BD0B4((uint64_t)v15, v42, type metadata accessor for ControlTemplateToggle.Option);
  v18(v6, 1, 1, v17);
  v24 = (uint64_t)v12 + v7[6];
  v18((char *)v24, 1, 1, v17);
  v25 = (char *)v12 + v7[7];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = 1;
  v26 = (_QWORD *)((char *)v12 + v7[8]);
  *v26 = 0;
  v26[1] = 0;
  v27 = (_QWORD *)((char *)v12 + v7[9]);
  *v27 = 0;
  v27[1] = 0;
  *v12 = 0;
  v12[1] = 0;
  v12[2] = 0;
  sub_1908DCA84((uint64_t)v6, v24, (uint64_t *)&unk_1ECF6A3B8);
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = 1;
  swift_bridgeObjectRelease();
  *v26 = 0;
  v26[1] = 0;
  swift_bridgeObjectRelease();
  *v27 = 0;
  v27[1] = 0;
  sub_1908BD0B4((uint64_t)v12, (uint64_t)v15, type metadata accessor for ControlTemplateToggle.Option);
  sub_1908AF5D8((uint64_t)v15, (uint64_t)v12, type metadata accessor for ControlTemplateToggle.Option);
  v28 = v38;
  sub_1908AF5D8(v23, v38, type metadata accessor for ControlTemplateToggle.Option);
  v29 = sub_190A45FC4();
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v31 = (uint64_t)v39;
  v30(v39, 1, 1, v29);
  v32 = (int *)v40;
  v33 = v37;
  v34 = (uint64_t)&v37[*(int *)(v40 + 32)];
  v30((char *)v34, 1, 1, v29);
  v35 = (_QWORD *)((char *)v33 + v32[11]);
  *v35 = 0;
  v35[1] = 0;
  *v33 = 0u;
  v33[1] = 0u;
  sub_1908BD0B4((uint64_t)v12, (uint64_t)v33 + v32[6], type metadata accessor for ControlTemplateToggle.Option);
  sub_1908BD0B4(v28, (uint64_t)v33 + v32[7], type metadata accessor for ControlTemplateToggle.Option);
  sub_1908DCA84(v31, v34, (uint64_t *)&unk_1ECF6C858);
  *((_BYTE *)v33 + v32[9]) = 0;
  *((_BYTE *)v33 + v32[10]) = 0;
  swift_bridgeObjectRelease();
  *v35 = 0;
  v35[1] = 0;
  *((_BYTE *)v33 + v32[12]) = 0;
  sub_1908BD0B4((uint64_t)v33, v41, type metadata accessor for ControlTemplateToggle);
  sub_1908B5150((uint64_t)v15, type metadata accessor for ControlTemplateToggle.Option);
  return sub_1908B5150(v42, type metadata accessor for ControlTemplateToggle.Option);
}

uint64_t static ControlTemplateToggle.empty.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EE1EA490 != -1)
    swift_once();
  v2 = type metadata accessor for ControlTemplateToggle(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE1EA478);
  swift_beginAccess();
  return sub_1908AF5D8(v3, a1, type metadata accessor for ControlTemplateToggle);
}

uint64_t static ControlTemplateToggle.empty.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EE1EA490 != -1)
    swift_once();
  v2 = type metadata accessor for ControlTemplateToggle(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE1EA478);
  swift_beginAccess();
  sub_190A152DC(a1, v3);
  swift_endAccess();
  return sub_1908B5150(a1, type metadata accessor for ControlTemplateToggle);
}

uint64_t sub_190A152DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ControlTemplateToggle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t (*static ControlTemplateToggle.empty.modify())()
{
  uint64_t v0;

  if (qword_1EE1EA490 != -1)
    swift_once();
  v0 = type metadata accessor for ControlTemplateToggle(0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE1EA478);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t (*ControlTemplateToggle.Option.value.modify())()
{
  return nullsub_1;
}

id ControlTemplateToggle.Option.action.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

void ControlTemplateToggle.Option.action.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;

  *(_QWORD *)(v1 + 16) = v2;
}

uint64_t (*ControlTemplateToggle.Option.action.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateToggle.Option.icon.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_190A15F00(type metadata accessor for ControlTemplateToggle.Option, (uint64_t)&unk_1ECF6A3B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1908AAA48, a1);
}

uint64_t ControlTemplateToggle.Option.icon.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ControlTemplateToggle.Option(0);
  return sub_1908DCA84(a1, v1 + *(int *)(v3 + 24), (uint64_t *)&unk_1ECF6A3B8);
}

uint64_t (*ControlTemplateToggle.Option.icon.modify())()
{
  type metadata accessor for ControlTemplateToggle.Option(0);
  return nullsub_1;
}

uint64_t ControlTemplateToggle.Option.tint.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ControlTemplateToggle.Option(0) + 28));
}

uint64_t ControlTemplateToggle.Option.tint.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;

  result = type metadata accessor for ControlTemplateToggle.Option(0);
  v8 = v3 + *(int *)(result + 28);
  *(_QWORD *)v8 = a1;
  *(_QWORD *)(v8 + 8) = a2;
  *(_BYTE *)(v8 + 16) = a3 & 1;
  return result;
}

uint64_t (*ControlTemplateToggle.Option.tint.modify())()
{
  type metadata accessor for ControlTemplateToggle.Option(0);
  return nullsub_1;
}

uint64_t ControlTemplateToggle.Option.status.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ControlTemplateToggle.Option(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateToggle.Option.status.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ControlTemplateToggle.Option(0) + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ControlTemplateToggle.Option.status.modify())()
{
  type metadata accessor for ControlTemplateToggle.Option(0);
  return nullsub_1;
}

uint64_t ControlTemplateToggle.Option.actionHint.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ControlTemplateToggle.Option(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateToggle.Option.actionHint.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ControlTemplateToggle.Option(0) + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ControlTemplateToggle.Option.actionHint.modify())()
{
  type metadata accessor for ControlTemplateToggle.Option(0);
  return nullsub_1;
}

uint64_t sub_190A15658()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_190A15684 + 4 * byte_190A5C650[*v0]))(0x65756C6176, 0xE500000000000000);
}

uint64_t sub_190A15684()
{
  return 0x6E6F69746361;
}

uint64_t sub_190A15698()
{
  return 1852793705;
}

uint64_t sub_190A156A8()
{
  return 1953393012;
}

uint64_t sub_190A156B8()
{
  return 0x737574617473;
}

uint64_t sub_190A156CC()
{
  return 0x69486E6F69746361;
}

uint64_t sub_190A156E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_190A19A20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190A1570C()
{
  sub_190A17680();
  return sub_190A48868();
}

uint64_t sub_190A15734()
{
  sub_190A17680();
  return sub_190A48874();
}

uint64_t ControlTemplateToggle.Option.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 *v10;
  char v11;
  __int128 v13;
  char v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA428);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190A17680();
  sub_190A48850();
  LOBYTE(v13) = 0;
  sub_190A485D4();
  if (!v2)
  {
    *(_QWORD *)&v13 = *(_QWORD *)(v3 + 16);
    v15 = 1;
    sub_19092BCE0();
    sub_190A48640();
    v9 = type metadata accessor for ControlTemplateToggle.Option(0);
    LOBYTE(v13) = 2;
    sub_190A47260();
    sub_1908AA2F4(&qword_1EE1EB698, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDCD18], MEMORY[0x1E0CDCD28]);
    sub_190A485EC();
    v10 = (__int128 *)(v3 + *(int *)(v9 + 28));
    v11 = *((_BYTE *)v10 + 16);
    v13 = *v10;
    v14 = v11;
    v15 = 3;
    sub_19090AE70();
    sub_190A485EC();
    LOBYTE(v13) = 4;
    sub_190A485D4();
    LOBYTE(v13) = 5;
    sub_190A485D4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ControlTemplateToggle.Option.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  char v41;
  char v42;

  v32 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB1D8);
  v5 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for ControlTemplateToggle.Option(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v11 = 0;
  v11[1] = 0;
  v12 = (uint64_t)v11 + *(int *)(v9 + 24);
  v13 = sub_190A47260();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v38 = v12;
  v14(v12, 1, 1, v13);
  v15 = (char *)v11 + v8[7];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 1;
  v16 = (uint64_t *)((char *)v11 + v8[8]);
  *v16 = 0;
  v16[1] = 0;
  v35 = a1;
  v36 = v16;
  v17 = (uint64_t *)((char *)v11 + v8[9]);
  *v17 = 0;
  v17[1] = 0;
  v37 = v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190A17680();
  v18 = v39;
  sub_190A48838();
  if (v18)
  {
    v21 = v38;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    swift_bridgeObjectRelease();
    sub_1908AA544(v21, (uint64_t *)&unk_1ECF6A3B8);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v19 = (uint64_t)v33;
    v39 = v5;
    LOBYTE(v40) = 0;
    *v11 = sub_190A48514();
    v11[1] = v20;
    v42 = 1;
    sub_19092BD24();
    sub_190A48580();
    v11[2] = v40;
    LOBYTE(v40) = 2;
    sub_1908AA2F4(&qword_1EE1EB730, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDCD18], MEMORY[0x1E0CDCD38]);
    sub_190A4852C();
    sub_1908DCA84(v19, v38, (uint64_t *)&unk_1ECF6A3B8);
    v42 = 3;
    sub_19090AEB4();
    sub_190A4852C();
    v22 = v41;
    *(_OWORD *)v15 = v40;
    v15[16] = v22;
    LOBYTE(v40) = 4;
    v23 = sub_190A48514();
    v25 = v24;
    v26 = v36;
    swift_bridgeObjectRelease();
    *v26 = v23;
    v26[1] = v25;
    LOBYTE(v40) = 5;
    v27 = sub_190A48514();
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v34);
    v30 = v37;
    swift_bridgeObjectRelease();
    *v30 = v27;
    v30[1] = v29;
    sub_1908AF5D8((uint64_t)v11, v32, type metadata accessor for ControlTemplateToggle.Option);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    return sub_1908B5150((uint64_t)v11, type metadata accessor for ControlTemplateToggle.Option);
  }
}

uint64_t sub_190A15DDC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ControlTemplateToggle.Option.init(from:)(a1, a2);
}

uint64_t sub_190A15DF0(_QWORD *a1)
{
  return ControlTemplateToggle.Option.encode(to:)(a1);
}

uint64_t ControlTemplateToggle.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateToggle.title.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ControlTemplateToggle.title.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateToggle.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateToggle.subtitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ControlTemplateToggle.subtitle.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateToggle.on.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_190A15F00(type metadata accessor for ControlTemplateToggle, (uint64_t)type metadata accessor for ControlTemplateToggle.Option, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1908AF5D8, a1);
}

uint64_t sub_190A15F00@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;

  v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 24), a4, a2);
}

uint64_t ControlTemplateToggle.on.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ControlTemplateToggle(0) + 24);
  return sub_190A176C4(a1, v3);
}

uint64_t (*ControlTemplateToggle.on.modify())()
{
  type metadata accessor for ControlTemplateToggle(0);
  return nullsub_1;
}

uint64_t ControlTemplateToggle.off.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ControlTemplateToggle(0);
  return sub_1908AF5D8(v1 + *(int *)(v3 + 28), a1, type metadata accessor for ControlTemplateToggle.Option);
}

uint64_t ControlTemplateToggle.off.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ControlTemplateToggle(0) + 28);
  return sub_190A176C4(a1, v3);
}

uint64_t (*ControlTemplateToggle.off.modify())()
{
  type metadata accessor for ControlTemplateToggle(0);
  return nullsub_1;
}

uint64_t ControlTemplateToggle.associatedURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ControlTemplateToggle(0);
  return sub_1908AAA48(v1 + *(int *)(v3 + 32), a1, (uint64_t *)&unk_1ECF6C858);
}

uint64_t ControlTemplateToggle.associatedURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ControlTemplateToggle(0);
  return sub_1908DCA84(a1, v1 + *(int *)(v3 + 32), (uint64_t *)&unk_1ECF6C858);
}

uint64_t (*ControlTemplateToggle.associatedURL.modify())()
{
  type metadata accessor for ControlTemplateToggle(0);
  return nullsub_1;
}

uint64_t ControlTemplateToggle.privacySensitive.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplateToggle(0) + 36));
}

uint64_t ControlTemplateToggle.privacySensitive.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ControlTemplateToggle(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*ControlTemplateToggle.privacySensitive.modify())()
{
  type metadata accessor for ControlTemplateToggle(0);
  return nullsub_1;
}

uint64_t ControlTemplateToggle.disabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplateToggle(0) + 40));
}

uint64_t ControlTemplateToggle.disabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ControlTemplateToggle(0);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*ControlTemplateToggle.disabled.modify())()
{
  type metadata accessor for ControlTemplateToggle(0);
  return nullsub_1;
}

uint64_t ControlTemplateToggle.accessibilityIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ControlTemplateToggle(0) + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateToggle.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ControlTemplateToggle(0) + 44));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ControlTemplateToggle.accessibilityIdentifier.modify())()
{
  type metadata accessor for ControlTemplateToggle(0);
  return nullsub_1;
}

uint64_t ControlTemplateToggle.rasterizedImagesAllowed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplateToggle(0) + 48));
}

uint64_t ControlTemplateToggle.rasterizedImagesAllowed.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ControlTemplateToggle(0);
  *(_BYTE *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*ControlTemplateToggle.rasterizedImagesAllowed.modify())()
{
  type metadata accessor for ControlTemplateToggle(0);
  return nullsub_1;
}

uint64_t sub_190A162E0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_190A16310 + 4 * byte_190A5C656[a1]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_190A16310()
{
  return 0x656C746974627573;
}

uint64_t sub_190A16328()
{
  return 28271;
}

uint64_t sub_190A16334()
{
  return 6710895;
}

uint64_t sub_190A16344()
{
  return 0x746169636F737361;
}

unint64_t sub_190A16368()
{
  return 0xD000000000000010;
}

uint64_t sub_190A16388()
{
  return 0x64656C6261736964;
}

unint64_t sub_190A163A0()
{
  return 0xD000000000000017;
}

uint64_t sub_190A163C8()
{
  unsigned __int8 *v0;

  return sub_190A162E0(*v0);
}

uint64_t sub_190A163D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_190A19C74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190A163F4()
{
  sub_190A17708();
  return sub_190A48868();
}

uint64_t sub_190A1641C()
{
  sub_190A17708();
  return sub_190A48874();
}

uint64_t ControlTemplateToggle.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA420);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190A17708();
  sub_190A48850();
  v8[31] = 0;
  sub_190A485D4();
  if (!v1)
  {
    v8[30] = 1;
    sub_190A485D4();
    type metadata accessor for ControlTemplateToggle(0);
    v8[29] = 2;
    type metadata accessor for ControlTemplateToggle.Option(0);
    sub_1908AA2F4(&qword_1EE1EA400, type metadata accessor for ControlTemplateToggle.Option, (uint64_t)&protocol conformance descriptor for ControlTemplateToggle.Option);
    sub_190A48640();
    v8[28] = 3;
    sub_190A48640();
    v8[27] = 4;
    sub_190A45FC4();
    sub_1908AA2F4(&qword_1ECF6C648, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_190A485EC();
    v8[26] = 5;
    sub_190A48604();
    v8[25] = 6;
    sub_190A48604();
    v8[24] = 7;
    sub_190A485D4();
    v8[15] = 8;
    sub_190A48604();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ControlTemplateToggle.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t *v35;
  char *v36;
  char *v37;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;

  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v3);
  v41 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for ControlTemplateToggle.Option(0);
  v5 = MEMORY[0x1E0C80A78](v42);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v39 - v8;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB1D0);
  v10 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ControlTemplateToggle(0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  v17 = (uint64_t)&v16[*(int *)(v14 + 32)];
  v18 = sub_190A45FC4();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v45 = v17;
  v19(v17, 1, 1, v18);
  v20 = &v16[*(int *)(v13 + 44)];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v48 = v20;
  v49 = v13;
  v21 = a1[3];
  v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_190A17708();
  v44 = v12;
  v22 = v47;
  sub_190A48838();
  if (v22)
  {
    v23 = v45;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1908AA544(v23, (uint64_t *)&unk_1ECF6C858);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v39 = v18;
    v47 = v10;
    v58 = 0;
    *(_QWORD *)v16 = sub_190A48514();
    *((_QWORD *)v16 + 1) = v24;
    v57 = 1;
    v25 = sub_190A48514();
    v26 = v49;
    *((_QWORD *)v16 + 2) = v25;
    *((_QWORD *)v16 + 3) = v27;
    v56 = 2;
    sub_1908AA2F4(&qword_1EE1EB1B8, type metadata accessor for ControlTemplateToggle.Option, (uint64_t)&protocol conformance descriptor for ControlTemplateToggle.Option);
    sub_190A48580();
    sub_1908BD0B4((uint64_t)v9, (uint64_t)&v16[*(int *)(v26 + 24)], type metadata accessor for ControlTemplateToggle.Option);
    v55 = 3;
    sub_190A48580();
    sub_1908BD0B4((uint64_t)v7, (uint64_t)&v16[*(int *)(v26 + 28)], type metadata accessor for ControlTemplateToggle.Option);
    v54 = 4;
    sub_1908AA2F4(&qword_1ECF69D80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    v28 = (uint64_t)v41;
    sub_190A4852C();
    sub_1908DCA84(v28, v45, (uint64_t *)&unk_1ECF6C858);
    v53 = 5;
    v29 = sub_190A48544();
    v30 = (uint64_t)v46;
    v31 = v49;
    v16[*(int *)(v49 + 36)] = v29 & 1;
    v52 = 6;
    v16[*(int *)(v31 + 40)] = sub_190A48544() & 1;
    v51 = 7;
    v32 = sub_190A48514();
    v41 = v33;
    v42 = v32;
    v34 = v31;
    v35 = (uint64_t *)v48;
    swift_bridgeObjectRelease();
    v36 = v41;
    *v35 = v42;
    v35[1] = (uint64_t)v36;
    v50 = 8;
    v37 = v44;
    LOBYTE(v35) = sub_190A48544();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v43);
    v16[*(int *)(v34 + 48)] = v35 & 1;
    sub_1908AF5D8((uint64_t)v16, v40, type metadata accessor for ControlTemplateToggle);
    __swift_destroy_boxed_opaque_existential_1(v30);
    return sub_1908B5150((uint64_t)v16, type metadata accessor for ControlTemplateToggle);
  }
}

uint64_t sub_190A16CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1908AAA48(v2 + *(int *)(a1 + 32), a2, (uint64_t *)&unk_1ECF6C858);
}

uint64_t sub_190A16D14(void (*a1)(char *), uint64_t a2)
{
  return ControlTemplateToggle.validateIcon(_:)(a1, a2);
}

uint64_t sub_190A16D30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ControlTemplateToggle.init(from:)(a1, a2);
}

uint64_t sub_190A16D44(_QWORD *a1)
{
  return ControlTemplateToggle.encode(to:)(a1);
}

uint64_t _s9WidgetKit21ControlTemplateToggleV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  int *v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  int *v33;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_190A45FC4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA438);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v41 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v41 - v18;
  v20 = a1[1];
  v21 = a2[1];
  if (!v20)
  {
    if (v21)
      goto LABEL_26;
    goto LABEL_8;
  }
  if (!v21)
    goto LABEL_26;
  if (*a1 == *a2 && v20 == v21 || (v22 = sub_190A486DC(), v23 = 0, (v22 & 1) != 0))
  {
LABEL_8:
    v24 = a1[3];
    v25 = a2[3];
    if (v24)
    {
      if (!v25)
        goto LABEL_26;
      if (a1[2] != a2[2] || v24 != v25)
      {
        v26 = sub_190A486DC();
        v23 = 0;
        if ((v26 & 1) == 0)
          return v23 & 1;
      }
    }
    else if (v25)
    {
      goto LABEL_26;
    }
    v44 = v4;
    v27 = (int *)type metadata accessor for ControlTemplateToggle(0);
    if (!_s9WidgetKit21ControlTemplateToggleV6OptionV2eeoiySbAE_AEtFZ_0((_QWORD *)((char *)a1 + v27[6]), (_QWORD *)((char *)a2 + v27[6]))|| !_s9WidgetKit21ControlTemplateToggleV6OptionV2eeoiySbAE_AEtFZ_0((_QWORD *)((char *)a1 + v27[7]), (_QWORD *)((char *)a2 + v27[7])))
    {
      goto LABEL_26;
    }
    sub_1908AAA48((uint64_t)a1 + v27[8], (uint64_t)v19, (uint64_t *)&unk_1ECF6C858);
    v42 = v27;
    sub_1908AAA48((uint64_t)a2 + v27[8], (uint64_t)v17, (uint64_t *)&unk_1ECF6C858);
    v28 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1908AAA48((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1ECF6C858);
    v43 = v28;
    sub_1908AAA48((uint64_t)v17, v28, (uint64_t *)&unk_1ECF6C858);
    v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    v30 = v44;
    if (v29((uint64_t)v10, 1, v44) == 1)
    {
      sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6C858);
      sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6C858);
      if (v29(v43, 1, v30) == 1)
      {
        sub_1908AA544((uint64_t)v10, (uint64_t *)&unk_1ECF6C858);
LABEL_24:
        v33 = v42;
        if (*((unsigned __int8 *)a1 + v42[9]) != *((unsigned __int8 *)a2 + v42[9])
          || *((unsigned __int8 *)a1 + v42[10]) != *((unsigned __int8 *)a2 + v42[10]))
        {
          goto LABEL_26;
        }
        v35 = v42[11];
        v36 = (_QWORD *)((char *)a1 + v35);
        v37 = *(_QWORD *)((char *)a1 + v35 + 8);
        v38 = (_QWORD *)((char *)a2 + v35);
        v39 = v38[1];
        if (v37)
        {
          if (v39)
          {
            if (*v36 != *v38 || v37 != v39)
            {
              v40 = sub_190A486DC();
              v23 = 0;
              if ((v40 & 1) == 0)
                return v23 & 1;
            }
LABEL_35:
            v23 = *((_BYTE *)a1 + v33[12]) ^ *((_BYTE *)a2 + v33[12]) ^ 1;
            return v23 & 1;
          }
        }
        else if (!v39)
        {
          goto LABEL_35;
        }
LABEL_26:
        v23 = 0;
        return v23 & 1;
      }
    }
    else
    {
      sub_1908AAA48((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_1ECF6C858);
      if (v29(v43, 1, v30) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v43, v30);
        sub_1908AA2F4(&qword_1EE1ECEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
        v31 = sub_190A47AAC();
        v32 = *(void (**)(char *, uint64_t))(v5 + 8);
        v32(v7, v30);
        sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6C858);
        sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6C858);
        v32(v14, v30);
        sub_1908AA544((uint64_t)v10, (uint64_t *)&unk_1ECF6C858);
        if ((v31 & 1) == 0)
          goto LABEL_26;
        goto LABEL_24;
      }
      sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6C858);
      sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6C858);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v30);
    }
    sub_1908AA544((uint64_t)v10, &qword_1EE1EA438);
    goto LABEL_26;
  }
  return v23 & 1;
}

BOOL _s9WidgetKit21ControlTemplateToggleV6OptionV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _BOOL8 result;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  char v37;
  void (*v38)(char *, uint64_t);
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;

  v4 = sub_190A47260();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA440);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v54 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v54 - v18;
  v20 = a1[1];
  v21 = a2[1];
  if (!v20)
  {
    if (v21)
      return 0;
    goto LABEL_8;
  }
  if (!v21)
    return 0;
  if (*a1 == *a2 && v20 == v21 || (v22 = sub_190A486DC(), result = 0, (v22 & 1) != 0))
  {
LABEL_8:
    v56 = v4;
    v57 = a1;
    v24 = (void *)a1[2];
    v25 = (void *)a2[2];
    if (v24)
    {
      if (!v25)
        return 0;
      v54 = sub_19092E5B8();
      v26 = v24;
      v27 = v25;
      v28 = v26;
      v29 = v27;
      v30 = v28;
      v55 = a2;
      v31 = v30;
      v32 = v29;
      LOBYTE(v28) = sub_190A480F4();

      a2 = v55;
      if ((v28 & 1) == 0)
        return 0;
    }
    else if (v25)
    {
      return 0;
    }
    v33 = type metadata accessor for ControlTemplateToggle.Option(0);
    sub_1908AAA48((uint64_t)v57 + *(int *)(v33 + 24), (uint64_t)v19, (uint64_t *)&unk_1ECF6A3B8);
    v54 = v33;
    v55 = a2;
    sub_1908AAA48((uint64_t)a2 + *(int *)(v33 + 24), (uint64_t)v17, (uint64_t *)&unk_1ECF6A3B8);
    v34 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1908AAA48((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1ECF6A3B8);
    sub_1908AAA48((uint64_t)v17, v34, (uint64_t *)&unk_1ECF6A3B8);
    v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    v36 = v56;
    if (v35((uint64_t)v10, 1, v56) == 1)
    {
      sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6A3B8);
      sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6A3B8);
      if (v35(v34, 1, v36) == 1)
      {
        sub_1908AA544((uint64_t)v10, (uint64_t *)&unk_1ECF6A3B8);
LABEL_22:
        v40 = v54;
        v39 = v55;
        v41 = *(int *)(v54 + 28);
        v42 = v57;
        if ((*((_BYTE *)v57 + v41 + 16) & 1) != 0)
        {
          if (!*((_BYTE *)v55 + v41 + 16))
            return 0;
        }
        else if ((*((_BYTE *)v55 + v41 + 16) & 1) != 0 || (sub_190A4768C() & 1) == 0)
        {
          return 0;
        }
        v43 = *(int *)(v40 + 32);
        v44 = (_QWORD *)((char *)v42 + v43);
        v45 = *(_QWORD *)((char *)v42 + v43 + 8);
        v46 = (_QWORD *)((char *)v39 + v43);
        v47 = v46[1];
        if (v45)
        {
          if (!v47)
            return 0;
          if (*v44 != *v46 || v45 != v47)
          {
            v48 = sub_190A486DC();
            result = 0;
            if ((v48 & 1) == 0)
              return result;
          }
        }
        else if (v47)
        {
          return 0;
        }
        v49 = *(int *)(v40 + 36);
        v50 = (_QWORD *)((char *)v42 + v49);
        v51 = *(_QWORD *)((char *)v42 + v49 + 8);
        v52 = (_QWORD *)((char *)v39 + v49);
        v53 = v52[1];
        if (v51)
          return v53 && (*v50 == *v52 && v51 == v53 || (sub_190A486DC() & 1) != 0);
        return !v53;
      }
    }
    else
    {
      sub_1908AAA48((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_1ECF6A3B8);
      if (v35(v34, 1, v36) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v34, v36);
        sub_1908AA2F4(&qword_1EE1ECED0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDCD18], MEMORY[0x1E0CDCD30]);
        v37 = sub_190A47AAC();
        v38 = *(void (**)(char *, uint64_t))(v5 + 8);
        v38(v7, v36);
        sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6A3B8);
        sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6A3B8);
        v38(v14, v36);
        sub_1908AA544((uint64_t)v10, (uint64_t *)&unk_1ECF6A3B8);
        if ((v37 & 1) == 0)
          return 0;
        goto LABEL_22;
      }
      sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6A3B8);
      sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6A3B8);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v36);
    }
    sub_1908AA544((uint64_t)v10, &qword_1EE1EA440);
    return 0;
  }
  return result;
}

unint64_t sub_190A17680()
{
  unint64_t result;

  result = qword_1EE1EB898;
  if (!qword_1EE1EB898)
  {
    result = MEMORY[0x19401429C](&unk_190A5CA6C, &type metadata for ControlTemplateToggle.Option.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EB898);
  }
  return result;
}

uint64_t sub_190A176C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ControlTemplateToggle.Option(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_190A17708()
{
  unint64_t result;

  result = qword_1EE1EB880;
  if (!qword_1EE1EB880)
  {
    result = MEMORY[0x19401429C](&unk_190A5CA1C, &type metadata for ControlTemplateToggle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EB880);
  }
  return result;
}

uint64_t sub_190A1774C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1908AA2F4(&qword_1EE1EB8B0, type metadata accessor for ControlTemplateToggle, (uint64_t)&protocol conformance descriptor for ControlTemplateToggle);
  a1[2] = sub_1908AA2F4(&qword_1EE1EB170, type metadata accessor for ControlTemplateToggle, (uint64_t)&protocol conformance descriptor for ControlTemplateToggle);
  result = sub_1908AA2F4(&qword_1EE1EB178, type metadata accessor for ControlTemplateToggle, (uint64_t)&protocol conformance descriptor for ControlTemplateToggle);
  a1[3] = result;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ControlTemplateToggle(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *__dst;
  int *v71;

  v3 = a1;
  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v19 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v19 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a3[6];
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = *(_QWORD *)((char *)a2 + v7 + 8);
    *v8 = *(_QWORD *)((char *)a2 + v7);
    v8[1] = v10;
    v11 = *(void **)((char *)a2 + v7 + 16);
    v8[2] = v11;
    v12 = type metadata accessor for ControlTemplateToggle.Option(0);
    v13 = *(int *)(v12 + 24);
    __dst = (char *)v8 + v13;
    v71 = (int *)v12;
    v68 = &v9[v13];
    v14 = sub_190A47260();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = v11;
    v67 = v15;
    v69 = v14;
    if (v16(v68, 1, v14))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
      memcpy(__dst, v68, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v68, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    v20 = v71[7];
    v21 = (char *)v8 + v20;
    v22 = &v9[v20];
    *(_OWORD *)v21 = *(_OWORD *)v22;
    v21[16] = v22[16];
    v23 = v71[8];
    v24 = (_QWORD *)((char *)v8 + v23);
    v25 = &v9[v23];
    v26 = *((_QWORD *)v25 + 1);
    *v24 = *(_QWORD *)v25;
    v24[1] = v26;
    v27 = v71[9];
    v28 = (_QWORD *)((char *)v8 + v27);
    v29 = &v9[v27];
    v30 = *((_QWORD *)v29 + 1);
    *v28 = *(_QWORD *)v29;
    v28[1] = v30;
    v31 = a2;
    v32 = a3[7];
    v33 = (_QWORD *)((char *)v3 + v32);
    v34 = (char *)a2 + v32;
    v35 = *(_QWORD *)((char *)a2 + v32 + 8);
    *v33 = *(_QWORD *)((char *)a2 + v32);
    v33[1] = v35;
    v36 = *(void **)((char *)a2 + v32 + 16);
    v33[2] = v36;
    v37 = v71[6];
    v38 = (char *)v33 + v37;
    v39 = &v34[v37];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40 = v36;
    if (v16(v39, 1, v69))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v38, v39, v69);
      v31 = a2;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v38, 0, 1, v69);
    }
    v42 = v71[7];
    v43 = (char *)v33 + v42;
    v44 = &v34[v42];
    *(_OWORD *)v43 = *(_OWORD *)v44;
    v43[16] = v44[16];
    v45 = v71[8];
    v46 = (_QWORD *)((char *)v33 + v45);
    v47 = &v34[v45];
    v48 = *((_QWORD *)v47 + 1);
    *v46 = *(_QWORD *)v47;
    v46[1] = v48;
    v49 = v71[9];
    v50 = (_QWORD *)((char *)v33 + v49);
    v51 = &v34[v49];
    v52 = *((_QWORD *)v51 + 1);
    *v50 = *(_QWORD *)v51;
    v50[1] = v52;
    v53 = a3[8];
    v54 = (char *)v3 + v53;
    v55 = (char *)v31 + v53;
    v56 = sub_190A45FC4();
    v57 = *(_QWORD *)(v56 - 8);
    v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v58(v55, 1, v56))
    {
      v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
    }
    v60 = a3[10];
    *((_BYTE *)v3 + a3[9]) = *((_BYTE *)v31 + a3[9]);
    *((_BYTE *)v3 + v60) = *((_BYTE *)v31 + v60);
    v61 = a3[11];
    v62 = a3[12];
    v63 = (_QWORD *)((char *)v3 + v61);
    v64 = (_QWORD *)((char *)v31 + v61);
    v65 = v64[1];
    *v63 = *v64;
    v63[1] = v65;
    *((_BYTE *)v3 + v62) = *((_BYTE *)v31 + v62);
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t destroy for ControlTemplateToggle(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  swift_bridgeObjectRelease();

  v5 = type metadata accessor for ControlTemplateToggle.Option(0);
  v6 = v4 + *(int *)(v5 + 24);
  v7 = sub_190A47260();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = a1 + a2[7];
  swift_bridgeObjectRelease();

  v11 = v10 + *(int *)(v5 + 24);
  if (!v9(v11, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = a1 + a2[8];
  v13 = sub_190A45FC4();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ControlTemplateToggle(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  void *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *__dst;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a3[6];
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (char *)a2 + v5;
  v8 = *(_QWORD *)((char *)a2 + v5 + 8);
  *v6 = *(_QWORD *)((char *)a2 + v5);
  v6[1] = v8;
  v9 = *(void **)((char *)a2 + v5 + 16);
  v6[2] = v9;
  v10 = (int *)type metadata accessor for ControlTemplateToggle.Option(0);
  v11 = v10[6];
  __dst = (char *)v6 + v11;
  v64 = &v7[v11];
  v12 = sub_190A47260();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = v9;
  v63 = v13;
  v65 = v12;
  if (v14(v64, 1, v12))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(__dst, v64, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v64, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  v17 = v10[7];
  v18 = (char *)v6 + v17;
  v19 = &v7[v17];
  *(_OWORD *)v18 = *(_OWORD *)v19;
  v18[16] = v19[16];
  v20 = v10[8];
  v21 = (_QWORD *)((char *)v6 + v20);
  v22 = &v7[v20];
  v23 = *((_QWORD *)v22 + 1);
  *v21 = *(_QWORD *)v22;
  v21[1] = v23;
  v24 = v10[9];
  v25 = (_QWORD *)((char *)v6 + v24);
  v26 = &v7[v24];
  v27 = *((_QWORD *)v26 + 1);
  *v25 = *(_QWORD *)v26;
  v25[1] = v27;
  v28 = a3[7];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (char *)a2 + v28;
  v31 = *(_QWORD *)((char *)a2 + v28 + 8);
  *v29 = *(_QWORD *)((char *)a2 + v28);
  v29[1] = v31;
  v32 = *(void **)((char *)a2 + v28 + 16);
  v29[2] = v32;
  v33 = v10[6];
  v34 = (char *)v29 + v33;
  v35 = &v30[v33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v36 = v32;
  if (v14(v35, 1, v65))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v34, v35, v65);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v34, 0, 1, v65);
  }
  v38 = v10[7];
  v39 = (char *)v29 + v38;
  v40 = &v30[v38];
  *(_OWORD *)v39 = *(_OWORD *)v40;
  v39[16] = v40[16];
  v41 = v10[8];
  v42 = (_QWORD *)((char *)v29 + v41);
  v43 = &v30[v41];
  v44 = *((_QWORD *)v43 + 1);
  *v42 = *(_QWORD *)v43;
  v42[1] = v44;
  v45 = v10[9];
  v46 = (_QWORD *)((char *)v29 + v45);
  v47 = &v30[v45];
  v48 = *((_QWORD *)v47 + 1);
  *v46 = *(_QWORD *)v47;
  v46[1] = v48;
  v49 = a3[8];
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = sub_190A45FC4();
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v54(v51, 1, v52))
  {
    v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  }
  v56 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v56) = *((_BYTE *)a2 + v56);
  v57 = a3[11];
  v58 = a3[12];
  v59 = (_QWORD *)((char *)a1 + v57);
  v60 = (_QWORD *)((char *)a2 + v57);
  v61 = v60[1];
  *v59 = *v60;
  v59[1] = v61;
  *((_BYTE *)a1 + v58) = *((_BYTE *)a2 + v58);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ControlTemplateToggle(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  void *v9;
  void *v10;
  id v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v66;
  int *v67;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v67 = a3;
  v6 = a3[6];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (void *)v7[2];
  v10 = (void *)*((_QWORD *)v8 + 2);
  v7[2] = v10;
  v11 = v10;

  v12 = (int *)type metadata accessor for ControlTemplateToggle.Option(0);
  v13 = v12[6];
  v14 = (char *)v7 + v13;
  v15 = &v8[v13];
  v16 = sub_190A47260();
  v66 = *(_QWORD *)(v16 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
  v18 = v17(v14, 1, v16);
  v19 = v17(v15, 1, v16);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v14, v16);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 24))(v14, v15, v16);
LABEL_7:
  v21 = v12[7];
  v22 = (char *)v7 + v21;
  v23 = &v8[v21];
  v24 = *(_OWORD *)v23;
  v22[16] = v23[16];
  *(_OWORD *)v22 = v24;
  v25 = v12[8];
  v26 = (_QWORD *)((char *)v7 + v25);
  v27 = &v8[v25];
  *v26 = *(_QWORD *)v27;
  v26[1] = *((_QWORD *)v27 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = v12[9];
  v29 = (_QWORD *)((char *)v7 + v28);
  v30 = &v8[v28];
  *v29 = *(_QWORD *)v30;
  v29[1] = *((_QWORD *)v30 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = v67[7];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  *(_QWORD *)v32 = *(_QWORD *)((char *)a2 + v31);
  *((_QWORD *)v32 + 1) = *(_QWORD *)((char *)a2 + v31 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = (void *)*((_QWORD *)v32 + 2);
  v35 = (void *)*((_QWORD *)v33 + 2);
  *((_QWORD *)v32 + 2) = v35;
  v36 = v35;

  v37 = v12[6];
  v38 = &v32[v37];
  v39 = &v33[v37];
  v40 = v17(&v32[v37], 1, v16);
  v41 = v17(v39, 1, v16);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v38, v39, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v38, 0, 1, v16);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v38, v16);
LABEL_12:
    v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 24))(v38, v39, v16);
LABEL_13:
  v43 = v12[7];
  v44 = &v32[v43];
  v45 = &v33[v43];
  v46 = *(_OWORD *)v45;
  v44[16] = v45[16];
  *(_OWORD *)v44 = v46;
  v47 = v12[8];
  v48 = &v32[v47];
  v49 = &v33[v47];
  *(_QWORD *)v48 = *(_QWORD *)v49;
  *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v50 = v12[9];
  v51 = &v32[v50];
  v52 = &v33[v50];
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = v67[8];
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  v56 = sub_190A45FC4();
  v57 = *(_QWORD *)(v56 - 8);
  v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
  v59 = v58(v54, 1, v56);
  v60 = v58(v55, 1, v56);
  if (!v59)
  {
    if (!v60)
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 24))(v54, v55, v56);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v57 + 8))(v54, v56);
    goto LABEL_18;
  }
  if (v60)
  {
LABEL_18:
    v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
LABEL_19:
  *((_BYTE *)a1 + v67[9]) = *((_BYTE *)a2 + v67[9]);
  *((_BYTE *)a1 + v67[10]) = *((_BYTE *)a2 + v67[10]);
  v62 = v67[11];
  v63 = (_QWORD *)((char *)a1 + v62);
  v64 = (_QWORD *)((char *)a2 + v62);
  *v63 = *v64;
  v63[1] = v64[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v67[12]) = *((_BYTE *)a2 + v67[12]);
  return a1;
}

_OWORD *initializeWithTake for ControlTemplateToggle(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v39)(char *, uint64_t, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)((char *)a2 + v7);
  *((_QWORD *)v8 + 2) = *(_QWORD *)((char *)a2 + v7 + 16);
  v10 = (int *)type metadata accessor for ControlTemplateToggle.Option(0);
  v11 = v10[6];
  v12 = &v8[v11];
  v13 = &v9[v11];
  v14 = sub_190A47260();
  v15 = *(_QWORD *)(v14 - 8);
  v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v39(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = v10[7];
  v18 = &v8[v17];
  v19 = &v9[v17];
  *(_OWORD *)v18 = *(_OWORD *)v19;
  v18[16] = v19[16];
  *(_OWORD *)&v8[v10[8]] = *(_OWORD *)&v9[v10[8]];
  *(_OWORD *)&v8[v10[9]] = *(_OWORD *)&v9[v10[9]];
  v20 = a3[7];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  *(_OWORD *)v21 = *(_OWORD *)((char *)a2 + v20);
  *((_QWORD *)v21 + 2) = *(_QWORD *)((char *)a2 + v20 + 16);
  v23 = v10[6];
  v24 = &v21[v23];
  v25 = &v22[v23];
  if (v39(&v22[v23], 1, v14))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v24, v25, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v24, 0, 1, v14);
  }
  v27 = v10[7];
  v28 = &v21[v27];
  v29 = &v22[v27];
  *(_OWORD *)v28 = *(_OWORD *)v29;
  v28[16] = v29[16];
  *(_OWORD *)&v21[v10[8]] = *(_OWORD *)&v22[v10[8]];
  *(_OWORD *)&v21[v10[9]] = *(_OWORD *)&v22[v10[9]];
  v30 = a3[8];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_190A45FC4();
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  v36 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v36) = *((_BYTE *)a2 + v36);
  v37 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  *((_BYTE *)a1 + v37) = *((_BYTE *)a2 + v37);
  return a1;
}

_QWORD *assignWithTake for ControlTemplateToggle(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  void *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(char *, uint64_t, uint64_t);
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  int *v76;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v76 = a3;
  v8 = a3[6];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (char *)a2 + v8;
  v11 = *(_QWORD *)((char *)a2 + v8 + 8);
  *v9 = *(_QWORD *)((char *)a2 + v8);
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v12 = (void *)v9[2];
  v9[2] = *((_QWORD *)v10 + 2);

  v13 = (int *)type metadata accessor for ControlTemplateToggle.Option(0);
  v14 = v13[6];
  v15 = (char *)v9 + v14;
  v16 = &v10[v14];
  v17 = sub_190A47260();
  v75 = *(_QWORD *)(v17 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
  v19 = v18(v15, 1, v17);
  v20 = v18(v16, 1, v17);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v15, v17);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v75 + 40))(v15, v16, v17);
LABEL_7:
  v22 = v13[7];
  v23 = (char *)v9 + v22;
  v24 = &v10[v22];
  *(_OWORD *)v23 = *(_OWORD *)v24;
  v23[16] = v24[16];
  v25 = v13[8];
  v26 = (_QWORD *)((char *)v9 + v25);
  v27 = &v10[v25];
  v29 = *(_QWORD *)v27;
  v28 = *((_QWORD *)v27 + 1);
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  v30 = v13[9];
  v31 = (_QWORD *)((char *)v9 + v30);
  v32 = &v10[v30];
  v34 = *(_QWORD *)v32;
  v33 = *((_QWORD *)v32 + 1);
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  v35 = v76[7];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = *(_QWORD *)((char *)a2 + v35 + 8);
  *(_QWORD *)v36 = *(_QWORD *)((char *)a2 + v35);
  *((_QWORD *)v36 + 1) = v38;
  swift_bridgeObjectRelease();
  v39 = (void *)*((_QWORD *)v36 + 2);
  *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);

  v40 = v13[6];
  v41 = &v36[v40];
  v42 = &v37[v40];
  v43 = v18(&v36[v40], 1, v17);
  v44 = v18(v42, 1, v17);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v41, v42, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v41, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v41, v17);
LABEL_12:
    v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v75 + 40))(v41, v42, v17);
LABEL_13:
  v46 = v13[7];
  v47 = &v36[v46];
  v48 = &v37[v46];
  *(_OWORD *)v47 = *(_OWORD *)v48;
  v47[16] = v48[16];
  v49 = v13[8];
  v50 = &v36[v49];
  v51 = &v37[v49];
  v53 = *(_QWORD *)v51;
  v52 = *((_QWORD *)v51 + 1);
  *(_QWORD *)v50 = v53;
  *((_QWORD *)v50 + 1) = v52;
  swift_bridgeObjectRelease();
  v54 = v13[9];
  v55 = &v36[v54];
  v56 = &v37[v54];
  v58 = *(_QWORD *)v56;
  v57 = *((_QWORD *)v56 + 1);
  *(_QWORD *)v55 = v58;
  *((_QWORD *)v55 + 1) = v57;
  swift_bridgeObjectRelease();
  v59 = v76[8];
  v60 = (char *)a1 + v59;
  v61 = (char *)a2 + v59;
  v62 = sub_190A45FC4();
  v63 = *(_QWORD *)(v62 - 8);
  v64 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48);
  v65 = v64(v60, 1, v62);
  v66 = v64(v61, 1, v62);
  if (!v65)
  {
    if (!v66)
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 40))(v60, v61, v62);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v63 + 8))(v60, v62);
    goto LABEL_18;
  }
  if (v66)
  {
LABEL_18:
    v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v60, v61, v62);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
LABEL_19:
  v68 = v76[10];
  *((_BYTE *)a1 + v76[9]) = *((_BYTE *)a2 + v76[9]);
  *((_BYTE *)a1 + v68) = *((_BYTE *)a2 + v68);
  v69 = v76[11];
  v70 = (_QWORD *)((char *)a1 + v69);
  v71 = (_QWORD *)((char *)a2 + v69);
  v73 = *v71;
  v72 = v71[1];
  *v70 = v73;
  v70[1] = v72;
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v76[12]) = *((_BYTE *)a2 + v76[12]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlTemplateToggle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190A18BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for ControlTemplateToggle.Option(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 24);
    }
    else
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ControlTemplateToggle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190A18C68(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v8 = type metadata accessor for ControlTemplateToggle.Option(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_190A18D08()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for ControlTemplateToggle.Option(319);
  if (v0 <= 0x3F)
  {
    sub_1908BBFB0(319, (unint64_t *)&qword_1ECF6D220, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ControlTemplateToggle.Option(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = (void *)a2[2];
    a1[2] = (uint64_t)v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_190A47260();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    v15 = v8;
    if (v14(v11, 1, v12))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v18 = a3[7];
    v19 = a3[8];
    v20 = (char *)v4 + v18;
    v21 = (char *)a2 + v18;
    *(_OWORD *)v20 = *(_OWORD *)v21;
    v20[16] = v21[16];
    v22 = (uint64_t *)((char *)v4 + v19);
    v23 = (uint64_t *)((char *)a2 + v19);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = a3[9];
    v26 = (uint64_t *)((char *)v4 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ControlTemplateToggle.Option(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();

  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_190A47260();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ControlTemplateToggle.Option(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (void *)a2[2];
  a1[2] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_190A47260();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  v14 = v7;
  if (v13(v10, 1, v11))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v16 = a3[7];
  v17 = a3[8];
  v18 = (char *)a1 + v16;
  v19 = (char *)a2 + v16;
  *(_OWORD *)v18 = *(_OWORD *)v19;
  v18[16] = v19[16];
  v20 = (_QWORD *)((char *)a1 + v17);
  v21 = (_QWORD *)((char *)a2 + v17);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[9];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ControlTemplateToggle.Option(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a1[2];
  v7 = (void *)a2[2];
  a1[2] = v7;
  v8 = v7;

  v9 = a3[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_190A47260();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = a3[7];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *(_OWORD *)v20;
  v19[16] = v20[16];
  *(_OWORD *)v19 = v21;
  v22 = a3[8];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a3[9];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ControlTemplateToggle.Option(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_190A47260();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  v13 = a3[8];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

_QWORD *assignWithTake for ControlTemplateToggle.Option(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (void *)a1[2];
  a1[2] = a2[2];

  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_190A47260();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  v17 = a3[7];
  v18 = a3[8];
  v19 = (char *)a1 + v17;
  v20 = (char *)a2 + v17;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  v19[16] = v20[16];
  v21 = (_QWORD *)((char *)a1 + v18);
  v22 = (_QWORD *)((char *)a2 + v18);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[9];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlTemplateToggle.Option()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190A19530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ControlTemplateToggle.Option()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190A195C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_190A19640()
{
  unint64_t v0;

  sub_1908BBFB0(319, &qword_1ECF6BEB8, (void (*)(uint64_t))MEMORY[0x1E0CDCD18]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for ControlTemplateToggle.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_190A19724 + 4 * byte_190A5C664[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_190A19758 + 4 * byte_190A5C65F[v4]))();
}

uint64_t sub_190A19758(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A19760(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190A19768);
  return result;
}

uint64_t sub_190A19774(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190A1977CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_190A19780(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A19788(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplateToggle.CodingKeys()
{
  return &type metadata for ControlTemplateToggle.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ControlTemplateToggle.Option.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_190A197F0 + 4 * byte_190A5C66E[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_190A19824 + 4 * byte_190A5C669[v4]))();
}

uint64_t sub_190A19824(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A1982C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190A19834);
  return result;
}

uint64_t sub_190A19840(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190A19848);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_190A1984C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A19854(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplateToggle.Option.CodingKeys()
{
  return &type metadata for ControlTemplateToggle.Option.CodingKeys;
}

unint64_t sub_190A19874()
{
  unint64_t result;

  result = qword_1EE1EEDB8;
  if (!qword_1EE1EEDB8)
  {
    result = MEMORY[0x19401429C](&unk_190A5C93C, &type metadata for ControlTemplateToggle.Option.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EEDB8);
  }
  return result;
}

unint64_t sub_190A198BC()
{
  unint64_t result;

  result = qword_1EE1EEDC0;
  if (!qword_1EE1EEDC0)
  {
    result = MEMORY[0x19401429C](&unk_190A5C9F4, &type metadata for ControlTemplateToggle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EEDC0);
  }
  return result;
}

unint64_t sub_190A19904()
{
  unint64_t result;

  result = qword_1EE1EB890;
  if (!qword_1EE1EB890)
  {
    result = MEMORY[0x19401429C](&unk_190A5C964, &type metadata for ControlTemplateToggle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EB890);
  }
  return result;
}

unint64_t sub_190A1994C()
{
  unint64_t result;

  result = qword_1EE1EB888;
  if (!qword_1EE1EB888)
  {
    result = MEMORY[0x19401429C](&unk_190A5C98C, &type metadata for ControlTemplateToggle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EB888);
  }
  return result;
}

unint64_t sub_190A19994()
{
  unint64_t result;

  result = qword_1EE1EB8A8;
  if (!qword_1EE1EB8A8)
  {
    result = MEMORY[0x19401429C](&unk_190A5C8AC, &type metadata for ControlTemplateToggle.Option.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EB8A8);
  }
  return result;
}

unint64_t sub_190A199DC()
{
  unint64_t result;

  result = qword_1EE1EB8A0;
  if (!qword_1EE1EB8A0)
  {
    result = MEMORY[0x19401429C](&unk_190A5C8D4, &type metadata for ControlTemplateToggle.Option.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EB8A0);
  }
  return result;
}

uint64_t sub_190A19A20(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1852793705 && a2 == 0xE400000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1953393012 && a2 == 0xE400000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x69486E6F69746361 && a2 == 0xEA0000000000746ELL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_190A19C74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 28271 && a2 == 0xE200000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6710895 && a2 == 0xE300000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746169636F737361 && a2 == 0xED00004C52556465 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000190A61460 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x64656C6261736964 && a2 == 0xE800000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000190A61480 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000190A614A0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_190A1A004@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char v37[16];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[3];

  v34 = a8;
  v15 = type metadata accessor for TimelineReloadPolicy();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44[2] = *a1;
  v38 = a4;
  v39 = a5;
  v35 = a6;
  v40 = a6;
  v41 = a7;
  v42 = a2;
  v43 = a3;
  v18 = sub_190A47D04();
  swift_bridgeObjectRetain();
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6AE48);
  v20 = MEMORY[0x19401429C](MEMORY[0x1E0DEAF50], v18);
  v21 = v36;
  v22 = sub_190907290((void (*)(char *, char *))sub_190A1A964, (uint64_t)v37, v18, a4, v19, v20, MEMORY[0x1E0DEDB38], (uint64_t)v44);
  if (v21)
  {
    v24 = type metadata accessor for Timeline(0, a5, a7, v23);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(a1, v24);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v26 = v22;
    swift_bridgeObjectRelease();
    v28 = type metadata accessor for Timeline(0, a5, a7, v27);
    sub_190A1A270((uint64_t)a1 + *(int *)(v28 + 36), (uint64_t)v17);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(a1, v28);
    v30 = v34;
    v29 = v35;
    *v34 = v26;
    v32 = type metadata accessor for Timeline(0, (uint64_t)a4, v29, v31);
    return sub_190A1A214((uint64_t)v17, (uint64_t)v30 + *(int *)(v32 + 36));
  }
}

uint64_t Timeline.init(entries:policy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;

  *a5 = a1;
  v6 = (uint64_t)a5 + *(int *)(type metadata accessor for Timeline(0, a3, a4, a4) + 36);
  return sub_190A1A214(a2, v6);
}

uint64_t type metadata accessor for Timeline(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Timeline);
}

uint64_t sub_190A1A214(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TimelineReloadPolicy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Timeline.entries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Timeline.policy.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_190A1A270(v2 + *(int *)(a1 + 36), a2);
}

uint64_t sub_190A1A270(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TimelineReloadPolicy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_190A1A2B4()
{
  unint64_t v0;

  sub_190919C64();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_190A1A32C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 36);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_190A46084();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_190A1A420(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_190A46084();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *sub_190A1A49C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_190A46084();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *sub_190A1A568(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_190A46084();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_QWORD *sub_190A1A688(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_190A46084();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *sub_190A1A744(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_190A46084();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_190A1A85C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190A1A868(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for TimelineReloadPolicy();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 36)], a2, v8);
  }
}

uint64_t sub_190A1A8E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_190A1A8F0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for TimelineReloadPolicy();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 36)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_190A1A964(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v2 + 48))();
  if (v3)
    *a2 = v3;
  return result;
}

uint64_t WidgetRelevanceEntry<A>.init(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_190A45D78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBF50);
  return swift_storeEnumTagMultiPayload();
}

uint64_t WidgetRelevanceEntry<A>.init(group:)@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  *a2 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBF50);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_190A1AA28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a4, a1);
  v9 = a4 + *(int *)(type metadata accessor for WidgetRelevanceEntry(0, a3, v7, v8) + 28);
  v12 = type metadata accessor for WidgetRelevanceEntry.Attribute(0, a3, v10, v11);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, a2, v12);
}

uint64_t WidgetRelevanceEntry<A>.init(configuration:group:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v8 = *a2;
  v9 = a2[1];
  v10 = (_QWORD *)(a5 + *(int *)(type metadata accessor for WidgetRelevanceEntry(0, a3, a3, a4) + 28));
  *v10 = v8;
  v10[1] = v9;
  type metadata accessor for WidgetRelevanceEntry.Attribute(0, a3, v11, v12);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1, a3);
}

uint64_t type metadata accessor for WidgetRelevanceEntry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WidgetRelevanceEntry);
}

uint64_t type metadata accessor for WidgetRelevanceEntry.Attribute(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WidgetRelevanceEntry.Attribute);
}

uint64_t WidgetRelevanceEntry<A>.init(configuration:group:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v8 = *a2;
  v9 = a2[1];
  v10 = (_QWORD *)((char *)a5 + *(int *)(type metadata accessor for WidgetRelevanceEntry(0, a3, a3, a4) + 28));
  *v10 = v8;
  v10[1] = v9;
  type metadata accessor for WidgetRelevanceEntry.Attribute(0, a3, v11, v12);
  result = swift_storeEnumTagMultiPayload();
  *a5 = a1;
  return result;
}

uint64_t WidgetRelevanceEntry.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t WidgetRelevanceEntry.context.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v7 = type metadata accessor for WidgetRelevanceEntry.Attribute(0, *(_QWORD *)(a1 + 16), a2, a3);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v13 - v8, v4 + *(int *)(a1 + 28), v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    result = sub_190A48448();
    __break(1u);
  }
  else
  {
    v11 = sub_190A45D78();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a4, v9, v11);
  }
  return result;
}

uint64_t WidgetRelevanceEntry<A>.init(configuration:context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9 = a5 + *(int *)(type metadata accessor for WidgetRelevanceEntry(0, a3, a3, a4) + 28);
  v10 = sub_190A45D78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a2, v10);
  type metadata accessor for WidgetRelevanceEntry.Attribute(0, a3, v11, v12);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1, a3);
}

uint64_t WidgetRelevanceEntry<A>.init(configuration:context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v9 = (char *)a5 + *(int *)(type metadata accessor for WidgetRelevanceEntry(0, a3, a3, a4) + 28);
  v10 = sub_190A45D78();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a2, v10);
  type metadata accessor for WidgetRelevanceEntry.Attribute(0, a3, v11, v12);
  result = swift_storeEnumTagMultiPayload();
  *a5 = a1;
  return result;
}

uint64_t sub_190A1ADE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v0 = swift_checkMetadataState();
  v3 = v0;
  if (v4 <= 0x3F)
  {
    v3 = type metadata accessor for WidgetRelevanceEntry.Attribute(319, v0, v1, v2);
    if (v5 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v3;
}

uint64_t *sub_190A1AE78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unsigned int v23;
  uint64_t v24;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(sub_190A45D78() - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9 & 0xF8 | 7;
  v11 = v7 + v10;
  v12 = (v7 + v10) & ~v10;
  if (*(_QWORD *)(v8 + 64) <= 0x10uLL)
    v13 = 16;
  else
    v13 = *(_QWORD *)(v8 + 64);
  v14 = v13 + v12 + 1;
  v15 = *(_DWORD *)(v6 + 80) & 0xF8 | v10;
  v16 = (*(_DWORD *)(v6 + 80) | v9) & 0x100000;
  if ((_DWORD)v15 != 7 || v16 != 0 || v14 > 0x18)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  else
  {
    v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v21 = (_QWORD *)(((unint64_t)a1 + v11) & v20);
    v22 = (_QWORD *)(((unint64_t)a2 + v11) & v20);
    v23 = *((unsigned __int8 *)v22 + v13);
    if (v23 >= 2)
    {
      if (v13 <= 3)
        v24 = v13;
      else
        v24 = 4;
      __asm { BR              X12 }
    }
    if (v23 == 1)
    {
      if (*(_QWORD *)((((unint64_t)a2 + v11) & v20) + 8) >= 2uLL)
      {
        *v21 = *v22;
        *(_QWORD *)((((unint64_t)a1 + v11) & v20) + 8) = *(_QWORD *)((((unint64_t)a2 + v11) & v20) + 8);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v21 = *(_OWORD *)v22;
      }
      *((_BYTE *)v21 + v13) = 1;
    }
    else
    {
      (*(void (**)(unint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v20);
      *((_BYTE *)v21 + v13) = 0;
    }
  }
  return a1;
}

unint64_t sub_190A1B030(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(_QWORD *)(sub_190A45D78() - 8);
  v6 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  v7 = (v4 + a1 + v6) & ~v6;
  v8 = *(_QWORD *)(v5 + 64);
  if (v8 <= 0x10)
    v8 = 16;
  v9 = *(unsigned __int8 *)(v7 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X14 }
  }
  if (v9 != 1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  result = *(_QWORD *)(v7 + 8);
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_190A1B138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  char v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(sub_190A45D78() - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v9 = v6 + v8;
  v10 = (_QWORD *)((v6 + v8 + a1) & ~v8);
  v11 = (_QWORD *)((v9 + a2) & ~v8);
  if (*(_QWORD *)(v7 + 64) <= 0x10uLL)
    v12 = 16;
  else
    v12 = *(_QWORD *)(v7 + 64);
  v13 = *((unsigned __int8 *)v11 + v12);
  if (v13 >= 2)
  {
    if (v12 <= 3)
      v14 = v12;
    else
      v14 = 4;
    __asm { BR              X13 }
  }
  if (v13 == 1)
  {
    if (v11[1] >= 2uLL)
    {
      *v10 = *v11;
      v10[1] = v11[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v10 = *(_OWORD *)v11;
    }
    v15 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v7 + 16))(v10);
    v15 = 0;
  }
  *((_BYTE *)v10 + v12) = v15;
  return a1;
}

uint64_t sub_190A1B278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_190A45D78();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v10 = v6 + v9;
  v11 = (_QWORD *)((v6 + v9 + a1) & ~v9);
  v12 = (_QWORD *)((v10 + a2) & ~v9);
  if (v11 != v12)
  {
    v13 = v7;
    if (*(_QWORD *)(v8 + 64) <= 0x10uLL)
      v14 = 16;
    else
      v14 = *(_QWORD *)(v8 + 64);
    v15 = *((unsigned __int8 *)v11 + v14);
    if (v15 >= 2)
    {
      if (v14 <= 3)
        v16 = v14;
      else
        v16 = 4;
      __asm { BR              X12 }
    }
    if (v15 == 1)
    {
      if (v11[1] >= 2uLL)
        swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
    }
    v17 = *((unsigned __int8 *)v12 + v14);
    if (v17 >= 2)
    {
      if (v14 <= 3)
        v18 = v14;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    if (v17 == 1)
    {
      if (v12[1] >= 2uLL)
      {
        *v11 = *v12;
        v11[1] = v12[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v11 = *(_OWORD *)v12;
      }
      v19 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(v11, v12, v13);
      v19 = 0;
    }
    *((_BYTE *)v11 + v14) = v19;
  }
  return a1;
}

uint64_t sub_190A1B46C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  char v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(sub_190A45D78() - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v9 = v6 + v8;
  v10 = (_OWORD *)((v6 + v8 + a1) & ~v8);
  v11 = (_OWORD *)((v9 + a2) & ~v8);
  if (*(_QWORD *)(v7 + 64) <= 0x10uLL)
    v12 = 16;
  else
    v12 = *(_QWORD *)(v7 + 64);
  v13 = *((unsigned __int8 *)v11 + v12);
  if (v13 >= 2)
  {
    if (v12 <= 3)
      v14 = v12;
    else
      v14 = 4;
    __asm { BR              X13 }
  }
  if (v13 == 1)
  {
    *v10 = *v11;
    v15 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *))(v7 + 32))(v10);
    v15 = 0;
  }
  *((_BYTE *)v10 + v12) = v15;
  return a1;
}

uint64_t sub_190A1B588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_190A45D78();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (_OWORD *)((v10 + a2) & ~v9);
  if ((_OWORD *)v11 != v12)
  {
    v13 = v7;
    if (*(_QWORD *)(v8 + 64) <= 0x10uLL)
      v14 = 16;
    else
      v14 = *(_QWORD *)(v8 + 64);
    v15 = *(unsigned __int8 *)(v11 + v14);
    if (v15 >= 2)
    {
      if (v14 <= 3)
        v16 = v14;
      else
        v16 = 4;
      __asm { BR              X12 }
    }
    if (v15 == 1)
    {
      if (*(_QWORD *)(v11 + 8) >= 2uLL)
        swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
    }
    v17 = *((unsigned __int8 *)v12 + v14);
    if (v17 >= 2)
    {
      if (v14 <= 3)
        v18 = v14;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    if (v17 == 1)
    {
      *(_OWORD *)v11 = *v12;
      v19 = 1;
    }
    else
    {
      (*(void (**)(uint64_t, _OWORD *, uint64_t))(v8 + 32))(v11, v12, v13);
      v19 = 0;
    }
    *(_BYTE *)(v11 + v14) = v19;
  }
  return a1;
}

uint64_t sub_190A1B758(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int v15;
  unsigned int v17;
  int v18;
  int v19;
  unsigned int v20;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(sub_190A45D78() - 8);
  v9 = 16;
  if (*(_QWORD *)(v8 + 64) > 0x10uLL)
    v9 = *(_QWORD *)(v8 + 64);
  if (v7 <= 0xFE)
    v10 = 254;
  else
    v10 = v7;
  if (!a2)
    return 0;
  v11 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v12 = *(_QWORD *)(v6 + 64) + v11;
  if (a2 <= v10)
    goto LABEL_26;
  v13 = v9 + (v12 & ~v11) + 1;
  v14 = 8 * v13;
  if (v13 <= 3)
  {
    v17 = ((a2 - v10 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      v15 = *(_DWORD *)(a1 + v13);
      if (!v15)
        goto LABEL_26;
      goto LABEL_17;
    }
    if (v17 > 0xFF)
    {
      v15 = *(unsigned __int16 *)(a1 + v13);
      if (!*(_WORD *)(a1 + v13))
        goto LABEL_26;
      goto LABEL_17;
    }
    if (v17 < 2)
    {
LABEL_26:
      if (v7 >= 0xFE)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
      v20 = *(unsigned __int8 *)(((v12 + a1) & ~v11) + v9);
      if (v20 >= 2)
        return (v20 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v15 = *(unsigned __int8 *)(a1 + v13);
  if (!*(_BYTE *)(a1 + v13))
    goto LABEL_26;
LABEL_17:
  v18 = (v15 - 1) << v14;
  if (v13 > 3)
    v18 = 0;
  if ((_DWORD)v13)
  {
    if (v13 <= 3)
      v19 = v13;
    else
      v19 = 4;
    __asm { BR              X12 }
  }
  return v10 + v18 + 1;
}

void sub_190A1B90C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;
  size_t v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_190A45D78() - 8);
  v10 = *(_QWORD *)(v9 + 64);
  if (v10 <= 0x10)
    v10 = 16;
  if (v8 <= 0xFE)
    v11 = 254;
  else
    v11 = v8;
  v12 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v13 = ((*(_QWORD *)(v7 + 64) + v12) & ~v12) + v10 + 1;
  if (a3 <= v11)
  {
    v14 = 0u;
  }
  else if (v13 <= 3)
  {
    v16 = ((a3 - v11 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
    if (HIWORD(v16))
    {
      v14 = 4u;
    }
    else if (v16 >= 0x100)
    {
      v14 = 2;
    }
    else
    {
      v14 = v16 > 1;
    }
  }
  else
  {
    v14 = 1u;
  }
  if (v11 < a2)
  {
    v15 = ~v11 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v17 = v15 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if ((_DWORD)v13 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if ((_DWORD)v13 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_190A1BB98()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x190A1BB80);
}

void sub_190A1BBA8()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x190A1BB80);
}

void sub_190A1BBB0()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x190A1BB80);
}

uint64_t sub_190A1BBBC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190A45D78();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_190A1BC28(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = a2[1];
      if (v6 >= 2)
      {
        *a1 = *a2;
        a1[1] = v6;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
    }
    else
    {
      v8 = sub_190A45D78();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unint64_t sub_190A1BCFC(uint64_t a1)
{
  unint64_t result;
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    result = *(_QWORD *)(a1 + 8);
    if (result >= 2)
      return swift_bridgeObjectRelease();
  }
  else
  {
    v3 = sub_190A45D78();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

_QWORD *sub_190A1BD60(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = a2[1];
    if (v4 >= 2)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
  }
  else
  {
    v5 = sub_190A45D78();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_190A1BE08(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;

  if (a1 != a2)
  {
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (a2[1] >= 2uLL)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
    }
    else
    {
      v5 = sub_190A45D78();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_190A1BED4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_190A45D78();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_190A1BF5C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v6 = sub_190A45D78();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t type metadata accessor for _ActivitySystemActionForegroundColorModifier()
{
  uint64_t result;

  result = qword_1EE1EA570;
  if (!qword_1EE1EA570)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_190A1C03C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for _ActivitySystemActionForegroundColorModifier();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s7SwiftUI4ViewP9WidgetKitE23activityForegroundColoryQrAA0H0VSgF_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v10;

  v6 = type metadata accessor for _ActivitySystemActionForegroundColorModifier();
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v8 + *(int *)(v6 + 20)) = a1;
  swift_retain();
  MEMORY[0x194012838](v8, a2, v6, a3);
  return sub_190A1C03C((uint64_t)v8);
}

uint64_t sub_190A1C154(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  type metadata accessor for _ActivitySystemActionForegroundColorModifier();
  v2 = sub_190A46894();
  v4[0] = v1;
  v4[1] = sub_190A1C1B0();
  return MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v2, v4);
}

unint64_t sub_190A1C1B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EA568;
  if (!qword_1EE1EA568)
  {
    v1 = type metadata accessor for _ActivitySystemActionForegroundColorModifier();
    result = MEMORY[0x19401429C](&unk_190A5CC28, v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EA568);
  }
  return result;
}

uint64_t *sub_190A1C1F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_190A46C30();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_190A1C2D0(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_190A46C30();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  return swift_release();
}

_QWORD *sub_190A1C340(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_190A46C30();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

_QWORD *sub_190A1C3F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_190950F44((uint64_t)a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_190A46C30();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

char *sub_190A1C4BC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_190A46C30();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_190A1C564(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_190950F44((uint64_t)a1);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_190A46C30();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_release();
  return a1;
}

uint64_t sub_190A1C624()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190A1C630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED6F8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_190A1C6BC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190A1C6C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED6F8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

void sub_190A1C744()
{
  unint64_t v0;

  sub_190950FB0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_190A1C7B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190A1C7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;

  v7 = sub_190A46C30();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v3 + *(int *)(a2 + 20));
  if (v11)
  {
    sub_19096EC18((uint64_t)v10);
    sub_190A47674();
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v20 = v13 | ((unint64_t)v15 << 32);
    v21 = v17 | ((unint64_t)v19 << 32);
  }
  else
  {
    v20 = 0;
    v21 = 0;
  }
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA500);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a3, a1, v22);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA4B0);
  v24 = a3 + *(int *)(result + 36);
  *(_QWORD *)v24 = v20;
  *(_QWORD *)(v24 + 8) = v21;
  *(_BYTE *)(v24 + 16) = v11 == 0;
  return result;
}

uint64_t sub_190A1C8F8()
{
  sub_190A13770();
  return sub_190A46C54();
}

ValueMetadata *type metadata accessor for _ActivitySystemActionForegroundColorPreferenceKey()
{
  return &type metadata for _ActivitySystemActionForegroundColorPreferenceKey;
}

unint64_t sub_190A1C934()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EA4A8;
  if (!qword_1EE1EA4A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EA4B0);
    v2[0] = sub_1908AF598(&qword_1EE1EA4F8, &qword_1EE1EA500, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1908AF598(&qword_1EE1EA508, &qword_1EE1EA510, MEMORY[0x1E0CDCAD0]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EA4A8);
  }
  return result;
}

unint64_t sub_190A1C9D4()
{
  unint64_t result;

  result = qword_1EE1EA588;
  if (!qword_1EE1EA588)
  {
    result = MEMORY[0x19401429C](&unk_190A5CCB4, &type metadata for _ActivitySystemActionForegroundColorPreferenceKey);
    atomic_store(result, (unint64_t *)&qword_1EE1EA588);
  }
  return result;
}

uint64_t WidgetConfiguration.hiddenBySensitiveUI(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_190A1CAE0(a1, a2, a3, (uint64_t)&unk_1E2CD3560, (uint64_t)sub_190A1CA3C);
}

uint64_t sub_190A1CA2C()
{
  return swift_deallocObject();
}

uint64_t sub_190A1CA3C(uint64_t a1)
{
  uint64_t v1;
  char v3;
  uint64_t result;

  v3 = *(_BYTE *)(v1 + 16);
  result = type metadata accessor for WidgetDescriptor(0);
  *(_BYTE *)(a1 + *(int *)(result + 96)) = v3;
  return result;
}

uint64_t WidgetConfiguration.showsInSystemSpaces()()
{
  return sub_190A2B704((uint64_t)sub_190A0A3FC, 0);
}

uint64_t WidgetConfiguration.disablesControlStateCaching()()
{
  return sub_190A2B704((uint64_t)sub_190A1CA9C, 0);
}

uint64_t sub_190A1CA9C(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for WidgetDescriptor(0);
  *(_BYTE *)(a1 + *(int *)(result + 120)) = 1;
  return result;
}

uint64_t WidgetConfiguration.showsContextualMenu(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_190A1CAE0(a1, a2, a3, (uint64_t)&unk_1E2CD3588, (uint64_t)sub_190A0A314);
}

uint64_t sub_190A1CAE0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;

  v7 = swift_allocObject();
  *(_BYTE *)(v7 + 16) = a1;
  sub_190A2B704(a5, v7);
  return swift_release();
}

uint64_t sub_190A1CB58()
{
  return swift_deallocObject();
}

uint64_t WidgetConfiguration.hiddenControl()()
{
  return sub_190A2B704((uint64_t)sub_190A1CB80, 0);
}

uint64_t sub_190A1CB80(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for WidgetDescriptor(0);
  *(_BYTE *)(a1 + *(int *)(result + 108)) = 1;
  *(_BYTE *)(a1 + *(int *)(result + 104)) = 1;
  return result;
}

uint64_t WidgetConfiguration.showsInControlCenter()()
{
  return sub_190A2B704((uint64_t)sub_190A0A3FC, 0);
}

uint64_t sub_190A1CBD0()
{
  sub_19090D084();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190A1CC1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_190A1CC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 48) + *(_QWORD *)(a4 + 48));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1908C5090;
  return v11(a1, a2, a3, a4);
}

uint64_t EnvironmentValues._widgetDisplayProperties.getter()
{
  uint64_t v1;

  sub_1908FF90C();
  sub_190A46C3C();
  return v1;
}

void EnvironmentValues._widgetDisplayProperties.setter(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  unsigned int *v8;
  id v9;
  uint64_t v10;
  void *v11;

  v2 = sub_190A466FC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1;
  sub_1908FF90C();
  v6 = a1;
  sub_190A46C48();
  objc_msgSend(v6, sel_scale);
  sub_190A469F0();
  v7 = objc_msgSend(v6, sel_colorGamut);
  if (!v7)
  {
    v8 = (unsigned int *)MEMORY[0x1E0CD8AA0];
LABEL_5:
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *v8, v2);
    sub_190A469D8();

    return;
  }
  if (v7 == (id)1)
  {
    v8 = (unsigned int *)MEMORY[0x1E0CD8A98];
    goto LABEL_5;
  }
  v9 = v7;
  type metadata accessor for CHSDisplayGamut(0);
  v11 = v9;
  sub_190A48730();
  __break(1u);
}

uint64_t sub_190A1CE08()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D5E0 = result;
  return result;
}

uint64_t sub_190A1CE2C()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B2C8);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D5C8 = v0;
  unk_1ECF6D5D0 = 0xD000000000000018;
  qword_1ECF6D5D8 = 0x8000000190A60FC0;
  return result;
}

id static CHSWidgetDisplayPropertiesCodable.wrapping(_:)(void *a1)
{
  double v2;

  objc_msgSend(a1, sel_scale);
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CHSWidgetDisplayPropertiesCodable()), sel_initWithScale_colorGamut_, objc_msgSend(a1, sel_colorGamut), v2);
}

uint64_t type metadata accessor for CHSWidgetDisplayPropertiesCodable()
{
  return objc_opt_self();
}

uint64_t sub_190A1CF20()
{
  if (qword_1ECF6B1C8 != -1)
    swift_once();
  return swift_retain();
}

id sub_190A1CF60@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  double v4;
  id result;

  v3 = *a1;
  objc_msgSend(*a1, sel_scale);
  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CHSWidgetDisplayPropertiesCodable()), sel_initWithScale_colorGamut_, objc_msgSend(v3, sel_colorGamut), v4);
  *a2 = result;
  return result;
}

uint64_t sub_190A1CFE0()
{
  uint64_t v0;

  if (qword_1ECF6B350 != -1)
    swift_once();
  v0 = qword_1ECF6D5C8;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

id sub_190A1D054()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D10188]), sel_initWithScale_colorGamut_, 1, 0.0);
  qword_1ECF6D540 = (uint64_t)result;
  return result;
}

id sub_190A1D08C@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_1ECF6B1D8 != -1)
    swift_once();
  v2 = (void *)qword_1ECF6D540;
  *a1 = qword_1ECF6D540;
  return v2;
}

uint64_t sub_190A1D0DC()
{
  sub_190A1DCBC();
  return sub_190A4681C();
}

void (*EnvironmentValues._widgetDisplayProperties.modify(uint64_t a1))(void **a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 8) = v1;
  sub_1908FF90C();
  sub_190A46C3C();
  return sub_190A1D174;
}

void sub_190A1D174(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    EnvironmentValues._widgetDisplayProperties.setter(v3);

  }
  else
  {
    EnvironmentValues._widgetDisplayProperties.setter(v2);
  }
}

uint64_t sub_190A1D1C8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C616373;
  if (*v0 != 1)
    v1 = 0x6D6147726F6C6F63;
  if (*v0)
    return v1;
  else
    return 1635017060;
}

uint64_t sub_190A1D21C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_190A1DD14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190A1D240()
{
  sub_190A1D58C();
  return sub_190A48868();
}

uint64_t sub_190A1D268()
{
  sub_190A1D58C();
  return sub_190A48874();
}

uint64_t CHSWidgetDisplayPropertiesCodable.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return CHSWidgetDisplayPropertiesCodable.init(from:)(a1);
}

uint64_t CHSWidgetDisplayPropertiesCodable.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  double v13;
  void *v14;
  objc_class *v15;
  void *v16;
  uint64_t v17;
  objc_class *v18;
  uint64_t v19;
  objc_super v20;
  double v21;
  unint64_t v22;
  objc_super v23;
  char v24;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B3D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190A1D58C();
  sub_190A48838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    type metadata accessor for CHSWidgetDisplayPropertiesCodable();
    swift_deallocPartialClassInstance();
    return (uint64_t)v9;
  }
  LOBYTE(v21) = 0;
  if ((sub_190A485B0() & 1) == 0)
  {
    v24 = 1;
    sub_1909314D8();
    sub_190A48580();
    v13 = v21;
    LOBYTE(v21) = 2;
    v17 = sub_190A48574();
    v18 = (objc_class *)type metadata accessor for CHSWidgetDisplayPropertiesCodable();
    v23.receiver = v3;
    v23.super_class = v18;
    v9 = objc_msgSendSuper2(&v23, sel_initWithScale_colorGamut_, v17, v13);
LABEL_9:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return (uint64_t)v9;
  }
  v24 = 0;
  sub_19091BF34();
  sub_190A48580();
  v11 = *(_QWORD *)&v21;
  v10 = v22;
  sub_1908AB890(0, (unint64_t *)&unk_1ECF6A620);
  sub_1908AB890(0, (unint64_t *)&unk_1ECF6A9A8);
  result = sub_190A47FB0();
  v14 = (void *)result;
  if (result)
  {
    v15 = (objc_class *)type metadata accessor for CHSWidgetDisplayPropertiesCodable();
    v20.receiver = v3;
    v20.super_class = v15;
    v16 = v14;
    v9 = objc_msgSendSuper2(&v20, sel_initWithWidgetDisplayProperties_, v14);
    sub_1908B53FC(v11, v10);

    goto LABEL_9;
  }
  __break(1u);
  return result;
}

unint64_t sub_190A1D58C()
{
  unint64_t result;

  result = qword_1ECF6B368;
  if (!qword_1ECF6B368)
  {
    result = MEMORY[0x19401429C](&unk_190A5CF60, &type metadata for CHSWidgetDisplayPropertiesCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B368);
  }
  return result;
}

uint64_t sub_190A1D5D0(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[8];
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6B118);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190A1D58C();
  sub_190A48850();
  objc_msgSend(v3, sel_scale);
  v12 = v9;
  v11[7] = 1;
  sub_19091E728();
  sub_190A48640();
  if (!v2)
  {
    objc_msgSend(v3, sel_colorGamut);
    v11[6] = 2;
    sub_190A48634();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

BOOL static CHSWidgetDisplayPropertiesCodable.< infix(_:_:)(void *a1, uint64_t a2)
{
  return objc_msgSend(a1, sel_comparedTo_, a2) == (id)-1;
}

id CHSWidgetDisplayPropertiesCodable.__allocating_init(displayConfiguration:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithDisplayConfiguration_, a1);

  return v3;
}

void CHSWidgetDisplayPropertiesCodable.init(displayConfiguration:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CHSWidgetDisplayPropertiesCodable.__allocating_init(widgetDisplayProperties:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithWidgetDisplayProperties_, a1);

  return v3;
}

void CHSWidgetDisplayPropertiesCodable.init(widgetDisplayProperties:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_190A1D8D8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CHSWidgetDisplayPropertiesCodable.__allocating_init(size:scale:colorGamut:)(uint64_t a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithSize_scale_colorGamut_, a1, a2, a3, a4);
}

void CHSWidgetDisplayPropertiesCodable.init(size:scale:colorGamut:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CHSWidgetDisplayPropertiesCodable.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CHSWidgetDisplayPropertiesCodable();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190A1D9F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  id v5;
  uint64_t result;

  v5 = objc_allocWithZone((Class)type metadata accessor for CHSWidgetDisplayPropertiesCodable());
  result = CHSWidgetDisplayPropertiesCodable.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_190A1DA40(_QWORD *a1)
{
  return sub_190A1D5D0(a1);
}

BOOL sub_190A1DA60(id *a1, _QWORD *a2)
{
  return objc_msgSend(*a1, sel_comparedTo_, *a2) == (id)-1;
}

uint64_t sub_190A1DA8C()
{
  return sub_190A1DE90(&qword_1ECF6B398, MEMORY[0x1E0DEFD00]);
}

uint64_t method lookup function for CHSWidgetDisplayPropertiesCodable()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CHSWidgetDisplayPropertiesCodable.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of CHSWidgetDisplayPropertiesCodable.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t storeEnumTagSinglePayload for CHSWidgetDisplayPropertiesCodable.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190A1DB54 + 4 * byte_190A5CD85[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_190A1DB88 + 4 * asc_190A5CD80[v4]))();
}

uint64_t sub_190A1DB88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A1DB90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190A1DB98);
  return result;
}

uint64_t sub_190A1DBA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190A1DBACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190A1DBB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A1DBB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CHSWidgetDisplayPropertiesCodable.CodingKeys()
{
  return &type metadata for CHSWidgetDisplayPropertiesCodable.CodingKeys;
}

ValueMetadata *_s37WidgetDisplayPropertiesEnvironmentKeyVMa()
{
  return &_s37WidgetDisplayPropertiesEnvironmentKeyVN;
}

unint64_t sub_190A1DBE8()
{
  unint64_t result;

  result = qword_1EE1EEDD0;
  if (!qword_1EE1EEDD0)
  {
    result = MEMORY[0x19401429C](&unk_190A5CF38, &type metadata for CHSWidgetDisplayPropertiesCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EEDD0);
  }
  return result;
}

unint64_t sub_190A1DC30()
{
  unint64_t result;

  result = qword_1ECF6B378;
  if (!qword_1ECF6B378)
  {
    result = MEMORY[0x19401429C](&unk_190A5CEA8, &type metadata for CHSWidgetDisplayPropertiesCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B378);
  }
  return result;
}

unint64_t sub_190A1DC78()
{
  unint64_t result;

  result = qword_1ECF6B370;
  if (!qword_1ECF6B370)
  {
    result = MEMORY[0x19401429C]("Yg'R", &type metadata for CHSWidgetDisplayPropertiesCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B370);
  }
  return result;
}

unint64_t sub_190A1DCBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1E6900;
  if (!qword_1EE1E6900)
  {
    v1 = sub_1908AB890(255, (unint64_t *)&unk_1ECF6A9A8);
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEFD00], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1E6900);
  }
  return result;
}

uint64_t sub_190A1DD14(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6147726F6C6F63 && a2 == 0xEA00000000007475)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

ValueMetadata *type metadata accessor for WidgetDisplayPropertiesKey()
{
  return &type metadata for WidgetDisplayPropertiesKey;
}

uint64_t sub_190A1DE6C()
{
  return sub_190A1DE90(&qword_1ECF6B388, (uint64_t)&protocol conformance descriptor for CHSWidgetDisplayPropertiesCodable);
}

uint64_t sub_190A1DE90(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CHSWidgetDisplayPropertiesCodable();
    result = MEMORY[0x19401429C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190A1DECC()
{
  return sub_190A1DE90(&qword_1ECF6B390, (uint64_t)"=h'R");
}

uint64_t sub_190A1DEF0()
{
  return sub_190A1DE90(&qword_1ECF6B380, (uint64_t)&protocol conformance descriptor for CHSWidgetDisplayPropertiesCodable);
}

ValueMetadata *type metadata accessor for AssuredWidgetMetadataModifier()
{
  return &type metadata for AssuredWidgetMetadataModifier;
}

uint64_t sub_190A1DF2C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190A1DF3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v3 = v2;
  v24 = a1;
  v27 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BA80);
  v23 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BA58);
  MEMORY[0x1E0C80A78](v26);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BAA0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BA38);
  v13 = MEMORY[0x1E0C80A78](v25);
  v15 = (uint64_t *)((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v23 - v16;
  v18 = *(_QWORD *)v3;
  v19 = *(unsigned __int8 *)(v3 + 8);
  sub_1909701C8(v18, v19);
  sub_19096F250(v18, v19, &v28);
  sub_1909701CC(v18, v19);
  if (v28 == 7)
  {
    v23 = sub_190A47650();
    MEMORY[0x1E0C80A78](v23);
    *(&v23 - 2) = v24;
    sub_1908AF598(&qword_1ECF6BA78, &qword_1ECF6BA80, MEMORY[0x1E0CDBF10]);
    sub_190A472E4();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v15 + *(int *)(v25 + 36), v12, v9);
    *v15 = v23;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_190A1E318((uint64_t)v15, (uint64_t)v17);
    sub_190A1E360((uint64_t)v17, (uint64_t)v8);
    swift_storeEnumTagMultiPayload();
    sub_190A1E254();
    sub_190A46F90();
    return sub_190A1E3A8((uint64_t)v17);
  }
  else
  {
    v21 = v23;
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    v22(v6, v24, v4);
    v22(v8, (uint64_t)v6, v4);
    swift_storeEnumTagMultiPayload();
    sub_190A1E254();
    sub_1908AF598(&qword_1ECF6BA78, &qword_1ECF6BA80, MEMORY[0x1E0CDBF10]);
    sub_190A46F90();
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  }
}

unint64_t sub_190A1E254()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1ECF6BA30;
  if (!qword_1ECF6BA30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6BA38);
    v2 = sub_1908AF598(&qword_1ECF6BA98, &qword_1ECF6BAA0, MEMORY[0x1E0CDD1E0]);
    v3[0] = MEMORY[0x1E0CDF5B0];
    v3[1] = v2;
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1ECF6BA30);
  }
  return result;
}

uint64_t sub_190A1E2D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BA80);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_190A1E318(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BA38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_190A1E360(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BA38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_190A1E3A8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BA38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_190A1E3EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6BA08;
  if (!qword_1ECF6BA08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6BA70);
    v2[0] = sub_190A1E254();
    v2[1] = sub_1908AF598(&qword_1ECF6BA78, &qword_1ECF6BA80, MEMORY[0x1E0CDBF10]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6BA08);
  }
  return result;
}

WidgetKit::ArchiveVersion_optional __swiftcall ArchiveVersion.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (WidgetKit::ArchiveVersion_optional)rawValue;
}

uint64_t ArchiveVersion.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_190A1E498()
{
  unint64_t result;

  result = qword_1EE1EEDD8;
  if (!qword_1EE1EEDD8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ArchiveVersion, &type metadata for ArchiveVersion);
    atomic_store(result, (unint64_t *)&qword_1EE1EEDD8);
  }
  return result;
}

uint64_t sub_190A1E4DC()
{
  sub_190A1E650();
  return sub_190A47C38();
}

uint64_t sub_190A1E538()
{
  sub_190A1E650();
  return sub_190A47C20();
}

uint64_t storeEnumTagSinglePayload for ArchiveVersion(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190A1E5D0 + 4 * byte_190A5D0D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190A1E604 + 4 * byte_190A5D0D0[v4]))();
}

uint64_t sub_190A1E604(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A1E60C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190A1E614);
  return result;
}

uint64_t sub_190A1E620(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190A1E628);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190A1E62C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A1E634(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArchiveVersion()
{
  return &type metadata for ArchiveVersion;
}

unint64_t sub_190A1E650()
{
  unint64_t result;

  result = qword_1EE1EEDE0;
  if (!qword_1EE1EEDE0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ArchiveVersion, &type metadata for ArchiveVersion);
    atomic_store(result, (unint64_t *)&qword_1EE1EEDE0);
  }
  return result;
}

uint64_t sub_190A1E694(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    MEMORY[0x1E0C80A78](a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return sub_190A47920();
  }
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  MEMORY[0x1E0C80A78](TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return sub_190A47920();
}

uint64_t sub_190A1E848@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_1909703E8, a1);
}

uint64_t sub_190A1E85C()
{
  sub_1909703E8();
  return sub_190A46C48();
}

id sub_190A1E8A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  char v4;
  id v5;

  v2 = v1 + *(int *)(a1 + 56);
  v3 = *(id *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_1908D1B68(*(id *)v2, v4);
  v5 = sub_19096E4E8(v3, v4);
  sub_1908D1BB0(v3, v4);
  return v5;
}

uint64_t sub_190A1E900@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = v2 + *(int *)(a1 + 60);
  v5 = *(_QWORD *)v4;
  v6 = *(_BYTE *)(v4 + 8);
  sub_1908D1B74(*(_QWORD *)v4, v6);
  sub_19096F94C(v5, v6, a2);
  return sub_1908CE654(v5, v6);
}

uint64_t sub_190A1E958(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  v2 = v1 + *(int *)(a1 + 64);
  v3 = *(_QWORD *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_1908D1B74(*(_QWORD *)v2, v4);
  v5 = sub_19096EA60(v3, v4);
  sub_1908CE654(v3, v4);
  return v5 & 1;
}

double sub_190A1E9B4(uint64_t a1)
{
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  double v7;
  double v8;

  v2 = sub_190A1E8A4(a1);
  v3 = objc_msgSend(v2, sel_nestedContentMetrics);

  if (!v3)
    goto LABEL_4;
  sub_1908AB890(0, &qword_1EE1EC908);
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6CD48);
  sub_190A23A90();
  v4 = sub_190A47A28();

  v5 = (void *)sub_190A480DC();
  v6 = sub_1908B7978(v5, v4);

  swift_bridgeObjectRelease();
  if (v6)
  {
    objc_msgSend(v6, sel_size);
  }
  else
  {
LABEL_4:
    v6 = sub_190A1E8A4(a1);
    objc_msgSend(v6, sel_size);
  }
  v8 = v7;

  return v8;
}

uint64_t sub_190A1EAD0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  char v6;

  if ((sub_190A1E958(a1) & 1) != 0)
  {
    sub_190A47644();
  }
  else
  {
    sub_190A4765C();
    sub_190A1E900(a1, &v6);
  }
  v4 = sub_190A47668();
  result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t AccessoryWidgetGroup.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *KeyPath;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  _QWORD v41[2];
  void *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  void *v51;
  char v52;

  v34 = a2;
  v29 = a1[2];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EEDF0);
  sub_190A46894();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EEDF8);
  sub_190A46894();
  sub_190A46894();
  v27 = (void *)a1[3];
  v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EEE00);
  v28 = a1[5];
  v42 = v27;
  v43 = v3;
  v44 = v28;
  v45 = sub_190A1EFC0();
  sub_190A470C8();
  sub_190A476D4();
  sub_190A46894();
  swift_getTupleTypeMetadata2();
  v4 = sub_190A47914();
  MEMORY[0x19401429C](MEMORY[0x1E0CE0680], v4);
  v5 = sub_190A4786C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - v7;
  v9 = sub_190A46894();
  v31 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - v10;
  v12 = sub_190A46894();
  v33 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v30 = (uint64_t)&v27 - v16;
  sub_190A46EC4();
  v35 = v29;
  v36 = v27;
  v37 = a1[4];
  v38 = v28;
  v39 = v32;
  sub_190A47860();
  sub_190A468A0();
  sub_190A47308();
  v17 = MEMORY[0x19401429C](MEMORY[0x1E0CDFCC0], v5);
  sub_190A47554();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  KeyPath = (void *)swift_getKeyPath();
  v19 = swift_getKeyPath();
  v20 = swift_getKeyPath();
  v21 = (void *)swift_getKeyPath();
  v42 = KeyPath;
  LOBYTE(v43) = 0;
  v44 = v19;
  v45 = 0;
  v46 = 0;
  v47 = 0;
  v48 = 0;
  v49 = v20;
  v50 = 0;
  v51 = v21;
  v52 = 0;
  v41[0] = v17;
  v41[1] = MEMORY[0x1E0CDCF90];
  v22 = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v9, v41);
  MEMORY[0x194012838](&v42, v9, &type metadata for LayoutInsetsModifier, v22);
  sub_1908D1BB0(KeyPath, 0);
  sub_19096FF30(v19, 0, 0, 0, 0);
  sub_1908CE654(v20, 0);
  sub_1908D1BB0(v21, 0);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v9);
  v23 = sub_190A21C6C();
  v40[0] = v22;
  v40[1] = v23;
  MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v12, v40);
  v24 = v30;
  sub_1909DA920((uint64_t)v15, v12, v30);
  v25 = *(void (**)(char *, uint64_t))(v33 + 8);
  v25(v15, v12);
  sub_1909D989C(v24, v12, v34);
  return ((uint64_t (*)(uint64_t, uint64_t))v25)(v24, v12);
}

unint64_t sub_190A1EFC0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EEE08;
  if (!qword_1EE1EEE08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EEE00);
    v2[0] = sub_190A1F02C();
    v2[1] = MEMORY[0x1E0CE0400];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EEE08);
  }
  return result;
}

unint64_t sub_190A1F02C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EEE10;
  if (!qword_1EE1EEE10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EEE18);
    v2[0] = sub_190A1F098();
    v2[1] = sub_190A1F224();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EEE10);
  }
  return result;
}

unint64_t sub_190A1F098()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EEE20;
  if (!qword_1EE1EEE20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EEE28);
    v2[0] = sub_190A1F11C();
    v2[1] = sub_1908AF598(&qword_1EE1EEE60, &qword_1EE1EEE68, (uint64_t)&unk_190A5D510);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EEE20);
  }
  return result;
}

unint64_t sub_190A1F11C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EEE30;
  if (!qword_1EE1EEE30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EEE38);
    v2[0] = sub_190A1F1A0();
    v2[1] = sub_1908AF598(&qword_1EE1EEE50, &qword_1EE1EEE58, (uint64_t)&unk_190A5D510);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EEE30);
  }
  return result;
}

unint64_t sub_190A1F1A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EEE40;
  if (!qword_1EE1EEE40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EEE48);
    v2[0] = sub_1908AF598(&qword_1EE1EEE50, &qword_1EE1EEE58, (uint64_t)&unk_190A5D510);
    v2[1] = MEMORY[0x1E0CDCE08];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EEE40);
  }
  return result;
}

unint64_t sub_190A1F224()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EEE70;
  if (!qword_1EE1EEE70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EEE78);
    v2[0] = sub_1908AF598(&qword_1EE1EEE80, &qword_1EE1EEE88, (uint64_t)&unk_190A5D510);
    v2[1] = sub_1908AF598(&qword_1EE1EEE90, &qword_1EE1EEE98, (uint64_t)&unk_190A5D510);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EEE70);
  }
  return result;
}

void sub_190A1F2C8()
{
  type metadata accessor for AccessoryWidgetGroup();
}

uint64_t sub_190A1F328(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(_BYTE *, _QWORD, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t);
  uint64_t v84;
  _BYTE v85[32];

  *(_QWORD *)(v5 - 376) = a1;
  v6 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v5 - 352) = v6;
  *(_QWORD *)(v5 - 336) = *(_QWORD *)(v6 + 64);
  v7 = MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v5 - 368) = &v85[-v8];
  *(_QWORD *)(v5 - 392) = *(_QWORD *)(v2 - 8);
  v9 = v2;
  *(_QWORD *)(v5 - 416) = v2;
  MEMORY[0x1E0C80A78](v7);
  *(_QWORD *)(v5 - 408) = &v85[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EEE00);
  *(_QWORD *)(v5 - 320) = v11;
  v12 = sub_190A1EFC0();
  *(_QWORD *)(v5 - 328) = v12;
  *(_QWORD *)(v5 - 120) = v9;
  *(_QWORD *)(v5 - 112) = v11;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v12;
  *(_QWORD *)(v5 - 312) = sub_190A470C8();
  v13 = sub_190A476D4();
  *(_QWORD *)(v5 - 288) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v5 - 344) = v13;
  MEMORY[0x1E0C80A78](v13);
  *(_QWORD *)(v5 - 400) = &v85[-v14];
  v15 = sub_190A46894();
  *(_QWORD *)(v5 - 296) = v15;
  *(_QWORD *)(v5 - 280) = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)(v5 - 360) = &v85[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)(v5 - 304) = &v85[-v18];
  v19 = sub_190A4774C();
  *(_QWORD *)(v5 - 424) = v19;
  *(_QWORD *)(v5 - 440) = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  *(_QWORD *)(v5 - 456) = &v85[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC00);
  MEMORY[0x1E0C80A78](v21);
  v23 = &v85[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = sub_190A47440();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = &v85[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v29 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v5 - 496) = v29;
  MEMORY[0x1E0C80A78](v26);
  v31 = &v85[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EEDF0);
  *(_QWORD *)(v5 - 264) = v3;
  v32 = sub_190A46894();
  *(_QWORD *)(v5 - 472) = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  *(_QWORD *)(v5 - 488) = &v85[-v33];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EEDF8);
  v34 = sub_190A46894();
  *(_QWORD *)(v5 - 432) = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  *(_QWORD *)(v5 - 480) = &v85[-v35];
  v36 = sub_190A46894();
  *(_QWORD *)(v5 - 448) = v36;
  *(_QWORD *)(v5 - 232) = *(_QWORD *)(v36 - 8);
  v37 = MEMORY[0x1E0C80A78](v36);
  *(_QWORD *)(v5 - 256) = &v85[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v37);
  *(_QWORD *)(v5 - 240) = &v85[-v39];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v29 + 16))(v31, v4, v3);
  v40 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v25 + 104);
  v41 = v25;
  v42 = v24;
  v40(v28, *MEMORY[0x1E0CDD7D0], v24);
  v43 = *MEMORY[0x1E0CDD550];
  v44 = sub_190A47368();
  v45 = *(_QWORD *)(v44 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v45 + 104))(v23, v43, v44);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v23, 0, 1, v44);
  sub_190A473C8();
  sub_190A473EC();
  sub_1908AA544((uint64_t)v23, &qword_1ECF6BC00);
  (*(void (**)(_BYTE *, uint64_t))(v41 + 8))(v28, v42);
  v46 = *(_QWORD *)(v5 - 488);
  v47 = *(_QWORD *)(v5 - 264);
  v48 = *(_QWORD *)(v5 - 248);
  sub_190A475E4();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v5 - 496) + 8))(v31, v47);
  v49 = *(_QWORD *)(v5 - 440);
  v50 = *(_QWORD *)(v5 - 456);
  v51 = *(_QWORD *)(v5 - 424);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v49 + 104))(v50, *MEMORY[0x1E0CDF7D0], v51);
  v52 = MEMORY[0x1E0CDCF80];
  v53 = sub_1908AF598(&qword_1EE1EEFF0, &qword_1EE1EEDF0, MEMORY[0x1E0CDCF80]);
  *(_QWORD *)(v5 - 136) = v48;
  *(_QWORD *)(v5 - 128) = v53;
  v54 = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v32, v5 - 136);
  v55 = *(_QWORD *)(v5 - 480);
  sub_190A474DC();
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v50, v51);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 472) + 8))(v46, v32);
  sub_190A478D8();
  v56 = sub_1908AF598(&qword_1EE1EEFF8, &qword_1EE1EEDF8, v52);
  *(_QWORD *)(v5 - 152) = v54;
  *(_QWORD *)(v5 - 144) = v56;
  v57 = MEMORY[0x1E0CD9C20];
  v84 = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v34, v5 - 152);
  v58 = *(_QWORD *)(v5 - 256);
  sub_190A475FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 432) + 8))(v55, v34);
  v59 = MEMORY[0x1E0CDA228];
  *(_QWORD *)(v5 - 168) = v84;
  *(_QWORD *)(v5 - 160) = v59;
  v60 = *(_QWORD *)(v5 - 448);
  *(_QWORD *)(v5 - 432) = MEMORY[0x19401429C](v57, v60, v5 - 168);
  sub_1909DA920(v58, v60, *(_QWORD *)(v5 - 240));
  v61 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 232) + 8);
  *(_QWORD *)(v5 - 424) = v61;
  v61(v58, v60);
  v62 = *(_QWORD *)(v5 - 376);
  v63 = *(_QWORD *)(v5 - 464);
  v64 = *(_QWORD *)(v5 - 416);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 392) + 16))(*(_QWORD *)(v5 - 408), v63 + *(int *)(v62 + 52), v64);
  v65 = *(_QWORD *)(v5 - 352);
  v66 = *(_QWORD *)(v5 - 368);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16))(v66, v63, v62);
  v67 = (*(unsigned __int8 *)(v65 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  v68 = (char *)swift_allocObject();
  *((_QWORD *)v68 + 2) = *(_QWORD *)(v5 - 264);
  *((_QWORD *)v68 + 3) = v64;
  v69 = *(_QWORD *)(v5 - 384);
  *((_QWORD *)v68 + 4) = *(_QWORD *)(v5 - 248);
  *((_QWORD *)v68 + 5) = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(&v68[v67], v66, v62);
  v70 = *(_QWORD *)(v5 - 400);
  sub_190A476C8();
  sub_190A1E9B4(v62);
  sub_190A478CC();
  *(_QWORD *)(v5 - 176) = MEMORY[0x19401429C](MEMORY[0x1E0CDBF80], *(_QWORD *)(v5 - 312));
  v71 = *(_QWORD *)(v5 - 344);
  v72 = MEMORY[0x19401429C](MEMORY[0x1E0CDF690], v71, v5 - 176);
  v73 = *(_QWORD *)(v5 - 360);
  sub_190A475F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 288) + 8))(v70, v71);
  v74 = MEMORY[0x1E0CD8D70];
  *(_QWORD *)(v5 - 192) = v72;
  *(_QWORD *)(v5 - 184) = v74;
  v75 = *(_QWORD *)(v5 - 296);
  v76 = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v75, v5 - 192);
  v77 = *(_QWORD *)(v5 - 304);
  sub_1909DA920(v73, v75, v77);
  v78 = *(_QWORD *)(v5 - 280);
  v79 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
  v79(v73, v75);
  v80 = *(_QWORD *)(v5 - 240);
  v81 = *(_QWORD *)(v5 - 256);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 232) + 16))(v81, v80, v60);
  *(_QWORD *)(v5 - 120) = v81;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v73, v77, v75);
  *(_QWORD *)(v5 - 112) = v73;
  *(_QWORD *)(v5 - 208) = v60;
  *(_QWORD *)(v5 - 200) = v75;
  *(_QWORD *)(v5 - 224) = *(_QWORD *)(v5 - 432);
  *(_QWORD *)(v5 - 216) = v76;
  sub_190A1E694((uint64_t *)(v5 - 120), 2uLL, v5 - 208);
  v79(v77, v75);
  v82 = *(void (**)(uint64_t, uint64_t))(v5 - 424);
  v82(v80, v60);
  v79(v73, v75);
  return ((uint64_t (*)(uint64_t, uint64_t))v82)(v81, v60);
}

void sub_190A1FC64()
{
  sub_190A1F2C8();
}

uint64_t sub_190A1FC7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v40 = a6;
  v39 = a5;
  v38 = a4;
  v37 = a3;
  v41 = a2;
  v51 = a7;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EEE98);
  MEMORY[0x1E0C80A78](v33);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF000);
  MEMORY[0x1E0C80A78](v31);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EEE78);
  MEMORY[0x1E0C80A78](v45);
  v36 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EEE88);
  MEMORY[0x1E0C80A78](v32);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EEE68);
  MEMORY[0x1E0C80A78](v35);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF008);
  MEMORY[0x1E0C80A78](v49);
  v50 = (uint64_t)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF010);
  MEMORY[0x1E0C80A78](v42);
  v44 = (uint64_t)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF018);
  MEMORY[0x1E0C80A78](v30);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EEE28);
  MEMORY[0x1E0C80A78](v43);
  v34 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EEE18);
  MEMORY[0x1E0C80A78](v48);
  v46 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_190A46E88();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_190A470E0();
  v47 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v17;
  v26 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, v24);
  sub_1909C7510(3);
  sub_190A23AE8();
  sub_190A47E18();
  sub_190A47E60();
  switch(sub_190A47E54())
  {
    case 0:
      v52 = v37;
      v53 = v38;
      v54 = v39;
      v55 = v40;
      type metadata accessor for AccessoryWidgetGroup();
    case 1:
      sub_190A470EC();
      v52 = v37;
      v53 = v38;
      v54 = v39;
      v55 = v40;
      type metadata accessor for AccessoryWidgetGroup();
    case 2:
      sub_190A470EC();
      sub_190A470EC();
      v52 = v37;
      v53 = v38;
      v54 = v39;
      v55 = v40;
      type metadata accessor for AccessoryWidgetGroup();
    case 3:
      sub_190A470EC();
      sub_190A470EC();
      sub_190A470EC();
      sub_1908AAA48((uint64_t)v9, (uint64_t)v11, &qword_1EE1EEE98);
      swift_storeEnumTagMultiPayload();
      sub_1908AF598(&qword_1EE1EEE80, &qword_1EE1EEE88, (uint64_t)&unk_190A5D510);
      sub_1908AF598(&qword_1EE1EEE90, &qword_1EE1EEE98, (uint64_t)&unk_190A5D510);
      v27 = (uint64_t)v36;
      sub_190A46F90();
      sub_1908AAA48(v27, v44, &qword_1EE1EEE78);
      swift_storeEnumTagMultiPayload();
      sub_190A1F098();
      sub_190A1F224();
      v28 = (uint64_t)v46;
      sub_190A46F90();
      sub_1908AA544(v27, &qword_1EE1EEE78);
      sub_1908AAA48(v28, v50, &qword_1EE1EEE18);
      swift_storeEnumTagMultiPayload();
      sub_190A1F02C();
      sub_190A46F90();
      sub_1908AA544(v28, &qword_1EE1EEE18);
      sub_1908AA544((uint64_t)v9, &qword_1EE1EEE98);
      break;
    default:
      swift_storeEnumTagMultiPayload();
      sub_190A1F02C();
      sub_190A46F90();
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v23, v26);
}

uint64_t sub_190A2090C()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_190903624((uint64_t)&unk_1E2CC9BC8);
  result = swift_arrayDestroy();
  qword_1EE1EEDE8 = v0;
  return result;
}

double sub_190A20954()
{
  uint64_t v0;
  id v1;
  char v2;
  id v3;
  id v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  double v17;
  char v18;
  double v19;
  double v20;
  double v21;
  __int128 v22;
  double v23;
  _OWORD v25[2];
  char v26;
  _BYTE v27[40];

  v1 = *(id *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  sub_1908D1B68(*(id *)v0, v2);
  v3 = sub_19096E4E8(v1, v2);
  sub_1908D1BB0(v1, v2);
  v4 = objc_msgSend(v3, sel_widgetGroupMargins);

  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 56);
    v6 = *(_BYTE *)(v0 + 64);
    sub_1908D1B74(v5, v6);
    v7 = sub_19096EA60(v5, v6);
    sub_1908CE654(v5, v6);
    if ((v7 & 1) != 0)
      goto LABEL_10;
    if (qword_1EE1EC580 != -1)
      swift_once();
    v8 = qword_1EE1EEDE8;
    v9 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v10 = objc_msgSend(v9, sel_mainBundle);
    v11 = objc_msgSend(v10, sel_bundleIdentifier);

    if (v11)
    {
      v12 = sub_190A47ADC();
      v14 = v13;

    }
    else
    {
      v14 = 0xE300000000000000;
      v12 = 7104878;
    }
    v18 = sub_1909C71EC(v12, v14, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
    {
LABEL_10:
      objc_msgSend(v4, sel_layoutInsets);
      v17 = v19;
      objc_msgSend(v4, sel_layoutInsets);
      objc_msgSend(v4, sel_layoutInsets);
      objc_msgSend(v4, sel_layoutInsets);

    }
    else
    {
      objc_msgSend(v4, sel_layoutInsets);
      v21 = v20;
      v22 = *(_OWORD *)(v0 + 32);
      v25[0] = *(_OWORD *)(v0 + 16);
      v25[1] = v22;
      v26 = *(_BYTE *)(v0 + 48);
      sub_190A2384C((uint64_t)v25, (uint64_t)v27);
      sub_190A23894((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190A22B0C);
      v23 = sub_19096FD28();
      sub_190A23894((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19096FF30);
      v17 = v21 - v23;
      objc_msgSend(v4, sel_layoutInsets);
      sub_190A23894((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190A22B0C);
      sub_19096FD28();
      sub_190A23894((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19096FF30);
      objc_msgSend(v4, sel_layoutInsets);
      sub_190A23894((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190A22B0C);
      sub_19096FD28();
      sub_190A23894((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19096FF30);
      objc_msgSend(v4, sel_layoutInsets);
      sub_190A23894((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190A22B0C);
      sub_19096FD28();
      sub_190A23894((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19096FF30);

    }
  }
  else
  {
    sub_1908D1B68(v1, v2);
    v15 = sub_19096E4E8(v1, v2);
    sub_1908D1BB0(v1, v2);
    objc_msgSend(v15, sel_safeAreaInsets);

    sub_1908D1B68(v1, v2);
    v16 = sub_19096E4E8(v1, v2);
    sub_1908D1BB0(v1, v2);
    objc_msgSend(v16, sel_safeAreaInsets);

    return 0.0;
  }
  return v17;
}

uint64_t sub_190A20CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v4 = sub_190A20954();
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = sub_190A47308();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EEFD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a2, a1, v12);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EEFD8);
  v14 = a2 + *(int *)(result + 36);
  *(_BYTE *)v14 = v11;
  *(double *)(v14 + 8) = v4;
  *(_QWORD *)(v14 + 16) = v6;
  *(_QWORD *)(v14 + 24) = v8;
  *(_QWORD *)(v14 + 32) = v10;
  *(_BYTE *)(v14 + 40) = 0;
  return result;
}

uint64_t sub_190A20DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v17 = a2;
  v4 = *(_QWORD *)(a1 + 24);
  v24 = *(_QWORD *)(a1 + 16);
  v3 = v24;
  v25 = MEMORY[0x1E0CDFC10];
  v26 = v4;
  v27 = MEMORY[0x1E0CDFC10];
  v28 = *(_QWORD *)(a1 + 32);
  v5 = v28;
  swift_getTupleTypeMetadata();
  v6 = sub_190A47914();
  MEMORY[0x19401429C](MEMORY[0x1E0CE0680], v6);
  v7 = sub_190A47818();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v16 - v12;
  v18 = v3;
  v19 = v4;
  v20 = v5;
  v21 = *(_OWORD *)(a1 + 40);
  v22 = *(_QWORD *)(a1 + 56);
  v23 = v16;
  sub_190A46D38();
  sub_190A4780C();
  MEMORY[0x19401429C](MEMORY[0x1E0CDFB10], v7);
  sub_1909DA920((uint64_t)v11, v7, (uint64_t)v13);
  v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v11, v7);
  sub_1909D989C((uint64_t)v13, v7, v17);
  return ((uint64_t (*)(char *, uint64_t))v14)(v13, v7);
}

void sub_190A20F54(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[32];

  v28[7] = a8;
  v28[6] = *(_QWORD *)(a4 - 8);
  v14 = MEMORY[0x1E0C80A78](a1);
  v28[10] = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v28[4] = (char *)v28 - v17;
  v28[5] = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x1E0C80A78](v16);
  v28[9] = (char *)v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v22 = MEMORY[0x1E0C80A78](v21);
  v28[8] = (char *)v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v28[3] = v26;
  sub_1909DA920(v24, v27, (uint64_t)v28 - v25);
  v28[25] = a2;
  v28[26] = a3;
  v28[27] = a4;
  v28[28] = a5;
  v28[2] = a6;
  v28[29] = a6;
  v28[30] = a7;
  v28[1] = a7;
  type metadata accessor for NestedContent();
}

uint64_t sub_190A210DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  void (*v19)(uint64_t, uint64_t);
  void (*v20)(uint64_t, uint64_t);

  sub_1909DA920(v7 + *(int *)(a1 + 68), v2, v5);
  v10 = *(_QWORD *)(v8 - 304);
  sub_1909DA920(v7 + *(int *)(a1 + 72), v3, v10);
  v11 = *(_QWORD *)(v8 - 272);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v11, v6, v1);
  *(_QWORD *)(v8 - 152) = 0;
  *(_BYTE *)(v8 - 144) = 1;
  *(_QWORD *)(v8 - 136) = v11;
  *(_QWORD *)(v8 - 128) = v8 - 152;
  v12 = *(_QWORD *)(v8 - 296);
  v13 = *(_QWORD *)(v8 - 264);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v13, v5, v2);
  *(_QWORD *)(v8 - 168) = 0;
  *(_BYTE *)(v8 - 160) = 1;
  *(_QWORD *)(v8 - 120) = v13;
  *(_QWORD *)(v8 - 112) = v8 - 168;
  v14 = *(_QWORD *)(v8 - 288);
  v15 = *(_QWORD *)(v8 - 256);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v15, v10, v3);
  *(_QWORD *)(v8 - 104) = v15;
  v16 = MEMORY[0x1E0CDFC10];
  *(_QWORD *)(v8 - 208) = v1;
  *(_QWORD *)(v8 - 200) = v16;
  *(_QWORD *)(v8 - 192) = v2;
  *(_QWORD *)(v8 - 184) = v16;
  v17 = MEMORY[0x1E0CDFBE8];
  *(_QWORD *)(v8 - 176) = v3;
  *(_QWORD *)(v8 - 248) = *(_QWORD *)(v8 - 312);
  *(_QWORD *)(v8 - 240) = v17;
  *(_QWORD *)(v8 - 232) = *(_QWORD *)(v8 - 320);
  *(_QWORD *)(v8 - 224) = v17;
  *(_QWORD *)(v8 - 216) = *(_QWORD *)(v8 - 328);
  sub_190A1E694((uint64_t *)(v8 - 136), 5uLL, v8 - 208);
  v18 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v18(v10, v3);
  v19 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v19(v5, v2);
  v20 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v20(v6, v1);
  v18(*(_QWORD *)(v8 - 256), v3);
  v19(*(_QWORD *)(v8 - 264), v2);
  return ((uint64_t (*)(_QWORD, uint64_t))v20)(*(_QWORD *)(v8 - 272), v1);
}

void _s9WidgetKit09AccessoryA5GroupV5label7contentACyxq_GxyXE_q_yXEtcfC_0()
{
  type metadata accessor for AccessoryWidgetGroup();
}

uint64_t sub_190A212C8(int *a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = v3 + a1[14];
  *(_QWORD *)v5 = swift_getKeyPath();
  *(_BYTE *)(v5 + 8) = 0;
  v6 = v3 + a1[15];
  *(_QWORD *)v6 = swift_getKeyPath();
  *(_BYTE *)(v6 + 8) = 0;
  v7 = v3 + a1[16];
  *(_QWORD *)v7 = swift_getKeyPath();
  *(_BYTE *)(v7 + 8) = 0;
  v8 = v2();
  return v1(v8);
}

void AccessoryWidgetGroup<>.init(_:content:)()
{
  AccessoryWidgetGroup.init(label:content:)();
}

uint64_t sub_190A213B0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void AccessoryWidgetGroup<>.init<A>(_:content:)()
{
  AccessoryWidgetGroup.init(label:content:)();
}

uint64_t sub_190A21424()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

void AccessoryWidgetGroup<>.init(_:systemImage:content:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EEEA8);
  sub_1908AF598(qword_1EE1EEEB0, &qword_1EE1EEEA8, MEMORY[0x1E0CDF8C8]);
  AccessoryWidgetGroup.init(label:content:)();
}

uint64_t sub_190A214EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190A21524()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_190A47770();
}

void AccessoryWidgetGroup<>.init<A>(_:systemImage:content:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EEEA8);
  sub_1908AF598(qword_1EE1EEEB0, &qword_1EE1EEEA8, MEMORY[0x1E0CDF8C8]);
  AccessoryWidgetGroup.init(label:content:)();
}

uint64_t sub_190A21650()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t sub_190A2168C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  return sub_190A4777C();
}

void AccessoryWidgetGroup<>.init(_:image:content:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EEEA8);
  sub_1908AF598(qword_1EE1EEEB0, &qword_1EE1EEEA8, MEMORY[0x1E0CDF8C8]);
  AccessoryWidgetGroup.init(label:content:)();
}

uint64_t sub_190A217D4()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = sub_190A46450();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t sub_190A21820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v6 = sub_190A46450();
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t))(v8 + 16))((char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_190A47788();
}

void AccessoryWidgetGroup<>.init<A>(_:image:content:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EEEA8);
  sub_1908AF598(qword_1EE1EEEB0, &qword_1EE1EEEA8, MEMORY[0x1E0CDF8C8]);
  AccessoryWidgetGroup.init(label:content:)();
}

uint64_t sub_190A21984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_190A46450();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v2, v0);
}

uint64_t sub_190A219D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v7 = sub_190A46450();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a2, v7);
  return sub_190A47794();
}

void static AccessoryWidgetGroupStyle.circular.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void static AccessoryWidgetGroupStyle.roundedSquare.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static AccessoryWidgetGroupStyle.automatic.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t View.accessoryWidgetGroupStyle(_:)()
{
  swift_getKeyPath();
  sub_190A474F4();
  return swift_release();
}

uint64_t sub_190A21B58()
{
  sub_190A238CC();
  return sub_190A46C3C();
}

uint64_t View.AccessoryWidgetGroupStyle(_:)()
{
  return View.accessoryWidgetGroupStyle(_:)();
}

double sub_190A21BB8@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;

  sub_1909701D4();
  sub_190A46C3C();
  result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_190A21C08@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_1909703E8, a1);
}

uint64_t sub_190A21C1C()
{
  sub_1909703E8();
  return sub_190A46C48();
}

unint64_t sub_190A21C6C()
{
  unint64_t result;

  result = qword_1EE1EEEA0;
  if (!qword_1EE1EEEA0)
  {
    result = MEMORY[0x19401429C](&unk_190A5D4C0, &type metadata for LayoutInsetsModifier);
    atomic_store(result, (unint64_t *)&qword_1EE1EEEA0);
  }
  return result;
}

void type metadata accessor for AccessoryWidgetGroup()
{
  JUMPOUT(0x1940141E8);
}

uint64_t sub_190A21CC4@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_190942064, a1);
}

uint64_t sub_190A21CD8()
{
  return sub_190A21524();
}

uint64_t sub_190A21CEC()
{
  uint64_t v0;

  return sub_190A2168C(*(_QWORD *)(v0 + 48));
}

uint64_t sub_190A21D00()
{
  uint64_t v0;

  return sub_190A21820(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_190A21D10()
{
  uint64_t *v0;

  return sub_190A219D4(v0[6], v0[7], v0[2], v0[3]);
}

uint64_t sub_190A21D20@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_190A238CC();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_190A21D6C()
{
  sub_190A238CC();
  return sub_190A46C48();
}

uint64_t sub_190A21DB4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190A21DE8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_190A21E80(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((v10 + (v9 & ~v8) + 39) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
    swift_retain();
  }
  else
  {
    v15 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v16 = ((unint64_t)a2 + v9) & v15;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v15, v16, v5);
    v17 = (((unint64_t)v4 + v9) & v15) + v10;
    v18 = v16 + v10;
    v19 = (v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    v20 = (v18 + 7) & 0xFFFFFFFFFFFFFFF8;
    v21 = *(id *)v20;
    v22 = *(_BYTE *)(v20 + 8);
    sub_1908D1B68(*(id *)v20, v22);
    *(_QWORD *)v19 = v21;
    *(_BYTE *)(v19 + 8) = v22;
    v23 = (v17 + 23) & 0xFFFFFFFFFFFFFFF8;
    v24 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
    v25 = *(_QWORD *)v24;
    v26 = *(_BYTE *)(v24 + 8);
    sub_1908D1B74(*(_QWORD *)v24, v26);
    *(_QWORD *)v23 = v25;
    *(_BYTE *)(v23 + 8) = v26;
    v27 = (v17 + 39) & 0xFFFFFFFFFFFFFFF8;
    v28 = (v18 + 39) & 0xFFFFFFFFFFFFFFF8;
    v29 = *(_QWORD *)v28;
    v30 = *(_BYTE *)(v28 + 8);
    sub_1908D1B74(*(_QWORD *)v28, v30);
    *(_QWORD *)v27 = v29;
    *(_BYTE *)(v27 + 8) = v30;
  }
  return v4;
}

uint64_t sub_190A22000(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = v7 + *(_QWORD *)(v6 + 64);
  sub_1908D1BB0(*(id *)((v8 + 7) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8));
  sub_1908CE654(*(_QWORD *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
  return sub_1908CE654(*(_QWORD *)((v8 + 39) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v8 + 39) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_190A220A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = v11 + v13;
  v15 = v12 + v13;
  v16 = (v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v12 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(id *)v17;
  LOBYTE(v12) = *(_BYTE *)(v17 + 8);
  sub_1908D1B68(*(id *)v17, v12);
  *(_QWORD *)v16 = v18;
  *(_BYTE *)(v16 + 8) = v12;
  v19 = (v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)v20;
  LOBYTE(v12) = *(_BYTE *)(v20 + 8);
  sub_1908D1B74(*(_QWORD *)v20, v12);
  *(_QWORD *)v19 = v21;
  *(_BYTE *)(v19 + 8) = v12;
  v22 = (v14 + 39) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_QWORD *)v23;
  LOBYTE(v12) = *(_BYTE *)(v23 + 8);
  sub_1908D1B74(*(_QWORD *)v23, v12);
  *(_QWORD *)v22 = v24;
  *(_BYTE *)(v22 + 8) = v12;
  return a1;
}

uint64_t sub_190A221AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = v11 + v13;
  v15 = v12 + v13;
  v16 = (v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v12 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(id *)v17;
  LOBYTE(v12) = *(_BYTE *)(v17 + 8);
  sub_1908D1B68(*(id *)v17, v12);
  v19 = *(void **)v16;
  v20 = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v16 = v18;
  *(_BYTE *)(v16 + 8) = v12;
  sub_1908D1BB0(v19, v20);
  v21 = (v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  LOBYTE(v12) = *(_BYTE *)(v22 + 8);
  sub_1908D1B74(*(_QWORD *)v22, v12);
  v24 = *(_QWORD *)v21;
  v25 = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v21 = v23;
  *(_BYTE *)(v21 + 8) = v12;
  sub_1908CE654(v24, v25);
  v26 = (v14 + 39) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  v28 = *(_QWORD *)v27;
  LOBYTE(v12) = *(_BYTE *)(v27 + 8);
  sub_1908D1B74(*(_QWORD *)v27, v12);
  v29 = *(_QWORD *)v26;
  v30 = *(_BYTE *)(v26 + 8);
  *(_QWORD *)v26 = v28;
  *(_BYTE *)(v26 + 8) = v12;
  sub_1908CE654(v29, v30);
  return a1;
}

uint64_t sub_190A222DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = v11 + v13;
  v15 = v12 + v13;
  v16 = (v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v16 = v18;
  v19 = (v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  *(_QWORD *)v19 = v21;
  v22 = (v14 + 39) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v19) = *(_BYTE *)(v23 + 8);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_BYTE *)(v22 + 8) = v19;
  return a1;
}

uint64_t sub_190A223BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = v11 + v13;
  v15 = v12 + v13;
  v16 = (v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)v17;
  LOBYTE(v17) = *(_BYTE *)(v17 + 8);
  v19 = *(void **)v16;
  v20 = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v16 = v18;
  *(_BYTE *)(v16 + 8) = v17;
  sub_1908D1BB0(v19, v20);
  v21 = (v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  LOBYTE(v22) = *(_BYTE *)(v22 + 8);
  v24 = *(_QWORD *)v21;
  v25 = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v21 = v23;
  *(_BYTE *)(v21 + 8) = v22;
  sub_1908CE654(v24, v25);
  v26 = (v14 + 39) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
  v28 = *(_QWORD *)v27;
  LOBYTE(v27) = *(_BYTE *)(v27 + 8);
  v29 = *(_QWORD *)v26;
  v30 = *(_BYTE *)(v26 + 8);
  *(_QWORD *)v26 = v28;
  *(_BYTE *)(v26 + 8) = v27;
  sub_1908CE654(v29, v30);
  return a1;
}

uint64_t sub_190A224C0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v19;
  unsigned int v20;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= v6)
    v9 = *(_DWORD *)(v5 + 84);
  else
    v9 = *(_DWORD *)(v7 + 84);
  if (v9 <= 0xFE)
    v9 = 254;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = *(_QWORD *)(v5 + 64) + v10;
  v12 = *(_QWORD *)(v7 + 64);
  if (v9 >= a2)
  {
    if (v6 == v9)
    {
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 48))(a1, *(unsigned int *)(v5 + 84), v4);
    }
    else
    {
      v19 = (v11 + a1) & ~v10;
      if (v8 == v9)
      {
        return (*(uint64_t (**)(uint64_t))(v7 + 48))(v19);
      }
      else
      {
        v20 = *(unsigned __int8 *)(((v12 + v19 + 7) & 0xFFFFFFFFFFFFF8) + 8);
        if (v20 > 1)
          return (v20 ^ 0xFF) + 1;
        else
          return 0;
      }
    }
  }
  else
  {
    v13 = ((v12 + (v11 & ~(_DWORD)v10) + 39) & 0xFFFFFFF8) + 9;
    v14 = (a2 - v9 + 255) >> (8 * v13);
    if (v13 < 4)
      v15 = v14 + 1;
    else
      v15 = 2;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
    return ((uint64_t (*)(void))((char *)&loc_190A2256C + 4 * byte_190A5D218[v17]))();
  }
}

void sub_190A2261C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE)
    v7 = 254;
  v8 = ((*(_QWORD *)(v6 + 64)
       + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
       + 39) & 0xFFFFFFFFFFFFFFF8)
     + 9;
  if (v7 >= a3)
  {
    v11 = 0u;
    if (v7 >= a2)
      goto LABEL_19;
  }
  else
  {
    if (v8 <= 3)
      v9 = ((a3 - v7 + 255) >> (8 * v8)) + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (v7 >= a2)
LABEL_19:
      __asm { BR              X0 }
  }
  if (v8 >= 4)
    v12 = ~v7 + a2;
  else
    v12 = (~(_BYTE)v7 + a2);
  bzero(a1, v8);
  if ((_DWORD)v8 == 1)
    *a1 = v12;
  else
    *(_DWORD *)a1 = v12;
  __asm { BR              X10 }
}

void sub_190A22760()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x190A227FCLL);
}

void sub_190A22768(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x190A22770);
  JUMPOUT(0x190A227FCLL);
}

void sub_190A227B4()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x190A227FCLL);
}

void sub_190A227BC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x190A227FCLL);
}

uint64_t sub_190A227C4(uint64_t a1, int a2, int a3)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_WORD *)(v12 + v13) = 0;
  if (!a2)
    JUMPOUT(0x190A227FCLL);
  if (v6 == v10)
  {
    v3 = *(uint64_t (**)(uint64_t))(v9 + 56);
    v4 = v12;
  }
  else
  {
    v4 = (v11 + v12) & v7;
    if (a3 != v10)
      JUMPOUT(0x190A227D0);
    v3 = *(uint64_t (**)(uint64_t))(v8 + 56);
  }
  return v3(v4);
}

ValueMetadata *type metadata accessor for AccessoryWidgetGroupStyle()
{
  return &type metadata for AccessoryWidgetGroupStyle;
}

uint64_t sub_190A22828(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  _QWORD v10[6];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EEDF0);
  sub_190A46894();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EEDF8);
  sub_190A46894();
  sub_190A46894();
  v10[2] = v1;
  v10[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EEE00);
  v10[4] = v2;
  v10[5] = sub_190A1EFC0();
  sub_190A470C8();
  sub_190A476D4();
  sub_190A46894();
  swift_getTupleTypeMetadata2();
  v3 = sub_190A47914();
  MEMORY[0x19401429C](MEMORY[0x1E0CE0680], v3);
  v4 = sub_190A4786C();
  v5 = sub_190A46894();
  v6 = sub_190A46894();
  v10[0] = MEMORY[0x19401429C](MEMORY[0x1E0CDFCC0], v4);
  v10[1] = MEMORY[0x1E0CDCF90];
  v7 = MEMORY[0x1E0CD9C20];
  v9[0] = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v5, v10);
  v9[1] = sub_190A21C6C();
  return MEMORY[0x19401429C](v7, v6, v9);
}

uint64_t sub_190A229C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EEF38);
  v2 = sub_190A46894();
  v4[0] = v1;
  v4[1] = sub_1908AF598(qword_1EE1EEF40, &qword_1EE1EEF38, MEMORY[0x1E0CDCF80]);
  return MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v2, v4);
}

uint64_t _s9WidgetKit25AccessoryWidgetGroupStyleV5StyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190A22A8C + 4 * byte_190A5D22C[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_190A22AC0 + 4 * byte_190A5D227[v4]))();
}

uint64_t sub_190A22AC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A22AC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190A22AD0);
  return result;
}

uint64_t sub_190A22ADC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190A22AE4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190A22AE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A22AF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessoryWidgetGroupStyle.Style()
{
  return &type metadata for AccessoryWidgetGroupStyle.Style;
}

uint64_t sub_190A22B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
    return swift_retain();
  return result;
}

void destroy for LayoutInsetsModifier(uint64_t a1)
{
  sub_1908D1BB0(*(id *)a1, *(_BYTE *)(a1 + 8));
  sub_19096FF30(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  sub_1908CE654(*(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  sub_1908D1BB0(*(id *)(a1 + 72), *(_BYTE *)(a1 + 80));
}

uint64_t initializeWithCopy for LayoutInsetsModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;

  v2 = a2;
  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B68(*(id *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v9 = *(_QWORD *)(v2 + 40);
  v10 = *(_BYTE *)(v2 + 48);
  sub_190A22B0C(v6, v7, v8, v9, v10);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  v11 = *(_QWORD *)(v2 + 56);
  LOBYTE(v7) = *(_BYTE *)(v2 + 64);
  sub_1908D1B74(v11, v7);
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v7;
  v12 = *(void **)(v2 + 72);
  LOBYTE(v2) = *(_BYTE *)(v2 + 80);
  sub_1908D1B68(v12, v2);
  *(_QWORD *)(a1 + 72) = v12;
  *(_BYTE *)(a1 + 80) = v2;
  return a1;
}

uint64_t assignWithCopy for LayoutInsetsModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  char v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  void *v22;
  char v23;

  v2 = a2;
  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B68(*(id *)a2, v5);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1908D1BB0(v6, v7);
  v8 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  v10 = *(_QWORD *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 40);
  v12 = *(_BYTE *)(v2 + 48);
  sub_190A22B0C(v8, v9, v10, v11, v12);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_BYTE *)(a1 + 48) = v12;
  sub_19096FF30(v13, v14, v15, v16, v17);
  v18 = *(_QWORD *)(v2 + 56);
  LOBYTE(v9) = *(_BYTE *)(v2 + 64);
  sub_1908D1B74(v18, v9);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v18;
  *(_BYTE *)(a1 + 64) = v9;
  sub_1908CE654(v19, v20);
  v21 = *(void **)(v2 + 72);
  LOBYTE(v2) = *(_BYTE *)(v2 + 80);
  sub_1908D1B68(v21, v2);
  v22 = *(void **)(a1 + 72);
  v23 = *(_BYTE *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = v21;
  *(_BYTE *)(a1 + 80) = v2;
  sub_1908D1BB0(v22, v23);
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for LayoutInsetsModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  void *v19;
  char v20;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1908D1BB0(v6, v7);
  v8 = *((_BYTE *)a2 + 48);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_BYTE *)(a1 + 48);
  v14 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_OWORD *)(a1 + 32) = v14;
  *(_BYTE *)(a1 + 48) = v8;
  sub_19096FF30(v9, v10, v11, v12, v13);
  v15 = *((_BYTE *)a2 + 64);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_BYTE *)(a1 + 64) = v15;
  sub_1908CE654(v16, v17);
  v18 = *((_BYTE *)a2 + 80);
  v19 = *(void **)(a1 + 72);
  v20 = *(_BYTE *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = a2[9];
  *(_BYTE *)(a1 + 80) = v18;
  sub_1908D1BB0(v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for LayoutInsetsModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 81))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LayoutInsetsModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 81) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LayoutInsetsModifier()
{
  return &type metadata for LayoutInsetsModifier;
}

uint64_t sub_190A22E88()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_190A22E90()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_190A22F3C(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;

  v4 = a1;
  v5 = a3[3];
  v6 = *(_QWORD *)(a3[2] - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = *(_QWORD *)(v7 + 64) + v11;
  v13 = (*(_BYTE *)(v7 + 80) | *(_BYTE *)(v6 + 80) | v11);
  if (v13 <= 7
    && ((v12 + (v9 & ~v8)) & ~(unint64_t)v11) + *(_QWORD *)(v10 + 64) <= 0x18
    && ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v6 + 80) | v11) & 0x100000) == 0)
  {
    v17 = ~v8;
    v18 = ~(unint64_t)v11;
    v21 = a3[4];
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v19 = ((unint64_t)a2 + v9) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v17, v19, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((((unint64_t)v4 + v9) & v17) + v12) & v18, (v19 + v12) & v18, v21);
  }
  else
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v13 + 16) & ~v13));
    swift_retain();
  }
  return v4;
}

uint64_t sub_190A23070(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *(_QWORD *)(a2[2] - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2[3] - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(a2[4] - 8) + 8))((v7
                                                                                       + *(_QWORD *)(v6 + 64)
                                                                                       + *(unsigned __int8 *)(*(_QWORD *)(a2[4] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[4] - 8) + 80));
}

uint64_t sub_190A230F0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  v12 = *(_QWORD *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 16))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_190A23198(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  v12 = *(_QWORD *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 24))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_190A23240(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  v12 = *(_QWORD *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 32))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_190A232E8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  v12 = *(_QWORD *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 40))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_190A23390(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  uint64_t v22;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = a3[4];
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) > v8)
    v8 = *(_DWORD *)(v10 + 84);
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = *(_QWORD *)(v4 + 64) + v11;
  v13 = *(_QWORD *)(v6 + 64);
  v14 = *(unsigned __int8 *)(v10 + 80);
  v15 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_25;
  v16 = ((v13 + v14 + (v12 & ~v11)) & ~v14) + *(_QWORD *)(v10 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_25;
      goto LABEL_16;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_25;
      goto LABEL_16;
    }
    if (v19 < 2)
    {
LABEL_25:
      if (v8)
      {
        if (v5 == v8)
          return (*(uint64_t (**)(void))(v4 + 48))();
        v22 = (v12 + a1) & ~v11;
        if (v7 == v8)
          return (*(uint64_t (**)(uint64_t))(v6 + 48))(v22);
        else
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v10 + 48))((v22 + v13 + v14) & ~v14, *(unsigned int *)(v10 + 84), v9);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_25;
LABEL_16:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if ((_DWORD)v16)
  {
    if (v16 <= 3)
      v21 = ((v13 + v14 + (v12 & ~(_DWORD)v11)) & ~(_DWORD)v14) + *(_DWORD *)(v10 + 64);
    else
      v21 = 4;
    __asm { BR              X11 }
  }
  return v8 + v20 + 1;
}

void sub_190A2354C(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  size_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(a4[2] - 8);
  v6 = *(_QWORD *)(a4[3] - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(a4[4] - 8);
  if (*(_DWORD *)(v8 + 84) > v7)
    v7 = *(_DWORD *)(v8 + 84);
  v9 = ((*(_QWORD *)(v6 + 64)
       + *(unsigned __int8 *)(v8 + 80)
       + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
     + *(_QWORD *)(v8 + 64);
  if (a3 > v7)
  {
    if (v9 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0u;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v13 = v11 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X21 }
}

void type metadata accessor for NestedContent()
{
  JUMPOUT(0x1940141E8);
}

unint64_t sub_190A237A8()
{
  unint64_t result;

  result = qword_1EE1EEFC8;
  if (!qword_1EE1EEFC8)
  {
    result = MEMORY[0x19401429C](&unk_190A5D498, &type metadata for AccessoryWidgetGroupStyle.Style);
    atomic_store(result, (unint64_t *)&qword_1EE1EEFC8);
  }
  return result;
}

uint64_t sub_190A237EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190A237FC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_190A23838(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_190A20F54(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1);
}

uint64_t sub_190A2384C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EEFE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_190A23894(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

unint64_t sub_190A238CC()
{
  unint64_t result;

  result = qword_1EE1EEFE8;
  if (!qword_1EE1EEFE8)
  {
    result = MEMORY[0x19401429C](&unk_190A5D588, &type metadata for AccessoryWidgetGroupStyleEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_1EE1EEFE8);
  }
  return result;
}

void sub_190A23910()
{
  type metadata accessor for AccessoryWidgetGroup();
}

uint64_t sub_190A23950(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *(unsigned __int8 *)(*((_QWORD *)a1 - 1) + 80);
  v5 = v2 + ((v4 + 48) & ~v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v5, v1);
  (*(void (**)(uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5 + a1[13]);
  sub_1908D1BB0(*(id *)(v5 + a1[14]), *(_BYTE *)(v5 + a1[14] + 8));
  sub_1908CE654(*(_QWORD *)(v5 + a1[15]), *(_BYTE *)(v5 + a1[15] + 8));
  sub_1908CE654(*(_QWORD *)(v5 + a1[16]), *(_BYTE *)(v5 + a1[16] + 8));
  return swift_deallocObject();
}

void sub_190A23A08()
{
  type metadata accessor for AccessoryWidgetGroup();
}

uint64_t sub_190A23A48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return sub_190A1FC7C(v1, v2 + ((v8 + 48) & ~v8), v4, v5, v6, v7, v3);
}

unint64_t sub_190A23A90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EE350;
  if (!qword_1EE1EE350)
  {
    v1 = sub_1908AB890(255, &qword_1EE1EC908);
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EE350);
  }
  return result;
}

unint64_t sub_190A23AE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EF020;
  if (!qword_1EE1EF020)
  {
    v1 = sub_190A470E0();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDC430], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EF020);
  }
  return result;
}

unint64_t sub_190A23B30()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EAF98;
  if (!qword_1EE1EAF98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EAFA0);
    v2[0] = MEMORY[0x1E0CDF5B0];
    v2[1] = MEMORY[0x1E0CDCE08];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EAF98);
  }
  return result;
}

uint64_t sub_190A23B94()
{
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t sub_190A23BC4()
{
  swift_release();
  swift_release();
  return swift_release();
}

ValueMetadata *type metadata accessor for AccessoryWidgetGroupStyleEnvironmentKey()
{
  return &type metadata for AccessoryWidgetGroupStyleEnvironmentKey;
}

uint64_t sub_190A23C04()
{
  uint64_t v0;
  uint64_t v1;

  swift_getTupleTypeMetadata();
  v0 = sub_190A47914();
  MEMORY[0x19401429C](MEMORY[0x1E0CE0680], v0);
  v1 = sub_190A47818();
  return MEMORY[0x19401429C](MEMORY[0x1E0CDFB10], v1);
}

unint64_t sub_190A23C9C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EF028;
  if (!qword_1EE1EF028)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EEFD8);
    v2[0] = sub_1908AF598(&qword_1EE1EF030, &qword_1EE1EEFD0, MEMORY[0x1E0CDBF10]);
    v2[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EF028);
  }
  return result;
}

id WidgetAuxiliaryViewMetadata.Graphic.platformImage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  id v11;
  uint64_t v13;

  v1 = v0;
  v2 = sub_190A47248();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190A47260();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == *MEMORY[0x1E0CDCD08])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    v11 = sub_190A23E84();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else if (v10 == *MEMORY[0x1E0CDCD00])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    return *(id *)v9;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  return v11;
}

id sub_190A23E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v14;

  v0 = sub_190A47230();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v14 - v5;
  v7 = sub_190A47218();
  sub_190A4723C();
  v8 = 0;
  if ((*(unsigned int (**)(char *, uint64_t))(v1 + 88))(v6, v0) == *MEMORY[0x1E0CDCCE0])
  {
    (*(void (**)(_BYTE *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
    (*(void (**)(_BYTE *, uint64_t))(v1 + 96))(v4, v0);
    if ((*v4 & 1) != 0)
    {
      sub_190A4720C();
      v9 = (void *)sub_190A47AC4();
      swift_bridgeObjectRelease();
      v10 = (void *)objc_opt_self();
      if ((v7 & 0x100000000) != 0)
        v11 = objc_msgSend(v10, sel__systemImageNamed_, v9);
      else
        v11 = objc_msgSend(v10, sel__systemImageNamed_variableValue_withConfiguration_, v9, 0, *(float *)&v7);
      v8 = v11;

    }
    else if ((v7 & 0x100000000) != 0)
    {
      sub_190A4720C();
      v12 = (void *)sub_190A47AC4();
      swift_bridgeObjectRelease();
      v8 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v12);

    }
    else
    {
      sub_190A24070();
      sub_190A4720C();
      v8 = (id)sub_190A480D0();
    }
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  return v8;
}

unint64_t sub_190A24070()
{
  unint64_t result;

  result = qword_1EE1EF038;
  if (!qword_1EE1EF038)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE1EF038);
  }
  return result;
}

uint64_t Preview.init<A, B>(_:as:using:widget:contentStates:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  char v16;
  _QWORD *v17;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v19;
  _QWORD *v20;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)@<X0>(uint64_t *@<X8>);
  _QWORD *v27;
  char v28;
  _QWORD v29[8];

  v16 = *a3;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a9;
  v17[3] = a10;
  v17[4] = a11;
  v17[5] = a12;
  v17[6] = a5;
  v17[7] = a6;
  v24 = a9;
  v25 = a11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v23);
  v19 = *(_QWORD *)(a9 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v19 + 16))(boxed_opaque_existential_1, a4, a9);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a9;
  v20[3] = a10;
  v20[4] = a11;
  v20[5] = a12;
  v20[6] = a7;
  v20[7] = a8;
  v26 = sub_190991F48;
  v27 = v17;
  v28 = v16;
  sub_1908B4BBC(&v23, (uint64_t)v29);
  v29[5] = &unk_1EE1EF048;
  v29[6] = v20;
  sub_190A24384();
  sub_190A4648C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(a4, a9);
}

uint64_t sub_190A241D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190A241FC(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v5[2] = a3;
  v5[3] = a5;
  v8 = (uint64_t (*)(void))((char *)a1 + *a1);
  v6 = (_QWORD *)swift_task_alloc();
  v5[4] = v6;
  *v6 = v5;
  v6[1] = sub_190A24258;
  return v8();
}

uint64_t sub_190A24258()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  swift_task_dealloc();
  swift_getAssociatedTypeWitness();
  v1 = sub_190A483D0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v3 + 8))(v1);
}

uint64_t sub_190A242F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v6 = (int *)v0[6];
  v5 = v0[7];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_190911770;
  return ((uint64_t (*)(int *, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE1EF040 + dword_1EE1EF040))(v6, v5, v2, v3, v4);
}

unint64_t sub_190A24384()
{
  unint64_t result;

  result = qword_1EE1EF050[0];
  if (!qword_1EE1EF050[0])
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ActivityPreviewSource, &type metadata for ActivityPreviewSource);
    atomic_store(result, qword_1EE1EF050);
  }
  return result;
}

uint64_t static PreviewActivityBuilder.buildExpression(_:)(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_190A24584(AssociatedTypeWitness, AssociatedTypeWitness);
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  swift_allocObject();
  v4 = sub_190A47C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5, a1, AssociatedTypeWitness);
  sub_190A47D04();
  return v4;
}

uint64_t static PreviewActivityBuilder.buildPartialBlock(accumulated:next:)()
{
  swift_getAssociatedTypeWitness();
  return sub_190A47CA4();
}

uint64_t static PreviewActivityBuilder.buildArray(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  v0 = sub_190A47D04();
  v1 = sub_190A47D04();
  v2 = MEMORY[0x1E0DEAF38];
  MEMORY[0x19401429C](MEMORY[0x1E0DEAF38], v1);
  MEMORY[0x19401429C](v2, v0);
  return sub_190A47BF0();
}

uint64_t sub_190A24584(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6BDD0);
  else
    return sub_190A48688();
}

uint64_t sub_190A245D0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for PreviewActivityBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PreviewActivityBuilder);
}

uint64_t CodableColor.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = a3 & 1;
  return result;
}

uint64_t CodableColor.color.getter()
{
  uint64_t v0;
  uint64_t v2;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
    return 0;
  v2 = sub_190A47680();
  return MEMORY[0x1940128D4](v2);
}

id CodableColor.uiColor.getter()
{
  uint64_t v0;
  id v1;
  void *v2;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
    return 0;
  v2 = (void *)sub_190A47680();
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithCGColor_, v2);

  return v1;
}

uint64_t CodableColor.resolved.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CodableColor.resolved.setter(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)v3 = result;
  *(_QWORD *)(v3 + 8) = a2;
  *(_BYTE *)(v3 + 16) = a3 & 1;
  return result;
}

uint64_t (*CodableColor.resolved.modify())()
{
  return nullsub_1;
}

BOOL static CodableColor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(a1 + 16) & 1) == 0)
    return (*(_BYTE *)(a2 + 16) & 1) == 0 && (sub_190A4768C() & 1) != 0;
  return (*(_BYTE *)(a2 + 16) & 1) != 0;
}

uint64_t sub_190A24730()
{
  return 0x6465766C6F736572;
}

uint64_t sub_190A24748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6465766C6F736572 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_190A486DC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_190A247DC()
{
  sub_190A2493C();
  return sub_190A48868();
}

uint64_t sub_190A24804()
{
  sub_190A2493C();
  return sub_190A48874();
}

uint64_t CodableColor.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD v10[3];
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EA598);
  v10[0] = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v6 = v1[1];
  v8 = *((_BYTE *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190A2493C();
  sub_190A48850();
  v10[1] = v7;
  v10[2] = v6;
  v11 = v8;
  sub_19090AE70();
  sub_190A485EC();
  return (*(uint64_t (**)(char *, uint64_t))(v10[0] + 8))(v5, v3);
}

unint64_t sub_190A2493C()
{
  unint64_t result;

  result = qword_1EE1EB1E0;
  if (!qword_1EE1EB1E0)
  {
    result = MEMORY[0x19401429C](&unk_190A5D770, &type metadata for CodableColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EB1E0);
  }
  return result;
}

uint64_t CodableColor.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  __int128 v11;
  char v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1EA6D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190A2493C();
  sub_190A48838();
  if (!v2)
  {
    sub_19090AEB4();
    sub_190A4852C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v12;
    *(_OWORD *)a2 = v11;
    *(_BYTE *)(a2 + 16) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

BOOL sub_190A24AA8(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(a1 + 16) & 1) == 0)
    return (*(_BYTE *)(a2 + 16) & 1) == 0 && (sub_190A4768C() & 1) != 0;
  return *(_BYTE *)(a2 + 16) != 0;
}

uint64_t sub_190A24B0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CodableColor.init(from:)(a1, a2);
}

uint64_t sub_190A24B20(_QWORD *a1)
{
  return CodableColor.encode(to:)(a1);
}

__n128 __swift_memcpy17_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CodableColor(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CodableColor(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CodableColor()
{
  return &type metadata for CodableColor;
}

uint64_t storeEnumTagSinglePayload for CodableColor.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_190A24BE4 + 4 * byte_190A5D608[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_190A24C04 + 4 * byte_190A5D60D[v4]))();
}

_BYTE *sub_190A24BE4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_190A24C04(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190A24C0C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190A24C14(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190A24C1C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190A24C24(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CodableColor.CodingKeys()
{
  return &type metadata for CodableColor.CodingKeys;
}

unint64_t sub_190A24C44()
{
  unint64_t result;

  result = qword_1EE1EF0D8;
  if (!qword_1EE1EF0D8)
  {
    result = MEMORY[0x19401429C](&unk_190A5D748, &type metadata for CodableColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EF0D8);
  }
  return result;
}

unint64_t sub_190A24C8C()
{
  unint64_t result;

  result = qword_1EE1EB1F0;
  if (!qword_1EE1EB1F0)
  {
    result = MEMORY[0x19401429C](&unk_190A5D6B8, &type metadata for CodableColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EB1F0);
  }
  return result;
}

unint64_t sub_190A24CD4()
{
  unint64_t result;

  result = qword_1EE1EB1E8;
  if (!qword_1EE1EB1E8)
  {
    result = MEMORY[0x19401429C](&unk_190A5D6E0, &type metadata for CodableColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EB1E8);
  }
  return result;
}

id ModifyControlStateRequest.control.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_control);
}

uint64_t ModifyControlStateRequest.state.getter()
{
  return swift_retain();
}

id ModifyControlStateRequest.__allocating_init(control:state:)(uint64_t a1, uint64_t a2)
{
  return sub_190A256B8(a1, a2, &OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_control, &OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_state);
}

id ModifyControlStateRequest.init(control:state:)(uint64_t a1, uint64_t a2)
{
  return sub_190A25740(a1, a2, &OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_control, &OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_state, type metadata accessor for ModifyControlStateRequest);
}

uint64_t type metadata accessor for ModifyControlStateRequest()
{
  return objc_opt_self();
}

uint64_t static ModifyControlStateRequest.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_1EE1EF0E0;
}

uint64_t static ModifyControlStateRequest.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EE1EF0E0 = a1;
  return result;
}

uint64_t (*static ModifyControlStateRequest.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_190A24ED0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD v7[5];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_control);
  v4 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_state);
  v7[3] = sub_190A462E8();
  v7[4] = sub_190A26A74(&qword_1EE1EB678, MEMORY[0x1E0D0F868]);
  v7[0] = v5;
  swift_retain();
  sub_190A480C4();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

id ModifyControlStateRequest.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ModifyControlStateRequest.init(coder:)(a1);
}

id ModifyControlStateRequest.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  char *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD *v20;
  uint64_t v21;
  objc_super v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v25 = *MEMORY[0x1E0C80C00];
  sub_1908AB890(0, &qword_1EE1EBF40);
  v4 = v2;
  v5 = sub_190A48088();
  if (!v5)
  {

    if (qword_1EE1EB680 != -1)
      swift_once();
    v9 = sub_190A465A0();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EE1FD748);
    v6 = a1;
    v10 = sub_190A46588();
    v11 = sub_190A47F50();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v12 = 138543362;
      if (objc_msgSend(v6, sel_error))
      {
        v14 = _swift_stdlib_bridgeErrorToNSError();
        v24 = v14;
        sub_190A48178();
      }
      else
      {
        v24 = 0;
        sub_190A48178();
        v14 = 0;
      }
      *v13 = v14;

      _os_log_impl(&dword_1908A7000, v10, v11, "Unable to decode state for control=(missing identity): %{public}@", v12, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
      swift_arrayDestroy();
      MEMORY[0x194014398](v13, -1, -1);
      MEMORY[0x194014398](v12, -1, -1);

    }
    else
    {

    }
    goto LABEL_20;
  }
  v6 = (id)v5;
  sub_190A462E8();
  sub_190A26A74(&qword_1EE1EB720, MEMORY[0x1E0D0F880]);
  sub_190A480B8();
  v7 = v24;
  if (!v24)
  {

    if (qword_1EE1EB680 != -1)
      swift_once();
    v15 = sub_190A465A0();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EE1FD748);
    v16 = a1;
    v17 = sub_190A46588();
    v18 = sub_190A47F50();
    if (!os_log_type_enabled(v17, v18))
    {

LABEL_21:
      type metadata accessor for ModifyControlStateRequest();
      swift_deallocPartialClassInstance();
      return 0;
    }
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v19 = 138543362;
    if (objc_msgSend(v16, sel_error))
    {
      v21 = _swift_stdlib_bridgeErrorToNSError();
      v24 = v21;
      sub_190A48178();
    }
    else
    {
      v24 = 0;
      sub_190A48178();
      v21 = 0;
    }
    *v20 = v21;

    _os_log_impl(&dword_1908A7000, v17, v18, "Unable to decode state for control=(missing identity): %{public}@", v19, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
    swift_arrayDestroy();
    MEMORY[0x194014398](v20, -1, -1);
    MEMORY[0x194014398](v19, -1, -1);

LABEL_20:
    goto LABEL_21;
  }
  *(_QWORD *)&v4[OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_control] = v6;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_state] = v7;

  v23.receiver = v4;
  v23.super_class = (Class)type metadata accessor for ModifyControlStateRequest();
  v8 = objc_msgSendSuper2(&v23, sel_init);

  return v8;
}

void ModifyControlStateRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ModifyControlStateRequest.__deallocating_deinit()
{
  return sub_1908C3A7C(type metadata accessor for ModifyControlStateRequest);
}

uint64_t static ControlsConfigurationXPCContainer.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_1EE1EF0E1;
}

uint64_t static ControlsConfigurationXPCContainer.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EE1EF0E1 = a1;
  return result;
}

uint64_t (*static ControlsConfigurationXPCContainer.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id ControlsConfigurationXPCContainer.__allocating_init(controls:tokens:)(uint64_t a1, uint64_t a2)
{
  return sub_190A256B8(a1, a2, &OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_controls, &OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_tokens);
}

id sub_190A256B8(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  objc_class *v4;
  char *v9;
  objc_super v11;

  v9 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v9[*a3] = a1;
  *(_QWORD *)&v9[*a4] = a2;
  v11.receiver = v9;
  v11.super_class = v4;
  return objc_msgSendSuper2(&v11, sel_init);
}

id ControlsConfigurationXPCContainer.init(controls:tokens:)(uint64_t a1, uint64_t a2)
{
  return sub_190A25740(a1, a2, &OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_controls, &OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_tokens, type metadata accessor for ControlsConfigurationXPCContainer);
}

id sub_190A25740(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, uint64_t (*a5)(void))
{
  char *v5;
  objc_super v7;

  *(_QWORD *)&v5[*a3] = a1;
  *(_QWORD *)&v5[*a4] = a2;
  v7.receiver = v5;
  v7.super_class = (Class)a5();
  return objc_msgSendSuper2(&v7, sel_init);
}

void sub_190A25780(void *a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  sub_1908AB890(0, &qword_1EE1EBF40);
  v2 = (void *)sub_190A47C50();
  v3 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v2, v3);

  sub_19098BCC8((unint64_t *)&unk_1EE1EF108, MEMORY[0x1E0DEFCF8]);
  v4 = (void *)sub_190A47A1C();
  v5 = (id)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

}

id ControlsConfigurationXPCContainer.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ControlsConfigurationXPCContainer.init(coder:)(a1);
}

id ControlsConfigurationXPCContainer.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  sub_1908AB890(0, &qword_1EE1EBF40);
  v4 = v2;
  v5 = sub_190A480AC();
  if (!v5)
  {

    goto LABEL_7;
  }
  v6 = v5;
  sub_1908AB890(0, &qword_1ECF6D310);
  v7 = sub_190A480A0();
  if (!v7
    || (v13 = v7,
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF118),
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF120),
        (swift_dynamicCast() & 1) == 0))
  {

    swift_bridgeObjectRelease();
LABEL_7:
    type metadata accessor for ControlsConfigurationXPCContainer();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v8 = v12;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_controls] = v6;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_tokens] = v8;

  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for ControlsConfigurationXPCContainer();
  v9 = objc_msgSendSuper2(&v11, sel_init);

  return v9;
}

void ControlsConfigurationXPCContainer.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_190A25B10()
{
  _BYTE *v0;

  if (*v0)
    return 0x736E656B6F74;
  else
    return 0x736C6F72746E6F63;
}

uint64_t sub_190A25B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_190A26C8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190A25B6C()
{
  sub_190A26AD4();
  return sub_190A48868();
}

uint64_t sub_190A25B94()
{
  sub_190A26AD4();
  return sub_190A48874();
}

id ControlsConfigurationXPCContainer.__deallocating_deinit()
{
  return sub_1908C3A7C(type metadata accessor for ControlsConfigurationXPCContainer);
}

uint64_t sub_190A25C00(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF128);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190A26AD4();
  sub_190A48850();
  v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_controls);
  HIBYTE(v10) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF138);
  sub_190A26B94((unint64_t *)&unk_1EE1EF140, &qword_1EE1EB6E0, MEMORY[0x1E0D0FDE8], MEMORY[0x1E0DEAF10]);
  sub_190A48640();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_tokens);
    HIBYTE(v10) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF120);
    sub_190A26B18();
    sub_190A48640();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id ControlsConfigurationXPCContainer.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ControlsConfigurationXPCContainer.init(from:)(a1);
}

id ControlsConfigurationXPCContainer.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v13;
  objc_class *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  objc_super v18;
  char v19;
  uint64_t v20;

  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF160);
  v4 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190A26AD4();
  v17 = v1;
  v8 = v7;
  sub_190A48838();
  if (v2)
  {
    v11 = v17;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

    type metadata accessor for ControlsConfigurationXPCContainer();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v9 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF138);
    v19 = 0;
    sub_190A26B94((unint64_t *)&unk_1EE1EF168, &qword_1EE1EB7B0, MEMORY[0x1E0D0FDF0], MEMORY[0x1E0DEAF40]);
    v10 = v16;
    sub_190A48580();
    v13 = v17;
    *(_QWORD *)&v17[OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_controls] = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF120);
    v19 = 1;
    sub_190A26C10();
    sub_190A48580();
    *(_QWORD *)&v13[OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_tokens] = v20;

    v14 = (objc_class *)type metadata accessor for ControlsConfigurationXPCContainer();
    v18.receiver = v13;
    v18.super_class = v14;
    v8 = objc_msgSendSuper2(&v18, sel_init);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v8;
}

id sub_190A26024@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v5;
  id result;

  v5 = objc_allocWithZone((Class)type metadata accessor for ControlsConfigurationXPCContainer());
  result = ControlsConfigurationXPCContainer.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_190A26074(_QWORD *a1)
{
  return sub_190A25C00(a1);
}

id ControlTemplateRequest.fileHandle.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_fileHandle);
}

id ControlTemplateRequest.control.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_control);
}

id ControlTemplateRequest.environment.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v3;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_environment + 8);
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_environment);
  a1[1] = v3;
  swift_retain();
  return v3;
}

uint64_t ControlTemplateRequest.isPreview.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_isPreview);
}

id ControlTemplateRequest.__allocating_init(fileHandle:control:environment:isPreview:)(void *a1, void *a2, __int128 *a3, char a4)
{
  objc_class *v4;
  objc_class *v5;
  _BYTE *v10;
  _BYTE *v11;
  id v12;
  id v13;
  id v14;
  objc_super v16;
  __int128 v17;

  v5 = v4;
  v10 = objc_allocWithZone(v5);
  *(_QWORD *)&v10[OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_control] = a2;
  *(_QWORD *)&v10[OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_fileHandle] = a1;
  v10[OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_isPreview] = a4;
  v17 = *a3;
  v11 = v10;
  v12 = a2;
  v13 = a1;
  WidgetEnvironment.filterForExtensions()();
  *(_OWORD *)&v11[OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_environment] = v17;

  v16.receiver = v11;
  v16.super_class = v5;
  v14 = objc_msgSendSuper2(&v16, sel_init);

  return v14;
}

id ControlTemplateRequest.init(fileHandle:control:environment:isPreview:)(void *a1, void *a2, __int128 *a3, char a4)
{
  id v6;

  v6 = sub_190A26D74(a1, a2, a3, a4);

  return v6;
}

uint64_t static ControlTemplateRequest.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_1EE1EF0E2;
}

uint64_t static ControlTemplateRequest.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EE1EF0E2 = a1;
  return result;
}

uint64_t (*static ControlTemplateRequest.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_190A26350(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  os_unfair_lock_s *v12;
  id v13;
  os_unfair_lock_s *v14;
  id v15;
  id v16;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_control);
  v4 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_fileHandle);
  v6 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_isPreview);
  v8 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeBool_forKey_, v7, v8);

  v9 = v1 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_environment;
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_environment);
  v11 = *(void **)(v9 + 8);
  v12 = *(os_unfair_lock_s **)(v10 + 16);
  swift_retain_n();
  v13 = v11;
  os_unfair_lock_lock(v12);
  v14 = *(os_unfair_lock_s **)(v10 + 16);
  v15 = v13;
  os_unfair_lock_unlock(v14);

  swift_release_n();
  v16 = (id)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v15, v16);

}

id ControlTemplateRequest.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ControlTemplateRequest.init(coder:)(a1);
}

id ControlTemplateRequest.init(coder:)(void *a1)
{
  void *v1;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t *v12;
  void *v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  objc_super v28;

  sub_1908AB890(0, &qword_1EE1EBF40);
  v3 = v1;
  v4 = sub_190A48088();
  if (!v4)
  {
    if (qword_1EE1EB680 != -1)
      swift_once();
    v15 = sub_190A465A0();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EE1FD748);
    v16 = sub_190A46588();
    v17 = sub_190A47F50();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      MEMORY[0x194014398](v18, -1, -1);
    }

    goto LABEL_21;
  }
  v5 = OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_control;
  *(Class *)((char *)&v3->isa + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_control) = (Class)v4;
  sub_1908AB890(0, (unint64_t *)&unk_1ECF6D060);
  v6 = sub_190A48088();
  if (!v6)
  {
    if (qword_1EE1EB680 != -1)
      swift_once();
    v19 = sub_190A465A0();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EE1FD748);
    v20 = sub_190A46588();
    v21 = sub_190A47F50();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      MEMORY[0x194014398](v22, -1, -1);
    }

    goto LABEL_20;
  }
  v7 = OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_fileHandle;
  *(Class *)((char *)&v3->isa + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_fileHandle) = (Class)v6;
  type metadata accessor for WidgetEnvironment.Storage();
  v8 = sub_190A48088();
  if (!v8)
  {
    if (qword_1EE1EB680 != -1)
      swift_once();
    v23 = sub_190A465A0();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE1FD748);
    v24 = sub_190A46588();
    v25 = sub_190A47F50();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1908A7000, v24, v25, "Unable to decode 'environment", v26, 2u);
      MEMORY[0x194014398](v26, -1, -1);
    }

    a1 = *(Class *)((char *)&v3->isa + v7);
LABEL_20:

    a1 = *(Class *)((char *)&v3->isa + v5);
    v16 = v3;
LABEL_21:

    type metadata accessor for ControlTemplateRequest();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v9 = v8;
  type metadata accessor for UnfairLock();
  v10 = swift_allocObject();
  v11 = (_DWORD *)swift_slowAlloc();
  *v11 = 0;
  *(_QWORD *)(v10 + 16) = v11;
  v12 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_environment);
  *v12 = v10;
  v12[1] = v9;
  v13 = (void *)sub_190A47AC4();
  LOBYTE(v10) = objc_msgSend(a1, sel_decodeBoolForKey_, v13);

  *((_BYTE *)&v3->isa + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_isPreview) = v10;
  v28.receiver = v3;
  v28.super_class = (Class)type metadata accessor for ControlTemplateRequest();
  v14 = objc_msgSendSuper2(&v28, sel_init);

  return v14;
}

id ControlTemplateRequest.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ControlTemplateRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ControlTemplateRequest.__deallocating_deinit()
{
  return sub_1908C3A7C(type metadata accessor for ControlTemplateRequest);
}

uint64_t sub_190A26A74(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_190A462E8();
    result = MEMORY[0x19401429C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ControlsConfigurationXPCContainer()
{
  return objc_opt_self();
}

unint64_t sub_190A26AD4()
{
  unint64_t result;

  result = qword_1EE1EF130;
  if (!qword_1EE1EF130)
  {
    result = MEMORY[0x19401429C](&unk_190A5D98C, &type metadata for ControlsConfigurationXPCContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EF130);
  }
  return result;
}

unint64_t sub_190A26B18()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EF150;
  if (!qword_1EE1EF150)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EF120);
    v2[0] = sub_19098BCC8(&qword_1EE1EB6E0, MEMORY[0x1E0D0FDE8]);
    v2[1] = sub_19091C084();
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EF150);
  }
  return result;
}

uint64_t sub_190A26B94(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EF138);
    v10 = sub_19098BCC8(a2, a3);
    result = MEMORY[0x19401429C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_190A26C10()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EF178;
  if (!qword_1EE1EF178)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EF120);
    v2[0] = sub_19098BCC8(&qword_1EE1EB7B0, MEMORY[0x1E0D0FDF0]);
    v2[1] = sub_19091BF34();
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EF178);
  }
  return result;
}

uint64_t sub_190A26C8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x736C6F72746E6F63 && a2 == 0xE800000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736E656B6F74 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

id sub_190A26D74(void *a1, void *a2, __int128 *a3, char a4)
{
  _BYTE *v4;
  char *v7;
  id v8;
  id v9;
  objc_super v11;
  __int128 v12;

  *(_QWORD *)&v4[OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_control] = a2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_fileHandle] = a1;
  v4[OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_isPreview] = a4;
  v12 = *a3;
  v7 = v4;
  v8 = a2;
  v9 = a1;
  WidgetEnvironment.filterForExtensions()();
  *(_OWORD *)&v7[OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_environment] = v12;

  v11.receiver = v7;
  v11.super_class = (Class)type metadata accessor for ControlTemplateRequest();
  return objc_msgSendSuper2(&v11, sel_init);
}

uint64_t type metadata accessor for ControlTemplateRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for ModifyControlStateRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ModifyControlStateRequest.__allocating_init(control:state:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ModifyControlStateRequest.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ModifyControlStateRequest.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for ControlsConfigurationXPCContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ControlsConfigurationXPCContainer.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ControlsConfigurationXPCContainer.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t method lookup function for ControlTemplateRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ControlTemplateRequest.__allocating_init(fileHandle:control:environment:isPreview:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ControlTemplateRequest.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ControlTemplateRequest.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t storeEnumTagSinglePayload for ControlsConfigurationXPCContainer.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190A26F40 + 4 * byte_190A5D7C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190A26F74 + 4 * byte_190A5D7C0[v4]))();
}

uint64_t sub_190A26F74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A26F7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190A26F84);
  return result;
}

uint64_t sub_190A26F90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190A26F98);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190A26F9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A26FA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlsConfigurationXPCContainer.CodingKeys()
{
  return &type metadata for ControlsConfigurationXPCContainer.CodingKeys;
}

unint64_t sub_190A26FC4()
{
  unint64_t result;

  result = qword_1EE1EF1A8;
  if (!qword_1EE1EF1A8)
  {
    result = MEMORY[0x19401429C](&unk_190A5D964, &type metadata for ControlsConfigurationXPCContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EF1A8);
  }
  return result;
}

unint64_t sub_190A2700C()
{
  unint64_t result;

  result = qword_1EE1EF1B0;
  if (!qword_1EE1EF1B0)
  {
    result = MEMORY[0x19401429C](&unk_190A5D8D4, &type metadata for ControlsConfigurationXPCContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EF1B0);
  }
  return result;
}

unint64_t sub_190A27054()
{
  unint64_t result;

  result = qword_1EE1EF1B8;
  if (!qword_1EE1EF1B8)
  {
    result = MEMORY[0x19401429C](&unk_190A5D8FC, &type metadata for ControlsConfigurationXPCContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EF1B8);
  }
  return result;
}

void sub_190A270AC(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_190A270FC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_190A27188 + 4 * byte_190A5D9E6[a2]))(0xD000000000000015);
}

uint64_t sub_190A27188(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000015 && v1 == 0x8000000190A5F9E0)
    v2 = 1;
  else
    v2 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_190A27254(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x647261646E617473;
  else
    v3 = 0x6573616572636E69;
  if (v2)
    v4 = 0xE900000000000064;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x647261646E617473;
  else
    v5 = 0x6573616572636E69;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE900000000000064;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_190A272FC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000011;
  v3 = 0x8000000190A5FAC0;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000012;
    else
      v5 = 0xD000000000000013;
    if (v4 == 1)
      v6 = 0x8000000190A5FAE0;
    else
      v6 = 0x8000000190A5FB00;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000011;
  v6 = 0x8000000190A5FAC0;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD000000000000012;
    else
      v2 = 0xD000000000000013;
    if (v7 == 1)
      v3 = 0x8000000190A5FAE0;
    else
      v3 = 0x8000000190A5FB00;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_190A273F0(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 1684828002;
    else
      v2 = 1701736302;
    v3 = 0xE400000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 1684828002;
      else
        v5 = 1701736302;
      v6 = 0xE400000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE700000000000000;
    v2 = 0x72616C75676572;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v2 != 0x72616C75676572)
  {
LABEL_15:
    v7 = sub_190A486DC();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_190A274E8(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_190A27534(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_190A275C0 + 4 * byte_190A5D9F1[a2]))(1684957547);
}

uint64_t sub_190A275C0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1684957547 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_190A27694(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_190A276F8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_190A27744 + 4 * byte_190A5D9FA[a2]))(0x6465786966);
}

uint64_t sub_190A27744(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6465786966 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_190A277D8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_190A27820(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_190A2789C + 4 * byte_190A5DA02[a2]))(0x6D6E6F7269766E65);
}

uint64_t sub_190A2789C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6D6E6F7269766E65 && v1 == 0xEB00000000746E65)
    v2 = 1;
  else
    v2 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_190A2795C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x5079616C70736964;
  else
    v3 = 1111970419;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE900000000000033;
  if ((a2 & 1) != 0)
    v5 = 0x5079616C70736964;
  else
    v5 = 1111970419;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000033;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_190A279FC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1802658148;
  else
    v3 = 0x746867696CLL;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1802658148;
  else
    v5 = 0x746867696CLL;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_190A27A94(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x746E65746E69;
  else
    v3 = 0x656761726F7473;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x746E65746E69;
  else
    v5 = 0x656761726F7473;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_190A27B34(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEA00000000007265;
  v3 = 0x696669746E656469;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000016;
    else
      v5 = 0xD00000000000001ALL;
    if (v4 == 1)
      v6 = 0x8000000190A5FDA0;
    else
      v6 = 0x8000000190A5FDC0;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x696669746E656469;
  v6 = 0xEA00000000007265;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0xD000000000000016;
    else
      v3 = 0xD00000000000001ALL;
    if (v7 == 1)
      v2 = 0x8000000190A5FDA0;
    else
      v2 = 0x8000000190A5FDC0;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_190A27C3C(char a1)
{
  sub_190A487C0();
  __asm { BR              X10 }
}

uint64_t sub_190A27C98()
{
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_190A27D34()
{
  sub_190A487C0();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_190A27DD8()
{
  sub_190A487C0();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

void sub_190A27E80(char a1)
{
  sub_190A487C0();
  __asm { BR              X10 }
}

uint64_t sub_190A27ED4()
{
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

void sub_190A27F6C(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_190A27FB4()
{
  sub_190A47B18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190A28038()
{
  sub_190A47B18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190A280B4()
{
  sub_190A487C0();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

void sub_190A28158(uint64_t a1, char a2)
{
  sub_190A487C0();
  __asm { BR              X10 }
}

uint64_t sub_190A281A8()
{
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_190A28240()
{
  sub_190A487C0();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

void sub_190A282E0(uint64_t a1, char a2)
{
  sub_190A487C0();
  __asm { BR              X10 }
}

uint64_t sub_190A28338()
{
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

id PlaceholderRequest.__allocating_init(extensionIdentity:kind:environment:fileHandle:archiveVersion:)(void *a1, uint64_t a2, uint64_t a3, __int128 *a4, void *a5, char *a6)
{
  objc_class *v6;
  id v13;
  id v14;

  v13 = objc_allocWithZone(v6);
  v14 = sub_190A296E8(a1, a2, a3, a4, a5, a6);

  return v14;
}

id PlaceholderRequest.extensionIdentity.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_extensionIdentity);
}

uint64_t PlaceholderRequest.kind.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_kind);
  swift_bridgeObjectRetain();
  return v1;
}

id PlaceholderRequest.environment.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v3;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_environment + 8);
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_environment);
  a1[1] = v3;
  swift_retain();
  return v3;
}

id PlaceholderRequest.fileHandle.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_fileHandle);
}

void PlaceholderRequest.archiveVersion.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_archiveVersion);
}

void sub_190A28500(char *a1)
{
  sub_190A274E8(*a1);
}

void sub_190A2850C()
{
  char *v0;

  sub_190A27E80(*v0);
}

void sub_190A28514()
{
  __asm { BR              X10 }
}

uint64_t sub_190A28554()
{
  sub_190A47B18();
  return swift_bridgeObjectRelease();
}

void sub_190A285D8(uint64_t a1)
{
  char *v1;

  sub_190A28158(a1, *v1);
}

uint64_t sub_190A285E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190A297A4();
  *a1 = result;
  return result;
}

uint64_t sub_190A2860C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_190A28640 + 4 * byte_190A5DA27[*v0]))();
}

void sub_190A28640(_QWORD *a1@<X8>)
{
  *a1 = 1684957547;
  a1[1] = 0xE400000000000000;
}

void sub_190A28654(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6E6F7269766E65;
  a1[1] = 0xEB00000000746E65;
}

void sub_190A28678(_QWORD *a1@<X8>)
{
  *a1 = 0x646E6148656C6966;
  a1[1] = 0xEA0000000000656CLL;
}

void sub_190A28698(char *a1@<X8>)
{
  strcpy(a1, "archiveVersion");
  a1[15] = -18;
}

uint64_t sub_190A286C0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_190A286F4 + 4 * byte_190A5DA2C[*v0]))(0xD000000000000011, 0x8000000190A5FF60);
}

uint64_t sub_190A286F4()
{
  return 1684957547;
}

uint64_t sub_190A28704()
{
  return 0x6D6E6F7269766E65;
}

uint64_t sub_190A28724()
{
  return 0x646E6148656C6966;
}

uint64_t sub_190A28740()
{
  return 0x5665766968637261;
}

uint64_t sub_190A28764@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190A297A4();
  *a1 = result;
  return result;
}

uint64_t sub_190A28788()
{
  sub_190A29E3C();
  return sub_190A48868();
}

uint64_t sub_190A287B0()
{
  sub_190A29E3C();
  return sub_190A48874();
}

uint64_t sub_190A287D8(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;
  char v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA6F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190A2A21C();
  sub_190A48850();
  v10 = v7;
  sub_190980244();
  sub_190A485EC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_190A288D4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A3B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190A2A21C();
  sub_190A48838();
  if (!v2)
  {
    sub_19098319C();
    sub_190A4852C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_190A289F0()
{
  sub_190A2A21C();
  return sub_190A48868();
}

uint64_t sub_190A28A18()
{
  sub_190A2A21C();
  return sub_190A48874();
}

uint64_t sub_190A28A40@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_190A288D4(a1, a2);
}

uint64_t sub_190A28A54(_QWORD *a1)
{
  return sub_190A287D8(a1);
}

id PlaceholderRequest.init(extensionIdentity:kind:environment:fileHandle:archiveVersion:)(void *a1, uint64_t a2, uint64_t a3, __int128 *a4, void *a5, char *a6)
{
  id v8;

  v8 = sub_190A296E8(a1, a2, a3, a4, a5, a6);

  return v8;
}

uint64_t PlaceholderRequest.__allocating_init(from:)(_QWORD *a1)
{
  return sub_190A297EC(a1);
}

uint64_t sub_190A28AB8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  uint64_t v22;

  v3 = v1;
  v22 = *MEMORY[0x1E0C80C00];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF1E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190A29E3C();
  sub_190A48850();
  *(_QWORD *)&v21 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_extensionIdentity);
  v20 = 0;
  sub_190A48058();
  sub_190A2A260(qword_1ECF6AE70, MEMORY[0x1E0D0FE58]);
  sub_190A48640();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(v21) = 1;
  sub_190A485F8();
  v21 = *(_OWORD *)(v3 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_environment);
  v20 = 2;
  sub_19091BFBC();
  sub_190A48640();
  v10 = (void *)objc_opt_self();
  v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_fileHandle);
  *(_QWORD *)&v21 = 0;
  v12 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v11, 1, &v21);
  v13 = (id)v21;
  if (v12)
  {
    v14 = sub_190A46000();
    v16 = v15;

  }
  else
  {
    v17 = v13;
    v18 = (void *)sub_190A45F58();

    swift_willThrow();
    v14 = 0;
    v16 = 0xF000000000000000;
  }
  *(_QWORD *)&v21 = v14;
  *((_QWORD *)&v21 + 1) = v16;
  v20 = 3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1ED7F0);
  sub_190955EEC();
  sub_190A48640();
  LOBYTE(v21) = *(_BYTE *)(v3 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_archiveVersion);
  v20 = 4;
  sub_190980244();
  sub_190A485EC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_1908CE500(v14, v16);
}

uint64_t PlaceholderRequest.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return PlaceholderRequest.init(coder:)(a1);
}

uint64_t PlaceholderRequest.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v15;

  sub_190A48058();
  v3 = v1;
  v4 = (void *)sub_190A48088();
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6C7D0);
  v5 = sub_190A48088();
  if (v5)
  {
    v6 = (void *)v5;
    v15 = 0uLL;
    sub_190A47AD0();

  }
  type metadata accessor for WidgetEnvironment.Storage();
  v7 = (void *)sub_190A48088();
  sub_1908AB890(0, (unint64_t *)&unk_1ECF6D060);
  v8 = (void *)sub_190A48088();
  sub_1908AB890(0, &qword_1ECF6D310);
  v9 = sub_190A48088();
  if (v9)
  {
    v10 = (void *)v9;
    v11 = sub_190A46000();
    v13 = v12;

    sub_190A45F10();
    swift_allocObject();
    sub_190A45F04();
    sub_190A29E80();
    sub_190A45EEC();
    swift_release();

    sub_1908B53FC(v11, v13);
    if (v4)

    else
      swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_190A292B4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  os_unfair_lock_s *v10;
  id v11;
  os_unfair_lock_s *v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  void *v21;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_extensionIdentity);
  v5 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  v6 = (void *)sub_190A47AC4();
  v7 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_environment);
  v9 = *(void **)(v2 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_environment + 8);
  v10 = *(os_unfair_lock_s **)(v8 + 16);
  swift_retain_n();
  v11 = v9;
  os_unfair_lock_lock(v10);
  v12 = *(os_unfair_lock_s **)(v8 + 16);
  v13 = v11;
  os_unfair_lock_unlock(v12);

  swift_release_n();
  v14 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v13, v14);

  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_fileHandle);
  v16 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v15, v16);

  sub_190A45F40();
  swift_allocObject();
  sub_190A45F34();
  sub_190A45F1C();
  sub_190A29EE4();
  v17 = sub_190A45F28();
  v19 = v18;
  v20 = (void *)sub_190A45FE8();
  v21 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v20, v21);

  sub_1908B53FC(v17, v19);
  return swift_release();
}

id PlaceholderRequest.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PlaceholderRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PlaceholderRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceholderRequest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190A296A0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_190A297EC(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_190A296C8(_QWORD *a1)
{
  return sub_190A28AB8(a1);
}

id sub_190A296E8(void *a1, uint64_t a2, uint64_t a3, __int128 *a4, void *a5, char *a6)
{
  char *v6;
  char v9;
  char *v10;
  char *v11;
  id v12;
  id v13;
  objc_super v15;
  __int128 v16;

  v9 = *a6;
  *(_QWORD *)&v6[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_extensionIdentity] = a1;
  v10 = &v6[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_kind];
  *(_QWORD *)v10 = a2;
  *((_QWORD *)v10 + 1) = a3;
  v16 = *a4;
  v11 = v6;
  v12 = a1;
  WidgetEnvironment.filterForExtensions()();
  *(_OWORD *)&v11[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_environment] = v16;
  *(_QWORD *)&v11[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_fileHandle] = a5;
  v11[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_archiveVersion] = v9;
  v13 = a5;

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for PlaceholderRequest();
  return objc_msgSendSuper2(&v15, sel_init);
}

uint64_t sub_190A297A4()
{
  unint64_t v0;

  v0 = sub_190A484F0();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_190A297EC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  __int128 v11;
  char *v12;
  int v13;
  void *v14;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  id v21;
  void *v22;
  char *v23;
  id v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  char *v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  void (*v38)(uint64_t *);
  uint64_t v39;
  Class v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  __int128 v46;
  id v47;
  objc_super v48;
  __int128 v49;
  int v50;
  char v51;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1EF210);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v8 = sub_190A29E3C();
  sub_190A48838();
  if (!v1)
  {
    v9 = v4;
    sub_190A48058();
    v51 = 0;
    sub_190A2A260(&qword_1ECF69E30, MEMORY[0x1E0D0FE60]);
    sub_190A48580();
    v10 = (void *)v49;
    v51 = 2;
    sub_19091BE58();
    sub_190A48580();
    v47 = v10;
    v11 = v49;
    LOBYTE(v49) = 1;
    v44 = sub_190A48538();
    v45 = v12;
    v46 = v11;
    v51 = 4;
    sub_19098319C();
    sub_190A4852C();
    v13 = v49;
    v51 = 3;
    sub_19091BF34();
    sub_190A48580();
    v14 = (void *)*((_QWORD *)&v46 + 1);
    v50 = v13;
    v41 = v9;
    v16 = v49;
    sub_1908AB890(0, (unint64_t *)&unk_1ECF6A620);
    sub_1908AB890(0, (unint64_t *)&unk_1ECF6D060);
    v42 = *((_QWORD *)&v16 + 1);
    v43 = v16;
    v17 = sub_190A47FB0();
    v22 = (void *)v17;
    if (v17)
    {
      v40 = (Class)type metadata accessor for PlaceholderRequest();
      v23 = (char *)objc_allocWithZone(v40);
      v24 = v47;
      *(_QWORD *)&v23[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_extensionIdentity] = v47;
      v25 = (uint64_t *)&v23[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_kind];
      v26 = (uint64_t)v45;
      v27 = v46;
      *v25 = v44;
      v25[1] = v26;
      *(_QWORD *)&v49 = v27;
      *((_QWORD *)&v49 + 1) = v14;
      v28 = v14;
      v29 = v22;
      swift_retain();
      *((_QWORD *)&v46 + 1) = v28;
      v30 = v23;
      v31 = v24;
      WidgetEnvironment.filterForExtensions()();
      *(_OWORD *)&v30[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_environment] = v49;
      *(_QWORD *)&v30[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_fileHandle] = v29;
      v30[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_archiveVersion] = v50;
      v32 = v29;

      v48.receiver = v30;
      v48.super_class = v40;
      v7 = (uint64_t)objc_msgSendSuper2(&v48, sel_init);

      sub_1908B53FC(v43, v42);
      swift_release();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      return v7;
    }
    swift_bridgeObjectRelease();
    v33 = sub_190A4831C();
    v34 = (void *)swift_allocError();
    v36 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90);
    *v36 = sub_1908AB890(0, (unint64_t *)&qword_1ECF6BF60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE40);
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_190A4A350;
    *(_QWORD *)(v37 + 56) = &type metadata for PlaceholderRequest.CodingKeys;
    *(_QWORD *)(v37 + 64) = v8;
    *(_BYTE *)(v37 + 32) = 3;
    sub_190A48304();
    v38 = *(void (**)(uint64_t *))(*(_QWORD *)(v33 - 8) + 104);
    LODWORD(v44) = *MEMORY[0x1E0DEC460];
    v38(v36);
    swift_willThrow();
    v18 = sub_190A4831C();
    swift_allocError();
    v20 = v19;
    v45 = (char *)v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90) + 48);
    *v20 = sub_1908AB890(0, (unint64_t *)&qword_1ECF6BF60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE40);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_190A4A350;
    *(_QWORD *)(v7 + 56) = &type metadata for PlaceholderRequest.CodingKeys;
    *(_QWORD *)(v7 + 64) = v8;
    *(_BYTE *)(v7 + 32) = 3;
    v21 = v34;
    sub_190A48304();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, v44, v18);
    swift_willThrow();
    sub_1908B53FC(v43, v42);

    swift_release();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

unint64_t sub_190A29E3C()
{
  unint64_t result;

  result = qword_1EE1EF1F0;
  if (!qword_1EE1EF1F0)
  {
    result = MEMORY[0x19401429C](&unk_190A5DC30, &type metadata for PlaceholderRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EF1F0);
  }
  return result;
}

unint64_t sub_190A29E80()
{
  unint64_t result;

  result = qword_1ECF6A3A0;
  if (!qword_1ECF6A3A0)
  {
    result = MEMORY[0x19401429C](&unk_190A5DC08, &type metadata for PlaceholderRequest.CodingProxy);
    atomic_store(result, (unint64_t *)&qword_1ECF6A3A0);
  }
  return result;
}

uint64_t type metadata accessor for PlaceholderRequest()
{
  return objc_opt_self();
}

unint64_t sub_190A29EE4()
{
  unint64_t result;

  result = qword_1EE1EA6B8;
  if (!qword_1EE1EA6B8)
  {
    result = MEMORY[0x19401429C](&unk_190A5DBE0, &type metadata for PlaceholderRequest.CodingProxy);
    atomic_store(result, (unint64_t *)&qword_1EE1EA6B8);
  }
  return result;
}

uint64_t method lookup function for PlaceholderRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static PlaceholderRequest.supportsSecureCoding.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of PlaceholderRequest.__allocating_init(extensionIdentity:kind:environment:fileHandle:archiveVersion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of PlaceholderRequest.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of PlaceholderRequest.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of PlaceholderRequest.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of PlaceholderRequest.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t storeEnumTagSinglePayload for PlaceholderRequest.CodingProxy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190A29FF8 + 4 * byte_190A5DA36[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_190A2A02C + 4 * byte_190A5DA31[v4]))();
}

uint64_t sub_190A2A02C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A2A034(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190A2A03CLL);
  return result;
}

uint64_t sub_190A2A048(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190A2A050);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190A2A054(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A2A05C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaceholderRequest.CodingProxy()
{
  return &type metadata for PlaceholderRequest.CodingProxy;
}

uint64_t storeEnumTagSinglePayload for PlaceholderRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_190A2A0C4 + 4 * byte_190A5DA40[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_190A2A0F8 + 4 * byte_190A5DA3B[v4]))();
}

uint64_t sub_190A2A0F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A2A100(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190A2A108);
  return result;
}

uint64_t sub_190A2A114(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190A2A11CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_190A2A120(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A2A128(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaceholderRequest.CodingKeys()
{
  return &type metadata for PlaceholderRequest.CodingKeys;
}

unint64_t sub_190A2A148()
{
  unint64_t result;

  result = qword_1EE1EF1F8;
  if (!qword_1EE1EF1F8)
  {
    result = MEMORY[0x19401429C](&unk_190A5DBB8, &type metadata for PlaceholderRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EF1F8);
  }
  return result;
}

unint64_t sub_190A2A190()
{
  unint64_t result;

  result = qword_1EE1EF200;
  if (!qword_1EE1EF200)
  {
    result = MEMORY[0x19401429C](&unk_190A5DAF0, &type metadata for PlaceholderRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EF200);
  }
  return result;
}

unint64_t sub_190A2A1D8()
{
  unint64_t result;

  result = qword_1EE1EF208;
  if (!qword_1EE1EF208)
  {
    result = MEMORY[0x19401429C](&unk_190A5DB18, &type metadata for PlaceholderRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EF208);
  }
  return result;
}

unint64_t sub_190A2A21C()
{
  unint64_t result;

  result = qword_1ECF6A4F8;
  if (!qword_1ECF6A4F8)
  {
    result = MEMORY[0x19401429C](&unk_190A5DD38, &type metadata for PlaceholderRequest.CodingProxy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6A4F8);
  }
  return result;
}

uint64_t sub_190A2A260(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_190A48058();
    result = MEMORY[0x19401429C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PlaceholderRequest.CodingProxy.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_190A2A2E0 + 4 * byte_190A5DA45[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_190A2A300 + 4 * byte_190A5DA4A[v4]))();
}

_BYTE *sub_190A2A2E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_190A2A300(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190A2A308(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190A2A310(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190A2A318(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190A2A320(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PlaceholderRequest.CodingProxy.CodingKeys()
{
  return &type metadata for PlaceholderRequest.CodingProxy.CodingKeys;
}

unint64_t sub_190A2A340()
{
  unint64_t result;

  result = qword_1EE1EF220;
  if (!qword_1EE1EF220)
  {
    result = MEMORY[0x19401429C](&unk_190A5DD10, &type metadata for PlaceholderRequest.CodingProxy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EF220);
  }
  return result;
}

unint64_t sub_190A2A388()
{
  unint64_t result;

  result = qword_1ECF6A518;
  if (!qword_1ECF6A518)
  {
    result = MEMORY[0x19401429C](&unk_190A5DC80, &type metadata for PlaceholderRequest.CodingProxy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6A518);
  }
  return result;
}

unint64_t sub_190A2A3D0()
{
  unint64_t result;

  result = qword_1ECF6A500[0];
  if (!qword_1ECF6A500[0])
  {
    result = MEMORY[0x19401429C](&unk_190A5DCA8, &type metadata for PlaceholderRequest.CodingProxy.CodingKeys);
    atomic_store(result, qword_1ECF6A500);
  }
  return result;
}

uint64_t sub_190A2A41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v12 = swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *(_QWORD *)v12 = v6;
  *(_QWORD *)(v12 + 8) = sub_1908CEB54;
  *(_QWORD *)(v12 + 112) = a5;
  *(_QWORD *)(v12 + 120) = v5;
  *(_QWORD *)(v12 + 96) = a2;
  *(_QWORD *)(v12 + 104) = a4;
  *(_QWORD *)(v12 + 88) = a1;
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(a3 + 64);
  v13 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v12 + 48) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v12 + 64) = v13;
  v14 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v12 + 32) = v14;
  return swift_task_switch();
}

uint64_t AppIntentTimelineProvider.snapshot(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *(_QWORD *)(v6 + 112) = a5;
  *(_QWORD *)(v6 + 120) = v5;
  *(_QWORD *)(v6 + 96) = a2;
  *(_QWORD *)(v6 + 104) = a4;
  *(_QWORD *)(v6 + 88) = a1;
  v7 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v6 + 64) = v7;
  *(_BYTE *)(v6 + 80) = *(_BYTE *)(a3 + 64);
  v8 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v6 + 32) = v8;
  return swift_task_switch();
}

uint64_t sub_190A2A4F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v3;
  v4 = *(_OWORD *)(v0 + 112);
  *(_QWORD *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 40) = v2;
  *(_QWORD *)(v3 + 48) = v0 + 16;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v5;
  swift_getAssociatedTypeWitness();
  *v5 = v0;
  v5[1] = sub_190A2A5D0;
  return sub_190A486A0();
}

uint64_t sub_190A2A5D0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_190A2A620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v12 = swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *(_QWORD *)v12 = v6;
  *(_QWORD *)(v12 + 8) = sub_1908CEB54;
  *(_QWORD *)(v12 + 112) = a5;
  *(_QWORD *)(v12 + 120) = v5;
  *(_QWORD *)(v12 + 96) = a2;
  *(_QWORD *)(v12 + 104) = a4;
  *(_QWORD *)(v12 + 88) = a1;
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(a3 + 64);
  v13 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v12 + 48) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v12 + 64) = v13;
  v14 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v12 + 32) = v14;
  return swift_task_switch();
}

uint64_t AppIntentTimelineProvider.timeline(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *(_QWORD *)(v6 + 112) = a5;
  *(_QWORD *)(v6 + 120) = v5;
  *(_QWORD *)(v6 + 96) = a2;
  *(_QWORD *)(v6 + 104) = a4;
  *(_QWORD *)(v6 + 88) = a1;
  v7 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v6 + 64) = v7;
  *(_BYTE *)(v6 + 80) = *(_BYTE *)(a3 + 64);
  v8 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v6 + 32) = v8;
  return swift_task_switch();
}

uint64_t sub_190A2A6F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v3;
  v4 = *(_OWORD *)(v0 + 112);
  *(_QWORD *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 40) = v2;
  *(_QWORD *)(v3 + 48) = v0 + 16;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for Timeline(0, AssociatedTypeWitness, AssociatedConformanceWitness, v8);
  *v5 = v0;
  v5[1] = sub_190A2B700;
  return sub_190A486A0();
}

void sub_190A2A810()
{
  sub_190A48448();
  __break(1u);
}

void AppIntentTimelineProvider.getSnapshot(for:in:completion:)()
{
  sub_190A48448();
  __break(1u);
}

void sub_190A2A8C0()
{
  sub_190A48448();
  __break(1u);
}

void AppIntentTimelineProvider.getTimeline(for:in:completion:)()
{
  sub_190A48448();
  __break(1u);
}

uint64_t sub_190A2A970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1908C5090;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t AppIntentTimelineProvider.relevances()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_190A2AA00()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)(v0 + 16);
  swift_getAssociatedTypeWitness();
  sub_1908B8234(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190A2AA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1908CEB54;
  v7[4] = a2;
  v7[5] = a3;
  v7[3] = a1;
  v10 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(a3 + 88) + *(_QWORD *)(a3 + 88));
  v8 = (_QWORD *)swift_task_alloc();
  v7[6] = v8;
  *v8 = v7;
  v8[1] = sub_190A2AB7C;
  return v10(v7 + 2, a2, a3);
}

uint64_t AppIntentTimelineProvider.relevance()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v8 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(a3 + 88) + *(_QWORD *)(a3 + 88));
  v6 = (_QWORD *)swift_task_alloc();
  v3[6] = v6;
  *v6 = v3;
  v6[1] = sub_190A2AB7C;
  return v8(v3 + 2, a2, a3);
}

uint64_t sub_190A2AB7C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_190A2ABD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;

  v1 = *(_QWORD **)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 16);
  swift_getAssociatedTypeWitness();
  sub_1908B8550(&v3, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190A2AC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  unint64_t v17;
  uint64_t v18;
  _OWORD v20[4];
  char v21;

  swift_getAssociatedTypeWitness();
  v11 = sub_190A47D4C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v20 - v13;
  v15 = *(_OWORD *)(a4 + 48);
  v20[2] = *(_OWORD *)(a4 + 32);
  v20[3] = v15;
  v21 = *(_BYTE *)(a4 + 64);
  v16 = *(_OWORD *)(a4 + 16);
  v20[0] = *(_OWORD *)a4;
  v20[1] = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v20 - v13, a1, v11);
  v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a5;
  *(_QWORD *)(v18 + 24) = a6;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v18 + v17, v14, v11);
  (*(void (**)(uint64_t, _OWORD *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(a6 + 72))(a3, v20, sub_190A2B67C, v18, a5, a6);
  return swift_release();
}

uint64_t sub_190A2AD80(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - v4, a1, AssociatedTypeWitness);
  sub_190A47D4C();
  return sub_190A47D40();
}

uint64_t sub_190A2AE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  unint64_t v20;
  uint64_t v21;
  _OWORD v23[4];
  char v24;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for Timeline(255, AssociatedTypeWitness, AssociatedConformanceWitness, v13);
  v14 = sub_190A47D4C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v23 - v16;
  v18 = *(_OWORD *)(a4 + 48);
  v23[2] = *(_OWORD *)(a4 + 32);
  v23[3] = v18;
  v24 = *(_BYTE *)(a4 + 64);
  v19 = *(_OWORD *)(a4 + 16);
  v23[0] = *(_OWORD *)a4;
  v23[1] = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)v23 - v16, a1, v14);
  v20 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a5;
  *(_QWORD *)(v21 + 24) = a6;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v21 + v20, v17, v14);
  (*(void (**)(uint64_t, _OWORD *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(a6 + 80))(a3, v23, sub_190A2B52C, v21, a5, a6);
  return swift_release();
}

uint64_t sub_190A2AFC0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for Timeline(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v9 - v7, a1, v5);
  sub_190A47D4C();
  return sub_190A47D40();
}

uint64_t _s9WidgetKit25AppIntentTimelineProviderPAAE15recommendationsSayAA0cD14RecommendationVy0D0QzGGyF_0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;

  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v0 = sub_190A465A0();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECF6D988);
  v1 = sub_190A46588();
  v2 = sub_190A47F68();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1908A7000, v1, v2, "DEFAULT IMPL FOR RECOMMENDATIONS!!!", v3, 2u);
    MEMORY[0x194014398](v3, -1, -1);
  }

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for AppIntentRecommendation(0, AssociatedTypeWitness, AssociatedConformanceWitness, v6);
  return sub_190A47CB0();
}

uint64_t sub_190A2B1EC(uint64_t a1)
{
  return sub_190A2B204(a1, sub_190A2AC28);
}

uint64_t sub_190A2B1F8(uint64_t a1)
{
  return sub_190A2B204(a1, sub_190A2AE34);
}

uint64_t sub_190A2B204(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[4], v2[5], v2[6], v2[2], v2[3]);
}

uint64_t dispatch thunk of AppIntentTimelineProvider.recommendations()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AppIntentTimelineProvider.placeholder(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of AppIntentTimelineProvider.snapshot(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 56) + *(_QWORD *)(a5 + 56));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1908CEB54;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of AppIntentTimelineProvider.timeline(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 64) + *(_QWORD *)(a5 + 64));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1908CEB54;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of AppIntentTimelineProvider.getSnapshot(for:in:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 72))();
}

uint64_t dispatch thunk of AppIntentTimelineProvider.getTimeline(for:in:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 80))();
}

uint64_t dispatch thunk of AppIntentTimelineProvider.relevances()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 88) + *(_QWORD *)(a3 + 88));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1908CEB54;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of AppIntentTimelineProvider.relevance()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 96) + *(_QWORD *)(a3 + 96));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1908CEB54;
  return v9(a1, a2, a3);
}

uint64_t sub_190A2B458()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v3;
  uint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for Timeline(255, AssociatedTypeWitness, AssociatedConformanceWitness, v3);
  v4 = sub_190A47D4C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80)), v4);
  return swift_deallocObject();
}

uint64_t sub_190A2B52C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for Timeline(255, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  sub_190A47D4C();
  return sub_190A2AFC0(a1);
}

uint64_t sub_190A2B5EC()
{
  uint64_t v0;
  uint64_t v1;

  swift_getAssociatedTypeWitness();
  v1 = sub_190A47D4C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_190A2B67C(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  sub_190A47D4C();
  return sub_190A2AD80(a1);
}

uint64_t sub_190A2B704(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_19090D084();
  swift_retain();
  sub_190A46F0C();
  return swift_release();
}

uint64_t sub_190A2B7A4()
{
  sub_19090D084();
  return sub_190A46F0C();
}

uint64_t sub_190A2B808(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  uint64_t v14;

  v7 = *(_QWORD *)(*MEMORY[0x1E0DEC880] + *a1 + 8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v14 - v9;
  (*(void (**)(char *))(v8 + 16))((char *)&v14 - v9);
  v11 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = a3;
  *((_QWORD *)v12 + 3) = v7;
  *((_QWORD *)v12 + 4) = a4;
  *((_QWORD *)v12 + 5) = a1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v12[v11], v10, v7);
  swift_retain();
  sub_190A2B704((uint64_t)sub_190A0A7A4, (uint64_t)v12);
  return swift_release();
}

uint64_t WidgetConfiguration.configurationDisplayName(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_190A2B9B0(a1, a2, a3, a4, a5, a6);
}

{
  return sub_190A2BA38(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t))WidgetConfiguration.configurationDisplayName(_:));
}

uint64_t WidgetConfiguration.configurationDisplayName<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_190A2BB1C(a1, a2, a3, a4);
}

uint64_t WidgetConfiguration.description(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_190A2B9B0(a1, a2, a3, a4, a5, a6);
}

{
  return sub_190A2BA38(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t))WidgetConfiguration.description(_:));
}

uint64_t sub_190A2B9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;

  v8 = sub_19096C780();
  sub_190A2C6A4(v8, v9, a5, a6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_190A2BA38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_190A474AC();
  v10 = v9;
  v12 = v11 & 1;
  a7(v8, v9);
  sub_19090D1C4(v8, v10, v12);
  return swift_bridgeObjectRelease();
}

uint64_t WidgetConfiguration.description<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_190A2BB1C(a1, a2, a3, a4);
}

uint64_t sub_190A2BB1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v7 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_190A47B84();
  sub_190A2C6A4(v8, v9, a2, a4);
  return swift_bridgeObjectRelease();
}

uint64_t WidgetConfiguration.supportedFamilies(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    sub_1908B8DF8(0, v3, 0);
    __asm { BR              X8 }
  }
  WidgetConfiguration.internalSupportedFamilies(_:)(MEMORY[0x1E0DEE9D8], a2, a3);
  return swift_bridgeObjectRelease();
}

void sub_190A2BD20()
{
  sub_190A486D0();
  __break(1u);
}

uint64_t WidgetConfiguration.internalSupportedFamilies(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *KeyPath;
  uint64_t v8;

  KeyPath = (_QWORD *)swift_getKeyPath();
  v8 = a1;
  sub_190A2B808(KeyPath, (uint64_t)&v8, a2, a3);
  return swift_release();
}

uint64_t WidgetConfiguration.onBackgroundURLSessionEvents(matching:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_190A2B704((uint64_t)sub_190A2CDE8, (uint64_t)v8);
  return swift_release();
}

{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  sub_1908B4C4C(a1);
  swift_retain();
  sub_190A2B704((uint64_t)sub_190A2CE28, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_190A2BE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = *(int *)(type metadata accessor for WidgetDescriptor(0) + 72);
  v12 = *(_QWORD **)(a1 + v11);
  swift_bridgeObjectRetain();
  swift_retain();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1908F35A8(0, v12[2] + 1, 1, v12);
    v12 = (_QWORD *)result;
  }
  v15 = v12[2];
  v14 = v12[3];
  if (v15 >= v14 >> 1)
  {
    result = (uint64_t)sub_1908F35A8((_QWORD *)(v14 > 1), v15 + 1, 1, v12);
    v12 = (_QWORD *)result;
  }
  v12[2] = v15 + 1;
  v16 = &v12[4 * v15];
  v16[4] = sub_190A2D30C;
  v16[5] = v10;
  v16[6] = a4;
  v16[7] = a5;
  *(_QWORD *)(a1 + v11) = v12;
  return result;
}

uint64_t WidgetConfiguration.pushHandler(_:)()
{
  return sub_190A2B704((uint64_t)nullsub_1, 0);
}

uint64_t WidgetConfiguration.controlPickerAsSlider()()
{
  return sub_190A2B704((uint64_t)sub_190A2BF68, 0);
}

uint64_t sub_190A2BF68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  _QWORD v16[5];
  char v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _BYTE v32[40];
  _OWORD v33[3];
  __int128 v34;
  _OWORD v35[3];

  v2 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (_OWORD *)((char *)&v16[-2] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1909F33E0(a1, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload() != 2)
    return sub_19094CD98((uint64_t)v4);
  v5 = v4[3];
  v33[2] = v4[2];
  v34 = v5;
  v35[0] = v4[4];
  *(_OWORD *)((char *)v35 + 9) = *(_OWORD *)((char *)v4 + 73);
  v6 = v4[1];
  v33[0] = *v4;
  v33[1] = v6;
  sub_1908CD8F8((uint64_t)&v34, (uint64_t)&v18);
  if (v22 == 1)
  {
    sub_19094F59C((uint64_t)&v18);
  }
  else
  {
    sub_1908B4BBC(&v18, (uint64_t)v32);
    sub_1908BBDC8((uint64_t)v32, (uint64_t)&v31);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA430);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v15 = v18;
      v8 = v19;
      v9 = v20;
      v10 = v21;
      v12 = v24;
      v11 = v25;
      v16[3] = &type metadata for ControlPickerTemplateProvider;
      v16[4] = &off_1E2CC8980;
      v13 = swift_allocObject();
      v16[0] = v13;
      *(_OWORD *)(v13 + 16) = v15;
      *(_QWORD *)(v13 + 32) = v8;
      *(_QWORD *)(v13 + 40) = v9;
      *(_BYTE *)(v13 + 48) = v10;
      *(_OWORD *)(v13 + 56) = v22;
      *(_OWORD *)(v13 + 72) = v23;
      *(_QWORD *)(v13 + 88) = v12;
      *(_QWORD *)(v13 + 96) = v11;
      *(_OWORD *)(v13 + 104) = v26;
      *(_OWORD *)(v13 + 120) = v27;
      *(_OWORD *)(v13 + 136) = v28;
      *(_BYTE *)(v13 + 152) = 1;
      v14 = v30;
      *(_OWORD *)(v13 + 160) = v29;
      *(_OWORD *)(v13 + 176) = v14;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
      v17 = 0;
      sub_190974614((uint64_t)v16, (uint64_t)&v34);
      sub_19094CD98(a1);
      sub_19094F7F4((uint64_t)v33, a1);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    }
  }
  return sub_1908CD934((uint64_t)v33);
}

uint64_t sub_190A2C228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t result;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;

  if (a2)
  {
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a2;
    *(_QWORD *)(v10 + 24) = a3;
    v11 = sub_190A2D240;
  }
  else
  {
    v10 = 0;
    v11 = sub_1908F1284;
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = v10;
  v13 = *(int *)(type metadata accessor for WidgetDescriptor(0) + 72);
  v14 = *(_QWORD **)(a1 + v13);
  sub_1908B4C4C(a2);
  swift_retain();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1908F35A8(0, v14[2] + 1, 1, v14);
    v14 = (_QWORD *)result;
  }
  v17 = v14[2];
  v16 = v14[3];
  if (v17 >= v16 >> 1)
  {
    result = (uint64_t)sub_1908F35A8((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
    v14 = (_QWORD *)result;
  }
  v14[2] = v17 + 1;
  v18 = &v14[4 * v17];
  v18[4] = sub_190A2D208;
  v18[5] = v12;
  v18[6] = a4;
  v18[7] = a5;
  *(_QWORD *)(a1 + v13) = v14;
  return result;
}

uint64_t WidgetConfiguration.widgetBackgroundRemovable(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_190A2C7B8(a1, a2, a3);
}

uint64_t WidgetConfiguration.promptsForUserConfiguration()(uint64_t a1, uint64_t a2)
{
  _QWORD *KeyPath;
  char v6;

  KeyPath = (_QWORD *)swift_getKeyPath();
  v6 = 1;
  sub_190A2B808(KeyPath, (uint64_t)&v6, a1, a2);
  return swift_release();
}

uint64_t WidgetConfiguration.enabled(_:)(char a1, uint64_t a2, uint64_t a3)
{
  _QWORD *KeyPath;
  uint64_t v7;
  uint64_t v9;

  KeyPath = (_QWORD *)swift_getKeyPath();
  v7 = 1;
  if ((a1 & 1) == 0)
    v7 = 2;
  v9 = v7;
  sub_190A2B808(KeyPath, (uint64_t)&v9, a2, a3);
  return swift_release();
}

BOOL static WidgetBackgroundStyle.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t WidgetBackgroundStyle.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

WidgetKit::WidgetBackgroundStyle_optional __swiftcall WidgetBackgroundStyle.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (WidgetKit::WidgetBackgroundStyle_optional)rawValue;
}

WidgetKit::WidgetBackgroundStyle_optional sub_190A2C488(Swift::Int *a1)
{
  return WidgetBackgroundStyle.init(rawValue:)(*a1);
}

uint64_t sub_190A2C490()
{
  sub_190A2D1A0();
  return sub_190A47C38();
}

uint64_t sub_190A2C4EC()
{
  sub_190A2D1A0();
  return sub_190A47C20();
}

uint64_t WidgetConfiguration.backgroundStyle(_:)(char *a1, uint64_t a2, uint64_t a3)
{
  char v4;

  v4 = *a1;
  return WidgetConfiguration.preferredBackgroundStyle(_:)(&v4, a2, a3);
}

uint64_t WidgetConfiguration.preferredBackgroundStyle(_:)(char *a1, uint64_t a2, uint64_t a3)
{
  char v5;
  _QWORD *KeyPath;
  char v8;

  v5 = *a1;
  KeyPath = (_QWORD *)swift_getKeyPath();
  v8 = v5;
  sub_190A2B808(KeyPath, (uint64_t)&v8, a2, a3);
  return swift_release();
}

uint64_t WidgetConfiguration.supportsVibrantContent(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_190A2C7B8(a1, a2, a3);
}

uint64_t WidgetConfiguration.supportsAccentedContent()()
{
  return sub_190A2B704((uint64_t)sub_190A2C5F4, 0);
}

uint64_t sub_190A2C5F4(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for WidgetDescriptor(0);
  *(_BYTE *)(a1 + *(int *)(result + 60)) = 1;
  return result;
}

uint64_t WidgetConfiguration.isTransparent(_:)(char a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_BYTE *)(v2 + 16) = a1;
  sub_190A2B704((uint64_t)sub_190A2CE44, v2);
  return swift_release();
}

uint64_t WidgetConfiguration.eventMachServiceName(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_190A2C6A4(a1, a2, a3, a4);
}

uint64_t sub_190A2C6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *KeyPath;
  _QWORD v10[2];

  KeyPath = (_QWORD *)swift_getKeyPath();
  v10[0] = a1;
  v10[1] = a2;
  swift_bridgeObjectRetain();
  sub_190A2B808(KeyPath, (uint64_t)v10, a3, a4);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t WidgetConfiguration.internalWidget()(uint64_t a1, uint64_t a2)
{
  _QWORD *KeyPath;
  uint64_t v6;

  KeyPath = (_QWORD *)swift_getKeyPath();
  v6 = 1;
  sub_190A2B808(KeyPath, (uint64_t)&v6, a1, a2);
  return swift_release();
}

uint64_t WidgetConfiguration.supportsInteraction(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_190A2C7B8(a1, a2, a3);
}

uint64_t WidgetConfiguration.enablesMultipleTapTargets(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_190A2C7B8(a1, a2, a3);
}

uint64_t sub_190A2C7B8(char a1, uint64_t a2, uint64_t a3)
{
  _QWORD *KeyPath;
  char v8;

  KeyPath = (_QWORD *)swift_getKeyPath();
  v8 = a1;
  sub_190A2B808(KeyPath, (uint64_t)&v8, a2, a3);
  return swift_release();
}

uint64_t WidgetConfiguration.enableContentMarginsForFirstParty(_:)(char a1, uint64_t a2, uint64_t a3)
{
  _QWORD *KeyPath;
  char v8;

  KeyPath = (_QWORD *)swift_getKeyPath();
  v8 = a1;
  sub_190A2B808(KeyPath, (uint64_t)&v8, a2, a3);
  return swift_release();
}

uint64_t WidgetConfiguration.visibilityConfigurableByInternalSettings(visibleByDefault:)(char a1, uint64_t a2, uint64_t a3)
{
  _QWORD *KeyPath;
  uint64_t v7;
  uint64_t v9;

  KeyPath = (_QWORD *)swift_getKeyPath();
  v7 = 2;
  if ((a1 & 1) == 0)
    v7 = 3;
  v9 = v7;
  sub_190A2B808(KeyPath, (uint64_t)&v9, a2, a3);
  return swift_release();
}

uint64_t WidgetLocation.hash(into:)()
{
  return sub_190A487CC();
}

BOOL static WidgetLocation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t WidgetLocation.hashValue.getter()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

void static WidgetLocation.homeScreen.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void static WidgetLocation.lockScreen.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static WidgetLocation.ambient.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void static WidgetLocation.continuityMac.getter(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t WidgetConfiguration.disfavoredLocations(_:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_190A2B704((uint64_t)sub_190A2CEBC, v4);
  return swift_release();
}

void sub_190A2CA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (*(_QWORD *)(a2 + 16))
  {
    v2 = a2 + 32;
    swift_bridgeObjectRetain();
    __asm { BR              X8 }
  }
}

void sub_190A2CD68()
{
  sub_190A486D0();
  __break(1u);
  JUMPOUT(0x190A2CD7CLL);
}

void sub_190A2CDAC(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9E8];
}

uint64_t sub_190A2CDBC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190A2CDE8(uint64_t a1)
{
  uint64_t *v1;

  return sub_190A2BE48(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_190A2CDF4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190A2CE28(uint64_t a1)
{
  uint64_t *v1;

  return sub_190A2C228(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_190A2CE34()
{
  return swift_deallocObject();
}

uint64_t sub_190A2CE44(uint64_t a1)
{
  uint64_t v1;
  int v3;
  char v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(v1 + 16);
  if (v3)
    v4 = 2;
  else
    v4 = 0;
  result = type metadata accessor for WidgetDescriptor(0);
  *(_BYTE *)(a1 + *(int *)(result + 52)) = v4;
  *(_BYTE *)(a1 + *(int *)(result + 56)) = v3;
  return result;
}

uint64_t sub_190A2CE90()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_190A2CEBC(uint64_t a1)
{
  uint64_t v1;

  sub_190A2CA4C(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_190A2CECC()
{
  unint64_t result;

  result = qword_1ECF6A3D0;
  if (!qword_1ECF6A3D0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetLocation, &type metadata for WidgetLocation);
    atomic_store(result, (unint64_t *)&qword_1ECF6A3D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WidgetBackgroundStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190A2CF5C + 4 * byte_190A5DDDD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_190A2CF90 + 4 * byte_190A5DDD8[v4]))();
}

uint64_t sub_190A2CF90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A2CF98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190A2CFA0);
  return result;
}

uint64_t sub_190A2CFAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190A2CFB4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190A2CFB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A2CFC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetBackgroundStyle()
{
  return &type metadata for WidgetBackgroundStyle;
}

ValueMetadata *type metadata accessor for WidgetLocation()
{
  return &type metadata for WidgetLocation;
}

uint64_t sub_190A2CFF0()
{
  sub_19090D084();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190A2D03C()
{
  sub_19090D084();
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s9WidgetKit14WidgetLocationV8LocationOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_190A2D0D8 + 4 * byte_190A5DDE7[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_190A2D10C + 4 * byte_190A5DDE2[v4]))();
}

uint64_t sub_190A2D10C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A2D114(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190A2D11CLL);
  return result;
}

uint64_t sub_190A2D128(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190A2D130);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_190A2D134(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A2D13C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetLocation.Location()
{
  return &type metadata for WidgetLocation.Location;
}

unint64_t sub_190A2D15C()
{
  unint64_t result;

  result = qword_1EE1EF288;
  if (!qword_1EE1EF288)
  {
    result = MEMORY[0x19401429C](&unk_190A5E17C, &type metadata for WidgetLocation.Location);
    atomic_store(result, (unint64_t *)&qword_1EE1EF288);
  }
  return result;
}

unint64_t sub_190A2D1A0()
{
  unint64_t result;

  result = qword_1ECF6BF18;
  if (!qword_1ECF6BF18)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetBackgroundStyle, &type metadata for WidgetBackgroundStyle);
    atomic_store(result, (unint64_t *)&qword_1ECF6BF18);
  }
  return result;
}

uint64_t sub_190A2D1E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190A2D208(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(unsigned __int8 *__return_ptr, _QWORD *);
  unsigned __int8 v5;
  _QWORD v6[2];

  v3 = *(void (**)(unsigned __int8 *__return_ptr, _QWORD *))(v2 + 16);
  v6[0] = a1;
  v6[1] = a2;
  v3(&v5, v6);
  return v5;
}

uint64_t sub_190A2D240@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, a1[1]);
  *a2 = result & 1;
  return result;
}

uint64_t sub_190A2D274()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 88))
    swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190A2D2E8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190A2D30C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (*(_QWORD *)(v2 + 16) == a1 && *(_QWORD *)(v2 + 24) == a2)
    return 1;
  else
    return sub_190A486DC();
}

uint64_t sub_190A2D32C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_190A2D3A8()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D660 = result;
  return result;
}

uint64_t sub_190A2D3CC()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B510);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D6A8 = v0;
  strcpy(byte_1ECF6D6B0, "displayGamut");
  BYTE5(qword_1ECF6D6B8) = 0;
  HIWORD(qword_1ECF6D6B8) = -5120;
  return result;
}

ValueMetadata *type metadata accessor for DisplayGamutKey()
{
  return &type metadata for DisplayGamutKey;
}

unint64_t sub_190A2D458()
{
  unint64_t result;

  result = qword_1ECF6AA10;
  if (!qword_1ECF6AA10)
  {
    result = MEMORY[0x19401429C](&unk_190A5E280, &type metadata for DisplayGamutKey.CodableDisplayGamut);
    atomic_store(result, (unint64_t *)&qword_1ECF6AA10);
  }
  return result;
}

unint64_t sub_190A2D4A0()
{
  unint64_t result;

  result = qword_1ECF6AA28;
  if (!qword_1ECF6AA28)
  {
    result = MEMORY[0x19401429C](&unk_190A5E258, &type metadata for DisplayGamutKey.CodableDisplayGamut);
    atomic_store(result, (unint64_t *)&qword_1ECF6AA28);
  }
  return result;
}

unint64_t sub_190A2D4E8()
{
  unint64_t result;

  result = qword_1ECF6AA08;
  if (!qword_1ECF6AA08)
  {
    result = MEMORY[0x19401429C](&unk_190A5E230, &type metadata for DisplayGamutKey.CodableDisplayGamut);
    atomic_store(result, (unint64_t *)&qword_1ECF6AA08);
  }
  return result;
}

uint64_t sub_190A2D52C(char *a1, char *a2)
{
  return sub_190A2795C(*a1, *a2);
}

uint64_t sub_190A2D538()
{
  sub_190A487C0();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_190A2D5B4()
{
  sub_190A47B18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190A2D60C()
{
  sub_190A487C0();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_190A2D684@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_190A484F0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_190A2D6E0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1111970419;
  if (*v1)
    v2 = 0x5079616C70736964;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE900000000000033;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_190A2D71C()
{
  sub_190A2DA24();
  return sub_190A47C2C();
}

uint64_t sub_190A2D778()
{
  sub_190A2DA24();
  return sub_190A47C14();
}

uint64_t sub_190A2D7C4(char *a1, char *a2)
{
  return sub_190A2D984(*a1, *a2);
}

uint64_t sub_190A2D7D0(char *a1, char *a2)
{
  return sub_1909FF784(*a1, *a2);
}

uint64_t sub_190A2D7DC(char *a1, char *a2)
{
  return sub_1909FF980(*a1, *a2);
}

uint64_t sub_190A2D7E8(char *a1, char *a2)
{
  return sub_1909FFC80(*a1, *a2);
}

uint64_t sub_190A2D7F4()
{
  if (qword_1ECF6B5E8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_190A2D834@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  uint64_t v4;
  unsigned int *v5;

  v3 = *a1;
  v4 = sub_190A466FC();
  v5 = (unsigned int *)MEMORY[0x1E0CD8AA0];
  if (!v3)
    v5 = (unsigned int *)MEMORY[0x1E0CD8A98];
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a2, *v5, v4);
}

uint64_t sub_190A2D89C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_190A2DA68(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_190A2D8C8()
{
  uint64_t v0;

  if (qword_1ECF6B5E0 != -1)
    swift_once();
  v0 = qword_1ECF6D6A8;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_190A2D940()
{
  unint64_t result;

  result = qword_1ECF6AA18;
  if (!qword_1ECF6AA18)
  {
    result = MEMORY[0x19401429C](&unk_190A5E2C8, &type metadata for DisplayGamutKey.CodableDisplayGamut);
    atomic_store(result, (unint64_t *)&qword_1ECF6AA18);
  }
  return result;
}

uint64_t sub_190A2D984(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x5079616C70736964;
  else
    v3 = 1111970419;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE900000000000033;
  if ((a2 & 1) != 0)
    v5 = 0x5079616C70736964;
  else
    v5 = 1111970419;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000033;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 0;
  else
    v7 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

unint64_t sub_190A2DA24()
{
  unint64_t result;

  result = qword_1ECF6AA20;
  if (!qword_1ECF6AA20)
  {
    result = MEMORY[0x19401429C](&unk_190A5E374, &type metadata for DisplayGamutKey.CodableDisplayGamut);
    atomic_store(result, (unint64_t *)&qword_1ECF6AA20);
  }
  return result;
}

uint64_t sub_190A2DA68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *, uint64_t, uint64_t);
  int v7;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t v16[6];

  v2 = sub_190A466FC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v6(v5, a1, v2);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v7 == *MEMORY[0x1E0CD8A98] || v7 == *MEMORY[0x1E0CD8AA0])
    return v7 != *MEMORY[0x1E0CD8A98];
  v16[3] = v2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  v6((char *)boxed_opaque_existential_1, a1, v2);
  v10 = sub_190A48334();
  swift_allocError();
  v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1ED3B8);
  sub_1908B3694((uint64_t)v16, v12);
  v15[0] = sub_190A482C8();
  v15[1] = v13;
  sub_190A47B3C();
  v16[5] = 36;
  sub_190A4867C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A48304();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v12, *MEMORY[0x1E0DEC4B0], v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t storeEnumTagSinglePayload for DisplayGamutKey.CodableDisplayGamut(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190A2DCA8 + 4 * byte_190A5E1F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190A2DCDC + 4 * byte_190A5E1F0[v4]))();
}

uint64_t sub_190A2DCDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A2DCE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190A2DCECLL);
  return result;
}

uint64_t sub_190A2DCF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190A2DD00);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190A2DD04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A2DD0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DisplayGamutKey.CodableDisplayGamut()
{
  return &type metadata for DisplayGamutKey.CodableDisplayGamut;
}

uint64_t static ControlArchiver.archive<A>(control:environment:asyncDataSource:fileHandle:)(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v11;

  *(_QWORD *)(v6 + 48) = a4;
  *(_OWORD *)(v6 + 16) = *a2;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 56) = v11;
  *v11 = v6;
  v11[1] = sub_190A2DDB0;
  return static ControlArchiver.archive<A>(control:environment:asyncDataSource:)(a1, (_OWORD *)(v6 + 16), a3, a5, a6);
}

uint64_t sub_190A2DDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[8] = a1;
  v4[9] = a2;
  v4[10] = v2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_190A2DE20()
{
  uint64_t v0;

  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 64);
  sub_1908CDC14();
  sub_190A47F14();
  sub_1908B53FC(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190A2DE98()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_190A2DEA4(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_190A2DEFC()
{
  sub_190A48298();
  sub_190A47B3C();
  sub_190A4867C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  sub_190A4867C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  return 0;
}

void sub_190A2E050()
{
  uint64_t v0;

  sub_190A2DEA4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t static ControlArchiver.archive<A>(control:environment:asyncDataSource:)(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 32) = a4;
  *(_QWORD *)(v5 + 40) = a5;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a3;
  *(_QWORD *)(v5 + 48) = type metadata accessor for ControlArchiveStorage(0);
  *(_QWORD *)(v5 + 56) = swift_task_alloc();
  *(_OWORD *)(v5 + 64) = *a2;
  return swift_task_switch();
}

uint64_t sub_190A2E0C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;

  if (WidgetEnvironment.enumeratedCount()() < 1)
  {
    sub_1908CDC58();
    swift_allocError();
    *(_QWORD *)v3 = 0;
    *(_QWORD *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 16) = 3;
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v1;
    *v1 = v0;
    v1[1] = sub_190A2E194;
    return sub_190A2E300(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  }
}

uint64_t sub_190A2E194()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_190A2E1F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 88);
  sub_1908AA2F4(&qword_1EE1EB6B8, type metadata accessor for ControlArchiveStorage, (uint64_t)&unk_190A546B0);
  v2 = sub_190A47A34();
  if (v1)
  {
    sub_1908B5150(*(_QWORD *)(v0 + 56), type metadata accessor for ControlArchiveStorage);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = v2;
    v6 = v3;
    sub_1908B5150(*(_QWORD *)(v0 + 56), type metadata accessor for ControlArchiveStorage);
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v5, v6);
  }
}

uint64_t sub_190A2E2CC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190A2E300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t);

  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  v7[17] = *(_QWORD *)(type metadata accessor for ControlTemplateType() - 8);
  v7[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
  v7[19] = swift_task_alloc();
  v7[20] = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0);
  v7[21] = swift_task_alloc();
  v10 = sub_190A46C30();
  v7[22] = v10;
  v7[23] = *(_QWORD *)(v10 - 8);
  v7[24] = swift_task_alloc();
  v7[25] = swift_task_alloc();
  v7[26] = swift_task_alloc();
  v7[27] = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  v7[28] = swift_task_alloc();
  type metadata accessor for BundleStub();
  v7[29] = swift_task_alloc();
  v11 = sub_190A46084();
  v7[30] = v11;
  v7[31] = *(_QWORD *)(v11 - 8);
  v7[32] = swift_task_alloc();
  v7[33] = type metadata accessor for ControlArchiveStorageMetadata(0);
  v7[34] = swift_task_alloc();
  v14 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a7 + 8) + *(_QWORD *)(a7 + 8));
  v12 = (_QWORD *)swift_task_alloc();
  v7[35] = v12;
  *v12 = v7;
  v12[1] = sub_190A2E4C4;
  return v14(a6, a7);
}

uint64_t sub_190A2E4C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 288) = a1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_190A2E5D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  id v14;
  uint64_t *v15;
  id v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(uint64_t, uint64_t);
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t result;
  uint64_t v36;
  uint64_t i;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  void (*v46)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t (*v63)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v64;
  id v65;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(void **)(v0 + 112);
  v3 = *(id *)(v0 + 96);
  swift_retain();
  v4 = v2;
  swift_retain();
  sub_190A46078();
  BundleStub.init(_:)((uint64_t)objc_msgSend(v3, sel_extensionIdentity), v1);
  if (qword_1ECF6C5C8 != -1)
    swift_once();
  v5 = *(int **)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 272);
  v7 = *(_QWORD *)(v0 + 248);
  v8 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 240);
  v54 = *(_QWORD *)(v0 + 256);
  v55 = *(uint64_t **)(v0 + 224);
  v56 = *(_QWORD *)(v0 + 288);
  v57 = *(_QWORD *)(v0 + 208);
  v58 = *(_QWORD *)(v0 + 184);
  v59 = *(_QWORD *)(v0 + 216);
  v62 = *(uint64_t **)(v0 + 168);
  v60 = *(_QWORD *)(v0 + 176);
  v61 = *(_QWORD *)(v0 + 160);
  v11 = *(_QWORD *)(v0 + 104);
  v10 = *(void **)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 96);
  swift_beginAccess();
  v13 = qword_1ECF6C5E8[0];
  *(_QWORD *)(v6 + v5[6]) = v12;
  sub_1908AF5D8(v8, v6, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6 + v5[8], v54, v9);
  *(double *)(v6 + v5[5]) = v13;
  v64 = v11;
  v65 = v10;
  swift_retain();
  v14 = v10;
  WidgetEnvironment.filterForControlArchiving()();
  sub_1908B5150(v8, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v54, v9);
  swift_release();

  v15 = (uint64_t *)(v6 + v5[7]);
  *v15 = v11;
  v15[1] = (uint64_t)v10;
  *(_QWORD *)(v6 + v5[9]) = v56;
  swift_retain();
  v16 = v10;
  sub_190A46C24();
  v17 = (char *)v55 + *(int *)(v59 + 20);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
  *(_QWORD *)(v0 + 296) = v18;
  v18(v17, v57, v60);
  *v55 = v11;
  v55[1] = (uint64_t)v16;
  v19 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
  *(_QWORD *)(v0 + 304) = v19;
  v19(v57, v60);
  v21 = *v55;
  v20 = (void *)v55[1];
  v22 = *(int *)(v61 + 20);
  *(_DWORD *)(v0 + 344) = v22;
  v18((char *)v62 + v22, (uint64_t)v17, v60);
  swift_retain();
  v23 = v20;
  v24 = MEMORY[0x1E0DEE9D8];
  v25 = sub_1908FF740(MEMORY[0x1E0DEE9D8]);
  v64 = v21;
  v65 = v23;
  swift_retain();
  v26 = v23;
  swift_bridgeObjectRetain();
  v27 = sub_1908FFDE4(&v64, v25);
  v29 = v28;
  v31 = v30;
  swift_release();

  swift_bridgeObjectRelease();
  *v62 = v27;
  v62[1] = v29;
  v62[2] = v31;
  if (!(v29 >> 62))
  {
    v32 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v33 = v32 - 1;
    if (v32 >= 1)
      goto LABEL_5;
LABEL_16:
    v40 = *(_QWORD *)(v0 + 184);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v40 + 56))(*(_QWORD *)(v0 + 152), 1, 1, *(_QWORD *)(v0 + 176));
LABEL_19:
    v47 = *(_QWORD *)(v0 + 272);
    v48 = *(_QWORD *)(v0 + 224);
    v49 = *(_QWORD *)(v0 + 168);
    v50 = *(_QWORD *)(v0 + 80);
    swift_release();
    sub_1908B5150(v49, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
    sub_1908B5150(v48, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
    sub_1908BD0B4(v47, v50, type metadata accessor for ControlArchiveStorageMetadata);
    v51 = type metadata accessor for ControlArchiveStorage(0);
    *(_QWORD *)(v50 + *(int *)(v51 + 20)) = MEMORY[0x1E0DEE9D8];
    *(_DWORD *)(v50 + *(int *)(v51 + 24)) = 2;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_bridgeObjectRetain_n();
  v39 = sub_190A48484();
  swift_bridgeObjectRelease();
  v33 = v39 - 1;
  if (v39 < 1)
    goto LABEL_16;
LABEL_5:
  *(_QWORD *)(v0 + 312) = v24;
  if ((sub_1908EF6EC(v33) & 1) == 0)
  {
    v34 = *(_QWORD **)(v0 + 168);
    swift_bridgeObjectRelease();
    *v34 = v24;
    swift_bridgeObjectRelease();
    v34[1] = v24;
    swift_bridgeObjectRelease();
    v34[2] = v24;
  }
  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 296))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 168) + *(int *)(v0 + 344), *(_QWORD *)(v0 + 176));
  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    v36 = sub_190A48484();
    result = swift_bridgeObjectRelease();
    if (!v36)
      goto LABEL_18;
  }
  else
  {
    v36 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v36)
      goto LABEL_18;
  }
  if (v36 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v36; ++i)
  {
    if ((v29 & 0xC000000000000001) != 0)
    {
      v38 = MEMORY[0x194013510](i, v29);
    }
    else
    {
      v38 = *(_QWORD *)(v29 + 8 * i + 32);
      swift_retain();
    }
    (*(void (**)(_QWORD))(**(_QWORD **)(v38 + 16) + 112))(*(_QWORD *)(v0 + 200));
    swift_release();
  }
LABEL_18:
  v41 = *(_QWORD *)(v0 + 200);
  v43 = *(_QWORD *)(v0 + 176);
  v42 = *(_QWORD *)(v0 + 184);
  v44 = *(_QWORD *)(v0 + 152);
  swift_bridgeObjectRelease();
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32);
  v45(v44, v41, v43);
  v46 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56);
  *(_QWORD *)(v0 + 320) = v46;
  v46(v44, 0, 1, v43);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v44, 1, v43) == 1)
    goto LABEL_19;
  v52 = *(_QWORD *)(v0 + 128);
  v45(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 176));
  v63 = (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))(**(int **)(v52 + 16) + *(_QWORD *)(v52 + 16));
  v53 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 328) = v53;
  *v53 = v0;
  v53[1] = sub_190A2EBDC;
  return v63(v0 + 16, *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
}

uint64_t sub_190A2EBDC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 336) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_190A2EC48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t i;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  void (*v29)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t (*v37)(uint64_t, _QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v2);
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (char *)swift_task_alloc();
  (*(void (**)(char *, _QWORD *, uint64_t))(v4 + 16))(v5, v3, v2);
  ControlTemplateType.init<A>(_:)(v5, v2, v1);
  swift_task_dealloc();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *(_QWORD *)(v0 + 312);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v7 = sub_1908F2818(0, *(_QWORD *)(v7 + 16) + 1, 1, *(_QWORD *)(v0 + 312));
  v9 = *(_QWORD *)(v7 + 16);
  v8 = *(_QWORD *)(v7 + 24);
  if (v9 >= v8 >> 1)
    v7 = sub_1908F2818(v8 > 1, v9 + 1, 1, v7);
  v10 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
  v11 = *(_QWORD *)(v0 + 192);
  v13 = *(_QWORD *)(v0 + 168);
  v12 = *(_QWORD *)(v0 + 176);
  v15 = *(_QWORD *)(v0 + 136);
  v14 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v7 + 16) = v9 + 1;
  sub_1908BD0B4(v14, v7+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v9, (uint64_t (*)(_QWORD))type metadata accessor for ControlTemplateType);
  v10(v11, v12);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v16 = *(_QWORD *)(v13 + 8);
  if (!(v16 >> 62))
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17 > 0)
      goto LABEL_7;
LABEL_18:
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 320))(*(_QWORD *)(v0 + 152), 1, 1, *(_QWORD *)(v0 + 176));
LABEL_21:
    v30 = *(_QWORD *)(v0 + 272);
    v31 = *(_QWORD *)(v0 + 224);
    v32 = *(_QWORD *)(v0 + 168);
    v33 = *(_QWORD *)(v0 + 80);
    swift_release();
    sub_1908B5150(v32, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
    sub_1908B5150(v31, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
    sub_1908BD0B4(v30, v33, type metadata accessor for ControlArchiveStorageMetadata);
    v34 = type metadata accessor for ControlArchiveStorage(0);
    *(_QWORD *)(v33 + *(int *)(v34 + 20)) = v7;
    *(_DWORD *)(v33 + *(int *)(v34 + 24)) = 2;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_bridgeObjectRetain_n();
  v17 = sub_190A48484();
  swift_bridgeObjectRelease();
  if (v17 <= 0)
    goto LABEL_18;
LABEL_7:
  *(_QWORD *)(v0 + 312) = v7;
  if ((sub_1908EF6EC(v17 - 1) & 1) == 0)
  {
    v18 = *(_QWORD **)(v0 + 168);
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x1E0DEE9D8];
    *v18 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    v18[1] = v19;
    swift_bridgeObjectRelease();
    v18[2] = v19;
  }
  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 296))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 168) + *(int *)(v0 + 344), *(_QWORD *)(v0 + 176));
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_190A48484();
    result = swift_bridgeObjectRelease();
    if (!v21)
      goto LABEL_20;
  }
  else
  {
    v21 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v21)
      goto LABEL_20;
  }
  if (v21 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v21; ++i)
  {
    if ((v16 & 0xC000000000000001) != 0)
    {
      v23 = MEMORY[0x194013510](i, v16);
    }
    else
    {
      v23 = *(_QWORD *)(v16 + 8 * i + 32);
      swift_retain();
    }
    (*(void (**)(_QWORD))(**(_QWORD **)(v23 + 16) + 112))(*(_QWORD *)(v0 + 200));
    swift_release();
  }
LABEL_20:
  v24 = *(_QWORD *)(v0 + 200);
  v25 = *(_QWORD *)(v0 + 176);
  v26 = *(_QWORD *)(v0 + 184);
  v27 = *(_QWORD *)(v0 + 152);
  swift_bridgeObjectRelease();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32);
  v28(v27, v24, v25);
  v29 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56);
  *(_QWORD *)(v0 + 320) = v29;
  v29(v27, 0, 1, v25);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v27, 1, v25) == 1)
    goto LABEL_21;
  v35 = *(_QWORD *)(v0 + 128);
  v28(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 176));
  v37 = (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))(**(int **)(v35 + 16) + *(_QWORD *)(v35 + 16));
  v36 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 328) = v36;
  *v36 = v0;
  v36[1] = sub_190A2EBDC;
  return v37(v0 + 16, *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
}

uint64_t sub_190A2F0CC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  swift_release();
  v1(v4, v5);
  sub_1908B5150(v6, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
  sub_1908B5150(v3, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  sub_1908B5150(v2, type metadata accessor for ControlArchiveStorageMetadata);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static ControlArchiver.archive<A>(control:environment:dataSource:fileHandle:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  void *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v22[1] = a4;
  v11 = type metadata accessor for ControlArchiveStorage(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(uint64_t **)a2;
  v15 = *(void **)(a2 + 8);
  v23 = *(_QWORD *)a2;
  v24 = (unint64_t)v15;
  if (WidgetEnvironment.enumeratedCount()() < 1)
  {
    sub_1908CDC58();
    swift_allocError();
    *(_QWORD *)v18 = 0;
    *(_QWORD *)(v18 + 8) = 0;
    *(_BYTE *)(v18 + 16) = 3;
    return swift_willThrow();
  }
  else
  {
    v16 = v25;
    result = sub_190A2F38C(a3, a1, v14, v15, a5, a6, (uint64_t)v13);
    if (!v16)
    {
      sub_1908AA2F4(&qword_1EE1EB6B8, type metadata accessor for ControlArchiveStorage, (uint64_t)&unk_190A546B0);
      v19 = sub_190A47A34();
      v21 = v20;
      v23 = v19;
      v24 = v20;
      sub_1908CDC14();
      sub_190A47F14();
      sub_1908B5150((uint64_t)v13, type metadata accessor for ControlArchiveStorage);
      return sub_1908B53FC(v19, v21);
    }
  }
  return result;
}

uint64_t sub_190A2F38C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  void *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  void *v54;
  _QWORD *v55;
  id v56;
  char *v57;
  uint64_t *v58;
  _QWORD *v59;
  void (*v60)(void);
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t i;
  uint64_t v73;
  _QWORD *v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  void (*v77)(char *, uint64_t, uint64_t, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  id v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t *v112;
  _QWORD *v113;
  uint64_t v114;
  char *v115;
  _QWORD *v116;
  id v117;
  uint64_t v118;

  v99 = a4;
  v100 = a3;
  v98 = a2;
  v95 = a7;
  v10 = type metadata accessor for ControlTemplateType();
  v109 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v110 = (uint64_t)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
  MEMORY[0x1E0C80A78](v12);
  v111 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0);
  MEMORY[0x1E0C80A78](v107);
  v112 = (uint64_t *)((char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v97 = sub_190A46C30();
  v113 = *(_QWORD **)(v97 - 8);
  v15 = MEMORY[0x1E0C80A78](v97);
  v115 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v91 - v18;
  MEMORY[0x1E0C80A78](v17);
  v103 = (char *)&v91 - v20;
  v101 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  MEMORY[0x1E0C80A78](v101);
  v102 = (uint64_t *)((char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = type metadata accessor for BundleStub();
  MEMORY[0x1E0C80A78](v22);
  v96 = (uint64_t)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_190A46084();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v108 = (char *)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for ControlArchiveStorageMetadata(0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v91 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a6;
  v31 = *(uint64_t (**)(uint64_t))(a6 + 8);
  v32 = a1;
  v33 = v114;
  v34 = a5;
  v35 = a5;
  v36 = v30;
  result = v31(v35);
  if (v33)
    return result;
  v38 = (void *)result;
  v92 = v25;
  v93 = v24;
  v39 = v27;
  v94 = v29;
  v114 = 0;
  v104 = v32;
  v105 = v34;
  v106 = v36;
  v40 = (unint64_t)v98;
  v41 = v100;
  swift_retain();
  v98 = v99;
  swift_retain();
  v42 = (uint64_t)v108;
  sub_190A46078();
  v43 = objc_msgSend((id)v40, sel_extensionIdentity);
  v44 = v96;
  BundleStub.init(_:)((uint64_t)v43, v96);
  v99 = v38;
  v45 = v41;
  if (qword_1ECF6C5C8 != -1)
    goto LABEL_31;
LABEL_3:
  swift_beginAccess();
  v46 = (uint64_t)v94;
  *(_QWORD *)&v94[*(int *)(v39 + 24)] = v40;
  v47 = qword_1ECF6C5E8[0];
  sub_1908AF5D8(v44, v46, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  v48 = v92;
  v49 = v42;
  v50 = v93;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 16))(v46 + *(int *)(v39 + 32), v49, v93);
  *(double *)(v46 + *(int *)(v39 + 20)) = v47;
  v51 = v98;
  v116 = v45;
  v117 = v98;
  swift_retain();
  v52 = v51;
  WidgetEnvironment.filterForControlArchiving()();
  sub_1908B5150(v44, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v108, v50);

  swift_release();
  v53 = (uint64_t)v116;
  v54 = v117;
  v55 = (_QWORD *)(v46 + *(int *)(v39 + 28));
  *v55 = v116;
  v55[1] = v54;
  *(_QWORD *)(v46 + *(int *)(v39 + 36)) = v99;
  swift_retain();
  v56 = v54;
  v57 = v103;
  sub_190A46C24();
  v58 = v102;
  v59 = v113;
  v60 = (void (*)(void))v113[2];
  v61 = v97;
  ((void (*)(char *, char *, uint64_t))v60)((char *)v102 + *(int *)(v101 + 20), v57, v97);
  *v58 = v53;
  v58[1] = (uint64_t)v56;
  v103 = (char *)v59[1];
  ((void (*)(char *, uint64_t))v103)(v57, v61);
  v62 = *v58;
  v63 = (void *)v58[1];
  v45 = v112;
  v107 = (uint64_t)v112 + *(int *)(v107 + 20);
  v108 = (char *)v60;
  v60();
  swift_retain();
  v64 = v63;
  v65 = sub_1908FF740(MEMORY[0x1E0DEE9D8]);
  v116 = (_QWORD *)v62;
  v117 = v64;
  swift_retain();
  v66 = v64;
  swift_bridgeObjectRetain();
  v67 = sub_1908FFDE4((uint64_t *)&v116, v65);
  v40 = v68;
  v44 = v69;
  swift_bridgeObjectRelease();

  swift_release();
  *v45 = v67;
  v45[1] = v40;
  v45[2] = v44;
  if (!(v40 >> 62))
  {
    v70 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v70 < 1)
      goto LABEL_33;
    goto LABEL_5;
  }
  swift_bridgeObjectRetain_n();
  v70 = sub_190A48484();
  swift_bridgeObjectRelease();
  if (v70 >= 1)
  {
LABEL_5:
    v39 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      if ((sub_1908EF6EC(v70 - 1) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v71 = MEMORY[0x1E0DEE9D8];
        *v45 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRelease();
        v45[1] = v71;
        swift_bridgeObjectRelease();
        v45[2] = v71;
      }
      ((void (*)(char *, uint64_t, uint64_t))v108)(v19, v107, v61);
      if (v40 >> 62)
      {
        swift_bridgeObjectRetain();
        v42 = sub_190A48484();
        swift_bridgeObjectRelease();
        if (!v42)
          goto LABEL_17;
      }
      else
      {
        v42 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v42)
          goto LABEL_17;
      }
      if (v42 < 1)
      {
        __break(1u);
LABEL_31:
        swift_once();
        goto LABEL_3;
      }
      for (i = 0; i != v42; ++i)
      {
        if ((v40 & 0xC000000000000001) != 0)
        {
          v73 = MEMORY[0x194013510](i, v40);
        }
        else
        {
          v73 = *(_QWORD *)(v40 + 8 * i + 32);
          swift_retain();
        }
        (*(void (**)(char *))(**(_QWORD **)(v73 + 16) + 112))(v19);
        swift_release();
      }
LABEL_17:
      swift_bridgeObjectRelease();
      v74 = v113;
      v75 = (void (*)(char *, char *, uint64_t))v113[4];
      v76 = v111;
      v75(v111, v19, v61);
      v77 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v74[7];
      v77(v76, 0, 1, v61);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v74[6])(v76, 1, v61) == 1)
      {
        v45 = v112;
        goto LABEL_35;
      }
      v78 = v115;
      v75(v115, v76, v61);
      v79 = v114;
      (*(void (**)(_QWORD **__return_ptr, char *, uint64_t))(v106 + 16))(&v116, v78, v105);
      v114 = v79;
      if (v79)
      {
        swift_release();
        ((void (*)(char *, uint64_t))v103)(v78, v61);
        sub_1908B5150((uint64_t)v112, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
        swift_bridgeObjectRelease();
        sub_1908B5150((uint64_t)v102, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
        return sub_1908B5150((uint64_t)v94, type metadata accessor for ControlArchiveStorageMetadata);
      }
      v80 = v118;
      v81 = __swift_project_boxed_opaque_existential_1(&v116, v118);
      MEMORY[0x1E0C80A78](v81);
      v83 = (char *)&v91 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v84 + 16))(v83);
      v44 = v110;
      ControlTemplateType.init<A>(_:)(v83, v80, v110);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v39 = sub_1908F2818(0, *(_QWORD *)(v39 + 16) + 1, 1, v39);
      v85 = v109;
      v87 = *(_QWORD *)(v39 + 16);
      v86 = *(_QWORD *)(v39 + 24);
      if (v87 >= v86 >> 1)
        v39 = sub_1908F2818(v86 > 1, v87 + 1, 1, v39);
      *(_QWORD *)(v39 + 16) = v87 + 1;
      sub_1908BD0B4(v44, v39+ ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))+ *(_QWORD *)(v85 + 72) * v87, (uint64_t (*)(_QWORD))type metadata accessor for ControlTemplateType);
      ((void (*)(char *, uint64_t))v103)(v115, v61);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v116);
      v45 = v112;
      v40 = v112[1];
      if (v40 >> 62)
      {
        swift_bridgeObjectRetain_n();
        v70 = sub_190A48484();
        swift_bridgeObjectRelease();
        if (v70 <= 0)
        {
LABEL_27:
          swift_bridgeObjectRelease();
          goto LABEL_34;
        }
      }
      else
      {
        v70 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v70 <= 0)
          goto LABEL_27;
      }
    }
  }
LABEL_33:
  swift_bridgeObjectRelease();
  v77 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v113[7];
  v39 = MEMORY[0x1E0DEE9D8];
LABEL_34:
  v77(v111, 1, 1, v61);
LABEL_35:
  v88 = (uint64_t)v102;
  v89 = (uint64_t)v94;
  swift_release();
  sub_1908B5150((uint64_t)v45, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
  sub_1908B5150(v88, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  v90 = v95;
  sub_1908BD0B4(v89, v95, type metadata accessor for ControlArchiveStorageMetadata);
  result = type metadata accessor for ControlArchiveStorage(0);
  *(_QWORD *)(v90 + *(int *)(result + 20)) = v39;
  *(_DWORD *)(v90 + *(int *)(result + 24)) = 2;
  return result;
}

uint64_t static ControlUnarchiver.unarchive(url:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  result = sub_190A45FD0();
  if (!v1)
  {
    v5 = result;
    v6 = v4;
    static ControlUnarchiver.unarchive(data:)(a1);
    return sub_1908B53FC(v5, v6);
  }
  return result;
}

uint64_t static ControlUnarchiver.unarchive(data:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;

  v3 = type metadata accessor for ControlArchiveStorage(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v23 - v7;
  sub_1908AA2F4(&qword_1EE1EB748, v9, (uint64_t)&unk_190A546D8);
  result = sub_190A47D94();
  if (!v1)
  {
    sub_1908AF5D8((uint64_t)v8, (uint64_t)v6, type metadata accessor for ControlArchiveStorage);
    v11 = type metadata accessor for StorageBackedControlArchive(0);
    v12 = swift_allocObject();
    sub_1908AF5D8((uint64_t)v6, v12 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
    v13 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
    *(_QWORD *)(v12 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_systemVersion) = *(_QWORD *)&v6[v13[5]];
    v14 = &v6[v13[8]];
    v15 = v12 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
    v16 = sub_190A46084();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v15, v14, v16);
    v17 = &v6[v13[7]];
    v19 = *(_QWORD *)v17;
    v25 = (id)*((_QWORD *)v17 + 1);
    v18 = v25;
    v20 = (_QWORD *)(v12 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment);
    *v20 = v19;
    v20[1] = v18;
    v24 = *(id *)&v6[v13[6]];
    *(_QWORD *)(v12 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_control) = v24;
    *(_QWORD *)(v12 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_state) = *(_QWORD *)&v6[v13[9]];
    sub_1908BD0B4((uint64_t)v6, v12 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);
    a1[3] = v11;
    a1[4] = sub_1908AA2F4(&qword_1EE1EB788, type metadata accessor for StorageBackedControlArchive, (uint64_t)&protocol conformance descriptor for StorageBackedControlArchive);
    *a1 = v12;
    swift_retain();
    v21 = v25;
    v22 = v24;
    swift_retain();
    return sub_1908B5150((uint64_t)v8, type metadata accessor for ControlArchiveStorage);
  }
  return result;
}

uint64_t dispatch thunk of AsyncControlArchiveDataSource.getState()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_190930784;
  return v7(a1, a2);
}

uint64_t dispatch thunk of AsyncControlArchiveDataSource.makeTemplate(environment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1908C5090;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ControlArchiveDataSource.getState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ControlArchiveDataSource.makeTemplate(environment:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for ControlArchiver()
{
  return &type metadata for ControlArchiver;
}

ValueMetadata *type metadata accessor for ControlUnarchiver()
{
  return &type metadata for ControlUnarchiver;
}

uint64_t sub_190A30178(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 - 1 <= 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for ControlArchivingError(uint64_t a1)
{
  return sub_190A301A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_190A301A4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 - 1 <= 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s9WidgetKit21ControlArchivingErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_190A30178(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ControlArchivingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_190A30178(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_190A301A4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ControlArchivingError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_190A301A4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlArchivingError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlArchivingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_190A3032C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_190A30344(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ControlArchivingError()
{
  return &type metadata for ControlArchivingError;
}

uint64_t PlaceholderArchivingDataSource.__allocating_init(source:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1908B4BBC(a1, v2 + 16);
  return v2;
}

uint64_t PlaceholderArchivingDataSource.init(source:)(__int128 *a1)
{
  uint64_t v1;

  sub_1908B4BBC(a1, v1 + 16);
  return v1;
}

uint64_t sub_190A303CC()
{
  sub_190A462E8();
  return sub_190A462D0();
}

uint64_t sub_190A30400@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v6 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v2 + 2;
  v11 = v2[5];
  v10 = v2[6];
  __swift_project_boxed_opaque_existential_1(v9, v11);
  result = ControlArchive.template(in:)(a1, v11, v10);
  if (!v3)
  {
    ControlTemplateType.asPlaceholderTemplate()(a2);
    return sub_190A304BC((uint64_t)v8);
  }
  return result;
}

uint64_t sub_190A304BC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ControlTemplateType();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t PlaceholderArchivingDataSource.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t PlaceholderArchivingDataSource.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_190A30538@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v6 = type metadata accessor for ControlTemplateType();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  v10 = (_QWORD *)(*v2 + 16);
  v11 = *(_QWORD *)(*v2 + 40);
  v12 = *(_QWORD *)(v9 + 48);
  __swift_project_boxed_opaque_existential_1(v10, v11);
  result = ControlArchive.template(in:)(a1, v11, v12);
  if (!v3)
  {
    ControlTemplateType.asPlaceholderTemplate()(a2);
    return sub_190A304BC((uint64_t)v8);
  }
  return result;
}

uint64_t type metadata accessor for PlaceholderArchivingDataSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for PlaceholderArchivingDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlaceholderArchivingDataSource.__allocating_init(source:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PlaceholderArchivingDataSource.getState()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of PlaceholderArchivingDataSource.makeTemplate(environment:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t sub_190A30664@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return WidgetViewCollection.viewableEntry(for:in:ignoringEnvironmentKeys:)(a1, MEMORY[0x1E0DEE9D8], a2);
}

uint64_t TimelineViewCollection.viewableEntry(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t))(a4 + 104))(a1, a2, MEMORY[0x1E0DEE9D8], a3);
}

uint64_t sub_190A306B4(uint64_t a1, uint64_t a2)
{
  return sub_190A306D4(a1, a2);
}

uint64_t sub_190A306D4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = sub_190979C18();
  v7 = v6;
  v8 = v5;
  if ((v9 & 1) != 0)
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    if ((v5 & 1) != 0)
      goto LABEL_5;
    goto LABEL_7;
  }
  v10 = result;
  v11 = swift_bridgeObjectRetain();
  v12 = sub_1908B62B4(v11);
  result = swift_bridgeObjectRelease();
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v10 >= *(_QWORD *)(v12 + 16))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1908BBDC8(v12 + 40 * v10 + 32, a1);
  result = swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
LABEL_5:
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
LABEL_7:
  v13 = swift_bridgeObjectRetain();
  v14 = sub_1908B62B4(v13);
  result = swift_bridgeObjectRelease();
  if ((v7 & 0x8000000000000000) != 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v7 < *(_QWORD *)(v14 + 16))
  {
    sub_1908BBDC8(v14 + 40 * v7 + 32, a2);
    return swift_bridgeObjectRelease();
  }
LABEL_13:
  __break(1u);
  return result;
}

unint64_t TimelineViewCollection.entriesBookending(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t result;
  char v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  unint64_t v15;

  result = sub_190A30C38(a3, a4, a5);
  v12 = v11;
  v13 = v10;
  if ((v14 & 1) != 0)
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    if ((v10 & 1) != 0)
      goto LABEL_3;
  }
  else
  {
    v15 = result;
    result = sub_190A3170C(&v15, a4, a5, a1);
    if ((v13 & 1) != 0)
    {
LABEL_3:
      *(_QWORD *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return result;
    }
  }
  v15 = v12;
  return sub_190A3170C(&v15, a4, a5, a2);
}

double sub_190A308CC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  _QWORD v27[2];
  uint64_t v28;
  _QWORD v29[2];
  char v30;

  v27[1] = a6;
  v13 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_190A46084();
  v16 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v18 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a5 + 8))(a3, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, a4);
  v19 = sub_190A47884();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 16))(v29, a3, a5);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  v20 = v29[0];
  v21 = v29[1];
  LOBYTE(a2) = v30;
  v22 = (int *)type metadata accessor for ViewableTimelineEntry();
  v23 = a7 + v22[7];
  v24 = type metadata accessor for WidgetViewMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a7, v18, v28);
  *(_QWORD *)(a7 + v22[5]) = v19;
  v25 = a7 + v22[6];
  *(_QWORD *)v25 = v20;
  *(_QWORD *)(v25 + 8) = v21;
  *(_BYTE *)(v25 + 16) = a2;
  result = 0.0;
  *(_OWORD *)(a7 + v22[8]) = xmmword_190A4A370;
  return result;
}

uint64_t ViewableTimelineEntry.init(date:view:relevance:viewMetadata:entryData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;

  v13 = *a3;
  v14 = a3[1];
  v15 = *((_BYTE *)a3 + 16);
  v16 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a7, a1, v16);
  v17 = (int *)type metadata accessor for ViewableTimelineEntry();
  *(_QWORD *)(a7 + v17[5]) = a2;
  v18 = a7 + v17[6];
  *(_QWORD *)v18 = v13;
  *(_QWORD *)(v18 + 8) = v14;
  *(_BYTE *)(v18 + 16) = v15;
  result = sub_1908B4BD4(a4, a7 + v17[7], &qword_1ECF6AE20);
  v20 = (_QWORD *)(a7 + v17[8]);
  *v20 = a5;
  v20[1] = a6;
  return result;
}

double sub_190A30B3C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A46030();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  v9 = sub_190A47884();
  v10 = (int *)type metadata accessor for ViewableTimelineEntry();
  v11 = a3 + v10[7];
  v12 = type metadata accessor for WidgetViewMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)(a3 + v10[5]) = v9;
  v13 = a3 + v10[6];
  *(_QWORD *)v13 = 0;
  *(_QWORD *)(v13 + 8) = 0;
  *(_BYTE *)(v13 + 16) = 1;
  result = 0.0;
  *(_OWORD *)(a3 + v10[8]) = xmmword_190A4A370;
  return result;
}

uint64_t sub_190A30C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v16[3];
  BOOL v17;
  char v18;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 56);
  v7 = v6(a2, a3);
  v16[2] = a1;
  v8 = sub_19097B420((uint64_t (*)(uint64_t))sub_190A32CE0, (uint64_t)v16, v7);
  v10 = v9;
  swift_bridgeObjectRelease();
  v11 = v6(a2, a3);
  if ((v10 & 1) != 0)
  {
    v12 = *(_QWORD *)(v11 + 16);
    swift_bridgeObjectRelease();
    v13 = v12 == 0;
LABEL_8:
    v18 = v10 & 1;
    v17 = v13;
    return v8;
  }
  v14 = *(_QWORD *)(v6(a2, a3) + 16);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (__OFSUB__(v14 - 1, v8))
  {
    __break(1u);
  }
  else
  {
    if (v14 - 1 == v8)
    {
      v13 = 1;
      goto LABEL_8;
    }
    if (!__OFADD__(v8, 1))
    {
      v13 = 0;
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_190A30D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return TimelineViewCollection.viewableEntry(for:in:)(a1, a2, a3, a4);
}

uint64_t ViewableTimelineEntry.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_190A46084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ViewableTimelineEntry.view.getter()
{
  type metadata accessor for ViewableTimelineEntry();
  return swift_retain();
}

__n128 ViewableTimelineEntry.relevance.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  __n128 *v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for ViewableTimelineEntry() + 24));
  v4 = v3[1].n128_u8[0];
  result = *v3;
  *a1 = *v3;
  a1[1].n128_u8[0] = v4;
  return result;
}

uint64_t ViewableTimelineEntry.viewMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ViewableTimelineEntry() + 28);
  return sub_190A317C4(v3, a1);
}

uint64_t ViewableTimelineEntry.entryData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for ViewableTimelineEntry() + 32);
  v2 = *(_QWORD *)v1;
  sub_1908CE0B4(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

__n128 sub_190A30E78@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v2;
  __n128 *v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = (__n128 *)(v2 + *(int *)(a1 + 24));
  v4 = v3[1].n128_u8[0];
  result = *v3;
  *a2 = *v3;
  a2[1].n128_u8[0] = v4;
  return result;
}

uint64_t sub_190A30E94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v49 = a3;
  v6 = sub_190A45E68();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v40 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TimelineReloadPolicy();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_190A46084();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v43 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v40 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v40 - v24;
  v26 = *(void (**)(uint64_t, uint64_t))(a2 + 64);
  v48 = a2;
  v26(a1, a2);
  v27 = (uint64_t)v16;
  v28 = v45;
  sub_1908B4BD4(v27, (uint64_t)v13, &qword_1ECF6C2F8);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  v30 = v10;
  v44 = v3;
  v29(v10, v3, a1);
  v46 = v18;
  v47 = v13;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v13, 1, v17) == 1)
  {
    v31 = v40;
    (*(void (**)(uint64_t))(v48 + 48))(a1);
    sub_190A45E38();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v31, v42);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, a1);
    sub_190993F58((uint64_t)v47);
    v32 = v46;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v10, a1);
    v32 = v46;
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v25, v47, v17);
  }
  sub_190A4603C();
  v33 = sub_190A4606C();
  v34 = *(void (**)(char *, uint64_t))(v32 + 8);
  v34(v23, v17);
  if ((v33 & 1) != 0)
  {
    v35 = 1;
    v36 = v49;
  }
  else
  {
    v37 = v43;
    (*(void (**)(uint64_t))(v48 + 40))(a1);
    sub_190A3180C();
    if ((sub_190A47A70() & 1) != 0)
      v38 = v37;
    else
      v38 = v25;
    v36 = v49;
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v49, v38, v17);
    v34(v37, v17);
    v35 = 0;
  }
  v34(v25, v17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v36, v35, 1, v17);
}

uint64_t TimelineViewCollection.effectiveReloadDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v23;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_190A46084();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v23 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v23 - v17;
  sub_190A30E94(a1, a2, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_190993F58((uint64_t)v8);
    v19 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v8, v9);
    (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
    sub_190A46048();
    v20 = *(void (**)(char *, uint64_t))(v10 + 8);
    v20(v13, v9);
    sub_190A3180C();
    if ((sub_190A47A70() & 1) != 0)
      v21 = v16;
    else
      v21 = v18;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(a3, v21, v9);
    v20(v16, v9);
    v20(v18, v9);
    v19 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, v19, 1, v9);
}

uint64_t TimelineViewCollection.staleDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A30E94(a1, a2, (uint64_t)v8);
  v9 = sub_190A46084();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_190993F58((uint64_t)v8);
    v11 = 1;
  }
  else
  {
    sub_190A46048();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v11 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, v11, 1, v9);
}

uint64_t TimelineViewCollection.isStale.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_190A46084();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v17 - v12;
  TimelineViewCollection.staleDate.getter(a1, a2, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_190993F58((uint64_t)v6);
    v14 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    sub_190A46078();
    v14 = sub_190A46060();
    v15 = *(void (**)(char *, uint64_t))(v8 + 8);
    v15(v11, v7);
    v15(v13, v7);
  }
  return v14 & 1;
}

BOOL sub_190A31630(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = sub_190A46084();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  sub_190A3180C();
  LOBYTE(a1) = sub_190A47A64();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (a1 & 1) == 0;
}

uint64_t sub_190A3170C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  unint64_t v5;
  uint64_t result;

  v5 = *a1;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 56))(a2, a3);
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v5 < *(_QWORD *)(result + 16))
  {
    sub_1908BBDC8(result + 40 * v5 + 32, a4);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ViewableTimelineEntry()
{
  uint64_t result;

  result = qword_1ECF6C578;
  if (!qword_1ECF6C578)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_190A317C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_190A3180C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECF68070;
  if (!qword_1ECF68070)
  {
    v1 = sub_190A46084();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CB08B0], v1);
    atomic_store(result, (unint64_t *)&qword_1ECF68070);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ViewableTimelineEntry(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_BYTE *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_190A46084();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_OWORD *)v9 = *(_OWORD *)v10;
    v9[16] = v10[16];
    v11 = a3[7];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for WidgetViewMetadata();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48);
    swift_retain();
    if (v16(v13, 1, v14))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE20);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *v12 = *v13;
      *(_WORD *)(v12 + 1) = *(_WORD *)(v13 + 1);
      v19 = *(int *)(v14 + 28);
      __dst = &v12[v19];
      v20 = &v13[v19];
      v21 = sub_190A45FC4();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
        memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v22 + 16))(__dst, v20, v21);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
      }
      v24 = *(int *)(v14 + 32);
      v25 = &v12[v24];
      v26 = &v13[v24];
      v27 = sub_190A47284();
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC08);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v30 = a3[8];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    v33 = *((_QWORD *)v32 + 1);
    if (v33 >> 60 == 15)
    {
      *(_OWORD *)v31 = *(_OWORD *)v32;
    }
    else
    {
      v34 = *(_QWORD *)v32;
      sub_1908B53B8(*(_QWORD *)v32, *((_QWORD *)v32 + 1));
      *(_QWORD *)v31 = v34;
      *((_QWORD *)v31 + 1) = v33;
    }
  }
  return a1;
}

uint64_t destroy for ViewableTimelineEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;

  v4 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  v5 = a1 + *(int *)(a2 + 28);
  v6 = type metadata accessor for WidgetViewMetadata();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
  if (!(_DWORD)result)
  {
    v8 = v5 + *(int *)(v6 + 28);
    v9 = sub_190A45FC4();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    v11 = v5 + *(int *)(v6 + 32);
    v12 = sub_190A47284();
    v13 = *(_QWORD *)(v12 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
    if (!(_DWORD)result)
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  v14 = (uint64_t *)(a1 + *(int *)(a2 + 32));
  v15 = v14[1];
  if (v15 >> 60 != 15)
    return sub_1908B53FC(*v14, v15);
  return result;
}

uint64_t initializeWithCopy for ViewableTimelineEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(_BYTE *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  _BYTE *__dst;

  v6 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v10 = a3[7];
  v11 = (_BYTE *)(a1 + v10);
  v12 = (_BYTE *)(a2 + v10);
  v13 = type metadata accessor for WidgetViewMetadata();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48);
  swift_retain();
  if (v15(v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE20);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v11 = *v12;
    *(_WORD *)(v11 + 1) = *(_WORD *)(v12 + 1);
    v17 = *(int *)(v13 + 28);
    __dst = &v11[v17];
    v18 = &v12[v17];
    v19 = sub_190A45FC4();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v20 + 16))(__dst, v18, v19);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    v22 = *(int *)(v13 + 32);
    v23 = &v11[v22];
    v24 = &v12[v22];
    v25 = sub_190A47284();
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC08);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v28 = a3[8];
  v29 = a1 + v28;
  v30 = (uint64_t *)(a2 + v28);
  v31 = v30[1];
  if (v31 >> 60 == 15)
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
  }
  else
  {
    v32 = *v30;
    sub_1908B53B8(*v30, v30[1]);
    *(_QWORD *)v29 = v32;
    *(_QWORD *)(v29 + 8) = v31;
  }
  return a1;
}

uint64_t assignWithCopy for ViewableTimelineEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  __int128 v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_BYTE *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t (*v31)(_BYTE *, uint64_t, uint64_t);
  int v32;
  size_t v33;
  void *v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(_BYTE *, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  _BYTE *__dst;
  void *__dsta;

  v6 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 16) = *((_BYTE *)v9 + 16);
  *(_OWORD *)v8 = v10;
  v11 = a3[7];
  v12 = (_BYTE *)(a1 + v11);
  v13 = (_BYTE *)(a2 + v11);
  v14 = type metadata accessor for WidgetViewMetadata();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_1908DD344((uint64_t)v12);
      goto LABEL_7;
    }
    *v12 = *v13;
    v12[1] = v13[1];
    v12[2] = v13[2];
    v27 = *(int *)(v14 + 28);
    v28 = &v12[v27];
    v29 = &v13[v27];
    v30 = sub_190A45FC4();
    v58 = *(_QWORD *)(v30 - 8);
    v31 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v58 + 48);
    __dsta = v28;
    LODWORD(v28) = v31(v28, 1, v30);
    v32 = v31(v29, 1, v30);
    if ((_DWORD)v28)
    {
      if (!v32)
      {
        (*(void (**)(void *, _BYTE *, uint64_t))(v58 + 16))(__dsta, v29, v30);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v58 + 56))(__dsta, 0, 1, v30);
        goto LABEL_30;
      }
      v33 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858) - 8) + 64);
      v34 = __dsta;
    }
    else
    {
      if (!v32)
      {
        (*(void (**)(void *, _BYTE *, uint64_t))(v58 + 24))(__dsta, v29, v30);
        goto LABEL_30;
      }
      (*(void (**)(void *, uint64_t))(v58 + 8))(__dsta, v30);
      v33 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858) - 8) + 64);
      v34 = __dsta;
    }
    memcpy(v34, v29, v33);
LABEL_30:
    v50 = *(int *)(v14 + 32);
    v51 = &v12[v50];
    v52 = &v13[v50];
    v53 = sub_190A47284();
    v54 = *(_QWORD *)(v53 - 8);
    v55 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v54 + 48);
    v56 = v55(v51, 1, v53);
    v57 = v55(v52, 1, v53);
    if (v56)
    {
      if (!v57)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v54 + 16))(v51, v52, v53);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v57)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v54 + 24))(v51, v52, v53);
        goto LABEL_17;
      }
      (*(void (**)(_BYTE *, uint64_t))(v54 + 8))(v51, v53);
    }
    v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC08) - 8) + 64);
    v25 = v51;
    v26 = v52;
LABEL_8:
    memcpy(v25, v26, v24);
    goto LABEL_17;
  }
  if (v18)
  {
LABEL_7:
    v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE20) - 8) + 64);
    v25 = v12;
    v26 = v13;
    goto LABEL_8;
  }
  *v12 = *v13;
  v12[1] = v13[1];
  v12[2] = v13[2];
  v19 = *(int *)(v14 + 28);
  __dst = &v12[v19];
  v20 = &v13[v19];
  v21 = sub_190A45FC4();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v22 + 16))(__dst, v20, v21);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
  }
  v35 = *(int *)(v14 + 32);
  v36 = &v12[v35];
  v37 = &v13[v35];
  v38 = sub_190A47284();
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC08);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v39 + 16))(v36, v37, v38);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_17:
  v41 = a3[8];
  v42 = (uint64_t *)(a1 + v41);
  v43 = (uint64_t *)(a2 + v41);
  v44 = *(_QWORD *)(a2 + v41 + 8);
  if (*(_QWORD *)(a1 + v41 + 8) >> 60 != 15)
  {
    if (v44 >> 60 != 15)
    {
      v46 = *v43;
      sub_1908B53B8(v46, v44);
      v47 = *v42;
      v48 = v42[1];
      *v42 = v46;
      v42[1] = v44;
      sub_1908B53FC(v47, v48);
      return a1;
    }
    sub_19091C458((uint64_t)v42);
    goto LABEL_22;
  }
  if (v44 >> 60 == 15)
  {
LABEL_22:
    *(_OWORD *)v42 = *(_OWORD *)v43;
    return a1;
  }
  v45 = *v43;
  sub_1908B53B8(v45, v44);
  *v42 = v45;
  v42[1] = v44;
  return a1;
}

uint64_t initializeWithTake for ViewableTimelineEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *__dst;

  v6 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v10 = a3[7];
  v11 = (_BYTE *)(a1 + v10);
  v12 = (_BYTE *)(a2 + v10);
  v13 = type metadata accessor for WidgetViewMetadata();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE20);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    *v11 = *v12;
    *(_WORD *)(v11 + 1) = *(_WORD *)(v12 + 1);
    v16 = *(int *)(v13 + 28);
    __dst = &v11[v16];
    v17 = &v12[v16];
    v18 = sub_190A45FC4();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 32))(__dst, v17, v18);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    v21 = *(int *)(v13 + 32);
    v22 = &v11[v21];
    v23 = &v12[v21];
    v24 = sub_190A47284();
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC08);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for ViewableTimelineEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_BYTE *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  size_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t (*v30)(_BYTE *, uint64_t, uint64_t);
  int v31;
  size_t v32;
  void *v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(_BYTE *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  _BYTE *__dst;
  void *__dsta;

  v6 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_release();
  v7 = a3[6];
  v8 = a3[7];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v11 = (_BYTE *)(a1 + v8);
  v12 = (_BYTE *)(a2 + v8);
  v13 = type metadata accessor for WidgetViewMetadata();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (v17)
    {
      sub_1908DD344((uint64_t)v11);
      goto LABEL_7;
    }
    *v11 = *v12;
    v11[1] = v12[1];
    v11[2] = v12[2];
    v26 = *(int *)(v13 + 28);
    v27 = &v11[v26];
    v28 = &v12[v26];
    v29 = sub_190A45FC4();
    v55 = *(_QWORD *)(v29 - 8);
    v30 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v55 + 48);
    __dsta = v27;
    LODWORD(v27) = v30(v27, 1, v29);
    v31 = v30(v28, 1, v29);
    if ((_DWORD)v27)
    {
      if (!v31)
      {
        (*(void (**)(void *, _BYTE *, uint64_t))(v55 + 32))(__dsta, v28, v29);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(__dsta, 0, 1, v29);
        goto LABEL_28;
      }
      v32 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858) - 8) + 64);
      v33 = __dsta;
    }
    else
    {
      if (!v31)
      {
        (*(void (**)(void *, _BYTE *, uint64_t))(v55 + 40))(__dsta, v28, v29);
        goto LABEL_28;
      }
      (*(void (**)(void *, uint64_t))(v55 + 8))(__dsta, v29);
      v32 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858) - 8) + 64);
      v33 = __dsta;
    }
    memcpy(v33, v28, v32);
LABEL_28:
    v47 = *(int *)(v13 + 32);
    v48 = &v11[v47];
    v49 = &v12[v47];
    v50 = sub_190A47284();
    v51 = *(_QWORD *)(v50 - 8);
    v52 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v51 + 48);
    v53 = v52(v48, 1, v50);
    v54 = v52(v49, 1, v50);
    if (v53)
    {
      if (!v54)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v51 + 32))(v48, v49, v50);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v54)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v51 + 40))(v48, v49, v50);
        goto LABEL_17;
      }
      (*(void (**)(_BYTE *, uint64_t))(v51 + 8))(v48, v50);
    }
    v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC08) - 8) + 64);
    v24 = v48;
    v25 = v49;
LABEL_8:
    memcpy(v24, v25, v23);
    goto LABEL_17;
  }
  if (v17)
  {
LABEL_7:
    v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE20) - 8) + 64);
    v24 = v11;
    v25 = v12;
    goto LABEL_8;
  }
  *v11 = *v12;
  *(_WORD *)(v11 + 1) = *(_WORD *)(v12 + 1);
  v18 = *(int *)(v13 + 28);
  __dst = &v11[v18];
  v19 = &v12[v18];
  v20 = sub_190A45FC4();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v21 + 32))(__dst, v19, v20);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
  }
  v34 = *(int *)(v13 + 32);
  v35 = &v11[v34];
  v36 = &v12[v34];
  v37 = sub_190A47284();
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC08);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v38 + 32))(v35, v36, v37);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_17:
  v40 = a3[8];
  v41 = (uint64_t *)(a1 + v40);
  v42 = (uint64_t *)(a2 + v40);
  v43 = *(_QWORD *)(a1 + v40 + 8);
  if (v43 >> 60 != 15)
  {
    v44 = v42[1];
    if (v44 >> 60 != 15)
    {
      v45 = *v41;
      *v41 = *v42;
      v41[1] = v44;
      sub_1908B53FC(v45, v43);
      return a1;
    }
    sub_19091C458((uint64_t)v41);
  }
  *(_OWORD *)v41 = *(_OWORD *)v42;
  return a1;
}

uint64_t getEnumTagSinglePayload for ViewableTimelineEntry()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190A329F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_190A46084();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE20);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for ViewableTimelineEntry()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190A32AA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_190A46084();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE20);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_190A32B50()
{
  unint64_t v0;
  unint64_t v1;

  sub_190A46084();
  if (v0 <= 0x3F)
  {
    sub_190A32BF4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_190A32BF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ECF6AE28)
  {
    type metadata accessor for WidgetViewMetadata();
    v0 = sub_190A48148();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ECF6AE28);
  }
}

uint64_t dispatch thunk of TimelineViewCollection.originatingBundle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TimelineViewCollection.widget.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TimelineViewCollection.metrics.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TimelineViewCollection.environment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of TimelineViewCollection.creationDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of TimelineViewCollection.dateRange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of TimelineViewCollection.entries.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of TimelineViewCollection.reloadPolicy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of TimelineViewCollection.protectionLevel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of TimelineViewCollection.requiresReload.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of TimelineViewCollection.copyWithoutRenderData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of TimelineViewCollection.viewableEntry(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of TimelineViewCollection.viewableEntry(for:in:ignoringEnvironmentKeys:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 104))();
}

uint64_t dispatch thunk of TimelineViewCollection.entriesBookending(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 112))();
}

uint64_t dispatch thunk of ArchivableTimelineViewCollection.enumeratedViewableEntriesAndEnvironments()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

BOOL sub_190A32CE0(_QWORD *a1)
{
  return sub_190A31630(a1);
}

uint64_t sub_190A32CFC(uint64_t a1, uint64_t a2)
{
  return (*(_QWORD *)a1 == *(_QWORD *)a2) & ~(*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8));
}

uint64_t ActivityArchivedViewCollection.ViewIndex.description.getter()
{
  return sub_190A4867C();
}

uint64_t static ActivityArchivedViewCollection.ViewIndex.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;
  char v4;

  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (*(_QWORD *)a1 == *(_QWORD *)a2)
      v2 = *(_BYTE *)(a2 + 8);
    else
      v2 = 0;
    if ((v2 & 1) == 0)
      return 0;
  }
  else
  {
    if (*(_QWORD *)a1 == *(_QWORD *)a2)
      v4 = *(_BYTE *)(a2 + 8);
    else
      v4 = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t sub_190A32DA0(uint64_t a1, uint64_t a2)
{
  int v2;
  char v4;

  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (*(_QWORD *)a1 == *(_QWORD *)a2)
      v2 = *(unsigned __int8 *)(a2 + 8);
    else
      v2 = 0;
    if (v2 == 1)
      return 1;
  }
  else
  {
    if (*(_QWORD *)a1 == *(_QWORD *)a2)
      v4 = *(_BYTE *)(a2 + 8);
    else
      v4 = 1;
    if ((v4 & 1) == 0)
      return 1;
  }
  return 0;
}

uint64_t sub_190A32DDC()
{
  return sub_190A4867C();
}

void ActivityArchivedViewCollection.ViewEntry.viewIndex.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t ActivityArchivedViewCollection.ViewEntry.view.getter()
{
  return swift_retain();
}

__n128 ActivityArchivedViewCollection.ViewEntry.metadata.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;
  char v3;
  __int128 v4;
  __int128 v5;
  __n128 result;

  v2 = *(_WORD *)(v1 + 104);
  v3 = *(_BYTE *)(v1 + 106);
  v4 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(a1 + 48) = v5;
  result = *(__n128 *)(v1 + 88);
  *(__n128 *)(a1 + 64) = result;
  *(_BYTE *)(a1 + 82) = v3;
  *(_WORD *)(a1 + 80) = v2;
  return result;
}

double ActivityArchivedViewCollection.ViewEntry.metrics.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v3;

  result = *(double *)(v1 + 144);
  v3 = *(_OWORD *)(v1 + 128);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 16) = v3;
  *(double *)(a1 + 32) = result;
  return result;
}

uint64_t ActivityArchivedViewCollection.payloadID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E69E8) + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActivityArchivedViewCollection.isAlerting.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E69E8) + 64));
}

id ActivityArchivedViewCollection.environment.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  id v5;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ActivityViewStates.Metadata(0) + 20));
  v5 = (id)v3[1];
  *a1 = *v3;
  a1[1] = v5;
  swift_retain();
  return v5;
}

id ActivityArchivedViewCollection.jindoKeyColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char v7;
  char v8;
  void *v9;
  uint64_t v11;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E5F68);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E69E8);
  sub_1908AAA48(v0 + *(int *)(v4 + 52), (uint64_t)v3, &qword_1EE1E5F68);
  v5 = type metadata accessor for JindoViewStates.Metadata(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_1908AA544((uint64_t)v3, &qword_1EE1E5F68);
    return 0;
  }
  else
  {
    v7 = v3[40];
    v8 = v3[41];
    sub_1908B5150((uint64_t)v3, type metadata accessor for JindoViewStates.Metadata);
    v6 = 0;
    if ((v8 & 1) == 0 && (v7 & 1) == 0)
    {
      v9 = (void *)sub_190A47680();
      v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithCGColor_, v9);

    }
  }
  return v6;
}

uint64_t ActivityArchivedViewCollection.jindoWidgetURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E5F68);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E69E8);
  sub_1908AAA48(v1 + *(int *)(v6 + 52), (uint64_t)v5, &qword_1EE1E5F68);
  v7 = type metadata accessor for JindoViewStates.Metadata(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_1908AA544((uint64_t)v5, &qword_1EE1E5F68);
    v8 = sub_190A45FC4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
  else
  {
    sub_1908AAA48((uint64_t)&v5[*(int *)(v7 + 28)], a1, (uint64_t *)&unk_1ECF6C858);
    return sub_1908B5150((uint64_t)v5, type metadata accessor for JindoViewStates.Metadata);
  }
}

void ActivityArchivedViewCollection.init(contentsOf:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  _QWORD v13[2];

  v5 = sub_190A46F78();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v13 - v10;
  v12 = a1;
  sub_190A46F24();
  if (v2)
  {

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    sub_190A33274((unint64_t)v9, a2);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
}

uint64_t sub_190A33274@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, unint64_t, uint64_t);
  unint64_t v35;
  uint64_t (*v36)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E5F68);
  MEMORY[0x1E0C80A78](v5);
  v40 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for JindoViewStates.Metadata(0);
  v41 = *(_QWORD *)(v7 - 8);
  v42 = v7;
  MEMORY[0x1E0C80A78](v7);
  v39 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E69E8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActivityArchivedViewCollection();
  v13 = a2 + *(int *)(v12 + 24);
  v14 = type metadata accessor for JindoArchivedViewCollection();
  v15 = *(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v37 = v14;
  v38 = (_QWORD *)v13;
  v36 = v15;
  ((void (*)(uint64_t, uint64_t, uint64_t))v15)(v13, 1, 1);
  v16 = *(int *)(v12 + 20);
  v43 = a2;
  v17 = a2 + v16;
  v18 = sub_190A46F78();
  v19 = *(_QWORD *)(v18 - 8);
  v34 = *(void (**)(uint64_t, unint64_t, uint64_t))(v19 + 16);
  v35 = v17;
  v34(v17, a1, v18);
  sub_190A45E08();
  swift_allocObject();
  sub_190A45DFC();
  v20 = a1;
  v21 = sub_190A46F30();
  if (v22 >> 60 == 15)
  {
    __break(1u);
    sub_1908CE500(v2, a1);
    swift_release();
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v23 = v21;
    v24 = v22;
    sub_190A36E7C();
    sub_190A45DF0();
    (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v20, v18);
    sub_1908CE500(v23, v24);
    swift_release();
    v25 = v43;
    sub_1908B4BD4((uint64_t)v11, v43, &qword_1EE1E69E8);
    v26 = v40;
    sub_1908AAA48(v25 + *(int *)(v9 + 52), v40, &qword_1EE1E5F68);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v26, 1, v42) == 1)
    {
      return sub_1908AA544(v26, &qword_1EE1E5F68);
    }
    else
    {
      v28 = v26;
      v29 = v39;
      sub_190A36EC8(v28, v39);
      v30 = v38;
      sub_1908AA544((uint64_t)v38, &qword_1EE1E6A30);
      v31 = *(_QWORD *)(v25 + *(int *)(v9 + 56));
      v32 = v37;
      sub_190A36EC8(v29, (uint64_t)v30 + *(int *)(v37 + 20));
      v34((uint64_t)v30 + *(int *)(v32 + 24), v35, v18);
      *v30 = v31;
      return v36(v30, 0, 1, v32);
    }
  }
  return result;
}

uint64_t ActivityArchivedViewCollection.init(contentsOf:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;

  v17 = a2;
  v4 = sub_190A45FC4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_190A46F78();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v16 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_190A46F18();
  if (v2)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  sub_190A33274((unint64_t)v12, v17);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
}

uint64_t ActivityArchivedViewCollection.init(contentsOf:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v7 = sub_190A46F78();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v15 - v12;
  sub_1908B53B8(a1, a2);
  sub_190A46F60();
  if (v3)
    return sub_1908B53FC(a1, a2);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  sub_190A33274((unint64_t)v11, a3);
  sub_1908B53FC(a1, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t ActivityArchivedViewCollection.metrics(viewIndex:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6A30);
  MEMORY[0x1E0C80A78](v5);
  v7 = (_QWORD *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(_QWORD *)a1;
  if (*(_BYTE *)(a1 + 8) != 1)
  {
    v15 = type metadata accessor for ActivityArchivedViewCollection();
    sub_1908AAA48(v2 + *(int *)(v15 + 24), (uint64_t)v7, &qword_1EE1E6A30);
    v16 = type metadata accessor for JindoArchivedViewCollection();
    result = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v7, 1, v16);
    if ((_DWORD)result != 1)
    {
      result = v8 - *v7;
      if (!__OFSUB__(v8, *v7))
      {
        v17 = *(_QWORD *)((char *)v7 + *(int *)(v16 + 20) + 16);
        if (*(_QWORD *)(v17 + 16))
        {
          v18 = sub_1908D2D48(result);
          if ((v19 & 1) != 0)
          {
            v20 = *(_QWORD *)(v17 + 56) + 88 * v18;
            v21 = *(_OWORD *)v20;
            v24 = *(_OWORD *)(v20 + 16);
            v25 = v21;
            v22 = *(_QWORD *)(v20 + 32);
            result = sub_1908B5150((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for JindoArchivedViewCollection);
            v23 = v24;
            *(_OWORD *)a2 = v25;
            *(_OWORD *)(a2 + 16) = v23;
            *(_QWORD *)(a2 + 32) = v22;
            *(_BYTE *)(a2 + 40) = 0;
            return result;
          }
        }
        result = sub_1908B5150((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for JindoArchivedViewCollection);
        *(_OWORD *)a2 = 0u;
        *(_OWORD *)(a2 + 16) = 0u;
        *(_QWORD *)(a2 + 32) = 0;
        goto LABEL_12;
      }
      __break(1u);
    }
    __break(1u);
    return result;
  }
  result = type metadata accessor for ActivityViewStates.Metadata(0);
  v10 = *(_QWORD *)(v2 + *(int *)(result + 28));
  if (*(_QWORD *)(v10 + 16))
  {
    result = sub_1908D2D48(v8);
    if ((v11 & 1) != 0)
    {
      v12 = *(_QWORD *)(v10 + 56) + 88 * result;
      v13 = *(_QWORD *)(v12 + 32);
      v14 = *(_OWORD *)(v12 + 16);
      *(_OWORD *)a2 = *(_OWORD *)v12;
      *(_OWORD *)(a2 + 16) = v14;
      *(_QWORD *)(a2 + 32) = v13;
      *(_BYTE *)(a2 + 40) = 0;
      return result;
    }
  }
  *(_QWORD *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
LABEL_12:
  *(_BYTE *)(a2 + 40) = 1;
  return result;
}

uint64_t ActivityArchivedViewCollection.index(for:environmentAtIndex:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v4 = v3;
  v7 = *a1;
  result = type metadata accessor for ActivityViewStates.Metadata(0);
  v9 = *(_QWORD *)(v4 + *(int *)(result + 24));
  v10 = *(_QWORD *)(v9 + 16);
  if (!v10)
    goto LABEL_12;
  v11 = 0;
  v12 = v9 + 32;
  while (1)
  {
    v13 = *(unsigned __int8 *)(v12 + v11);
    if (v13 != 4)
      break;
    if (v7 == 4)
      goto LABEL_8;
LABEL_4:
    if (v10 == ++v11)
      goto LABEL_12;
  }
  if (v7 == 4 || v13 != v7)
    goto LABEL_4;
LABEL_8:
  result = WidgetEnvironment.enumeratedCount()();
  v14 = v11 * result;
  if ((unsigned __int128)(v11 * (__int128)result) >> 64 != (v11 * result) >> 63)
  {
    __break(1u);
    goto LABEL_15;
  }
  v15 = v14 + a2;
  if (__OFADD__(v14, a2))
  {
LABEL_15:
    __break(1u);
    return result;
  }
  type metadata accessor for ActivityArchivedViewCollection();
  sub_190A46F78();
  sub_1908AA2F4(&qword_1EE1EA708, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDB800], MEMORY[0x1E0CDB810]);
  sub_190A47E18();
  sub_190A47E60();
  result = sub_190A47E54();
  if (v15 < result)
  {
    *(_QWORD *)a3 = v15;
    v16 = 1;
    goto LABEL_13;
  }
LABEL_12:
  *(_QWORD *)a3 = 0;
  v16 = -1;
LABEL_13:
  *(_BYTE *)(a3 + 8) = v16;
  return result;
}

uint64_t ActivityArchivedViewCollection.index(for:in:ignoring:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, int64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  int v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  Swift::Int v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6A30);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E5F68);
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *a1;
  if (v16 == 4)
  {
    v31 = *(_OWORD *)(v5 + *(int *)(type metadata accessor for ActivityViewStates.Metadata(0) + 20));
    result = WidgetEnvironment.findEnumeratedIndex(matching:ignoring:)(a2, a3);
    if ((v18 & 1) == 0)
    {
      LOBYTE(v31) = 4;
      return ActivityArchivedViewCollection.index(for:environmentAtIndex:)((unsigned __int8 *)&v31, result, a4);
    }
    goto LABEL_10;
  }
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E69E8);
  sub_1908AAA48(v5 + *(int *)(v19 + 52), (uint64_t)v15, &qword_1EE1E5F68);
  v20 = type metadata accessor for JindoViewStates.Metadata(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v15, 1, v20) == 1)
  {
    v21 = &qword_1EE1E5F68;
    v22 = (uint64_t)v15;
LABEL_9:
    result = sub_1908AA544(v22, v21);
    goto LABEL_10;
  }
  v23 = *v15;
  v24 = (void *)v15[1];
  swift_retain();
  v25 = v24;
  sub_1908B5150((uint64_t)v15, type metadata accessor for JindoViewStates.Metadata);
  *(_QWORD *)&v31 = v23;
  *((_QWORD *)&v31 + 1) = v25;
  v26 = WidgetEnvironment.findEnumeratedIndex(matching:ignoring:)(a2, a3);
  v28 = v27;

  result = swift_release();
  if ((v28 & 1) == 0)
  {
    v29 = type metadata accessor for ActivityArchivedViewCollection();
    sub_1908AAA48(v5 + *(int *)(v29 + 24), (uint64_t)v12, &qword_1EE1E6A30);
    v30 = type metadata accessor for JindoArchivedViewCollection();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v12, 1, v30) == 1)
    {
      v21 = &qword_1EE1E6A30;
      v22 = (uint64_t)v12;
      goto LABEL_9;
    }
    JindoArchivedViewCollection.index(for:environmentAtIndex:)((WidgetKit::JindoViewTag)v16, v26);
    result = sub_1908B5150((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for JindoArchivedViewCollection);
    if ((BYTE8(v31) & 1) == 0)
    {
      *(_QWORD *)a4 = v31;
      *(_BYTE *)(a4 + 8) = 0;
      return result;
    }
  }
LABEL_10:
  *(_QWORD *)a4 = 0;
  *(_BYTE *)(a4 + 8) = -1;
  return result;
}

uint64_t ActivityArchivedViewCollection.viewEntry(for:in:ignoring:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, int64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _OWORD v13[9];
  uint64_t v14;
  uint64_t v15;
  char v16;
  _OWORD v17[9];
  uint64_t v18;

  v7 = *a1;
  LOBYTE(v13[0]) = *a1;
  ActivityArchivedViewCollection.index(for:in:ignoring:)((unsigned __int8 *)v13, a2, a3, (uint64_t)v17);
  if (BYTE8(v17[0]) == 255)
  {
    *(_QWORD *)&v17[0] = 0;
    *((_QWORD *)&v17[0] + 1) = 0xE000000000000000;
    sub_190A48298();
    sub_190A47B3C();
    if ((_DWORD)v7 != 4)
    {
      *(_QWORD *)&v13[0] = 0x2D6F646E696ALL;
      *((_QWORD *)&v13[0] + 1) = 0xE600000000000000;
      __asm { BR              X9 }
    }
    sub_19094F7B8();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    sub_190A46C30();
    sub_1908AA2F4(&qword_1EE1EF2B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDAA30], MEMORY[0x1E0CDAA50]);
    sub_190A4867C();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    v8 = sub_190A481CC();
    MEMORY[0x194012E8C](a3, v8);
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    v9 = v17[0];
    v10 = sub_190A47ADC();
    sub_19096BFDC(v10, v11, 1301, 0, v9, *((uint64_t *)&v9 + 1));
    return swift_willThrow();
  }
  else
  {
    v15 = *(_QWORD *)&v17[0];
    v16 = BYTE8(v17[0]) & 1;
    result = sub_190A34070((uint64_t)&v15, (uint64_t *)v17);
    if (!v4)
    {
      v13[6] = v17[6];
      v13[7] = v17[7];
      v13[8] = v17[8];
      v14 = v18;
      v13[2] = v17[2];
      v13[3] = v17[3];
      v13[4] = v17[4];
      v13[5] = v17[5];
      v13[0] = v17[0];
      v13[1] = v17[1];
      nullsub_1(v13);
      return sub_1908B4BD4((uint64_t)v13, a4, &qword_1EE1E6A40);
    }
  }
  return result;
}

uint64_t sub_190A34070@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  _BYTE *v39;
  uint64_t result;
  uint64_t v41;
  void (*v42)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t *v66;
  uint64_t v67;
  __int128 v68;
  __int16 v69;
  uint64_t v70;
  uint64_t v71;
  __int16 v72;
  BOOL v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  int v83;
  uint64_t v84;
  char *v85;
  char v86;
  __int128 v87;
  _BYTE *v88;
  int v89;
  int v90;
  int v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  char *v97;
  char *v98;
  uint64_t *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;

  v4 = v2;
  v99 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6A30);
  v7 = MEMORY[0x1E0C80A78](v6);
  v97 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v89 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6948);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_190A467EC();
  v14 = *(_QWORD *)(v101 - 8);
  v15 = MEMORY[0x1E0C80A78](v101);
  v17 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v89 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v98 = (char *)&v89 - v22;
  MEMORY[0x1E0C80A78](v21);
  v100 = (char *)&v89 - v23;
  v24 = *(_QWORD *)a1;
  v25 = *(unsigned __int8 *)(a1 + 8);
  v26 = type metadata accessor for ActivityArchivedViewCollection();
  if ((v25 & 1) == 0)
  {
    v36 = v4 + *(int *)(v26 + 24);
    sub_1908AAA48(v36, (uint64_t)v10, &qword_1EE1E6A30);
    v37 = type metadata accessor for JindoArchivedViewCollection();
    v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48);
    if (v38(v10, 1, v37) == 1)
    {
      sub_1908AA544((uint64_t)v10, &qword_1EE1E6A30);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v13, 1, 1, v101);
    }
    else
    {
      v96 = v25;
      sub_190A46F6C();
      result = sub_1908B5150((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for JindoArchivedViewCollection);
      if (v3)
        return result;
      v41 = v14;
      v42 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56);
      v43 = v101;
      v42(v13, 0, 1, v101);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v13, 1, v43) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v100, v13, v43);
        v44 = v97;
        sub_1908AAA48(v36, (uint64_t)v97, &qword_1EE1E6A30);
        if (v38(v44, 1, v37) == 1)
        {
          sub_1908AA544((uint64_t)v44, &qword_1EE1E6A30);
        }
        else
        {
          result = v24 - *(_QWORD *)v44;
          if (__OFSUB__(v24, *(_QWORD *)v44))
          {
            __break(1u);
            return result;
          }
          v76 = *(_QWORD *)&v44[*(int *)(v37 + 20) + 16];
          if (*(_QWORD *)(v76 + 16))
          {
            v77 = sub_1908D2D48(result);
            if ((v78 & 1) != 0)
            {
              v79 = *(_QWORD *)(v76 + 56) + 88 * v77;
              v52 = *(_QWORD *)v79;
              v53 = *(_QWORD *)(v79 + 8);
              v54 = *(_QWORD *)(v79 + 16);
              v55 = *(_QWORD *)(v79 + 24);
              v56 = *(_QWORD *)(v79 + 32);
              v80 = *(_QWORD *)(v79 + 44);
              v81 = (uint64_t)v44;
              v58 = *(_QWORD *)(v79 + 52);
              v94 = *(unsigned __int8 *)(v79 + 60);
              v82 = *(unsigned __int8 *)(v79 + 61);
              v95 = *(_QWORD *)(v79 + 64);
              v93 = *(_QWORD *)(v79 + 72);
              v91 = *(unsigned __int8 *)(v79 + 80);
              v92 = v82;
              v83 = *(unsigned __int8 *)(v79 + 81);
              v84 = v41;
              v89 = *(unsigned __int8 *)(v79 + 82);
              v90 = v83;
              sub_1908B5150(v81, (uint64_t (*)(_QWORD))type metadata accessor for JindoArchivedViewCollection);
              v85 = v100;
              v86 = sub_190A467D4();
              (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v98, v85, v43);
              sub_1908AA2F4(&qword_1EE1EAD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9098], MEMORY[0x1E0CD9090]);
              v62 = sub_190A47884();
              result = (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v85, v43);
              v63 = v86 & 1 | (unint64_t)(v80 << 32);
              *((_QWORD *)&v87 + 1) = v58;
              *(_QWORD *)&v87 = v80;
              v64 = v87 >> 32;
              goto LABEL_17;
            }
          }
          sub_1908B5150((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for JindoArchivedViewCollection);
        }
        sub_1909302C8();
        swift_allocError();
        *v88 = 1;
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v100, v43);
      }
    }
    sub_1908AA544((uint64_t)v13, &qword_1EE1E6948);
    sub_1909302C8();
    swift_allocError();
    *v39 = 1;
    return swift_willThrow();
  }
  v96 = v25;
  sub_190A46F6C();
  if (v3)
  {
    if (qword_1EE1E6038 != -1)
      swift_once();
    v27 = sub_190A465A0();
    __swift_project_value_buffer(v27, (uint64_t)qword_1EE1FD6E8);
    v28 = v3;
    v29 = v3;
    v30 = sub_190A46588();
    v31 = sub_190A47F50();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v33 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v32 = 134349314;
      v102 = v24;
      sub_190A48178();
      *(_WORD *)(v32 + 12) = 2114;
      v34 = v3;
      v35 = _swift_stdlib_bridgeErrorToNSError();
      v102 = v35;
      sub_190A48178();
      *v33 = v35;

      _os_log_impl(&dword_1908A7000, v30, v31, "Failed to fetch view from archive at index %{public}ld: %{public}@", (uint8_t *)v32, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
      swift_arrayDestroy();
      MEMORY[0x194014398](v33, -1, -1);
      MEMORY[0x194014398](v32, -1, -1);
    }
    else
    {

    }
    return swift_willThrow();
  }
  v45 = v14;
  v46 = v17;
  v47 = v101;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v46, v101);
  v48 = *(_QWORD *)(v4 + *(int *)(type metadata accessor for ActivityViewStates.Metadata(0) + 28));
  if (!*(_QWORD *)(v48 + 16) || (v49 = sub_1908D2D48(v24), (v50 & 1) == 0))
  {
    sub_1909302C8();
    swift_allocError();
    *v75 = 1;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v20, v47);
  }
  v51 = *(_QWORD *)(v48 + 56) + 88 * v49;
  v52 = *(_QWORD *)v51;
  v53 = *(_QWORD *)(v51 + 8);
  v54 = *(_QWORD *)(v51 + 16);
  v55 = *(_QWORD *)(v51 + 24);
  v56 = *(_QWORD *)(v51 + 32);
  v57 = *(_QWORD *)(v51 + 44);
  v58 = *(_QWORD *)(v51 + 52);
  v94 = *(unsigned __int8 *)(v51 + 60);
  v59 = *(unsigned __int8 *)(v51 + 61);
  v95 = *(_QWORD *)(v51 + 64);
  v93 = *(_QWORD *)(v51 + 72);
  v91 = *(unsigned __int8 *)(v51 + 80);
  v92 = v59;
  v60 = *(unsigned __int8 *)(v51 + 81);
  v89 = *(unsigned __int8 *)(v51 + 82);
  v90 = v60;
  v61 = sub_190A467D4();
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v98, v20, v47);
  sub_1908AA2F4(&qword_1EE1EAD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9098], MEMORY[0x1E0CD9090]);
  v62 = sub_190A47884();
  result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v20, v47);
  v63 = v61 & 1 | (unint64_t)(v57 << 32);
  *((_QWORD *)&v65 + 1) = v58;
  *(_QWORD *)&v65 = v57;
  v64 = v65 >> 32;
LABEL_17:
  v66 = v99;
  *v99 = v24;
  *((_BYTE *)v66 + 8) = v96;
  *((_QWORD *)&v68 + 1) = v94;
  *(_QWORD *)&v68 = v58;
  v67 = v68 >> 32;
  v69 = v91;
  v70 = 0x10000000000;
  if (!v92)
    v70 = 0;
  v66[2] = v62;
  v71 = v70 | v67;
  if (v90)
    v72 = 256;
  else
    v72 = 0;
  v66[3] = v52;
  v66[4] = v53;
  v73 = v89 != 0;
  v66[5] = v54;
  v66[6] = v55;
  v66[7] = v56;
  v66[8] = v63;
  v66[9] = v64;
  v74 = v95;
  v66[10] = v71;
  v66[11] = v74;
  v66[12] = v93;
  *((_BYTE *)v66 + 106) = v73;
  *((_WORD *)v66 + 52) = v72 | v69;
  v66[14] = v52;
  v66[15] = v53;
  v66[16] = v54;
  v66[17] = v55;
  v66[18] = v56;
  return result;
}

uint64_t ActivityArchivedViewCollection.viewState(for:environmentAtIndex:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  _OWORD v44[9];
  uint64_t v45;
  uint64_t v46;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_190A46C30();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v32) = *a1;
  ActivityArchivedViewCollection.index(for:environmentAtIndex:)((unsigned __int8 *)&v32, a2, (uint64_t)v44);
  if (BYTE8(v44[0]) == 255)
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EF2C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a3, 1, 1, v14);
  }
  else
  {
    v29 = v13;
    v30 = a2;
    v42 = *(_QWORD *)&v44[0];
    v43 = BYTE8(v44[0]) & 1;
    v16 = v46;
    result = sub_190A34070((uint64_t)&v42, (uint64_t *)v44);
    if (!v16)
    {
      v38 = v44[6];
      v39 = v44[7];
      v40 = v44[8];
      v41 = v45;
      v34 = v44[2];
      v35 = v44[3];
      v36 = v44[4];
      v37 = v44[5];
      v32 = v44[0];
      v33 = v44[1];
      v31 = *(_OWORD *)(v3 + *(int *)(type metadata accessor for ActivityViewStates.Metadata(0) + 20));
      WidgetEnvironment.environmentValues(at:)(v30, (uint64_t)v9);
      v17 = v10;
      v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
      v19 = a3;
      if (v18 == 1)
      {
        sub_190A34D24((uint64_t)&v32);
        sub_1908AA544((uint64_t)v9, (uint64_t *)&unk_1ECF6C868);
        v20 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EF2C0);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a3, 1, 1, v20);
      }
      else
      {
        v21 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
        v22 = v29;
        v21(v29, v9, v17);
        v23 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EF2C0);
        v24 = (char *)(v19 + *(int *)(v23 + 48));
        v25 = v39;
        *(_OWORD *)(v19 + 96) = v38;
        *(_OWORD *)(v19 + 112) = v25;
        *(_OWORD *)(v19 + 128) = v40;
        *(_QWORD *)(v19 + 144) = v41;
        v26 = v35;
        *(_OWORD *)(v19 + 32) = v34;
        *(_OWORD *)(v19 + 48) = v26;
        v27 = v37;
        *(_OWORD *)(v19 + 64) = v36;
        *(_OWORD *)(v19 + 80) = v27;
        v28 = v33;
        *(_OWORD *)v19 = v32;
        *(_OWORD *)(v19 + 16) = v28;
        v21(v24, v22, v17);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v19, 0, 1, v23);
      }
    }
  }
  return result;
}

uint64_t ActivityArchivedViewCollection.archivedFamily.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ActivityViewStates.Metadata(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t _s9WidgetKit30ActivityArchivedViewCollectionV0E5EntryV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  int v8;
  int v9;
  CGFloat x;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CGFloat v14;
  CGSize v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  int v22;
  int v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  double v28;
  int v29;
  char v30;
  int v31;
  uint64_t v32;
  __int128 v33;
  int v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  CGRect rect1;
  __int128 v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  __int128 v48;
  __int16 v49;
  char v50;
  _OWORD v51[2];
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int16 v56;
  char v57;
  CGRect v58;

  v2 = *a1;
  v3 = *(_OWORD *)(a1 + 5);
  v4 = a1[7];
  v5 = *((_OWORD *)a1 + 4);
  v6 = *((_OWORD *)a1 + 5);
  v7 = a1[12];
  v8 = *((unsigned __int8 *)a1 + 106);
  v9 = *((unsigned __int16 *)a1 + 52);
  x = *((double *)a1 + 14);
  v11 = a1[15];
  v12 = a1[16];
  v13 = a1[17];
  v14 = *((double *)a1 + 18);
  v15 = *(CGSize *)(a2 + 24);
  v16 = *(_OWORD *)(a2 + 40);
  v17 = *(_QWORD *)(a2 + 56);
  v18 = *(_QWORD *)(a2 + 64);
  v19 = *(_QWORD *)(a2 + 72);
  v20 = *(_QWORD *)(a2 + 80);
  v21 = *(_OWORD *)(a2 + 88);
  v22 = *(unsigned __int8 *)(a2 + 106);
  v23 = *(unsigned __int16 *)(a2 + 104);
  v24 = *(double *)(a2 + 112);
  v25 = *(double *)(a2 + 120);
  v26 = *(double *)(a2 + 128);
  v27 = *(double *)(a2 + 136);
  v28 = *(double *)(a2 + 144);
  if ((a1[1] & 1) != 0)
  {
    if (v2 == *(_QWORD *)a2)
      v29 = *(unsigned __int8 *)(a2 + 8);
    else
      v29 = 0;
    if (v29 != 1)
      return 0;
  }
  else
  {
    if (v2 == *(_QWORD *)a2)
      v30 = *(_BYTE *)(a2 + 8);
    else
      v30 = 1;
    if ((v30 & 1) != 0)
      return 0;
  }
  if (v5 != 2)
  {
    v51[0] = *(_OWORD *)(a1 + 3);
    v51[1] = v3;
    v31 = v9 | (v8 << 16);
    v53 = v5;
    v54 = v6;
    v52 = v4;
    v55 = v7;
    v56 = v31;
    v57 = BYTE2(v31);
    if (v18 != 2)
    {
      rect1.origin.y = v14;
      v43 = v18 & 1;
      rect1.size = v15;
      v41 = v16;
      *((_QWORD *)&v33 + 1) = v19;
      *(_QWORD *)&v33 = v18;
      v32 = v33 >> 32;
      v42 = v17;
      *((_QWORD *)&v33 + 1) = v20;
      *(_QWORD *)&v33 = v19;
      v44 = v32;
      v45 = v33 >> 32;
      v46 = BYTE4(v20);
      v47 = BYTE5(v20) & 1;
      v34 = v23 | (v22 << 16);
      v48 = v21;
      v49 = v34 & 0x1FF;
      v50 = BYTE2(v34) & 1;
      rect1.origin.x = x;
      v35 = _s9WidgetKit25ActivityViewEntryMetadataV2eeoiySbAC_ACtFZ_0((uint64_t)v51, (uint64_t)&rect1.size);
      x = rect1.origin.x;
      if ((v35 & 1) != 0)
        goto LABEL_16;
    }
    return 0;
  }
  *(_QWORD *)&rect1.origin.y = a1[18];
  if (v18 != 2)
    return 0;
LABEL_16:
  v36 = v11;
  v37 = v12;
  v38 = v13;
  v58.origin.x = v24;
  v58.origin.y = v25;
  v58.size.width = v26;
  v58.size.height = v27;
  LODWORD(result) = CGRectEqualToRect(*(CGRect *)&x, v58);
  if (rect1.origin.y == v28)
    return result;
  else
    return 0;
}

uint64_t type metadata accessor for ActivityArchivedViewCollection()
{
  uint64_t result;

  result = qword_1EE1E5F78;
  if (!qword_1EE1E5F78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_190A34D24(uint64_t a1)
{
  swift_release();
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for ActivityArchivedViewCollection(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  char *__dst;
  _QWORD *__dsta;
  char *v55;
  unsigned int (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unsigned int (*v60)(char *, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_190A460CC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for ActivityViewStates.Metadata(0);
    v9 = v8[5];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = *(void **)((char *)a2 + v9 + 8);
    *v10 = *(_QWORD *)((char *)a2 + v9);
    v10[1] = v11;
    *(_QWORD *)((char *)a1 + v8[6]) = *(_QWORD *)((char *)a2 + v8[6]);
    *(_QWORD *)((char *)a1 + v8[7]) = *(_QWORD *)((char *)a2 + v8[7]);
    *((_BYTE *)a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
    swift_retain();
    v12 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E69E8);
    v14 = v13[13];
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = type metadata accessor for JindoViewStates.Metadata(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E5F68);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v21 = v17;
      v22 = (void *)v16[1];
      *v15 = *v16;
      v15[1] = v22;
      v15[2] = v16[2];
      *(_OWORD *)(v15 + 3) = *(_OWORD *)(v16 + 3);
      *((_WORD *)v15 + 20) = *((_WORD *)v16 + 20);
      v59 = v21;
      v23 = *(int *)(v21 + 28);
      __dst = (char *)v15 + v23;
      v58 = (char *)v16 + v23;
      v24 = sub_190A45FC4();
      v25 = *(_QWORD *)(v24 - 8);
      v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      swift_retain();
      v26 = v22;
      swift_bridgeObjectRetain();
      if (v56(v58, 1, v24))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
        memcpy(__dst, v58, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v58, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
      }
      v17 = v59;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v59);
    }
    *(_QWORD *)((char *)a1 + v13[14]) = *(_QWORD *)((char *)a2 + v13[14]);
    v28 = v13[15];
    v29 = (_QWORD *)((char *)a1 + v28);
    v30 = (_QWORD *)((char *)a2 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    *((_BYTE *)a1 + v13[16]) = *((_BYTE *)a2 + v13[16]);
    v32 = *(int *)(a3 + 20);
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    v35 = sub_190A46F78();
    v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
    swift_bridgeObjectRetain();
    v36(v33, v34, v35);
    v37 = *(int *)(a3 + 24);
    v38 = (_QWORD *)((char *)a1 + v37);
    v39 = (_QWORD *)((char *)a2 + v37);
    v40 = type metadata accessor for JindoArchivedViewCollection();
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6A30);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v57 = v41;
      *v38 = *v39;
      v43 = *(int *)(v40 + 20);
      v44 = (char *)v38 + v43;
      v45 = (char *)v39 + v43;
      v46 = (void *)*((_QWORD *)v45 + 1);
      *(_QWORD *)v44 = *(_QWORD *)v45;
      *((_QWORD *)v44 + 1) = v46;
      *((_QWORD *)v44 + 2) = *((_QWORD *)v45 + 2);
      *(_OWORD *)(v44 + 24) = *(_OWORD *)(v45 + 24);
      *((_WORD *)v44 + 20) = *((_WORD *)v45 + 20);
      v47 = *(int *)(v17 + 28);
      v55 = &v44[v47];
      v48 = &v45[v47];
      v49 = sub_190A45FC4();
      __dsta = *(_QWORD **)(v49 - 8);
      v60 = (unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6];
      swift_retain();
      v50 = v46;
      swift_bridgeObjectRetain();
      if (v60(v48, 1, v49))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
        memcpy(v55, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))__dsta[2])(v55, v48, v49);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dsta[7])(v55, 0, 1, v49);
      }
      v36((char *)v38 + *(int *)(v40 + 24), (char *)v39 + *(int *)(v40 + 24), v35);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v38, 0, 1, v40);
    }
  }
  return a1;
}

uint64_t destroy for ActivityArchivedViewCollection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);

  v4 = sub_190A460CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(type metadata accessor for ActivityViewStates.Metadata(0) + 20);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E69E8) + 52);
  v7 = type metadata accessor for JindoViewStates.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_release();

    swift_bridgeObjectRelease();
    v8 = v6 + *(int *)(v7 + 28);
    v9 = sub_190A45FC4();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();
  v11 = a1 + *(int *)(a2 + 20);
  v12 = sub_190A46F78();
  v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v20(v11, v12);
  v13 = a1 + *(int *)(a2 + 24);
  v14 = type metadata accessor for JindoArchivedViewCollection();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14);
  if (!(_DWORD)result)
  {
    v16 = v13 + *(int *)(v14 + 20);
    swift_release();

    swift_bridgeObjectRelease();
    v17 = v16 + *(int *)(v7 + 28);
    v18 = sub_190A45FC4();
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    return ((uint64_t (*)(uint64_t, uint64_t))v20)(v13 + *(int *)(v14 + 24), v12);
  }
  return result;
}

uint64_t initializeWithCopy for ActivityArchivedViewCollection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  void *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  unsigned int (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  char *__dst;
  char *__dsta;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v6 = sub_190A460CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ActivityViewStates.Metadata(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = *(void **)(a2 + v8 + 8);
  *v9 = *(_QWORD *)(a2 + v8);
  v9[1] = v10;
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  swift_retain();
  v11 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E69E8);
  v13 = v12[13];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = type metadata accessor for JindoViewStates.Metadata(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E5F68);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = v16;
    v20 = (void *)v15[1];
    *v14 = *v15;
    v14[1] = v20;
    v14[2] = v15[2];
    *(_OWORD *)(v14 + 3) = *(_OWORD *)(v15 + 3);
    *((_WORD *)v14 + 20) = *((_WORD *)v15 + 20);
    v57 = v19;
    v59 = a3;
    v21 = *(int *)(v19 + 28);
    v53 = (char *)v15 + v21;
    __dst = (char *)v14 + v21;
    v22 = sub_190A45FC4();
    v23 = *(_QWORD *)(v22 - 8);
    v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    swift_retain();
    v24 = v20;
    swift_bridgeObjectRetain();
    if (v51(v53, 1, v22))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(__dst, v53, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(__dst, v53, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
    }
    v16 = v57;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v57);
    a3 = v59;
  }
  *(_QWORD *)(a1 + v12[14]) = *(_QWORD *)(a2 + v12[14]);
  v26 = v12[15];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  *(_BYTE *)(a1 + v12[16]) = *(_BYTE *)(a2 + v12[16]);
  v30 = *(int *)(a3 + 20);
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = sub_190A46F78();
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
  swift_bridgeObjectRetain();
  v34(v31, v32, v33);
  v35 = *(int *)(a3 + 24);
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  v38 = type metadata accessor for JindoArchivedViewCollection();
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6A30);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v58 = v39;
    *v36 = *v37;
    v41 = *(int *)(v38 + 20);
    v42 = (char *)v36 + v41;
    v43 = (char *)v37 + v41;
    v44 = (void *)*((_QWORD *)v43 + 1);
    *(_QWORD *)v42 = *(_QWORD *)v43;
    *((_QWORD *)v42 + 1) = v44;
    *((_QWORD *)v42 + 2) = *((_QWORD *)v43 + 2);
    *(_OWORD *)(v42 + 24) = *(_OWORD *)(v43 + 24);
    *((_WORD *)v42 + 20) = *((_WORD *)v43 + 20);
    v45 = *(int *)(v16 + 28);
    __dsta = &v42[v45];
    v46 = &v43[v45];
    v47 = sub_190A45FC4();
    v52 = *(_QWORD *)(v47 - 8);
    v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
    swift_retain();
    v48 = v44;
    swift_bridgeObjectRetain();
    if (v54(v46, 1, v47))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(__dsta, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(__dsta, v46, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(__dsta, 0, 1, v47);
    }
    v34((uint64_t)v36 + *(int *)(v38 + 24), (uint64_t)v37 + *(int *)(v38 + 24), v33);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v36, 0, 1, v38);
  }
  return a1;
}

uint64_t assignWithCopy for ActivityArchivedViewCollection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  int v21;
  int v22;
  void *v23;
  __int128 v24;
  uint64_t v25;
  const void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void *, uint64_t, uint64_t);
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(_QWORD *, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  char *v64;
  char *v65;
  void *v66;
  __int128 v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  void *v77;
  void *v78;
  id v79;
  __int128 v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(char *, uint64_t, uint64_t);
  int v87;
  size_t v88;
  char *v89;
  uint64_t v91;
  uint64_t v92;
  unsigned int (*v93)(const void *, uint64_t, uint64_t);
  unsigned int (*v94)(char *, uint64_t, uint64_t);
  void *__dst;
  char *__dsta;
  char *__dstb;
  void *__src;
  char *__srca;
  uint64_t v100;
  uint64_t v101;

  v6 = sub_190A460CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ActivityViewStates.Metadata(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_retain();
  swift_release();
  v11 = *(void **)(v10 + 8);
  v12 = *(void **)(v9 + 8);
  *(_QWORD *)(v9 + 8) = v11;
  v13 = v11;

  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E69E8);
  v15 = v14[13];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for JindoViewStates.Metadata(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (v22)
    {
      sub_1908B5150(v16, type metadata accessor for JindoViewStates.Metadata);
      goto LABEL_7;
    }
    v100 = a3;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    swift_retain();
    swift_release();
    v31 = *(void **)(v17 + 8);
    v32 = *(void **)(v16 + 8);
    *(_QWORD *)(v16 + 8) = v31;
    v33 = v31;

    *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v34 = *(_OWORD *)(v17 + 24);
    *(_WORD *)(v16 + 40) = *(_WORD *)(v17 + 40);
    *(_OWORD *)(v16 + 24) = v34;
    v35 = v18;
    v36 = *(int *)(v18 + 28);
    v37 = (void *)(v16 + v36);
    v38 = (void *)(v17 + v36);
    v39 = sub_190A45FC4();
    v40 = *(_QWORD *)(v39 - 8);
    v41 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v40 + 48);
    v42 = v41(v37, 1, v39);
    v43 = v41(v38, 1, v39);
    if (v42)
    {
      if (!v43)
      {
        (*(void (**)(void *, void *, uint64_t))(v40 + 16))(v37, v38, v39);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
LABEL_16:
        v18 = v35;
        a3 = v100;
        goto LABEL_17;
      }
    }
    else
    {
      if (!v43)
      {
        (*(void (**)(void *, void *, uint64_t))(v40 + 24))(v37, v38, v39);
        goto LABEL_16;
      }
      (*(void (**)(void *, uint64_t))(v40 + 8))(v37, v39);
    }
    v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_16;
  }
  if (v22)
  {
LABEL_7:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E5F68);
    memcpy((void *)v16, (const void *)v17, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_17;
  }
  __src = (void *)v18;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v23 = *(void **)(v17 + 8);
  *(_QWORD *)(v16 + 8) = v23;
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  v24 = *(_OWORD *)(v17 + 24);
  *(_WORD *)(v16 + 40) = *(_WORD *)(v17 + 40);
  *(_OWORD *)(v16 + 24) = v24;
  v25 = *(int *)(v18 + 28);
  __dst = (void *)(v16 + v25);
  v26 = (const void *)(v17 + v25);
  v27 = sub_190A45FC4();
  v91 = *(_QWORD *)(v27 - 8);
  v93 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v91 + 48);
  swift_retain();
  v28 = v23;
  swift_bridgeObjectRetain();
  if (v93(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v91 + 16))(__dst, v26, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(__dst, 0, 1, v27);
  }
  v18 = (uint64_t)__src;
  (*(void (**)(uint64_t, _QWORD, uint64_t, void *))(v19 + 56))(v16, 0, 1, __src);
LABEL_17:
  *(_QWORD *)(a1 + v14[14]) = *(_QWORD *)(a2 + v14[14]);
  v45 = v14[15];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (_QWORD *)(a2 + v45);
  *v46 = *v47;
  v46[1] = v47[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v14[16]) = *(_BYTE *)(a2 + v14[16]);
  v48 = *(int *)(a3 + 20);
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = sub_190A46F78();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = a3;
  v54 = *(void (**)(uint64_t, uint64_t))(v52 + 24);
  v101 = v51;
  v54(v49, v50);
  v55 = *(int *)(v53 + 24);
  v56 = (_QWORD *)(a1 + v55);
  v57 = (_QWORD *)(a2 + v55);
  v58 = type metadata accessor for JindoArchivedViewCollection();
  v59 = *(_QWORD *)(v58 - 8);
  v60 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v59 + 48);
  v61 = v60(v56, 1, v58);
  v62 = v60(v57, 1, v58);
  if (!v61)
  {
    if (v62)
    {
      sub_1908B5150((uint64_t)v56, (uint64_t (*)(_QWORD))type metadata accessor for JindoArchivedViewCollection);
      goto LABEL_23;
    }
    *v56 = *v57;
    v74 = *(int *)(v58 + 20);
    v75 = (char *)v56 + v74;
    v76 = (char *)v57 + v74;
    *(_QWORD *)((char *)v56 + v74) = *(_QWORD *)((char *)v57 + v74);
    swift_retain();
    swift_release();
    v77 = (void *)*((_QWORD *)v76 + 1);
    v78 = (void *)*((_QWORD *)v75 + 1);
    *((_QWORD *)v75 + 1) = v77;
    v79 = v77;

    *((_QWORD *)v75 + 2) = *((_QWORD *)v76 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v80 = *(_OWORD *)(v76 + 24);
    *((_WORD *)v75 + 20) = *((_WORD *)v76 + 20);
    *(_OWORD *)(v75 + 24) = v80;
    v81 = *(int *)(v18 + 28);
    v82 = &v75[v81];
    v83 = &v76[v81];
    v84 = sub_190A45FC4();
    v85 = *(_QWORD *)(v84 - 8);
    v86 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v85 + 48);
    __dstb = v82;
    LODWORD(v82) = v86(v82, 1, v84);
    v87 = v86(v83, 1, v84);
    if ((_DWORD)v82)
    {
      if (!v87)
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(__dstb, v83, v84);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(__dstb, 0, 1, v84);
        goto LABEL_35;
      }
      v88 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858) - 8) + 64);
      v89 = __dstb;
    }
    else
    {
      if (!v87)
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 24))(__dstb, v83, v84);
        goto LABEL_35;
      }
      (*(void (**)(char *, uint64_t))(v85 + 8))(__dstb, v84);
      v88 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858) - 8) + 64);
      v89 = __dstb;
    }
    memcpy(v89, v83, v88);
LABEL_35:
    ((void (*)(char *, char *, uint64_t))v54)((char *)v56 + *(int *)(v58 + 24), (char *)v57 + *(int *)(v58 + 24), v101);
    return a1;
  }
  if (v62)
  {
LABEL_23:
    v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6A30);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    return a1;
  }
  *v56 = *v57;
  v63 = *(int *)(v58 + 20);
  v64 = (char *)v56 + v63;
  v65 = (char *)v57 + v63;
  *(_QWORD *)v64 = *(_QWORD *)v65;
  v66 = (void *)*((_QWORD *)v65 + 1);
  *((_QWORD *)v64 + 1) = v66;
  *((_QWORD *)v64 + 2) = *((_QWORD *)v65 + 2);
  v67 = *(_OWORD *)(v65 + 24);
  *((_WORD *)v64 + 20) = *((_WORD *)v65 + 20);
  *(_OWORD *)(v64 + 24) = v67;
  v68 = *(int *)(v18 + 28);
  __dsta = (char *)v57;
  __srca = &v64[v68];
  v69 = &v65[v68];
  v70 = sub_190A45FC4();
  v92 = *(_QWORD *)(v70 - 8);
  v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48);
  swift_retain();
  v71 = v66;
  swift_bridgeObjectRetain();
  if (v94(v69, 1, v70))
  {
    v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(__srca, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v92 + 16))(__srca, v69, v70);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(__srca, 0, 1, v70);
  }
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))((char *)v56 + *(int *)(v58 + 24), &__dsta[*(int *)(v58 + 24)], v101);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
  return a1;
}

uint64_t initializeWithTake for ActivityArchivedViewCollection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  int *v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *__dst;
  char *__dsta;

  v6 = sub_190A460CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ActivityViewStates.Metadata(0);
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E69E8);
  v9 = v8[13];
  v10 = (_OWORD *)(a1 + v9);
  v11 = (_OWORD *)(a2 + v9);
  v12 = type metadata accessor for JindoViewStates.Metadata(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E5F68);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *v10 = *v11;
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *(_OWORD *)((char *)v10 + 24) = *(_OWORD *)((char *)v11 + 24);
    *((_WORD *)v10 + 20) = *((_WORD *)v11 + 20);
    v15 = *(int *)(v12 + 28);
    __dst = (char *)v10 + v15;
    v16 = (char *)v11 + v15;
    v17 = sub_190A45FC4();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(__dst, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_QWORD *)(a1 + v8[14]) = *(_QWORD *)(a2 + v8[14]);
  *(_OWORD *)(a1 + v8[15]) = *(_OWORD *)(a2 + v8[15]);
  *(_BYTE *)(a1 + v8[16]) = *(_BYTE *)(a2 + v8[16]);
  v20 = *(int *)(a3 + 20);
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_190A46F78();
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
  v24(v21, v22, v23);
  v25 = *(int *)(a3 + 24);
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = type metadata accessor for JindoArchivedViewCollection();
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6A30);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    *v26 = *v27;
    v31 = *(int *)(v28 + 20);
    v32 = (char *)v26 + v31;
    v33 = (char *)v27 + v31;
    *(_OWORD *)v32 = *(_OWORD *)v33;
    *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
    *(_OWORD *)(v32 + 24) = *(_OWORD *)(v33 + 24);
    *((_WORD *)v32 + 20) = *((_WORD *)v33 + 20);
    v34 = *(int *)(v12 + 28);
    __dsta = &v32[v34];
    v35 = &v33[v34];
    v36 = sub_190A45FC4();
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(__dsta, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(__dsta, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dsta, 0, 1, v36);
    }
    v24((uint64_t)v26 + *(int *)(v28 + 24), (uint64_t)v27 + *(int *)(v28 + 24), v23);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  return a1;
}

uint64_t assignWithTake for ActivityArchivedViewCollection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(char *, uint64_t, uint64_t);
  int v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  void *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(char *, uint64_t, uint64_t);
  int v75;
  int v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v6 = sub_190A460CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for ActivityViewStates.Metadata(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_release();
  v11 = *(void **)(v9 + 8);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);

  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E69E8);
  v13 = v12[13];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for JindoViewStates.Metadata(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      v82 = a3;
      *(_QWORD *)v14 = *(_QWORD *)v15;
      swift_release();
      v29 = *(void **)(v14 + 8);
      *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);

      *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
      swift_bridgeObjectRelease();
      *(_OWORD *)(v14 + 24) = *(_OWORD *)(v15 + 24);
      *(_WORD *)(v14 + 40) = *(_WORD *)(v15 + 40);
      v30 = *(int *)(v16 + 28);
      v14 += v30;
      v15 += v30;
      v31 = sub_190A45FC4();
      v32 = *(_QWORD *)(v31 - 8);
      v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
      v34 = v33(v14, 1, v31);
      v35 = v33(v15, 1, v31);
      if (v34)
      {
        a3 = v82;
        if (!v35)
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v14, v15, v31);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v14, 0, 1, v31);
          goto LABEL_14;
        }
      }
      else
      {
        a3 = v82;
        if (!v35)
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 40))(v14, v15, v31);
          goto LABEL_14;
        }
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v14, v31);
      }
      v27 = (uint64_t *)&unk_1ECF6C858;
LABEL_8:
      v28 = __swift_instantiateConcreteTypeFromMangledName(v27);
      memcpy((void *)v14, (const void *)v15, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      goto LABEL_14;
    }
    sub_1908B5150(v14, type metadata accessor for JindoViewStates.Metadata);
LABEL_7:
    v27 = &qword_1EE1E5F68;
    goto LABEL_8;
  }
  if (v20)
    goto LABEL_7;
  v81 = a3;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  *(_OWORD *)(v14 + 24) = *(_OWORD *)(v15 + 24);
  *(_WORD *)(v14 + 40) = *(_WORD *)(v15 + 40);
  v21 = *(int *)(v16 + 28);
  v22 = (void *)(v14 + v21);
  v23 = (const void *)(v15 + v21);
  v24 = sub_190A45FC4();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  a3 = v81;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_14:
  *(_QWORD *)(a1 + v12[14]) = *(_QWORD *)(a2 + v12[14]);
  v36 = v12[15];
  v37 = (_QWORD *)(a1 + v36);
  v38 = (uint64_t *)(a2 + v36);
  v40 = *v38;
  v39 = v38[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v12[16]) = *(_BYTE *)(a2 + v12[16]);
  v41 = *(int *)(a3 + 20);
  v42 = a1 + v41;
  v43 = a2 + v41;
  v44 = sub_190A46F78();
  v45 = a3;
  v46 = *(_QWORD *)(v44 - 8);
  v47 = *(void (**)(uint64_t, uint64_t))(v46 + 40);
  v83 = v44;
  v47(v42, v43);
  v48 = *(int *)(v45 + 24);
  v49 = (char *)(a1 + v48);
  v50 = (char *)(a2 + v48);
  v51 = type metadata accessor for JindoArchivedViewCollection();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
  LODWORD(v43) = v53(v49, 1, v51);
  v54 = v53(v50, 1, v51);
  if (!(_DWORD)v43)
  {
    v80 = v47;
    if (v54)
    {
      sub_1908B5150((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for JindoArchivedViewCollection);
      goto LABEL_20;
    }
    *(_QWORD *)v49 = *(_QWORD *)v50;
    v65 = *(int *)(v51 + 20);
    v66 = &v49[v65];
    v67 = &v50[v65];
    *(_QWORD *)&v49[v65] = *(_QWORD *)&v50[v65];
    swift_release();
    v68 = (void *)*((_QWORD *)v66 + 1);
    *((_QWORD *)v66 + 1) = *((_QWORD *)v67 + 1);

    *((_QWORD *)v66 + 2) = *((_QWORD *)v67 + 2);
    swift_bridgeObjectRelease();
    *(_OWORD *)(v66 + 24) = *(_OWORD *)(v67 + 24);
    *((_WORD *)v66 + 20) = *((_WORD *)v67 + 20);
    v69 = *(int *)(v16 + 28);
    v70 = &v66[v69];
    v71 = &v67[v69];
    v72 = sub_190A45FC4();
    v73 = *(_QWORD *)(v72 - 8);
    v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48);
    v75 = v74(v70, 1, v72);
    v76 = v74(v71, 1, v72);
    if (v75)
    {
      v77 = (void (*)(char *, char *, uint64_t))v80;
      if (!v76)
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v70, v71, v72);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
LABEL_32:
        v77(&v49[*(int *)(v51 + 24)], &v50[*(int *)(v51 + 24)], v83);
        return a1;
      }
    }
    else
    {
      v77 = (void (*)(char *, char *, uint64_t))v80;
      if (!v76)
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 40))(v70, v71, v72);
        goto LABEL_32;
      }
      (*(void (**)(char *, uint64_t))(v73 + 8))(v70, v72);
    }
    v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    goto LABEL_32;
  }
  if (v54)
  {
LABEL_20:
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6A30);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v49 = *(_QWORD *)v50;
  v55 = *(int *)(v51 + 20);
  v56 = &v49[v55];
  v57 = &v50[v55];
  *(_OWORD *)v56 = *(_OWORD *)v57;
  *((_QWORD *)v56 + 2) = *((_QWORD *)v57 + 2);
  *(_OWORD *)(v56 + 24) = *(_OWORD *)(v57 + 24);
  *((_WORD *)v56 + 20) = *((_WORD *)v57 + 20);
  v58 = *(int *)(v16 + 28);
  v59 = &v56[v58];
  v60 = &v57[v58];
  v61 = sub_190A45FC4();
  v62 = *(_QWORD *)(v61 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
  {
    v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v49[*(int *)(v51 + 24)], &v50[*(int *)(v51 + 24)], v83);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityArchivedViewCollection()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190A368A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E69E8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_190A46F78();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6A30);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ActivityArchivedViewCollection()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190A3694C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E69E8);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_190A46F78();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6A30);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_190A369F4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_190A36A94();
  if (v0 <= 0x3F)
  {
    sub_190A46F78();
    if (v1 <= 0x3F)
    {
      sub_190A36B5C();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_190A36A94()
{
  uint64_t result;

  result = qword_1EE1E69F0;
  if (!qword_1EE1E69F0)
  {
    type metadata accessor for ActivityViewStates(255);
    type metadata accessor for JindoViewStates(255);
    sub_1908AA2F4(&qword_1EE1E69D0, type metadata accessor for ActivityViewStates, (uint64_t)&unk_190A5C484);
    sub_1908AA2F4((unint64_t *)&qword_1EE1E69B8, type metadata accessor for JindoViewStates, (uint64_t)&unk_190A563A8);
    type metadata accessor for CompositeViewStates.Metadata();
  }
  return result;
}

void sub_190A36B5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE1E6A38)
  {
    type metadata accessor for JindoArchivedViewCollection();
    v0 = sub_190A48148();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE1E6A38);
  }
}

ValueMetadata *type metadata accessor for ActivityArchivedViewCollection.ViewIndex()
{
  return &type metadata for ActivityArchivedViewCollection.ViewIndex;
}

uint64_t destroy for ActivityArchivedViewCollection.ViewEntry()
{
  return swift_release();
}

uint64_t initializeWithCopy for ActivityArchivedViewCollection.ViewEntry(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 103) = *(_DWORD *)(a2 + 103);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v3 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ActivityArchivedViewCollection.ViewEntry(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_retain();
  swift_release();
  v5 = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  *(_OWORD *)(a1 + 24) = v5;
  v6 = *(_OWORD *)(a2 + 7);
  v7 = *(_OWORD *)(a2 + 9);
  v8 = *(_OWORD *)(a2 + 11);
  *(_DWORD *)(a1 + 103) = *(_DWORD *)((char *)a2 + 103);
  *(_OWORD *)(a1 + 88) = v8;
  *(_OWORD *)(a1 + 72) = v7;
  *(_OWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 112) = a2[14];
  *(_QWORD *)(a1 + 120) = a2[15];
  *(_QWORD *)(a1 + 128) = a2[16];
  *(_QWORD *)(a1 + 136) = a2[17];
  *(_QWORD *)(a1 + 144) = a2[18];
  return a1;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for ActivityArchivedViewCollection.ViewEntry(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 103) = *(_DWORD *)(a2 + 103);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v4;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityArchivedViewCollection.ViewEntry(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 152))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityArchivedViewCollection.ViewEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityArchivedViewCollection.ViewEntry()
{
  return &type metadata for ActivityArchivedViewCollection.ViewEntry;
}

ValueMetadata *type metadata accessor for ActivityArchivedViewCollection.ViewIndex.Base()
{
  return &type metadata for ActivityArchivedViewCollection.ViewIndex.Base;
}

unint64_t sub_190A36E7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1E69E0;
  if (!qword_1EE1E69E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E69E8);
    result = MEMORY[0x19401429C](&unk_190A4A754, v1);
    atomic_store(result, (unint64_t *)&qword_1EE1E69E0);
  }
  return result;
}

uint64_t sub_190A36EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JindoViewStates.Metadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_190A36F0C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_190A36FBC + 4 * byte_190A5E790[(v7 - 1)]))();
}

void sub_190A3700C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for TemplateDescriptorPreference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TemplateDescriptorPreference);
}

uint64_t sub_190A371C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190A371FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v4;
  uint64_t v5[3];
  __int128 v6;

  v6 = *(_OWORD *)(a1 + 16);
  v4 = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v5);
  (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(boxed_opaque_existential_1, v1);
  sub_190904C2C();
  sub_190A47044();
  return sub_190904CFC((uint64_t)v5);
}

uint64_t sub_190A3728C()
{
  sub_190904C2C();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190A372DC()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D680 = result;
  return result;
}

uint64_t sub_190A37300()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B568);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D668 = v0;
  unk_1ECF6D670 = 0xD000000000000010;
  qword_1ECF6D678 = 0x8000000190A60ED0;
  return result;
}

ValueMetadata *type metadata accessor for ShowsWidgetLabelKey()
{
  return &type metadata for ShowsWidgetLabelKey;
}

uint64_t sub_190A37384()
{
  if (qword_1ECF6B4D8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_190A373C4()
{
  uint64_t v0;

  if (qword_1ECF6B500 != -1)
    swift_once();
  v0 = qword_1ECF6D668;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t TimelineReloadPolicy.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_190993F10(v1, a1);
}

uint64_t TimelineReloadPolicy.date.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_190A37454(a1, v1);
}

uint64_t sub_190A37454(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*TimelineReloadPolicy.date.modify())()
{
  return nullsub_1;
}

uint64_t sub_190A374AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for TimelineReloadPolicy();
  __swift_allocate_value_buffer(v0, qword_1ECF6A058);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ECF6A058);
  v2 = sub_190A46084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t static TimelineReloadPolicy.atEnd.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_190A37644(&qword_1ECF69EB8, (uint64_t)qword_1ECF6A058, a1);
}

uint64_t type metadata accessor for TimelineReloadPolicy()
{
  uint64_t result;

  result = qword_1ECF6C568;
  if (!qword_1ECF6C568)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_190A37568()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TimelineReloadPolicy();
  __swift_allocate_value_buffer(v3, qword_1ECF6BE78);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1ECF6BE78);
  sub_190A4603C();
  v5 = sub_190A46084();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 0, 1, v5);
  return sub_19097013C((uint64_t)v2, v4);
}

uint64_t static TimelineReloadPolicy.never.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_190A37644(&qword_1ECF6BE60, (uint64_t)qword_1ECF6BE78, a1);
}

uint64_t sub_190A37644@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = type metadata accessor for TimelineReloadPolicy();
  v6 = __swift_project_value_buffer(v5, a2);
  return sub_190A1A270(v6, a3);
}

uint64_t static TimelineReloadPolicy.after(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_190A46084();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_190A376F8()
{
  return 1702125924;
}

uint64_t sub_190A37708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_190A486DC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_190A3778C()
{
  sub_190A37EAC();
  return sub_190A48868();
}

uint64_t sub_190A377B4()
{
  sub_190A37EAC();
  return sub_190A48874();
}

uint64_t TimelineReloadPolicy.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B088);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190A37EAC();
  sub_190A48850();
  sub_190A46084();
  sub_190A38608((unint64_t *)&unk_1ECF6C610, MEMORY[0x1E0CB0890]);
  sub_190A485EC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t TimelineReloadPolicy.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v14 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  MEMORY[0x1E0C80A78](v4);
  v16 = (uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF68180);
  v15 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TimelineReloadPolicy();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_190A46084();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190A37EAC();
  sub_190A48838();
  if (!v2)
  {
    sub_190A38608((unint64_t *)&unk_1ECF69DC0, MEMORY[0x1E0CB08C0]);
    sub_190A4852C();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
    sub_190A37454(v16, (uint64_t)v11);
    sub_190A1A270((uint64_t)v11, v14);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_190A37EF0((uint64_t)v11);
}

uint64_t sub_190A37AC8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TimelineReloadPolicy.init(from:)(a1, a2);
}

uint64_t sub_190A37ADC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B088);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190A37EAC();
  sub_190A48850();
  sub_190A46084();
  sub_190A38608((unint64_t *)&unk_1ECF6C610, MEMORY[0x1E0CB0890]);
  sub_190A485EC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

BOOL _s9WidgetKit20TimelineReloadPolicyV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;

  v4 = sub_190A46084();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EAF80);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v25 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v25 - v18;
  sub_190993F10(a1, (uint64_t)&v25 - v18);
  sub_190993F10(a2, (uint64_t)v17);
  v20 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_190993F10((uint64_t)v19, (uint64_t)v10);
  sub_190993F10((uint64_t)v17, v20);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) == 1)
  {
    sub_1908AA544((uint64_t)v17, &qword_1ECF6C2F8);
    sub_1908AA544((uint64_t)v19, &qword_1ECF6C2F8);
    if (v21(v20, 1, v4) == 1)
    {
      sub_1908AA544((uint64_t)v10, &qword_1ECF6C2F8);
      return 1;
    }
    goto LABEL_6;
  }
  sub_190993F10((uint64_t)v10, (uint64_t)v14);
  if (v21(v20, 1, v4) == 1)
  {
    sub_1908AA544((uint64_t)v17, &qword_1ECF6C2F8);
    sub_1908AA544((uint64_t)v19, &qword_1ECF6C2F8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_6:
    sub_1908AA544((uint64_t)v10, &qword_1EE1EAF80);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v20, v4);
  sub_190A38608((unint64_t *)&qword_1EE1E6BE0, MEMORY[0x1E0CB08B8]);
  v22 = sub_190A47AAC();
  v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v7, v4);
  sub_1908AA544((uint64_t)v17, &qword_1ECF6C2F8);
  sub_1908AA544((uint64_t)v19, &qword_1ECF6C2F8);
  v23(v14, v4);
  sub_1908AA544((uint64_t)v10, &qword_1ECF6C2F8);
  return (v22 & 1) != 0;
}

unint64_t sub_190A37EAC()
{
  unint64_t result;

  result = qword_1ECF6B190;
  if (!qword_1ECF6B190)
  {
    result = MEMORY[0x19401429C](&unk_190A5EA18, &type metadata for TimelineReloadPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B190);
  }
  return result;
}

uint64_t sub_190A37EF0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TimelineReloadPolicy();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for TimelineReloadPolicy(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_190A46084();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  return a1;
}

uint64_t destroy for TimelineReloadPolicy(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_190A46084();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for TimelineReloadPolicy(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_190A46084();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithCopy for TimelineReloadPolicy(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_190A46084();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *initializeWithTake for TimelineReloadPolicy(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_190A46084();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithTake for TimelineReloadPolicy(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_190A46084();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TimelineReloadPolicy()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190A3839C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TimelineReloadPolicy()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190A383E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_190A3842C()
{
  unint64_t v0;

  sub_190919C64();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for TimelineReloadPolicy.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_190A384D4 + 4 * byte_190A5E8A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_190A384F4 + 4 * byte_190A5E8A5[v4]))();
}

_BYTE *sub_190A384D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_190A384F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190A384FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190A38504(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190A3850C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190A38514(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TimelineReloadPolicy.CodingKeys()
{
  return &type metadata for TimelineReloadPolicy.CodingKeys;
}

unint64_t sub_190A38534()
{
  unint64_t result;

  result = qword_1EE1EF348;
  if (!qword_1EE1EF348)
  {
    result = MEMORY[0x19401429C](&unk_190A5E9F0, &type metadata for TimelineReloadPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EF348);
  }
  return result;
}

unint64_t sub_190A3857C()
{
  unint64_t result;

  result = qword_1ECF6B1A0;
  if (!qword_1ECF6B1A0)
  {
    result = MEMORY[0x19401429C](&unk_190A5E960, &type metadata for TimelineReloadPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B1A0);
  }
  return result;
}

unint64_t sub_190A385C4()
{
  unint64_t result;

  result = qword_1ECF6B198;
  if (!qword_1ECF6B198)
  {
    result = MEMORY[0x19401429C](&unk_190A5E988, &type metadata for TimelineReloadPolicy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B198);
  }
  return result;
}

uint64_t sub_190A38608(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_190A46084();
    result = MEMORY[0x19401429C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

BOOL ActivityMetrics.isUnitScale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24) == 1.0;
}

double ActivityMetrics.rawSizePixelAligned(with:)(double a1)
{
  float64x2_t *v1;
  double result;

  *(_QWORD *)&result = *(_OWORD *)&vmulq_n_f64(vrndmq_f64(vdivq_f64(vaddq_f64((float64x2_t)vdupq_lane_s64(COERCE__INT64(1.0 / a1 * 0.5), 0), *v1), (float64x2_t)vdupq_lane_s64(COERCE__INT64(1.0 / a1), 0))), 1.0 / a1);
  return result;
}

double ActivityMetrics.effectiveCornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16) * *(double *)(v0 + 24);
}

float64_t ActivityMetrics.effectiveSizePixelAligned(with:)(double a1)
{
  float64x2_t *v1;
  double v3;
  float64x2_t v4;

  v3 = v1[1].f64[1];
  v4 = vmulq_n_f64(*v1, v3);
  if (v3 != 1.0)
    *(_QWORD *)&v4.f64[0] = *(_OWORD *)&vmulq_n_f64(vrndmq_f64(vdivq_f64(vaddq_f64((float64x2_t)vdupq_lane_s64(COERCE__INT64(1.0 / a1 * 0.5), 0), v4), (float64x2_t)vdupq_lane_s64(COERCE__INT64(1.0 / a1), 0))), 1.0 / a1);
  return v4.f64[0];
}

double ActivityMetrics.cornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double ActivityMetrics.scaleFactor.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

ValueMetadata *type metadata accessor for ActivityMetrics()
{
  return &type metadata for ActivityMetrics;
}

void sub_190A3870C()
{
  qword_1EE1E5DA0 = (uint64_t)&unk_1E2CC1BE0;
}

uint64_t WidgetExtensionPointNames.getter()
{
  if (qword_1EE1E5E38 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

void sub_190A38760()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = &unk_1EE201938;
  v2 = objc_msgSend(v0, sel_interfaceWithProtocol_, v1);

  qword_1ECF6B9A0 = (uint64_t)v2;
}

id sub_190A387C4()
{
  id result;

  result = sub_190A387E0();
  qword_1ECF6D248 = (uint64_t)result;
  return result;
}

id sub_190A387E0()
{
  id v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v0 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_1EE1FFBA0);
  sub_1908AB844();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190A4A360;
  v2 = sub_1908AB890(0, (unint64_t *)&unk_1ECF6D3B0);
  *(_QWORD *)(inited + 32) = v2;
  *(_QWORD *)(inited + 40) = sub_1908AB890(0, &qword_1ECF6D250);
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(inited);
  swift_setDeallocating();
  sub_1908AB844();
  v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_190A4A350;
  *(_QWORD *)(v3 + 32) = type metadata accessor for DescriptorFetchResult();
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v3);
  swift_setDeallocating();
  sub_1908AB844();
  v4 = swift_initStackObject();
  *(_OWORD *)(v4 + 16) = xmmword_190A4A350;
  *(_QWORD *)(v4 + 32) = sub_1908AB890(0, &qword_1ECF6D368);
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v4);
  swift_setDeallocating();
  sub_1908AB844();
  v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_190A4A350;
  *(_QWORD *)(v5 + 32) = sub_1908AB890(0, &qword_1ECF6D360);
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v5);
  swift_setDeallocating();
  sub_1908AB844();
  v6 = swift_initStackObject();
  *(_OWORD *)(v6 + 16) = xmmword_190A4A350;
  *(_QWORD *)(v6 + 32) = type metadata accessor for ModifyControlStateRequest();
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v6);
  swift_setDeallocating();
  sub_1908AB844();
  v7 = swift_initStackObject();
  *(_OWORD *)(v7 + 16) = xmmword_190A4A350;
  v8 = sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
  *(_QWORD *)(v7 + 32) = v8;
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v7);
  swift_setDeallocating();
  sub_1908AB844();
  v9 = swift_initStackObject();
  *(_OWORD *)(v9 + 16) = xmmword_190A4A360;
  *(_QWORD *)(v9 + 32) = v2;
  *(_QWORD *)(v9 + 40) = type metadata accessor for ControlTemplateRequest();
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v9);
  swift_setDeallocating();
  sub_1908AB844();
  v10 = swift_initStackObject();
  *(_OWORD *)(v10 + 16) = xmmword_190A4A350;
  *(_QWORD *)(v10 + 32) = v8;
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v10);
  swift_setDeallocating();
  sub_1908AB844();
  v11 = swift_initStackObject();
  *(_OWORD *)(v11 + 16) = xmmword_190A4A360;
  *(_QWORD *)(v11 + 32) = v2;
  *(_QWORD *)(v11 + 40) = type metadata accessor for PlaceholderRequest();
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v11);
  swift_setDeallocating();
  sub_1908AB844();
  v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = xmmword_190A4A350;
  *(_QWORD *)(v12 + 32) = v8;
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v12);
  swift_setDeallocating();
  sub_1908AB844();
  v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_190A4A360;
  *(_QWORD *)(v13 + 32) = v2;
  *(_QWORD *)(v13 + 40) = type metadata accessor for TimelineRequest();
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v13);
  swift_setDeallocating();
  sub_1908AB844();
  v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = xmmword_190A4A350;
  *(_QWORD *)(v14 + 32) = v8;
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v14);
  swift_setDeallocating();
  sub_1908AB844();
  v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_190A4A350;
  *(_QWORD *)(v15 + 32) = sub_1908AB890(0, &qword_1ECF6CFF0);
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v15);
  swift_setDeallocating();
  sub_1908AB844();
  v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_190A4A350;
  *(_QWORD *)(v16 + 32) = sub_1908AB890(0, &qword_1ECF6D310);
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v16);
  swift_setDeallocating();
  sub_1908AB844();
  v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_190A4A350;
  *(_QWORD *)(v17 + 32) = v8;
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v17);
  swift_setDeallocating();
  sub_1908AB844();
  v18 = swift_initStackObject();
  *(_OWORD *)(v18 + 16) = xmmword_190A4A360;
  *(_QWORD *)(v18 + 32) = v2;
  *(_QWORD *)(v18 + 40) = type metadata accessor for ActivityWidgetRequest(0);
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v18);
  swift_setDeallocating();
  sub_1908AB844();
  v19 = swift_initStackObject();
  *(_OWORD *)(v19 + 16) = xmmword_190A4A350;
  *(_QWORD *)(v19 + 32) = v8;
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v19);
  swift_setDeallocating();
  return v0;
}

id sub_190A38E2C(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  objc_class *v13;
  id v14;
  id v15;
  objc_super v17;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C750);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v9 = (void *)sub_190A47C50();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  sub_1909ADD50(a2, (uint64_t)v8);
  v10 = sub_190A460CC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
  {
    v12 = (void *)sub_190A4609C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  v13 = (objc_class *)type metadata accessor for _WidgetExtensionBaseContext();
  v17.receiver = v3;
  v17.super_class = v13;
  v14 = objc_msgSendSuper2(&v17, sel_initWithInputItems_contextUUID_, v9, v12);

  v15 = v14;
  sub_1909ADD98(a2);
  if (v15)

  return v15;
}

id sub_190A39054(uint64_t a1, void *a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  objc_class *v15;
  id v16;
  id v17;
  objc_super v19;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C750);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v11 = (void *)sub_190A47C50();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  sub_1909ADD50(a3, (uint64_t)v10);
  v12 = sub_190A460CC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    v14 = (void *)sub_190A4609C();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  v15 = (objc_class *)type metadata accessor for _WidgetExtensionBaseContext();
  v19.receiver = v4;
  v19.super_class = v15;
  v16 = objc_msgSendSuper2(&v19, sel_initWithInputItems_listenerEndpoint_contextUUID_, v11, a2, v14);

  v17 = v16;
  sub_1909ADD98(a3);
  if (v17)

  return v17;
}

id sub_190A3929C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _WidgetExtensionBaseContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of ViewStates.count.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ViewStates.makeMetadata()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ViewStates.updateState<A>(at:host:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

uint64_t dispatch thunk of ViewStates.filteredImage(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

ValueMetadata *type metadata accessor for DynamicIslandBackground()
{
  return &type metadata for DynamicIslandBackground;
}

uint64_t sub_190A3933C(uint64_t a1)
{
  void (*v1)(void);

  v1 = (void (*)(void))MEMORY[0x1E0C80A78](a1);
  v1();
  return sub_190A47884();
}

uint64_t sub_190A393B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_190A46744();
}

uint64_t sub_190A39434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = *(_QWORD *)(a4 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  (*(void (**)(char *))(v11 + 16))((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_190A46744();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, a4);
  sub_190A4789C();
  return v12;
}

ValueMetadata *type metadata accessor for DynamicIslandBackgroundModifier()
{
  return &type metadata for DynamicIslandBackgroundModifier;
}

uint64_t *initializeBufferWithCopyOfBuffer for DynamicIslandBackground.Storage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_19093EFC4(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for DynamicIslandBackground.Storage(uint64_t a1)
{
  return sub_19093EFFC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *_s9WidgetKit23DynamicIslandBackgroundV7StorageOwca_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_19093EFC4(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_19093EFFC(v5, v6);
  return a1;
}

uint64_t *assignWithTake for DynamicIslandBackground.Storage(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_19093EFFC(v3, v4);
  return a1;
}

uint64_t _s9WidgetKit23DynamicIslandBackgroundV7StorageOwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 16381);
  v3 = (((*(_QWORD *)(a1 + 8) >> 50) >> 12) | (4
                                                           * ((*(_QWORD *)(a1 + 8) >> 50) & 0xC00 | ((*(_QWORD *)(a1 + 8) & 7) << 7) | (*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7))) ^ 0x3FFF;
  if (v3 >> 2 >= 0xFFF)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s9WidgetKit23DynamicIslandBackgroundV7StorageOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  unint64_t v3;

  if (a2 > 0x3FFC)
  {
    *(_QWORD *)result = a2 - 16381;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3FFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x3FFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0xFFF | ((-a2 & 0x3FFF) << 12);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_QWORD *)(result + 8) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_190A396DC(_QWORD *a1)
{
  uint64_t v1;

  v1 = a1[1] >> 62;
  if ((_DWORD)v1 == 3)
    return (*a1 >> 3) + 3;
  else
    return v1;
}

uint64_t sub_190A396F8(uint64_t result)
{
  *(_QWORD *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

_QWORD *sub_190A39708(_QWORD *result, uint64_t a2)
{
  uint64_t v2;

  if (a2 < 3)
  {
    v2 = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
    *result &= 0xFFFFFFFFFFFFFF8uLL;
    result[1] = v2;
  }
  else
  {
    *result = 8 * (a2 - 3);
    result[1] = 0xC000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicIslandBackground.Storage()
{
  return &type metadata for DynamicIslandBackground.Storage;
}

uint64_t sub_190A39748()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_190A39758(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v17 = a2;
  v18 = a1;
  v23 = a4;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6080);
  MEMORY[0x1E0C80A78](v14);
  v10 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6168);
  MEMORY[0x1E0C80A78](v12);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6190);
  MEMORY[0x1E0C80A78](v22);
  v15 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6090);
  MEMORY[0x1E0C80A78](v13);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E60A0);
  MEMORY[0x1E0C80A78](v11);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6170);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6160);
  MEMORY[0x1E0C80A78](v8);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6180);
  MEMORY[0x1E0C80A78](v20);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E61B0);
  MEMORY[0x1E0C80A78](v9);
  v16 = a3;
  __asm { BR              X10 }
}

uint64_t sub_190A399CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;

  v6 = *(_QWORD *)(v5 - 136);
  swift_retain();
  v7 = sub_190A478CC();
  v9 = v8;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v5 - 128), v2);
  v10 = (uint64_t *)(v3 + *(int *)(*(_QWORD *)(v5 - 184) + 36));
  *v10 = v6;
  v10[1] = v7;
  v10[2] = v9;
  sub_1908AAA48(v3, v4, &qword_1EE1E60A0);
  swift_storeEnumTagMultiPayload();
  sub_1908AF598(&qword_1EE1E61A8, &qword_1EE1E61B0, MEMORY[0x1E0CDBF10]);
  sub_190A39FEC();
  swift_retain();
  sub_190A46F90();
  sub_1908AAA48(v0, *(_QWORD *)(v5 - 104), &qword_1EE1E6180);
  swift_storeEnumTagMultiPayload();
  sub_190A39F68();
  sub_190A3A088();
  sub_190A46F90();
  sub_19093EFFC(v6, *(_QWORD *)(v5 - 144));
  sub_1908AA544(v0, &qword_1EE1E6180);
  return sub_1908AA544(v3, &qword_1EE1E60A0);
}

void sub_190A39E28(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  sub_190A39758(a1, *v2, v2[1], a2);
}

unint64_t sub_190A39E30()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E6088;
  if (!qword_1EE1E6088)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6090);
    v2[0] = sub_1908AF598(&qword_1EE1E61A8, &qword_1EE1E61B0, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1908AF598(&qword_1EE1E61D8, &qword_1EE1E61E0, MEMORY[0x1E0CDC6D0]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6088);
  }
  return result;
}

unint64_t sub_190A39ECC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E6078;
  if (!qword_1EE1E6078)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6080);
    v2[0] = sub_1908AF598(&qword_1EE1E61A8, &qword_1EE1E61B0, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1908AF598(&qword_1EE1E61C8, &qword_1EE1E61D0, MEMORY[0x1E0CDC6A8]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6078);
  }
  return result;
}

unint64_t sub_190A39F68()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E6178;
  if (!qword_1EE1E6178)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6180);
    v2[0] = sub_1908AF598(&qword_1EE1E61A8, &qword_1EE1E61B0, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_190A39FEC();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6178);
  }
  return result;
}

unint64_t sub_190A39FEC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E6098;
  if (!qword_1EE1E6098)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E60A0);
    v2[0] = sub_1908AF598(&qword_1EE1E61A8, &qword_1EE1E61B0, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1908AF598(&qword_1EE1E6150, &qword_1EE1E6158, MEMORY[0x1E0CDB838]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6098);
  }
  return result;
}

uint64_t sub_190A3A088()
{
  return sub_1909B5EEC(&qword_1EE1E6188, &qword_1EE1E6190, (uint64_t (*)(void))sub_190A39E30, (uint64_t (*)(void))sub_190A39ECC);
}

uint64_t sub_190A3A0AC()
{
  return sub_1909B5EEC(&qword_1EE1E6198, &qword_1EE1E61A0, (uint64_t (*)(void))sub_190A39F68, sub_190A3A088);
}

uint64_t sub_190A3A0EC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (!*v1)
    return MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(MEMORY[0x1E0C80A78](a1) + 16);
  type metadata accessor for WidgetRelevanceEntry(255, v6, v2, v3);
  v4 = sub_190A47D04();
  sub_190A3AA6C();
  MEMORY[0x19401429C](MEMORY[0x1E0DEAF38], v4);
  return sub_190A47BB4();
}

uint64_t sub_190A3A1BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  _QWORD v25[2];
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = sub_190A45D78();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBF50);
  MEMORY[0x1E0C80A78](v28);
  v6 = (_QWORD *)((char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6ADF8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v0;
  result = MEMORY[0x1E0DEE9D8];
  if (*v0)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    v13 = *(_QWORD *)(v11 + 16);
    if (v13)
    {
      v14 = v11 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      v27 = *(_QWORD *)(v8 + 72);
      v25[1] = v11;
      swift_bridgeObjectRetain();
      v26 = v4;
      while (1)
      {
        sub_1908AAA48(v14, (uint64_t)v10, &qword_1ECF6ADF8);
        sub_1908AAA48((uint64_t)v10, (uint64_t)v6, &qword_1EE1EBF50);
        if (swift_getEnumCaseMultiPayload() != 1)
          break;
        v15 = v6[1];
        if (!v15)
        {
          v21 = objc_msgSend((id)objc_opt_self(), sel_ungrouped);
LABEL_12:
          v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D10218]), sel_initWithAttribute_intentReference_, v21, 0);

          v24 = sub_190A3AAA8((uint64_t)v10);
          if (v23)
          {
            MEMORY[0x194012E68](v24);
            if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_190A47C98();
            sub_190A47CD4();
            sub_190A47C74();
          }
          goto LABEL_5;
        }
        if (v15 != 1)
        {
          v16 = *v6;
          v17 = objc_allocWithZone(MEMORY[0x1E0D10220]);
          v18 = v2;
          v19 = v1;
          v20 = (void *)sub_190A47AC4();
          sub_19098E2C0(v16, v15);
          v21 = objc_msgSend(v17, sel_initWithNamedGroupIdentifier_, v20);

          v1 = v19;
          v2 = v18;
          v4 = v26;
          goto LABEL_12;
        }
        sub_190A3AAA8((uint64_t)v10);
LABEL_5:
        v14 += v27;
        if (!--v13)
        {
          swift_bridgeObjectRelease();
          return v29;
        }
      }
      (*(void (**)(char *, uint64_t *, uint64_t))(v2 + 32))(v4, v6, v1);
      v22 = (void *)sub_190A45D6C();
      v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D10238]), sel_initWithRelevantContext_, v22);

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      goto LABEL_12;
    }
  }
  return result;
}

uint64_t sub_190A3A4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD v27[2];
  id v28[2];

  v28[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *(_QWORD *)(a1 + 16);
  v6 = type metadata accessor for WidgetRelevanceEntry(255, v5, a3, a4);
  v7 = sub_190A48148();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v27 - v10;
  v12 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v9);
  v14 = (_QWORD *)((char *)v27 - v13);
  v15 = *v4;
  if (!*v4)
    return MEMORY[0x1E0DEE9D8];
  v28[0] = *v4;
  v16 = sub_190A47D04();
  MEMORY[0x19401429C](MEMORY[0x1E0DEAF50], v16);
  sub_190A47E90();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v6) != 1)
  {
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(v14, v11, v6);
    v18 = (void *)objc_opt_self();
    v19 = *v14;
    v28[0] = 0;
    v20 = objc_msgSend(v18, sel__schemaDataFromIntent_error_, v19, v28);
    v21 = v20;
    if (v28[0])
    {
      v22 = v28[0];

      swift_willThrow();
    }
    else if (v20)
    {
      v23 = sub_190A46000();
      v24 = v25;

      goto LABEL_10;
    }
    v23 = 0;
    v24 = 0xF000000000000000;
LABEL_10:
    v27[0] = v27;
    v28[0] = v15;
    MEMORY[0x1E0C80A78](v20);
    v27[-4] = v5;
    v27[-3] = v23;
    v27[-2] = v24;
    sub_190A3AA6C();
    MEMORY[0x19401429C](MEMORY[0x1E0DEAF38], v16);
    v17 = sub_190A47BB4();
    (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v6);
    sub_1908CE500(v23, v24);
    return v17;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return MEMORY[0x1E0DEE9D8];
}

void sub_190A3A73C(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  _QWORD v17[4];
  _QWORD v18[4];

  v4 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v5 = objc_msgSend(v4, sel_bundleIdentifier);

  if (v5)
  {
    sub_190A47ADC();

    sub_190A45D3C();
    sub_190A45CDC();
    v6 = objc_allocWithZone(MEMORY[0x1E0CBD738]);
    v7 = (void *)sub_190A47AC4();
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(v18, v18[3]);
    v8 = sub_190A486C4();
    __swift_project_boxed_opaque_existential_1(v17, v17[3]);
    v9 = objc_msgSend(v6, sel_initWithAppBundleIdentifier_linkAction_linkActionMetadata_, v7, v8, sub_190A486C4());
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D10070]), sel_initWithIntent_, v9);
    v13 = type metadata accessor for WidgetRelevanceEntry(0, a1, v11, v12);
    v14 = sub_19098E104(v13);
    if (v14)
    {
      v15 = v14;
      v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D10218]), sel_initWithAttribute_intentReference_, v14, v10);

    }
    else
    {

      v16 = 0;
    }
    *a2 = v16;
  }
  else
  {
    __break(1u);
  }
}

void sub_190A3A940(id *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;

  v9 = type metadata accessor for WidgetRelevanceEntry(0, a4, a3, a4);
  v10 = sub_19098E104(v9);
  if (v10)
  {
    v11 = v10;
    v12 = *a1;
    if (a3 >> 60 == 15)
    {
      v13 = 0;
    }
    else
    {
      sub_1908CE0B4(a2, a3);
      v13 = (void *)sub_190A45FE8();
      sub_1908CE500(a2, a3);
    }
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D10070]), sel_initWithIntent_schemaData_, v12, v13);

    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D10218]), sel_initWithAttribute_intentReference_, v11, v15);
  }
  else
  {
    v14 = 0;
  }
  *a5 = v14;
}

void sub_190A3AA50(id *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_190A3A940(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_190A3AA6C()
{
  unint64_t result;

  result = qword_1ECF6B860;
  if (!qword_1ECF6B860)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECF6B860);
  }
  return result;
}

uint64_t sub_190A3AAA8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6ADF8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_190A3AAE8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_190A3A73C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t dispatch thunk of TogglableAppIntent.isOn.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TogglableAppIntent.isOn.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of TogglableAppIntent.isOn.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of SetValueAppIntent.newValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SetValueAppIntent.newValue.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of SetValueAppIntent.newValue.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t EnvironmentValues._widgetRenderScheme.getter()
{
  sub_190901C44();
  return sub_190A46C3C();
}

uint64_t EnvironmentValues._widgetRenderScheme.setter()
{
  sub_190901C44();
  sub_190A46C48();
  sub_190942064();
  sub_190A46C48();
  sub_1909420A8();
  return sub_190A46C48();
}

uint64_t sub_190A3AC00()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D5C0 = result;
  return result;
}

uint64_t sub_190A3AC24()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B2C0);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D5A8 = v0;
  unk_1ECF6D5B0 = 0xD000000000000012;
  qword_1ECF6D5B8 = 0x8000000190A65E20;
  return result;
}

uint64_t sub_190A3AC98()
{
  if (qword_1ECF6B1B0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_190A3ACD8()
{
  uint64_t v0;

  if (qword_1ECF6B348 != -1)
    swift_once();
  v0 = qword_1ECF6D5A8;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

void sub_190A3AD4C(uint64_t a1@<X8>)
{
  uint64_t v1;

  v1 = qword_1ECF6D440;
  *(_BYTE *)a1 = byte_1ECF6D438;
  *(_QWORD *)(a1 + 8) = v1;
}

uint64_t sub_190A3AD68()
{
  sub_19098DD78();
  return sub_190A4681C();
}

void (*EnvironmentValues._widgetRenderScheme.modify(_QWORD *a1))(char **a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_190901C44();
  sub_190A46C3C();
  return sub_190A3AE1C;
}

void sub_190A3AE1C(char **a1)
{
  char *v1;
  char v2;
  uint64_t v3;
  BOOL v4;

  v1 = *a1;
  v2 = **a1;
  v3 = *((_QWORD *)*a1 + 1);
  v4 = v3 != 1;
  v1[16] = v2;
  *((_QWORD *)v1 + 3) = v3;
  sub_190A46C48();
  v1[16] = v4;
  sub_190942064();
  sub_190A46C48();
  v1[16] = v2;
  sub_1909420A8();
  sub_190A46C48();
  free(v1);
}

ValueMetadata *_s32WidgetRenderSchemeEnvironmentKeyVMa()
{
  return &_s32WidgetRenderSchemeEnvironmentKeyVN;
}

ValueMetadata *type metadata accessor for WidgetRenderSchemeKey()
{
  return &type metadata for WidgetRenderSchemeKey;
}

unint64_t sub_190A3AEEC()
{
  unint64_t result;

  result = qword_1ECF6B2F0;
  if (!qword_1ECF6B2F0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetRenderScheme, &type metadata for WidgetRenderScheme);
    atomic_store(result, (unint64_t *)&qword_1ECF6B2F0);
  }
  return result;
}

unint64_t sub_190A3AF34()
{
  unint64_t result;

  result = qword_1ECF6B2F8;
  if (!qword_1ECF6B2F8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetRenderScheme, &type metadata for WidgetRenderScheme);
    atomic_store(result, (unint64_t *)&qword_1ECF6B2F8);
  }
  return result;
}

unint64_t sub_190A3AF7C()
{
  unint64_t result;

  result = qword_1ECF6B2E8;
  if (!qword_1ECF6B2E8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetRenderScheme, &type metadata for WidgetRenderScheme);
    atomic_store(result, (unint64_t *)&qword_1ECF6B2E8);
  }
  return result;
}

uint64_t sub_190A3AFC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD v18[10];

  v18[0] = a6;
  v18[1] = a7;
  v13 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_190A466E4();
  MEMORY[0x1E0C80A78](v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v7, a3);
  sub_190A466F0();
  v18[4] = a3;
  v18[5] = a4;
  v18[6] = a5;
  v18[7] = v18[0];
  v18[8] = a1;
  v18[9] = a2;
  MEMORY[0x19401429C](MEMORY[0x1E0CD8A18], v16);
  return sub_190A46804();
}

uint64_t sub_190A3B0F8@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  void *v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_190A47F5C();
    v25 = (void *)sub_190A472FC();
    sub_190A464D4();

  }
  sub_190A46960();
  *(_OWORD *)(a9 + 56) = v30;
  *(_OWORD *)(a9 + 72) = v31;
  *(_OWORD *)(a9 + 88) = v32;
  *(_OWORD *)(a9 + 104) = v33;
  *(_OWORD *)(a9 + 8) = v27;
  *(_OWORD *)(a9 + 24) = v28;
  *(_QWORD *)a9 = a16;
  *(_OWORD *)(a9 + 40) = v29;
  return swift_retain();
}

uint64_t sub_190A3B2A0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  _OWORD *v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_190A47F5C();
    v23 = (void *)sub_190A472FC();
    sub_190A464D4();

  }
  sub_190A46960();
  v24 = v13[9];
  a9[8] = v13[8];
  a9[9] = v24;
  a9[10] = v13[10];
  *(_OWORD *)((char *)a9 + 169) = *(_OWORD *)((char *)v13 + 169);
  v25 = v13[5];
  a9[4] = v13[4];
  a9[5] = v25;
  v26 = v13[7];
  a9[6] = v13[6];
  a9[7] = v26;
  v27 = v13[1];
  *a9 = *v13;
  a9[1] = v27;
  v28 = v13[3];
  a9[2] = v13[2];
  a9[3] = v28;
  a9[16] = v34;
  a9[17] = v35;
  a9[18] = v36;
  a9[12] = v30;
  a9[13] = v31;
  a9[14] = v32;
  a9[15] = v33;
  return sub_190A43594((uint64_t)v13);
}

__n128 sub_190A3B46C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  uint64_t v24;
  _OWORD *v25;
  __n128 result;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __n128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_190A47F5C();
    v23 = (void *)sub_190A472FC();
    sub_190A464D4();

  }
  sub_190A46960();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AC30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a9, v13, v24);
  v25 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AB50) + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  *v25 = v27;
  v25[1] = v28;
  result = v30;
  v25[2] = v29;
  v25[3] = v30;
  return result;
}

__n128 sub_190A3B638@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  uint64_t v24;
  _OWORD *v25;
  __n128 result;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __n128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_190A47F5C();
    v23 = (void *)sub_190A472FC();
    sub_190A464D4();

  }
  sub_190A46960();
  v24 = sub_190A47128();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a9, v13, v24);
  v25 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF520) + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  *v25 = v27;
  v25[1] = v28;
  result = v30;
  v25[2] = v29;
  v25[3] = v30;
  return result;
}

void sub_190A3B800()
{
  qword_1EE1EF3B0 = 0x4030000000000000;
}

void sub_190A3B810()
{
  qword_1EE1EF3B8 = 0x4028000000000000;
}

uint64_t JindoView.init(mode:content:)@<X0>(_BYTE *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, _BYTE *a5@<X8>)
{
  *a5 = *a1;
  type metadata accessor for JindoView(0, a3, a4, a3);
  return a2();
}

uint64_t type metadata accessor for JindoView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JindoView);
}

uint64_t JindoView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31[16];
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  ValueMetadata *v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD v39[2];

  v30 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EF3C0);
  v29 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EF3C8);
  swift_getTupleTypeMetadata2();
  v4 = sub_190A47914();
  sub_1908AF598(&qword_1EE1EF3D0, &qword_1EE1EF3C0, MEMORY[0x1E0CD8A18]);
  v5 = sub_190A467F8();
  v28 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - v6;
  v8 = sub_1908AF598(&qword_1EE1EF3D8, &qword_1EE1EF3C0, MEMORY[0x1E0CD8A20]);
  v9 = MEMORY[0x19401429C](MEMORY[0x1E0CE0680], v4);
  v39[0] = v8;
  v39[1] = v9;
  v10 = MEMORY[0x19401429C](MEMORY[0x1E0CD91E0], v5, v39);
  v26 = v10;
  v11 = sub_190A3BB3C();
  v35 = v5;
  v36 = &type metadata for JindoPillButton;
  v37 = v10;
  v38 = v11;
  v12 = MEMORY[0x19401423C](0, &v35, MEMORY[0x1E0CDE000], 0);
  v27 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v25 - v16;
  v18 = *(_QWORD *)(a1 + 24);
  v19 = *v2;
  v20 = swift_allocObject();
  v21 = v29;
  *(_QWORD *)(v20 + 16) = v29;
  *(_QWORD *)(v20 + 24) = v18;
  *(_BYTE *)(v20 + 32) = v19;
  v32 = v21;
  v33 = v18;
  v34 = v2;
  sub_190A3BB80((uint64_t)sub_190A3C080, (uint64_t)v31, (uint64_t)v7);
  swift_release();
  v22 = v26;
  sub_190A474E8();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
  v35 = v5;
  v36 = &type metadata for JindoPillButton;
  v37 = v22;
  v38 = v11;
  swift_getOpaqueTypeConformance2();
  sub_1909DA920((uint64_t)v15, v12, (uint64_t)v17);
  v23 = *(void (**)(char *, uint64_t))(v27 + 8);
  v23(v15, v12);
  sub_1909D989C((uint64_t)v17, v12, v30);
  return ((uint64_t (*)(char *, uint64_t))v23)(v17, v12);
}

unint64_t sub_190A3BB3C()
{
  unint64_t result;

  result = qword_1EE1EF3E0;
  if (!qword_1EE1EF3E0)
  {
    result = MEMORY[0x19401429C](&unk_190A5F188, &type metadata for JindoPillButton);
    atomic_store(result, (unint64_t *)&qword_1EE1EF3E0);
  }
  return result;
}

uint64_t sub_190A3BB80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EF3C8);
  swift_getTupleTypeMetadata2();
  v6 = sub_190A47914();
  v7 = sub_190A43318();
  v8 = MEMORY[0x19401429C](MEMORY[0x1E0CE0680], v6);
  return sub_190A3AFC8(a1, a2, (uint64_t)&type metadata for JindoLayout, v6, v7, v8, a3);
}

uint64_t sub_190A3BC38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD v50[2];
  uint64_t v51[2];
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;

  v40 = a1;
  v47 = a4;
  v6 = sub_190A47890();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF568);
  MEMORY[0x1E0C80A78](v41);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF570);
  MEMORY[0x1E0C80A78](v42);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF578);
  MEMORY[0x1E0C80A78](v44);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF3C8);
  v15 = MEMORY[0x1E0C80A78](v45);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v40 - v19;
  v46 = *(_QWORD *)(a2 - 8);
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v40 - v24;
  v43 = a3;
  v27 = type metadata accessor for JindoView(0, a2, a3, v26);
  sub_1909DA920(v40 + *(int *)(v27 + 36), a2, (uint64_t)v25);
  v28 = *MEMORY[0x1E0CDB0C0];
  v29 = sub_190A46E7C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v8, v28, v29);
  sub_190A466B4();
  sub_190A430B4((uint64_t)v8, (uint64_t)v10);
  v30 = &v10[*(int *)(v41 + 36)];
  v31 = v53;
  *(_OWORD *)v30 = v52;
  *((_OWORD *)v30 + 1) = v31;
  *((_QWORD *)v30 + 4) = v54;
  sub_190A430F8((uint64_t)v8);
  v32 = sub_190A47650();
  sub_1908AAA48((uint64_t)v10, (uint64_t)v12, &qword_1EE1EF568);
  *(_QWORD *)&v12[*(int *)(v42 + 36)] = v32;
  sub_1908AA544((uint64_t)v10, &qword_1EE1EF568);
  sub_190A478CC();
  sub_190A46738();
  sub_1908AAA48((uint64_t)v12, (uint64_t)v14, &qword_1EE1EF570);
  v33 = &v14[*(int *)(v44 + 36)];
  v34 = v56;
  *(_OWORD *)v33 = v55;
  *((_OWORD *)v33 + 1) = v34;
  *((_OWORD *)v33 + 2) = v57;
  sub_1908AA544((uint64_t)v12, &qword_1EE1EF570);
  sub_1908AAA48((uint64_t)v14, (uint64_t)v17, &qword_1EE1EF578);
  v35 = v45;
  v36 = &v17[*(int *)(v45 + 36)];
  *v36 = 4;
  *((_QWORD *)v36 + 1) = 0;
  v36[16] = 1;
  *((_QWORD *)v36 + 3) = 0;
  v36[32] = 1;
  sub_1908AA544((uint64_t)v14, &qword_1EE1EF578);
  sub_190A43134((uint64_t)v17, (uint64_t)v20);
  v37 = v46;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v23, v25, a2);
  v51[0] = (uint64_t)v23;
  sub_1908AAA48((uint64_t)v20, (uint64_t)v17, &qword_1EE1EF3C8);
  v51[1] = (uint64_t)v17;
  v50[0] = a2;
  v50[1] = v35;
  v48 = v43;
  v49 = sub_190A4317C();
  sub_190A1E694(v51, 2uLL, (uint64_t)v50);
  sub_1908AA544((uint64_t)v20, &qword_1EE1EF3C8);
  v38 = *(void (**)(char *, uint64_t))(v37 + 8);
  v38(v25, a2);
  sub_1908AA544((uint64_t)v17, &qword_1EE1EF3C8);
  return ((uint64_t (*)(char *, uint64_t))v38)(v23, a2);
}

uint64_t sub_190A3C080@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_190A3BC38(v1[4], v1[2], v1[3], a1);
}

uint64_t JindoContent.init(position:content:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)a5 = *(_BYTE *)a1;
  *(_QWORD *)(a5 + 8) = v6;
  *(_BYTE *)(a5 + 16) = v7;
  *(_QWORD *)(a5 + 24) = v8;
  *(_BYTE *)(a5 + 32) = v9;
  type metadata accessor for JindoContent(0, a3, a4, a3);
  return a2();
}

uint64_t type metadata accessor for JindoContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JindoContent);
}

uint64_t JindoContent.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unsigned int v31;
  ValueMetadata *v32;
  unsigned __int8 v33;
  unint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t OpaqueTypeConformance2;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  _QWORD v84[2];
  _QWORD v85[2];
  _QWORD v86[2];
  _QWORD v87[2];
  _QWORD v88[2];
  uint64_t KeyPath;
  ValueMetadata *v90;
  uint64_t v91;
  unint64_t v92;
  unsigned __int8 v93;
  _QWORD v94[2];

  v81 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EF3E8);
  v77 = v4;
  v5 = sub_190A46894();
  v75 = *(_QWORD *)(a1 + 24);
  v94[0] = v75;
  v94[1] = sub_1908AF598(&qword_1EE1EF3F0, &qword_1EE1EF3E8, MEMORY[0x1E0CDBEF0]);
  v6 = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v5, v94);
  KeyPath = v5;
  v90 = &type metadata for JindoPillButton;
  v91 = v6;
  v92 = sub_190A3BB3C();
  v82 = v92;
  v7 = MEMORY[0x1E0CDE000];
  v8 = MEMORY[0x19401423C](0, &KeyPath, MEMORY[0x1E0CDE000], 0);
  v68 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v69 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v66 - v11;
  v13 = sub_190A3C9EC();
  KeyPath = v5;
  v90 = &type metadata for JindoCircleButton;
  v76 = v6;
  v91 = v6;
  v92 = v13;
  v83 = v13;
  v14 = MEMORY[0x19401423C](255, &KeyPath, v7, 0);
  v73 = v8;
  v15 = sub_190A46F9C();
  v72 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v71 = (char *)&v66 - v16;
  v17 = swift_checkMetadataState();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v66 - v23;
  v70 = *(_QWORD *)(v14 - 8);
  v25 = MEMORY[0x1E0C80A78](v22);
  v27 = (char *)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v74 = (char *)&v66 - v28;
  v80 = sub_190A46F9C();
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v30 = (char *)&v66 - v29;
  v31 = *v2;
  v32 = (ValueMetadata *)*((_QWORD *)v2 + 1);
  v33 = v2[16];
  v34 = *((_QWORD *)v2 + 3);
  v35 = v2[32];
  v78 = v30;
  if (v31 >= 2)
  {
    v67 = v12;
    v70 = v14;
    v47 = v76;
    v74 = (char *)v15;
    v48 = v82;
    if (v31 == 3)
    {
      LOBYTE(KeyPath) = 3;
      v90 = v32;
      LOBYTE(v91) = v33;
      v92 = v34;
      v93 = v35;
      sub_190A3CA30();
      sub_190A47500();
      v49 = (uint64_t)v69;
      v46 = v48;
      sub_190A474E8();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v24, v17);
      KeyPath = v17;
      v90 = &type metadata for JindoPillButton;
      v91 = v47;
      v92 = v48;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      v51 = (uint64_t)v67;
      v52 = v73;
      sub_1909DA920(v49, v73, (uint64_t)v67);
      v53 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
      v53(v49, v52);
      sub_1909D989C(v51, v52, v49);
      KeyPath = v17;
      v90 = &type metadata for JindoCircleButton;
      v91 = v47;
      v92 = v83;
      v54 = swift_getOpaqueTypeConformance2();
      v55 = (uint64_t)v71;
      sub_1909D9978(v49, v70, v52);
      v53(v49, v52);
      v85[0] = v54;
      v85[1] = OpaqueTypeConformance2;
      v15 = (uint64_t)v74;
      MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v74, v85);
      v44 = (uint64_t)v78;
      sub_1909D98B4(v55, v15);
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v55, v15);
      v53((uint64_t)v67, v52);
      v45 = v83;
    }
    else
    {
      LOBYTE(KeyPath) = v31;
      v90 = v32;
      LOBYTE(v91) = v33;
      v92 = v34;
      v93 = v35;
      sub_190A3CA30();
      sub_190A47500();
      sub_1909DA920((uint64_t)v21, v17, (uint64_t)v24);
      v56 = *(void (**)(char *, uint64_t))(v18 + 8);
      v56(v21, v17);
      sub_1909D989C((uint64_t)v24, v17, (uint64_t)v21);
      KeyPath = v17;
      v90 = &type metadata for JindoCircleButton;
      v45 = v83;
      v91 = v47;
      v92 = v83;
      v57 = swift_getOpaqueTypeConformance2();
      KeyPath = v17;
      v90 = &type metadata for JindoPillButton;
      v91 = v47;
      v92 = v48;
      v46 = v48;
      v58 = swift_getOpaqueTypeConformance2();
      v88[0] = v57;
      v88[1] = v58;
      v15 = (uint64_t)v74;
      MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v74, v88);
      v59 = (uint64_t)v78;
      sub_1909D9978((uint64_t)v21, v15, v17);
      v56(v21, v17);
      v44 = v59;
      v56(v24, v17);
    }
  }
  else
  {
    LOBYTE(KeyPath) = v31;
    v90 = v32;
    LOBYTE(v91) = v33;
    v92 = v34;
    v93 = v35;
    sub_190A3CA30();
    sub_190A47500();
    KeyPath = swift_getKeyPath();
    LOBYTE(v90) = 0;
    v36 = v18;
    v37 = v76;
    v38 = v83;
    sub_190A474E8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v17);
    KeyPath = v17;
    v90 = &type metadata for JindoCircleButton;
    v91 = v37;
    v92 = v38;
    v39 = swift_getOpaqueTypeConformance2();
    v40 = (uint64_t)v74;
    sub_1909DA920((uint64_t)v27, v14, (uint64_t)v74);
    v41 = *(void (**)(char *, uint64_t))(v70 + 8);
    v41(v27, v14);
    sub_1909D989C(v40, v14, (uint64_t)v27);
    KeyPath = v17;
    v90 = &type metadata for JindoPillButton;
    v91 = v37;
    v92 = v82;
    v42 = swift_getOpaqueTypeConformance2();
    v43 = (uint64_t)v71;
    sub_1909D98B4((uint64_t)v27, v14);
    v41(v27, v14);
    v84[0] = v39;
    v84[1] = v42;
    MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v15, v84);
    v44 = (uint64_t)v78;
    sub_1909D98B4(v43, v15);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v43, v15);
    v41(v74, v14);
    v46 = v82;
    v45 = v83;
    v47 = v37;
  }
  KeyPath = v17;
  v90 = &type metadata for JindoCircleButton;
  v91 = v47;
  v92 = v45;
  v60 = swift_getOpaqueTypeConformance2();
  KeyPath = v17;
  v90 = &type metadata for JindoPillButton;
  v91 = v47;
  v92 = v46;
  v61 = swift_getOpaqueTypeConformance2();
  v87[0] = v60;
  v87[1] = v61;
  v62 = MEMORY[0x1E0CDB8A0];
  v86[0] = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v15, v87);
  v86[1] = v47;
  v63 = v62;
  v64 = v80;
  MEMORY[0x19401429C](v63, v80, v86);
  sub_1909D989C(v44, v64, v81);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 8))(v44, v64);
}

unint64_t sub_190A3C9EC()
{
  unint64_t result;

  result = qword_1EE1EF3F8;
  if (!qword_1EE1EF3F8)
  {
    result = MEMORY[0x19401429C](&unk_190A5F150, &type metadata for JindoCircleButton);
    atomic_store(result, (unint64_t *)&qword_1EE1EF3F8);
  }
  return result;
}

unint64_t sub_190A3CA30()
{
  unint64_t result;

  result = qword_1EE1EF400;
  if (!qword_1EE1EF400)
  {
    result = MEMORY[0x19401429C](&unk_190A5F120, &type metadata for JindoPlacement);
    atomic_store(result, (unint64_t *)&qword_1EE1EF400);
  }
  return result;
}

unint64_t sub_190A3CA78@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_190A42A00(*a1);
  *a2 = result;
  return result;
}

void static JindoPosition.leading.getter(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 1;
}

uint64_t static JindoPosition.leading(inset:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(_BYTE *)a3 = 0;
  *(_QWORD *)(a3 + 8) = result;
  *(_BYTE *)(a3 + 16) = a2 & 1;
  *(_QWORD *)(a3 + 24) = 0;
  *(_BYTE *)(a3 + 32) = 1;
  return result;
}

void static JindoPosition.trailing.getter(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 1;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 1;
}

uint64_t static JindoPosition.trailing(inset:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(_BYTE *)a3 = 1;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  *(_QWORD *)(a3 + 24) = result;
  *(_BYTE *)(a3 + 32) = a2 & 1;
  return result;
}

void static JindoPosition.center.getter(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 1;
}

void static JindoPosition.bottom.getter(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 3;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 1;
}

uint64_t static JindoPosition.bottom(leadingInset:trailingInset:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(_BYTE *)a5 = 3;
  *(_QWORD *)(a5 + 8) = result;
  *(_BYTE *)(a5 + 16) = a2 & 1;
  *(_QWORD *)(a5 + 24) = a3;
  *(_BYTE *)(a5 + 32) = a4 & 1;
  return result;
}

BOOL sub_190A3CB84(uint64_t a1, double *a2)
{
  double v2;
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  double v7;
  char v8;
  uint64_t v9;
  char v10;
  double v12[2];
  char v13;
  uint64_t v14;
  char v15;
  double v16[2];
  char v17;
  uint64_t v18;
  char v19;

  v2 = *(double *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 32);
  v6 = *(_BYTE *)a2;
  v7 = a2[1];
  v8 = *((_BYTE *)a2 + 16);
  v9 = *((_QWORD *)a2 + 3);
  v10 = *((_BYTE *)a2 + 32);
  LOBYTE(v16[0]) = *(_BYTE *)a1;
  v16[1] = v2;
  v17 = v3;
  v18 = v4;
  v19 = v5;
  LOBYTE(v12[0]) = v6;
  v12[1] = v7;
  v13 = v8;
  v14 = v9;
  v15 = v10;
  return _s9WidgetKit13JindoPositionV2eeoiySbAC_ACtFZ_0(v16, v12);
}

void sub_190A3CBFC(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 3;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 1;
}

WidgetKit::JindoHorizontalMode_optional __swiftcall JindoHorizontalMode.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (WidgetKit::JindoHorizontalMode_optional)rawValue;
}

uint64_t JindoHorizontalMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

WidgetKit::JindoHorizontalMode_optional sub_190A3CC38(Swift::Int *a1)
{
  return JindoHorizontalMode.init(rawValue:)(*a1);
}

uint64_t sub_190A3CC40(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[16];

  v4 = v1;
  v6 = sub_190A46780();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(_BYTE *)(v4 + 8);
  if ((v11 & 1) == 0)
    v8.n128_f64[0] = (*(double *)v4 - *(double *)(v4 + 40)) * 0.5 - *(double *)(v4 + 72);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v12 = *(_QWORD *)(v4 + 32);
    if (*(_QWORD *)(v12 + 16) > a1)
    {
      (*(void (**)(_QWORD *, unint64_t, uint64_t, __n128))(v7 + 16))(v10, v12+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * a1, v6, v8);
      v13 = *(_BYTE *)(v4 + 24);
      v21[8] = v11;
      v21[0] = v13;
      sub_190A4675C();
      v2 = v14;
      v3 = v15;
      (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
      v10 = *(_QWORD **)(v4 + 80);
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) != 0)
        goto LABEL_6;
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_11:
  result = (uint64_t)sub_190A41364(v10);
  v10 = (_QWORD *)result;
LABEL_6:
  if (v10[2] <= a1)
  {
    __break(1u);
  }
  else
  {
    v17 = &v10[2 * a1];
    v17[4] = v2;
    v17[5] = v3;
    *(_QWORD *)(v4 + 80) = v10;
    v18 = *(_QWORD *)(v4 + 96);
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (!v19)
    {
      *(_QWORD *)(v4 + 96) = v20;
      return result;
    }
  }
  __break(1u);
  return result;
}

double sub_190A3CDB8()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  double *v11;
  double v12;
  double v13;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 80);
  v16 = v1;
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1908B8CE0(0, v2, 0);
    v3 = v15;
    v4 = (uint64_t *)(v1 + 32);
    v5 = *(_QWORD *)(v15 + 16);
    do
    {
      v6 = *v4;
      v7 = *(_QWORD *)(v15 + 24);
      if (v5 >= v7 >> 1)
        sub_1908B8CE0(v7 > 1, v5 + 1, 1);
      *(_QWORD *)(v15 + 16) = v5 + 1;
      *(_QWORD *)(v15 + 8 * v5 + 32) = v6;
      v4 += 2;
      ++v5;
      --v2;
    }
    while (v2);
    sub_190A4308C((uint64_t)&v16);
  }
  v8 = *(_QWORD *)(v3 + 16);
  if (v8)
  {
    v9 = *(double *)(v3 + 32);
    v10 = v8 - 1;
    if (v10)
    {
      v11 = (double *)(v3 + 40);
      do
      {
        v12 = *v11++;
        v13 = v12;
        if (v9 < v12)
          v9 = v13;
        --v10;
      }
      while (v10);
    }
  }
  else
  {
    v9 = 0.0;
  }
  swift_bridgeObjectRelease();
  return v9;
}

double sub_190A3CED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  _BYTE v24[32];
  uint64_t v25;
  uint64_t v26;

  v1 = sub_190A46780();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 32);
  v26 = v5;
  v6 = *(_QWORD *)(v5 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1908B8CE0(0, v6, 0);
    v8 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v9 = *(_QWORD *)(v2 + 72);
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    v23 = v9;
    v10 = v2;
    do
    {
      v22(v4, v8, v1);
      sub_190A3CA30();
      sub_190A4678C();
      v11 = (uint64_t *)v24;
      if (v24[8] == 1)
      {
        v11 = &qword_1EE1EF3B0;
        if (qword_1EE1EC590 != -1)
        {
          swift_once();
          v11 = &qword_1EE1EF3B0;
        }
      }
      v12 = *v11;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      v7 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1908B8CE0(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v25;
      }
      v14 = *(_QWORD *)(v7 + 16);
      v13 = *(_QWORD *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1908B8CE0(v13 > 1, v14 + 1, 1);
        v7 = v25;
      }
      *(_QWORD *)(v7 + 16) = v14 + 1;
      *(_QWORD *)(v7 + 8 * v14 + 32) = v12;
      v8 += v23;
      --v6;
      v2 = v10;
    }
    while (v6);
    sub_190A4308C((uint64_t)&v26);
  }
  v15 = *(_QWORD *)(v7 + 16);
  if (v15)
  {
    v16 = *(double *)(v7 + 32);
    v17 = v15 - 1;
    if (v17)
    {
      for (i = 0; i != v17; ++i)
      {
        v19 = v7 + 8 * i;
        if (v16 < *(double *)(v19 + 40))
          v16 = *(double *)(v19 + 40);
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1EE1EC590 != -1)
      swift_once();
    return *(double *)&qword_1EE1EF3B0;
  }
  return v16;
}

double sub_190A3D14C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;

  v1 = sub_190A46780();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 32);
  v26 = v5;
  v6 = *(_QWORD *)(v5 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1908B8CE0(0, v6, 0);
    v8 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v9 = *(_QWORD *)(v2 + 72);
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    v23 = v9;
    v10 = v2;
    do
    {
      v22(v4, v8, v1);
      sub_190A3CA30();
      sub_190A4678C();
      v11 = (uint64_t *)v24;
      if (v24[8] == 1)
      {
        v11 = &qword_1EE1EF3B0;
        if (qword_1EE1EC590 != -1)
        {
          swift_once();
          v11 = &qword_1EE1EF3B0;
        }
      }
      v12 = *v11;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      v7 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1908B8CE0(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v25;
      }
      v14 = *(_QWORD *)(v7 + 16);
      v13 = *(_QWORD *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1908B8CE0(v13 > 1, v14 + 1, 1);
        v7 = v25;
      }
      *(_QWORD *)(v7 + 16) = v14 + 1;
      *(_QWORD *)(v7 + 8 * v14 + 32) = v12;
      v8 += v23;
      --v6;
      v2 = v10;
    }
    while (v6);
    sub_190A4308C((uint64_t)&v26);
  }
  v15 = *(_QWORD *)(v7 + 16);
  if (v15)
  {
    v16 = *(double *)(v7 + 32);
    v17 = v15 - 1;
    if (v17)
    {
      for (i = 0; i != v17; ++i)
      {
        v19 = v7 + 8 * i;
        if (v16 < *(double *)(v19 + 40))
          v16 = *(double *)(v19 + 40);
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1EE1EC590 != -1)
      swift_once();
    return *(double *)&qword_1EE1EF3B0;
  }
  return v16;
}

double sub_190A3D3C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  double *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  double v20;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = 0.0;
  v4 = 0.0;
  if (v2)
  {
    if (v2 == 1)
    {
      v5 = 0;
LABEL_7:
      v10 = v2 - v5;
      v11 = (double *)(v1 + 16 * v5 + 40);
      do
      {
        v12 = *v11;
        v11 += 2;
        v4 = v4 + v12;
        --v10;
      }
      while (v10);
      goto LABEL_9;
    }
    v5 = v2 & 0x7FFFFFFFFFFFFFFELL;
    v6 = (double *)(v1 + 56);
    v7 = v2 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v8 = *(v6 - 2);
      v9 = *v6;
      v6 += 4;
      v4 = v4 + v8 + v9;
      v7 -= 2;
    }
    while (v7);
    if (v2 != v5)
      goto LABEL_7;
  }
LABEL_9:
  v13 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
    return v4 + v3;
  if (v14 == 1)
  {
    v15 = 0;
    v3 = 0.0;
LABEL_15:
    v18 = v14 - v15;
    v19 = (double *)(v13 + 8 * v15 + 32);
    do
    {
      v20 = *v19++;
      v3 = v3 + v20;
      --v18;
    }
    while (v18);
    return v4 + v3;
  }
  v15 = v14 & 0x7FFFFFFFFFFFFFFELL;
  v16 = (double *)(v13 + 40);
  v3 = 0.0;
  v17 = v14 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    v3 = v3 + *(v16 - 1) + *v16;
    v16 += 2;
    v17 -= 2;
  }
  while (v17);
  if (v14 != v15)
    goto LABEL_15;
  return v4 + v3;
}

void sub_190A3D4A4(unint64_t a1, double a2)
{
  _QWORD *v2;
  unint64_t v3;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  unint64_t v11;
  uint64_t v12;
  float64x2_t v13;
  const double *v14;
  float64x2_t *v15;
  unint64_t v16;
  const double *v17;
  unsigned __int128 v18;
  unsigned __int128 v19;
  float64x2_t v20;
  float64x2_t v21;
  double *v22;
  unint64_t v23;
  double *v24;
  double v25;
  double v26;
  double v27;

  v3 = *(_QWORD *)(v2[4] + 16);
  if (v3 < 2)
  {
    if (qword_1EE1EC598 == -1)
      return;
LABEL_23:
    swift_once();
    return;
  }
  v5 = a2 - sub_190A3D3C4();
  if (v5 < 0.0)
    v6 = 0.0;
  else
    v6 = v5;
  if (qword_1EE1EC598 == -1)
  {
    if ((a1 & 0x8000000000000000) == 0)
      goto LABEL_7;
    goto LABEL_22;
  }
  swift_once();
  if ((a1 & 0x8000000000000000) != 0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_7:
  v7 = *(double *)&qword_1EE1EF3B8;
  if (!a1)
    return;
  v8 = v2[10];
  if (a1 - 1 >= *(_QWORD *)(v8 + 16))
  {
    __break(1u);
    goto LABEL_25;
  }
  v9 = v2[11];
  if (a1 - 1 >= *(_QWORD *)(v9 + 16))
  {
LABEL_25:
    __break(1u);
    return;
  }
  v10 = v6 / (double)(uint64_t)(v3 - 1);
  if (a1 >= 5)
  {
    v12 = a1 & 3;
    if ((a1 & 3) == 0)
      v12 = 4;
    v11 = a1 - v12;
    v13 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v10, 0);
    v14 = (const double *)(v8 + 72);
    v15 = (float64x2_t *)(v9 + 48);
    v16 = v11;
    do
    {
      v17 = v14 - 4;
      v18 = (unsigned __int128)vld2q_f64(v17);
      v19 = (unsigned __int128)vld2q_f64(v14);
      v20 = vaddq_f64(v13, vaddq_f64((float64x2_t)v18, v15[-1]));
      v21 = vaddq_f64(v13, vaddq_f64((float64x2_t)v19, *v15));
      v7 = v7 + v20.f64[0] + v20.f64[1] + v21.f64[0] + v21.f64[1];
      v14 += 8;
      v15 += 2;
      v16 -= 4;
    }
    while (v16);
  }
  else
  {
    v11 = 0;
  }
  v22 = (double *)(v8 + 16 * v11 + 40);
  v23 = a1 - v11;
  v24 = (double *)(v9 + 8 * v11 + 32);
  do
  {
    v25 = *v22;
    v22 += 2;
    v26 = v25;
    v27 = *v24++;
    v7 = v7 + v10 + v26 + v27;
    --v23;
  }
  while (v23);
}

uint64_t sub_190A3D648(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  double v16;
  double v17;
  double *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  unint64_t v28;
  uint64_t v29;
  float64x2_t v30;
  const double *v31;
  float64x2_t *v32;
  const double *v33;
  unsigned __int128 v34;
  unsigned __int128 v35;
  float64x2_t v36;
  float64x2_t v37;
  double *v38;
  double v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  _BYTE v51[16];

  v2 = v1;
  v4 = sub_190A46780();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v9 = &v51[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(_QWORD *)(*(_QWORD *)(v2 + 32) + 16);
  if (v10 >= 2)
  {
    v11 = 1;
    while (v11 != v10)
    {
      v12 = *(_QWORD *)(v2 + 32);
      v13 = *(_QWORD *)(v12 + 16);
      if (v13 < 2)
      {
        if (qword_1EE1EC598 != -1)
          result = swift_once();
        v7.n128_u64[0] = qword_1EE1EF3B8;
      }
      else
      {
        v14 = *(_QWORD *)(v2 + 80);
        v15 = *(_QWORD *)(v14 + 16);
        v16 = 0.0;
        v17 = 0.0;
        if (v15)
        {
          v18 = (double *)(v14 + 40);
          v19 = *(_QWORD *)(v14 + 16);
          do
          {
            v20 = *v18;
            v18 += 2;
            v17 = v17 + v20;
            --v19;
          }
          while (v19);
        }
        v21 = *(_QWORD *)(v2 + 88);
        v22 = *(_QWORD *)(v21 + 16);
        if (v22)
        {
          v23 = (double *)(v21 + 32);
          v16 = 0.0;
          do
          {
            v24 = *v23++;
            v16 = v16 + v24;
            --v22;
          }
          while (v22);
        }
        v25 = a1 - (v17 + v16);
        if (v25 < 0.0)
          v26 = 0.0;
        else
          v26 = v25;
        if (qword_1EE1EC598 == -1)
        {
          if (v11 > v15)
            goto LABEL_46;
        }
        else
        {
          result = swift_once();
          if (v11 > *(_QWORD *)(v14 + 16))
            goto LABEL_46;
        }
        if (v11 > *(_QWORD *)(v21 + 16))
          goto LABEL_45;
        v27 = v26 / (double)(uint64_t)(v13 - 1);
        v7.n128_u64[0] = qword_1EE1EF3B8;
        if (v11 > 4)
        {
          v29 = 4;
          if ((v11 & 3) != 0)
            v29 = v11 & 3;
          v28 = v11 - v29;
          v30 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v27, 0);
          v31 = (const double *)(v14 + 72);
          v32 = (float64x2_t *)(v21 + 48);
          do
          {
            v33 = v31 - 4;
            v34 = (unsigned __int128)vld2q_f64(v33);
            v35 = (unsigned __int128)vld2q_f64(v31);
            v36 = vaddq_f64(v30, vaddq_f64((float64x2_t)v34, v32[-1]));
            v37 = vaddq_f64(v30, vaddq_f64((float64x2_t)v35, *v32));
            v7.n128_f64[0] = v7.n128_f64[0] + v36.f64[0] + v36.f64[1] + v37.f64[0] + v37.f64[1];
            v31 += 8;
            v32 += 2;
            v29 += 4;
          }
          while (v11 != v29);
        }
        else
        {
          v28 = 0;
        }
        v38 = (double *)(v14 + 16 * v28 + 40);
        do
        {
          v39 = *v38;
          v38 += 2;
          v7.n128_f64[0] = v7.n128_f64[0] + v27 + v39 + *(double *)(v21 + 32 + 8 * v28++);
        }
        while (v11 != v28);
      }
      if (*(double *)(v2 + 48) < v7.n128_f64[0])
        return result;
      v40 = *(_BYTE *)(v2 + 8);
      if ((v40 & 1) == 0)
        v7.n128_f64[0] = (*(double *)v2 - *(double *)(v2 + 40)) * 0.5 - *(double *)(v2 + 72);
      if (v11 >= *(_QWORD *)(v12 + 16))
        goto LABEL_42;
      (*(void (**)(_BYTE *, unint64_t, uint64_t, __n128))(v5 + 16))(v9, v12+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v11, v4, v7);
      v41 = *(_BYTE *)(v2 + 24);
      v51[8] = v40;
      v51[0] = v41;
      sub_190A4675C();
      v43 = v42;
      v45 = v44;
      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v9, v4);
      v46 = *(_QWORD **)(v2 + 80);
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_190A41364(v46);
        v46 = (_QWORD *)result;
      }
      if (v11 >= v46[2])
        goto LABEL_43;
      v47 = &v46[2 * v11];
      v47[4] = v43;
      v47[5] = v45;
      *(_QWORD *)(v2 + 80) = v46;
      v48 = *(_QWORD *)(v2 + 96);
      v49 = __OFADD__(v48, 1);
      v50 = v48 + 1;
      if (v49)
        goto LABEL_44;
      ++v11;
      *(_QWORD *)(v2 + 96) = v50;
      if (v11 == v10)
        return result;
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
  }
  return result;
}

double sub_190A3D9BC(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5)
{
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(_OWORD *, _QWORD);
  char *v74;
  void (*v75)(void);
  char *v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(_OWORD *, _QWORD);
  char *v92;
  char *v93;
  void (*v94)(char *, char *, uint64_t);
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(_OWORD *, _QWORD);
  char *v103;
  char *v104;
  void (*v105)(char *, char *, uint64_t);
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(_OWORD *, _QWORD);
  char *v114;
  char *v115;
  void (*v116)(char *, char *, uint64_t);
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)(uint64_t, uint64_t, uint64_t);
  int v123;
  uint64_t v124;
  char v125;
  double v126;
  uint64_t v127;
  char v128;
  double v129;
  double v130;
  uint64_t v131;
  void (*v132)(_OWORD *, _QWORD);
  char *v133;
  uint64_t v134;
  void (*v135)(char *, uint64_t, uint64_t);
  char *v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  void (*v141)(_QWORD, _QWORD, _QWORD);
  double v142;
  char v143;
  int v144;
  double v145;
  double v146;
  double v147;
  double v148;
  double v149;
  uint64_t v150;
  double v151;
  double v152;
  uint64_t v153;
  uint64_t v154;
  int v155;
  double v156;
  double v157;
  char *v158;
  double v159;
  double v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  double v169;
  double v170;
  uint64_t v171;
  double *v172;
  double v173;
  double v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  double *v184;
  double v185;
  double v186;
  double v187;
  double v188;
  double v189;
  double v190;
  double v191;
  double v192;
  char *v194;
  int v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  double v199;
  int v200;
  char *v201;
  int v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  char *v211;
  char *v212;
  char *v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  char *v221;
  uint64_t v222;
  char *v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  double v231;
  double v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  int64_t v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  int64_t v246;
  _OWORD v247[6];
  int64_t v248;
  _OWORD v249[6];
  int64_t v250;
  _OWORD v251[5];
  __int128 v252;
  int64_t v253;
  _OWORD v254[5];
  __int128 v255;
  int64_t v256;

  v6 = v5;
  v202 = a4;
  v203 = a3;
  v200 = a2;
  v199 = *(double *)&a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF548);
  v9 = MEMORY[0x1E0C80A78](v8);
  v198 = (uint64_t)&v194 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v197 = (uint64_t)&v194 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v196 = (uint64_t)&v194 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v215 = (char *)&v194 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v201 = (char *)&v194 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v214 = (char *)&v194 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v205 = (char *)&v194 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v213 = (char *)&v194 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v204 = (char *)&v194 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v228 = (uint64_t)&v194 - v28;
  MEMORY[0x1E0C80A78](v27);
  v223 = (char *)&v194 - v29;
  v30 = sub_190A46780();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = MEMORY[0x1E0C80A78](v30);
  v211 = (char *)&v194 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x1E0C80A78](v32);
  v210 = (char *)&v194 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v209 = (char *)&v194 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v219 = (char *)&v194 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v221 = (char *)&v194 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v212 = (char *)&v194 - v43;
  MEMORY[0x1E0C80A78](v42);
  v220 = (char *)&v194 - v44;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF550);
  v46 = MEMORY[0x1E0C80A78](v45);
  v218 = (uint64_t)&v194 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = MEMORY[0x1E0C80A78](v46);
  v217 = (uint64_t)&v194 - v49;
  v50 = MEMORY[0x1E0C80A78](v48);
  v216 = (uint64_t)&v194 - v51;
  v52 = MEMORY[0x1E0C80A78](v50);
  v224 = (char *)&v194 - v53;
  MEMORY[0x1E0C80A78](v52);
  v55 = (char *)&v194 - v54;
  v56 = sub_190A4687C();
  v57 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9370];
  v58 = MEMORY[0x1E0C80A78](v56);
  v194 = (char *)&v194 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = MEMORY[0x1E0C80A78](v58);
  v229 = (char *)&v194 - v61;
  MEMORY[0x1E0C80A78](v60);
  v195 = *v6;
  v63 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
  v208 = a5;
  v230 = v62;
  v231 = *(double *)&v63;
  v63((char *)&v194 - v64, a5, v56);
  *(_QWORD *)&v251[0] = MEMORY[0x1E0DEE9D8];
  v206 = sub_1908AA2F4(&qword_1EE1EF558, v57, MEMORY[0x1E0CD9388]);
  sub_190A47B9C();
  v207 = v45;
  v65 = &v55[*(int *)(v45 + 36)];
  v66 = sub_1908AA2F4(&qword_1EE1EF560, v57, MEMORY[0x1E0CD9390]);
  v67 = *(_QWORD *)v65;
  v225 = v55;
  sub_190A47E60();
  v222 = v31;
  v226 = v66;
  v227 = v30;
  if (v67 == *(_QWORD *)&v254[0])
  {
    v232 = *(double *)(v31 + 56);
    v68 = v228;
    v69 = (uint64_t)v225;
LABEL_3:
    v70 = (uint64_t)v223;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))&v232)(v223, 1, 1, v30);
    v71 = v69;
  }
  else
  {
    v68 = v228;
    v69 = (uint64_t)v225;
    while (1)
    {
      v73 = (void (*)(_OWORD *, _QWORD))sub_190A47EC0();
      v70 = (uint64_t)v223;
      (*(void (**)(char *))(v31 + 16))(v223);
      v73(v254, 0);
      v74 = v229;
      (*(void (**)(char *, uint64_t, uint64_t))&v231)(v229, v69, v56);
      sub_190A47E6C();
      (*(void (**)(char *, uint64_t))(v230 + 8))(v74, v56);
      v232 = *(double *)(v31 + 56);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))&v232)(v70, 0, 1, v30);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v70, 1, v30) == 1)
        break;
      v75 = *(void (**)(void))(v31 + 32);
      v76 = v220;
      v75();
      sub_190A3CA30();
      sub_190A4678C();
      if (LOBYTE(v254[0]))
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v76, v30);
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v75)(v212, v76, v30);
        v77 = *(_QWORD *)&v251[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1908B8E38(0, *(_QWORD *)(v77 + 16) + 1, 1);
          v77 = *(_QWORD *)&v251[0];
        }
        v79 = *(_QWORD *)(v77 + 16);
        v78 = *(_QWORD *)(v77 + 24);
        if (v79 >= v78 >> 1)
        {
          sub_1908B8E38(v78 > 1, v79 + 1, 1);
          v77 = *(_QWORD *)&v251[0];
        }
        *(_QWORD *)(v77 + 16) = v79 + 1;
        v31 = v222;
        ((void (*)(unint64_t, char *, uint64_t))v75)(v77+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(_QWORD *)(v222 + 72) * v79, v212, v30);
        *(_QWORD *)&v251[0] = v77;
      }
      v72 = *(_QWORD *)v65;
      v69 = (uint64_t)v225;
      sub_190A47E60();
      v68 = v228;
      if (v72 == *(_QWORD *)&v254[0])
        goto LABEL_3;
    }
    v71 = (uint64_t)v225;
  }
  sub_1908AA544(v71, &qword_1EE1EF550);
  sub_1908AA544(v70, &qword_1EE1EF548);
  v225 = *(char **)&v251[0];
  (*(void (**)(char *, uint64_t, uint64_t))&v231)(v194, v208, v56);
  *(_QWORD *)&v251[0] = MEMORY[0x1E0DEE9D8];
  v80 = (uint64_t)v224;
  sub_190A47B9C();
  v81 = (uint64_t *)(v80 + *(int *)(v207 + 36));
  v82 = *v81;
  sub_190A47E60();
  if (v82 == *(_QWORD *)&v254[0])
  {
LABEL_16:
    v83 = v227;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))&v232)(v68, 1, 1, v227);
  }
  else
  {
    v83 = v227;
    while (1)
    {
      v132 = (void (*)(_OWORD *, _QWORD))sub_190A47EC0();
      (*(void (**)(uint64_t))(v31 + 16))(v68);
      v132(v254, 0);
      v133 = v229;
      (*(void (**)(char *, uint64_t, uint64_t))&v231)(v229, v80, v56);
      sub_190A47E6C();
      (*(void (**)(char *, uint64_t))(v230 + 8))(v133, v56);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))&v232)(v68, 0, 1, v83);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v68, 1, v83) == 1)
        break;
      v134 = v31;
      v135 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 32);
      v136 = v221;
      v135(v221, v68, v83);
      sub_190A3CA30();
      sub_190A4678C();
      if (LOBYTE(v254[0]) == 1)
      {
        v135(v219, (uint64_t)v136, v83);
        v137 = *(_QWORD *)&v251[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1908B8E38(0, *(_QWORD *)(v137 + 16) + 1, 1);
          v137 = *(_QWORD *)&v251[0];
        }
        v139 = *(_QWORD *)(v137 + 16);
        v138 = *(_QWORD *)(v137 + 24);
        if (v139 >= v138 >> 1)
        {
          sub_1908B8E38(v138 > 1, v139 + 1, 1);
          v137 = *(_QWORD *)&v251[0];
        }
        *(_QWORD *)(v137 + 16) = v139 + 1;
        v140 = v222;
        v135((char *)(v137+ ((*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80))+ *(_QWORD *)(v222 + 72) * v139), (uint64_t)v219, v227);
        v31 = v140;
        *(_QWORD *)&v251[0] = v137;
        v68 = v228;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v134 + 8))(v136, v83);
        v31 = v134;
      }
      v131 = *v81;
      v80 = (uint64_t)v224;
      sub_190A47E60();
      if (v131 == *(_QWORD *)&v254[0])
        goto LABEL_16;
    }
  }
  sub_1908AA544(v80, &qword_1EE1EF550);
  sub_1908AA544(v68, &qword_1EE1EF548);
  v228 = *(_QWORD *)&v251[0];
  v84 = v229;
  (*(void (**)(char *, uint64_t, uint64_t))&v231)(v229, v208, v56);
  v85 = v216;
  sub_190A47B9C();
  v86 = (uint64_t *)(v85 + *(int *)(v207 + 36));
  v87 = *v86;
  sub_190A47E60();
  v88 = v87 == *(_QWORD *)&v254[0];
  v89 = v85;
  v90 = v83;
  if (v88)
  {
LABEL_21:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))&v232)(v213, 1, 1, v83);
  }
  else
  {
    while (1)
    {
      v91 = (void (*)(_OWORD *, _QWORD))sub_190A47EC0();
      v92 = v213;
      (*(void (**)(char *))(v31 + 16))(v213);
      v91(v254, 0);
      (*(void (**)(char *, uint64_t, uint64_t))&v231)(v84, v89, v56);
      sub_190A47E6C();
      v93 = v92;
      (*(void (**)(char *, uint64_t))(v230 + 8))(v84, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))&v232)(v92, 0, 1, v83);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v92, 1, v83) == 1)
        break;
      v94 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
      v95 = v209;
      v94(v209, v93, v83);
      sub_190A3CA30();
      sub_190A4678C();
      if (LOBYTE(v254[0]) == 2)
      {
        sub_1908AA544(v216, &qword_1EE1EF550);
        v94(v204, v95, v83);
        v97 = 0;
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v31 + 8))(v95, v83);
      v96 = *v86;
      v89 = v216;
      sub_190A47E60();
      if (v96 == *(_QWORD *)&v254[0])
        goto LABEL_21;
    }
  }
  sub_1908AA544(v89, &qword_1EE1EF550);
  v97 = 1;
LABEL_23:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))&v232)(v204, v97, 1, v83);
  (*(void (**)(char *, uint64_t, uint64_t))&v231)(v84, v208, v56);
  v98 = v217;
  sub_190A47B9C();
  v99 = (uint64_t *)(v98 + *(int *)(v207 + 36));
  v100 = *v99;
  sub_190A47E60();
  v88 = v100 == *(_QWORD *)&v254[0];
  v101 = v98;
  if (v88)
  {
LABEL_27:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))&v232)(v214, 1, 1, v83);
  }
  else
  {
    while (1)
    {
      v102 = (void (*)(_OWORD *, _QWORD))sub_190A47EC0();
      v103 = v214;
      (*(void (**)(char *))(v31 + 16))(v214);
      v102(v254, 0);
      (*(void (**)(char *, uint64_t, uint64_t))&v231)(v84, v101, v56);
      sub_190A47E6C();
      v104 = v103;
      (*(void (**)(char *, uint64_t))(v230 + 8))(v84, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))&v232)(v103, 0, 1, v83);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v103, 1, v83) == 1)
        break;
      v105 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
      v106 = v210;
      v105(v210, v104, v83);
      sub_190A3CA30();
      sub_190A4678C();
      if (LOBYTE(v254[0]) == 3)
      {
        sub_1908AA544(v217, &qword_1EE1EF550);
        v105(v205, v106, v83);
        v108 = 0;
        goto LABEL_29;
      }
      (*(void (**)(char *, uint64_t))(v31 + 8))(v106, v83);
      v107 = *v99;
      v101 = v217;
      sub_190A47E60();
      if (v107 == *(_QWORD *)&v254[0])
        goto LABEL_27;
    }
  }
  sub_1908AA544(v101, &qword_1EE1EF550);
  v108 = 1;
LABEL_29:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))&v232)(v205, v108, 1, v83);
  (*(void (**)(char *, uint64_t, uint64_t))&v231)(v84, v208, v56);
  v109 = v218;
  sub_190A47B9C();
  v110 = (uint64_t *)(v109 + *(int *)(v207 + 36));
  v111 = *v110;
  sub_190A47E60();
  v88 = v111 == *(_QWORD *)&v254[0];
  v112 = v109;
  if (v88)
  {
LABEL_33:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))&v232)(v215, 1, 1, v83);
  }
  else
  {
    while (1)
    {
      v113 = (void (*)(_OWORD *, _QWORD))sub_190A47EC0();
      v114 = v215;
      (*(void (**)(char *))(v31 + 16))(v215);
      v113(v254, 0);
      (*(void (**)(char *, uint64_t, uint64_t))&v231)(v84, v112, v56);
      sub_190A47E6C();
      v115 = v114;
      (*(void (**)(char *, uint64_t))(v230 + 8))(v84, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))&v232)(v114, 0, 1, v83);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v114, 1, v83) == 1)
        break;
      v116 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
      v117 = v211;
      v116(v211, v115, v83);
      sub_190A3CA30();
      sub_190A4678C();
      if (LOBYTE(v254[0]) == 4)
      {
        sub_1908AA544(v218, &qword_1EE1EF550);
        v120 = (uint64_t)v201;
        v116(v201, v117, v83);
        v119 = 0;
        goto LABEL_35;
      }
      (*(void (**)(char *, uint64_t))(v31 + 8))(v117, v83);
      v118 = *v110;
      v112 = v218;
      sub_190A47E60();
      if (v118 == *(_QWORD *)&v254[0])
        goto LABEL_33;
    }
  }
  sub_1908AA544(v112, &qword_1EE1EF550);
  v119 = 1;
  v120 = (uint64_t)v201;
LABEL_35:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))&v232)(v120, v119, 1, v83);
  v121 = v196;
  sub_1908AAA48(v120, v196, &qword_1EE1EF548);
  v122 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
  v123 = v122(v121, 1, v83);
  v124 = v31;
  v125 = v200;
  v126 = v199;
  v127 = v203;
  v128 = v202;
  if (v123 == 1)
  {
    sub_1908AA544(v121, &qword_1EE1EF548);
    v129 = 0.0;
    v130 = 0.0;
  }
  else
  {
    LOBYTE(v254[0]) = v200 & 1;
    LOBYTE(v251[0]) = v202 & 1;
    sub_190A4675C();
    v127 = v203;
    v130 = *(double *)&v141;
    v129 = v142;
    (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v121, v90);
  }
  v143 = v195;
  LOBYTE(v254[0]) = v195;
  LOBYTE(v251[0]) = v125 & 1;
  v144 = v128 & 1;
  LOBYTE(v249[0]) = v144;
  sub_190A42A10(v126, v125 & 1, v127, v144, (uint64_t)v225, (unsigned __int8 *)v254, 0, (double *)v247, v130, v129);
  v244 = v247[4];
  v245 = v247[5];
  v246 = v248;
  v240 = v247[0];
  v241 = v247[1];
  v242 = v247[2];
  v243 = v247[3];
  LOBYTE(v254[0]) = v143;
  sub_190A43004((uint64_t)v247);
  LOBYTE(v251[0]) = v125 & 1;
  LOBYTE(v249[0]) = v144;
  sub_190A42A10(v126, v125 & 1, v127, v144, v228, (unsigned __int8 *)v254, 0, (double *)v249, v130, v129);
  v237 = v249[4];
  v238 = v249[5];
  v239 = v250;
  v233 = v249[0];
  v234 = v249[1];
  v235 = v249[2];
  v236 = v249[3];
  v145 = sub_190A3D3C4();
  sub_190A43004((uint64_t)v249);
  sub_190A43048((uint64_t)v247);
  v146 = sub_190A3D3C4();
  if (v145 > v146)
    v146 = v145;
  sub_190A3D648(v146);
  v147 = sub_190A3D3C4();
  v148 = sub_190A3D3C4();
  sub_190A43048((uint64_t)v249);
  if (v147 > v148)
    v149 = v147;
  else
    v149 = v148;
  sub_190A3D648(v149);
  v150 = v197;
  sub_1908AAA48((uint64_t)v205, v197, &qword_1EE1EF548);
  if (v122(v150, 1, v90) == 1)
  {
    sub_1908AA544(v150, &qword_1EE1EF548);
    v230 = 0;
    v151 = 0.0;
  }
  else
  {
    LOBYTE(v254[0]) = v125 & 1;
    LOBYTE(v251[0]) = v144;
    sub_190A4675C();
    v151 = v152;
    v230 = v153;
    (*(void (**)(uint64_t, uint64_t))(v222 + 8))(v150, v90);
  }
  v154 = v198;
  sub_1908AAA48((uint64_t)v204, v198, &qword_1EE1EF548);
  v155 = v122(v154, 1, v90);
  v231 = v130;
  v232 = v129;
  if (v155 == 1)
  {
    sub_1908AA544(v154, &qword_1EE1EF548);
    v229 = 0;
    v156 = 0.0;
  }
  else
  {
    LOBYTE(v254[0]) = v125 & 1;
    LOBYTE(v251[0]) = v202 & 1;
    sub_190A4675C();
    v156 = v157;
    v229 = v158;
    (*(void (**)(uint64_t, uint64_t))(v222 + 8))(v154, v90);
  }
  v254[4] = v244;
  v255 = v245;
  v256 = v246;
  v254[0] = v240;
  v254[1] = v241;
  v254[2] = v242;
  v254[3] = v243;
  sub_190A43004((uint64_t)v254);
  v159 = sub_190A3CDB8();
  sub_190A43048((uint64_t)v254);
  v251[4] = v237;
  v252 = v238;
  v253 = v239;
  v251[0] = v233;
  v251[1] = v234;
  v251[2] = v235;
  v251[3] = v236;
  sub_190A43004((uint64_t)v251);
  v160 = sub_190A3CDB8();
  sub_190A43048((uint64_t)v251);
  sub_1909C769C(v256, v255);
  v162 = v161;
  v164 = v163;
  v166 = v165;
  sub_190A43004((uint64_t)v254);
  swift_bridgeObjectRetain();
  v167 = sub_190A428C8(v162, v164, v166, (uint64_t)v254);
  swift_unknownObjectRelease();
  v168 = *(_QWORD *)(v167 + 16);
  v169 = 0.0;
  v170 = 0.0;
  if (v168)
  {
    v170 = *(double *)(v167 + 32);
    v171 = v168 - 1;
    if (v171)
    {
      v172 = (double *)(v167 + 40);
      do
      {
        v173 = *v172++;
        v174 = v173;
        if (v170 < v173)
          v170 = v174;
        --v171;
      }
      while (v171);
    }
  }
  swift_bridgeObjectRelease();
  sub_190A43048((uint64_t)v254);
  sub_1909C769C(v253, v252);
  v176 = v175;
  v178 = v177;
  v180 = v179;
  sub_190A43004((uint64_t)v251);
  swift_bridgeObjectRetain();
  v181 = sub_190A428C8(v176, v178, v180, (uint64_t)v251);
  swift_unknownObjectRelease();
  v182 = *(_QWORD *)(v181 + 16);
  if (v182)
  {
    v169 = *(double *)(v181 + 32);
    v183 = v182 - 1;
    if (v183)
    {
      v184 = (double *)(v181 + 40);
      do
      {
        v185 = *v184++;
        v186 = v185;
        if (v169 < v185)
          v169 = v186;
        --v183;
      }
      while (v183);
    }
  }
  swift_bridgeObjectRelease();
  sub_190A43048((uint64_t)v251);
  sub_190A43004((uint64_t)v254);
  v187 = sub_190A3CED4();
  sub_190A43048((uint64_t)v254);
  sub_190A43004((uint64_t)v251);
  v188 = sub_190A3D14C();
  sub_190A43048((uint64_t)v251);
  if (qword_1EE1EC598 != -1)
    swift_once();
  if (v159 > v160)
    v189 = v159;
  else
    v189 = v160;
  if (v189 <= v170)
    v189 = v170;
  if (v189 <= v169)
    v189 = v169;
  v190 = v156 - v231;
  if (v156 - v231 < 0.0)
    v190 = 0.0;
  v191 = v190 + v189 + v189;
  if (v191 <= v156)
    v191 = v156;
  if (v151 > v191)
    v191 = v151;
  if ((v125 & 1) != 0)
    v192 = v191 + v187 + v188 + *(double *)&qword_1EE1EF3B8 + *(double *)&qword_1EE1EF3B8;
  else
    v192 = v126;
  sub_190A3D3C4();
  sub_190A43048((uint64_t)v254);
  sub_190A3D3C4();
  sub_190A43048((uint64_t)v251);
  sub_1908AA544((uint64_t)v201, &qword_1EE1EF548);
  sub_1908AA544((uint64_t)v205, &qword_1EE1EF548);
  sub_1908AA544((uint64_t)v204, &qword_1EE1EF548);
  return v192;
}

uint64_t sub_190A3EF50(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  unsigned __int8 *v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t (*v79)(uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t, uint64_t);
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  void (*v100)(_OWORD *, _QWORD);
  char *v101;
  char *v102;
  void (*v103)(char *, char *, uint64_t);
  char *v104;
  uint64_t v105;
  void (*v106)(_OWORD *, _QWORD);
  char *v107;
  void (*v108)(char *, uint64_t, uint64_t);
  double v109;
  char *v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  void (*v118)(_OWORD *, _QWORD);
  char *v119;
  char *v120;
  void (*v121)(char *, char *, uint64_t);
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  void (*v127)(_OWORD *, _QWORD);
  char *v128;
  char *v129;
  void (*v130)(char *, char *, uint64_t);
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  double v140;
  double v141;
  double v142;
  char v143;
  uint64_t v144;
  void (*v145)(_OWORD *, _QWORD);
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  void (*v151)(char *, uint64_t, uint64_t);
  char *v152;
  char *v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  double v157;
  double v158;
  char v159;
  int v160;
  unsigned __int8 v161;
  uint64_t v162;
  double v163;
  double v164;
  double v165;
  double v166;
  double v167;
  double v168;
  double v169;
  char *v170;
  unint64_t v171;
  unint64_t v172;
  CGFloat v173;
  double v174;
  void (*v175)(char *, uint64_t);
  char *v176;
  uint64_t v177;
  char *v178;
  unint64_t v179;
  char *v180;
  void (**v181)(char *, uint64_t);
  uint64_t v182;
  double height;
  uint64_t v184;
  uint64_t v185;
  int v186;
  uint64_t v187;
  char v188;
  CGFloat v189;
  char v190;
  char v191;
  char v192;
  char *v193;
  uint64_t v194;
  CGFloat v195;
  CGFloat v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  CGFloat v204;
  CGFloat v205;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  char *v210;
  char *v211;
  char *v212;
  uint64_t v213;
  char *v214;
  int v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  double v219;
  int v220;
  int v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  char *v228;
  char *v229;
  char *v230;
  char *v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  char *v238;
  double v239;
  char *v240;
  char *v241;
  char *v242;
  uint64_t v243;
  char *v244;
  double v245;
  void (**v246)(char *, uint64_t);
  uint64_t v247;
  double v248;
  char *v249;
  CGFloat v250;
  uint64_t v251;
  char v252;
  char v253;
  char v254;
  uint64_t v255;
  char v256;
  __int128 v257;
  __int128 v258;
  _OWORD v259[2];
  __int128 v260;
  __int128 v261;
  uint64_t v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  uint64_t v269;
  _OWORD v270[6];
  uint64_t v271;
  _OWORD v272[6];
  uint64_t v273;
  char *v274;
  char v275;
  uint64_t v276;
  char v277;
  uint64_t v278;
  __int128 v279;
  uint64_t v280;
  char v281;
  uint64_t v282;
  unint64_t v283;
  uint64_t v284;
  uint64_t v285;
  _OWORD v286[6];
  uint64_t v287;
  CGRect v288;
  CGRect v289;
  CGRect v290;
  CGRect v291;
  CGRect v292;
  CGRect v293;
  CGRect v294;
  CGRect v295;
  CGRect v296;
  CGRect v297;
  CGRect v298;

  v220 = a4;
  v221 = a2;
  v218 = a3;
  v219 = *(double *)&a1;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF548);
  v16 = MEMORY[0x1E0C80A78](v15);
  v213 = (uint64_t)&v207 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v207 = (uint64_t)&v207 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v211 = (char *)&v207 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v209 = (uint64_t)&v207 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v216 = (uint64_t)&v207 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v233 = (char *)&v207 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v217 = (char *)&v207 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v232 = (char *)&v207 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v223 = (char *)&v207 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v231 = (char *)&v207 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v222 = (char *)&v207 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v244 = (char *)&v207 - v39;
  MEMORY[0x1E0C80A78](v38);
  v243 = (uint64_t)&v207 - v40;
  v247 = sub_190A46780();
  v41 = *(_QWORD *)(v247 - 8);
  v42 = MEMORY[0x1E0C80A78](v247);
  v208 = (char *)&v207 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x1E0C80A78](v42);
  v212 = (char *)&v207 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v210 = (char *)&v207 - v47;
  v48 = MEMORY[0x1E0C80A78](v46);
  v242 = (char *)&v207 - v49;
  v50 = MEMORY[0x1E0C80A78](v48);
  v249 = (char *)&v207 - v51;
  v52 = MEMORY[0x1E0C80A78](v50);
  *(_QWORD *)&v245 = (char *)&v207 - v53;
  v54 = MEMORY[0x1E0C80A78](v52);
  v229 = (char *)&v207 - v55;
  v56 = MEMORY[0x1E0C80A78](v54);
  v228 = (char *)&v207 - v57;
  v58 = MEMORY[0x1E0C80A78](v56);
  v227 = (char *)&v207 - v59;
  v60 = MEMORY[0x1E0C80A78](v58);
  v240 = (char *)&v207 - v61;
  v62 = MEMORY[0x1E0C80A78](v60);
  *(_QWORD *)&v239 = (char *)&v207 - v63;
  v64 = MEMORY[0x1E0C80A78](v62);
  v230 = (char *)&v207 - v65;
  MEMORY[0x1E0C80A78](v64);
  v238 = (char *)&v207 - v66;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF550);
  v68 = MEMORY[0x1E0C80A78](v67);
  v236 = (uint64_t)&v207 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = MEMORY[0x1E0C80A78](v68);
  v235 = (uint64_t)&v207 - v71;
  v72 = MEMORY[0x1E0C80A78](v70);
  v234 = (uint64_t)&v207 - v73;
  v74 = MEMORY[0x1E0C80A78](v72);
  v241 = (char *)&v207 - v75;
  MEMORY[0x1E0C80A78](v74);
  v77 = (char *)&v207 - v76;
  v78 = sub_190A4687C();
  v79 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9370];
  v80 = MEMORY[0x1E0C80A78](v78);
  v214 = (char *)&v207 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = MEMORY[0x1E0C80A78](v80);
  v84 = (char *)&v207 - v83;
  MEMORY[0x1E0C80A78](v82);
  v215 = *v9;
  v246 = (void (**)(char *, uint64_t))v85;
  v86 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 16);
  v226 = a5;
  v248 = *(double *)&v86;
  v86((char *)&v207 - v87, a5, v78);
  v274 = (char *)MEMORY[0x1E0DEE9D8];
  v224 = sub_1908AA2F4(&qword_1EE1EF558, v79, MEMORY[0x1E0CD9388]);
  sub_190A47B9C();
  v225 = v67;
  v88 = &v77[*(int *)(v67 + 36)];
  v89 = sub_1908AA2F4(&qword_1EE1EF560, v79, MEMORY[0x1E0CD9390]);
  v90 = *(_QWORD *)v88;
  sub_190A47E60();
  v251 = v41;
  if (v90 == *(_QWORD *)&v286[0])
  {
    v250 = *(double *)(v41 + 56);
LABEL_3:
    v91 = v243;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))&v250)(v243, 1, 1, v247);
  }
  else
  {
    v237 = v88;
    while (1)
    {
      v145 = (void (*)(_OWORD *, _QWORD))sub_190A47EC0();
      v146 = (char *)v243;
      v147 = v247;
      (*(void (**)(uint64_t))(v41 + 16))(v243);
      v145(v286, 0);
      (*(void (**)(char *, char *, uint64_t))&v248)(v84, v77, v78);
      sub_190A47E6C();
      v91 = (uint64_t)v146;
      v246[1](v84, v78);
      v250 = *(double *)(v41 + 56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))&v250)(v146, 0, 1, v147);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v146, 1, v147) == 1)
        break;
      v148 = v89;
      v149 = v84;
      v150 = v77;
      v151 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 32);
      v152 = v238;
      v151(v238, v91, v147);
      sub_190A3CA30();
      sub_190A4678C();
      if (LOBYTE(v286[0]))
      {
        (*(void (**)(char *, uint64_t))(v41 + 8))(v152, v147);
        v77 = v150;
        v84 = v149;
      }
      else
      {
        v151(v230, (uint64_t)v152, v147);
        v153 = v274;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1908B8E38(0, *((_QWORD *)v153 + 2) + 1, 1);
          v153 = v274;
        }
        v77 = v150;
        v155 = *((_QWORD *)v153 + 2);
        v154 = *((_QWORD *)v153 + 3);
        v84 = v149;
        if (v155 >= v154 >> 1)
        {
          sub_1908B8E38(v154 > 1, v155 + 1, 1);
          v153 = v274;
        }
        *((_QWORD *)v153 + 2) = v155 + 1;
        v156 = (unint64_t)&v153[((*(unsigned __int8 *)(v251 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v251 + 80))
                                     + *(_QWORD *)(v251 + 72) * v155];
        v41 = v251;
        v151((char *)v156, (uint64_t)v230, v247);
        v274 = v153;
      }
      v89 = v148;
      v144 = *(_QWORD *)v237;
      sub_190A47E60();
      if (v144 == *(_QWORD *)&v286[0])
        goto LABEL_3;
    }
  }
  sub_1908AA544((uint64_t)v77, &qword_1EE1EF550);
  sub_1908AA544(v91, &qword_1EE1EF548);
  v238 = v274;
  (*(void (**)(char *, uint64_t, uint64_t))&v248)(v214, v226, v78);
  v274 = (char *)MEMORY[0x1E0DEE9D8];
  v92 = (uint64_t)v241;
  sub_190A47B9C();
  v93 = (uint64_t *)(v92 + *(int *)(v225 + 36));
  v94 = *v93;
  sub_190A47E60();
  v95 = v247;
  if (v94 == *(_QWORD *)&v286[0])
  {
LABEL_5:
    v96 = (uint64_t)v244;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))&v250)(v244, 1, 1, v95);
  }
  else
  {
    while (1)
    {
      v106 = (void (*)(_OWORD *, _QWORD))sub_190A47EC0();
      v107 = v244;
      (*(void (**)(char *))(v41 + 16))(v244);
      v106(v286, 0);
      (*(void (**)(char *, uint64_t, uint64_t))&v248)(v84, v92, v78);
      sub_190A47E6C();
      v96 = (uint64_t)v107;
      v246[1](v84, v78);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))&v250)(v107, 0, 1, v95);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v107, 1, v95) == 1)
        break;
      v108 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 32);
      v109 = v239;
      v108(*(char **)&v239, v96, v95);
      sub_190A3CA30();
      sub_190A4678C();
      if (LOBYTE(v286[0]) == 1)
      {
        v108(v240, *(_QWORD *)&v109, v95);
        v110 = v274;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1908B8E38(0, *((_QWORD *)v110 + 2) + 1, 1);
          v110 = v274;
        }
        v92 = (uint64_t)v241;
        v112 = *((_QWORD *)v110 + 2);
        v111 = *((_QWORD *)v110 + 3);
        if (v112 >= v111 >> 1)
        {
          sub_1908B8E38(v111 > 1, v112 + 1, 1);
          v110 = v274;
        }
        *((_QWORD *)v110 + 2) = v112 + 1;
        v113 = (unint64_t)&v110[((*(unsigned __int8 *)(v251 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v251 + 80))
                                     + *(_QWORD *)(v251 + 72) * v112];
        v41 = v251;
        v95 = v247;
        v108((char *)v113, (uint64_t)v240, v247);
        v274 = v110;
      }
      else
      {
        (*(void (**)(double, uint64_t))(v41 + 8))(COERCE_DOUBLE(*(_QWORD *)&v109), v95);
        v92 = (uint64_t)v241;
      }
      v105 = *v93;
      sub_190A47E60();
      if (v105 == *(_QWORD *)&v286[0])
        goto LABEL_5;
    }
  }
  sub_1908AA544(v92, &qword_1EE1EF550);
  sub_1908AA544(v96, &qword_1EE1EF548);
  v240 = v274;
  (*(void (**)(char *, uint64_t, uint64_t))&v248)(v84, v226, v78);
  v97 = v234;
  sub_190A47B9C();
  v98 = (uint64_t *)(v97 + *(int *)(v225 + 36));
  v99 = *v98;
  while (1)
  {
    sub_190A47E60();
    if (v99 == *(_QWORD *)&v286[0])
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))&v250)(v231, 1, 1, v95);
LABEL_21:
      sub_1908AA544(v97, &qword_1EE1EF550);
      v114 = 1;
      goto LABEL_22;
    }
    v100 = (void (*)(_OWORD *, _QWORD))sub_190A47EC0();
    v101 = v231;
    (*(void (**)(char *))(v41 + 16))(v231);
    v100(v286, 0);
    (*(void (**)(char *, uint64_t, uint64_t))&v248)(v84, v97, v78);
    sub_190A47E6C();
    v102 = v101;
    v246[1](v84, v78);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))&v250)(v101, 0, 1, v95);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v101, 1, v95) == 1)
      goto LABEL_21;
    v103 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
    v104 = v227;
    v103(v227, v102, v95);
    sub_190A3CA30();
    sub_190A4678C();
    if (LOBYTE(v286[0]) == 2)
      break;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v104, v95);
    v99 = *v98;
    v97 = v234;
  }
  sub_1908AA544(v234, &qword_1EE1EF550);
  v103(v222, v104, v95);
  v114 = 0;
LABEL_22:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))&v250)(v222, v114, 1, v95);
  (*(void (**)(char *, uint64_t, uint64_t))&v248)(v84, v226, v78);
  v115 = v235;
  sub_190A47B9C();
  v116 = (uint64_t *)(v115 + *(int *)(v225 + 36));
  v117 = *v116;
  while (1)
  {
    sub_190A47E60();
    if (v117 == *(_QWORD *)&v286[0])
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))&v250)(v232, 1, 1, v95);
LABEL_28:
      sub_1908AA544(v115, &qword_1EE1EF550);
      v123 = 1;
      goto LABEL_29;
    }
    v118 = (void (*)(_OWORD *, _QWORD))sub_190A47EC0();
    v119 = v232;
    (*(void (**)(char *))(v41 + 16))(v232);
    v118(v286, 0);
    (*(void (**)(char *, uint64_t, uint64_t))&v248)(v84, v115, v78);
    sub_190A47E6C();
    v120 = v119;
    v246[1](v84, v78);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))&v250)(v119, 0, 1, v95);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v119, 1, v95) == 1)
      goto LABEL_28;
    v121 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
    v122 = v228;
    v121(v228, v120, v95);
    sub_190A3CA30();
    sub_190A4678C();
    if (LOBYTE(v286[0]) == 3)
      break;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v122, v95);
    v117 = *v116;
    v115 = v235;
  }
  sub_1908AA544(v235, &qword_1EE1EF550);
  v121(v223, v122, v95);
  v123 = 0;
LABEL_29:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))&v250)(v223, v123, 1, v95);
  (*(void (**)(char *, uint64_t, uint64_t))&v248)(v84, v226, v78);
  v124 = v236;
  sub_190A47B9C();
  v125 = (uint64_t *)(v124 + *(int *)(v225 + 36));
  v126 = *v125;
  while (1)
  {
    sub_190A47E60();
    if (v126 == *(_QWORD *)&v286[0])
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))&v250)(v233, 1, 1, v95);
LABEL_35:
      sub_1908AA544(v124, &qword_1EE1EF550);
      v132 = 1;
      goto LABEL_36;
    }
    v127 = (void (*)(_OWORD *, _QWORD))sub_190A47EC0();
    v128 = v233;
    (*(void (**)(char *))(v41 + 16))(v233);
    v127(v286, 0);
    (*(void (**)(char *, uint64_t, uint64_t))&v248)(v84, v124, v78);
    sub_190A47E6C();
    v129 = v128;
    v246[1](v84, v78);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))&v250)(v128, 0, 1, v95);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v128, 1, v95) == 1)
      goto LABEL_35;
    v130 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
    v131 = v229;
    v130(v229, v129, v95);
    sub_190A3CA30();
    sub_190A4678C();
    if (LOBYTE(v286[0]) == 4)
      break;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v131, v95);
    v126 = *v125;
    v124 = v236;
  }
  sub_1908AA544(v236, &qword_1EE1EF550);
  v130(v217, v131, v95);
  v132 = 0;
LABEL_36:
  v133 = (uint64_t)v217;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))&v250)(v217, v132, 1, v95);
  v134 = v133;
  v135 = v216;
  sub_1908AAA48(v134, v216, &qword_1EE1EF548);
  v237 = *(char **)(v41 + 48);
  v136 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v237)(v135, 1, v95);
  v137 = v218;
  v138 = v220;
  v250 = a6;
  v139 = (uint64_t)v238;
  if (v136 == 1)
  {
    sub_1908AA544(v135, &qword_1EE1EF548);
    v140 = 0.0;
    v141 = 0.0;
    v142 = v219;
    v143 = v221;
  }
  else
  {
    v143 = v221;
    LOBYTE(v286[0]) = v221 & 1;
    LOBYTE(v274) = v220 & 1;
    v142 = v219;
    sub_190A4675C();
    v141 = v157;
    v140 = v158;
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v135, v95);
  }
  v159 = v215;
  LOBYTE(v286[0]) = v215;
  swift_retain();
  v160 = v143 & 1;
  LOBYTE(v274) = v143 & 1;
  v161 = v138 & 1;
  LOBYTE(v272[0]) = v161;
  sub_190A42A10(v142, v160, v137, v161, v139, (unsigned __int8 *)v286, 0, (double *)v270, v141, v140);
  v267 = v270[4];
  v268 = v270[5];
  v269 = v271;
  v263 = v270[0];
  v264 = v270[1];
  v265 = v270[2];
  v266 = v270[3];
  LOBYTE(v286[0]) = v159;
  sub_190A43004((uint64_t)v270);
  v162 = (uint64_t)v240;
  swift_retain();
  LOBYTE(v274) = v160;
  LOBYTE(v272[0]) = v161;
  v239 = v141;
  v236 = *(_QWORD *)&v140;
  sub_190A42A10(v142, v160, v137, v161, v162, (unsigned __int8 *)v286, 0, (double *)v272, v141, v140);
  v260 = v272[4];
  v261 = v272[5];
  v262 = v273;
  v257 = v272[0];
  v258 = v272[1];
  v259[0] = v272[2];
  v259[1] = v272[3];
  v163 = sub_190A3D3C4();
  sub_190A43004((uint64_t)v272);
  sub_190A43048((uint64_t)v270);
  v164 = sub_190A3D3C4();
  if (v163 > v164)
    v164 = v163;
  sub_190A3D648(v164);
  v165 = sub_190A3D3C4();
  v166 = sub_190A3D3C4();
  sub_190A43048((uint64_t)v272);
  if (v165 > v166)
    v167 = v165;
  else
    v167 = v166;
  sub_190A3D648(v167);
  v168 = sub_190A3D3C4();
  v169 = sub_190A3D3C4();
  if (v168 > v169)
    v169 = v168;
  v248 = v169;
  v246 = *(void (***)(char *, uint64_t))(v139 + 16);
  if (v246)
  {
    v170 = 0;
    v171 = 0;
    v172 = v139 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
    v139 = *(_QWORD *)(v41 + 16);
    v243 = *(_QWORD *)(v41 + 72);
    v244 = &v275;
    v173 = v250;
    while (1)
    {
      v174 = v245;
      ((void (*)(_QWORD, unint64_t, uint64_t))v139)(*(_QWORD *)&v245, v172, v95);
      sub_190A3CA30();
      sub_190A4678C();
      v175 = *(void (**)(char *, uint64_t))(v41 + 8);
      v175(*(char **)&v174, v95);
      if (v276 == 1 && qword_1EE1EC590 != -1)
        swift_once();
      v288.origin.x = v173;
      v288.origin.y = a7;
      v288.size.width = a8;
      v288.size.height = a9;
      CGRectGetMinX(v288);
      if (qword_1EE1EC598 != -1)
        swift_once();
      v289.origin.x = v173;
      v289.origin.y = a7;
      v289.size.width = a8;
      v289.size.height = a9;
      CGRectGetMinY(v289);
      v286[4] = v267;
      v286[5] = v268;
      v287 = v269;
      v286[0] = v263;
      v286[1] = v264;
      v286[2] = v265;
      v286[3] = v266;
      v95 = v268;
      sub_190A43004((uint64_t)v286);
      sub_190A3D4A4(v171, v248);
      sub_190A43048((uint64_t)v286);
      v176 = v249;
      v177 = v247;
      ((void (*)(char *, unint64_t, uint64_t))v139)(v249, v172, v247);
      if (v171 >= *(_QWORD *)(v95 + 16))
        break;
      ++v171;
      v162 = *(_QWORD *)&v170[v95 + 32];
      sub_190A4792C();
      LOBYTE(v274) = 0;
      v253 = 0;
      sub_190A46768();
      v175(v176, v177);
      v170 += 16;
      v172 += v243;
      v173 = v250;
      v95 = v177;
      v41 = v251;
      if (v246 == (void (**)(char *, uint64_t))v171)
      {
        swift_release();
        goto LABEL_67;
      }
    }
    __break(1u);
    goto LABEL_106;
  }
  swift_release();
  v173 = v250;
LABEL_67:
  v178 = (char *)*((_QWORD *)v240 + 2);
  v245 = a7;
  v244 = v178;
  if (v178)
  {
    v162 = 0;
    v179 = 0;
    v180 = &v240[(*(unsigned __int8 *)(v251 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v251 + 80)];
    v241 = *(char **)(v251 + 72);
    v170 = *(char **)(v251 + 16);
    v243 = (uint64_t)&v255;
    while (1)
    {
      v176 = v242;
      ((void (*)(char *, char *, uint64_t))v170)(v242, v180, v95);
      sub_190A3CA30();
      sub_190A4678C();
      v181 = *(void (***)(char *, uint64_t))(v251 + 8);
      ((void (*)(char *, uint64_t))v181)(v176, v95);
      if (v256 == 1 && qword_1EE1EC590 != -1)
        swift_once();
      v290.origin.x = v173;
      v290.origin.y = a7;
      v290.size.width = a8;
      v290.size.height = a9;
      CGRectGetMinX(v290);
      if (qword_1EE1EC598 != -1)
        swift_once();
      v172 = v261;
      if (v179 >= *(_QWORD *)(v261 + 16))
        break;
      v246 = v181;
      v182 = v95;
      v95 = v261 + v162;
      v291.size.height = a9;
      a9 = *(double *)(v261 + v162 + 32);
      v291.origin.x = v173;
      v291.origin.y = a7;
      v291.size.width = a8;
      height = v291.size.height;
      CGRectGetMinY(v291);
      v247 = (uint64_t)v180;
      v274 = (char *)v257;
      v275 = BYTE8(v257);
      v276 = v258;
      v277 = BYTE8(v258);
      v279 = *(_OWORD *)((char *)v259 + 8);
      v278 = *(_QWORD *)&v259[0];
      v280 = *((_QWORD *)&v259[1] + 1);
      v281 = v260;
      v282 = *((_QWORD *)&v260 + 1);
      v283 = v172;
      v284 = *((_QWORD *)&v261 + 1);
      v285 = v262;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v176 = (char *)&v274;
      sub_190A3D4A4(v179, v248);
      v184 = v247;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v139 = (uint64_t)v249;
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t, uint64_t, uint64_t))v170)(v139, v184, v182);
      if (v179 >= *(_QWORD *)(v172 + 16))
        goto LABEL_107;
      ++v179;
      sub_190A4792C();
      v253 = 0;
      v252 = 0;
      sub_190A46768();
      ((void (*)(uint64_t, uint64_t))v246)(v139, v182);
      v162 += 16;
      v180 = &v241[v184];
      a9 = height;
      a7 = v245;
      v173 = v250;
      v95 = v182;
      if (v244 == (char *)v179)
        goto LABEL_77;
    }
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
    goto LABEL_108;
  }
LABEL_77:
  swift_release();
  v185 = v209;
  sub_1908AAA48((uint64_t)v223, v209, &qword_1EE1EF548);
  v170 = v237;
  v186 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v237)(v185, 1, v95);
  v139 = v251;
  v176 = v210;
  if (v186 == 1)
  {
    sub_1908AA544(v185, &qword_1EE1EF548);
    v187 = (uint64_t)v211;
    goto LABEL_92;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v251 + 32))(v210, v185, v95);
  sub_190A3CA30();
  sub_190A4678C();
  if ((v254 & 1) != 0 && qword_1EE1EC590 != -1)
    swift_once();
  sub_190A4678C();
  if ((v256 & 1) == 0)
  {
    v188 = v221;
    if ((v221 & 1) != 0)
      goto LABEL_90;
    goto LABEL_88;
  }
  v188 = v221;
  if (qword_1EE1EC590 != -1)
  {
    swift_once();
    v188 = v221;
  }
  if ((v188 & 1) == 0)
  {
LABEL_88:
    if (qword_1EE1EC598 != -1)
    {
      swift_once();
      v188 = v221;
    }
  }
LABEL_90:
  LOBYTE(v172) = v188 & 1;
  v253 = v188 & 1;
  LOBYTE(v162) = v220 & 1;
  v252 = v220 & 1;
  sub_190A4675C();
  v189 = v250;
  v292.origin.x = v250;
  v292.origin.y = a7;
  v292.size.width = a8;
  v292.size.height = a9;
  CGRectGetMinX(v292);
  v293.origin.x = v189;
  v293.origin.y = a7;
  v293.size.width = a8;
  v293.size.height = a9;
  CGRectGetMaxY(v293);
  if (qword_1EE1EC598 != -1)
LABEL_108:
    swift_once();
  sub_190A4792C();
  v253 = v172;
  v252 = v162;
  sub_190A46768();
  (*(void (**)(char *, uint64_t))(v139 + 8))(v176, v95);
  v187 = (uint64_t)v211;
LABEL_92:
  sub_1908AAA48((uint64_t)v222, v187, &qword_1EE1EF548);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v170)(v187, 1, v95) == 1)
  {
    sub_1908AA544(v187, &qword_1EE1EF548);
    v190 = v220;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v139 + 32))(v212, v187, v95);
    v191 = v221 & 1;
    v253 = v221 & 1;
    v192 = v220 & 1;
    v252 = v220 & 1;
    sub_190A4675C();
    v249 = v193;
    v194 = v207;
    sub_1908AAA48((uint64_t)v223, v207, &qword_1EE1EF548);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v170)(v194, 1, v95) == 1)
    {
      sub_1908AA544(v194, &qword_1EE1EF548);
    }
    else
    {
      v253 = v191;
      v252 = v192;
      sub_190A4675C();
      (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v194, v95);
    }
    v195 = v250;
    v294.origin.x = v250;
    v196 = v245;
    v294.origin.y = v245;
    v294.size.width = a8;
    v294.size.height = a9;
    CGRectGetMinX(v294);
    v295.origin.x = v195;
    v295.origin.y = v196;
    v295.size.width = a8;
    v295.size.height = a9;
    CGRectGetMinY(v295);
    v296.origin.x = v195;
    v296.origin.y = v196;
    v296.size.width = a8;
    v296.size.height = a9;
    CGRectGetMinY(v296);
    sub_190A4792C();
    v190 = v220;
    v253 = v221 & 1;
    v252 = v220 & 1;
    v197 = v212;
    sub_190A46768();
    (*(void (**)(char *, uint64_t))(v139 + 8))(v197, v95);
  }
  v198 = (uint64_t)v217;
  v199 = v213;
  sub_1908AAA48((uint64_t)v217, v213, &qword_1EE1EF548);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v170)(v199, 1, v95) == 1)
  {
    sub_1908AA544(v198, &qword_1EE1EF548);
    v201 = (uint64_t)v222;
    v200 = (uint64_t)v223;
    v202 = v199;
  }
  else
  {
    v203 = v208;
    (*(void (**)(char *, uint64_t, uint64_t))(v139 + 32))(v208, v199, v95);
    v204 = v250;
    v297.origin.x = v250;
    v205 = v245;
    v297.origin.y = v245;
    v297.size.width = a8;
    v297.size.height = a9;
    CGRectGetMinX(v297);
    v298.origin.x = v204;
    v298.origin.y = v205;
    v298.size.width = a8;
    v298.size.height = a9;
    CGRectGetMinY(v298);
    sub_190A4792C();
    v253 = v221 & 1;
    v252 = v190 & 1;
    sub_190A46768();
    (*(void (**)(char *, uint64_t))(v139 + 8))(v203, v95);
    v200 = v198;
    v202 = (uint64_t)v222;
    v201 = (uint64_t)v223;
  }
  sub_1908AA544(v200, &qword_1EE1EF548);
  sub_1908AA544(v201, &qword_1EE1EF548);
  sub_1908AA544(v202, &qword_1EE1EF548);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_190A40CA8(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return sub_190A3D9BC(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t sub_190A40CC0(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  return sub_190A3EF50(a1, a2 & 1, a3, a4 & 1, a5, a6, a7, a8, a9);
}

uint64_t sub_190A40CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_190A40D30(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x1E0CDFB58]);
}

uint64_t sub_190A40D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_190A40D30(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x1E0CDFB60]);
}

uint64_t sub_190A40D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_190A40D6C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_190A4663C();
  return sub_1908FE530;
}

uint64_t sub_190A40DC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v25;

  v2 = sub_190A47128();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF520);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF528);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A47134();
  sub_190A478CC();
  v12 = sub_190A3B638(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v8, 0.0, 1, 0.0, 1);
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v12);
  v13 = sub_190A47308();
  sub_190A46660();
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  sub_1908AAA48((uint64_t)v8, (uint64_t)v11, &qword_1EE1EF520);
  v22 = &v11[*(int *)(v9 + 36)];
  *v22 = v13;
  *((_QWORD *)v22 + 1) = v15;
  *((_QWORD *)v22 + 2) = v17;
  *((_QWORD *)v22 + 3) = v19;
  *((_QWORD *)v22 + 4) = v21;
  v22[40] = 0;
  sub_1908AA544((uint64_t)v8, &qword_1EE1EF520);
  v23 = sub_190A47308();
  sub_1908AAA48((uint64_t)v11, a1, &qword_1EE1EF528);
  *(_BYTE *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF530) + 36)) = v23;
  return sub_1908AA544((uint64_t)v11, &qword_1EE1EF528);
}

uint64_t sub_190A40FC8@<X0>(uint64_t a1@<X1>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v6 = sub_190A47128();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF538);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A47134();
  v13 = sub_190A47308();
  sub_190A46660();
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v9, v6);
  v22 = &v12[*(int *)(v10 + 36)];
  *v22 = v13;
  *((_QWORD *)v22 + 1) = v15;
  *((_QWORD *)v22 + 2) = v17;
  *((_QWORD *)v22 + 3) = v19;
  *((_QWORD *)v22 + 4) = v21;
  v22[40] = 0;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v23 = sub_190A478CC();
  v25 = v24;
  v26 = a2 & 1;
  j__swift_retain(a1, v26);
  v27 = sub_19096FF3C(a1, a2 & 1);
  j__swift_release(a1, v26);
  if (!v27)
    v27 = sub_190A46744();
  sub_1908AAA48((uint64_t)v12, a3, &qword_1EE1EF538);
  v28 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF540) + 36);
  *(_WORD *)v28 = 256;
  *(_QWORD *)(v28 + 8) = v27;
  *(_QWORD *)(v28 + 16) = 0x3FF0000000000000;
  *(_WORD *)(v28 + 24) = 0;
  *(_QWORD *)(v28 + 32) = v23;
  *(_QWORD *)(v28 + 40) = v25;
  return sub_1908AA544((uint64_t)v12, &qword_1EE1EF538);
}

uint64_t sub_190A411A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_190A40FC8(*(_QWORD *)v1, *(_BYTE *)(v1 + 8), a1);
}

uint64_t sub_190A411AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46A2C();
  *a1 = result;
  return result;
}

uint64_t sub_190A411D4()
{
  swift_retain();
  return sub_190A46A38();
}

uint64_t sub_190A411FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(void);
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t);
  uint64_t v14;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void (*)(void))MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v14 - v10;
  v9();
  sub_1909DA920((uint64_t)v8, a2, (uint64_t)v11);
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, a2);
  sub_1909D989C((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v12)(v11, a2);
}

void sub_190A412D4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_190A48484();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x19401351CLL);
}

_QWORD *sub_190A4133C(_QWORD *a1)
{
  return sub_1908F21B0(0, a1[2], 0, a1);
}

uint64_t sub_190A41350(unint64_t a1)
{
  return sub_1908F23D4(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_190A41364(_QWORD *a1)
{
  return sub_1908F36D4(0, a1[2], 0, a1);
}

BOOL _s9WidgetKit13JindoPositionV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  char v2;
  char v3;

  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2)
    return 0;
  v2 = *((_BYTE *)a2 + 16);
  v3 = *((_BYTE *)a2 + 32);
  if (((_BYTE)a1[2] & 1) != 0)
  {
    if (!*((_BYTE *)a2 + 16))
      return 0;
  }
  else
  {
    if (a1[1] != a2[1])
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  if (((_BYTE)a1[4] & 1) == 0)
  {
    if (a1[3] != a2[3])
      v3 = 1;
    return (v3 & 1) == 0;
  }
  return ((_BYTE)a2[4] & 1) != 0;
}

uint64_t sub_190A413E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190A41418()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_190A41450()
{
  unint64_t result;

  result = qword_1EE1EF408[0];
  if (!qword_1EE1EF408[0])
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for JindoHorizontalMode, &type metadata for JindoHorizontalMode);
    atomic_store(result, qword_1EE1EF408);
  }
  return result;
}

uint64_t sub_190A41494()
{
  return sub_190A419D8();
}

uint64_t *sub_190A414A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = ~v5;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 1) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) > 0x18)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v5 + 16) & v6));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 1) & v6, ((unint64_t)a2 + v5 + 1) & v6);
  }
  return v3;
}

uint64_t sub_190A4153C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_BYTE *sub_190A4155C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_BYTE *sub_190A415AC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_BYTE *sub_190A415FC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_BYTE *sub_190A4164C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_190A4169C(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unsigned int v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFD)
    v6 = 253;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 1) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)&a1[v9];
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)&a1[v9];
      if (!*(_WORD *)&a1[v9])
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if (v5 > 0xFD)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((unint64_t)&a1[v7 + 1] & ~v7);
      v15 = *a1;
      if (v15 >= 3)
        return v15 - 2;
      else
        return 0;
    }
  }
  v11 = a1[v9];
  if (!a1[v9])
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_190A41770 + 4 * byte_190A5ECD0[(v9 - 1)]))();
}

void sub_190A417E0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFDu)
    v6 = 253;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_190A419CC()
{
  return sub_190A419D8();
}

uint64_t sub_190A419D8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_190A41A48(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  __int128 v9;

  v3 = (_QWORD *)a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 33) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    v9 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    (*(void (**)(uint64_t, unint64_t))(v4 + 16))((a1 + v5 + 33) & ~v5, ((unint64_t)a2 + v5 + 33) & ~v5);
  }
  return v3;
}

uint64_t sub_190A41AF4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_190A41B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 16))((*(unsigned __int8 *)(v5 + 80) + 33 + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(unsigned __int8 *)(v5 + 80) + 33 + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

uint64_t sub_190A41B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))((*(unsigned __int8 *)(v6 + 80) + 33 + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(unsigned __int8 *)(v6 + 80) + 33 + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_190A41BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 32))((*(unsigned __int8 *)(v5 + 80) + 33 + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(unsigned __int8 *)(v5 + 80) + 33 + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

uint64_t sub_190A41C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))((*(unsigned __int8 *)(v4 + 80) + 33 + a1) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (*(unsigned __int8 *)(v4 + 80) + 33 + a2) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_190A41CA4(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unsigned int v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFB)
    v6 = 251;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 33) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)&a1[v9];
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)&a1[v9];
      if (!*(_WORD *)&a1[v9])
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if (v5 > 0xFB)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((unint64_t)&a1[v7 + 33] & ~v7);
      v15 = *a1;
      if (v15 >= 5)
        return v15 - 4;
      else
        return 0;
    }
  }
  v11 = a1[v9];
  if (!a1[v9])
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_190A41D78 + 4 * byte_190A5ECDE[(v9 - 1)]))();
}

void sub_190A41DE8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFBu)
    v6 = 251;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

ValueMetadata *type metadata accessor for JindoPosition()
{
  return &type metadata for JindoPosition;
}

ValueMetadata *type metadata accessor for JindoHorizontalMode()
{
  return &type metadata for JindoHorizontalMode;
}

uint64_t sub_190A4201C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[2];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EF3C0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EF3C8);
  swift_getTupleTypeMetadata2();
  v0 = sub_190A47914();
  sub_1908AF598(&qword_1EE1EF3D0, &qword_1EE1EF3C0, MEMORY[0x1E0CD8A18]);
  v1 = sub_190A467F8();
  v3[0] = sub_1908AF598(&qword_1EE1EF3D8, &qword_1EE1EF3C0, MEMORY[0x1E0CD8A20]);
  v3[1] = MEMORY[0x19401429C](MEMORY[0x1E0CE0680], v0);
  MEMORY[0x19401429C](MEMORY[0x1E0CD91E0], v1, v3);
  sub_190A3BB3C();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190A42130(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t OpaqueTypeConformance2;
  uint64_t v10;
  _QWORD v12[2];
  _QWORD v13[2];
  uint64_t v14;
  ValueMetadata *v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EF3E8);
  v2 = sub_190A46894();
  v18[0] = v1;
  v18[1] = sub_1908AF598(&qword_1EE1EF3F0, &qword_1EE1EF3E8, MEMORY[0x1E0CDBEF0]);
  v3 = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v2, v18);
  v4 = sub_190A3C9EC();
  v14 = v2;
  v15 = &type metadata for JindoCircleButton;
  v16 = v3;
  v17 = v4;
  v5 = MEMORY[0x1E0CDE000];
  MEMORY[0x19401423C](255, &v14, MEMORY[0x1E0CDE000], 0);
  v6 = sub_190A3BB3C();
  v14 = v2;
  v15 = &type metadata for JindoPillButton;
  v16 = v3;
  v17 = v6;
  MEMORY[0x19401423C](255, &v14, v5, 0);
  v7 = sub_190A46F9C();
  v8 = sub_190A46F9C();
  v14 = v2;
  v15 = &type metadata for JindoCircleButton;
  v16 = v3;
  v17 = v4;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v14 = v2;
  v15 = &type metadata for JindoPillButton;
  v16 = v3;
  v17 = v6;
  v13[0] = OpaqueTypeConformance2;
  v13[1] = swift_getOpaqueTypeConformance2();
  v10 = MEMORY[0x1E0CDB8A0];
  v12[0] = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v7, v13);
  v12[1] = v3;
  return MEMORY[0x19401429C](v10, v8, v12);
}

uint64_t storeEnumTagSinglePayload for JindoPosition.Position(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_190A42308 + 4 * byte_190A5ECF1[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_190A4233C + 4 * byte_190A5ECEC[v4]))();
}

uint64_t sub_190A4233C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A42344(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190A4234CLL);
  return result;
}

uint64_t sub_190A42358(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190A42360);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_190A42364(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A4236C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JindoPosition.Position()
{
  return &type metadata for JindoPosition.Position;
}

uint64_t initializeBufferWithCopyOfBuffer for JindoCircleButton(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned __int8 v4;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  j__swift_retain(*a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for JindoCircleButton(uint64_t a1)
{
  return j__swift_release(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t *assignWithCopy for JindoCircleButton(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  j__swift_retain(*a2, v4);
  v5 = *a1;
  v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((_BYTE *)a1 + 8) = v4;
  j__swift_release(v5, v6);
  return a1;
}

uint64_t *assignWithTake for JindoCircleButton(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((_BYTE *)a1 + 8) = v4;
  j__swift_release(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for JindoCircleButton()
{
  return &type metadata for JindoCircleButton;
}

ValueMetadata *type metadata accessor for JindoPillButton()
{
  return &type metadata for JindoPillButton;
}

uint64_t _s9WidgetKit13JindoPositionVwet_0(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && a1[33])
    return (*(_DWORD *)a1 + 252);
  v3 = *a1;
  v4 = v3 >= 5;
  v5 = v3 - 5;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s9WidgetKit13JindoPositionVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for JindoPlacement()
{
  return &type metadata for JindoPlacement;
}

uint64_t _s9WidgetKit19JindoHorizontalModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190A42574 + 4 * byte_190A5ECFB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_190A425A8 + 4 * byte_190A5ECF6[v4]))();
}

uint64_t sub_190A425A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A425B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190A425B8);
  return result;
}

uint64_t sub_190A425C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190A425CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190A425D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190A425D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JindoLayout()
{
  return &type metadata for JindoLayout;
}

unint64_t sub_190A425F8()
{
  unint64_t result;

  result = qword_1EE1EF510;
  if (!qword_1EE1EF510)
  {
    result = MEMORY[0x19401429C](&unk_190A5EF90, &type metadata for JindoLayout);
    atomic_store(result, (unint64_t *)&qword_1EE1EF510);
  }
  return result;
}

unint64_t sub_190A42640()
{
  unint64_t result;

  result = qword_1EE1EF518;
  if (!qword_1EE1EF518)
  {
    result = MEMORY[0x19401429C](&unk_190A5F0F8, &type metadata for JindoPosition.Position);
    atomic_store(result, (unint64_t *)&qword_1EE1EF518);
  }
  return result;
}

uint64_t sub_190A42684()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190A42694()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190A426A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v7 = sub_190A466CC();
  v29 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v25 - v12;
  v31 = a1;
  v14 = __OFSUB__(a2, a1);
  v15 = a2 - a1;
  if (v14)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v16 = MEMORY[0x1E0DEE9D8];
  if (!v15)
    return v16;
  v32 = MEMORY[0x1E0DEE9D8];
  v30 = a2;
  sub_1908B8CE0(0, v15 & ~(v15 >> 63), 0);
  v17 = v30;
  result = sub_190A46780();
  if (v17 >= v31 && (v15 & 0x8000000000000000) == 0)
  {
    v27 = *(_QWORD *)(result - 8);
    v18 = v31;
    v16 = v32;
    v19 = *(_QWORD *)(a3 + 16);
    v25 = v3;
    v26 = v19;
    if (v19 <= v31)
      v19 = v31;
    v28 = v19;
    while (v17 != v18)
    {
      if (v31 < 0)
        goto LABEL_17;
      if (v28 == v18)
        goto LABEL_18;
      result = sub_190A46774();
      if (++v18 >= v26)
        goto LABEL_19;
      sub_190A46774();
      sub_190A466C0();
      v21 = v20;
      v22 = *(void (**)(char *, uint64_t))(v29 + 8);
      v22(v10, v7);
      result = ((uint64_t (*)(char *, uint64_t))v22)(v13, v7);
      v32 = v16;
      v24 = *(_QWORD *)(v16 + 16);
      v23 = *(_QWORD *)(v16 + 24);
      if (v24 >= v23 >> 1)
      {
        result = sub_1908B8CE0(v23 > 1, v24 + 1, 1);
        v16 = v32;
      }
      *(_QWORD *)(v16 + 16) = v24 + 1;
      *(_QWORD *)(v16 + 8 * v24 + 32) = v21;
      v17 = v30;
      if (v30 == v18)
        return v16;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_190A428C8(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  double v10;
  double *i;
  uint64_t v12;
  double v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a3 >> 1;
  v5 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
    goto LABEL_14;
  v6 = result;
  result = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    result = sub_1908B8CE0(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0)
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 = 0;
    result = v16;
    v10 = *(double *)(a4 + 40) * 0.5;
    for (i = (double *)(v6 + 16 * a2); ; i += 2)
    {
      v12 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      if (a2 + v9 >= v4 || v9 >= v5)
        goto LABEL_13;
      v13 = *i;
      v17 = result;
      v15 = *(_QWORD *)(result + 16);
      v14 = *(_QWORD *)(result + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1908B8CE0(v14 > 1, v15 + 1, 1);
        result = v17;
      }
      *(_QWORD *)(result + 16) = v15 + 1;
      *(double *)(result + 8 * v15 + 32) = v10 + v13;
      ++v9;
      if (v12 == v5)
        return result;
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  return result;
}

unint64_t sub_190A42A00(unint64_t result)
{
  if (result >= 5)
    return 5;
  return result;
}

uint64_t sub_190A42A10@<X0>(double a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, unsigned __int8 *a6@<X5>, char a7@<W6>, double *a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  int v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  double v34;
  unint64_t v35;
  uint64_t result;
  uint64_t v37;
  char v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  int64_t v45;
  unint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  void (*v50)(_BYTE *, unint64_t, uint64_t);
  int64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  char v66;
  double *v67;
  _BYTE v68[12];
  int v69;
  double v70;
  double *v71;
  uint64_t v72;
  unint64_t v73;
  void (*v74)(_BYTE *, unint64_t, uint64_t);
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  int v80;
  char v81;
  char v82;
  uint64_t v83;
  double v84;
  char v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  double v89;
  double v90;
  double v91;
  char v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v80 = a2;
  v70 = a1;
  v71 = a8;
  v17 = sub_190A46780();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v76 = &v68[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v19);
  v22 = &v68[-v21];
  v23 = *a6;
  v24 = *(_QWORD *)(a5 + 16);
  v25 = MEMORY[0x1E0DEE9D8];
  v79 = a3;
  v72 = a5;
  v78 = a4;
  v73 = v24;
  v69 = v23;
  if (v24)
  {
    v83 = MEMORY[0x1E0DEE9D8];
    sub_1908B8CE0(0, v24, 0);
    v26 = a5 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v75 = *(_QWORD *)(v18 + 72);
    v77 = v18;
    v74 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v18 + 16);
    v27 = v24;
    do
    {
      v74(v22, v26, v17);
      sub_190A3CA30();
      sub_190A4678C();
      v28 = &v86;
      if ((a7 & 1) != 0)
        v28 = &v88;
      if ((*(_BYTE *)v28 & 1) != 0)
      {
        if (qword_1EE1EC590 != -1)
          swift_once();
        v29 = qword_1EE1EF3B0;
      }
      else
      {
        v30 = (uint64_t *)&v85;
        if ((a7 & 1) != 0)
          v30 = (uint64_t *)&v87;
        v29 = *v30;
      }
      (*(void (**)(_BYTE *, uint64_t))(v77 + 8))(v22, v17);
      v25 = v83;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1908B8CE0(0, *(_QWORD *)(v25 + 16) + 1, 1);
        v25 = v83;
      }
      v32 = *(_QWORD *)(v25 + 16);
      v31 = *(_QWORD *)(v25 + 24);
      v33 = v32 + 1;
      if (v32 >= v31 >> 1)
      {
        sub_1908B8CE0(v31 > 1, v32 + 1, 1);
        v25 = v83;
      }
      *(_QWORD *)(v25 + 16) = v33;
      *(_QWORD *)(v25 + 8 * v32 + 32) = v29;
      v26 += v75;
      --v27;
    }
    while (v27);
    a5 = v72;
    a3 = v79;
    LOBYTE(a4) = v78;
    v18 = v77;
  }
  else
  {
    v33 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v33)
    {
      result = swift_bridgeObjectRelease();
      if (qword_1EE1EC590 != -1)
        result = swift_once();
      v34 = *(double *)&qword_1EE1EF3B0;
      goto LABEL_29;
    }
  }
  v34 = *(double *)(v25 + 32);
  v35 = v33 - 1;
  if (v33 == 1)
  {
    result = swift_bridgeObjectRelease();
LABEL_29:
    v38 = v80;
    goto LABEL_30;
  }
  v37 = 0;
  v38 = v80;
  do
  {
    v39 = v25 + 8 * v37;
    if (v34 < *(double *)(v39 + 40))
      v34 = *(double *)(v39 + 40);
    ++v37;
  }
  while (v35 != v37);
  result = swift_bridgeObjectRelease();
LABEL_30:
  v40 = v70;
  v41 = v70;
  if ((v38 & 1) != 0)
    goto LABEL_39;
  v42 = v70;
  if (!v69)
    goto LABEL_37;
  if (v69 != 1)
  {
    if ((a7 & 1) != 0)
      goto LABEL_34;
    goto LABEL_36;
  }
  if ((a7 & 1) != 0)
  {
LABEL_36:
    v42 = v70 - a9;
LABEL_37:
    v43 = v42 * 0.5;
    goto LABEL_38;
  }
LABEL_34:
  v43 = v70 - a9;
LABEL_38:
  v41 = v43 - v34;
LABEL_39:
  v84 = v70;
  v85 = v38 & 1;
  v86 = a3;
  v87 = a4 & 1;
  v88 = a5;
  v89 = a9;
  v90 = a10;
  v93 = v34;
  v96 = 0;
  v44 = MEMORY[0x1E0DEE9D8];
  v45 = v73;
  if (v73)
  {
    v83 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1908B8E1C(0, v45, 0);
    v46 = a5 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v47 = *(_QWORD *)(v18 + 72);
    v48 = v45;
    v49 = v18;
    v50 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v18 + 16);
    v51 = v48;
    do
    {
      v52 = v76;
      v50(v76, v46, v17);
      v82 = v38 & 1;
      v81 = v78 & 1;
      sub_190A4675C();
      v54 = v53;
      v56 = v55;
      (*(void (**)(_BYTE *, uint64_t))(v49 + 8))(v52, v17);
      v57 = v83;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1908B8E1C(0, *(_QWORD *)(v57 + 16) + 1, 1);
        v57 = v83;
      }
      v59 = *(_QWORD *)(v57 + 16);
      v58 = *(_QWORD *)(v57 + 24);
      if (v59 >= v58 >> 1)
      {
        sub_1908B8E1C(v58 > 1, v59 + 1, 1);
        v57 = v83;
      }
      *(_QWORD *)(v57 + 16) = v59 + 1;
      v60 = v57 + 16 * v59;
      *(_QWORD *)(v60 + 32) = v54;
      *(_QWORD *)(v60 + 40) = v56;
      v46 += v47;
      --v51;
      v38 = v80;
    }
    while (v51);
    v94 = v57;
    v91 = v41;
    v92 = v80 & 1;
    if (v73 <= 1)
    {
      swift_bridgeObjectRelease();
      v95 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v61 = sub_190A426A4(0, v73 - 1, v72);
      swift_bridgeObjectRelease();
      v95 = v61;
    }
    result = sub_190A3CC40(0);
    v40 = v84;
    v66 = v85;
    a3 = v86;
    v64 = v87;
    a5 = v88;
    a9 = v89;
    a10 = v90;
    v41 = v91;
    v63 = v92;
    v34 = v93;
    v65 = v94;
    v44 = v95;
    v62 = v96;
  }
  else
  {
    v62 = 0;
    v63 = v38 & 1;
    v64 = a4 & 1;
    v65 = MEMORY[0x1E0DEE9D8];
    v66 = v38 & 1;
  }
  v67 = v71;
  *v71 = v40;
  *((_BYTE *)v67 + 8) = v66;
  *((_QWORD *)v67 + 2) = a3;
  *((_BYTE *)v67 + 24) = v64;
  *((_QWORD *)v67 + 4) = a5;
  v67[5] = a9;
  v67[6] = a10;
  v67[7] = v41;
  *((_BYTE *)v67 + 64) = v63;
  v67[9] = v34;
  *((_QWORD *)v67 + 10) = v65;
  *((_QWORD *)v67 + 11) = v44;
  *((_QWORD *)v67 + 12) = v62;
  return result;
}

uint64_t sub_190A43004(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_190A43048(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190A4308C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190A430B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_190A47890();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_190A430F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_190A47890();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_190A43134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EF3C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_190A4317C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EF580;
  if (!qword_1EE1EF580)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EF3C8);
    v2[0] = sub_190A43200();
    v2[1] = sub_1908AF598(&qword_1EE1EF3F0, &qword_1EE1EF3E8, MEMORY[0x1E0CDBEF0]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EF580);
  }
  return result;
}

unint64_t sub_190A43200()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EF588;
  if (!qword_1EE1EF588)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EF578);
    v2[0] = sub_190A4326C();
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EF588);
  }
  return result;
}

unint64_t sub_190A4326C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EF590;
  if (!qword_1EE1EF590)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EF570);
    v2[0] = sub_1908AF598(&qword_1EE1EF598, &qword_1EE1EF568, MEMORY[0x1E0CD9150]);
    v2[1] = sub_1908AF598(&qword_1EE1EF5A0, &qword_1EE1EF5A8, MEMORY[0x1E0CDC718]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EF590);
  }
  return result;
}

uint64_t sub_190A43308()
{
  return swift_deallocObject();
}

unint64_t sub_190A43318()
{
  unint64_t result;

  result = qword_1EE1EF5B0;
  if (!qword_1EE1EF5B0)
  {
    result = MEMORY[0x19401429C](&unk_190A5EFE0, &type metadata for JindoLayout);
    atomic_store(result, (unint64_t *)&qword_1EE1EF5B0);
  }
  return result;
}

uint64_t sub_190A4335C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_190A411FC(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_190A43370()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EF5B8;
  if (!qword_1EE1EF5B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EF530);
    v2[0] = sub_190A433F4();
    v2[1] = sub_1908AF598(&qword_1EE1EF5D8, &qword_1EE1EF5E0, MEMORY[0x1E0CDC6D0]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EF5B8);
  }
  return result;
}

unint64_t sub_190A433F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EF5C0;
  if (!qword_1EE1EF5C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EF528);
    v2[0] = sub_190A43478(&qword_1EE1EF5C8, &qword_1EE1EF520, MEMORY[0x1E0CDA228]);
    v2[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EF5C0);
  }
  return result;
}

uint64_t sub_190A43478(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = sub_1908AA2F4(&qword_1EE1EF5D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDC528], MEMORY[0x1E0CDC520]);
    v7[1] = a3;
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_190A434F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EF5E8;
  if (!qword_1EE1EF5E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EF540);
    v2[0] = sub_190A43478(&qword_1EE1EF5F0, &qword_1EE1EF538, MEMORY[0x1E0CD9758]);
    v2[1] = sub_1908AF598(&qword_1EE1EF5F8, &qword_1EE1EF600, MEMORY[0x1E0CDB838]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EF5E8);
  }
  return result;
}

uint64_t sub_190A43594(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 120);
  v4 = *(_BYTE *)(a1 + 128);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_190950F28(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t TimelineProviderContext.EnvironmentVariants.init(_:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;
  uint64_t KeyPath;
  os_unfair_lock_s *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v3 = *a1;
  v4 = (void *)a1[1];
  KeyPath = swift_getKeyPath();
  v6 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain_n();
  v7 = v4;
  os_unfair_lock_lock(v6);
  v8 = sub_1908B7C64(KeyPath);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));

  swift_release();
  swift_release_n();
  if (!v8)
  {
    v14 = 0;
    v15 = 0;
LABEL_24:
    *a2 = v3;
    a2[1] = v7;
    a2[2] = v14;
    a2[3] = v8;
    a2[4] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_release();
  }
  v9 = MEMORY[0x1E0DEE9D8];
  v23 = MEMORY[0x1E0DEE9D8];
  v10 = *(_QWORD *)(v8 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v10; ++i)
    {
      if (*(_QWORD *)(v8 + 8 * i + 32))
      {
        v12 = swift_retain();
        MEMORY[0x194012E68](v12);
        if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_190A47C98();
        sub_190A47CD4();
        sub_190A47C74();
      }
    }
    swift_bridgeObjectRelease();
    v13 = v23;
  }
  else
  {
    v13 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v22 = v9;
  v23 = v9;
  v21 = v9;
  if (!(v13 >> 62))
  {
    v16 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v16)
      goto LABEL_14;
LABEL_22:
    swift_bridgeObjectRelease_n();
    v15 = MEMORY[0x1E0DEE9D8];
    v8 = MEMORY[0x1E0DEE9D8];
    v14 = MEMORY[0x1E0DEE9D8];
LABEL_23:
    swift_bridgeObjectRelease_n();
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  result = sub_190A48484();
  v16 = result;
  if (!result)
    goto LABEL_22;
LABEL_14:
  if (v16 >= 1)
  {
    v18 = 0;
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
      {
        v19 = MEMORY[0x194013510](v18, v13);
      }
      else
      {
        v19 = *(_QWORD *)(v13 + 8 * v18 + 32);
        swift_retain();
      }
      ++v18;
      v20 = v19;
      sub_190A43C0C((uint64_t)&v20, &v23, &v22, &v21);
      swift_release();
    }
    while (v16 != v18);
    swift_bridgeObjectRelease_n();
    v8 = v22;
    v14 = v23;
    v15 = v21;
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

void TimelineProviderContext.init(environmentVariants:family:isPreview:archiveVersion:)(__int128 *a1@<X0>, char *a2@<X1>, char a3@<W2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v11;
  char v12;
  uint64_t KeyPath;
  uint64_t v14;
  double v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v6 = a1[1];
  v27 = *a1;
  v28 = v6;
  v7 = *((_QWORD *)a1 + 4);
  v29 = v7;
  v8 = *a2;
  if (v8 >= 0xD)
    goto LABEL_22;
  v9 = *a2;
  if (((0x13BFu >> v8) & 1) == 0)
    goto LABEL_22;
  v11 = *a4;
  v25 = v28;
  v26 = v27;
  v12 = byte_190A5F386[v8];
  KeyPath = swift_getKeyPath();
  sub_190911E34((uint64_t)&v27);
  sub_190911E34((uint64_t)&v27);
  v14 = sub_190A44150(KeyPath);
  swift_release();
  sub_1908CDF94((uint64_t)&v27);
  if (v14)
  {
    if (*(_QWORD *)(v14 + 16))
      v15 = *(double *)(v14 + 32);
    else
      v15 = 2.0;
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 2.0;
  }
  v16 = swift_getKeyPath();
  v17 = sub_190A44804(v16);
  swift_release();
  sub_1908CDF94((uint64_t)&v27);
  v18 = 0;
  if (!v17)
  {
LABEL_18:
    v22 = 0;
    goto LABEL_19;
  }
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    v24 = sub_190A48484();
    swift_bridgeObjectRelease();
    if (v24)
      goto LABEL_12;
    goto LABEL_17;
  }
  if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
LABEL_12:
  if ((v17 & 0xC000000000000001) != 0)
  {
    v19 = (id)MEMORY[0x194013510](0, v17);
    goto LABEL_15;
  }
  if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v19 = *(id *)(v17 + 32);
LABEL_15:
    v20 = v19;
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel__rawLayoutInsetAdjustedSizePixelAlignedForDisplayScale_, v15);
    v22 = v21;
    v18 = v23;

LABEL_19:
    *(_OWORD *)a5 = v26;
    *(_OWORD *)(a5 + 16) = v25;
    *(_QWORD *)(a5 + 32) = v7;
    *(_BYTE *)(a5 + 40) = v12;
    *(_BYTE *)(a5 + 41) = v9;
    *(_BYTE *)(a5 + 42) = a3 & 1;
    *(_QWORD *)(a5 + 48) = v22;
    *(_QWORD *)(a5 + 56) = v18;
    *(_BYTE *)(a5 + 64) = v11;
    return;
  }
  __break(1u);
LABEL_22:
  sub_190911E34((uint64_t)&v27);
  sub_190A486D0();
  __break(1u);
}

uint64_t sub_190A43AD8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1909019AC();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_190A43B24@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1909019AC();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_190A43B70()
{
  uint64_t v0;

  v0 = swift_retain();
  return EnvironmentValues._localizations.setter(v0);
}

uint64_t sub_190A43B98()
{
  uint64_t v0;

  v0 = swift_retain();
  return EnvironmentValues._localizations.setter(v0);
}

uint64_t sub_190A43BC0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_190A469E4();
  *a1 = v3;
  return result;
}

uint64_t sub_190A43BE8()
{
  return sub_190A469F0();
}

uint64_t sub_190A43C0C(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t LikeCurrentWithBundleLocalizations;
  void *v24;
  void (*v25)(char *, char *, uint64_t);
  unint64_t *v26;
  unint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unsigned int *v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  unint64_t *v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v47;
  uint64_t v48;
  id v49;
  char *v50;
  uint64_t v51;
  unint64_t *v52;
  unint64_t *v53;
  unint64_t *v54;
  char *v55;
  char *v56;

  v52 = a2;
  v53 = a3;
  v54 = a4;
  v51 = sub_190A46888();
  v4 = *(_QWORD *)(v51 - 8);
  v5 = MEMORY[0x1E0C80A78](v51);
  v50 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v56 = (char *)&v47 - v7;
  v48 = sub_190A4618C();
  v8 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v55 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C948);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_190A46180();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v47 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v47 - v21;
  v49 = (id)sub_190A47C50();
  LikeCurrentWithBundleLocalizations = _CFLocaleCreateLikeCurrentWithBundleLocalizations();
  if (LikeCurrentWithBundleLocalizations)
  {
    v24 = (void *)LikeCurrentWithBundleLocalizations;
    sub_190A46114();

    v25 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v25(v12, v20, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
    {
      v25(v22, v12, v13);
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  }
  sub_190A46138();
  sub_190917D68((uint64_t)v12);
LABEL_6:
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v22, v13);
  v26 = v52;
  v27 = *v52;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v26 = v27;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v27 = sub_1908F3808(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
    *v52 = v27;
  }
  v30 = *(_QWORD *)(v27 + 16);
  v29 = *(_QWORD *)(v27 + 24);
  if (v30 >= v29 >> 1)
  {
    v27 = sub_1908F3808(v29 > 1, v30 + 1, 1, v27);
    *v52 = v27;
  }
  *(_QWORD *)(v27 + 16) = v30 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v27+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v30, v17, v13);
  sub_190A46174();
  v31 = v53;
  v32 = *v53;
  v33 = swift_isUniquelyReferenced_nonNull_native();
  *v31 = v32;
  if ((v33 & 1) == 0)
  {
    v32 = sub_1908F37F4(0, *(_QWORD *)(v32 + 16) + 1, 1, v32);
    *v53 = v32;
  }
  v34 = v51;
  v36 = *(_QWORD *)(v32 + 16);
  v35 = *(_QWORD *)(v32 + 24);
  if (v36 >= v35 >> 1)
  {
    v32 = sub_1908F37F4(v35 > 1, v36 + 1, 1, v32);
    *v53 = v32;
  }
  *(_QWORD *)(v32 + 16) = v36 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v32+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v36, v55, v48);
  sub_190A460F0();
  v37 = sub_190A460FC();
  swift_bridgeObjectRelease();
  v38 = (unsigned int *)MEMORY[0x1E0CD9A98];
  if (v37 != 2)
    v38 = (unsigned int *)MEMORY[0x1E0CD9A90];
  v39 = v50;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v50, *v38, v34);
  v40 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v40(v56, v39, v34);
  v41 = v54;
  v42 = *v54;
  v43 = swift_isUniquelyReferenced_nonNull_native();
  *v41 = v42;
  if ((v43 & 1) == 0)
  {
    v42 = sub_1908F37E0(0, *(_QWORD *)(v42 + 16) + 1, 1, v42);
    *v54 = v42;
  }
  v45 = *(_QWORD *)(v42 + 16);
  v44 = *(_QWORD *)(v42 + 24);
  if (v45 >= v44 >> 1)
  {
    v42 = sub_1908F37E0(v44 > 1, v45 + 1, 1, v42);
    *v54 = v42;
  }
  *(_QWORD *)(v42 + 16) = v45 + 1;
  v40((char *)(v42+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v45), v56, v34);

  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v22, v13);
}

uint64_t sub_190A44104@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_190A469E4();
  *a1 = v3;
  return result;
}

uint64_t sub_190A4412C()
{
  return sub_190A469F0();
}

uint64_t sub_190A44150(uint64_t a1)
{
  __int128 *v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  int64_t v15;
  uint64_t result;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  os_unfair_lock_s *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  os_unfair_lock_s *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  os_unfair_lock_s *v46;
  int64_t v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  _QWORD v52[2];
  unint64_t v53;
  __int128 v54;

  v3 = sub_190A466FC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A481CC();
  KeyPath = swift_getKeyPath();
  v8 = MEMORY[0x1940133E4](a1, KeyPath);
  swift_release();
  if ((v8 & 1) != 0)
  {
    v9 = (uint64_t)(v1 + 1);
    v10 = (uint64_t *)&unk_1EE1EF618;
  }
  else
  {
    v11 = swift_getKeyPath();
    v12 = MEMORY[0x1940133E4](a1, v11);
    swift_release();
    if ((v12 & 1) != 0)
    {
      v9 = (uint64_t)v1 + 24;
      v10 = (uint64_t *)&unk_1EE1EF610;
    }
    else
    {
      v13 = swift_getKeyPath();
      v14 = MEMORY[0x1940133E4](a1, v13);
      swift_release();
      if ((v14 & 1) == 0)
      {
        v54 = *v1;
        v17 = swift_getKeyPath();
        v18 = MEMORY[0x1940133E4](a1, v17);
        swift_release();
        if ((v18 & 1) == 0)
        {
          v30 = swift_getKeyPath();
          v31 = MEMORY[0x1940133E4](a1, v30);
          swift_release();
          if ((v31 & 1) == 0)
          {
            v45 = v54;
            v46 = *(os_unfair_lock_s **)(v54 + 16);
            sub_190917544((uint64_t)&v54);
            swift_retain();
            os_unfair_lock_lock(v46);
            v3 = sub_1908B7C78(a1);
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v45 + 16));
            swift_release();
            sub_190A45C1C((uint64_t)&v54);
            return v3;
          }
          v32 = swift_getKeyPath();
          v33 = v54;
          v34 = *(os_unfair_lock_s **)(v54 + 16);
          sub_190917544((uint64_t)&v54);
          swift_retain();
          os_unfair_lock_lock(v34);
          v20 = sub_1908B7A68(v32);
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 16));
          swift_release();
          swift_release();
          sub_190A45C1C((uint64_t)&v54);
          if (v20)
          {
            if (v20 >> 62)
              goto LABEL_51;
            v35 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
            goto LABEL_29;
          }
          return 0;
        }
        v19 = swift_getKeyPath();
        v20 = v54;
        v21 = *(os_unfair_lock_s **)(v54 + 16);
        swift_retain();
        sub_190917544((uint64_t)&v54);
        os_unfair_lock_lock(v21);
        v3 = sub_1908B7A68(v19);
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));
        swift_release();
        swift_release();
        sub_190A45C1C((uint64_t)&v54);
        if (v3)
        {
          if (v3 >> 62)
            goto LABEL_47;
          v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v6)
          {
LABEL_48:
            swift_bridgeObjectRelease();
            v23 = MEMORY[0x1E0DEE9D8];
LABEL_49:
            v3 = sub_190A44F00(v23);
            swift_bridgeObjectRelease();
            return v3;
          }
          while (1)
          {
            v52[0] = MEMORY[0x1E0DEE9D8];
            sub_1908B8CE0(0, v6 & ~(v6 >> 63), 0);
            if ((v6 & 0x8000000000000000) == 0)
            {
              v22 = 0;
              v23 = v52[0];
              do
              {
                if ((v3 & 0xC000000000000001) != 0)
                  v24 = (id)MEMORY[0x194013510](v22, v3);
                else
                  v24 = *(id *)(v3 + 8 * v22 + 32);
                v25 = v24;
                objc_msgSend(v24, sel_scale, v49);
                v27 = v26;

                v52[0] = v23;
                v29 = *(_QWORD *)(v23 + 16);
                v28 = *(_QWORD *)(v23 + 24);
                if (v29 >= v28 >> 1)
                {
                  sub_1908B8CE0(v28 > 1, v29 + 1, 1);
                  v23 = v52[0];
                }
                ++v22;
                *(_QWORD *)(v23 + 16) = v29 + 1;
                *(_QWORD *)(v23 + 8 * v29 + 32) = v27;
              }
              while (v6 != v22);
              swift_bridgeObjectRelease();
              goto LABEL_49;
            }
            __break(1u);
LABEL_51:
            swift_bridgeObjectRetain();
            v35 = sub_190A48484();
            swift_bridgeObjectRelease();
LABEL_29:
            v36 = MEMORY[0x1E0DEE9D8];
            if (!v35)
              break;
            v53 = MEMORY[0x1E0DEE9D8];
            v37 = (id)sub_1908B8CB4(0, v35 & ~(v35 >> 63), 0);
            if (v35 < 0)
            {
              __break(1u);
LABEL_53:
              v52[0] = 0;
              v52[1] = 0xE000000000000000;
              v48 = v37;
              sub_190A48298();
              sub_190A47B3C();
              v51 = v48;
              type metadata accessor for CHSDisplayGamut(0);
              sub_190A483DC();
              result = sub_190A48448();
              __break(1u);
              return result;
            }
            v38 = 0;
            v39 = v53;
            v50 = v20 & 0xC000000000000001;
            LODWORD(v49) = *MEMORY[0x1E0CD8A98];
            HIDWORD(v49) = *MEMORY[0x1E0CD8AA0];
            while (v35 != v38)
            {
              if (v50)
                v40 = (id)MEMORY[0x194013510](v38, v20);
              else
                v40 = *(id *)(v20 + 8 * v38 + 32);
              v41 = v40;
              v37 = objc_msgSend(v40, sel_colorGamut, v49);
              v42 = HIDWORD(v49);
              if (v37)
              {
                v42 = v49;
                if (v37 != (id)1)
                  goto LABEL_53;
              }
              (*(void (**)(uint64_t, uint64_t, unint64_t))(v4 + 104))(v6, v42, v3);

              v53 = v39;
              v44 = *(_QWORD *)(v39 + 16);
              v43 = *(_QWORD *)(v39 + 24);
              if (v44 >= v43 >> 1)
              {
                sub_1908B8CB4(v43 > 1, v44 + 1, 1);
                v39 = v53;
              }
              ++v38;
              *(_QWORD *)(v39 + 16) = v44 + 1;
              (*(void (**)(unint64_t, uint64_t, unint64_t))(v4 + 32))(v39+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v44, v6, v3);
              if (v35 == v38)
              {
                swift_bridgeObjectRelease();
                v36 = MEMORY[0x1E0DEE9D8];
                goto LABEL_44;
              }
            }
            __break(1u);
LABEL_47:
            swift_bridgeObjectRetain();
            v6 = sub_190A48484();
            swift_bridgeObjectRelease();
            if (!v6)
              goto LABEL_48;
          }
          swift_bridgeObjectRelease();
          v39 = MEMORY[0x1E0DEE9D8];
LABEL_44:
          v47 = *(_QWORD *)(v39 + 16);
          v52[0] = v36;
          sub_1908B8CE0(0, v47, 0);
          v3 = v52[0];
          swift_bridgeObjectRelease();
          if (v47)
            goto LABEL_9;
        }
        return v3;
      }
      v9 = (uint64_t)(v1 + 2);
      v10 = (uint64_t *)&unk_1EE1EF608;
    }
  }
  sub_1908B4BD4(v9, (uint64_t)v52, v10);
  sub_1908B4BD4((uint64_t)v52, (uint64_t)&v54, v10);
  if (!(_QWORD)v54)
    return 0;
  v15 = *(_QWORD *)(v54 + 16);
  v53 = MEMORY[0x1E0DEE9D8];
  sub_1908B8CE0(0, v15, 0);
  v3 = v53;
  if (v15)
  {
LABEL_9:
    swift_release();
    return 0;
  }
  return v3;
}

uint64_t sub_190A44804(uint64_t a1)
{
  __int128 *v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  os_unfair_lock_s *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  os_unfair_lock_s *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  os_unfair_lock_s *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  id v52;
  _QWORD v53[2];
  unint64_t v54;
  __int128 v55;

  v3 = sub_190A466FC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A481CC();
  KeyPath = swift_getKeyPath();
  v8 = MEMORY[0x1940133E4](a1, KeyPath);
  swift_release();
  if ((v8 & 1) != 0)
  {
    v9 = (uint64_t)(v1 + 1);
    v10 = (uint64_t *)&unk_1EE1EF618;
    goto LABEL_7;
  }
  v11 = swift_getKeyPath();
  v12 = MEMORY[0x1940133E4](a1, v11);
  swift_release();
  if ((v12 & 1) != 0)
  {
    v9 = (uint64_t)v1 + 24;
    v10 = (uint64_t *)&unk_1EE1EF610;
    goto LABEL_7;
  }
  v13 = swift_getKeyPath();
  v14 = MEMORY[0x1940133E4](a1, v13);
  swift_release();
  if ((v14 & 1) != 0)
  {
    v9 = (uint64_t)(v1 + 2);
    v10 = (uint64_t *)&unk_1EE1EF608;
LABEL_7:
    sub_1908B4BD4(v9, (uint64_t)v53, v10);
    sub_1908B4BD4((uint64_t)v53, (uint64_t)&v55, v10);
    if (!(_QWORD)v55)
      return 0;
    v54 = MEMORY[0x1E0DEE9D8];
    v15 = *(_QWORD *)(v55 + 16);
    sub_190A4837C();
    v3 = v54;
    if (v15)
      goto LABEL_9;
    return v3;
  }
  v55 = *v1;
  v17 = swift_getKeyPath();
  v18 = MEMORY[0x1940133E4](a1, v17);
  swift_release();
  if ((v18 & 1) == 0)
  {
    v30 = swift_getKeyPath();
    v31 = MEMORY[0x1940133E4](a1, v30);
    swift_release();
    if ((v31 & 1) == 0)
    {
      v45 = v55;
      v46 = *(os_unfair_lock_s **)(v55 + 16);
      sub_190917544((uint64_t)&v55);
      swift_retain();
      os_unfair_lock_lock(v46);
      v3 = sub_1908B7A4C(a1);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v45 + 16));
      swift_release();
      sub_190A45C1C((uint64_t)&v55);
      return v3;
    }
    v32 = swift_getKeyPath();
    v33 = v55;
    v34 = *(os_unfair_lock_s **)(v55 + 16);
    sub_190917544((uint64_t)&v55);
    swift_retain();
    os_unfair_lock_lock(v34);
    v20 = sub_1908B7A68(v32);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 16));
    swift_release();
    swift_release();
    sub_190A45C1C((uint64_t)&v55);
    if (v20)
    {
      if (v20 >> 62)
        goto LABEL_52;
      v35 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_29;
    }
    return 0;
  }
  v19 = swift_getKeyPath();
  v20 = v55;
  v21 = *(os_unfair_lock_s **)(v55 + 16);
  swift_retain();
  sub_190917544((uint64_t)&v55);
  os_unfair_lock_lock(v21);
  v3 = sub_1908B7A68(v19);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));
  swift_release();
  swift_release();
  sub_190A45C1C((uint64_t)&v55);
  if (!v3)
    return v3;
  if (v3 >> 62)
    goto LABEL_47;
  v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x1E0DEE9D8];
LABEL_49:
    v53[0] = MEMORY[0x1E0DEE9D8];
    sub_190A4837C();
    v48 = *(_QWORD *)(v23 + 16);
    v3 = v53[0];
    swift_bridgeObjectRelease();
    if (!v48)
      return v3;
    goto LABEL_9;
  }
  while (1)
  {
    v53[0] = MEMORY[0x1E0DEE9D8];
    sub_1908B8CE0(0, v6 & ~(v6 >> 63), 0);
    if ((v6 & 0x8000000000000000) == 0)
    {
      v22 = 0;
      v23 = v53[0];
      do
      {
        if ((v3 & 0xC000000000000001) != 0)
          v24 = (id)MEMORY[0x194013510](v22, v3);
        else
          v24 = *(id *)(v3 + 8 * v22 + 32);
        v25 = v24;
        objc_msgSend(v24, sel_scale, v50);
        v27 = v26;

        v53[0] = v23;
        v29 = *(_QWORD *)(v23 + 16);
        v28 = *(_QWORD *)(v23 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_1908B8CE0(v28 > 1, v29 + 1, 1);
          v23 = v53[0];
        }
        ++v22;
        *(_QWORD *)(v23 + 16) = v29 + 1;
        *(_QWORD *)(v23 + 8 * v29 + 32) = v27;
      }
      while (v6 != v22);
      swift_bridgeObjectRelease();
      goto LABEL_49;
    }
    __break(1u);
LABEL_52:
    swift_bridgeObjectRetain();
    v35 = sub_190A48484();
    swift_bridgeObjectRelease();
LABEL_29:
    v36 = MEMORY[0x1E0DEE9D8];
    if (!v35)
      break;
    v54 = MEMORY[0x1E0DEE9D8];
    v37 = (id)sub_1908B8CB4(0, v35 & ~(v35 >> 63), 0);
    if (v35 < 0)
    {
      __break(1u);
LABEL_54:
      v53[0] = 0;
      v53[1] = 0xE000000000000000;
      v49 = v37;
      sub_190A48298();
      sub_190A47B3C();
      v52 = v49;
      type metadata accessor for CHSDisplayGamut(0);
      sub_190A483DC();
      result = sub_190A48448();
      __break(1u);
      return result;
    }
    v38 = 0;
    v39 = v54;
    v51 = v20 & 0xC000000000000001;
    LODWORD(v50) = *MEMORY[0x1E0CD8A98];
    HIDWORD(v50) = *MEMORY[0x1E0CD8AA0];
    while (v35 != v38)
    {
      if (v51)
        v40 = (id)MEMORY[0x194013510](v38, v20);
      else
        v40 = *(id *)(v20 + 8 * v38 + 32);
      v41 = v40;
      v37 = objc_msgSend(v40, sel_colorGamut, v50);
      v42 = HIDWORD(v50);
      if (v37)
      {
        v42 = v50;
        if (v37 != (id)1)
          goto LABEL_54;
      }
      (*(void (**)(uint64_t, uint64_t, unint64_t))(v4 + 104))(v6, v42, v3);

      v54 = v39;
      v44 = *(_QWORD *)(v39 + 16);
      v43 = *(_QWORD *)(v39 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_1908B8CB4(v43 > 1, v44 + 1, 1);
        v39 = v54;
      }
      ++v38;
      *(_QWORD *)(v39 + 16) = v44 + 1;
      (*(void (**)(unint64_t, uint64_t, unint64_t))(v4 + 32))(v39+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v44, v6, v3);
      if (v35 == v38)
      {
        swift_bridgeObjectRelease();
        v36 = MEMORY[0x1E0DEE9D8];
        goto LABEL_44;
      }
    }
    __break(1u);
LABEL_47:
    swift_bridgeObjectRetain();
    v6 = sub_190A48484();
    swift_bridgeObjectRelease();
    if (!v6)
      goto LABEL_48;
  }
  swift_bridgeObjectRelease();
  v39 = MEMORY[0x1E0DEE9D8];
LABEL_44:
  v53[0] = v36;
  v47 = *(_QWORD *)(v39 + 16);
  sub_190A4837C();
  v3 = v53[0];
  swift_bridgeObjectRelease();
  if (v47)
  {
LABEL_9:
    swift_release();
    return 0;
  }
  return v3;
}

uint64_t sub_190A44EBC()
{
  return sub_190A46BAC();
}

uint64_t sub_190A44EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1908EADC8(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CB0E38], (uint64_t (*)(char *))MEMORY[0x1E0CDA920]);
}

uint64_t sub_190A44F00(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  sub_1908B8CE0(0, v2, 0);
  result = v8;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    v5 = *(_QWORD *)(v8 + 16);
    do
    {
      v6 = *v4;
      v9 = result;
      v7 = *(_QWORD *)(result + 24);
      if (v5 >= v7 >> 1)
      {
        sub_1908B8CE0(v7 > 1, v5 + 1, 1);
        result = v9;
      }
      *(_QWORD *)(result + 16) = v5 + 1;
      *(_QWORD *)(result + 8 * v5 + 32) = v6;
      ++v4;
      ++v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_190A44FC8()
{
  return sub_190A46BDC();
}

uint64_t sub_190A44FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1908EADC8(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CB11F0], (uint64_t (*)(char *))MEMORY[0x1E0CDA970]);
}

uint64_t _s9WidgetKit23TimelineProviderContextV19EnvironmentVariantsV13dynamicMemberSayxGSgs15WritableKeyPathCy7SwiftUI0F6ValuesVxG_tcluig_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  os_unfair_lock_s *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;

  v51 = *a1;
  v49 = sub_190A466FC();
  v3 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v5 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v50 = (id)v1[1];
  v8 = v1[2];
  v7 = v1[3];
  v9 = v1[4];
  sub_190A481CC();
  KeyPath = swift_getKeyPath();
  v11 = MEMORY[0x1940133E4](a1, KeyPath);
  swift_release();
  if ((v11 & 1) != 0)
  {
    if (v8)
    {
      sub_190A46180();
      return sub_190A484E4();
    }
    return 0;
  }
  v12 = swift_getKeyPath();
  v13 = MEMORY[0x1940133E4](a1, v12);
  swift_release();
  if ((v13 & 1) != 0)
  {
    if (v7)
    {
      sub_190A4618C();
      return sub_190A484E4();
    }
    return 0;
  }
  v14 = swift_getKeyPath();
  v15 = MEMORY[0x1940133E4](a1, v14);
  swift_release();
  if ((v15 & 1) != 0)
  {
    if (v9)
    {
      sub_190A46888();
      return sub_190A484E4();
    }
    return 0;
  }
  v17 = swift_getKeyPath();
  v18 = MEMORY[0x1940133E4](a1, v17);
  swift_release();
  if ((v18 & 1) == 0)
  {
    v31 = swift_getKeyPath();
    v32 = MEMORY[0x1940133E4](a1, v31);
    swift_release();
    if ((v32 & 1) == 0)
    {
      v54 = v6;
      v46 = v50;
      v55 = (unint64_t)v50;
      swift_retain();
      v47 = v46;
      v22 = WidgetEnvironment.subscript.getter((uint64_t)a1);

      swift_release();
      return v22;
    }
    v33 = swift_getKeyPath();
    v34 = *(os_unfair_lock_s **)(v6 + 16);
    swift_retain_n();
    v18 = (uint64_t)v50;
    os_unfair_lock_lock(v34);
    v15 = sub_1908B7A68(v33);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));

    swift_release();
    swift_release_n();
    if (!v15)
      return 0;
    if (v15 >> 62)
      goto LABEL_47;
    v35 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v22 = v49;
    if (v35)
      goto LABEL_28;
LABEL_48:
    swift_bridgeObjectRelease();
    v22 = sub_190A484E4();
    swift_bridgeObjectRelease();
    return v22;
  }
  v19 = swift_getKeyPath();
  v3 = v6;
  v20 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain_n();
  v21 = v50;
  os_unfair_lock_lock(v20);
  v22 = sub_1908B7A68(v19);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));

  swift_release();
  swift_release_n();
  if (!v22)
    return v22;
  if (v22 >> 62)
    goto LABEL_44;
  v5 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    goto LABEL_48;
  while (1)
  {
    v54 = MEMORY[0x1E0DEE9D8];
    sub_1908B8CE0(0, v5 & ~(v5 >> 63), 0);
    if ((v5 & 0x8000000000000000) == 0)
    {
      v23 = 0;
      v24 = v54;
      do
      {
        if ((v22 & 0xC000000000000001) != 0)
          v25 = (id)MEMORY[0x194013510](v23, v22);
        else
          v25 = *(id *)(v22 + 8 * v23 + 32);
        v26 = v25;
        objc_msgSend(v25, sel_scale);
        v28 = v27;

        v54 = v24;
        v30 = *(_QWORD *)(v24 + 16);
        v29 = *(_QWORD *)(v24 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_1908B8CE0(v29 > 1, v30 + 1, 1);
          v24 = v54;
        }
        ++v23;
        *(_QWORD *)(v24 + 16) = v30 + 1;
        *(_QWORD *)(v24 + 8 * v30 + 32) = v28;
      }
      while (v5 != v23);
      goto LABEL_48;
    }
    __break(1u);
LABEL_47:
    swift_bridgeObjectRetain();
    v35 = sub_190A48484();
    swift_bridgeObjectRelease();
    v22 = v49;
    if (!v35)
      goto LABEL_48;
LABEL_28:
    v53 = MEMORY[0x1E0DEE9D8];
    sub_1908B8CB4(0, v35 & ~(v35 >> 63), 0);
    if (v35 < 0)
      break;
    v36 = 0;
    v37 = v53;
    v50 = (id)(v15 & 0xC000000000000001);
    LODWORD(v49) = *MEMORY[0x1E0CD8A98];
    v38 = *MEMORY[0x1E0CD8AA0];
    v39 = v15;
    while (v35 != v36)
    {
      if (v50)
        v40 = (id)MEMORY[0x194013510](v36, v15);
      else
        v40 = *(id *)(v15 + 8 * v36 + 32);
      v41 = v40;
      v42 = objc_msgSend(v40, sel_colorGamut);
      v43 = v38;
      if (v42)
      {
        v18 = (uint64_t)v42;
        v43 = v49;
        if (v42 != (id)1)
          goto LABEL_50;
      }
      (*(void (**)(uint64_t, uint64_t, unint64_t))(v3 + 104))(v5, v43, v22);

      v53 = v37;
      v45 = *(_QWORD *)(v37 + 16);
      v44 = *(_QWORD *)(v37 + 24);
      v18 = v45 + 1;
      if (v45 >= v44 >> 1)
      {
        sub_1908B8CB4(v44 > 1, v45 + 1, 1);
        v37 = v53;
      }
      ++v36;
      *(_QWORD *)(v37 + 16) = v18;
      (*(void (**)(unint64_t, uint64_t, unint64_t))(v3 + 32))(v37+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v45, v5, v22);
      v15 = v39;
      if (v35 == v36)
        goto LABEL_48;
    }
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
    v5 = sub_190A48484();
    swift_bridgeObjectRelease();
    if (!v5)
      goto LABEL_48;
  }
  __break(1u);
LABEL_50:
  v54 = 0;
  v55 = 0xE000000000000000;
  sub_190A48298();
  sub_190A47B3C();
  v52 = v18;
  type metadata accessor for CHSDisplayGamut(0);
  sub_190A483DC();
  result = sub_190A48448();
  __break(1u);
  return result;
}

uint64_t TimelineProviderContext.environmentVariants.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v2 = (void *)v1[1];
  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  v6 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void TimelineProviderContext.family.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 40);
}

void TimelineProviderContext.internalFamily.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 41);
}

uint64_t TimelineProviderContext.isPreview.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 42);
}

double TimelineProviderContext.displaySize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

void TimelineProviderContext.archiveVersion.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 64);
}

uint64_t initializeWithCopy for TimelineProviderContext(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_retain();
  v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TimelineProviderContext(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for TimelineProviderContext(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_release();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for TimelineProviderContext(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TimelineProviderContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TimelineProviderContext()
{
  return &type metadata for TimelineProviderContext;
}

uint64_t _s9WidgetKit23TimelineProviderContextV19EnvironmentVariantsVwxx_0(uint64_t a1)
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for TimelineProviderContext.EnvironmentVariants(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TimelineProviderContext.EnvironmentVariants(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TimelineProviderContext.EnvironmentVariants(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_release();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

