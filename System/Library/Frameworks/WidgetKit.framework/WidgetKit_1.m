uint64_t _s9WidgetKit21ControlTemplateButtonV6OptionV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;

  v4 = sub_190A47260();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA440);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v50 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v50 - v18;
  v20 = a1[1];
  v21 = a2[1];
  if (!v20)
  {
    if (v21)
      return 0;
    goto LABEL_8;
  }
  if (!v21)
    return 0;
  if (*a1 == *a2 && v20 == v21 || (v22 = sub_190A486DC(), result = 0, (v22 & 1) != 0))
  {
LABEL_8:
    v24 = a1[3];
    v25 = a2[3];
    if (v24)
    {
      if (!v25)
        return 0;
      if (a1[2] != a2[2] || v24 != v25)
      {
        v26 = sub_190A486DC();
        result = 0;
        if ((v26 & 1) == 0)
          return result;
      }
    }
    else if (v25)
    {
      return 0;
    }
    v50 = v7;
    v27 = type metadata accessor for ControlTemplateButton.Option(0);
    v28 = *(int *)(v27 + 24);
    v52 = a1;
    sub_1908AAA48((uint64_t)a1 + v28, (uint64_t)v19, (uint64_t *)&unk_1ECF6A3B8);
    v51 = v27;
    v29 = *(int *)(v27 + 24);
    v53 = a2;
    sub_1908AAA48((uint64_t)a2 + v29, (uint64_t)v17, (uint64_t *)&unk_1ECF6A3B8);
    v30 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1908AAA48((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1ECF6A3B8);
    sub_1908AAA48((uint64_t)v17, v30, (uint64_t *)&unk_1ECF6A3B8);
    v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v31((uint64_t)v10, 1, v4) == 1)
    {
      sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6A3B8);
      sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6A3B8);
      if (v31(v30, 1, v4) == 1)
      {
        sub_1908AA544((uint64_t)v10, (uint64_t *)&unk_1ECF6A3B8);
LABEL_24:
        v36 = v51;
        v35 = v52;
        v37 = *(int *)(v51 + 28);
        v38 = v53;
        if ((*((_BYTE *)v52 + v37 + 16) & 1) != 0)
        {
          if (!*((_BYTE *)v53 + v37 + 16))
            return 0;
        }
        else if ((*((_BYTE *)v53 + v37 + 16) & 1) != 0 || (sub_190A4768C() & 1) == 0)
        {
          return 0;
        }
        v39 = *(int *)(v36 + 32);
        v40 = (_QWORD *)((char *)v35 + v39);
        v41 = *(_QWORD *)((char *)v35 + v39 + 8);
        v42 = (_QWORD *)((char *)v38 + v39);
        v43 = v42[1];
        if (v41)
        {
          if (!v43)
            return 0;
          if (*v40 != *v42 || v41 != v43)
          {
            v44 = sub_190A486DC();
            result = 0;
            if ((v44 & 1) == 0)
              return result;
          }
        }
        else if (v43)
        {
          return 0;
        }
        v45 = *(int *)(v36 + 36);
        v46 = (_QWORD *)((char *)v35 + v45);
        v47 = *(_QWORD *)((char *)v35 + v45 + 8);
        v48 = (_QWORD *)((char *)v38 + v45);
        v49 = v48[1];
        if (v47)
        {
          if (v49 && (*v46 == *v48 && v47 == v49 || (sub_190A486DC() & 1) != 0))
            return 1;
        }
        else if (!v49)
        {
          return 1;
        }
        return 0;
      }
    }
    else
    {
      sub_1908AAA48((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_1ECF6A3B8);
      if (v31(v30, 1, v4) != 1)
      {
        v32 = v50;
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v50, v30, v4);
        sub_1908AA2F4(&qword_1EE1ECED0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDCD18], MEMORY[0x1E0CDCD30]);
        v33 = sub_190A47AAC();
        v34 = *(void (**)(char *, uint64_t))(v5 + 8);
        v34(v32, v4);
        sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6A3B8);
        sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6A3B8);
        v34(v14, v4);
        sub_1908AA544((uint64_t)v10, (uint64_t *)&unk_1ECF6A3B8);
        if ((v33 & 1) == 0)
          return 0;
        goto LABEL_24;
      }
      sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6A3B8);
      sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6A3B8);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    }
    sub_1908AA544((uint64_t)v10, &qword_1EE1EA440);
    return 0;
  }
  return result;
}

unint64_t sub_19092BC14()
{
  unint64_t result;

  result = qword_1EE1EBB38;
  if (!qword_1EE1EBB38)
  {
    result = MEMORY[0x19401429C](&unk_190A4E84C, &type metadata for ControlTemplateButton.Option.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBB38);
  }
  return result;
}

uint64_t sub_19092BC58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ControlTemplateButton.Option(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_19092BC9C()
{
  unint64_t result;

  result = qword_1EE1EBB20;
  if (!qword_1EE1EBB20)
  {
    result = MEMORY[0x19401429C](&unk_190A4E7FC, &type metadata for ControlTemplateButton.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBB20);
  }
  return result;
}

unint64_t sub_19092BCE0()
{
  unint64_t result;

  result = qword_1EE1EA3F8;
  if (!qword_1EE1EA3F8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ControlAction, &type metadata for ControlAction);
    atomic_store(result, (unint64_t *)&qword_1EE1EA3F8);
  }
  return result;
}

unint64_t sub_19092BD24()
{
  unint64_t result;

  result = qword_1EE1EB1B0;
  if (!qword_1EE1EB1B0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ControlAction, &type metadata for ControlAction);
    atomic_store(result, (unint64_t *)&qword_1EE1EB1B0);
  }
  return result;
}

uint64_t sub_19092BD68(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1908AA2F4(qword_1EE1EBB50, type metadata accessor for ControlTemplateButton, (uint64_t)&protocol conformance descriptor for ControlTemplateButton);
  a1[2] = sub_1908AA2F4(&qword_1EE1EB6C0, type metadata accessor for ControlTemplateButton, (uint64_t)&protocol conformance descriptor for ControlTemplateButton);
  result = sub_1908AA2F4(&qword_1EE1EA470, type metadata accessor for ControlTemplateButton, (uint64_t)&protocol conformance descriptor for ControlTemplateButton);
  a1[3] = result;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ControlTemplateButton(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v64;
  char *v65;
  unsigned int (*v66)(char *, uint64_t, uint64_t);
  char *__dst;
  int *__dsta;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
    v10 = v9[6];
    __dst = (char *)v4 + v10;
    v11 = (char *)a2 + v10;
    v12 = sub_190A47260();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v66 = v14;
    v64 = v13;
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v17 = v9[7];
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    *(_OWORD *)v18 = *(_OWORD *)v19;
    v18[16] = v19[16];
    v20 = v9[8];
    v21 = (_QWORD *)((char *)v4 + v20);
    v22 = (_QWORD *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = v9[9];
    v25 = (_QWORD *)((char *)v4 + v24);
    v26 = (_QWORD *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    __dsta = a3;
    v28 = a3[5];
    v29 = (_QWORD *)((char *)v4 + v28);
    v30 = (char *)a2 + v28;
    v31 = *(_QWORD *)((char *)a2 + v28 + 8);
    *v29 = *(_QWORD *)((char *)a2 + v28);
    v29[1] = v31;
    v32 = *(_QWORD *)((char *)a2 + v28 + 24);
    v29[2] = *(_QWORD *)((char *)a2 + v28 + 16);
    v29[3] = v32;
    v33 = v9[6];
    v65 = (char *)v29 + v33;
    v34 = &v30[v33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v66(v34, 1, v12))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
      memcpy(v65, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v65, v34, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v65, 0, 1, v12);
    }
    v36 = v9[7];
    v37 = (char *)v29 + v36;
    v38 = &v30[v36];
    *(_OWORD *)v37 = *(_OWORD *)v38;
    v37[16] = v38[16];
    v39 = v9[8];
    v40 = (_QWORD *)((char *)v29 + v39);
    v41 = &v30[v39];
    v42 = *((_QWORD *)v41 + 1);
    *v40 = *(_QWORD *)v41;
    v40[1] = v42;
    v43 = v9[9];
    v44 = (_QWORD *)((char *)v29 + v43);
    v45 = &v30[v43];
    v46 = *((_QWORD *)v45 + 1);
    *v44 = *(_QWORD *)v45;
    v44[1] = v46;
    v47 = __dsta[6];
    v48 = __dsta[7];
    v49 = *(void **)((char *)a2 + v47);
    *(_QWORD *)((char *)v4 + v47) = v49;
    v50 = (char *)v4 + v48;
    v51 = (char *)a2 + v48;
    v52 = sub_190A45FC4();
    v53 = *(_QWORD *)(v52 - 8);
    v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v55 = v49;
    if (v54(v51, 1, v52))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    }
    v57 = __dsta[9];
    *((_BYTE *)v4 + __dsta[8]) = *((_BYTE *)a2 + __dsta[8]);
    *((_BYTE *)v4 + v57) = *((_BYTE *)a2 + v57);
    v58 = __dsta[10];
    v59 = __dsta[11];
    v60 = (_QWORD *)((char *)v4 + v58);
    v61 = (_QWORD *)((char *)a2 + v58);
    v62 = v61[1];
    *v60 = *v61;
    v60[1] = v62;
    *((_BYTE *)v4 + v59) = *((_BYTE *)a2 + v59);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ControlTemplateButton(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for ControlTemplateButton.Option(0);
  v5 = a1 + *(int *)(v4 + 24);
  v6 = sub_190A47260();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = a1 + a2[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = v9 + *(int *)(v4 + 24);
  if (!v8(v10, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v11 = a1 + a2[7];
  v12 = sub_190A45FC4();
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ControlTemplateButton(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(char *, uint64_t, uint64_t);
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v62;
  char *__dst;
  unsigned int (*v64)(char *, uint64_t, uint64_t);

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_190A47260();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v64 = v13;
  v62 = v12;
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = v7[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  v16[16] = v17[16];
  v18 = v7[8];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = v7[9];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = a3[5];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (char *)a2 + v26;
  v29 = *(_QWORD *)((char *)a2 + v26 + 8);
  *v27 = *(_QWORD *)((char *)a2 + v26);
  v27[1] = v29;
  v30 = *(_QWORD *)((char *)a2 + v26 + 24);
  v27[2] = *(_QWORD *)((char *)a2 + v26 + 16);
  v27[3] = v30;
  v31 = v7[6];
  __dst = (char *)v27 + v31;
  v32 = &v28[v31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v64(v32, 1, v11))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(__dst, v32, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(__dst, 0, 1, v11);
  }
  v34 = v7[7];
  v35 = (char *)v27 + v34;
  v36 = &v28[v34];
  *(_OWORD *)v35 = *(_OWORD *)v36;
  v35[16] = v36[16];
  v37 = v7[8];
  v38 = (_QWORD *)((char *)v27 + v37);
  v39 = &v28[v37];
  v40 = *((_QWORD *)v39 + 1);
  *v38 = *(_QWORD *)v39;
  v38[1] = v40;
  v41 = v7[9];
  v42 = (_QWORD *)((char *)v27 + v41);
  v43 = &v28[v41];
  v44 = *((_QWORD *)v43 + 1);
  *v42 = *(_QWORD *)v43;
  v42[1] = v44;
  v45 = a3[6];
  v46 = a3[7];
  v47 = *(void **)((char *)a2 + v45);
  *(_QWORD *)((char *)a1 + v45) = v47;
  v48 = (char *)a1 + v46;
  v49 = (char *)a2 + v46;
  v50 = sub_190A45FC4();
  v51 = *(_QWORD *)(v50 - 8);
  v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v53 = v47;
  if (v52(v49, 1, v50))
  {
    v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  v55 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v55) = *((_BYTE *)a2 + v55);
  v56 = a3[10];
  v57 = a3[11];
  v58 = (_QWORD *)((char *)a1 + v56);
  v59 = (_QWORD *)((char *)a2 + v56);
  v60 = v59[1];
  *v58 = *v59;
  v58[1] = v60;
  *((_BYTE *)a1 + v57) = *((_BYTE *)a2 + v57);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ControlTemplateButton(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v62;
  int *v63;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_190A47260();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  v62 = v11;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = v6[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_OWORD *)v18;
  v17[16] = v18[16];
  *(_OWORD *)v17 = v19;
  v20 = v6[8];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = v6[9];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v63 = a3;
  v26 = a3[5];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  *(_QWORD *)v27 = *(_QWORD *)((char *)a2 + v26);
  *((_QWORD *)v27 + 1) = *(_QWORD *)((char *)a2 + v26 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
  *((_QWORD *)v27 + 3) = *((_QWORD *)v28 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = v6[6];
  v30 = &v27[v29];
  v31 = &v28[v29];
  v32 = v12(&v27[v29], 1, v10);
  v33 = v12(v31, 1, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v30, v31, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v30, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v30, v10);
LABEL_12:
    v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v62 + 24))(v30, v31, v10);
LABEL_13:
  v35 = v6[7];
  v36 = &v27[v35];
  v37 = &v28[v35];
  v38 = *(_OWORD *)v37;
  v36[16] = v37[16];
  *(_OWORD *)v36 = v38;
  v39 = v6[8];
  v40 = &v27[v39];
  v41 = &v28[v39];
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = v6[9];
  v43 = &v27[v42];
  v44 = &v28[v42];
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *((_QWORD *)v43 + 1) = *((_QWORD *)v44 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = v63[6];
  v46 = *(void **)((char *)a1 + v45);
  v47 = *(void **)((char *)a2 + v45);
  *(_QWORD *)((char *)a1 + v45) = v47;
  v48 = v47;

  v49 = v63[7];
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = sub_190A45FC4();
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
  v55 = v54(v50, 1, v52);
  v56 = v54(v51, 1, v52);
  if (!v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 24))(v50, v51, v52);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v50, v52);
    goto LABEL_18;
  }
  if (v56)
  {
LABEL_18:
    v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
LABEL_19:
  *((_BYTE *)a1 + v63[8]) = *((_BYTE *)a2 + v63[8]);
  *((_BYTE *)a1 + v63[9]) = *((_BYTE *)a2 + v63[9]);
  v58 = v63[10];
  v59 = (_QWORD *)((char *)a1 + v58);
  v60 = (_QWORD *)((char *)a2 + v58);
  *v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v63[11]) = *((_BYTE *)a2 + v63[11]);
  return a1;
}

_OWORD *initializeWithTake for ControlTemplateButton(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  _OWORD *v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v37)(char *, uint64_t, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_190A47260();
  v12 = *(_QWORD *)(v11 - 8);
  v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v37(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = v7[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v15[16] = v16[16];
  *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)((char *)a2 + v7[8]);
  *(_OWORD *)((char *)a1 + v7[9]) = *(_OWORD *)((char *)a2 + v7[9]);
  v17 = a3[5];
  v18 = (_OWORD *)((char *)a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = *(_OWORD *)((char *)a2 + v17 + 16);
  *v18 = *(_OWORD *)((char *)a2 + v17);
  v18[1] = v20;
  v21 = v7[6];
  v22 = (char *)v18 + v21;
  v23 = &v19[v21];
  if (v37(&v19[v21], 1, v11))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v22, v23, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
  }
  v25 = v7[7];
  v26 = (char *)v18 + v25;
  v27 = &v19[v25];
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v26[16] = v27[16];
  *(_OWORD *)((char *)v18 + v7[8]) = *(_OWORD *)&v19[v7[8]];
  *(_OWORD *)((char *)v18 + v7[9]) = *(_OWORD *)&v19[v7[9]];
  v28 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = sub_190A45FC4();
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  v34 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v34) = *((_BYTE *)a2 + v34);
  v35 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *((_BYTE *)a1 + v35) = *((_BYTE *)a2 + v35);
  return a1;
}

_QWORD *assignWithTake for ControlTemplateButton(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(char *, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  int *v74;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  v9 = v8[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_190A47260();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  v73 = v13;
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  v18 = v8[7];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  v19[16] = v20[16];
  v21 = v8[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = v8[9];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v74 = a3;
  v31 = a3[5];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = *(_QWORD *)((char *)a2 + v31 + 8);
  *(_QWORD *)v32 = *(_QWORD *)((char *)a2 + v31);
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  v35 = *((_QWORD *)v33 + 3);
  *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
  *((_QWORD *)v32 + 3) = v35;
  swift_bridgeObjectRelease();
  v36 = v8[6];
  v37 = &v32[v36];
  v38 = &v33[v36];
  v39 = v14(&v32[v36], 1, v12);
  v40 = v14(v38, 1, v12);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v37, v38, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v37, 0, 1, v12);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v73 + 8))(v37, v12);
LABEL_12:
    v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v73 + 40))(v37, v38, v12);
LABEL_13:
  v42 = v8[7];
  v43 = &v32[v42];
  v44 = &v33[v42];
  *(_OWORD *)v43 = *(_OWORD *)v44;
  v43[16] = v44[16];
  v45 = v8[8];
  v46 = &v32[v45];
  v47 = &v33[v45];
  v49 = *(_QWORD *)v47;
  v48 = *((_QWORD *)v47 + 1);
  *(_QWORD *)v46 = v49;
  *((_QWORD *)v46 + 1) = v48;
  swift_bridgeObjectRelease();
  v50 = v8[9];
  v51 = &v32[v50];
  v52 = &v33[v50];
  v54 = *(_QWORD *)v52;
  v53 = *((_QWORD *)v52 + 1);
  *(_QWORD *)v51 = v54;
  *((_QWORD *)v51 + 1) = v53;
  swift_bridgeObjectRelease();
  v55 = v74[6];
  v56 = *(void **)((char *)a1 + v55);
  *(_QWORD *)((char *)a1 + v55) = *(_QWORD *)((char *)a2 + v55);

  v57 = v74[7];
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  v60 = sub_190A45FC4();
  v61 = *(_QWORD *)(v60 - 8);
  v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
  v63 = v62(v58, 1, v60);
  v64 = v62(v59, 1, v60);
  if (!v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 40))(v58, v59, v60);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v61 + 8))(v58, v60);
    goto LABEL_18;
  }
  if (v64)
  {
LABEL_18:
    v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v58, v59, v60);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
LABEL_19:
  v66 = v74[9];
  *((_BYTE *)a1 + v74[8]) = *((_BYTE *)a2 + v74[8]);
  *((_BYTE *)a1 + v66) = *((_BYTE *)a2 + v66);
  v67 = v74[10];
  v68 = (_QWORD *)((char *)a1 + v67);
  v69 = (_QWORD *)((char *)a2 + v67);
  v71 = *v69;
  v70 = v69[1];
  *v68 = v71;
  v68[1] = v70;
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v74[11]) = *((_BYTE *)a2 + v74[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlTemplateButton()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19092D0F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = type metadata accessor for ControlTemplateButton.Option(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ControlTemplateButton()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19092D1BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for ControlTemplateButton.Option(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_19092D264()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for ControlTemplateButton.Option(319);
  if (v0 <= 0x3F)
  {
    sub_1908BBFB0(319, (unint64_t *)&qword_1ECF6D220, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ControlTemplateButton.Option(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_190A47260();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = a3[7];
    v18 = a3[8];
    v19 = (char *)v4 + v17;
    v20 = (char *)a2 + v17;
    *(_OWORD *)v19 = *(_OWORD *)v20;
    v19[16] = v20[16];
    v21 = (uint64_t *)((char *)v4 + v18);
    v22 = (uint64_t *)((char *)a2 + v18);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = a3[9];
    v25 = (uint64_t *)((char *)v4 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ControlTemplateButton.Option(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_190A47260();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ControlTemplateButton.Option(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_190A47260();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[7];
  v16 = a3[8];
  v17 = (char *)a1 + v15;
  v18 = (char *)a2 + v15;
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v17[16] = v18[16];
  v19 = (_QWORD *)((char *)a1 + v16);
  v20 = (_QWORD *)((char *)a2 + v16);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = a3[9];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ControlTemplateButton.Option(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_190A47260();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_OWORD *)v17;
  v16[16] = v17[16];
  *(_OWORD *)v16 = v18;
  v19 = a3[8];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[9];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ControlTemplateButton.Option(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_190A47260();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[7];
  v14 = a3[8];
  v15 = (char *)a1 + v13;
  v16 = (char *)a2 + v13;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v15[16] = v16[16];
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  return a1;
}

_QWORD *assignWithTake for ControlTemplateButton.Option(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_190A47260();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  v17 = a3[7];
  v18 = a3[8];
  v19 = (char *)a1 + v17;
  v20 = (char *)a2 + v17;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  v19[16] = v20[16];
  v21 = (_QWORD *)((char *)a1 + v18);
  v22 = (_QWORD *)((char *)a2 + v18);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[9];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlTemplateButton.Option()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19092DAA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ControlTemplateButton.Option()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19092DB38(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_19092DBB0()
{
  unint64_t v0;

  sub_1908BBFB0(319, &qword_1ECF6BEB8, (void (*)(uint64_t))MEMORY[0x1E0CDCD18]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t getEnumTagSinglePayload for WidgetFamily(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlTemplateButton.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_19092DD1C + 4 * byte_190A4E443[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_19092DD50 + 4 * byte_190A4E43E[v4]))();
}

uint64_t sub_19092DD50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19092DD58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19092DD60);
  return result;
}

uint64_t sub_19092DD6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19092DD74);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_19092DD78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19092DD80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplateButton.CodingKeys()
{
  return &type metadata for ControlTemplateButton.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ControlTemplateButton.Option.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_19092DDE8 + 4 * byte_190A4E44D[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_19092DE1C + 4 * byte_190A4E448[v4]))();
}

uint64_t sub_19092DE1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19092DE24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19092DE2CLL);
  return result;
}

uint64_t sub_19092DE38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19092DE40);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_19092DE44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19092DE4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplateButton.Option.CodingKeys()
{
  return &type metadata for ControlTemplateButton.Option.CodingKeys;
}

unint64_t sub_19092DE6C()
{
  unint64_t result;

  result = qword_1EE1ED1B8;
  if (!qword_1EE1ED1B8)
  {
    result = MEMORY[0x19401429C](&unk_190A4E71C, &type metadata for ControlTemplateButton.Option.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ED1B8);
  }
  return result;
}

unint64_t sub_19092DEB4()
{
  unint64_t result;

  result = qword_1EE1ED1C0;
  if (!qword_1EE1ED1C0)
  {
    result = MEMORY[0x19401429C](&unk_190A4E7D4, &type metadata for ControlTemplateButton.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ED1C0);
  }
  return result;
}

unint64_t sub_19092DEFC()
{
  unint64_t result;

  result = qword_1EE1EBB30;
  if (!qword_1EE1EBB30)
  {
    result = MEMORY[0x19401429C](&unk_190A4E744, &type metadata for ControlTemplateButton.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBB30);
  }
  return result;
}

unint64_t sub_19092DF44()
{
  unint64_t result;

  result = qword_1EE1EBB28;
  if (!qword_1EE1EBB28)
  {
    result = MEMORY[0x19401429C](&unk_190A4E76C, &type metadata for ControlTemplateButton.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBB28);
  }
  return result;
}

unint64_t sub_19092DF8C()
{
  unint64_t result;

  result = qword_1EE1EBB48;
  if (!qword_1EE1EBB48)
  {
    result = MEMORY[0x19401429C](&unk_190A4E68C, &type metadata for ControlTemplateButton.Option.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBB48);
  }
  return result;
}

unint64_t sub_19092DFD4()
{
  unint64_t result;

  result = qword_1EE1EBB40;
  if (!qword_1EE1EBB40)
  {
    result = MEMORY[0x19401429C](&unk_190A4E6B4, &type metadata for ControlTemplateButton.Option.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBB40);
  }
  return result;
}

uint64_t sub_19092E018(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1852793705 && a2 == 0xE400000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1953393012 && a2 == 0xE400000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x69486E6F69746361 && a2 == 0xEA0000000000746ELL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_19092E274(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6576697463616E69 && a2 == 0xE800000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657669746361 && a2 == 0xE600000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746169636F737361 && a2 == 0xED00004C52556465 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000190A61460 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x64656C6261736964 && a2 == 0xE800000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000190A61480 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000190A614A0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

unint64_t sub_19092E5B8()
{
  unint64_t result;

  result = qword_1ECF6C5E0;
  if (!qword_1ECF6C5E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECF6C5E0);
  }
  return result;
}

uint64_t WidgetRelevanceRequest.kind.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_kind);
  swift_bridgeObjectRetain();
  return v1;
}

id WidgetRelevanceRequest.archiveFileHandle.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_archiveFileHandle);
}

id WidgetRelevanceRequest.__allocating_init(kind:archiveFileHandle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  char *v8;
  objc_super v10;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = &v7[OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_kind];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  *(_QWORD *)&v7[OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_archiveFileHandle] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

id WidgetRelevanceRequest.init(kind:archiveFileHandle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_super v6;

  v4 = &v3[OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_kind];
  *(_QWORD *)v4 = a1;
  *((_QWORD *)v4 + 1) = a2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_archiveFileHandle] = a3;
  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for WidgetRelevanceRequest();
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t type metadata accessor for WidgetRelevanceRequest()
{
  return objc_opt_self();
}

void sub_19092E714(void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;

  v3 = (void *)sub_190A47AC4();
  v4 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_archiveFileHandle);
  v6 = (id)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

}

uint64_t static WidgetRelevanceRequest.supportsSecureCoding.getter()
{
  return 1;
}

id WidgetRelevanceRequest.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return WidgetRelevanceRequest.init(coder:)(a1);
}

id WidgetRelevanceRequest.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  id v5;
  int v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  objc_class *v12;
  char *v13;
  char *v14;
  id v15;
  void *v17;
  uint64_t v18;
  objc_super v19;
  _BYTE v20[24];
  uint64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BCE0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_190A4A350;
  *(_QWORD *)(v4 + 32) = sub_1908AB890(0, (unint64_t *)&qword_1ECF6C7D0);
  v5 = v2;
  sub_190A48094();
  swift_bridgeObjectRelease();
  if (v21)
  {
    v6 = swift_dynamicCast();
    if (v6)
      v7 = v17;
    else
      v7 = 0;
    if (v6)
      v8 = v18;
    else
      v8 = 0;
  }
  else
  {
    sub_1908B4324((uint64_t)v20);
    v7 = 0;
    v8 = 0;
  }
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_190A4A350;
  *(_QWORD *)(v9 + 32) = sub_1908AB890(0, (unint64_t *)&unk_1ECF6D060);
  sub_190A48094();
  swift_bridgeObjectRelease();
  if (!v21)
  {
    sub_1908B4324((uint64_t)v20);
    if (v8)
      goto LABEL_17;
    v10 = 0;
LABEL_19:

    goto LABEL_20;
  }
  if (swift_dynamicCast())
    v10 = v17;
  else
    v10 = 0;
  if (!v8)
    goto LABEL_19;
  if (!v10)
  {
LABEL_17:
    swift_bridgeObjectRelease();

    v10 = v5;
LABEL_20:

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v11 = v10;

  v12 = (objc_class *)type metadata accessor for WidgetRelevanceRequest();
  v13 = (char *)objc_allocWithZone(v12);
  v14 = &v13[OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_kind];
  *(_QWORD *)v14 = v7;
  *((_QWORD *)v14 + 1) = v8;
  *(_QWORD *)&v13[OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_archiveFileHandle] = v11;
  v19.receiver = v13;
  v19.super_class = v12;
  v15 = objc_msgSendSuper2(&v19, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v15;
}

id WidgetRelevanceRequest.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void WidgetRelevanceRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id WidgetRelevanceRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WidgetRelevanceRequest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for WidgetRelevanceRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetRelevanceRequest.__allocating_init(kind:archiveFileHandle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of WidgetRelevanceRequest.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of WidgetRelevanceRequest.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t WidgetRelevances.init(_:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for WidgetRelevances(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WidgetRelevances);
}

uint64_t sub_19092EC28()
{
  return swift_allocateGenericValueMetadata();
}

_QWORD *sub_19092EC30(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_19092EC68(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlAction.Storage(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ControlAction.Storage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_19092ED3C(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_19092ED54(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

uint64_t type metadata accessor for WidgetRelevances.Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WidgetRelevances.Storage);
}

void sub_19092ED84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  uint64_t v6;

  v0 = sub_190A461BC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
  sub_190A461B0();
  v5 = (void *)sub_190A461A4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_setTimeZone_, v5);

  qword_1EE1ED260 = (uint64_t)v4;
}

uint64_t static WidgetRelevanceGroup.named(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return swift_bridgeObjectRetain();
}

void static WidgetRelevanceGroup.ungrouped.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

double static WidgetRelevanceGroup.automatic.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_190A4C1C0;
  return result;
}

unint64_t destroy for WidgetRelevanceGroup(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *_s9WidgetKit20WidgetRelevanceGroupVwCP_0(_QWORD *a1, _QWORD *a2)
{
  unint64_t v3;

  v3 = a2[1];
  if (v3 >= 2)
  {
    *a1 = *a2;
    a1[1] = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

_QWORD *assignWithCopy for WidgetRelevanceGroup(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] >= 2uLL)
  {
    if (v4 >= 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_19092EF58((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 < 2)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_19092EF58(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEA968] - 8) + 8))();
  return a1;
}

_QWORD *assignWithTake for WidgetRelevanceGroup(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  if (a1[1] >= 2uLL)
  {
    v4 = a2[1];
    if (v4 >= 2)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_19092EF58((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetRelevanceGroup(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 2;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetRelevanceGroup(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = a2 - 2147483646;
    *(_QWORD *)(result + 8) = 0;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetRelevanceGroup()
{
  return &type metadata for WidgetRelevanceGroup;
}

unint64_t destroy for WidgetRelevanceGroup.Storage(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s9WidgetKit20WidgetRelevanceGroupV7StorageOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for WidgetRelevanceGroup.Storage(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WidgetRelevanceGroup.Storage(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetRelevanceGroup.Storage(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WidgetRelevanceGroup.Storage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_19092F2B4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_19092F2CC(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetRelevanceGroup.Storage()
{
  return &type metadata for WidgetRelevanceGroup.Storage;
}

uint64_t EnvironmentValues.activityUpdateAvailability.getter()
{
  sub_190901C00();
  return sub_190A46C3C();
}

uint64_t EnvironmentValues.activityUpdateAvailability.setter()
{
  sub_190901C00();
  return sub_190A46C48();
}

uint64_t EnvironmentValues.isActivityUpdateReduced.getter()
{
  unsigned __int8 v1;

  sub_190901C00();
  sub_190A46C3C();
  return v1;
}

uint64_t EnvironmentValues.isActivityUpdateReduced.setter()
{
  sub_190901C00();
  return sub_190A46C48();
}

uint64_t (*EnvironmentValues.isActivityUpdateReduced.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_190901C00();
  sub_190A46C3C();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_19092F43C;
}

uint64_t sub_19092F43C(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_190A46C48();
}

WidgetKit::ActivityUpdateAvailability_optional __swiftcall ActivityUpdateAvailability.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (WidgetKit::ActivityUpdateAvailability_optional)rawValue;
}

uint64_t ActivityUpdateAvailability.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ActivityUpdateAvailability.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x64656375646572;
  else
    return 1819047270;
}

uint64_t sub_19092F4C8()
{
  sub_19092F9EC();
  return sub_190A47C38();
}

uint64_t sub_19092F524()
{
  sub_19092F9EC();
  return sub_190A47C20();
}

_QWORD *sub_19092F570@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_19092F590(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_19092F59C()
{
  _BYTE *v0;

  if (*v0)
    return 0x64656375646572;
  else
    return 1819047270;
}

uint64_t (*EnvironmentValues.activityUpdateAvailability.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = sub_190901C00();
  sub_190A46C3C();
  return sub_19092F43C;
}

unint64_t sub_19092F62C()
{
  unint64_t result;

  result = qword_1EE1ED268;
  if (!qword_1EE1ED268)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ActivityUpdateAvailability, &type metadata for ActivityUpdateAvailability);
    atomic_store(result, (unint64_t *)&qword_1EE1ED268);
  }
  return result;
}

uint64_t sub_19092F670()
{
  return MEMORY[0x1E0DEB430];
}

uint64_t sub_19092F67C()
{
  return MEMORY[0x1E0DEB448];
}

uint64_t sub_19092F688()
{
  return MEMORY[0x1E0DEB420];
}

uint64_t sub_19092F694()
{
  sub_19092F62C();
  return sub_190A4681C();
}

uint64_t sub_19092F6E4()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D478 = result;
  return result;
}

uint64_t sub_19092F708()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A988);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D460 = v0;
  *(_QWORD *)algn_1ECF6D468 = 0xD00000000000001ALL;
  qword_1ECF6D470 = 0x8000000190A60FA0;
  return result;
}

uint64_t sub_19092F77C()
{
  if (qword_1ECF6A998 != -1)
    swift_once();
  return swift_retain();
}

_QWORD *sub_19092F7BC@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;

  if (*result == 1)
  {
    v2 = 1;
  }
  else
  {
    v2 = 0;
    if (*result)
    {
      *a2 = 0;
      return result;
    }
  }
  *a2 = v2;
  return result;
}

unsigned __int8 *sub_19092F7EC@<X0>(unsigned __int8 *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_19092F7F8()
{
  uint64_t v0;

  if (qword_1ECF6A980 != -1)
    swift_once();
  v0 = qword_1ECF6D460;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_19092F86C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_190901C00();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_19092F8B8()
{
  sub_190901C00();
  return sub_190A46C48();
}

uint64_t storeEnumTagSinglePayload for ActivityUpdateAvailability(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19092F954 + 4 * byte_190A4E975[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19092F988 + 4 * asc_190A4E970[v4]))();
}

uint64_t sub_19092F988(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19092F990(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19092F998);
  return result;
}

uint64_t sub_19092F9A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19092F9ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19092F9B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19092F9B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityUpdateAvailability()
{
  return &type metadata for ActivityUpdateAvailability;
}

ValueMetadata *type metadata accessor for ActivityUpdateAvailabilityEnvironmentKey()
{
  return &type metadata for ActivityUpdateAvailabilityEnvironmentKey;
}

unint64_t sub_19092F9EC()
{
  unint64_t result;

  result = qword_1EE1ED270;
  if (!qword_1EE1ED270)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ActivityUpdateAvailability, &type metadata for ActivityUpdateAvailability);
    atomic_store(result, (unint64_t *)&qword_1EE1ED270);
  }
  return result;
}

uint64_t sub_19092FA30(void *a1, unsigned __int8 a2, void *a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t result;

  v6 = objc_msgSend(a1, sel_extensionBundleIdentifier);
  if (v6)
  {
    v7 = (uint64_t)v6;
    v8 = MEMORY[0x1E0DEE9E0];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1908FC3EC(v7, 0xD000000000000011, 0x8000000190A61990, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    v10 = objc_msgSend(a1, sel_kind);
    v11 = sub_190A47ADC();
    v13 = v12;

    sub_1908CA1DC(6uLL, v11, v13);
    swift_bridgeObjectRelease();
    v14 = sub_190A48154();
    swift_bridgeObjectRelease();
    v15 = swift_isUniquelyReferenced_nonNull_native();
    sub_1908FC3EC(v14, 0x694B746567646977, 0xEA0000000000646ELL, v15);
    swift_bridgeObjectRelease();
    if (a2 < 0xDu && ((0x13BFu >> a2) & 1) != 0)
    {
      v16 = sub_190A47DC4();
      v17 = swift_isUniquelyReferenced_nonNull_native();
      sub_1908FC3EC(v16, 0x796C696D6166, 0xE600000000000000, v17);
      swift_bridgeObjectRelease();
      objc_msgSend(a3, sel_size);
      v18 = sub_190A46294();
      v19 = swift_isUniquelyReferenced_nonNull_native();
      sub_1908FC3EC(v18, 0x746867696568, 0xE600000000000000, v19);
      swift_bridgeObjectRelease();
      objc_msgSend(a3, sel_size);
      v20 = sub_190A46294();
      v21 = swift_isUniquelyReferenced_nonNull_native();
      sub_1908FC3EC(v20, 0x6874646977, 0xE500000000000000, v21);
      swift_bridgeObjectRelease();
      return v8;
    }
  }
  else
  {
    __break(1u);
  }
  result = sub_190A486D0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Analytics()
{
  return objc_opt_self();
}

uint64_t Jindo.init<A, B, C, D>(expanded:compactLeading:compactTrailing:compactMinimal:)@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X2>, void (*a3)(void)@<X4>, void (*a4)(void)@<X6>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v6 = MEMORY[0x1E0C80A78](a1);
  v7 = MEMORY[0x1E0C80A78](v6);
  v8 = MEMORY[0x1E0C80A78](v7);
  v9 = (void (*)(void))MEMORY[0x1E0C80A78](v8);
  v9();
  v14 = sub_190A47884();
  a2();
  v10 = sub_190A47884();
  a3();
  v11 = sub_190A47884();
  a4();
  v12 = sub_190A47884();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  *a5 = 0;
  a5[1] = v14;
  a5[2] = v10;
  a5[3] = v11;
  a5[4] = v12;
  return result;
}

uint64_t Jindo.tint(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = v2[1];
  v5 = v2[2];
  v7 = v2[3];
  v6 = v2[4];
  *a2 = a1;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v7;
  a2[4] = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t sub_19092FF1C(unsigned __int8 a1)
{
  return ((uint64_t (*)())((char *)sub_19092FF3C + 4 * byte_190A4EC00[a1]))();
}

uint64_t sub_19092FF3C()
{
  return swift_retain();
}

uint64_t sub_19092FF48()
{
  return swift_retain();
}

uint64_t sub_19092FF54()
{
  return swift_retain();
}

uint64_t sub_19092FF60()
{
  return swift_retain();
}

uint64_t sub_19092FF68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_190A45FC4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t destroy for Jindo()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for Jindo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for Jindo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Jindo(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Jindo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Jindo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Jindo()
{
  return &type metadata for Jindo;
}

uint64_t storeEnumTagSinglePayload for ActivityWidgetError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190930244 + 4 * byte_190A4EC35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190930278 + 4 * asc_190A4EC30[v4]))();
}

uint64_t sub_190930278(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190930280(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190930288);
  return result;
}

uint64_t sub_190930294(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19093029CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1909302A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909302A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityWidgetError()
{
  return &type metadata for ActivityWidgetError;
}

unint64_t sub_1909302C8()
{
  unint64_t result;

  result = qword_1EE1ED278;
  if (!qword_1EE1ED278)
  {
    result = MEMORY[0x19401429C](&unk_190A4ED8C, &type metadata for ActivityWidgetError);
    atomic_store(result, (unint64_t *)&qword_1EE1ED278);
  }
  return result;
}

uint64_t sub_19093030C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_190A47ADC();
  qword_1EE1FD7E0 = result;
  *(_QWORD *)algn_1EE1FD7E8 = v1;
  return result;
}

uint64_t sub_190930338()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t sub_190930388()
{
  return sub_190A487CC();
}

uint64_t sub_1909303C0()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

_QWORD *sub_19093040C@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 4003)
    v2 = 1;
  else
    v2 = 2;
  if (*result == 4001)
    v3 = 0;
  else
    v3 = v2;
  *a2 = v3;
  return result;
}

void sub_19093042C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 4001;
  if (*v1)
    v2 = 4003;
  *a1 = v2;
}

uint64_t sub_190930448()
{
  uint64_t v0;

  if (qword_1EE1EC4D8 != -1)
    swift_once();
  v0 = qword_1EE1FD7E0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1909304A4()
{
  sub_190930634();
  sub_190930678();
  return sub_190A45E80();
}

unint64_t sub_1909304F0()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000015;
  else
    return 0xD000000000000042;
}

unint64_t sub_19093053C()
{
  unint64_t result;

  result = qword_1EE1ED280;
  if (!qword_1EE1ED280)
  {
    result = MEMORY[0x19401429C](&unk_190A4ED64, &type metadata for ActivityWidgetError);
    atomic_store(result, (unint64_t *)&qword_1EE1ED280);
  }
  return result;
}

uint64_t sub_190930580()
{
  sub_1909305F0();
  return sub_190A4876C();
}

uint64_t sub_1909305A8()
{
  sub_1909305F0();
  sub_190930634();
  sub_190930678();
  return sub_190A48760();
}

unint64_t sub_1909305F0()
{
  unint64_t result;

  result = qword_1EE1ED288;
  if (!qword_1EE1ED288)
  {
    result = MEMORY[0x19401429C](&unk_190A4ECAC, &type metadata for ActivityWidgetError);
    atomic_store(result, (unint64_t *)&qword_1EE1ED288);
  }
  return result;
}

unint64_t sub_190930634()
{
  unint64_t result;

  result = qword_1EE1ED290;
  if (!qword_1EE1ED290)
  {
    result = MEMORY[0x19401429C](&unk_190A4ECEC, &type metadata for ActivityWidgetError);
    atomic_store(result, (unint64_t *)&qword_1EE1ED290);
  }
  return result;
}

unint64_t sub_190930678()
{
  unint64_t result;

  result = qword_1EE1ED298[0];
  if (!qword_1EE1ED298[0])
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEB470], MEMORY[0x1E0DEB418]);
    atomic_store(result, qword_1EE1ED298);
  }
  return result;
}

uint64_t sub_1909306BC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1909306C4(__int128 *a1, uint64_t a2, uint64_t a3)
{
  char v3;
  char v4;
  char v5;
  uint64_t (*v6)(__int128 *);
  __int128 v8;
  char v9;
  char v10;
  __int128 v11;
  char v12;

  v3 = *((_BYTE *)a1 + 16);
  v4 = *((_BYTE *)a1 + 17);
  v5 = *((_BYTE *)a1 + 40);
  v6 = *(uint64_t (**)(__int128 *))(a3 + 32);
  v8 = *a1;
  v9 = v3;
  v10 = v4;
  v11 = *(__int128 *)((char *)a1 + 24);
  v12 = v5;
  return v6(&v8);
}

uint64_t sub_190930710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_190930718(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 48) + *(_QWORD *)(a2 + 48));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_190930784;
  return v7(a1, a2);
}

uint64_t sub_190930784(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1909307D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 56) + *(_QWORD *)(a4 + 56));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1908C5090;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_19093085C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 16)
                                                                                     + *(_QWORD *)(a6 + 16));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_1908CEB54;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1909308FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_190930C98;
  return v9(a1, a2, a3);
}

uint64_t sub_190930974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 32) + *(_QWORD *)(a4 + 32));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1908CEB54;
  return v11(a1, a2, a3, a4);
}

uint64_t destroy for ControlTemplateProviderContext(_QWORD *a1)
{
  if (*a1)
    swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ControlTemplateProviderContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)a2)
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ControlTemplateProviderContext(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a2;
  if (!*(_QWORD *)a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 8) = v6;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  swift_retain();
  swift_release();
LABEL_8:
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_BYTE *)(a1 + 17) = *((_BYTE *)a2 + 17);
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  return a1;
}

uint64_t assignWithTake for ControlTemplateProviderContext(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  if (!*(_QWORD *)a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 8) = v6;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  swift_release();
LABEL_8:
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_BYTE *)(a1 + 17) = *((_BYTE *)a2 + 17);
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlTemplateProviderContext(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 41))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlTemplateProviderContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplateProviderContext()
{
  return &type metadata for ControlTemplateProviderContext;
}

double ActivityViewMetrics.bounds.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void ActivityViewMetrics.bounds.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  *v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*ActivityViewMetrics.bounds.modify())()
{
  return nullsub_1;
}

double ActivityViewMetrics.cornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void ActivityViewMetrics.cornerRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*ActivityViewMetrics.cornerRadius.modify())()
{
  return nullsub_1;
}

void ActivityViewMetrics.init(bounds:cornerRadius:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
  a1[4] = a6;
}

uint64_t static ActivityViewMetrics.from(request:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  double v2;
  double v3;
  uint64_t v4;

  if ((*(_BYTE *)(result + 16) & 1) != 0)
  {
    v2 = *(double *)result;
    if (*(double *)(result + 8) > *(double *)result)
      v2 = *(double *)(result + 8);
  }
  else
  {
    v2 = *(double *)result;
  }
  if ((*(_BYTE *)(result + 40) & 1) != 0)
  {
    v3 = *(double *)(result + 24);
    if (*(double *)(result + 32) > v3)
      v3 = *(double *)(result + 32);
  }
  else
  {
    v3 = *(double *)(result + 24);
  }
  v4 = *(_QWORD *)(result + 48);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(double *)(a2 + 16) = v2;
  *(double *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = v4;
  return result;
}

uint64_t ActivityViewMetrics.hash(into:)()
{
  sub_190930DCC();
  sub_190A487F0();
  sub_190A487F0();
  return sub_190A487F0();
}

uint64_t sub_190930DCC()
{
  sub_190A487F0();
  sub_190A487F0();
  sub_190A487F0();
  return sub_190A487F0();
}

uint64_t ActivityViewMetrics.description.getter()
{
  sub_190A48298();
  sub_190A47B3C();
  type metadata accessor for CGRect(0);
  sub_190A483DC();
  sub_190A47B3C();
  sub_190A47D88();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  return 0;
}

uint64_t static ActivityViewMetrics.== infix(_:_:)(CGRect *a1, CGRect *a2)
{
  double x;
  double v3;
  uint64_t result;

  x = a1[1].origin.x;
  v3 = a2[1].origin.x;
  LODWORD(result) = CGRectEqualToRect(*a1, *a2);
  if (x == v3)
    return result;
  else
    return 0;
}

uint64_t sub_190930F88()
{
  _BYTE *v0;

  if (*v0)
    return 0x615272656E726F63;
  else
    return 0x73646E756F62;
}

uint64_t sub_190930FC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1909317D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190930FEC()
{
  sub_1909311B4();
  return sub_190A48868();
}

uint64_t sub_190931014()
{
  sub_1909311B4();
  return sub_190A48874();
}

uint64_t ActivityViewMetrics.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6760);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v8 = *((_QWORD *)v1 + 2);
  v9 = *((_QWORD *)v1 + 3);
  v10 = *((_QWORD *)v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909311B4();
  sub_190A48850();
  v13 = v12;
  v14 = v8;
  v15 = v9;
  v16 = 0;
  type metadata accessor for CGRect(0);
  sub_190931498(&qword_1ECF6B9C8, MEMORY[0x1E0C9B9C0]);
  sub_190A48640();
  if (!v2)
  {
    *(_QWORD *)&v13 = v10;
    v16 = 1;
    sub_19091E728();
    sub_190A48640();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1909311B4()
{
  unint64_t result;

  result = qword_1EE1EAC10;
  if (!qword_1EE1EAC10)
  {
    result = MEMORY[0x19401429C](&unk_190A4F048, &type metadata for ActivityViewMetrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EAC10);
  }
  return result;
}

uint64_t ActivityViewMetrics.hashValue.getter()
{
  sub_190A487C0();
  ActivityViewMetrics.hash(into:)();
  return sub_190A48808();
}

uint64_t ActivityViewMetrics.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6AC8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909311B4();
  sub_190A48838();
  if (!v2)
  {
    type metadata accessor for CGRect(0);
    v16 = 0;
    sub_190931498(&qword_1ECF6B998, MEMORY[0x1E0C9B9E0]);
    sub_190A48580();
    v9 = v15[0];
    v10 = v15[1];
    v11 = v15[2];
    v12 = v15[3];
    v16 = 1;
    sub_1909314D8();
    sub_190A48580();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v15[0];
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v11;
    a2[3] = v12;
    a2[4] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1909313F8()
{
  sub_190A487C0();
  ActivityViewMetrics.hash(into:)();
  return sub_190A48808();
}

uint64_t sub_19093144C()
{
  sub_190A487C0();
  ActivityViewMetrics.hash(into:)();
  return sub_190A48808();
}

uint64_t sub_190931498(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CGRect(255);
    result = MEMORY[0x19401429C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1909314D8()
{
  unint64_t result;

  result = qword_1ECF6C950;
  if (!qword_1ECF6C950)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEF078], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1ECF6C950);
  }
  return result;
}

unint64_t sub_190931520()
{
  unint64_t result;

  result = qword_1EE1ED2C8;
  if (!qword_1EE1ED2C8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ActivityViewMetrics, &type metadata for ActivityViewMetrics);
    atomic_store(result, (unint64_t *)&qword_1EE1ED2C8);
  }
  return result;
}

uint64_t sub_190931564@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ActivityViewMetrics.init(from:)(a1, a2);
}

uint64_t sub_190931578(_QWORD *a1)
{
  return ActivityViewMetrics.encode(to:)(a1);
}

uint64_t sub_190931590(CGRect *a1, CGRect *a2)
{
  double x;
  double v3;
  uint64_t result;

  x = a1[1].origin.x;
  v3 = a2[1].origin.x;
  LODWORD(result) = CGRectEqualToRect(*a1, *a2);
  if (x == v3)
    return result;
  else
    return 0;
}

uint64_t getEnumTagSinglePayload for ActivityViewMetrics(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ActivityViewMetrics(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ActivityViewMetrics()
{
  return &type metadata for ActivityViewMetrics;
}

uint64_t storeEnumTagSinglePayload for ActivityViewMetrics.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19093167C + 4 * byte_190A4EE65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1909316B0 + 4 * asc_190A4EE60[v4]))();
}

uint64_t sub_1909316B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909316B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909316C0);
  return result;
}

uint64_t sub_1909316CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909316D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1909316D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909316E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityViewMetrics.CodingKeys()
{
  return &type metadata for ActivityViewMetrics.CodingKeys;
}

unint64_t sub_190931700()
{
  unint64_t result;

  result = qword_1EE1ED2D0;
  if (!qword_1EE1ED2D0)
  {
    result = MEMORY[0x19401429C](&unk_190A4F020, &type metadata for ActivityViewMetrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ED2D0);
  }
  return result;
}

unint64_t sub_190931748()
{
  unint64_t result;

  result = qword_1EE1EAC20[0];
  if (!qword_1EE1EAC20[0])
  {
    result = MEMORY[0x19401429C](&unk_190A4EF90, &type metadata for ActivityViewMetrics.CodingKeys);
    atomic_store(result, qword_1EE1EAC20);
  }
  return result;
}

unint64_t sub_190931790()
{
  unint64_t result;

  result = qword_1EE1EAC18;
  if (!qword_1EE1EAC18)
  {
    result = MEMORY[0x19401429C](&unk_190A4EFB8, &type metadata for ActivityViewMetrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EAC18);
  }
  return result;
}

uint64_t sub_1909317D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73646E756F62 && a2 == 0xE600000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t ControlError.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t (*v9)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  _BYTE v21[15];
  unsigned __int8 v22;
  uint64_t v23;
  void *v24;
  unint64_t v25;
  unint64_t v26;

  v1 = v0;
  v2 = sub_190A46C30();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for ControlError(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)&v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1908AF5D8(v1, (uint64_t)v8, v9);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v11 = *v8;
      v12 = v8[1];
      v25 = 0;
      v26 = 0xE000000000000000;
      sub_190A48298();
      sub_190A47B3C();
      v23 = v11;
      sub_190A4867C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      v23 = v12;
      sub_190A4867C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      return v25;
    }
    else
    {
      return 0xD00000000000002CLL;
    }
  }
  else
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED2D8);
    v15 = (uint64_t *)((char *)v8 + *(int *)(v14 + 48));
    v16 = *v15;
    v17 = (void *)v15[1];
    v18 = *(uint64_t *)((char *)v8 + *(int *)(v14 + 64));
    (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v3 + 32))(v5, v8, v2);
    v25 = 0;
    v26 = 0xE000000000000000;
    sub_190A48298();
    swift_bridgeObjectRelease();
    v25 = 0xD00000000000001BLL;
    v26 = 0x8000000190A61AB0;
    v23 = v16;
    v24 = v17;
    v22 = 1;
    v19 = WidgetEnvironment.differences(from:ignoringEnvironmentKeys:usage:)((uint64_t)v5, v18, &v22);
    swift_bridgeObjectRelease();
    MEMORY[0x194012E8C](v19, MEMORY[0x1E0DEA968]);
    sub_190A47B3C();

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = v25;
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v13;
}

uint64_t type metadata accessor for ControlError(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1EE1ED328);
}

uint64_t == infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void *v43;
  _QWORD *v44;
  uint64_t *v45;
  char v46;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  char v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[3];
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[5];
  _QWORD v98[3];
  uint64_t v99;
  uint64_t v100;
  _QWORD v101[5];
  _QWORD v102[3];
  uint64_t v103;
  uint64_t v104;
  _BYTE v105[40];
  _QWORD v106[3];
  uint64_t v107;
  uint64_t v108;
  _BYTE v109[40];
  _QWORD v110[3];
  uint64_t v111;
  uint64_t v112;

  v86 = type metadata accessor for BundleStub();
  v88 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v81 = (uint64_t)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EAF88);
  MEMORY[0x1E0C80A78](v83);
  v87 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB230);
  v7 = MEMORY[0x1E0C80A78](v6);
  v82 = (uint64_t)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v84 = (char *)&v80 - v10;
  MEMORY[0x1E0C80A78](v9);
  v85 = (char *)&v80 - v11;
  v12 = sub_190A46084();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v89 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EAF80);
  MEMORY[0x1E0C80A78](v93);
  v16 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  v18 = MEMORY[0x1E0C80A78](v17);
  v90 = (uint64_t)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v80 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v80 - v23;
  v91 = a1;
  sub_1908AAA48(a1, (uint64_t)v110, &qword_1EE1EAF90);
  v25 = v111;
  if (v111)
  {
    v26 = a2;
    v27 = v112;
    __swift_project_boxed_opaque_existential_1(v110, v111);
    v28 = *(void (**)(uint64_t, uint64_t))(v27 + 56);
    v29 = v27;
    a2 = v26;
    v28(v25, v29);
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v30(v24, 0, 1, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
  }
  else
  {
    sub_1908AA544((uint64_t)v110, &qword_1EE1EAF90);
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v30(v24, 1, 1, v12);
  }
  v92 = a2;
  sub_1908AAA48(a2, (uint64_t)v110, &qword_1EE1EAF90);
  v31 = v111;
  if (v111)
  {
    v32 = v112;
    __swift_project_boxed_opaque_existential_1(v110, v111);
    (*(void (**)(uint64_t, uint64_t))(v32 + 56))(v31, v32);
    v30(v22, 0, 1, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
  }
  else
  {
    sub_1908AA544((uint64_t)v110, &qword_1EE1EAF90);
    v30(v22, 1, 1, v12);
  }
  v33 = (uint64_t)&v16[*(int *)(v93 + 48)];
  sub_1908AAA48((uint64_t)v24, (uint64_t)v16, &qword_1ECF6C2F8);
  sub_1908AAA48((uint64_t)v22, v33, &qword_1ECF6C2F8);
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v34((uint64_t)v16, 1, v12) == 1)
  {
    sub_1908AA544((uint64_t)v22, &qword_1ECF6C2F8);
    sub_1908AA544((uint64_t)v24, &qword_1ECF6C2F8);
    if (v34(v33, 1, v12) == 1)
    {
      sub_1908AA544((uint64_t)v16, &qword_1ECF6C2F8);
      v35 = v91;
      sub_1908AAA48(v91, (uint64_t)v110, &qword_1EE1EAF90);
      v36 = v92;
      sub_1908AAA48(v92, (uint64_t)v109, &qword_1EE1EAF90);
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  v37 = v90;
  sub_1908AAA48((uint64_t)v16, v90, &qword_1ECF6C2F8);
  if (v34(v33, 1, v12) == 1)
  {
    sub_1908AA544((uint64_t)v22, &qword_1ECF6C2F8);
    sub_1908AA544((uint64_t)v24, &qword_1ECF6C2F8);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v37, v12);
LABEL_12:
    sub_1908AA544((uint64_t)v16, &qword_1EE1EAF80);
    v35 = v91;
    sub_1908AAA48(v91, (uint64_t)v110, &qword_1EE1EAF90);
    v36 = v92;
    sub_1908AAA48(v92, (uint64_t)v109, &qword_1EE1EAF90);
LABEL_16:
    sub_1908AA544((uint64_t)v109, &qword_1EE1EAF90);
    sub_1908AA544((uint64_t)v110, &qword_1EE1EAF90);
LABEL_17:
    sub_1908AAA48(v35, (uint64_t)v106, &qword_1EE1EAF90);
    sub_1908AAA48(v36, (uint64_t)v105, &qword_1EE1EAF90);
LABEL_18:
    sub_1908AA544((uint64_t)v105, &qword_1EE1EAF90);
    sub_1908AA544((uint64_t)v106, &qword_1EE1EAF90);
LABEL_19:
    sub_1908AAA48(v35, (uint64_t)v102, &qword_1EE1EAF90);
    sub_1908AAA48(v36, (uint64_t)v101, &qword_1EE1EAF90);
LABEL_20:
    sub_1908AA544((uint64_t)v101, &qword_1EE1EAF90);
    sub_1908AA544((uint64_t)v102, &qword_1EE1EAF90);
    goto LABEL_21;
  }
  v38 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v89, v33, v12);
  sub_1908AA2F4((unint64_t *)&qword_1EE1E6BE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v39 = sub_190A47AAC();
  v40 = *(void (**)(char *, uint64_t))(v13 + 8);
  v40(v38, v12);
  sub_1908AA544((uint64_t)v22, &qword_1ECF6C2F8);
  sub_1908AA544((uint64_t)v24, &qword_1ECF6C2F8);
  v40((char *)v37, v12);
  sub_1908AA544((uint64_t)v16, &qword_1ECF6C2F8);
  v35 = v91;
  sub_1908AAA48(v91, (uint64_t)v110, &qword_1EE1EAF90);
  v36 = v92;
  sub_1908AAA48(v92, (uint64_t)v109, &qword_1EE1EAF90);
  if ((v39 & 1) == 0)
    goto LABEL_16;
LABEL_14:
  sub_1908AAA48((uint64_t)v110, (uint64_t)v106, &qword_1EE1EAF90);
  v41 = v107;
  if (v107)
  {
    v42 = v108;
    __swift_project_boxed_opaque_existential_1(v106, v107);
    v43 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v42 + 72))(v41, v42);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
  }
  else
  {
    sub_1908AA544((uint64_t)v106, &qword_1EE1EAF90);
    v43 = 0;
  }
  sub_1908AAA48((uint64_t)v109, (uint64_t)v106, &qword_1EE1EAF90);
  v48 = v107;
  if (!v107)
  {
    sub_1908AA544((uint64_t)v106, &qword_1EE1EAF90);
    if (v43)
      goto LABEL_32;
    v50 = 0;
LABEL_34:
    sub_1908AA544((uint64_t)v109, &qword_1EE1EAF90);
    sub_1908AA544((uint64_t)v110, &qword_1EE1EAF90);
    if (!v50)
    {
      sub_1908AAA48(v35, (uint64_t)v106, &qword_1EE1EAF90);
      sub_1908AAA48(v36, (uint64_t)v105, &qword_1EE1EAF90);
      goto LABEL_37;
    }

    goto LABEL_17;
  }
  v49 = v108;
  __swift_project_boxed_opaque_existential_1(v106, v107);
  v50 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v49 + 72))(v48, v49);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
  if (!v43)
    goto LABEL_34;
  if (!v50)
  {
LABEL_32:
    v53 = v43;
    sub_1908AA544((uint64_t)v109, &qword_1EE1EAF90);
    sub_1908AA544((uint64_t)v110, &qword_1EE1EAF90);

    goto LABEL_17;
  }
  sub_1908AB890(0, &qword_1EE1EBF40);
  v51 = v43;
  v52 = sub_190A480F4();
  sub_1908AA544((uint64_t)v109, &qword_1EE1EAF90);
  sub_1908AA544((uint64_t)v110, &qword_1EE1EAF90);

  sub_1908AAA48(v35, (uint64_t)v106, &qword_1EE1EAF90);
  sub_1908AAA48(v36, (uint64_t)v105, &qword_1EE1EAF90);
  if ((v52 & 1) == 0)
    goto LABEL_18;
LABEL_37:
  sub_1908AAA48((uint64_t)v106, (uint64_t)v102, &qword_1EE1EAF90);
  v54 = v103;
  if (v103)
  {
    v55 = v104;
    __swift_project_boxed_opaque_existential_1(v102, v103);
    v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 80))(v54, v55);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
  }
  else
  {
    sub_1908AA544((uint64_t)v102, &qword_1EE1EAF90);
  }
  sub_1908AAA48((uint64_t)v105, (uint64_t)v102, &qword_1EE1EAF90);
  v56 = v103;
  if (!v103)
  {
    sub_1908AA544((uint64_t)v102, &qword_1EE1EAF90);
    if (v54)
      goto LABEL_46;
    v58 = 0;
LABEL_48:
    sub_1908AA544((uint64_t)v105, &qword_1EE1EAF90);
    sub_1908AA544((uint64_t)v106, &qword_1EE1EAF90);
    if (!v58)
    {
      sub_1908AAA48(v35, (uint64_t)v102, &qword_1EE1EAF90);
      sub_1908AAA48(v36, (uint64_t)v101, &qword_1EE1EAF90);
      goto LABEL_51;
    }
    swift_release();
    goto LABEL_19;
  }
  v57 = v104;
  __swift_project_boxed_opaque_existential_1(v102, v103);
  v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 80))(v56, v57);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
  if (!v54)
    goto LABEL_48;
  v102[0] = v54;
  if (!v58)
  {
LABEL_46:
    swift_retain();
    sub_1908AA544((uint64_t)v105, &qword_1EE1EAF90);
    sub_1908AA544((uint64_t)v106, &qword_1EE1EAF90);
    swift_release_n();
    goto LABEL_19;
  }
  v101[0] = v58;
  sub_190A462E8();
  sub_1908AA2F4(&qword_1EE1ED2E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0F858], MEMORY[0x1E0D0F878]);
  swift_retain();
  v59 = sub_190A47AAC();
  swift_release();
  sub_1908AA544((uint64_t)v105, &qword_1EE1EAF90);
  sub_1908AA544((uint64_t)v106, &qword_1EE1EAF90);
  swift_release();
  swift_release();
  sub_1908AAA48(v35, (uint64_t)v102, &qword_1EE1EAF90);
  sub_1908AAA48(v36, (uint64_t)v101, &qword_1EE1EAF90);
  if ((v59 & 1) == 0)
    goto LABEL_20;
LABEL_51:
  sub_1908AAA48((uint64_t)v102, (uint64_t)v98, &qword_1EE1EAF90);
  v60 = v99;
  if (v99)
  {
    v61 = v100;
    __swift_project_boxed_opaque_existential_1(v98, v99);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v61 + 48))(v97, v60, v61);
    v62 = v97[0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
  }
  else
  {
    sub_1908AA544((uint64_t)v98, &qword_1EE1EAF90);
    v62 = 0;
  }
  sub_1908AAA48((uint64_t)v101, (uint64_t)v98, &qword_1EE1EAF90);
  v63 = v99;
  if (v99)
  {
    v64 = v100;
    __swift_project_boxed_opaque_existential_1(v98, v99);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v64 + 48))(v97, v63, v64);
    sub_1908AA544((uint64_t)v101, &qword_1EE1EAF90);
    sub_1908AA544((uint64_t)v102, &qword_1EE1EAF90);
    v65 = v97[0];
    v66 = HIDWORD(v97[0]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
    if (v60 && v65 == (_DWORD)v62)
    {
      sub_1908AAA48(v35, (uint64_t)v98, &qword_1EE1EAF90);
      sub_1908AAA48(v36, (uint64_t)v97, &qword_1EE1EAF90);
      if (v66 == HIDWORD(v62))
        goto LABEL_61;
LABEL_22:
      sub_1908AA544((uint64_t)v97, &qword_1EE1EAF90);
      v44 = v98;
      v45 = &qword_1EE1EAF90;
      goto LABEL_23;
    }
LABEL_21:
    sub_1908AAA48(v35, (uint64_t)v98, &qword_1EE1EAF90);
    sub_1908AAA48(v36, (uint64_t)v97, &qword_1EE1EAF90);
    goto LABEL_22;
  }
  sub_1908AA544((uint64_t)v101, &qword_1EE1EAF90);
  sub_1908AA544((uint64_t)v102, &qword_1EE1EAF90);
  sub_1908AA544((uint64_t)v98, &qword_1EE1EAF90);
  if (v60)
    goto LABEL_21;
  sub_1908AAA48(v35, (uint64_t)v98, &qword_1EE1EAF90);
  sub_1908AAA48(v36, (uint64_t)v97, &qword_1EE1EAF90);
LABEL_61:
  sub_1908AAA48((uint64_t)v98, (uint64_t)v94, &qword_1EE1EAF90);
  v67 = v95;
  if (v95)
  {
    v68 = v96;
    __swift_project_boxed_opaque_existential_1(v94, v95);
    v69 = (uint64_t)v85;
    (*(void (**)(uint64_t, uint64_t))(v68 + 40))(v67, v68);
    v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56);
    v71 = v86;
    v70(v69, 0, 1, v86);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v94);
  }
  else
  {
    sub_1908AA544((uint64_t)v94, &qword_1EE1EAF90);
    v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56);
    v69 = (uint64_t)v85;
    v71 = v86;
    v70((uint64_t)v85, 1, 1, v86);
  }
  v72 = (uint64_t)v87;
  sub_1908AAA48((uint64_t)v97, (uint64_t)v94, &qword_1EE1EAF90);
  v73 = v95;
  if (v95)
  {
    v74 = v96;
    __swift_project_boxed_opaque_existential_1(v94, v95);
    v75 = (uint64_t)v84;
    (*(void (**)(uint64_t, uint64_t))(v74 + 40))(v73, v74);
    v70(v75, 0, 1, v71);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v94);
  }
  else
  {
    sub_1908AA544((uint64_t)v94, &qword_1EE1EAF90);
    v75 = (uint64_t)v84;
    v70((uint64_t)v84, 1, 1, v71);
  }
  v76 = v72 + *(int *)(v83 + 48);
  sub_1908AAA48(v69, v72, &qword_1EE1EB230);
  sub_1908AAA48(v75, v76, &qword_1EE1EB230);
  v77 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
  if (v77(v72, 1, v71) == 1)
  {
    sub_1908AA544(v75, &qword_1EE1EB230);
    sub_1908AA544(v69, &qword_1EE1EB230);
    sub_1908AA544((uint64_t)v97, &qword_1EE1EAF90);
    sub_1908AA544((uint64_t)v98, &qword_1EE1EAF90);
    if (v77(v76, 1, v71) == 1)
    {
      sub_1908AA544(v72, &qword_1EE1EB230);
      v46 = 1;
      return v46 & 1;
    }
  }
  else
  {
    v78 = v82;
    sub_1908AAA48(v72, v82, &qword_1EE1EB230);
    if (v77(v76, 1, v71) != 1)
    {
      v79 = v81;
      sub_1908BD0B4(v76, v81, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
      v46 = _s9WidgetKit10BundleStubV2eeoiySbAC_ACtFZ_0(v78, v79);
      sub_1908B5150(v79, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
      sub_1908AA544(v75, &qword_1EE1EB230);
      sub_1908AA544(v69, &qword_1EE1EB230);
      sub_1908AA544((uint64_t)v97, &qword_1EE1EAF90);
      sub_1908AA544((uint64_t)v98, &qword_1EE1EAF90);
      sub_1908B5150(v78, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
      sub_1908AA544(v72, &qword_1EE1EB230);
      return v46 & 1;
    }
    sub_1908AA544(v75, &qword_1EE1EB230);
    sub_1908AA544(v69, &qword_1EE1EB230);
    sub_1908AA544((uint64_t)v97, &qword_1EE1EAF90);
    sub_1908AA544((uint64_t)v98, &qword_1EE1EAF90);
    sub_1908B5150(v78, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  }
  v45 = &qword_1EE1EAF88;
  v44 = (_QWORD *)v72;
LABEL_23:
  sub_1908AA544((uint64_t)v44, v45);
  v46 = 0;
  return v46 & 1;
}

BOOL != infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return (== infix(_:_:)(a1, a2) & 1) == 0;
}

uint64_t ControlArchive.template(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(a3 + 120))(a1, MEMORY[0x1E0DEE9D8], a2);
}

uint64_t ControlArchive.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  _QWORD v11[2];
  uint64_t v12;
  unint64_t v13;

  v4 = sub_190A46084();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v13 = 0xE000000000000000;
  sub_190A48298();
  swift_bridgeObjectRelease();
  v12 = 60;
  v13 = 0xE100000000000000;
  sub_190A48880();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  v9 = objc_msgSend(v8, sel_description);
  sub_190A47ADC();

  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v11[1] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 80))(a1, a2);
  sub_190A462E8();
  sub_1908AA2F4(&qword_1EE1EC870, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0F858], MEMORY[0x1E0D0F888]);
  sub_190A4867C();
  sub_190A47B3C();
  swift_release();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  (*(void (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
  sub_1908AA2F4(&qword_1EE1ED2E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
  sub_190A4867C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_190A47B3C();
  return v12;
}

uint64_t sub_190932D30()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  os_unfair_lock_s *v6;
  id v7;

  v1 = v0;
  sub_190A46084();
  sub_1908AA2F4(&qword_1EE1EC910, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_190A47A4C();
  v2 = *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_control);
  sub_190A48100();

  (*(void (**)(void))(*(_QWORD *)v1 + 136))();
  sub_190A462E8();
  sub_1908AA2F4(&qword_1EE1ED2F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0F858], MEMORY[0x1E0D0F870]);
  sub_190A47A4C();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment);
  v5 = *(void **)(v3 + 8);
  v6 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain_n();
  v7 = v5;
  os_unfair_lock_lock(v6);
  WidgetEnvironment.Storage.hash.getter();
  sub_190A487CC();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));

  return swift_release_n();
}

uint64_t ControlArchive.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  os_unfair_lock_s *v13;
  _QWORD v15[2];

  v5 = sub_190A46084();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a3 + 56))(a2, a3);
  sub_1908AA2F4(&qword_1EE1EC910, v6, MEMORY[0x1E0CB08A8]);
  sub_190A47A4C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 72))(a2, a3);
  sub_190A48100();

  v15[0] = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 80))(a2, a3);
  sub_190A462E8();
  sub_1908AA2F4(&qword_1EE1ED2F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0F858], MEMORY[0x1E0D0F870]);
  sub_190A47A4C();
  swift_release();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a3 + 64))(v15, a2, a3);
  v11 = v15[0];
  v12 = (void *)v15[1];
  v13 = *(os_unfair_lock_s **)(v15[0] + 16);
  swift_retain();
  os_unfair_lock_lock(v13);
  WidgetEnvironment.Storage.hash.getter();
  sub_190A487CC();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));

  return swift_release_n();
}

uint64_t ControlArchiveMock.__allocating_init(control:state:environment:template:)(void *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  id v21;
  double v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  _QWORD *v36;
  void *v37;
  id v38;
  id v39;
  id v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;

  v45 = a4;
  v47 = type metadata accessor for ControlArchiveStorage(0);
  MEMORY[0x1E0C80A78](v47);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for BundleStub();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_190A46084();
  v42 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v44 = (uint64_t)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v41 - v17;
  v20 = *a3;
  v19 = (void *)a3[1];
  v21 = a1;
  v46 = a2;
  swift_retain();
  sub_190A46078();
  BundleStub.init(_:)((uint64_t)objc_msgSend(v21, sel_extensionIdentity), (uint64_t)v11);
  if (qword_1ECF6C5C8 != -1)
    swift_once();
  swift_beginAccess();
  *(_QWORD *)&v18[v14[6]] = v21;
  v22 = qword_1ECF6C5E8[0];
  sub_1908AF5D8((uint64_t)v11, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  v23 = &v18[v14[8]];
  v24 = v42;
  v43 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
  v41 = v21;
  v25 = v48;
  v43(v23, v13, v48);
  *(double *)&v18[v14[5]] = v22;
  *(_QWORD *)&v49 = v20;
  *((_QWORD *)&v49 + 1) = v19;
  swift_retain();
  v26 = v19;
  WidgetEnvironment.filterForControlArchiving()();
  sub_1908B5150((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v25);

  swift_release();
  *(_OWORD *)&v18[v14[7]] = v49;
  *(_QWORD *)&v18[v14[9]] = v46;
  v27 = v44;
  sub_1908AF5D8((uint64_t)v18, v44, type metadata accessor for ControlArchiveStorageMetadata);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB718);
  v28 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ControlTemplateType() - 8) + 80);
  v29 = (v28 + 32) & ~v28;
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_190A4A350;
  sub_1908BD0B4(v45, v30 + v29, (uint64_t (*)(_QWORD))type metadata accessor for ControlTemplateType);

  swift_release();
  sub_1908B5150((uint64_t)v18, type metadata accessor for ControlArchiveStorageMetadata);
  sub_1908BD0B4(v27, (uint64_t)v8, type metadata accessor for ControlArchiveStorageMetadata);
  v31 = v47;
  *(_QWORD *)&v8[*(int *)(v47 + 20)] = v30;
  *(_DWORD *)&v8[*(int *)(v31 + 24)] = 2;
  type metadata accessor for ControlArchiveMock(0);
  v32 = swift_allocObject();
  sub_1908AF5D8((uint64_t)v8, v32 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  *(_QWORD *)(v32 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_systemVersion) = *(_QWORD *)&v8[v14[5]];
  v43((char *)(v32 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate), &v8[v14[8]], v25);
  v33 = &v8[v14[7]];
  v34 = *(_QWORD *)v33;
  v35 = (void *)*((_QWORD *)v33 + 1);
  v36 = (_QWORD *)(v32 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment);
  *v36 = v34;
  v36[1] = v35;
  v37 = *(void **)&v8[v14[6]];
  *(_QWORD *)(v32 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_control) = v37;
  *(_QWORD *)(v32 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_state) = *(_QWORD *)&v8[v14[9]];
  sub_1908BD0B4((uint64_t)v8, v32 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);
  swift_retain();
  v38 = v35;
  v39 = v37;
  swift_retain();
  return v32;
}

uint64_t sub_190933470@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v3 = v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage;
  result = type metadata accessor for ControlArchiveStorage(0);
  v5 = *(_QWORD *)(v3 + *(int *)(result + 20));
  if (*(_QWORD *)(v5 + 16))
  {
    v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ControlTemplateType() - 8) + 80);
    return sub_1908AF5D8(v5 + ((v6 + 32) & ~v6), a1, (uint64_t (*)(_QWORD))type metadata accessor for ControlTemplateType);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1909334F0(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1909340C0(a1);
  return v2;
}

uint64_t ControlArchiveMock.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1908B5150(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  v1 = v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  v2 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  swift_release();
  sub_1908B5150(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);
  return v0;
}

uint64_t StorageBackedControlArchive.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1908B5150(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  v1 = v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  v2 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  swift_release();
  sub_1908B5150(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);
  return v0;
}

uint64_t ControlArchiveMock.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1908B5150(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  v1 = v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  v2 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  swift_release();
  sub_1908B5150(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);
  return swift_deallocClassInstance();
}

uint64_t sub_190933748()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_190933790()
{
  type metadata accessor for ControlArchiveStorage(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1909337C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v23;

  v3 = type metadata accessor for ControlArchiveStorage(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v23 - v7;
  sub_1908AF5D8(v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, (uint64_t)&v23 - v7, type metadata accessor for ControlArchiveStorageMetadata);
  *(_QWORD *)&v8[*(int *)(v3 + 20)] = MEMORY[0x1E0DEE9D8];
  *(_DWORD *)&v8[*(int *)(v3 + 24)] = 2;
  sub_1908AF5D8((uint64_t)v8, (uint64_t)v6, type metadata accessor for ControlArchiveStorage);
  v9 = type metadata accessor for StorageBackedControlArchive(0);
  v10 = swift_allocObject();
  sub_1908AF5D8((uint64_t)v6, v10 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  v11 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  *(_QWORD *)(v10 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_systemVersion) = *(_QWORD *)&v6[v11[5]];
  v12 = &v6[v11[8]];
  v13 = v10 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  v14 = sub_190A46084();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, v12, v14);
  v15 = &v6[v11[7]];
  v16 = *(_QWORD *)v15;
  v17 = (void *)*((_QWORD *)v15 + 1);
  v18 = (_QWORD *)(v10 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment);
  *v18 = v16;
  v18[1] = v17;
  v19 = *(void **)&v6[v11[6]];
  *(_QWORD *)(v10 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_control) = v19;
  *(_QWORD *)(v10 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_state) = *(_QWORD *)&v6[v11[9]];
  sub_1908BD0B4((uint64_t)v6, v10 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);
  a1[3] = v9;
  a1[4] = sub_1908AA2F4(&qword_1EE1EB788, type metadata accessor for StorageBackedControlArchive, (uint64_t)&protocol conformance descriptor for StorageBackedControlArchive);
  *a1 = v10;
  swift_retain();
  v20 = v17;
  v21 = v19;
  swift_retain();
  return sub_1908B5150((uint64_t)v8, type metadata accessor for ControlArchiveStorage);
}

uint64_t sub_1909339E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v3 = v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage;
  result = type metadata accessor for ControlArchiveStorage(0);
  v5 = *(_QWORD *)(v3 + *(int *)(result + 20));
  if (*(_QWORD *)(v5 + 16))
  {
    v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ControlTemplateType() - 8) + 80);
    return sub_1908AF5D8(v5 + ((v6 + 32) & ~v6), a1, (uint64_t (*)(_QWORD))type metadata accessor for ControlTemplateType);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_190933A50(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v1 + 200))(a1, MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_190933A74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  int *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v23;

  v5 = type metadata accessor for ControlArchiveStorage(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1908AF5D8(v2 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, (uint64_t)v7, v8);
  v9 = type metadata accessor for StateOverridenControlArchive(0);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + OBJC_IVAR____TtC9WidgetKit28StateOverridenControlArchive__state) = a1;
  sub_1908AF5D8((uint64_t)v7, v10 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  v11 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  *(_QWORD *)(v10 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_systemVersion) = *(_QWORD *)&v7[v11[5]];
  v12 = &v7[v11[8]];
  v13 = v10 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  v14 = sub_190A46084();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, v12, v14);
  v15 = &v7[v11[7]];
  v16 = *(_QWORD *)v15;
  v17 = (void *)*((_QWORD *)v15 + 1);
  v18 = (_QWORD *)(v10 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment);
  *v18 = v16;
  v18[1] = v17;
  v19 = *(void **)&v7[v11[6]];
  *(_QWORD *)(v10 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_control) = v19;
  *(_QWORD *)(v10 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_state) = *(_QWORD *)&v7[v11[9]];
  sub_1908BD0B4((uint64_t)v7, v10 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);
  a2[3] = v9;
  a2[4] = sub_1908AA2F4(&qword_1EE1ED300, type metadata accessor for StateOverridenControlArchive, (uint64_t)&protocol conformance descriptor for StorageBackedControlArchive);
  *a2 = v10;
  swift_retain();
  swift_retain();
  v20 = v17;
  v21 = v19;
  return swift_retain();
}

_QWORD *StorageBackedControlArchive.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = type metadata accessor for ControlArchiveStorage(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v18 = (uint64_t)&v16 - v7;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED308);
  v8 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190934D44();
  sub_190A48838();
  if (!v1)
  {
    v12 = v8;
    v13 = v16;
    sub_1908AA2F4(&qword_1EE1EB748, type metadata accessor for ControlArchiveStorage, (uint64_t)&unk_190A546D8);
    sub_190A48580();
    v15 = v18;
    sub_1908AF5D8(v18, (uint64_t)v6, type metadata accessor for ControlArchiveStorage);
    v11 = (_QWORD *)(*(uint64_t (**)(char *))(v13 + 168))(v6);
    sub_1908B5150(v15, type metadata accessor for ControlArchiveStorage);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v17);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v11;
}

uint64_t sub_190933E34(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED318);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190934D44();
  sub_190A48850();
  type metadata accessor for ControlArchiveStorage(0);
  sub_1908AA2F4(&qword_1EE1EB6B8, type metadata accessor for ControlArchiveStorage, (uint64_t)&unk_190A546B0);
  sub_190A48640();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_190933F50()
{
  sub_190A487C0();
  sub_190932D30();
  return sub_190A48808();
}

uint64_t StorageBackedControlArchive.originatingBundle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1908AF5D8(v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, a1, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
}

double StorageBackedControlArchive.systemVersion.getter@<D0>(double *a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_systemVersion);
  *a1 = result;
  return result;
}

uint64_t StorageBackedControlArchive.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  v4 = sub_190A46084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

id StorageBackedControlArchive.environment.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v3;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment + 8);
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment);
  a1[1] = v3;
  swift_retain();
  return v3;
}

id StorageBackedControlArchive.control.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_control);
}

uint64_t sub_190934058(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_state);
  swift_beginAccess();
  *v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1909340C0(uint64_t a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  void *v11;
  id v12;
  id v13;

  sub_1908AF5D8(a1, v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  v3 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_systemVersion) = *(_QWORD *)(a1 + v3[5]);
  v4 = a1 + v3[8];
  v5 = v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  v6 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v5, v4, v6);
  v7 = (uint64_t *)(a1 + v3[7]);
  v8 = *v7;
  v9 = (void *)v7[1];
  v10 = (_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment);
  *v10 = v8;
  v10[1] = v9;
  v11 = *(void **)(a1 + v3[6]);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_control) = v11;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_state) = *(_QWORD *)(a1 + v3[9]);
  sub_1908BD0B4(a1, v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);
  swift_retain();
  v12 = v9;
  v13 = v11;
  swift_retain();
  return v1;
}

uint64_t sub_1909341D8@<X0>(uint64_t a1@<X0>, int64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t *v26;

  v4 = v3;
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment);
  v8 = *(void **)(v3 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment + 8);
  swift_retain();
  v10 = v8;
  v11 = WidgetEnvironment.findEnumeratedIndex(matching:ignoring:)(a1, a2);
  v13 = v12;

  swift_release();
  if ((v13 & 1) != 0)
  {
    type metadata accessor for ControlError(0);
    sub_1908AA2F4(&qword_1EE1ED320, type metadata accessor for ControlError, (uint64_t)&protocol conformance descriptor for ControlError);
    swift_allocError();
    v19 = v18;
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED2D8);
    v21 = (_QWORD *)(v19 + *(int *)(v20 + 48));
    v22 = *(int *)(v20 + 64);
    v23 = sub_190A46C30();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v19, a1, v23);
    *v21 = v9;
    v21[1] = v10;
    *(_QWORD *)(v19 + v22) = a2;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    v24 = v10;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  v14 = v4 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage;
  result = type metadata accessor for ControlArchiveStorage(0);
  v16 = *(_QWORD *)(v14 + *(int *)(result + 20));
  if (v11 >= *(_QWORD *)(v16 + 16))
  {
    type metadata accessor for ControlError(0);
    sub_1908AA2F4(&qword_1EE1ED320, type metadata accessor for ControlError, (uint64_t)&protocol conformance descriptor for ControlError);
    swift_allocError();
    v25 = *(_QWORD *)(v16 + 16);
    *v26 = v11;
    v26[1] = v25;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  if (v11 < 0)
  {
    __break(1u);
  }
  else
  {
    v17 = type metadata accessor for ControlTemplateType();
    return sub_1908AF5D8(v16+ ((*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v11, a3, (uint64_t (*)(_QWORD))type metadata accessor for ControlTemplateType);
  }
  return result;
}

uint64_t sub_1909343F0()
{
  return 0x656761726F7473;
}

uint64_t sub_190934408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656761726F7473 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_190A486DC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_19093449C()
{
  sub_190934D44();
  return sub_190A48868();
}

uint64_t sub_1909344C4()
{
  sub_190934D44();
  return sub_190A48874();
}

uint64_t StorageBackedControlArchive.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1908B5150(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  v1 = v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  v2 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  swift_release();
  sub_1908B5150(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);
  return swift_deallocClassInstance();
}

uint64_t sub_1909345A8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1908AF5D8(*v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, a1, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
}

double sub_1909345D8@<D0>(double *a1@<X8>)
{
  _QWORD *v1;
  double result;

  result = *(double *)(*v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_systemVersion);
  *a1 = result;
  return result;
}

uint64_t sub_1909345F0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  v4 = sub_190A46084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

id sub_190934638@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  id v4;

  v2 = (_QWORD *)(*v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_environment);
  v4 = (id)v2[1];
  *a1 = *v2;
  a1[1] = v4;
  swift_retain();
  return v4;
}

id sub_190934674()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_control);
}

uint64_t sub_190934688()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 136))();
}

uint64_t sub_1909346B0()
{
  type metadata accessor for ControlArchiveStorage(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1909346E8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage;
  result = type metadata accessor for ControlArchiveStorage(0);
  v5 = *(_QWORD *)(v3 + *(int *)(result + 20));
  if (*(_QWORD *)(v5 + 16))
  {
    v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ControlTemplateType() - 8) + 80);
    return sub_1908AF5D8(v5 + ((v6 + 32) & ~v6), a1, (uint64_t (*)(_QWORD))type metadata accessor for ControlTemplateType);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_19093475C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1909337C4(a1);
}

uint64_t sub_19093477C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_190933A74(a1, a2);
}

uint64_t sub_19093479C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 200))();
}

uint64_t sub_1909347C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 216))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1909347F0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED318);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190934D44();
  sub_190A48850();
  type metadata accessor for ControlArchiveStorage(0);
  sub_1908AA2F4(&qword_1EE1EB6B8, type metadata accessor for ControlArchiveStorage, (uint64_t)&unk_190A546B0);
  sub_190A48640();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

BOOL sub_190934914(uint64_t *a1, uint64_t *a2)
{
  return _s9WidgetKit27StorageBackedControlArchiveC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_190934920()
{
  sub_190A487C0();
  sub_190932D30();
  return sub_190A48808();
}

uint64_t sub_190934960(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = MEMORY[0x19401429C](&protocol conformance descriptor for StorageBackedControlArchive);
  return ControlArchive.hash(into:)(a1, a2, v4);
}

uint64_t sub_1909349A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v5[72];

  sub_190A487C0();
  v3 = MEMORY[0x19401429C](&protocol conformance descriptor for StorageBackedControlArchive, a2);
  ControlArchive.hash(into:)((uint64_t)v5, a2, v3);
  return sub_190A48808();
}

uint64_t sub_1909349F4(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x19401429C](&protocol conformance descriptor for StorageBackedControlArchive, a1);
  return ControlArchive.description.getter(a1, v2);
}

uint64_t sub_190934A28()
{
  return swift_retain();
}

void StateOverridenControlArchive.__allocating_init(from:)()
{
  sub_190A48448();
  __break(1u);
}

void sub_190934A90()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_190934ABC()
{
  return swift_release();
}

uint64_t StateOverridenControlArchive.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1908B5150(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  v1 = v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  v2 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  swift_release();
  sub_1908B5150(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);
  swift_release();
  return v0;
}

uint64_t StateOverridenControlArchive.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1908B5150(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_originatingBundle, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  v1 = v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive_creationDate;
  v2 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  swift_release();
  sub_1908B5150(v0 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage, type metadata accessor for ControlArchiveStorage);
  swift_release();
  return swift_deallocClassInstance();
}

BOOL _s9WidgetKit27StorageBackedControlArchiveC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((sub_190A4606C() & 1) == 0)
    return 0;
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6C5E0);
  if ((sub_190A480F4() & 1) == 0)
    return 0;
  v4 = OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage;
  v5 = a1 + OBJC_IVAR____TtC9WidgetKit27StorageBackedControlArchive__storage;
  v6 = type metadata accessor for ControlArchiveStorage(0);
  return *(_QWORD *)(*(_QWORD *)(v5 + *(int *)(v6 + 20)) + 16) == *(_QWORD *)(*(_QWORD *)(a2 + v4 + *(int *)(v6 + 20))
                                                                              + 16);
}

uint64_t type metadata accessor for ControlArchiveMock(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1EE1ED338);
}

uint64_t type metadata accessor for StorageBackedControlArchive(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1EE1EB790);
}

uint64_t type metadata accessor for StateOverridenControlArchive(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1EE1ED348);
}

unint64_t sub_190934D44()
{
  unint64_t result;

  result = qword_1EE1ED310;
  if (!qword_1EE1ED310)
  {
    result = MEMORY[0x19401429C](&unk_190A4F414, &type metadata for StorageBackedControlArchive.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ED310);
  }
  return result;
}

uint64_t sub_190934D88()
{
  return sub_1908AA2F4(&qword_1EE1ED320, type metadata accessor for ControlError, (uint64_t)&protocol conformance descriptor for ControlError);
}

uint64_t sub_190934DB4(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1908AA2F4(&qword_1EE1EB780, type metadata accessor for StorageBackedControlArchive, (uint64_t)&protocol conformance descriptor for StorageBackedControlArchive);
  a1[2] = sub_1908AA2F4(&qword_1EE1EB778, type metadata accessor for StorageBackedControlArchive, (uint64_t)&protocol conformance descriptor for StorageBackedControlArchive);
  a1[3] = sub_1908AA2F4(&qword_1EE1EB760, type metadata accessor for StorageBackedControlArchive, (uint64_t)&protocol conformance descriptor for StorageBackedControlArchive);
  result = sub_1908AA2F4(&qword_1EE1EB768, type metadata accessor for StorageBackedControlArchive, (uint64_t)&protocol conformance descriptor for StorageBackedControlArchive);
  a1[4] = result;
  return result;
}

uint64_t sub_190934E48()
{
  return sub_1908AA2F4(&qword_1EE1EB770, type metadata accessor for StorageBackedControlArchive, (uint64_t)&protocol conformance descriptor for StorageBackedControlArchive);
}

uint64_t sub_190934E74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 136))();
  *a2 = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ControlError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v8 = sub_190A46C30();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED2D8);
    v10 = *(int *)(v9 + 48);
    v11 = (uint64_t *)((char *)a1 + v10);
    v12 = *(void **)((char *)a2 + v10 + 8);
    *v11 = *(uint64_t *)((char *)a2 + v10);
    v11[1] = v12;
    *(uint64_t *)((char *)a1 + *(int *)(v9 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 64));
    swift_retain();
    v13 = v12;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ControlError(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    v3 = sub_190A46C30();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED2D8) + 48);
    swift_release();

    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for ControlError(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_190A46C30();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED2D8);
    v8 = *(int *)(v7 + 48);
    v9 = &a1[v8];
    v10 = *(void **)&a2[v8 + 8];
    *(_QWORD *)v9 = *(_QWORD *)&a2[v8];
    *((_QWORD *)v9 + 1) = v10;
    *(_QWORD *)&a1[*(int *)(v7 + 64)] = *(_QWORD *)&a2[*(int *)(v7 + 64)];
    swift_retain();
    v11 = v10;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithCopy for ControlError(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;

  if (a1 != a2)
  {
    sub_1908B5150((uint64_t)a1, type metadata accessor for ControlError);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_190A46C30();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED2D8);
      v8 = *(int *)(v7 + 48);
      v9 = &a1[v8];
      *(_QWORD *)v9 = *(_QWORD *)&a2[v8];
      v10 = *(void **)&a2[v8 + 8];
      *((_QWORD *)v9 + 1) = v10;
      *(_QWORD *)&a1[*(int *)(v7 + 64)] = *(_QWORD *)&a2[*(int *)(v7 + 64)];
      swift_retain();
      v11 = v10;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *initializeWithTake for ControlError(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_190A46C30();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED2D8);
    *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
    *(_QWORD *)&a1[*(int *)(v7 + 64)] = *(_QWORD *)&a2[*(int *)(v7 + 64)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for ControlError(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1908B5150((uint64_t)a1, type metadata accessor for ControlError);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_190A46C30();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED2D8);
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      *(_QWORD *)&a1[*(int *)(v7 + 64)] = *(_QWORD *)&a2[*(int *)(v7 + 64)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for ControlError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_19093535C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_19093536C()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  result = sub_190A46C30();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[4] = v2;
    v2[5] = &unk_190A4F268;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of ControlArchive.originatingBundle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ControlArchive.systemVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ControlArchive.creationDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ControlArchive.environment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ControlArchive.control.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of ControlArchive.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of ControlArchive.templates.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of ControlArchive.anyTemplate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of ControlArchive.copyAsStateOnlyArchive()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of ControlArchive.copyWithState(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of ControlArchive.template(in:ignoringEnvironmentKeys:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t sub_190935460()
{
  return type metadata accessor for ControlArchiveMock(0);
}

uint64_t sub_190935468()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_19093549C()
{
  return type metadata accessor for StorageBackedControlArchive(0);
}

uint64_t sub_1909354A4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for BundleStub();
  if (v1 <= 0x3F)
  {
    result = sub_190A46084();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for ControlArchiveStorage(319);
      if (v3 <= 0x3F)
        return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for StorageBackedControlArchive()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StorageBackedControlArchive.state.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of StorageBackedControlArchive.templates.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of StorageBackedControlArchive.copyAsStateOnlyArchive()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of StorageBackedControlArchive.anyTemplate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of StorageBackedControlArchive.template(in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of StorageBackedControlArchive.template(in:ignoringEnvironmentKeys:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of StorageBackedControlArchive.copyWithState(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of StorageBackedControlArchive.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of StorageBackedControlArchive.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of StorageBackedControlArchive.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t sub_190935630()
{
  return type metadata accessor for StateOverridenControlArchive(0);
}

uint64_t sub_190935638()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for StateOverridenControlArchive()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for StorageBackedControlArchive.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1909356C8 + 4 * byte_190A4F0A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1909356E8 + 4 * byte_190A4F0A5[v4]))();
}

_BYTE *sub_1909356C8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1909356E8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1909356F0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1909356F8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190935700(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190935708(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StorageBackedControlArchive.CodingKeys()
{
  return &type metadata for StorageBackedControlArchive.CodingKeys;
}

unint64_t sub_190935728()
{
  unint64_t result;

  result = qword_1EE1ED358;
  if (!qword_1EE1ED358)
  {
    result = MEMORY[0x19401429C](&unk_190A4F3EC, &type metadata for StorageBackedControlArchive.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ED358);
  }
  return result;
}

unint64_t sub_190935770()
{
  unint64_t result;

  result = qword_1EE1ED360;
  if (!qword_1EE1ED360)
  {
    result = MEMORY[0x19401429C](&unk_190A4F35C, &type metadata for StorageBackedControlArchive.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ED360);
  }
  return result;
}

unint64_t sub_1909357B8()
{
  unint64_t result;

  result = qword_1EE1ED368;
  if (!qword_1EE1ED368)
  {
    result = MEMORY[0x19401429C](&unk_190A4F384, &type metadata for StorageBackedControlArchive.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ED368);
  }
  return result;
}

void static WidgetAccentedRenderingMode.accented.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void static WidgetAccentedRenderingMode.desaturated.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static WidgetAccentedRenderingMode.accentedDesaturated.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void static WidgetAccentedRenderingMode.fullColor.getter(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t WidgetAccentedRenderingMode.hash(into:)()
{
  return sub_190A487CC();
}

BOOL static WidgetAccentedRenderingMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t WidgetAccentedRenderingMode.hashValue.getter()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t Image.widgetAccentedRenderingMode(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;

  v3 = *a1;
  *(_QWORD *)a3 = a2;
  *(_BYTE *)(a3 + 8) = v3;
  return swift_retain();
}

unint64_t sub_1909358C0()
{
  unint64_t result;

  result = qword_1EE1ED370;
  if (!qword_1EE1ED370)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetAccentedRenderingMode, &type metadata for WidgetAccentedRenderingMode);
    atomic_store(result, (unint64_t *)&qword_1EE1ED370);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WidgetAccentedRenderingMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_190935950 + 4 * byte_190A4F475[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_190935984 + 4 * byte_190A4F470[v4]))();
}

uint64_t sub_190935984(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19093598C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190935994);
  return result;
}

uint64_t sub_1909359A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909359A8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1909359AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909359B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetAccentedRenderingMode()
{
  return &type metadata for WidgetAccentedRenderingMode;
}

unint64_t sub_1909359D4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1EE1EC3B8;
  if (!qword_1EE1EC3B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EC2F8);
    v2 = sub_190935A40();
    v3[0] = MEMORY[0x1E0CDF820];
    v3[1] = v2;
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EE1EC3B8);
  }
  return result;
}

unint64_t sub_190935A40()
{
  unint64_t result;

  result = qword_1EE1EC468;
  if (!qword_1EE1EC468)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetAccentedRenderingModeViewModifier, &type metadata for WidgetAccentedRenderingModeViewModifier);
    atomic_store(result, (unint64_t *)&qword_1EE1EC468);
  }
  return result;
}

uint64_t sub_190935A84()
{
  uint64_t v0;

  v0 = sub_190A467B0();
  __swift_allocate_value_buffer(v0, qword_1ECF6D4D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECF6D4D0);
  return sub_190A467A4();
}

uint64_t sub_190935AE0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v10[5];

  if (qword_1EE1EC568 != -1)
    swift_once();
  v0 = qword_1EE1FD830;
  v1 = type metadata accessor for ControlCenterClient();
  v10[3] = v1;
  v10[4] = &off_1E2CC5BB0;
  v10[0] = v0;
  type metadata accessor for ControlCenter();
  v2 = (_QWORD *)swift_allocObject();
  v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v1);
  MEMORY[0x1E0C80A78](v3);
  v5 = (_QWORD *)((char *)&v10[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v6 + 16))(v5);
  v7 = *v5;
  v2[5] = v1;
  v2[6] = &off_1E2CC5BB0;
  v2[2] = v7;
  swift_retain_n();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  result = swift_release();
  qword_1EE1ED378 = (uint64_t)v2;
  return result;
}

uint64_t static ControlCenter.shared.getter()
{
  if (qword_1EE1EC4E8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_190935C34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_190935C4C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 16) + 16), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 40));
  v1 = type metadata accessor for ControlCenterClient();
  v4 = (char *)&dword_1EE1EE958 + dword_1EE1EE958;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_1909360B8;
  return ((uint64_t (*)(uint64_t, _UNKNOWN **))v4)(v1, &off_1E2CC5BB0);
}

uint64_t sub_190935CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40));
  return sub_190A00AD4(a1, a2);
}

uint64_t sub_190935D20()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  return sub_190A0085C(0, 0);
}

uint64_t ControlCenter.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t ControlCenter.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t ControlCenter.getCurrentConfigurations()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_190935DAC()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 24) + 16), *(_QWORD *)(*(_QWORD *)(v0 + 24) + 40));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED390);
  *v1 = v0;
  v1[1] = sub_190935E58;
  return sub_190A48718();
}

uint64_t sub_190935E58()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_190935EBC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_190935EC8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ControlCenter.allControls()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_190935EEC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 16) + 16), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 40));
  v1 = type metadata accessor for ControlCenterClient();
  v4 = (char *)&dword_1EE1EE958 + dword_1EE1EE958;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_190935F7C;
  return ((uint64_t (*)(uint64_t, _UNKNOWN **))v4)(v1, &off_1E2CC5BB0);
}

uint64_t sub_190935F7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

Swift::Void __swiftcall ControlCenter.reloadAllControls(forBundleIdentifier:)(Swift::String forBundleIdentifier)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;

  object = forBundleIdentifier._object;
  countAndFlagsBits = forBundleIdentifier._countAndFlagsBits;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  sub_190A0085C(countAndFlagsBits, (uint64_t)object);
}

uint64_t sub_190936014(uint64_t a1)
{
  uint64_t v1;

  return sub_190A00D40(a1, v1);
}

uint64_t type metadata accessor for ControlCenter()
{
  return objc_opt_self();
}

uint64_t method lookup function for ControlCenter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ControlCenter.currentControls()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 96) + *(_QWORD *)(*(_QWORD *)v0 + 96));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_190930784;
  return v4();
}

uint64_t dispatch thunk of ControlCenter.reloadControls(ofKind:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ControlCenter.reloadAllControls()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t ControlInfo.init(control:pushInfo:)(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 88) = a1;
  *(_QWORD *)(v3 + 96) = a2;
  *(_OWORD *)(v3 + 104) = *a3;
  return swift_task_switch();
}

uint64_t sub_1909360DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  _QWORD *v18;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v4 = *(uint64_t **)(v0 + 88);
  v3 = *(void **)(v0 + 96);
  v4[4] = (uint64_t)v3;
  v5 = v3;
  v6 = objc_msgSend(v5, sel_kind);
  v7 = sub_190A47ADC();
  v9 = v8;

  *v4 = v7;
  v4[1] = v9;
  v4[2] = v2;
  v4[3] = v1;
  v10 = objc_msgSend(v5, sel_intentReference);
  if (!v10)
    goto LABEL_7;
  v11 = v10;
  v12 = objc_msgSend(v10, sel_intent);
  *(_QWORD *)(v0 + 120) = v12;

  if (!v12)
    goto LABEL_7;
  objc_opt_self();
  v13 = (void *)swift_dynamicCastObjCClass();
  if (!v13)
  {

LABEL_7:
    v16 = *(_QWORD *)(v0 + 88);

    *(_QWORD *)(v16 + 72) = 0;
    *(_OWORD *)(v16 + 56) = 0u;
    *(_OWORD *)(v16 + 40) = 0u;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v14 = objc_msgSend(v13, sel_linkAction);
  if (v14)
  {
    v15 = v14;
    *(_QWORD *)(v0 + 80) = sub_1908AB890(0, (unint64_t *)&qword_1EE1EB978);
    *(_QWORD *)(v0 + 56) = v15;
  }
  else
  {
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v18;
  *v18 = v0;
  v18[1] = sub_190936278;
  return sub_190A45C4C();
}

uint64_t sub_190936278()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)

  else
    sub_1908B4324(v2 + 56);
  return swift_task_switch();
}

uint64_t sub_1909362E8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);

  sub_1909132CC(v0 + 16, *(_QWORD *)(v0 + 88) + 40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190936334()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);

  sub_1908B4324(v0 + 56);
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  sub_1909132CC(v0 + 16, *(_QWORD *)(v0 + 88) + 40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ControlInfo.configurationIntent<A>(of:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v5;
  _BYTE v7[40];

  sub_1909122E4(v2 + 40, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA700);
  v5 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, v5 ^ 1u, 1, a1);
}

uint64_t ControlInfo.kind.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlInfo.pushInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1908CE0B4(v2, v3);
}

uint64_t ControlInfo.pushInfo.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1908CE500(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  return result;
}

uint64_t (*ControlInfo.pushInfo.modify())()
{
  return nullsub_1;
}

id ControlInfo.control.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

uint64_t ControlInfo.id.getter()
{
  sub_190A4810C();
  return sub_190A4867C();
}

uint64_t static ControlInfo.== infix(_:_:)()
{
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6C5E0);
  return sub_190A480F4() & 1;
}

void ControlInfo.hash(into:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 32);
  sub_190A48100();

}

uint64_t ControlInfo.hashValue.getter()
{
  uint64_t v0;
  id v1;

  sub_190A487C0();
  v1 = *(id *)(v0 + 32);
  sub_190A48100();

  return sub_190A48808();
}

uint64_t sub_1909365B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_190A4810C();
  result = sub_190A4867C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_190936604()
{
  uint64_t v0;
  id v1;

  sub_190A487C0();
  v1 = *(id *)(v0 + 32);
  sub_190A48100();

  return sub_190A48808();
}

void sub_190936650()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 32);
  sub_190A48100();

}

uint64_t sub_190936694()
{
  uint64_t v0;
  id v1;

  sub_190A487C0();
  v1 = *(id *)(v0 + 32);
  sub_190A48100();

  return sub_190A48808();
}

uint64_t sub_1909366DC()
{
  return MEMORY[0x1E0DEA978];
}

unint64_t sub_1909366EC()
{
  unint64_t result;

  result = qword_1EE1ED3B0;
  if (!qword_1EE1ED3B0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ControlInfo, &type metadata for ControlInfo);
    atomic_store(result, (unint64_t *)&qword_1EE1ED3B0);
  }
  return result;
}

uint64_t sub_190936730()
{
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6C5E0);
  return sub_190A480F4() & 1;
}

void destroy for ControlInfo(uint64_t a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >> 60 != 15)
    sub_1908B53FC(*(_QWORD *)(a1 + 16), v2);

  if (*(_QWORD *)(a1 + 64))
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
}

uint64_t initializeWithCopy for ControlInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    v7 = *(_QWORD *)v5;
    sub_1908B53B8(v7, v6);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v6;
  }
  v8 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  v9 = *(_QWORD *)(a2 + 64);
  v10 = v8;
  if (v9)
  {
    v11 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = v11;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 40, a2 + 40, v9);
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v12;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  return a1;
}

uint64_t assignWithCopy for ControlInfo(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (uint64_t *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) >> 60 == 15)
  {
    if (v5 >> 60 != 15)
    {
      v6 = *v4;
      sub_1908B53B8(*v4, *(_QWORD *)(a2 + 24));
      *(_QWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 24) = v5;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
    sub_1909369F0(a1 + 16);
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  v7 = *v4;
  sub_1908B53B8(*v4, *(_QWORD *)(a2 + 24));
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v5;
  sub_1908B53FC(v8, v9);
LABEL_8:
  v10 = *(void **)(a2 + 32);
  v11 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  v12 = v10;

  v13 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v13)
    {
      *(_QWORD *)(a1 + 64) = v13;
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 40, a2 + 40);
      return a1;
    }
LABEL_14:
    v14 = *(_OWORD *)(a2 + 40);
    v15 = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 40) = v14;
    *(_OWORD *)(a1 + 56) = v15;
    return a1;
  }
  if (!v13)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  return a1;
}

uint64_t sub_1909369F0(uint64_t a1)
{
  destroy for ControlPushInfo(a1);
  return a1;
}

uint64_t assignWithTake for ControlInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  __int128 v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  if (v6 >> 60 == 15)
    goto LABEL_4;
  v7 = *(_QWORD *)(a2 + 24);
  if (v7 >> 60 == 15)
  {
    sub_1909369F0(a1 + 16);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *v5;
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)v5;
  *(_QWORD *)(a1 + 24) = v7;
  sub_1908B53FC(v8, v6);
LABEL_6:
  v9 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  if (*(_QWORD *)(a1 + 64))
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  v10 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlInfo()
{
  return &type metadata for ControlInfo;
}

uint64_t sub_190936B90()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D6F8 = result;
  return result;
}

uint64_t sub_190936BB4()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B520);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D6E0 = v0;
  *(_QWORD *)algn_1ECF6D6E8 = 0xD000000000000010;
  qword_1ECF6D6F0 = 0x8000000190A60DA0;
  return result;
}

ValueMetadata *type metadata accessor for LegibilityWeightKey()
{
  return &type metadata for LegibilityWeightKey;
}

unint64_t sub_190936C3C()
{
  unint64_t result;

  result = qword_1ECF6B618;
  if (!qword_1ECF6B618)
  {
    result = MEMORY[0x19401429C](&unk_190A4F6C0, &type metadata for LegibilityWeightKey.CodableLegibilityWeight);
    atomic_store(result, (unint64_t *)&qword_1ECF6B618);
  }
  return result;
}

unint64_t sub_190936C84()
{
  unint64_t result;

  result = qword_1ECF6B630;
  if (!qword_1ECF6B630)
  {
    result = MEMORY[0x19401429C](&unk_190A4F698, &type metadata for LegibilityWeightKey.CodableLegibilityWeight);
    atomic_store(result, (unint64_t *)&qword_1ECF6B630);
  }
  return result;
}

unint64_t sub_190936CCC()
{
  unint64_t result;

  result = qword_1ECF6B610;
  if (!qword_1ECF6B610)
  {
    result = MEMORY[0x19401429C](&unk_190A4F670, &type metadata for LegibilityWeightKey.CodableLegibilityWeight);
    atomic_store(result, (unint64_t *)&qword_1ECF6B610);
  }
  return result;
}

uint64_t sub_190936D10(char *a1, unsigned __int8 *a2)
{
  return sub_190A273F0(*a1, *a2);
}

uint64_t sub_190936D1C()
{
  sub_190A487C0();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_190936DAC()
{
  sub_190A47B18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190936E18()
{
  sub_190A487C0();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_190936EA4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190937734();
  *a1 = result;
  return result;
}

void sub_190936ED0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 1684828002;
  if (v2 != 1)
    v4 = 1701736302;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x72616C75676572;
  if (!v5)
    v3 = 0xE400000000000000;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_190936F20()
{
  sub_1909372D0();
  return sub_190A47C2C();
}

uint64_t sub_190936F7C()
{
  sub_1909372D0();
  return sub_190A47C14();
}

uint64_t sub_190936FC8(char *a1, unsigned __int8 *a2)
{
  return sub_1909371D8(*a1, *a2);
}

uint64_t sub_190936FD4(char *a1, char *a2)
{
  return sub_1909FF67C(*a1, *a2);
}

uint64_t sub_190936FE0(char *a1, unsigned __int8 *a2)
{
  return sub_1909FFA2C(*a1, *a2);
}

uint64_t sub_190936FEC(char *a1, char *a2)
{
  return sub_1909FFD24(*a1, *a2);
}

uint64_t sub_190936FF8()
{
  if (qword_1ECF6B640 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_190937038@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  if (!*a1)
  {
    v3 = (unsigned int *)MEMORY[0x1E0CD9EF0];
    goto LABEL_5;
  }
  if (*a1 == 1)
  {
    v3 = (unsigned int *)MEMORY[0x1E0CD9EE8];
LABEL_5:
    v4 = *v3;
    v5 = sub_190A468E8();
    v6 = *(_QWORD *)(v5 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a2, v4, v5);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(a2, 0, 1, v5);
  }
  v8 = sub_190A468E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a2, 1, 1, v8);
}

uint64_t sub_1909370F4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_190937314(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_19093711C()
{
  uint64_t v0;

  if (qword_1ECF6B608 != -1)
    swift_once();
  v0 = qword_1ECF6D6E0;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_190937194()
{
  unint64_t result;

  result = qword_1ECF6B620;
  if (!qword_1ECF6B620)
  {
    result = MEMORY[0x19401429C](&unk_190A4F708, &type metadata for LegibilityWeightKey.CodableLegibilityWeight);
    atomic_store(result, (unint64_t *)&qword_1ECF6B620);
  }
  return result;
}

uint64_t sub_1909371D8(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 1684828002;
    else
      v2 = 1701736302;
    v3 = 0xE400000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 1684828002;
      else
        v5 = 1701736302;
      v6 = 0xE400000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE700000000000000;
    v2 = 0x72616C75676572;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v2 != 0x72616C75676572)
  {
LABEL_15:
    v7 = sub_190A486DC();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 0;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

unint64_t sub_1909372D0()
{
  unint64_t result;

  result = qword_1ECF6B628;
  if (!qword_1ECF6B628)
  {
    result = MEMORY[0x19401429C](&unk_190A4F7B8, &type metadata for LegibilityWeightKey.CodableLegibilityWeight);
    atomic_store(result, (unint64_t *)&qword_1ECF6B628);
  }
  return result;
}

uint64_t sub_190937314(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v13)(char *, char *, uint64_t);
  int v14;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  _QWORD v21[4];
  uint64_t v22[6];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_190A468E8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v21 - v10;
  sub_1909375D8(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_190937620((uint64_t)v4);
    return 2;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    v13 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v13(v9, v11, v5);
    v14 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
    if (v14 == *MEMORY[0x1E0CD9EF0])
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return 0;
    }
    else if (v14 == *MEMORY[0x1E0CD9EE8])
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return 1;
    }
    else
    {
      v22[3] = v5;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v22);
      v13((char *)boxed_opaque_existential_1, v11, v5);
      v16 = sub_190A48334();
      swift_allocError();
      v18 = v17;
      v21[1] = v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1ED3B8) + 48);
      sub_1908B3694((uint64_t)v22, v18);
      v21[2] = sub_190A482C8();
      v21[3] = v19;
      sub_190A47B3C();
      v22[5] = 39;
      sub_190A4867C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A48304();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x1E0DEC4B0], v16);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      swift_willThrow();
      v20 = *(void (**)(char *, uint64_t))(v6 + 8);
      v20(v11, v5);
      return ((uint64_t (*)(char *, uint64_t))v20)(v9, v5);
    }
  }
}

uint64_t sub_1909375D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_190937620(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for LegibilityWeightKey.CodableLegibilityWeight(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1909376B4 + 4 * byte_190A4F625[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1909376E8 + 4 * asc_190A4F620[v4]))();
}

uint64_t sub_1909376E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909376F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909376F8);
  return result;
}

uint64_t sub_190937704(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19093770CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190937710(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190937718(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LegibilityWeightKey.CodableLegibilityWeight()
{
  return &type metadata for LegibilityWeightKey.CodableLegibilityWeight;
}

uint64_t sub_190937734()
{
  unint64_t v0;

  v0 = sub_190A484F0();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_19093777C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_190937784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_19093778C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 24) + *(_QWORD *)(a2 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_190930784;
  return v7(a1, a2);
}

uint64_t EnvironmentValues._widgetFamily.getter()
{
  sub_19090191C();
  return sub_190A46C3C();
}

uint64_t EnvironmentValues._widgetFamily.setter()
{
  sub_19090191C();
  return sub_190A46C48();
}

uint64_t sub_190937868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1ED3B8);
  sub_1908B3694(a1, a2);
  sub_190A482C8();
  sub_190A47B3C();
  sub_190A4867C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A48304();
  v4 = *MEMORY[0x1E0DEC4B0];
  v5 = sub_190A48334();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
}

uint64_t sub_190937970()
{
  sub_190937DC0();
  return sub_190A4681C();
}

uint64_t EnvironmentValues.widgetFamily.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  unsigned __int8 v3;

  sub_19090191C();
  result = sub_190A46C3C();
  if (v3 < 0xDu && ((0x13BFu >> v3) & 1) != 0)
  {
    *a1 = byte_190A4F8B2[(char)v3];
  }
  else
  {
    result = sub_190A486D0();
    __break(1u);
  }
  return result;
}

uint64_t EnvironmentValues.chsWidgetFamily.getter()
{
  uint64_t result;
  unsigned __int8 v1;

  sub_19090191C();
  sub_190A46C3C();
  if (v1 < 0xDu && ((0x13BFu >> v1) & 1) != 0)
    return qword_190A4F8C0[(char)v1];
  result = sub_190A486D0();
  __break(1u);
  return result;
}

uint64_t EnvironmentValues.internalWidgetFamily.getter()
{
  sub_19090191C();
  return sub_190A46C3C();
}

uint64_t (*EnvironmentValues._widgetFamily.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = sub_19090191C();
  sub_190A46C3C();
  return sub_190937B3C;
}

uint64_t sub_190937B3C(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_190A46C48();
}

ValueMetadata *type metadata accessor for WidgetFamilyKey()
{
  return &type metadata for WidgetFamilyKey;
}

uint64_t sub_190937B88()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D8F8 = result;
  return result;
}

uint64_t sub_190937BAC()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CB68);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D8E0 = v0;
  strcpy(algn_1ECF6D8E8, "widgetFamily");
  BYTE5(qword_1ECF6D8F0) = 0;
  HIWORD(qword_1ECF6D8F0) = -5120;
  return result;
}

uint64_t sub_190937C24()
{
  if (qword_1ECF6C920 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_190937C64@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD v6[4];

  v3 = *a1;
  if ((CHSWidgetFamilyIsValid() & 1) != 0)
  {
    result = InternalWidgetFamily.init(_:)(v3, v6);
    *a2 = v6[0];
  }
  else
  {
    v6[3] = MEMORY[0x1E0DEB418];
    v6[0] = v3;
    sub_190A48334();
    swift_allocError();
    sub_190937868((uint64_t)v6, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_190937D24@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_190937E04(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_190937D4C()
{
  uint64_t v0;

  if (qword_1ECF6C918 != -1)
    swift_once();
  v0 = qword_1ECF6D8E0;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_190937DC0()
{
  unint64_t result;

  result = qword_1ECF6A520;
  if (!qword_1ECF6A520)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for InternalWidgetFamily, &type metadata for InternalWidgetFamily);
    atomic_store(result, (unint64_t *)&qword_1ECF6A520);
  }
  return result;
}

uint64_t sub_190937E04(unsigned __int8 *a1)
{
  unsigned int v1;
  uint64_t result;

  v1 = *a1;
  if (v1 < 0xD && ((0x13BFu >> v1) & 1) != 0)
    return qword_190A4F8C0[(char)v1];
  result = sub_190A486D0();
  __break(1u);
  return result;
}

uint64_t sub_190937E58@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t *v16;
  uint64_t v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  *a3 = v9;
  v10 = type metadata accessor for CommonActivityArchivingModifiers();
  v11 = (uint64_t)&a3[*(int *)(v10 + 20)];
  sub_1909396A4(a2, v11);
  v12 = type metadata accessor for MetricsRequest(0);
  sub_1908AAA48(v11 + *(int *)(v12 + 40), (uint64_t)v8, qword_1EE1EAFB0);
  v13 = sub_190A46EE8();
  LODWORD(a2) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v8, 1, v13);
  sub_1908AA544((uint64_t)v8, qword_1EE1EAFB0);
  if ((_DWORD)a2 == 1)
    __asm { BR              X9 }
  v14 = type metadata accessor for RectangularHomeScreenComplicationFontDefinition();
  result = sub_1908AA2F4(&qword_1EE1ED3C8, (uint64_t (*)(uint64_t))type metadata accessor for RectangularHomeScreenComplicationFontDefinition, (uint64_t)&unk_190A5AD2C);
  v16 = (uint64_t *)&a3[*(int *)(v10 + 24)];
  *v16 = v14;
  v16[1] = result;
  return result;
}

uint64_t sub_190938004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v3 = v2;
  *(_QWORD *)&v65 = a1;
  v73 = a2;
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA4D0);
  MEMORY[0x1E0C80A78](v70);
  v72 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA4C8);
  MEMORY[0x1E0C80A78](v71);
  v55 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
  MEMORY[0x1E0C80A78](v6);
  v68 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for MetricsRequest(0);
  MEMORY[0x1E0C80A78](v69);
  v67 = (uint64_t)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_190A46EE8();
  v64 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v54 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_190A46930();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CDA088];
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1E61E8);
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E60B0);
  MEMORY[0x1E0C80A78](v58);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E60E0);
  MEMORY[0x1E0C80A78](v61);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6100);
  MEMORY[0x1E0C80A78](v63);
  v59 = (uint64_t)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6120);
  MEMORY[0x1E0C80A78](v74);
  v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for CommonActivityArchivingModifiers();
  v57 = v3 + *(int *)(v23 + 20);
  v24 = *(_QWORD *)(v57 + 48);
  v25 = (char *)v13 + *(int *)(v10 + 20);
  v26 = *MEMORY[0x1E0CDB0C0];
  v27 = sub_190A46E7C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
  *v13 = v24;
  v13[1] = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E61C0);
  sub_1908AF598(&qword_1EE1E61B8, &qword_1EE1E61C0, MEMORY[0x1E0CDBF10]);
  sub_1908AA2F4((unint64_t *)&qword_1ECF6C500, v11, MEMORY[0x1E0CDA060]);
  sub_190A47548();
  sub_1908B5150((uint64_t)v13, v11);
  KeyPath = swift_getKeyPath();
  v29 = *(int *)(v23 + 24);
  v30 = v60;
  v31 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  v65 = *(_OWORD *)(v56 + v29);
  v32 = v62;
  v31(v17, v15, v62);
  v33 = &v17[*(int *)(v58 + 36)];
  *(_QWORD *)v33 = KeyPath;
  *(_OWORD *)(v33 + 8) = v65;
  v34 = v64;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v32);
  v35 = swift_getKeyPath();
  v36 = v57;
  v37 = *(double *)(v57 + 104);
  sub_1908AAA48((uint64_t)v17, (uint64_t)v19, &qword_1EE1E60B0);
  v38 = &v19[*(int *)(v61 + 36)];
  *(_QWORD *)v38 = v35;
  v38[8] = v37 == 1.0;
  sub_1908AA544((uint64_t)v17, &qword_1EE1E60B0);
  v39 = swift_getKeyPath();
  v40 = v59;
  sub_1908AAA48((uint64_t)v19, v59, &qword_1EE1E60E0);
  v41 = v40 + *(int *)(v63 + 36);
  *(_QWORD *)v41 = v39;
  *(_BYTE *)(v41 + 8) = v37 != 1.0;
  sub_1908AA544((uint64_t)v19, &qword_1EE1E60E0);
  v42 = swift_getKeyPath();
  sub_1908AAA48(v40, (uint64_t)v22, &qword_1EE1E6100);
  v43 = &v22[*(int *)(v74 + 36)];
  *(_QWORD *)v43 = v42;
  v44 = (uint64_t)v68;
  v43[8] = 0;
  v45 = v66;
  sub_1908AA544(v40, &qword_1EE1E6100);
  v46 = v67;
  sub_1909388A8(v36, v67);
  sub_190939300(v46 + *(int *)(v69 + 40), v44);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v44, 1, v45) == 1)
  {
    sub_1908AA544(v44, qword_1EE1EAFB0);
    sub_1908AAA48((uint64_t)v22, v72, &qword_1EE1E6120);
    swift_storeEnumTagMultiPayload();
    sub_190939348();
    sub_1909393CC();
    sub_190A46F90();
  }
  else
  {
    v47 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v54, v44, v45);
    v48 = swift_getKeyPath();
    v49 = (uint64_t)v55;
    v50 = (uint64_t *)&v55[*(int *)(v71 + 36)];
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA520);
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))((char *)v50 + *(int *)(v51 + 28), v47, v45);
    *v50 = v48;
    sub_1908AAA48((uint64_t)v22, v49, &qword_1EE1E6120);
    sub_1908AAA48(v49, v72, &qword_1EE1EA4C8);
    swift_storeEnumTagMultiPayload();
    sub_190939348();
    sub_1909393CC();
    sub_190A46F90();
    sub_1908AA544(v49, &qword_1EE1EA4C8);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v47, v45);
  }
  return sub_1908AA544((uint64_t)v22, &qword_1EE1E6120);
}

uint64_t sub_1909386DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_190A46EE8();
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_190A46C18();
}

uint64_t View.applyCommonEnvironment(viewTag:metricsRequest:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE v15[15];
  unsigned __int8 v16;

  v8 = type metadata accessor for MetricsRequest(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for CommonActivityArchivingModifiers();
  MEMORY[0x1E0C80A78](v11);
  v13 = &v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *a1;
  sub_1909388A8(a2, (uint64_t)v10);
  sub_190937E58(&v16, (uint64_t)v10, v13);
  MEMORY[0x194012838](v13, a3, v11, a4);
  return sub_1908B5150((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for CommonActivityArchivingModifiers);
}

uint64_t type metadata accessor for CommonActivityArchivingModifiers()
{
  uint64_t result;

  result = qword_1EE1EA558;
  if (!qword_1EE1EA558)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1909388A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MetricsRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1909388EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  type metadata accessor for CommonActivityArchivingModifiers();
  v2 = sub_190A46894();
  v4[0] = v1;
  v4[1] = sub_1908AA2F4(&qword_1EE1E66C8, (uint64_t (*)(uint64_t))type metadata accessor for CommonActivityArchivingModifiers, (uint64_t)&unk_190A4F998);
  return MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v2, v4);
}

_QWORD *sub_19093896C(_BYTE *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  _BYTE *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v8[16] = *((_BYTE *)a2 + v7 + 16);
    *(_OWORD *)v8 = *(_OWORD *)((char *)a2 + v7);
    v8[40] = *((_BYTE *)a2 + v7 + 40);
    *(_OWORD *)(v8 + 24) = *(_OWORD *)((char *)a2 + v7 + 24);
    *((_QWORD *)v8 + 6) = *(_QWORD *)((char *)a2 + v7 + 48);
    v8[88] = *((_BYTE *)a2 + v7 + 88);
    *(_OWORD *)(v8 + 72) = *(_OWORD *)((char *)a2 + v7 + 72);
    *(_OWORD *)(v8 + 56) = *(_OWORD *)((char *)a2 + v7 + 56);
    *((_OWORD *)v8 + 6) = *(_OWORD *)((char *)a2 + v7 + 96);
    v10 = *(int *)(type metadata accessor for MetricsRequest(0) + 40);
    v11 = &v8[v10];
    v12 = &v9[v10];
    v13 = sub_190A46EE8();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *(_OWORD *)((char *)v4 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t sub_190938ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = v2 + *(int *)(type metadata accessor for MetricsRequest(0) + 40);
  v4 = sub_190A46EE8();
  v5 = *(_QWORD *)(v4 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  return result;
}

_BYTE *sub_190938B48(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v7[16] = a2[v6 + 16];
  *(_OWORD *)v7 = *(_OWORD *)&a2[v6];
  v7[40] = a2[v6 + 40];
  *(_OWORD *)(v7 + 24) = *(_OWORD *)&a2[v6 + 24];
  *((_QWORD *)v7 + 6) = *(_QWORD *)&a2[v6 + 48];
  v7[88] = a2[v6 + 88];
  *(_OWORD *)(v7 + 72) = *(_OWORD *)&a2[v6 + 72];
  *(_OWORD *)(v7 + 56) = *(_OWORD *)&a2[v6 + 56];
  *((_OWORD *)v7 + 6) = *(_OWORD *)&a2[v6 + 96];
  v9 = *(int *)(type metadata accessor for MetricsRequest(0) + 40);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = sub_190A46EE8();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

_BYTE *sub_190938C7C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_BYTE *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = *(_OWORD *)&a2[v6];
  v7[16] = a2[v6 + 16];
  *(_OWORD *)v7 = v9;
  v10 = *(_OWORD *)&a2[v6 + 24];
  v7[40] = a2[v6 + 40];
  *(_OWORD *)(v7 + 24) = v10;
  *((_QWORD *)v7 + 6) = *(_QWORD *)&a2[v6 + 48];
  v11 = *(_OWORD *)&a2[v6 + 56];
  v12 = *(_OWORD *)&a2[v6 + 72];
  v7[88] = a2[v6 + 88];
  *(_OWORD *)(v7 + 72) = v12;
  *(_OWORD *)(v7 + 56) = v11;
  *((_QWORD *)v7 + 12) = *(_QWORD *)&a2[v6 + 96];
  *((_QWORD *)v7 + 13) = *(_QWORD *)&a2[v6 + 104];
  v13 = *(int *)(type metadata accessor for MetricsRequest(0) + 40);
  v14 = &v7[v13];
  v15 = &v8[v13];
  v16 = sub_190A46EE8();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

_BYTE *sub_190938E04(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v7[16] = a2[v6 + 16];
  *(_OWORD *)v7 = *(_OWORD *)&a2[v6];
  v7[40] = a2[v6 + 40];
  *(_OWORD *)(v7 + 24) = *(_OWORD *)&a2[v6 + 24];
  *((_QWORD *)v7 + 6) = *(_QWORD *)&a2[v6 + 48];
  v7[88] = a2[v6 + 88];
  *(_OWORD *)(v7 + 72) = *(_OWORD *)&a2[v6 + 72];
  *(_OWORD *)(v7 + 56) = *(_OWORD *)&a2[v6 + 56];
  *((_OWORD *)v7 + 6) = *(_OWORD *)&a2[v6 + 96];
  v9 = *(int *)(type metadata accessor for MetricsRequest(0) + 40);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = sub_190A46EE8();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

_BYTE *sub_190938F38(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_BYTE *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v7[16] = a2[v6 + 16];
  *(_OWORD *)v7 = *(_OWORD *)&a2[v6];
  v7[40] = a2[v6 + 40];
  *(_OWORD *)(v7 + 24) = *(_OWORD *)&a2[v6 + 24];
  *((_QWORD *)v7 + 6) = *(_QWORD *)&a2[v6 + 48];
  v7[88] = a2[v6 + 88];
  *(_OWORD *)(v7 + 72) = *(_OWORD *)&a2[v6 + 72];
  *(_OWORD *)(v7 + 56) = *(_OWORD *)&a2[v6 + 56];
  *((_OWORD *)v7 + 6) = *(_OWORD *)&a2[v6 + 96];
  v9 = *(int *)(type metadata accessor for MetricsRequest(0) + 40);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = sub_190A46EE8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_1909390B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909390C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for MetricsRequest(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_190939144()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190939150(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for MetricsRequest(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_1909391CC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MetricsRequest(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_190939248()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190939268@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_190939660();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_1909392B4()
{
  sub_190939660();
  return sub_190A46C48();
}

uint64_t sub_190939300(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_190939348()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EA4C0;
  if (!qword_1EE1EA4C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EA4C8);
    v2[0] = sub_1909393CC();
    v2[1] = sub_1908AF598(&qword_1EE1EA518, &qword_1EE1EA520, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EA4C0);
  }
  return result;
}

unint64_t sub_1909393CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E6118;
  if (!qword_1EE1E6118)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6120);
    v2[0] = sub_19093946C(&qword_1EE1E60F8, &qword_1EE1E6100, sub_190939450);
    v2[1] = sub_1909395F8();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6118);
  }
  return result;
}

uint64_t sub_190939450()
{
  return sub_19093946C(&qword_1EE1E60D8, &qword_1EE1E60E0, (uint64_t (*)(void))sub_1909394F0);
}

uint64_t sub_19093946C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_1908AF598((unint64_t *)&qword_1ECF6A8D8, &qword_1ECF6A8E0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1909394F0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  _QWORD v5[6];

  result = qword_1EE1E60A8;
  if (!qword_1EE1E60A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E60B0);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E61C0);
    v3 = sub_190A46930();
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CDA088];
    v5[2] = v2;
    v5[3] = v3;
    v5[4] = sub_1908AF598(&qword_1EE1E61B8, &qword_1EE1E61C0, MEMORY[0x1E0CDBF10]);
    v5[5] = sub_1908AA2F4((unint64_t *)&qword_1ECF6C500, v4, MEMORY[0x1E0CDA060]);
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = sub_1908AF598(&qword_1ECF6C628, &qword_1ECF6C630, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1EE1E60A8);
  }
  return result;
}

unint64_t sub_1909395F8()
{
  unint64_t result;

  result = qword_1ECF6B300;
  if (!qword_1ECF6B300)
  {
    result = MEMORY[0x19401429C](&unk_190A55B94, &type metadata for WidgetIdiomModifier);
    atomic_store(result, (unint64_t *)&qword_1ECF6B300);
  }
  return result;
}

uint64_t sub_19093963C()
{
  return sub_190A46C0C();
}

unint64_t sub_190939660()
{
  unint64_t result;

  result = qword_1EE1E6130;
  if (!qword_1EE1E6130)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for EnvironmentValues.ActivityFullScreenKey, &type metadata for EnvironmentValues.ActivityFullScreenKey);
    atomic_store(result, (unint64_t *)&qword_1EE1E6130);
  }
  return result;
}

uint64_t sub_1909396A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MetricsRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1909396EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EA4D8;
  if (!qword_1EE1EA4D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EA4E0);
    v2[0] = sub_190939348();
    v2[1] = sub_1909393CC();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EA4D8);
  }
  return result;
}

uint64_t JindoViewTag.rawValue.getter(uint64_t result)
{
  return result;
}

uint64_t JindoViewTag.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_190939794 + 4 * byte_190A4FAC0[a1]))(0x6465646E61707865, 0xE800000000000000);
}

uint64_t sub_190939794()
{
  return 0x4C746361706D6F63;
}

uint64_t sub_1909397B8()
{
  return 0x54746361706D6F63;
}

uint64_t sub_1909397DC()
{
  return 0x4D746361706D6F63;
}

void *static JindoViewTag.allCases.getter()
{
  return &unk_1E2CC3590;
}

unint64_t sub_190939810@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9WidgetKit12JindoViewTagO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_190939838(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E2CC3648;
}

uint64_t sub_190939848()
{
  sub_190939B00();
  return sub_190A47C38();
}

uint64_t sub_1909398A4()
{
  sub_190939B00();
  return sub_190A47C20();
}

uint64_t sub_1909398F0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_190939920 + 4 * byte_190A4FAC4[*v0]))(0x6465646E61707865, 0xE800000000000000);
}

uint64_t sub_190939920()
{
  return 0x4C746361706D6F63;
}

uint64_t sub_190939944()
{
  return 0x54746361706D6F63;
}

uint64_t sub_190939968()
{
  return 0x4D746361706D6F63;
}

unint64_t _s9WidgetKit12JindoViewTagO8rawValueACSgSi_tcfC_0(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

unint64_t sub_1909399A0()
{
  unint64_t result;

  result = qword_1EE1ED3D0;
  if (!qword_1EE1ED3D0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for JindoViewTag, &type metadata for JindoViewTag);
    atomic_store(result, (unint64_t *)&qword_1EE1ED3D0);
  }
  return result;
}

unint64_t sub_1909399E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1ED3D8;
  if (!qword_1EE1ED3D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1ED3E0);
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1ED3D8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JindoViewTag(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_190939A80 + 4 * byte_190A4FACD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_190939AB4 + 4 * byte_190A4FAC8[v4]))();
}

uint64_t sub_190939AB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190939ABC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190939AC4);
  return result;
}

uint64_t sub_190939AD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190939AD8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_190939ADC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190939AE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JindoViewTag()
{
  return &type metadata for JindoViewTag;
}

unint64_t sub_190939B00()
{
  unint64_t result;

  result = qword_1EE1ED3E8;
  if (!qword_1EE1ED3E8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for JindoViewTag, &type metadata for JindoViewTag);
    atomic_store(result, &qword_1EE1ED3E8);
  }
  return result;
}

__n128 sub_190939B44@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  __n128 result;

  v2 = *(_BYTE *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 17);
  v4 = *(_BYTE *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_BYTE *)(a2 + 16) = v2;
  *(_BYTE *)(a2 + 17) = v3;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_BYTE *)(a2 + 40) = v4;
  *(_QWORD *)(a2 + 48) = v5;
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(a1 + 56);
  result = *(__n128 *)(a1 + 72);
  *(__n128 *)(a2 + 72) = result;
  return result;
}

uint64_t sub_190939B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  *(_QWORD *)(v4 + 328) = a2;
  *(_QWORD *)(v4 + 336) = a3;
  *(_QWORD *)(v4 + 320) = a1;
  *(_QWORD *)(v4 + 344) = type metadata accessor for ControlTemplateButton(0);
  *(_QWORD *)(v4 + 352) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  *(_QWORD *)(v4 + 360) = swift_task_alloc();
  type metadata accessor for ControlTemplateButton.Option(0);
  *(_QWORD *)(v4 + 368) = swift_task_alloc();
  *(_QWORD *)(v4 + 376) = swift_task_alloc();
  *(_QWORD *)(v4 + 384) = swift_task_alloc();
  *(_QWORD *)(v4 + 392) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB690);
  *(_QWORD *)(v4 + 400) = swift_task_alloc();
  *(_QWORD *)(v4 + 408) = type metadata accessor for ExtractedControlValueMetadata(0);
  *(_QWORD *)(v4 + 416) = swift_task_alloc();
  v6 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(v4 + 424) = v6;
  *(_QWORD *)(v4 + 432) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 440) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6A8E0);
  v7 = sub_190A46894();
  *(_QWORD *)(v4 + 448) = v7;
  *(_QWORD *)(v4 + 456) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 464) = swift_task_alloc();
  v8 = sub_190A46894();
  *(_QWORD *)(v4 + 472) = v8;
  *(_QWORD *)(v4 + 480) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 488) = swift_task_alloc();
  v9 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(v4 + 136) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v4 + 152) = v9;
  *(_OWORD *)(v4 + 168) = *(_OWORD *)(v3 + 64);
  *(_QWORD *)(v4 + 184) = *(_QWORD *)(v3 + 80);
  v10 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v4 + 104) = *(_OWORD *)v3;
  *(_OWORD *)(v4 + 120) = v10;
  sub_190A47D64();
  *(_QWORD *)(v4 + 496) = sub_190A47D58();
  sub_190A47D28();
  return swift_task_switch();
}

void sub_190939D9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (**v42)(_QWORD, __n128);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;

  v44 = *(_QWORD *)(v0 + 488);
  v51 = *(_QWORD *)(v0 + 472);
  v39 = *(_QWORD *)(v0 + 464);
  v1 = *(_QWORD *)(v0 + 448);
  v46 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 440);
  v40 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 424);
  v49 = *(_QWORD *)(v0 + 416);
  v53 = *(_QWORD *)(v0 + 408);
  v4 = *(_QWORD *)(v0 + 336);
  v47 = *(_QWORD *)(v0 + 328);
  swift_release();
  v5 = *(void (**)(void))(v0 + 160);
  v6 = *(_OWORD *)(v0 + 120);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v0 + 208) = v6;
  *(_OWORD *)(v0 + 217) = *(_OWORD *)(v0 + 129);
  v54 = *(unsigned __int8 *)(v0 + 208);
  v55 = swift_allocObject();
  *(_BYTE *)(v55 + 16) = 0;
  v5();
  swift_getKeyPath();
  *(_BYTE *)(v0 + 233) = 1;
  v42 = (uint64_t (**)(_QWORD, __n128))(v0 + 192);
  v7 = *(_QWORD *)(v4 + 32);
  sub_190A474F4();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v2, v3);
  v8 = sub_19093A464();
  v41 = v7;
  *(_QWORD *)(v0 + 280) = v7;
  *(_QWORD *)(v0 + 288) = v8;
  v9 = MEMORY[0x1E0CD9C20];
  v10 = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v0 + 280);
  sub_1909FAD80(v54, v1, v10);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v39, v1);
  MEMORY[0x19401429C](&unk_190A4FCC8, v4);
  v11 = sub_19093A4B0();
  *(_QWORD *)(v0 + 296) = v10;
  *(_QWORD *)(v0 + 304) = v11;
  MEMORY[0x19401429C](v9, v51, v0 + 296);
  v12.n128_f64[0] = sub_1909FADB0(v44, v47, v51, v49);
  if (*(_BYTE *)(v49 + *(int *)(v53 + 24)) == 1)
    *(_BYTE *)(v55 + 16) = 1;
  if (*v42)
  {
    v13 = (*v42)(*(_QWORD *)(v0 + 328), v12);
    v15 = v14;
    v17 = v16 & 1;
  }
  else
  {
    v13 = 0;
    v15 = 0;
    v17 = 1;
  }
  v18 = *(_QWORD *)(v0 + 400);
  sub_190A47194();
  v19 = sub_190A471D0();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19);
  v22 = *(_QWORD *)(v0 + 400);
  v50 = v13;
  v48 = v17;
  v45 = v15;
  if (v21 == 1)
  {
    sub_1908AA544(v22, &qword_1EE1EB690);
    v52 = 0;
    v37 = 0;
  }
  else
  {
    v23 = (void *)sub_190A471C4();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v19);
    v24 = objc_msgSend(v23, sel_string);

    v52 = sub_190A47ADC();
    v37 = v25;

  }
  v26 = *(_QWORD *)(v0 + 424);
  v43 = *(_QWORD *)(v0 + 392);
  v28 = *(_QWORD *)(v0 + 328);
  v27 = *(_QWORD *)(v0 + 336);
  v38 = *(_QWORD *)(v0 + 416);
  v29 = (uint64_t *)(v38 + *(int *)(*(_QWORD *)(v0 + 408) + 20));
  v30 = *v29;
  v31 = v29[1];
  v32 = v29[2];
  v33 = v29[3];
  v34 = *(_QWORD *)(v27 + 24);
  v35 = *(_QWORD *)(v27 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v36) = v48;
  sub_19093A4F4(0, v0 + 104, v54, v28, v38, v55, v52, v37, v43, v50, v45, v36, v30, v31, v32, v33, v26, v34, v41, v35);
}

#error "19093A19C: call analysis failed (funcsize=20)"

uint64_t sub_19093A1A0()
{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v0 & 1) == 0)
  {
    swift_beginAccess();
    v2 = *v20;
  }
  v22 = v2;
  v4 = *(_QWORD *)(v1 + 488);
  v5 = *(_QWORD *)(v1 + 480);
  *(_QWORD *)(v3 - 136) = *(_QWORD *)(v1 + 472);
  *(_QWORD *)(v3 - 128) = v4;
  v6 = *(_QWORD *)(v1 + 440);
  *(_QWORD *)(v3 - 112) = *(_QWORD *)(v1 + 464);
  *(_QWORD *)(v3 - 104) = v6;
  *(_QWORD *)(v3 - 152) = *(_QWORD *)(v1 + 416);
  *(_QWORD *)(v3 - 144) = v5;
  v7 = *(_QWORD *)(v1 + 392);
  *(_QWORD *)(v3 - 96) = *(_QWORD *)(v1 + 400);
  *(_QWORD *)(v3 - 160) = v7;
  v9 = *(_QWORD *)(v1 + 376);
  v8 = *(_QWORD *)(v1 + 384);
  v10 = *(_QWORD *)(v1 + 360);
  v11 = *(_QWORD *)(v1 + 368);
  v13 = *(int **)(v1 + 344);
  v12 = *(_QWORD *)(v1 + 352);
  v23 = v8;
  v24 = *(_QWORD *)(v1 + 320);
  sub_1908AF5D8(v7, v9, type metadata accessor for ControlTemplateButton.Option);
  sub_1908AF5D8(v8, v11, type metadata accessor for ControlTemplateButton.Option);
  *(_QWORD *)(v1 + 312) = *(_QWORD *)(v3 - 120);
  v14 = sub_190A45FC4();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v16 = v10;
  v15(v10, 1, 1, v14);
  v21 = *(_BYTE *)(v1 + 209);
  sub_19093AEB4(v1 + 216, v1 + 264);
  *(_DWORD *)(v3 - 120) = *(unsigned __int8 *)(v1 + 232);
  v17 = v12 + v13[7];
  v15(v17, 1, 1, v14);
  v18 = (_QWORD *)(v12 + v13[10]);
  *v18 = 0;
  v18[1] = 0;
  sub_1908BD0B4(v9, v12, type metadata accessor for ControlTemplateButton.Option);
  sub_1908BD0B4(v11, v12 + v13[5], type metadata accessor for ControlTemplateButton.Option);
  *(_QWORD *)(v12 + v13[6]) = *(_QWORD *)(v1 + 312);
  sub_19093AEFC((id *)(v1 + 312));
  sub_19093AF24(v1 + 264);
  sub_1908DCA84(v16, v17, (uint64_t *)&unk_1ECF6C858);
  *(_BYTE *)(v12 + v13[8]) = v22;
  *(_BYTE *)(v12 + v13[9]) = v21;
  sub_1908DCA84(v1 + 264, (uint64_t)v18, &qword_1ECF6C2E8);
  *(_BYTE *)(v12 + v13[11]) = *(_DWORD *)(v3 - 120);
  sub_1908BD0B4(v12, v24, type metadata accessor for ControlTemplateButton);
  sub_1908B5150(v23, type metadata accessor for ControlTemplateButton.Option);
  sub_1908B5150(*(_QWORD *)(v3 - 160), type metadata accessor for ControlTemplateButton.Option);
  sub_1908B5150(*(_QWORD *)(v3 - 152), type metadata accessor for ExtractedControlValueMetadata);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 144) + 8))(*(_QWORD *)(v3 - 128), *(_QWORD *)(v3 - 136));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_19093A44C()
{
  return swift_deallocObject();
}

unint64_t sub_19093A464()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECF6A8D8;
  if (!qword_1ECF6A8D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6A8E0);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDCF80], v1);
    atomic_store(result, (unint64_t *)&qword_1ECF6A8D8);
  }
  return result;
}

unint64_t sub_19093A4B0()
{
  unint64_t result;

  result = qword_1EE1ED3F8[0];
  if (!qword_1EE1ED3F8[0])
  {
    result = MEMORY[0x19401429C](&unk_190A5B18C, &type metadata for ExtractionViewModifier);
    atomic_store(result, qword_1EE1ED3F8);
  }
  return result;
}

void sub_19093A4F4(unsigned int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD v50[12];
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  char *v54;
  int v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[2];

  v62 = a7;
  v63 = a8;
  v50[1] = a6;
  v50[11] = a5;
  v60 = a4;
  v55 = a3;
  v53 = a1;
  v61 = a9;
  v58 = a19;
  v56 = a17;
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  v22 = MEMORY[0x1E0C80A78](v21);
  v50[3] = (char *)v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v50[8] = (char *)v50 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v50[7] = (char *)v50 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v50[2] = (char *)v50 - v29;
  MEMORY[0x1E0C80A78](v28);
  v50[9] = (char *)v50 - v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB690);
  v32 = MEMORY[0x1E0C80A78](v31);
  v50[5] = (char *)v50 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v54 = (char *)v50 - v34;
  v51 = type metadata accessor for ExtractedControlValueMetadata(0);
  v35 = MEMORY[0x1E0C80A78](v51);
  v50[6] = (char *)v50 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x1E0C80A78](v35);
  v50[10] = (char *)v50 - v38;
  v39 = MEMORY[0x1E0C80A78](v37);
  v64 = (char *)v50 - v40;
  v41 = *(_QWORD *)(a18 - 8);
  MEMORY[0x1E0C80A78](v39);
  v43 = (char *)v50 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6A8E0);
  v44 = sub_190A46894();
  v52 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v46 = (char *)v50 - v45;
  v47 = sub_190A46894();
  v59 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v57 = *(unsigned __int8 *)(a2 + 40);
  (*(void (**)(_QWORD))(a2 + 72))(v53);
  swift_getKeyPath();
  LOBYTE(v65) = 1;
  sub_190A474F4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v43, a18);
  v48 = sub_19093A464();
  v69[0] = a20;
  v69[1] = v48;
  v49 = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v44, v69);
  sub_1909FAD80(v55, v44, v49);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v46, v44);
  v65 = v56;
  v66 = a18;
  v67 = v58;
  v68 = a20;
  type metadata accessor for ControlWidgetButtonParser();
}

uint64_t sub_19093A8C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  MEMORY[0x19401429C](&unk_190A4FCC8, a1);
  v7 = sub_19093A4B0();
  *(_QWORD *)(v6 - 208) = v2;
  *(_QWORD *)(v6 - 200) = v7;
  v8 = *(_QWORD *)(v6 - 296);
  MEMORY[0x19401429C](v1, v4, v6 - 208);
  *(_QWORD *)(v6 - 264) = v5;
  v9 = *(_QWORD *)(v6 - 248);
  *(_QWORD *)(v6 - 248) = v4;
  sub_1909FADB0(v5, v9, v4, v3);
  sub_190A47194();
  v10 = sub_190A471D0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v12(v8, 1, v10) == 1)
  {
    sub_1908AA544(v8, &qword_1EE1EB690);
    v13 = *(_QWORD *)(v6 - 328);
    v14 = *(_QWORD *)(v6 - 336);
    sub_1908AF5D8(v13, v14, type metadata accessor for ExtractedControlValueMetadata);
  }
  else
  {
    v15 = (void *)sub_190A471C4();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v10);
    v16 = objc_msgSend(v15, sel_string);

    v17 = sub_190A47ADC();
    v19 = v18;

    v13 = *(_QWORD *)(v6 - 328);
    v14 = *(_QWORD *)(v6 - 336);
    sub_1908AF5D8(v13, v14, type metadata accessor for ExtractedControlValueMetadata);
    if (v19)
    {
      *(_QWORD *)(v6 - 384) = v19;
      *(_QWORD *)(v6 - 376) = v17;
      sub_1908B5150(v14, type metadata accessor for ExtractedControlValueMetadata);
      v20 = *(_QWORD *)(v6 - 392);
      v21 = *(_QWORD *)(v6 - 344);
      v22 = *(_QWORD *)(v6 - 352);
      v23 = *(_QWORD *)(v6 - 360);
      v24 = *(_QWORD *)(v6 - 400);
      v25 = *(_QWORD *)(v6 - 368);
      goto LABEL_9;
    }
  }
  v26 = *(_QWORD *)(v6 - 376);
  sub_190A471A0();
  v27 = v26;
  v28 = v12(v26, 1, v10);
  v21 = *(_QWORD *)(v6 - 344);
  v22 = *(_QWORD *)(v6 - 352);
  v23 = *(_QWORD *)(v6 - 360);
  v25 = *(_QWORD *)(v6 - 368);
  if (v28 == 1)
  {
    sub_1908B5150(v14, type metadata accessor for ExtractedControlValueMetadata);
    sub_1908AA544(v27, &qword_1EE1EB690);
    *(_QWORD *)(v6 - 376) = 0;
    *(_QWORD *)(v6 - 384) = 0;
  }
  else
  {
    v29 = v27;
    v30 = (void *)sub_190A471C4();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v29, v10);
    v31 = objc_msgSend(v30, sel_string);

    *(_QWORD *)(v6 - 376) = sub_190A47ADC();
    *(_QWORD *)(v6 - 384) = v32;

    sub_1908B5150(v14, type metadata accessor for ExtractedControlValueMetadata);
  }
  v20 = *(_QWORD *)(v6 - 392);
  v24 = *(_QWORD *)(v6 - 400);
LABEL_9:
  sub_190A4726C();
  sub_1908AF5D8(v13, v25, type metadata accessor for ExtractedControlValueMetadata);
  v33 = sub_190A47260();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  if (v35(v24, 1, v33) == 1)
  {
    sub_190A4726C();
    sub_1908B5150(v25, type metadata accessor for ExtractedControlValueMetadata);
    sub_1908AA544(v24, (uint64_t *)&unk_1ECF6A3B8);
  }
  else
  {
    sub_1908B5150(v25, type metadata accessor for ExtractedControlValueMetadata);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v21, v24, v33);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v21, 0, 1, v33);
  }
  if (*(_BYTE *)(*(_QWORD *)(v6 - 216) + *(int *)(*(_QWORD *)(v6 - 320) + 24)) == 1)
  {
    v36 = (_BYTE *)(*(_QWORD *)(v6 - 408) + 16);
    swift_beginAccess();
    *v36 = 1;
  }
  v38 = *(_QWORD *)(v6 + 56);
  v37 = *(_QWORD *)(v6 + 64);
  v39 = *(_QWORD *)(v6 + 48);
  *(_QWORD *)(v6 - 288) = *(_QWORD *)(v6 + 40);
  *(_DWORD *)(v6 - 296) = *(unsigned __int8 *)(v6 + 32);
  *(_QWORD *)(v6 - 304) = *(_QWORD *)(v6 + 24);
  *(_QWORD *)(v6 - 312) = *(_QWORD *)(v6 + 16);
  sub_19093AF58(v21, v23);
  v40 = *(_DWORD *)(v6 - 268);
  *(_QWORD *)(v6 - 280) = v38;
  if ((v40 & 1) != 0)
  {
    sub_1908AA544(v23, (uint64_t *)&unk_1ECF6A3B8);
  }
  else
  {
    sub_19093AF58(v23, v22);
    if (v35(v22, 1, v33) == 1)
    {
      sub_1908AA544(v23, (uint64_t *)&unk_1ECF6A3B8);
      sub_1908AA544(v22, (uint64_t *)&unk_1ECF6A3B8);
LABEL_20:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v20, 1, 1, v33);
      goto LABEL_21;
    }
    v41 = sub_190A47254();
    sub_1908AA544(v23, (uint64_t *)&unk_1ECF6A3B8);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v22, v33);
    if ((v41 & 1) == 0)
      goto LABEL_20;
  }
  sub_19093AF58(v21, v20);
LABEL_21:
  v42 = v21;
  v43 = v20;
  v44 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  v45 = *(_QWORD **)(v6 - 240);
  v46 = (uint64_t)v45 + v44[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v46, 1, 1, v33);
  v47 = (char *)v45 + v44[7];
  *(_QWORD *)v47 = 0;
  *((_QWORD *)v47 + 1) = 0;
  v47[16] = 1;
  v48 = (_QWORD *)((char *)v45 + v44[8]);
  *v48 = 0;
  v48[1] = 0;
  v49 = (_QWORD *)((char *)v45 + v44[9]);
  *v49 = 0;
  v49[1] = 0;
  v50 = *(_QWORD *)(v6 - 224);
  *v45 = *(_QWORD *)(v6 - 232);
  v45[1] = v50;
  v51 = *(_QWORD *)(v6 - 384);
  v45[2] = *(_QWORD *)(v6 - 376);
  v45[3] = v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1908DCA84(v43, v46, (uint64_t *)&unk_1ECF6A3B8);
  v52 = *(_QWORD *)(v6 - 304);
  *(_QWORD *)v47 = *(_QWORD *)(v6 - 312);
  *((_QWORD *)v47 + 1) = v52;
  v47[16] = *(_DWORD *)(v6 - 296) & 1;
  swift_bridgeObjectRelease();
  *v48 = *(_QWORD *)(v6 - 288);
  v48[1] = v39;
  swift_bridgeObjectRelease();
  *v49 = *(_QWORD *)(v6 - 280);
  v49[1] = v37;
  sub_1908AA544(v42, (uint64_t *)&unk_1ECF6A3B8);
  sub_1908B5150(*(_QWORD *)(v6 - 216), type metadata accessor for ExtractedControlValueMetadata);
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 256) + 8))(*(_QWORD *)(v6 - 264), *(_QWORD *)(v6 - 248));
}

uint64_t sub_19093AEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id *sub_19093AEFC(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

uint64_t sub_19093AF24(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

void type metadata accessor for ControlWidgetButtonParser()
{
  JUMPOUT(0x1940141E8);
}

uint64_t sub_19093AF58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19093AFA0(uint64_t a1)
{
  if (*(_QWORD *)a1)
    swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_release();
}

uint64_t sub_19093AFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  __int128 v9;
  __int128 v10;

  if (*(_QWORD *)a2)
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 80);
  v9 = *(_OWORD *)(a2 + 48);
  v10 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRetain();
  v7 = (id)v9;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_19093B08C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  if (!*(_QWORD *)a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 8) = v6;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  swift_retain();
  swift_release();
LABEL_8:
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_BYTE *)(a1 + 17) = *((_BYTE *)a2 + 17);
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  v7 = *(void **)(a1 + 48);
  v8 = (void *)a2[6];
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v8;

  v10 = a2[8];
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_QWORD *)(a1 + 64) = v10;
  swift_retain();
  swift_release();
  v11 = a2[10];
  *(_QWORD *)(a1 + 72) = a2[9];
  *(_QWORD *)(a1 + 80) = v11;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t sub_19093B1A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  if (!*(_QWORD *)a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 8) = v6;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  swift_release();
LABEL_8:
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_BYTE *)(a1 + 17) = *((_BYTE *)a2 + 17);
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);

  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
  swift_release();
  v8 = a2[10];
  *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
  *(_QWORD *)(a1 + 80) = v8;
  swift_release();
  return a1;
}

uint64_t sub_19093B268(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_19093B2B0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

unint64_t sub_19093B308()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EB6C8;
  if (!qword_1EE1EB6C8)
  {
    v1 = type metadata accessor for ControlTemplateButton(255);
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ControlTemplateButton, v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EB6C8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ResolvedWidgetConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResolvedWidgetConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResolvedWidgetConfiguration()
{
  return &type metadata for ResolvedWidgetConfiguration;
}

uint64_t sub_19093B3E8(uint64_t a1, uint64_t a2)
{
  sub_190A45CB8();
  return a2;
}

uint64_t sub_19093B430(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v4 = objc_msgSend(v3, sel__className);

  sub_190A47ADC();
  return a2;
}

uint64_t sub_19093B4C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_190A46EAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_19093B4FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_190A46EAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_19093B538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  BOOL v25;
  void (*v26)(char *, uint64_t);
  uint64_t (*v28)(uint64_t, char *, uint64_t);
  BOOL v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6ADD8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v33 - v9;
  v11 = sub_190A46EAC();
  v12 = *(_QWORD **)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v33 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v33 - v19;
  v21 = (*(uint64_t (**)(uint64_t))(v2 + 144))(a1);
  (*(void (**)(uint64_t))(v2 + 128))(v21);
  v22 = (unsigned int (*)(char *, uint64_t, uint64_t))v12[6];
  if (v22(v10, 1, v11) == 1)
  {
    v23 = sub_1908AA544((uint64_t)v10, &qword_1ECF6ADD8);
  }
  else
  {
    v34 = a2;
    v24 = (void (*)(char *, char *, uint64_t))v12[4];
    v24(v18, v10, v11);
    v25 = sub_19093C210((uint64_t)v20, (uint64_t)v18);
    v26 = (void (*)(char *, uint64_t))v12[1];
    if (v25)
    {
      v26(v20, v11);
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v24)(v34, v18, v11);
    }
    v23 = ((uint64_t (*)(char *, uint64_t))v26)(v18, v11);
    a2 = v34;
  }
  (*(void (**)(uint64_t))(v2 + 136))(v23);
  if (v22(v8, 1, v11) == 1)
  {
    sub_1908AA544((uint64_t)v8, &qword_1ECF6ADD8);
    v28 = (uint64_t (*)(uint64_t, char *, uint64_t))v12[4];
LABEL_11:
    v31 = a2;
    v32 = v20;
    return v28(v31, v32, v11);
  }
  v28 = (uint64_t (*)(uint64_t, char *, uint64_t))v12[4];
  v28((uint64_t)v15, v8, v11);
  v29 = sub_19093C598((uint64_t)v20, (uint64_t)v15);
  v30 = (void (*)(char *, uint64_t))v12[1];
  if (!v29)
  {
    v30(v15, v11);
    goto LABEL_11;
  }
  v30(v20, v11);
  v31 = a2;
  v32 = v15;
  return v28(v31, v32, v11);
}

CTFontDescriptorRef sub_19093B784()
{
  void *v0;
  void *v1;
  uint64_t inited;
  void *v4;
  id v5;
  const __CFDictionary *v6;
  CTFontDescriptorRef CopyWithAttributes;
  const __CTFontDescriptor *original;

  v1 = v0;
  if (qword_1ECF6AAE8 != -1)
  {
    swift_once();
    v1 = v0;
  }
  if (byte_1ECF6D4E8 == 2 || (byte_1ECF6D4E8 & 1) == 0)
    return (CTFontDescriptorRef)v1;
  original = (const __CTFontDescriptor *)v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190A4A350;
  v4 = (void *)*MEMORY[0x1E0CA8358];
  *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 40) = 0x3FD51EB851EB851FLL;
  v5 = v4;
  sub_1908DFEC8(inited);
  type metadata accessor for CFString(0);
  sub_19093CE04();
  v6 = (const __CFDictionary *)sub_190A47A1C();
  swift_bridgeObjectRelease();
  CopyWithAttributes = CTFontDescriptorCreateCopyWithAttributes(original, v6);

  return CopyWithAttributes;
}

uint64_t sub_19093B8B0(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t result;
  id v26;
  id v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  double v32;
  void *v33;
  id v34;
  char v35;
  uint64_t v36;
  void *v37;
  id v38;
  char v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char v48;
  char *v49;
  int v50;
  uint64_t v51;
  void *v52;
  id v53;
  char v54;
  uint64_t v55;
  _QWORD v56[2];
  uint64_t v57;
  int v58;
  char *v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD v66[2];
  __int128 v67;
  uint64_t v68;

  v9 = v8;
  v62 = a8;
  v60 = a7;
  v61 = a2;
  v56[0] = a3;
  v56[1] = a6;
  v58 = a4;
  v57 = a1;
  v11 = sub_190A468E8();
  v63 = *(_QWORD *)(v11 - 8);
  v64 = v11;
  MEMORY[0x1E0C80A78](v11);
  v59 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC00);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_190A47368();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (*(uint64_t (**)(uint64_t))(v8 + 176))(v21);
  sub_1908AAA48(a5, (uint64_t)v18, &qword_1ECF6BC00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v23, *MEMORY[0x1E0CDD548], v19);
    result = sub_1908AA544((uint64_t)v18, &qword_1ECF6BC00);
  }
  else
  {
    result = (*(uint64_t (**)(char *, char *, uint64_t))(v20 + 32))(v23, v18, v19);
  }
  if (*MEMORY[0x1E0CA8450])
  {
    v26 = (id)*MEMORY[0x1E0CA8450];
    v27 = sub_1909BBEF0();
    type metadata accessor for CFString(0);
    v68 = v28;
    *(_QWORD *)&v67 = v27;
    sub_190901E94(&v67, v66);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v65 = v24;
    sub_1908FBEB0(v66, v26, isUniquelyReferenced_nonNull_native);
    v30 = v65;

    v31 = swift_bridgeObjectRelease();
    if ((v60 & 1) == 0)
    {
      v32 = sub_1909BC058();
      v33 = (void *)*MEMORY[0x1E0CA84E8];
      v68 = MEMORY[0x1E0DEF040];
      *(double *)&v67 = v32;
      sub_190901E94(&v67, v66);
      v34 = v33;
      v35 = swift_isUniquelyReferenced_nonNull_native();
      v65 = v30;
      sub_1908FBEB0(v66, v34, v35);
      v30 = v65;

      v31 = swift_bridgeObjectRelease();
    }
    v36 = (*(uint64_t (**)(uint64_t))(v9 + 168))(v31);
    v37 = (void *)*MEMORY[0x1E0CA8418];
    v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C498);
    *(_QWORD *)&v67 = v30;
    sub_190901E94(&v67, v66);
    v38 = v37;
    v39 = swift_isUniquelyReferenced_nonNull_native();
    v65 = v36;
    sub_1908FBEB0(v66, v38, v39);
    v40 = v65;

    swift_bridgeObjectRelease();
    if ((v61 & 1) != 0)
    {
      v46 = v63;
      v45 = v64;
    }
    else
    {
      v41 = (void *)*MEMORY[0x1E0CA83D8];
      v42 = MEMORY[0x1E0DEF040];
      v68 = MEMORY[0x1E0DEF040];
      *(_QWORD *)&v67 = v57;
      sub_190901E94(&v67, v66);
      v43 = v41;
      v44 = swift_isUniquelyReferenced_nonNull_native();
      v65 = v40;
      sub_1908FBEB0(v66, v43, v44);
      v40 = v65;

      swift_bridgeObjectRelease();
      v46 = v63;
      v45 = v64;
      if ((v58 & 1) == 0)
      {
        v47 = (void *)sub_190A47AC4();
        v68 = v42;
        *(_QWORD *)&v67 = v56[0];
        sub_190901E94(&v67, v66);
        v48 = swift_isUniquelyReferenced_nonNull_native();
        v65 = v40;
        sub_1908FBEB0(v66, v47, v48);
        v40 = v65;

        swift_bridgeObjectRelease();
      }
    }
    sub_1908AAA48(v62, (uint64_t)v15, &qword_1ECF6AE40);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v15, 1, v45) == 1)
    {
      sub_1908AA544((uint64_t)v15, &qword_1ECF6AE40);
LABEL_19:
      sub_19093CE04();
      v55 = sub_190A47A1C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
      return v55;
    }
    v49 = v59;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v59, v15, v45);
    v50 = (*(uint64_t (**)(char *, uint64_t))(v46 + 88))(v49, v45);
    if (v50 != *MEMORY[0x1E0CD9EF0])
    {
      if (v50 == *MEMORY[0x1E0CD9EE8])
      {
        v51 = 1;
LABEL_18:
        (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v45);
        v52 = (void *)*MEMORY[0x1E0CA8368];
        v68 = MEMORY[0x1E0DEB418];
        *(_QWORD *)&v67 = v51;
        sub_190901E94(&v67, v66);
        v53 = v52;
        v54 = swift_isUniquelyReferenced_nonNull_native();
        v65 = v40;
        sub_1908FBEB0(v66, v53, v54);

        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      (*(void (**)(char *, uint64_t))(v46 + 8))(v59, v45);
    }
    v51 = 0;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_19093BE14()
{
  return 0;
}

uint64_t sub_19093BE2C()
{
  return MEMORY[0x1E0DEE9E0];
}

uint64_t type metadata accessor for BaseWidgetFontDefinition()
{
  return objc_opt_self();
}

CTFontDescriptorRef sub_19093BE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_19093C920(a1, a2, a5);
}

uint64_t sub_19093BE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t);
  CTFontDescriptorRef v17;
  uint64_t v19;

  v9 = sub_190A46EAC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v19 - v14;
  sub_190A47404();
  sub_19093B538((uint64_t)v13, (uint64_t)v15);
  v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v13, v9);
  (*(void (**)(uint64_t, char *))(v5 + 160))(a1, v15);
  v17 = sub_19093C920(a1, a2, a5);
  sub_19093B784();

  sub_190A47350();
  return ((uint64_t (*)(char *, uint64_t))v16)(v15, v9);
}

CTFontDescriptorRef sub_19093BF78(uint64_t a1, uint64_t a2, char a3, double a4)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  CTFontDescriptorRef v13;
  uint64_t v15;

  v7 = a3 & 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A4741C();
  v11 = (void *)sub_19093B8B0(*(uint64_t *)&a4, 0, 0, 1, a1, a2, v7, (uint64_t)v10);
  sub_1908AA544((uint64_t)v10, &qword_1ECF6AE40);
  v12 = (void *)CTFontDescriptorCreateWithAttributesAndOptions();
  v13 = sub_19093B784();

  return v13;
}

CTFontDescriptorRef sub_19093C070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  CTFontDescriptorRef v17;
  _QWORD v19[2];

  v19[0] = a2;
  v19[1] = a3;
  v5 = sub_190A46EAC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v19 - v10;
  v12 = sub_190A47434();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a4, v12);
  sub_190A47404();
  sub_19093B538((uint64_t)v9, (uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  sub_190A47410();
  sub_190A47074();
  v16 = (void *)sub_190A46828();
  v17 = sub_19093B784();

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v17;
}

uint64_t sub_19093C1F0()
{
  return sub_190A46834();
}

uint64_t sub_19093C1F8()
{
  return sub_190A46840();
}

BOOL sub_19093C210(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  unint64_t v14;
  int v15;
  _DWORD *v16;
  int v17;
  unint64_t v18;
  uint64_t v20;

  v4 = sub_190A46EAC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v20 - v9, a1, v4);
  v12 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  v13 = v12(v10, v4);
  v14 = 0;
  v15 = *MEMORY[0x1E0CDB330];
  v16 = (_DWORD *)MEMORY[0x1E0CDB368];
  if (v13 != *MEMORY[0x1E0CDB330])
  {
    if (v13 == *MEMORY[0x1E0CDB368])
    {
      v14 = 1;
      goto LABEL_24;
    }
    if (v13 == *MEMORY[0x1E0CDB370])
    {
      v14 = 2;
      goto LABEL_24;
    }
    if (v13 == *MEMORY[0x1E0CDB358])
      goto LABEL_7;
    if (v13 == *MEMORY[0x1E0CDB328])
    {
      v14 = 4;
    }
    else if (v13 == *MEMORY[0x1E0CDB338])
    {
      v14 = 5;
    }
    else if (v13 == *MEMORY[0x1E0CDB300])
    {
      v14 = 6;
    }
    else if (v13 == *MEMORY[0x1E0CDB348])
    {
      v14 = 7;
    }
    else if (v13 == *MEMORY[0x1E0CDB340])
    {
      v14 = 8;
    }
    else if (v13 == *MEMORY[0x1E0CDB350])
    {
      v14 = 9;
    }
    else if (v13 == *MEMORY[0x1E0CDB318])
    {
      v14 = 10;
    }
    else
    {
      if (v13 != *MEMORY[0x1E0CDB320])
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_7:
        v14 = 3;
        goto LABEL_24;
      }
      v14 = 11;
    }
  }
LABEL_24:
  v11(v8, a2, v4);
  v17 = v12(v8, v4);
  if (v17 == v15)
  {
    v18 = 0;
  }
  else if (v17 == *v16)
  {
    v18 = 1;
  }
  else if (v17 == *MEMORY[0x1E0CDB370])
  {
    v18 = 2;
  }
  else
  {
    if (v17 != *MEMORY[0x1E0CDB358])
    {
      if (v17 == *MEMORY[0x1E0CDB328])
      {
        v18 = 4;
        return v14 < v18;
      }
      if (v17 == *MEMORY[0x1E0CDB338])
      {
        v18 = 5;
        return v14 < v18;
      }
      if (v17 == *MEMORY[0x1E0CDB300])
      {
        v18 = 6;
        return v14 < v18;
      }
      if (v17 == *MEMORY[0x1E0CDB348])
      {
        v18 = 7;
        return v14 < v18;
      }
      if (v17 == *MEMORY[0x1E0CDB340])
      {
        v18 = 8;
        return v14 < v18;
      }
      if (v17 == *MEMORY[0x1E0CDB350])
      {
        v18 = 9;
        return v14 < v18;
      }
      if (v17 == *MEMORY[0x1E0CDB318])
      {
        v18 = 10;
        return v14 < v18;
      }
      if (v17 == *MEMORY[0x1E0CDB320])
      {
        v18 = 11;
        return v14 < v18;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    v18 = 3;
  }
  return v14 < v18;
}

BOOL sub_19093C598(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  unint64_t v14;
  int v15;
  _DWORD *v16;
  int v17;
  unint64_t v18;
  uint64_t v20;

  v4 = sub_190A46EAC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v20 - v9, a2, v4);
  v12 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  v13 = v12(v10, v4);
  v14 = 0;
  v15 = *MEMORY[0x1E0CDB330];
  v16 = (_DWORD *)MEMORY[0x1E0CDB368];
  if (v13 != *MEMORY[0x1E0CDB330])
  {
    if (v13 == *MEMORY[0x1E0CDB368])
    {
      v14 = 1;
      goto LABEL_24;
    }
    if (v13 == *MEMORY[0x1E0CDB370])
    {
      v14 = 2;
      goto LABEL_24;
    }
    if (v13 == *MEMORY[0x1E0CDB358])
      goto LABEL_7;
    if (v13 == *MEMORY[0x1E0CDB328])
    {
      v14 = 4;
    }
    else if (v13 == *MEMORY[0x1E0CDB338])
    {
      v14 = 5;
    }
    else if (v13 == *MEMORY[0x1E0CDB300])
    {
      v14 = 6;
    }
    else if (v13 == *MEMORY[0x1E0CDB348])
    {
      v14 = 7;
    }
    else if (v13 == *MEMORY[0x1E0CDB340])
    {
      v14 = 8;
    }
    else if (v13 == *MEMORY[0x1E0CDB350])
    {
      v14 = 9;
    }
    else if (v13 == *MEMORY[0x1E0CDB318])
    {
      v14 = 10;
    }
    else
    {
      if (v13 != *MEMORY[0x1E0CDB320])
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_7:
        v14 = 3;
        goto LABEL_24;
      }
      v14 = 11;
    }
  }
LABEL_24:
  v11(v8, a1, v4);
  v17 = v12(v8, v4);
  if (v17 == v15)
  {
    v18 = 0;
  }
  else if (v17 == *v16)
  {
    v18 = 1;
  }
  else if (v17 == *MEMORY[0x1E0CDB370])
  {
    v18 = 2;
  }
  else
  {
    if (v17 != *MEMORY[0x1E0CDB358])
    {
      if (v17 == *MEMORY[0x1E0CDB328])
      {
        v18 = 4;
        return v14 < v18;
      }
      if (v17 == *MEMORY[0x1E0CDB338])
      {
        v18 = 5;
        return v14 < v18;
      }
      if (v17 == *MEMORY[0x1E0CDB300])
      {
        v18 = 6;
        return v14 < v18;
      }
      if (v17 == *MEMORY[0x1E0CDB348])
      {
        v18 = 7;
        return v14 < v18;
      }
      if (v17 == *MEMORY[0x1E0CDB340])
      {
        v18 = 8;
        return v14 < v18;
      }
      if (v17 == *MEMORY[0x1E0CDB350])
      {
        v18 = 9;
        return v14 < v18;
      }
      if (v17 == *MEMORY[0x1E0CDB318])
      {
        v18 = 10;
        return v14 < v18;
      }
      if (v17 == *MEMORY[0x1E0CDB320])
      {
        v18 = 11;
        return v14 < v18;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    v18 = 3;
  }
  return v14 < v18;
}

CTFontDescriptorRef sub_19093C920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  char v25;
  uint64_t v26;
  _BOOL4 v27;
  unsigned int v28;
  int v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  CTFontDescriptorRef v34;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v40 = a1;
  v41 = a3;
  v39 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_190A47440();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_190A46EAC();
  v12 = *(_QWORD *)(v11 - 8);
  v38 = v11;
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v36 - v16;
  sub_190A47404();
  sub_19093B538((uint64_t)v15, (uint64_t)v17);
  v37 = *(void (**)(char *, uint64_t))(v12 + 8);
  v37(v15, v11);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v19 = v40;
  v18(v10, v40, v7);
  v20 = sub_1909BAE2C((uint64_t)v10);
  v21 = (*(uint64_t (**)(uint64_t, char *))(v3 + 152))(v20, v17);
  v23 = v22;
  LOWORD(v7) = v24;
  v26 = (*(uint64_t (**)(uint64_t, char *))(v3 + 160))(v19, v17);
  v27 = (v7 & 0x101) != 0;
  v28 = v7 & 0x100;
  if ((v7 & 0x100) != 0)
  {
    v23 = 0;
    v21 = 0;
  }
  v29 = v25 & 1;
  sub_190A4741C();
  v30 = (void *)sub_19093B8B0(v21, v28 >> 8, v23, v27, v39, v26, v29, (uint64_t)v6);
  sub_1908AA544((uint64_t)v6, &qword_1ECF6AE40);
  v31 = sub_1909BBA90();
  v32 = sub_1909BBCB0();
  v33 = (void *)CTFontDescriptorCreateWithTextStyleAndAttributes();

  v34 = sub_19093B784();
  v37(v17, v38);
  return v34;
}

const __CTFontDescriptor *sub_19093CB6C()
{
  const __CTFontDescriptor *v0;
  uint64_t inited;
  void *v2;
  id v3;
  const __CFDictionary *v4;
  CTFontDescriptorRef CopyWithAttributes;

  sub_190A47074();
  v0 = (const __CTFontDescriptor *)sub_190A4684C();
  if (qword_1ECF6AAE8 != -1)
    swift_once();
  if ((byte_1ECF6D4E8 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5B8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_190A4A350;
    v2 = (void *)*MEMORY[0x1E0CA8358];
    *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEB070];
    *(_QWORD *)(inited + 32) = v2;
    *(_QWORD *)(inited + 40) = 0x3FD51EB851EB851FLL;
    v3 = v2;
    sub_1908DFEC8(inited);
    type metadata accessor for CFString(0);
    sub_19093CE04();
    v4 = (const __CFDictionary *)sub_190A47A1C();
    swift_bridgeObjectRelease();
    CopyWithAttributes = CTFontDescriptorCreateCopyWithAttributes(v0, v4);

    return CopyWithAttributes;
  }
  return v0;
}

const __CTFontDescriptor *sub_19093CCC8()
{
  const __CTFontDescriptor *v0;
  uint64_t inited;
  void *v2;
  id v3;
  const __CFDictionary *v4;
  CTFontDescriptorRef CopyWithAttributes;

  sub_190A47074();
  v0 = (const __CTFontDescriptor *)sub_190A46864();
  if (qword_1ECF6AAE8 != -1)
    swift_once();
  if ((byte_1ECF6D4E8 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5B8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_190A4A350;
    v2 = (void *)*MEMORY[0x1E0CA8358];
    *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEB070];
    *(_QWORD *)(inited + 32) = v2;
    *(_QWORD *)(inited + 40) = 0x3FD51EB851EB851FLL;
    v3 = v2;
    sub_1908DFEC8(inited);
    type metadata accessor for CFString(0);
    sub_19093CE04();
    v4 = (const __CFDictionary *)sub_190A47A1C();
    swift_bridgeObjectRelease();
    CopyWithAttributes = CTFontDescriptorCreateCopyWithAttributes(v0, v4);

    return CopyWithAttributes;
  }
  return v0;
}

unint64_t sub_19093CE04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECF6C598;
  if (!qword_1ECF6C598)
  {
    type metadata accessor for CFString(255);
    result = MEMORY[0x19401429C](&unk_190A4A2C8, v1);
    atomic_store(result, (unint64_t *)&qword_1ECF6C598);
  }
  return result;
}

uint64_t ActivityViewContext.activityID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActivityViewContext.attributes.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t ActivityViewContext.state.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;

  v4 = v2 + *(int *)(a1 + 40);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, v4, AssociatedTypeWitness);
}

uint64_t ActivityViewContext.isStale.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 44));
}

uint64_t sub_19093CEF4()
{
  uint64_t AssociatedTypeWitness;
  unint64_t v1;
  unint64_t v2;

  AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_19093CFB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7;
  v9 = *(_QWORD *)(v6 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v9 + v12;
  v14 = *(_QWORD *)(v11 + 64);
  if ((v12 | (unint64_t)v7) > 7
    || ((*(_DWORD *)(v11 + 80) | v7) & 0x100000) != 0
    || v14 + ((v13 + ((v7 + 16) & ~(unint64_t)v7)) & ~v12) + 1 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17
                   + (((v12 | v7) & 0xF8 ^ 0x1F8) & ((v12 | v7) + 16)));
    swift_retain();
  }
  else
  {
    v18 = AssociatedTypeWitness;
    v19 = ~v12;
    v20 = a2[1];
    *a1 = *a2;
    a1[1] = v20;
    v21 = (char *)a2 + v8;
    v22 = ((unint64_t)a1 + v8 + 16) & ~v8;
    v23 = (unint64_t)(v21 + 16) & ~v8;
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    v24(v22, v23, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))((v22 + v13) & v19, (v23 + v13) & v19, v18);
    *(_BYTE *)(((v22 + v13) & v19) + v14) = *(_BYTE *)(((v23 + v13) & v19) + v14);
  }
  return a1;
}

uint64_t sub_19093D100(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t, _QWORD))(v4 + 8))(v5, *(_QWORD *)(a2 + 16));
  v6 = *(_QWORD *)(v4 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))((v5 + v6 + *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80), AssociatedTypeWitness);
}

_QWORD *sub_19093D198(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v10(v8, v9, v5);
  v11 = *(_QWORD *)(v6 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v11 + v14 + v8) & ~v14;
  v16 = (v11 + v14 + v9) & ~v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v15, v16, AssociatedTypeWitness);
  *(_BYTE *)(v15 + *(_QWORD *)(v13 + 64)) = *(_BYTE *)(v16 + *(_QWORD *)(v13 + 64));
  return a1;
}

_QWORD *sub_19093D274(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v6 + 24))(v8, v9, *(_QWORD *)(a3 + 16));
  v10 = *(_QWORD *)(v6 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v10 + v13 + v8) & ~v13;
  v15 = (v10 + v13 + v9) & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))(v14, v15, AssociatedTypeWitness);
  *(_BYTE *)(v14 + *(_QWORD *)(v12 + 64)) = *(_BYTE *)(v15 + *(_QWORD *)(v12 + 64));
  return a1;
}

_OWORD *sub_19093D360(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 16) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 16) & ~v5;
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v4 + 32))(v6, v7, *(_QWORD *)(a3 + 16));
  v8 = *(_QWORD *)(v4 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v8 + v11 + v6) & ~v11;
  v13 = (v8 + v11 + v7) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v12, v13, AssociatedTypeWitness);
  *(_BYTE *)(v12 + *(_QWORD *)(v10 + 64)) = *(_BYTE *)(v13 + *(_QWORD *)(v10 + 64));
  return a1;
}

_QWORD *sub_19093D438(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v7 + 40))(v9, v10, *(_QWORD *)(a3 + 16));
  v11 = *(_QWORD *)(v7 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v11 + v14 + v9) & ~v14;
  v16 = (v11 + v14 + v10) & ~v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 40))(v15, v16, AssociatedTypeWitness);
  *(_BYTE *)(v15 + *(_QWORD *)(v13 + 64)) = *(_BYTE *)(v16 + *(_QWORD *)(v13 + 64));
  return a1;
}

uint64_t sub_19093D514(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  unsigned int v21;
  int v22;
  int v23;
  unint64_t v24;
  uint64_t v25;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v7 <= v10)
    v11 = *(_DWORD *)(v9 + 84);
  else
    v11 = v7;
  if (v11 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  else
    v12 = v11;
  if (!a2)
    return 0;
  v13 = AssociatedTypeWitness;
  v14 = *(unsigned __int8 *)(v6 + 80);
  v15 = *(_QWORD *)(v6 + 64);
  v16 = *(unsigned __int8 *)(v9 + 80);
  if (a2 <= v12)
    goto LABEL_27;
  v17 = *(_QWORD *)(v9 + 64) + ((v15 + v16 + ((v14 + 16) & ~v14)) & ~v16) + 1;
  v18 = 8 * v17;
  if (v17 <= 3)
  {
    v21 = ((a2 - v12 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v21))
    {
      v19 = *(_DWORD *)(a1 + v17);
      if (!v19)
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v21 > 0xFF)
    {
      v19 = *(unsigned __int16 *)(a1 + v17);
      if (!*(_WORD *)(a1 + v17))
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v21 < 2)
    {
LABEL_27:
      if ((v11 & 0x80000000) != 0)
      {
        v25 = (a1 + v14 + 16) & ~v14;
        if ((_DWORD)v7 == v12)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v25, v7, v5);
        else
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))((v25 + v15 + v16) & ~v16, v10, v13);
      }
      else
      {
        v24 = *(_QWORD *)(a1 + 8);
        if (v24 >= 0xFFFFFFFF)
          LODWORD(v24) = -1;
        return (v24 + 1);
      }
    }
  }
  v19 = *(unsigned __int8 *)(a1 + v17);
  if (!*(_BYTE *)(a1 + v17))
    goto LABEL_27;
LABEL_18:
  v22 = (v19 - 1) << v18;
  if (v17 > 3)
    v22 = 0;
  if ((_DWORD)v17)
  {
    if (v17 <= 3)
      v23 = v17;
    else
      v23 = 4;
    __asm { BR              X12 }
  }
  return v12 + v22 + 1;
}

void sub_19093D708(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  size_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (v8 <= *(_DWORD *)(v9 + 84))
    v10 = *(_DWORD *)(v9 + 84);
  else
    v10 = v8;
  if (v10 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = v10;
  v12 = *(_QWORD *)(v9 + 64)
      + ((*(_QWORD *)(v7 + 64)
        + *(unsigned __int8 *)(v9 + 80)
        + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + 1;
  if (a3 <= v11)
  {
    v13 = 0u;
  }
  else if (v12 <= 3)
  {
    v15 = ((a3 - v11 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (v11 < a2)
  {
    v14 = ~v11 + a2;
    if (v12 < 4)
    {
      if (*(_DWORD *)(v9 + 64)
         + ((*(_DWORD *)(v7 + 64)
           + *(unsigned __int8 *)(v9 + 80)
           + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~*(unsigned __int8 *)(v7 + 80))) & ~*(unsigned __int8 *)(v9 + 80)) != -1)
      {
        v16 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X0 }
}

uint64_t type metadata accessor for ActivityViewContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActivityViewContext);
}

uint64_t sub_19093D994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  int *v13;
  char *v14;
  uint64_t AssociatedTypeWitness;
  uint64_t result;

  *(_QWORD *)a8 = a1;
  *((_QWORD *)a8 + 1) = a2;
  v13 = (int *)type metadata accessor for ActivityViewContext(0, a6, a7, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(&a8[v13[9]], a3, a6);
  v14 = &a8[v13[10]];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v14, a4, AssociatedTypeWitness);
  a8[v13[11]] = a5;
  return result;
}

void static DynamicIslandMode.expanded.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void static DynamicIslandMode.compactLeading.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static DynamicIslandMode.compactTrailing.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void static DynamicIslandMode.minimal.getter(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

BOOL static DynamicIslandMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

double DynamicIsland.init<A, B, C, D>(expanded:compactLeading:compactTrailing:minimal:)@<D0>(void (*a1)(void)@<X0>, void (*a2)(void)@<X2>, uint64_t a3@<X3>, void (*a4)(void)@<X4>, uint64_t a5@<X5>, void (*a6)(void)@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  double result;
  _QWORD v36[3];
  void (*v37)(void);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(void);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(void);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(void);
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;

  v49 = a7;
  v50 = a6;
  v45 = a5;
  v46 = a4;
  v41 = a3;
  v42 = a2;
  v37 = a1;
  v48 = a16;
  v44 = a15;
  v40 = a14;
  v36[1] = a13;
  v36[2] = a10;
  v39 = a11;
  v47 = a12;
  v17 = MEMORY[0x1E0C80A78](a1);
  v43 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v38 = (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v22 = *(_QWORD *)(a9 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)v36 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for DynamicIslandExpandedContent(0, a9, v25, v26);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)v36 - v28;
  v30 = sub_190A45FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a8, 1, 1, v30);
  v31 = (int *)type metadata accessor for DynamicIsland();
  *(_QWORD *)(a8 + v31[5]) = 0;
  v37();
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v29, a9);
  *(_QWORD *)(a8 + v31[8]) = sub_190A47884();
  v42();
  *(_QWORD *)(a8 + v31[9]) = sub_190A47884();
  v46();
  *(_QWORD *)(a8 + v31[10]) = sub_190A47884();
  v50();
  v32 = sub_190A47884();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)(a8 + v31[11]) = v32;
  v66 = 1;
  v65 = 1;
  v64 = 1;
  v63 = 1;
  v62 = 1;
  v61 = 1;
  v60 = 1;
  v59 = 1;
  v58 = 1;
  v57 = 1;
  v56 = 1;
  v55 = 1;
  v54 = 1;
  v53 = 1;
  v52 = 1;
  v51 = 1;
  v33 = a8 + v31[6];
  *(_QWORD *)v33 = 0;
  *(_BYTE *)(v33 + 8) = 1;
  *(_QWORD *)(v33 + 16) = 0;
  *(_BYTE *)(v33 + 24) = 1;
  *(_QWORD *)(v33 + 32) = 0;
  *(_BYTE *)(v33 + 40) = v64;
  *(_QWORD *)(v33 + 48) = 0;
  *(_BYTE *)(v33 + 56) = v63;
  *(_QWORD *)(v33 + 64) = 0;
  *(_BYTE *)(v33 + 72) = v62;
  *(_QWORD *)(v33 + 80) = 0;
  *(_BYTE *)(v33 + 88) = v61;
  *(_QWORD *)(v33 + 96) = 0;
  *(_BYTE *)(v33 + 104) = v60;
  *(_QWORD *)(v33 + 112) = 0;
  *(_BYTE *)(v33 + 120) = v59;
  *(_QWORD *)(v33 + 128) = 0;
  *(_BYTE *)(v33 + 136) = v58;
  *(_QWORD *)(v33 + 144) = 0;
  *(_BYTE *)(v33 + 152) = v57;
  *(_QWORD *)(v33 + 160) = 0;
  *(_BYTE *)(v33 + 168) = v56;
  *(_QWORD *)(v33 + 176) = 0;
  *(_BYTE *)(v33 + 184) = v55;
  *(_QWORD *)(v33 + 192) = 0;
  *(_BYTE *)(v33 + 200) = v54;
  *(_QWORD *)(v33 + 208) = 0;
  *(_BYTE *)(v33 + 216) = v53;
  *(_QWORD *)(v33 + 224) = 0;
  *(_BYTE *)(v33 + 232) = v52;
  *(_QWORD *)(v33 + 240) = 0;
  *(_BYTE *)(v33 + 248) = v51;
  v34 = (_OWORD *)(a8 + v31[7]);
  result = 0.0;
  *v34 = xmmword_190A4FE60;
  v34[1] = xmmword_190A4FE60;
  v34[2] = xmmword_190A4FE60;
  v34[3] = xmmword_190A4FE60;
  return result;
}

uint64_t type metadata accessor for DynamicIsland()
{
  uint64_t result;

  result = qword_1EE1E62A8;
  if (!qword_1EE1E62A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DynamicIsland.widgetURL(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1908AF5D8(v2, a2, (uint64_t (*)(_QWORD))type metadata accessor for DynamicIsland);
  return sub_19093DF34(a1, a2);
}

uint64_t sub_19093DF34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t DynamicIsland.keylineTint(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  sub_1908AF5D8(v2, a2, (uint64_t (*)(_QWORD))type metadata accessor for DynamicIsland);
  v5 = *(int *)(type metadata accessor for DynamicIsland() + 20);
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + v5) = a1;
  return result;
}

void DynamicIsland.contentMargins(_:_:for:)(unsigned __int8 *a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  uint64_t v5;
  _BYTE v6[72];

  v5 = *a1;
  sub_1908AF5D8(v3, a2, (uint64_t (*)(_QWORD))type metadata accessor for DynamicIsland);
  sub_1909712A0((uint64_t)v6, a3);
  type metadata accessor for DynamicIsland();
  __asm { BR              X20 }
}

uint64_t sub_19093E114(unsigned __int8 *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int v4;
  _QWORD *v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))((char *)sub_19093E1E4
                                                                                           + 4 * byte_190A4FE74[v4]))(v3, a2, *v7, *v6, *a1, *v5, *v2);
}

_QWORD *sub_19093E1E4(_QWORD *result, uint64_t a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, char a8)
{
  _BYTE *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _QWORD *v22;
  _BYTE *v23;
  _QWORD *v24;
  _BYTE *v25;
  _QWORD *v26;

  if (a3)
    v18 = v17;
  else
    v18 = v10;
  *result = v15;
  *v8 = a8 & v9;
  if (a4)
    v19 = v16;
  else
    v19 = a6;
  if (a5)
    v20 = v11;
  else
    v20 = a7;
  *v26 = v20;
  *v25 = a5 & v13;
  *v24 = v19;
  *v23 = a4 & v14;
  *v22 = v18;
  *v21 = a3 & v12;
  return result;
}

void DynamicIsland.contentMargins(_:_:forMode:)(unsigned __int8 *a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  uint64_t v5;
  _BYTE v6[72];

  v5 = *a1;
  sub_1908AF5D8(v3, a2, (uint64_t (*)(_QWORD))type metadata accessor for DynamicIsland);
  sub_1909712A0((uint64_t)v6, a3);
  type metadata accessor for DynamicIsland();
  __asm { BR              X20 }
}

uint64_t sub_19093E3C8(unsigned __int8 *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int v4;
  _QWORD *v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))((char *)sub_19093E498
                                                                                           + 4 * byte_190A4FE7C[v4]))(v3, a2, *v7, *v6, *a1, *v5, *v2);
}

_QWORD *sub_19093E498(_QWORD *result, uint64_t a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, char a8)
{
  _BYTE *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _QWORD *v22;
  _BYTE *v23;
  _QWORD *v24;
  _BYTE *v25;
  _QWORD *v26;

  if (a3)
    v18 = v17;
  else
    v18 = v10;
  *result = v15;
  *v8 = a8 & v9;
  if (a4)
    v19 = v16;
  else
    v19 = a6;
  if (a5)
    v20 = v11;
  else
    v20 = a7;
  *v26 = v20;
  *v25 = a5 & v13;
  *v24 = v19;
  *v23 = a4 & v14;
  *v22 = v18;
  *v21 = a3 & v12;
  return result;
}

void DynamicIsland.contentBackground<A>(for:content:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  v5 = *a1;
  sub_1908AF5D8(v3, a3, (uint64_t (*)(_QWORD))type metadata accessor for DynamicIsland);
  sub_190A3933C(a2);
  type metadata accessor for DynamicIsland();
  __asm { BR              X9 }
}

uint64_t sub_19093E618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20)
{
  uint64_t v20;
  unint64_t v21;
  int v22;

  if (v21 >> 62 != 3 || v20 != 0 || v21 != 0xC000000000000000)
  {
    sub_19093EFC4(v20, v21);
    a1 = sub_19093EFFC(a19, a20);
  }
  return ((uint64_t (*)(uint64_t))((char *)sub_19093E690 + 4 * byte_190A4FE84[v22]))(a1);
}

uint64_t sub_19093E690()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;

  result = sub_19093EFFC(v6, v5);
  *v3 = v0;
  *v2 = v1;
  return result;
}

void DynamicIsland.contentBackground<A>(forMode:content:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 v3;

  v3 = *a1;
  DynamicIsland.contentBackground<A>(for:content:)(&v3, a2, a3);
}

void DynamicIsland.contentBackground<A>(_:for:)(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  v5 = *a2;
  sub_1908AF5D8(v3, a3, (uint64_t (*)(_QWORD))type metadata accessor for DynamicIsland);
  sub_190A393B4(a1);
  type metadata accessor for DynamicIsland();
  __asm { BR              X9 }
}

uint64_t sub_19093E7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20)
{
  uint64_t v20;
  unint64_t v21;
  int v22;

  if (v21 >> 62 != 3 || v20 != 0 || v21 != 0xC000000000000000)
  {
    sub_19093EFC4(v20, v21);
    a1 = sub_19093EFFC(a19, a20);
  }
  return ((uint64_t (*)(uint64_t))((char *)sub_19093E870 + 4 * byte_190A4FE8C[v22]))(a1);
}

uint64_t sub_19093E870()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;

  result = sub_19093EFFC(v6, v5);
  *v3 = v0;
  *v2 = v1;
  return result;
}

void DynamicIsland.contentBackground<A>(_:forMode:)(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 v3;

  v3 = *a2;
  DynamicIsland.contentBackground<A>(_:for:)(a1, &v3, a3);
}

void DynamicIsland.contentBackground<A, B>(_:in:for:)(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v11;

  v11 = *a3;
  sub_1908AF5D8(v6, a6, (uint64_t (*)(_QWORD))type metadata accessor for DynamicIsland);
  sub_190A39434(a1, a2, a4, a5);
  type metadata accessor for DynamicIsland();
  __asm { BR              X9 }
}

uint64_t sub_19093E9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20)
{
  uint64_t v20;
  unint64_t v21;
  int v22;

  if (v21 >> 62 != 3 || v20 != 0 || v21 != 0xC000000000000000)
  {
    sub_19093EFC4(v20, v21);
    a1 = sub_19093EFFC(a19, a20);
  }
  return ((uint64_t (*)(uint64_t))((char *)sub_19093EA70 + 4 * byte_190A4FE94[v22]))(a1);
}

uint64_t sub_19093EA70()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;

  result = sub_19093EFFC(v6, v5);
  *v3 = v0;
  *v2 = v1;
  return result;
}

void DynamicIsland.contentBackground<A, B>(_:in:forMode:)(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unsigned __int8 v6;

  v6 = *a3;
  DynamicIsland.contentBackground<A, B>(_:in:for:)(a1, a2, &v6, a4, a5, a6);
}

void sub_19093EB0C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_19093EB3C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;

  swift_getKeyPath();
  v1 = *(int *)(type metadata accessor for DynamicIsland() + 28);
  v2 = *(_QWORD *)(v0 + v1 + 8);
  v4 = *(_QWORD *)(v0 + v1);
  swift_retain();
  sub_19093EFC4(v4, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6070);
  sub_190940004();
  return sub_190A47884();
}

void sub_19093EC9C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for MetricsRequest(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = qword_190A4FF88[a2];
  v10 = type metadata accessor for JindoMetricsDefinition(0);
  sub_1908AF5D8(a3 + *(int *)(v10 + 4 * v9), (uint64_t)v8, type metadata accessor for MetricsRequest);
  sub_19093FEB4((uint64_t)v8);
  type metadata accessor for DynamicIsland();
  __asm { BR              X0 }
}

uint64_t sub_19093EDC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t *v8;
  _BYTE *v9;
  uint64_t *v10;
  _BYTE *v11;
  uint64_t *v12;
  _BYTE *v13;
  uint64_t *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v7 = (unsigned __int8 *)(a1 + 120);
  v8 = (uint64_t *)(a1 + 112);
  v9 = (_BYTE *)(a1 + 104);
  v10 = (uint64_t *)(a1 + 96);
  v11 = (_BYTE *)(a1 + 88);
  v12 = (uint64_t *)(a1 + 80);
  v13 = (_BYTE *)(a1 + 72);
  v14 = (uint64_t *)(a1 + 64);
  v15 = *v7;
  if (!*v13)
    v3 = *v14;
  if (!*v11)
    v4 = *v12;
  if (!*v9)
    v5 = *v10;
  if (!v15)
    v6 = *v8;
  v16 = *v1;
  v17 = v1[1];
  v18 = *(uint64_t *)((char *)v1 + *(int *)(type metadata accessor for JindoMetricsDefinition(0) + 32) + 48);
  *(_QWORD *)(v2 - 192) = v16;
  *(_QWORD *)(v2 - 184) = v17;
  *(_QWORD *)(v2 - 176) = v18;
  *(_QWORD *)(v2 - 168) = v3;
  *(_QWORD *)(v2 - 160) = v4;
  *(_QWORD *)(v2 - 152) = v5;
  *(_QWORD *)(v2 - 144) = v6;
  *(_BYTE *)(v2 - 136) = 0;
  sub_19093FEF0();
  return sub_190A46C48();
}

uint64_t sub_19093EEE8()
{
  return swift_retain();
}

uint64_t sub_19093EEF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19093FE6C(v1, a1);
}

uint64_t sub_19093EF00@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char v7;

  sub_19093FEF0();
  result = sub_190A46C3C();
  if ((v7 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    *(_OWORD *)a1 = v3;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = v5;
    *(_QWORD *)(a1 + 48) = v6;
  }
  return result;
}

uint64_t sub_19093EF68()
{
  sub_19093FEF0();
  return sub_190A46C48();
}

uint64_t sub_19093EFC4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if ((a2 >> 62) >= 2)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_19093EFFC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if ((a2 >> 62) >= 2)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t storeEnumTagSinglePayload for DynamicIslandMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_19093F080 + 4 * byte_190A4FEA5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_19093F0B4 + 4 * byte_190A4FEA0[v4]))();
}

uint64_t sub_19093F0B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19093F0BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19093F0C4);
  return result;
}

uint64_t sub_19093F0D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19093F0D8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_19093F0DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19093F0E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DynamicIslandMode()
{
  return &type metadata for DynamicIslandMode;
}

char *initializeBufferWithCopyOfBuffer for DynamicIsland(char *a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_190A45FC4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(v4, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    v11 = a3[6];
    *(_QWORD *)&v4[a3[5]] = *(uint64_t *)((char *)a2 + a3[5]);
    v12 = &v4[v11];
    v13 = (_OWORD *)((char *)a2 + v11);
    v14 = v13[13];
    *((_OWORD *)v12 + 12) = v13[12];
    *((_OWORD *)v12 + 13) = v14;
    *((_OWORD *)v12 + 14) = v13[14];
    *(_OWORD *)(v12 + 233) = *(_OWORD *)((char *)v13 + 233);
    v15 = v13[9];
    *((_OWORD *)v12 + 8) = v13[8];
    *((_OWORD *)v12 + 9) = v15;
    v16 = v13[11];
    *((_OWORD *)v12 + 10) = v13[10];
    *((_OWORD *)v12 + 11) = v16;
    v17 = v13[5];
    *((_OWORD *)v12 + 4) = v13[4];
    *((_OWORD *)v12 + 5) = v17;
    v18 = v13[7];
    *((_OWORD *)v12 + 6) = v13[6];
    *((_OWORD *)v12 + 7) = v18;
    v19 = v13[1];
    *(_OWORD *)v12 = *v13;
    *((_OWORD *)v12 + 1) = v19;
    v20 = v13[3];
    *((_OWORD *)v12 + 2) = v13[2];
    *((_OWORD *)v12 + 3) = v20;
    v21 = a3[7];
    v22 = (uint64_t *)&v4[v21];
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = *(uint64_t *)((char *)a2 + v21);
    v25 = *(uint64_t *)((char *)a2 + v21 + 8);
    swift_retain();
    sub_19093EFC4(v24, v25);
    *v22 = v24;
    v22[1] = v25;
    v26 = v23[2];
    v27 = v23[3];
    sub_19093EFC4(v26, v27);
    v22[2] = v26;
    v22[3] = v27;
    v28 = v23[4];
    v29 = v23[5];
    sub_19093EFC4(v28, v29);
    v22[4] = v28;
    v22[5] = v29;
    v30 = v23[6];
    v31 = v23[7];
    sub_19093EFC4(v30, v31);
    v22[6] = v30;
    v22[7] = v31;
    v32 = a3[9];
    *(_QWORD *)&v4[a3[8]] = *(uint64_t *)((char *)a2 + a3[8]);
    *(_QWORD *)&v4[v32] = *(uint64_t *)((char *)a2 + v32);
    v33 = a3[11];
    *(_QWORD *)&v4[a3[10]] = *(uint64_t *)((char *)a2 + a3[10]);
    *(_QWORD *)&v4[v33] = *(uint64_t *)((char *)a2 + v33);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for DynamicIsland(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_190A45FC4();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_release();
  v6 = a1 + *(int *)(a2 + 28);
  sub_19093EFFC(*(_QWORD *)v6, *(_QWORD *)(v6 + 8));
  sub_19093EFFC(*(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24));
  sub_19093EFFC(*(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40));
  sub_19093EFFC(*(_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 56));
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

char *initializeWithCopy for DynamicIsland(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t *v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_190A45FC4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_OWORD *)v11 + 13);
  *((_OWORD *)v10 + 12) = *((_OWORD *)v11 + 12);
  *((_OWORD *)v10 + 13) = v12;
  *((_OWORD *)v10 + 14) = *((_OWORD *)v11 + 14);
  *(_OWORD *)(v10 + 233) = *(_OWORD *)(v11 + 233);
  v13 = *((_OWORD *)v11 + 9);
  *((_OWORD *)v10 + 8) = *((_OWORD *)v11 + 8);
  *((_OWORD *)v10 + 9) = v13;
  v14 = *((_OWORD *)v11 + 11);
  *((_OWORD *)v10 + 10) = *((_OWORD *)v11 + 10);
  *((_OWORD *)v10 + 11) = v14;
  v15 = *((_OWORD *)v11 + 5);
  *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
  *((_OWORD *)v10 + 5) = v15;
  v16 = *((_OWORD *)v11 + 7);
  *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
  *((_OWORD *)v10 + 7) = v16;
  v17 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v17;
  v18 = *((_OWORD *)v11 + 3);
  *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
  *((_OWORD *)v10 + 3) = v18;
  v19 = a3[7];
  v20 = (uint64_t *)&a1[v19];
  v21 = &a2[v19];
  v22 = *(_QWORD *)&a2[v19];
  v23 = *(_QWORD *)&a2[v19 + 8];
  swift_retain();
  sub_19093EFC4(v22, v23);
  *v20 = v22;
  v20[1] = v23;
  v24 = *((_QWORD *)v21 + 2);
  v25 = *((_QWORD *)v21 + 3);
  sub_19093EFC4(v24, v25);
  v20[2] = v24;
  v20[3] = v25;
  v26 = *((_QWORD *)v21 + 4);
  v27 = *((_QWORD *)v21 + 5);
  sub_19093EFC4(v26, v27);
  v20[4] = v26;
  v20[5] = v27;
  v28 = *((_QWORD *)v21 + 6);
  v29 = *((_QWORD *)v21 + 7);
  sub_19093EFC4(v28, v29);
  v20[6] = v28;
  v20[7] = v29;
  v30 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_QWORD *)&a1[v30] = *(_QWORD *)&a2[v30];
  v31 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  *(_QWORD *)&a1[v31] = *(_QWORD *)&a2[v31];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

char *assignWithCopy for DynamicIsland(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v6 = sub_190A45FC4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  swift_retain();
  swift_release();
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *(_QWORD *)v13 = v15;
  v16 = *((_QWORD *)v14 + 2);
  v13[24] = v14[24];
  *((_QWORD *)v13 + 2) = v16;
  v17 = *((_QWORD *)v14 + 4);
  v13[40] = v14[40];
  *((_QWORD *)v13 + 4) = v17;
  v18 = *((_QWORD *)v14 + 6);
  v13[56] = v14[56];
  *((_QWORD *)v13 + 6) = v18;
  v19 = *((_QWORD *)v14 + 8);
  v13[72] = v14[72];
  *((_QWORD *)v13 + 8) = v19;
  v20 = *((_QWORD *)v14 + 10);
  v13[88] = v14[88];
  *((_QWORD *)v13 + 10) = v20;
  v21 = *((_QWORD *)v14 + 12);
  v13[104] = v14[104];
  *((_QWORD *)v13 + 12) = v21;
  v22 = *((_QWORD *)v14 + 14);
  v13[120] = v14[120];
  *((_QWORD *)v13 + 14) = v22;
  v23 = *((_QWORD *)v14 + 16);
  v13[136] = v14[136];
  *((_QWORD *)v13 + 16) = v23;
  v24 = *((_QWORD *)v14 + 18);
  v13[152] = v14[152];
  *((_QWORD *)v13 + 18) = v24;
  v25 = *((_QWORD *)v14 + 20);
  v13[168] = v14[168];
  *((_QWORD *)v13 + 20) = v25;
  v26 = *((_QWORD *)v14 + 22);
  v13[184] = v14[184];
  *((_QWORD *)v13 + 22) = v26;
  v27 = *((_QWORD *)v14 + 24);
  v13[200] = v14[200];
  *((_QWORD *)v13 + 24) = v27;
  v28 = *((_QWORD *)v14 + 26);
  v13[216] = v14[216];
  *((_QWORD *)v13 + 26) = v28;
  v29 = *((_QWORD *)v14 + 28);
  v13[232] = v14[232];
  *((_QWORD *)v13 + 28) = v29;
  v30 = *((_QWORD *)v14 + 30);
  v13[248] = v14[248];
  *((_QWORD *)v13 + 30) = v30;
  v31 = a3[7];
  v32 = (uint64_t *)&a1[v31];
  v33 = &a2[v31];
  v34 = *(_QWORD *)&a2[v31];
  v35 = *(_QWORD *)&a2[v31 + 8];
  sub_19093EFC4(v34, v35);
  v36 = *v32;
  v37 = v32[1];
  *v32 = v34;
  v32[1] = v35;
  sub_19093EFFC(v36, v37);
  v38 = *((_QWORD *)v33 + 2);
  v39 = *((_QWORD *)v33 + 3);
  sub_19093EFC4(v38, v39);
  v40 = v32[2];
  v41 = v32[3];
  v32[2] = v38;
  v32[3] = v39;
  sub_19093EFFC(v40, v41);
  v42 = *((_QWORD *)v33 + 4);
  v43 = *((_QWORD *)v33 + 5);
  sub_19093EFC4(v42, v43);
  v44 = v32[4];
  v45 = v32[5];
  v32[4] = v42;
  v32[5] = v43;
  sub_19093EFFC(v44, v45);
  v46 = *((_QWORD *)v33 + 6);
  v47 = *((_QWORD *)v33 + 7);
  sub_19093EFC4(v46, v47);
  v48 = v32[6];
  v49 = v32[7];
  v32[6] = v46;
  v32[7] = v47;
  sub_19093EFFC(v48, v49);
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  swift_retain();
  swift_release();
  return a1;
}

char *initializeWithTake for DynamicIsland(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  v6 = sub_190A45FC4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_OWORD *)v11 + 13);
  *((_OWORD *)v10 + 12) = *((_OWORD *)v11 + 12);
  *((_OWORD *)v10 + 13) = v12;
  *((_OWORD *)v10 + 14) = *((_OWORD *)v11 + 14);
  *(_OWORD *)(v10 + 233) = *(_OWORD *)(v11 + 233);
  v13 = *((_OWORD *)v11 + 9);
  *((_OWORD *)v10 + 8) = *((_OWORD *)v11 + 8);
  *((_OWORD *)v10 + 9) = v13;
  v14 = *((_OWORD *)v11 + 11);
  *((_OWORD *)v10 + 10) = *((_OWORD *)v11 + 10);
  *((_OWORD *)v10 + 11) = v14;
  v15 = *((_OWORD *)v11 + 5);
  *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
  *((_OWORD *)v10 + 5) = v15;
  v16 = *((_OWORD *)v11 + 7);
  *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
  *((_OWORD *)v10 + 7) = v16;
  v17 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v17;
  v18 = *((_OWORD *)v11 + 3);
  *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
  *((_OWORD *)v10 + 3) = v18;
  v19 = a3[7];
  v20 = a3[8];
  v21 = &a1[v19];
  v22 = &a2[v19];
  v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  v24 = *((_OWORD *)v22 + 3);
  *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
  *((_OWORD *)v21 + 3) = v24;
  *(_QWORD *)&a1[v20] = *(_QWORD *)&a2[v20];
  v25 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[v25] = *(_QWORD *)&a2[v25];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  return a1;
}

char *assignWithTake for DynamicIsland(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v6 = sub_190A45FC4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  swift_release();
  v12 = a3[6];
  v13 = a3[7];
  v14 = &a1[v12];
  v15 = &a2[v12];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
  v14[24] = v15[24];
  *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
  v14[40] = v15[40];
  v14[56] = v15[56];
  *((_QWORD *)v14 + 6) = *((_QWORD *)v15 + 6);
  v14[72] = v15[72];
  *((_QWORD *)v14 + 8) = *((_QWORD *)v15 + 8);
  v14[88] = v15[88];
  *((_QWORD *)v14 + 10) = *((_QWORD *)v15 + 10);
  v14[104] = v15[104];
  *((_QWORD *)v14 + 12) = *((_QWORD *)v15 + 12);
  v14[120] = v15[120];
  *((_QWORD *)v14 + 14) = *((_QWORD *)v15 + 14);
  v14[136] = v15[136];
  *((_QWORD *)v14 + 16) = *((_QWORD *)v15 + 16);
  v14[152] = v15[152];
  *((_QWORD *)v14 + 18) = *((_QWORD *)v15 + 18);
  v14[168] = v15[168];
  *((_QWORD *)v14 + 20) = *((_QWORD *)v15 + 20);
  v14[184] = v15[184];
  *((_QWORD *)v14 + 22) = *((_QWORD *)v15 + 22);
  v14[200] = v15[200];
  *((_QWORD *)v14 + 24) = *((_QWORD *)v15 + 24);
  v14[216] = v15[216];
  *((_QWORD *)v14 + 26) = *((_QWORD *)v15 + 26);
  v14[232] = v15[232];
  *((_QWORD *)v14 + 28) = *((_QWORD *)v15 + 28);
  v16 = *((_QWORD *)v15 + 30);
  v14[248] = v15[248];
  *((_QWORD *)v14 + 30) = v16;
  v17 = &a1[v13];
  v18 = &a2[v13];
  v19 = *(_QWORD *)&a1[v13];
  v20 = *(_QWORD *)&a1[v13 + 8];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  sub_19093EFFC(v19, v20);
  v21 = *((_QWORD *)v17 + 2);
  v22 = *((_QWORD *)v17 + 3);
  *((_OWORD *)v17 + 1) = *((_OWORD *)v18 + 1);
  sub_19093EFFC(v21, v22);
  v23 = *((_QWORD *)v17 + 4);
  v24 = *((_QWORD *)v17 + 5);
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  sub_19093EFFC(v23, v24);
  v25 = *((_QWORD *)v17 + 6);
  v26 = *((_QWORD *)v17 + 7);
  *((_OWORD *)v17 + 3) = *((_OWORD *)v18 + 3);
  sub_19093EFFC(v25, v26);
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_release();
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_release();
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  swift_release();
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DynamicIsland()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19093FC78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for DynamicIsland()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19093FD04(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

void sub_19093FD80()
{
  unint64_t v0;

  sub_19093FE18();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_19093FE18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ECF6D220)
  {
    sub_190A45FC4();
    v0 = sub_190A48148();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ECF6D220);
  }
}

uint64_t sub_19093FE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19093FEB4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MetricsRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_19093FEF0()
{
  unint64_t result;

  result = qword_1EE1E64B8;
  if (!qword_1EE1E64B8)
  {
    result = MEMORY[0x19401429C](&unk_190A51868, &type metadata for DynamicIslandMetrics);
    atomic_store(result, (unint64_t *)&qword_1EE1E64B8);
  }
  return result;
}

unint64_t sub_19093FF3C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E6058;
  if (!qword_1EE1E6058)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6060);
    v2[0] = sub_1908AF598(&qword_1EE1E6558, &qword_1EE1E6560, (uint64_t)&unk_190A51818);
    v2[1] = sub_19093FFC0();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6058);
  }
  return result;
}

unint64_t sub_19093FFC0()
{
  unint64_t result;

  result = qword_1EE1E66C0;
  if (!qword_1EE1E66C0)
  {
    result = MEMORY[0x19401429C](&unk_190A5EB58, &type metadata for DynamicIslandBackgroundModifier);
    atomic_store(result, (unint64_t *)&qword_1EE1E66C0);
  }
  return result;
}

unint64_t sub_190940004()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E6068;
  if (!qword_1EE1E6068)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6070);
    v2[0] = sub_1908AF598(&qword_1EE1E66B0, &qword_1EE1E66B8, (uint64_t)&unk_190A517C8);
    v2[1] = sub_19093FFC0();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6068);
  }
  return result;
}

uint64_t sub_190940088@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_190A46A14();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1909400B0()
{
  return sub_190A46A20();
}

uint64_t sub_1909400D8@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_190942064, a1);
}

uint64_t sub_1909400EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, (void (*)(void))sub_190942064);
}

uint64_t CommonServerEnvironmentModifier.init(widget:metrics:environment:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v6 = type metadata accessor for CommonServerEnvironmentModifier();
  return sub_1908B4BD4(a3, (uint64_t)a4 + *(int *)(v6 + 24), (uint64_t *)&unk_1ECF6C868);
}

uint64_t type metadata accessor for CommonServerEnvironmentModifier()
{
  uint64_t result;

  result = qword_1EE1EAE18;
  if (!qword_1EE1EAE18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t CommonServerEnvironmentModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t v49;
  uint64_t *v50;
  void **v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t *v63;
  id v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char v194;
  char v195;
  char v196;
  unsigned __int8 v197;

  v188 = a1;
  v192 = a2;
  v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E68B0);
  MEMORY[0x1E0C80A78](v190);
  v191 = (uint64_t)&v134 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40);
  MEMORY[0x1E0C80A78](v4);
  v187 = (char *)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190A46EAC();
  v185 = *(_QWORD *)(v6 - 8);
  v186 = v6;
  MEMORY[0x1E0C80A78](v6);
  v184 = (char *)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_190A46924();
  v182 = *(_QWORD *)(v8 - 8);
  v183 = v8;
  MEMORY[0x1E0C80A78](v8);
  v181 = (char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_190A466FC();
  v179 = *(_QWORD *)(v10 - 8);
  v180 = v10;
  MEMORY[0x1E0C80A78](v10);
  v178 = (char *)&v134 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = sub_190A46E94();
  v171 = *(_QWORD *)(v172 - 8);
  MEMORY[0x1E0C80A78](v172);
  v169 = (char *)&v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_190A4669C();
  v152 = *(_QWORD *)(v153 - 8);
  MEMORY[0x1E0C80A78](v153);
  v151 = (char *)&v134 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EAD28);
  MEMORY[0x1E0C80A78](v135);
  v139 = (uint64_t)&v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EAD38);
  MEMORY[0x1E0C80A78](v136);
  v140 = (uint64_t)&v134 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E67F0);
  MEMORY[0x1E0C80A78](v137);
  v142 = (uint64_t)&v134 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6810);
  MEMORY[0x1E0C80A78](v138);
  v144 = (char *)&v134 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6830);
  MEMORY[0x1E0C80A78](v141);
  v146 = (uint64_t)&v134 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6850);
  MEMORY[0x1E0C80A78](v143);
  v148 = (uint64_t)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6860);
  MEMORY[0x1E0C80A78](v145);
  v150 = (uint64_t)&v134 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6870);
  MEMORY[0x1E0C80A78](v147);
  v155 = (uint64_t)&v134 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6880);
  MEMORY[0x1E0C80A78](v149);
  v156 = (char *)&v134 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6890);
  MEMORY[0x1E0C80A78](v154);
  v157 = (char *)&v134 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E68A0);
  MEMORY[0x1E0C80A78](v159);
  v160 = (uint64_t)&v134 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E68F0);
  v163 = *(_QWORD *)(v164 - 8);
  MEMORY[0x1E0C80A78](v164);
  v162 = (char *)&v134 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E67C0);
  MEMORY[0x1E0C80A78](v158);
  v165 = (char *)&v134 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E67D0);
  MEMORY[0x1E0C80A78](v161);
  v167 = (char *)&v134 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E67E0);
  MEMORY[0x1E0C80A78](v166);
  v170 = (uint64_t)&v134 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6800);
  MEMORY[0x1E0C80A78](v168);
  v174 = (uint64_t)&v134 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6820);
  MEMORY[0x1E0C80A78](v173);
  v176 = (uint64_t)&v134 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6840);
  v31 = MEMORY[0x1E0C80A78](v189);
  v175 = (uint64_t)&v134 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v177 = (uint64_t)&v134 - v33;
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v134 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_190A46C30();
  v38 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v40 = (char *)&v134 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EAD18);
  MEMORY[0x1E0C80A78](v41);
  v43 = (char *)&v134 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = *(void **)(v2 + 8);
  InternalWidgetFamily.init(_:)((uint64_t)objc_msgSend(*(id *)v2, sel_family), &v197);
  v45 = sub_190A0C6DC(v44, &v197);
  v47 = v46;
  KeyPath = swift_getKeyPath();
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EAD70);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v43, v188, v49);
  v188 = v41;
  v50 = (uint64_t *)&v43[*(int *)(v41 + 36)];
  *v50 = KeyPath;
  v50[1] = v45;
  v51 = (void **)v2;
  v50[2] = v47;
  v52 = type metadata accessor for CommonServerEnvironmentModifier();
  sub_1908AAA48(v2 + *(int *)(v52 + 24), (uint64_t)v36, (uint64_t *)&unk_1ECF6C868);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37) == 1)
  {
    sub_1908AA544((uint64_t)v36, (uint64_t *)&unk_1ECF6C868);
    sub_1908AAA48((uint64_t)v43, v191, &qword_1EE1EAD18);
    swift_storeEnumTagMultiPayload();
    sub_190941558();
    sub_190941DF0();
    sub_190A46F90();
  }
  else
  {
    v53 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
    v134 = v37;
    v53(v40, v36, v37);
    v54 = swift_getKeyPath();
    v55 = v139;
    sub_1908AAA48((uint64_t)v43, v139, &qword_1EE1EAD18);
    v56 = v55 + *(int *)(v135 + 36);
    *(_QWORD *)v56 = v54;
    *(_BYTE *)(v56 + 8) = 0;
    v57 = swift_getKeyPath();
    v58 = v140;
    sub_1908AAA48(v55, v140, &qword_1EE1EAD28);
    v59 = v58 + *(int *)(v136 + 36);
    *(_QWORD *)v59 = v57;
    *(_BYTE *)(v59 + 8) = 0;
    sub_1908AA544(v55, &qword_1EE1EAD28);
    v60 = swift_getKeyPath();
    v61 = *v51;
    v62 = v142;
    sub_1908AAA48(v58, v142, &qword_1EE1EAD38);
    v63 = (uint64_t *)(v62 + *(int *)(v137 + 36));
    *v63 = v60;
    v63[1] = (uint64_t)v61;
    v64 = v61;
    sub_1908AA544(v58, &qword_1EE1EAD38);
    v65 = swift_getKeyPath();
    v66 = v151;
    sub_190A469B4();
    v67 = (uint64_t)v144;
    v68 = (uint64_t *)&v144[*(int *)(v138 + 36)];
    v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EAD90);
    v70 = v152;
    v71 = v153;
    (*(void (**)(char *, char *, uint64_t))(v152 + 16))((char *)v68 + *(int *)(v69 + 28), v66, v153);
    *v68 = v65;
    sub_1908AAA48(v62, v67, &qword_1EE1E67F0);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v66, v71);
    sub_1908AA544(v62, &qword_1EE1E67F0);
    v72 = swift_getKeyPath();
    LOBYTE(v68) = sub_190A46B70();
    v73 = v146;
    sub_1908AAA48(v67, v146, &qword_1EE1E6810);
    v74 = v73 + *(int *)(v141 + 36);
    *(_QWORD *)v74 = v72;
    *(_BYTE *)(v74 + 8) = v68 & 1;
    sub_1908AA544(v67, &qword_1EE1E6810);
    v75 = swift_getKeyPath();
    LOBYTE(v68) = sub_190A46B04();
    v76 = v148;
    sub_1908AAA48(v73, v148, &qword_1EE1E6830);
    v77 = v76 + *(int *)(v143 + 36);
    *(_QWORD *)v77 = v75;
    *(_BYTE *)(v77 + 8) = v68 & 1;
    sub_1908AA544(v73, &qword_1EE1E6830);
    v78 = swift_getKeyPath();
    LOBYTE(v68) = sub_190A46B10();
    v79 = v150;
    sub_1908AAA48(v76, v150, &qword_1EE1E6850);
    v80 = v79 + *(int *)(v145 + 36);
    *(_QWORD *)v80 = v78;
    *(_BYTE *)(v80 + 8) = v68 & 1;
    sub_1908AA544(v76, &qword_1EE1E6850);
    v81 = swift_getKeyPath();
    LOBYTE(v68) = sub_190A46B4C();
    v82 = v155;
    sub_1908AAA48(v79, v155, &qword_1EE1E6860);
    v83 = v82 + *(int *)(v147 + 36);
    *(_QWORD *)v83 = v81;
    *(_BYTE *)(v83 + 8) = v68 & 1;
    sub_1908AA544(v79, &qword_1EE1E6860);
    v84 = swift_getKeyPath();
    v85 = v169;
    sub_190A46AE0();
    v86 = (uint64_t)v156;
    v87 = (uint64_t *)&v156[*(int *)(v149 + 36)];
    v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EADC0);
    v89 = v171;
    v90 = v172;
    (*(void (**)(char *, char *, uint64_t))(v171 + 16))((char *)v87 + *(int *)(v88 + 28), v85, v172);
    *v87 = v84;
    sub_1908AAA48(v82, v86, &qword_1EE1E6870);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v85, v90);
    sub_1908AA544(v82, &qword_1EE1E6870);
    v91 = swift_getKeyPath();
    v92 = v178;
    sub_190A469CC();
    v93 = (uint64_t)v157;
    v94 = (uint64_t *)&v157[*(int *)(v154 + 36)];
    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EADA0);
    v97 = v179;
    v96 = v180;
    (*(void (**)(char *, char *, uint64_t))(v179 + 16))((char *)v94 + *(int *)(v95 + 28), v92, v180);
    *v94 = v91;
    sub_1908AAA48(v86, v93, &qword_1EE1E6880);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v92, v96);
    sub_1908AA544(v86, &qword_1EE1E6880);
    v98 = swift_getKeyPath();
    sub_190A469E4();
    v100 = v99;
    v101 = v160;
    sub_1908AAA48(v93, v160, &qword_1EE1E6890);
    v102 = (uint64_t *)(v101 + *(int *)(v159 + 36));
    *v102 = v98;
    v102[1] = v100;
    sub_1908AA544(v93, &qword_1EE1E6890);
    v103 = v181;
    sub_190A46A8C();
    sub_190941898();
    v104 = v162;
    sub_190A47620();
    (*(void (**)(char *, uint64_t))(v182 + 8))(v103, v183);
    sub_1908AA544(v101, &qword_1EE1E68A0);
    v105 = swift_getKeyPath();
    v106 = v184;
    sub_190A469FC();
    v107 = (uint64_t)v165;
    v108 = (uint64_t *)&v165[*(int *)(v158 + 36)];
    v109 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1EADD0);
    v111 = v185;
    v110 = v186;
    (*(void (**)(char *, char *, uint64_t))(v185 + 16))((char *)v108 + *(int *)(v109 + 28), v106, v186);
    *v108 = v105;
    v112 = v163;
    v113 = v164;
    (*(void (**)(uint64_t, char *, uint64_t))(v163 + 16))(v107, v104, v164);
    (*(void (**)(char *, uint64_t))(v111 + 8))(v106, v110);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v104, v113);
    v114 = swift_getKeyPath();
    v115 = (uint64_t)v187;
    sub_190A46A74();
    v116 = (uint64_t)v167;
    v117 = (uint64_t *)&v167[*(int *)(v161 + 36)];
    v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EADB0);
    sub_1908AAA48(v115, (uint64_t)v117 + *(int *)(v118 + 28), &qword_1ECF6AE40);
    *v117 = v114;
    sub_1908AAA48(v107, v116, &qword_1EE1E67C0);
    sub_1908AA544(v115, &qword_1ECF6AE40);
    sub_1908AA544(v107, &qword_1EE1E67C0);
    v119 = swift_getKeyPath();
    sub_190942064();
    sub_190A46C3C();
    LOBYTE(v117) = v196;
    v120 = v170;
    sub_1908AAA48(v116, v170, &qword_1EE1E67D0);
    v121 = v120 + *(int *)(v166 + 36);
    *(_QWORD *)v121 = v119;
    *(_BYTE *)(v121 + 8) = (_BYTE)v117;
    sub_1908AA544(v116, &qword_1EE1E67D0);
    v122 = swift_getKeyPath();
    sub_1909420A8();
    sub_190A46C3C();
    LOBYTE(v117) = v195;
    v123 = v174;
    sub_1908AAA48(v120, v174, &qword_1EE1E67E0);
    v124 = v123 + *(int *)(v168 + 36);
    *(_QWORD *)v124 = v122;
    *(_BYTE *)(v124 + 8) = (_BYTE)v117;
    sub_1908AA544(v120, &qword_1EE1E67E0);
    v125 = swift_getKeyPath();
    sub_190942114();
    sub_190A46C3C();
    LOBYTE(v117) = v194;
    v126 = v176;
    sub_1908AAA48(v123, v176, &qword_1EE1E6800);
    v127 = v126 + *(int *)(v173 + 36);
    *(_QWORD *)v127 = v125;
    *(_BYTE *)(v127 + 8) = (_BYTE)v117;
    sub_1908AA544(v123, &qword_1EE1E6800);
    v128 = swift_getKeyPath();
    sub_1908FF90C();
    sub_190A46C3C();
    v129 = v193;
    v130 = v175;
    sub_1908AAA48(v126, v175, &qword_1EE1E6820);
    v131 = (uint64_t *)(v130 + *(int *)(v189 + 36));
    *v131 = v128;
    v131[1] = v129;
    sub_1908AA544(v126, &qword_1EE1E6820);
    v132 = v177;
    sub_1908B4BD4(v130, v177, &qword_1EE1E6840);
    sub_1908AAA48(v132, v191, &qword_1EE1E6840);
    swift_storeEnumTagMultiPayload();
    sub_190941558();
    sub_190941DF0();
    sub_190A46F90();
    sub_1908AA544(v132, &qword_1EE1E6840);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v134);
  }
  return sub_1908AA544((uint64_t)v43, &qword_1EE1EAD18);
}

uint64_t sub_19094136C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_19094291C();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_1909413B8(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  sub_19094291C();
  v2 = v1;
  return sub_190A46C48();
}

uint64_t sub_190941410@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_1909420A8();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_19094145C()
{
  sub_1909420A8();
  return sub_190A46C48();
}

uint64_t sub_1909414A4@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_190942114, a1);
}

uint64_t sub_1909414B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, (void (*)(void))sub_190942114);
}

uint64_t sub_1909414D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.widgetFamily.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_190941508@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_190A46A14();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_190941530()
{
  return sub_190A46A20();
}

unint64_t sub_190941558()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E6838;
  if (!qword_1EE1E6838)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6840);
    v2[0] = sub_1909415DC();
    v2[1] = sub_1908AF598(&qword_1EE1E68E0, &qword_1EE1E68E8, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6838);
  }
  return result;
}

unint64_t sub_1909415DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E6818;
  if (!qword_1EE1E6818)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6820);
    v2[0] = sub_190941660();
    v2[1] = sub_1908AF598((unint64_t *)&qword_1ECF6A8D8, &qword_1ECF6A8E0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6818);
  }
  return result;
}

unint64_t sub_190941660()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E67F8;
  if (!qword_1EE1E67F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6800);
    v2[0] = sub_1909416E4();
    v2[1] = sub_1908AF598(&qword_1ECF6A6A8, &qword_1ECF6A6B0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E67F8);
  }
  return result;
}

unint64_t sub_1909416E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E67D8;
  if (!qword_1EE1E67D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E67E0);
    v2[0] = sub_190941768();
    v2[1] = sub_1908AF598((unint64_t *)&qword_1ECF6A8D8, &qword_1ECF6A8E0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E67D8);
  }
  return result;
}

unint64_t sub_190941768()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E67C8;
  if (!qword_1EE1E67C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E67D0);
    v2[0] = sub_1909417EC();
    v2[1] = sub_1908AF598(&qword_1EE1EADA8, &qword_1EE1EADB0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E67C8);
  }
  return result;
}

unint64_t sub_1909417EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1EE1E67B8;
  if (!qword_1EE1E67B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E67C0);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E68A0);
    v2[3] = sub_190941898();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_1908AF598(&qword_1EE1EADC8, (uint64_t *)&unk_1EE1EADD0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E67B8);
  }
  return result;
}

unint64_t sub_190941898()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E6898;
  if (!qword_1EE1E6898)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E68A0);
    v2[0] = sub_19094191C();
    v2[1] = sub_1908AF598(&qword_1EE1EAD78, &qword_1EE1EAD80, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6898);
  }
  return result;
}

unint64_t sub_19094191C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E6888;
  if (!qword_1EE1E6888)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6890);
    v2[0] = sub_1909419A0();
    v2[1] = sub_1908AF598(&qword_1EE1EAD98, &qword_1EE1EADA0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6888);
  }
  return result;
}

unint64_t sub_1909419A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E6878;
  if (!qword_1EE1E6878)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6880);
    v2[0] = sub_190941A24();
    v2[1] = sub_1908AF598(&qword_1EE1EADB8, &qword_1EE1EADC0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6878);
  }
  return result;
}

unint64_t sub_190941A24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E6868;
  if (!qword_1EE1E6868)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6870);
    v2[0] = sub_190941AA8();
    v2[1] = sub_1908AF598((unint64_t *)&qword_1ECF6A8D8, &qword_1ECF6A8E0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6868);
  }
  return result;
}

unint64_t sub_190941AA8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E6858;
  if (!qword_1EE1E6858)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6860);
    v2[0] = sub_190941B2C();
    v2[1] = sub_1908AF598((unint64_t *)&qword_1ECF6A8D8, &qword_1ECF6A8E0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6858);
  }
  return result;
}

unint64_t sub_190941B2C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E6848;
  if (!qword_1EE1E6848)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6850);
    v2[0] = sub_190941BB0();
    v2[1] = sub_1908AF598((unint64_t *)&qword_1ECF6A8D8, &qword_1ECF6A8E0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6848);
  }
  return result;
}

unint64_t sub_190941BB0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E6828;
  if (!qword_1EE1E6828)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6830);
    v2[0] = sub_190941C34();
    v2[1] = sub_1908AF598((unint64_t *)&qword_1ECF6A8D8, &qword_1ECF6A8E0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6828);
  }
  return result;
}

unint64_t sub_190941C34()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E6808;
  if (!qword_1EE1E6808)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6810);
    v2[0] = sub_190941CB8();
    v2[1] = sub_1908AF598(&qword_1EE1EAD88, &qword_1EE1EAD90, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6808);
  }
  return result;
}

unint64_t sub_190941CB8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E67E8;
  if (!qword_1EE1E67E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E67F0);
    v2[0] = sub_190941D80(&qword_1EE1EAD30, &qword_1EE1EAD38, sub_190941D5C, (uint64_t (*)(void))sub_190941E8C);
    v2[1] = sub_1908AF598(&qword_1ECF6AD98, &qword_1ECF6ADA0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E67E8);
  }
  return result;
}

uint64_t sub_190941D5C()
{
  return sub_190941D80(&qword_1EE1EAD20, &qword_1EE1EAD28, (uint64_t (*)(void))sub_190941DF0, (uint64_t (*)(void))sub_1909395F8);
}

uint64_t sub_190941D80(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_190941DF0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EAD10;
  if (!qword_1EE1EAD10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EAD18);
    v2[0] = sub_1908AF598(&qword_1EE1EAD68, &qword_1EE1EAD70, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1908AF598(&qword_1ECF6C628, &qword_1ECF6C630, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EAD10);
  }
  return result;
}

unint64_t sub_190941E8C()
{
  unint64_t result;

  result = qword_1ECF6B1A8;
  if (!qword_1ECF6B1A8)
  {
    result = MEMORY[0x19401429C](&unk_190A578DC, &type metadata for GaugeTintVibrancyModifier);
    atomic_store(result, (unint64_t *)&qword_1ECF6B1A8);
  }
  return result;
}

uint64_t sub_190941ED0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.widgetFamily.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_190941F08@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_1909420A8();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_190941F54()
{
  sub_1909420A8();
  return sub_190A46C48();
}

uint64_t sub_190941F9C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_19094291C();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_19094203C@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_190942064, a1);
}

uint64_t sub_190942050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, (void (*)(void))sub_190942064);
}

unint64_t sub_190942064()
{
  unint64_t result;

  result = qword_1ECF6B110;
  if (!qword_1ECF6B110)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for EnvironmentValues.ShowsWidgetBackgroundKey, &type metadata for EnvironmentValues.ShowsWidgetBackgroundKey);
    atomic_store(result, (unint64_t *)&qword_1ECF6B110);
  }
  return result;
}

unint64_t sub_1909420A8()
{
  unint64_t result;

  result = qword_1ECF6BFB0;
  if (!qword_1ECF6BFB0)
  {
    result = MEMORY[0x19401429C](&unk_190A58DBC, &type metadata for WidgetRenderingModeEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_1ECF6BFB0);
  }
  return result;
}

uint64_t sub_1909420EC@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_190942114, a1);
}

uint64_t sub_190942100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, (void (*)(void))sub_190942114);
}

unint64_t sub_190942114()
{
  unint64_t result;

  result = qword_1EE1EADF8;
  if (!qword_1EE1EADF8)
  {
    result = MEMORY[0x19401429C](&unk_190A54524, &type metadata for WidgetAccessoryBackgroundAccentableEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_1EE1EADF8);
  }
  return result;
}

uint64_t sub_190942160()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for CommonServerEnvironmentModifier(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  char *v14;
  uint64_t v15;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[1];
    *((_QWORD *)a1 + 1) = v6;
    v7 = *(int *)(a3 + 24);
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = sub_190A46C30();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    v13 = v4;
    v14 = v6;
    if (v12(v9, 1, v10))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v5;
}

uint64_t destroy for CommonServerEnvironmentModifier(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = sub_190A46C30();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for CommonServerEnvironmentModifier(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  uint64_t v6;
  char *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  id v12;
  id v13;
  uint64_t v14;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (const void *)(a2 + v6);
  v9 = sub_190A46C30();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v4;
  v13 = v5;
  if (v11(v8, 1, v9))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t assignWithCopy for CommonServerEnvironmentModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a2 + 8);
  v10 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v11 = v9;

  v12 = *(int *)(a3 + 24);
  v13 = (void *)(a1 + v12);
  v14 = (void *)(a2 + v12);
  v15 = sub_190A46C30();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

_OWORD *initializeWithTake for CommonServerEnvironmentModifier(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_190A46C30();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for CommonServerEnvironmentModifier(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = *(int *)(a3 + 24);
  v9 = (void *)(a1 + v8);
  v10 = (char *)a2 + v8;
  v11 = sub_190A46C30();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for CommonServerEnvironmentModifier()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909426DC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CommonServerEnvironmentModifier()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_190942768(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

void sub_1909427E0()
{
  unint64_t v0;

  sub_190942858();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_190942858()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ECF6BCE8)
  {
    sub_190A46C30();
    v0 = sub_190A48148();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ECF6BCE8);
  }
}

unint64_t sub_1909428B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E68C8;
  if (!qword_1EE1E68C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E68D0);
    v2[0] = sub_190941558();
    v2[1] = sub_190941DF0();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E68C8);
  }
  return result;
}

unint64_t sub_19094291C()
{
  unint64_t result;

  result = qword_1ECF6AE00;
  if (!qword_1ECF6AE00)
  {
    result = MEMORY[0x19401429C](&unk_190A51FF8, &_s23CHSWidgetEnvironmentKeyVN);
    atomic_store(result, (unint64_t *)&qword_1ECF6AE00);
  }
  return result;
}

uint64_t CHSWidget.logDescription.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_extensionBundleIdentifier);
  sub_190A47ADC();

  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v3 = objc_msgSend(v1, sel_kind);
  sub_190A47ADC();

  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  return 91;
}

uint64_t CHSWidgetPersonality.logDescription.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_extensionBundleIdentifier);
  sub_190A47ADC();

  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v3 = objc_msgSend(v1, sel_kind);
  sub_190A47ADC();

  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  return 91;
}

void WidgetAccentedRenderingModeViewModifier.body(content:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v48 = a1;
  v53 = a2;
  v2 = sub_190A470A4();
  MEMORY[0x1E0C80A78](v2);
  v28 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC3A0);
  MEMORY[0x1E0C80A78](v52);
  v33 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC3E8);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC3C8);
  MEMORY[0x1E0C80A78](v31);
  v29 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC438);
  v7 = MEMORY[0x1E0C80A78](v40);
  v26 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v27 = (char *)&v23 - v10;
  MEMORY[0x1E0C80A78](v9);
  v34 = (char *)&v23 - v11;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC3E0);
  MEMORY[0x1E0C80A78](v37);
  v38 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC428);
  MEMORY[0x1E0C80A78](v45);
  v41 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC3B0);
  MEMORY[0x1E0C80A78](v36);
  v39 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC3D8);
  MEMORY[0x1E0C80A78](v15);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC390);
  MEMORY[0x1E0C80A78](v24);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC418);
  v16 = MEMORY[0x1E0C80A78](v35);
  MEMORY[0x1E0C80A78](v16);
  v25 = (char *)&v23 - v17;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC3F8);
  MEMORY[0x1E0C80A78](v49);
  v51 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC3F0);
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC3D0);
  MEMORY[0x1E0C80A78](v20);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC408);
  MEMORY[0x1E0C80A78](v43);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC448);
  MEMORY[0x1E0C80A78](v50);
  v46 = (char *)&v23 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC460);
  MEMORY[0x1E0C80A78](v22);
  __asm { BR              X10 }
}

uint64_t sub_190943014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 16))(v5, *(_QWORD *)(v7 - 136), v2);
  sub_1908AAA48(v5, v6, &qword_1EE1EC390);
  swift_storeEnumTagMultiPayload();
  sub_190943A7C(&qword_1EE1EC388, &qword_1EE1EC390, (uint64_t (*)(void))sub_1909437FC, MEMORY[0x1E0CDCE08]);
  sub_1909437FC();
  sub_190A46F90();
  sub_1908AA544(v5, &qword_1EE1EC390);
  v8 = *(_QWORD *)(v7 - 320);
  sub_1908B4BD4(v3, v8, &qword_1EE1EC418);
  sub_1908AAA48(v8, v1, &qword_1EE1EC418);
  swift_storeEnumTagMultiPayload();
  sub_190943848();
  sub_190A46F90();
  sub_1908AAA48(v4, *(_QWORD *)(v7 - 168), &qword_1EE1EC408);
  swift_storeEnumTagMultiPayload();
  sub_190943790();
  sub_1909438D4();
  v9 = *(_QWORD *)(v7 - 152);
  sub_190A46F90();
  sub_1908AA544(v4, &qword_1EE1EC408);
  sub_1908AAA48(v9, *(_QWORD *)(v7 - 112), &qword_1EE1EC448);
  swift_storeEnumTagMultiPayload();
  sub_190943724();
  sub_190943A7C(&qword_1EE1EC398, &qword_1EE1EC3A0, (uint64_t (*)(void))sub_1909437FC, MEMORY[0x1E0CDD160]);
  sub_190A46F90();
  sub_1908AA544(v9, &qword_1EE1EC448);
  return sub_1908AA544(v8, &qword_1EE1EC418);
}

unint64_t sub_190943724()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EC440;
  if (!qword_1EE1EC440)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EC448);
    v2[0] = sub_190943790();
    v2[1] = sub_1909438D4();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EC440);
  }
  return result;
}

unint64_t sub_190943790()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EC400;
  if (!qword_1EE1EC400)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EC408);
    v2[0] = sub_1909437FC();
    v2[1] = sub_190943848();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EC400);
  }
  return result;
}

unint64_t sub_1909437FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EC458;
  if (!qword_1EE1EC458)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EC460);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDBF10], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EC458);
  }
  return result;
}

unint64_t sub_190943848()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EC410;
  if (!qword_1EE1EC410)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EC418);
    v2[0] = sub_190943A7C(&qword_1EE1EC388, &qword_1EE1EC390, (uint64_t (*)(void))sub_1909437FC, MEMORY[0x1E0CDCE08]);
    v2[1] = sub_1909437FC();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EC410);
  }
  return result;
}

unint64_t sub_1909438D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EC420;
  if (!qword_1EE1EC420)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EC428);
    v2[0] = sub_190943940();
    v2[1] = sub_1909439F0();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EC420);
  }
  return result;
}

unint64_t sub_190943940()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EC3A8;
  if (!qword_1EE1EC3A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EC3B0);
    v2[0] = sub_1909437FC();
    v2[1] = sub_1909439AC();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EC3A8);
  }
  return result;
}

unint64_t sub_1909439AC()
{
  unint64_t result;

  result = qword_1ECF6A050;
  if (!qword_1ECF6A050)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetAccentedDesaturatedViewModifier, &type metadata for WidgetAccentedDesaturatedViewModifier);
    atomic_store(result, (unint64_t *)&qword_1ECF6A050);
  }
  return result;
}

unint64_t sub_1909439F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EC430;
  if (!qword_1EE1EC430)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EC438);
    v2[0] = sub_190943A7C(&qword_1EE1EC3C0, &qword_1EE1EC3C8, (uint64_t (*)(void))sub_190943940, MEMORY[0x1E0CDCE08]);
    v2[1] = sub_190943940();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EC430);
  }
  return result;
}

uint64_t sub_190943A7C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190943AE8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_190943F38();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_190943B34@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_190943F38();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_190943B80()
{
  sub_190943F38();
  return sub_190A46C48();
}

uint64_t sub_190943BC8()
{
  sub_190943F38();
  return sub_190A46C48();
}

uint64_t sub_190943C18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for WidgetAccentedRenderingModeViewModifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v6;
  int v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  if (*a1 <= 4u)
    v6 = 4;
  else
    v6 = *a1;
  v7 = v6 - 5;
  if (*a1 < 4u)
    v8 = -1;
  else
    v8 = v7;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetAccentedRenderingModeViewModifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_190943D14 + 4 * byte_190A5034F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_190943D48 + 4 * byte_190A5034A[v4]))();
}

uint64_t sub_190943D48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190943D50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190943D58);
  return result;
}

uint64_t sub_190943D64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190943D6CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_190943D70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190943D78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetAccentedRenderingModeViewModifier()
{
  return &type metadata for WidgetAccentedRenderingModeViewModifier;
}

unint64_t sub_190943D98()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EC450;
  if (!qword_1EE1EC450)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EE1EC300);
    v2[0] = sub_190943724();
    v2[1] = sub_190943A7C(&qword_1EE1EC398, &qword_1EE1EC3A0, (uint64_t (*)(void))sub_1909437FC, MEMORY[0x1E0CDD160]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EC450);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WidgetAccentedRenderingModeViewModifier.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_190943E70 + 4 * byte_190A50359[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_190943EA4 + 4 * byte_190A50354[v4]))();
}

uint64_t sub_190943EA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190943EAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190943EB4);
  return result;
}

uint64_t sub_190943EC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190943EC8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_190943ECC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190943ED4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetAccentedRenderingModeViewModifier.Style()
{
  return &type metadata for WidgetAccentedRenderingModeViewModifier.Style;
}

unint64_t sub_190943EF4()
{
  unint64_t result;

  result = qword_1EE1ED480[0];
  if (!qword_1EE1ED480[0])
  {
    result = MEMORY[0x19401429C](&unk_190A504B8, &type metadata for WidgetAccentedRenderingModeViewModifier.Style);
    atomic_store(result, qword_1EE1ED480);
  }
  return result;
}

unint64_t sub_190943F38()
{
  unint64_t result;

  result = qword_1EE1EA688;
  if (!qword_1EE1EA688)
  {
    result = MEMORY[0x19401429C](&unk_190A554EC, &type metadata for WidgetAccentedDesaturatedModeKey);
    atomic_store(result, (unint64_t *)&qword_1EE1EA688);
  }
  return result;
}

uint64_t WidgetRelevanceAttribute<A>.init(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_190A45D78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBF50);
  return swift_storeEnumTagMultiPayload();
}

uint64_t WidgetRelevanceAttribute<A>.init(group:)@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  *a2 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBF50);
  return swift_storeEnumTagMultiPayload();
}

uint64_t WidgetRelevanceAttribute<A>.init(configuration:context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v9 = type metadata accessor for WidgetRelevanceEntry.Attribute(0, a3, a3, a4);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v14 - v10;
  v12 = sub_190A45D78();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a2, v12);
  swift_storeEnumTagMultiPayload();
  return sub_190A1AA28(a1, (uint64_t)v11, a3, a5);
}

{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v9 = type metadata accessor for WidgetRelevanceEntry.Attribute(0, a3, a3, a4);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v14 - v10;
  v15 = a1;
  v12 = sub_190A45D78();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a2, v12);
  swift_storeEnumTagMultiPayload();
  return sub_190A1AA28((uint64_t)&v15, (uint64_t)v11, a3, a5);
}

uint64_t WidgetRelevanceAttribute<A>.init(configuration:group:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __int128 v6;

  v6 = *a2;
  return WidgetRelevanceEntry<A>.init(configuration:group:)(a1, (uint64_t *)&v6, a3, a4, a5);
}

uint64_t WidgetRelevanceAttribute<A>.init(configuration:group:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  __int128 v6;

  v6 = *a2;
  return WidgetRelevanceEntry<A>.init(configuration:group:)(a1, (uint64_t *)&v6, a3, a4, a5);
}

uint64_t sub_1909441D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for WidgetRelevanceEntry(319, *(_QWORD *)(a1 + 16), a3, a4);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_190944244(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unsigned int v23;
  uint64_t v24;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(sub_190A45D78() - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9 & 0xF8 | 7;
  v11 = v7 + v10;
  v12 = (v7 + v10) & ~v10;
  if (*(_QWORD *)(v8 + 64) <= 0x10uLL)
    v13 = 16;
  else
    v13 = *(_QWORD *)(v8 + 64);
  v14 = v13 + v12 + 1;
  v15 = *(_DWORD *)(v6 + 80) & 0xF8 | v10;
  v16 = (*(_DWORD *)(v6 + 80) | v9) & 0x100000;
  if ((_DWORD)v15 != 7 || v16 != 0 || v14 > 0x18)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  else
  {
    v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v21 = (_QWORD *)(((unint64_t)a1 + v11) & v20);
    v22 = (_QWORD *)(((unint64_t)a2 + v11) & v20);
    v23 = *((unsigned __int8 *)v22 + v13);
    if (v23 >= 2)
    {
      if (v13 <= 3)
        v24 = v13;
      else
        v24 = 4;
      __asm { BR              X12 }
    }
    if (v23 == 1)
    {
      if (*(_QWORD *)((((unint64_t)a2 + v11) & v20) + 8) >= 2uLL)
      {
        *v21 = *v22;
        *(_QWORD *)((((unint64_t)a1 + v11) & v20) + 8) = *(_QWORD *)((((unint64_t)a2 + v11) & v20) + 8);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v21 = *(_OWORD *)v22;
      }
      *((_BYTE *)v21 + v13) = 1;
    }
    else
    {
      (*(void (**)(unint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v20);
      *((_BYTE *)v21 + v13) = 0;
    }
  }
  return a1;
}

unint64_t sub_1909443FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(_QWORD *)(sub_190A45D78() - 8);
  v6 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  v7 = (v4 + a1 + v6) & ~v6;
  v8 = *(_QWORD *)(v5 + 64);
  if (v8 <= 0x10)
    v8 = 16;
  v9 = *(unsigned __int8 *)(v7 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X14 }
  }
  if (v9 != 1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  result = *(_QWORD *)(v7 + 8);
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_190944504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  char v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(sub_190A45D78() - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v9 = v6 + v8;
  v10 = (_QWORD *)((v6 + v8 + a1) & ~v8);
  v11 = (_QWORD *)((v9 + a2) & ~v8);
  if (*(_QWORD *)(v7 + 64) <= 0x10uLL)
    v12 = 16;
  else
    v12 = *(_QWORD *)(v7 + 64);
  v13 = *((unsigned __int8 *)v11 + v12);
  if (v13 >= 2)
  {
    if (v12 <= 3)
      v14 = v12;
    else
      v14 = 4;
    __asm { BR              X13 }
  }
  if (v13 == 1)
  {
    if (v11[1] >= 2uLL)
    {
      *v10 = *v11;
      v10[1] = v11[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v10 = *(_OWORD *)v11;
    }
    v15 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v7 + 16))(v10);
    v15 = 0;
  }
  *((_BYTE *)v10 + v12) = v15;
  return a1;
}

uint64_t sub_190944644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_190A45D78();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v10 = v6 + v9;
  v11 = (_QWORD *)((v6 + v9 + a1) & ~v9);
  v12 = (_QWORD *)((v10 + a2) & ~v9);
  if (v11 != v12)
  {
    v13 = v7;
    if (*(_QWORD *)(v8 + 64) <= 0x10uLL)
      v14 = 16;
    else
      v14 = *(_QWORD *)(v8 + 64);
    v15 = *((unsigned __int8 *)v11 + v14);
    if (v15 >= 2)
    {
      if (v14 <= 3)
        v16 = v14;
      else
        v16 = 4;
      __asm { BR              X12 }
    }
    if (v15 == 1)
    {
      if (v11[1] >= 2uLL)
        swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
    }
    v17 = *((unsigned __int8 *)v12 + v14);
    if (v17 >= 2)
    {
      if (v14 <= 3)
        v18 = v14;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    if (v17 == 1)
    {
      if (v12[1] >= 2uLL)
      {
        *v11 = *v12;
        v11[1] = v12[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v11 = *(_OWORD *)v12;
      }
      v19 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(v11, v12, v13);
      v19 = 0;
    }
    *((_BYTE *)v11 + v14) = v19;
  }
  return a1;
}

uint64_t sub_190944838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  char v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(sub_190A45D78() - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v9 = v6 + v8;
  v10 = (_OWORD *)((v6 + v8 + a1) & ~v8);
  v11 = (_OWORD *)((v9 + a2) & ~v8);
  if (*(_QWORD *)(v7 + 64) <= 0x10uLL)
    v12 = 16;
  else
    v12 = *(_QWORD *)(v7 + 64);
  v13 = *((unsigned __int8 *)v11 + v12);
  if (v13 >= 2)
  {
    if (v12 <= 3)
      v14 = v12;
    else
      v14 = 4;
    __asm { BR              X13 }
  }
  if (v13 == 1)
  {
    *v10 = *v11;
    v15 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *))(v7 + 32))(v10);
    v15 = 0;
  }
  *((_BYTE *)v10 + v12) = v15;
  return a1;
}

uint64_t sub_190944954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_190A45D78();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (_OWORD *)((v10 + a2) & ~v9);
  if ((_OWORD *)v11 != v12)
  {
    v13 = v7;
    if (*(_QWORD *)(v8 + 64) <= 0x10uLL)
      v14 = 16;
    else
      v14 = *(_QWORD *)(v8 + 64);
    v15 = *(unsigned __int8 *)(v11 + v14);
    if (v15 >= 2)
    {
      if (v14 <= 3)
        v16 = v14;
      else
        v16 = 4;
      __asm { BR              X12 }
    }
    if (v15 == 1)
    {
      if (*(_QWORD *)(v11 + 8) >= 2uLL)
        swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
    }
    v17 = *((unsigned __int8 *)v12 + v14);
    if (v17 >= 2)
    {
      if (v14 <= 3)
        v18 = v14;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    if (v17 == 1)
    {
      *(_OWORD *)v11 = *v12;
      v19 = 1;
    }
    else
    {
      (*(void (**)(uint64_t, _OWORD *, uint64_t))(v8 + 32))(v11, v12, v13);
      v19 = 0;
    }
    *(_BYTE *)(v11 + v14) = v19;
  }
  return a1;
}

uint64_t sub_190944B24(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int v15;
  unsigned int v17;
  int v18;
  int v19;
  unsigned int v20;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(sub_190A45D78() - 8);
  v9 = 16;
  if (*(_QWORD *)(v8 + 64) > 0x10uLL)
    v9 = *(_QWORD *)(v8 + 64);
  if (v7 <= 0xFE)
    v10 = 254;
  else
    v10 = v7;
  if (!a2)
    return 0;
  v11 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v12 = *(_QWORD *)(v6 + 64) + v11;
  if (a2 <= v10)
    goto LABEL_26;
  v13 = v9 + (v12 & ~v11) + 1;
  v14 = 8 * v13;
  if (v13 <= 3)
  {
    v17 = ((a2 - v10 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      v15 = *(_DWORD *)(a1 + v13);
      if (!v15)
        goto LABEL_26;
      goto LABEL_17;
    }
    if (v17 > 0xFF)
    {
      v15 = *(unsigned __int16 *)(a1 + v13);
      if (!*(_WORD *)(a1 + v13))
        goto LABEL_26;
      goto LABEL_17;
    }
    if (v17 < 2)
    {
LABEL_26:
      if (v7 >= 0xFE)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
      v20 = *(unsigned __int8 *)(((v12 + a1) & ~v11) + v9);
      if (v20 >= 2)
        return (v20 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v15 = *(unsigned __int8 *)(a1 + v13);
  if (!*(_BYTE *)(a1 + v13))
    goto LABEL_26;
LABEL_17:
  v18 = (v15 - 1) << v14;
  if (v13 > 3)
    v18 = 0;
  if ((_DWORD)v13)
  {
    if (v13 <= 3)
      v19 = v13;
    else
      v19 = 4;
    __asm { BR              X12 }
  }
  return v10 + v18 + 1;
}

void sub_190944CD8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;
  size_t v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_190A45D78() - 8);
  v10 = *(_QWORD *)(v9 + 64);
  if (v10 <= 0x10)
    v10 = 16;
  if (v8 <= 0xFE)
    v11 = 254;
  else
    v11 = v8;
  v12 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v13 = ((*(_QWORD *)(v7 + 64) + v12) & ~v12) + v10 + 1;
  if (a3 <= v11)
  {
    v14 = 0u;
  }
  else if (v13 <= 3)
  {
    v16 = ((a3 - v11 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
    if (HIWORD(v16))
    {
      v14 = 4u;
    }
    else if (v16 >= 0x100)
    {
      v14 = 2;
    }
    else
    {
      v14 = v16 > 1;
    }
  }
  else
  {
    v14 = 1u;
  }
  if (v11 < a2)
  {
    v15 = ~v11 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v17 = v15 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if ((_DWORD)v13 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if ((_DWORD)v13 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_190944F64()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x190944F4CLL);
}

void sub_190944F74()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x190944F4CLL);
}

void sub_190944F7C()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x190944F4CLL);
}

uint64_t type metadata accessor for WidgetRelevanceAttribute(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WidgetRelevanceAttribute);
}

uint64_t sub_190944F94()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D738 = result;
  return result;
}

uint64_t sub_190944FB8()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B530);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D720 = v0;
  *(_QWORD *)algn_1ECF6D728 = 0xD000000000000012;
  qword_1ECF6D730 = 0x8000000190A60EB0;
  return result;
}

ValueMetadata *type metadata accessor for IsLuminanceReducedKey()
{
  return &type metadata for IsLuminanceReducedKey;
}

unint64_t sub_190945040()
{
  unint64_t result;

  result = qword_1ECF6BF88;
  if (!qword_1ECF6BF88)
  {
    result = MEMORY[0x19401429C](&unk_190A55754, &type metadata for CodableBool);
    atomic_store(result, (unint64_t *)&qword_1ECF6BF88);
  }
  return result;
}

unint64_t sub_190945088()
{
  unint64_t result;

  result = qword_1ECF6BF98;
  if (!qword_1ECF6BF98)
  {
    result = MEMORY[0x19401429C](&unk_190A5572C, &type metadata for CodableBool);
    atomic_store(result, (unint64_t *)&qword_1ECF6BF98);
  }
  return result;
}

unint64_t sub_1909450D0()
{
  unint64_t result;

  result = qword_1ECF6BF80;
  if (!qword_1ECF6BF80)
  {
    result = MEMORY[0x19401429C](&unk_190A55704, &type metadata for CodableBool);
    atomic_store(result, (unint64_t *)&qword_1ECF6BF80);
  }
  return result;
}

uint64_t sub_190945114()
{
  if (qword_1ECF6B660 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_190945154()
{
  uint64_t v0;

  if (qword_1ECF6B658 != -1)
    swift_once();
  v0 = qword_1ECF6D720;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

_QWORD *ActivityConfiguration.init<A>(attributesType:content:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *result;
  _QWORD *v19;

  sub_190A46234();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = a6;
  v14[6] = a1;
  v14[7] = a2;
  v16 = type metadata accessor for ActivityConfiguration(0, a3, a5, v15);
  v17 = (_QWORD *)(a7 + *(int *)(v16 + 36));
  *v17 = sub_1909452D0;
  v17[1] = v14;
  result = (_QWORD *)swift_allocObject();
  result[2] = a3;
  result[3] = a4;
  result[4] = a5;
  result[5] = a6;
  v19 = (_QWORD *)(a7 + *(int *)(v16 + 40));
  *v19 = sub_1909453DC;
  v19[1] = result;
  return result;
}

uint64_t sub_1909452AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for ActivityConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActivityConfiguration);
}

uint64_t sub_1909452E0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  a1[3] = &type metadata for Jindo;
  a1[4] = &off_1E2CC9C28;
  v2 = (_QWORD *)swift_allocObject();
  *a1 = v2;
  sub_190A47650();
  v3 = sub_190A47884();
  sub_190A47650();
  v4 = sub_190A47884();
  sub_190A47650();
  v5 = sub_190A47884();
  sub_190A47650();
  result = sub_190A47884();
  v2[2] = 0;
  v2[3] = v3;
  v2[4] = v4;
  v2[5] = v5;
  v2[6] = result;
  return result;
}

uint64_t sub_1909453CC()
{
  return swift_deallocObject();
}

uint64_t sub_1909453DC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1909452E0(a1);
}

_QWORD *ActivityConfiguration.init<A>(attributesType:listItem:jindo:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  return sub_190945504(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t)&unk_1E2CCCF30, (uint64_t)sub_1909452D0, (uint64_t)&unk_1E2CCCF58, (uint64_t)sub_190945454);
}

uint64_t sub_190945434(uint64_t a1)
{
  return sub_1909455F4(a1);
}

uint64_t sub_190945454@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v4 = *(uint64_t (**)(uint64_t))(v2 + 48);
  a2[3] = (uint64_t)&type metadata for Jindo;
  a2[4] = (uint64_t)&off_1E2CC9C28;
  *a2 = swift_allocObject();
  return v4(a1);
}

_QWORD *ActivityConfiguration.init<A>(for:content:dynamicIsland:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  return sub_190945504(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t)&unk_1E2CCCF80, (uint64_t)sub_1909452D0, (uint64_t)&unk_1E2CCCFA8, (uint64_t)sub_190945668);
}

_QWORD *sub_190945504@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *result;
  _QWORD *v24;

  sub_190A46234();
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a5;
  v19[3] = a6;
  v19[4] = a7;
  v19[5] = a9;
  v19[6] = a1;
  v19[7] = a2;
  v21 = type metadata accessor for ActivityConfiguration(0, a5, a7, v20);
  v22 = (_QWORD *)(a8 + *(int *)(v21 + 36));
  *v22 = a11;
  v22[1] = v19;
  result = (_QWORD *)swift_allocObject();
  result[2] = a5;
  result[3] = a6;
  result[4] = a7;
  result[5] = a9;
  result[6] = a3;
  result[7] = a4;
  v24 = (_QWORD *)(a8 + *(int *)(v21 + 40));
  *v24 = a13;
  v24[1] = result;
  return result;
}

uint64_t sub_1909455F4(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = MEMORY[0x1E0C80A78](a1);
  v2(v1);
  return sub_190A47884();
}

uint64_t sub_190945668@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t);

  v5 = *(uint64_t (**)(uint64_t))(v2 + 48);
  a2[3] = type metadata accessor for DynamicIsland();
  a2[4] = (uint64_t)&off_1E2CC39B0;
  __swift_allocate_boxed_opaque_existential_1(a2);
  return v5(a1);
}

uint64_t ActivityConfiguration.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(unint64_t, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (**v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v36 = a2;
  v34 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v34);
  v32 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WidgetDescriptor(0);
  v35 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v33 = (uint64_t)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v30 - v13;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v30((char *)&v30 - v13, v2, a1);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = swift_allocObject();
  v31 = v16;
  v18 = *(_QWORD *)(a1 + 16);
  v17 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 24) = v17;
  v19 = *(void (**)(unint64_t, char *, uint64_t))(v9 + 32);
  v19(v16 + v15, v14, a1);
  v30(v12, v2, a1);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v18;
  *(_QWORD *)(v20 + 24) = v17;
  v19(v20 + v15, v12, a1);
  v21 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
  v22 = (uint64_t)v32;
  v23 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))&v32[*(int *)(v21 + 48)];
  v24 = sub_190A46240();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v3, v24);
  v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31;
  *v23 = sub_190945A90;
  v23[1] = v25;
  v23[2] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_190945C88;
  v23[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v20;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  v26 = v33;
  sub_1909F2CA8(v22, v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D300);
  v27 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_190A4A350;
  sub_1908AF5D8(v26, v28 + v27, type metadata accessor for WidgetDescriptor);
  v37 = v28;
  sub_19090D084();
  sub_190A46F00();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_1908B5150(v26, type metadata accessor for WidgetDescriptor);
}

uint64_t sub_190945998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(char *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v9 = type metadata accessor for ActivityViewContext(0, a3, a4, a4);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - v11;
  v14 = *(uint64_t (**)(char *))(a2
                                         + *(int *)(type metadata accessor for ActivityConfiguration(0, a3, a4, v13)
                                                  + 36));
  v15 = a4;
  v16 = a1;
  sub_19098850C(a3, v15, v12);
  if (!v4)
  {
    v16 = v14(v12);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v16;
}

uint64_t sub_190945A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActivityConfiguration(0, v6, v7, a4) - 8) + 80);
  return sub_190945998(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

uint64_t sub_190945AF4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *);
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v8 = type metadata accessor for ActivityViewContext(0, a2, a3, a3);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v15 - v10;
  v13 = *(void (**)(char *))(a1
                                      + *(int *)(type metadata accessor for ActivityConfiguration(0, a2, a3, v12) + 40));
  result = sub_19098850C(a2, a3, v11);
  if (!v4)
  {
    v13(v11);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

uint64_t objectdestroy_17Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActivityConfiguration(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4)- 8)+ 80);
  v6 = v4 + ((v5 + 32) & ~v5);
  v7 = sub_190A46240();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190945C88@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActivityConfiguration(0, v4, v5, a1) - 8) + 80);
  return sub_190945AF4(v2 + ((v6 + 32) & ~v6), v4, v5, a2);
}

BOOL static ActivityPreviewSourceStaleModifications.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ActivityPreviewSourceStaleModifications.hash(into:)()
{
  return sub_190A487CC();
}

uint64_t ActivityPreviewSourceStaleModifications.hashValue.getter()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t ActivityConfiguration.archivedViewCollections(for:metricsDefinition:environment:staleModifications:supportedFamilies:)(uint64_t a1, uint64_t a2, _OWORD *a3, _BYTE *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata2;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  *(_QWORD *)(v7 + 168) = a6;
  *(_QWORD *)(v7 + 176) = v6;
  *(_QWORD *)(v7 + 152) = a2;
  *(_QWORD *)(v7 + 160) = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6428);
  *(_QWORD *)(v7 + 184) = swift_task_alloc();
  *(_QWORD *)(v7 + 192) = swift_task_alloc();
  v11 = type metadata accessor for JindoViewCollection();
  *(_QWORD *)(v7 + 200) = v11;
  *(_QWORD *)(v7 + 208) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v7 + 216) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
  *(_QWORD *)(v7 + 224) = swift_task_alloc();
  v12 = type metadata accessor for ActivityViewCollection();
  *(_QWORD *)(v7 + 232) = v12;
  *(_QWORD *)(v7 + 240) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v7 + 248) = swift_task_alloc();
  *(_QWORD *)(v7 + 256) = swift_task_alloc();
  *(_QWORD *)(v7 + 264) = swift_task_alloc();
  v13 = *(_QWORD *)(a6 + 16);
  *(_QWORD *)(v7 + 272) = v13;
  v14 = *(_QWORD *)(a6 + 24);
  *(_QWORD *)(v7 + 280) = v14;
  v16 = type metadata accessor for ActivityViewContext(255, v13, v14, v15);
  *(_QWORD *)(v7 + 288) = v16;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v7 + 296) = TupleTypeMetadata2;
  v18 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  *(_QWORD *)(v7 + 304) = v18;
  *(_QWORD *)(v7 + 312) = *(_QWORD *)(v18 + 64);
  *(_QWORD *)(v7 + 320) = swift_task_alloc();
  *(_QWORD *)(v7 + 328) = swift_task_alloc();
  *(_QWORD *)(v7 + 336) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v7 + 344) = swift_task_alloc();
  *(_QWORD *)(v7 + 352) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v7 + 360) = swift_task_alloc();
  *(_QWORD *)(v7 + 368) = swift_task_alloc();
  *(_QWORD *)(v7 + 376) = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v7 + 384) = AssociatedTypeWitness;
  *(_QWORD *)(v7 + 392) = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v7 + 400) = swift_task_alloc();
  *(_QWORD *)(v7 + 408) = swift_task_alloc();
  *(_QWORD *)(v7 + 416) = swift_getTupleTypeMetadata2();
  v20 = sub_190A48148();
  *(_QWORD *)(v7 + 424) = v20;
  *(_QWORD *)(v7 + 432) = *(_QWORD *)(v20 - 8);
  *(_QWORD *)(v7 + 440) = swift_task_alloc();
  *(_QWORD *)(v7 + 448) = swift_task_alloc();
  v22 = type metadata accessor for ActivityPreviewSource.Content(0, v13, v14, v21);
  *(_QWORD *)(v7 + 456) = v22;
  *(_QWORD *)(v7 + 464) = *(_QWORD *)(v22 - 8);
  v23 = swift_task_alloc();
  *(_QWORD *)(v7 + 472) = v23;
  *(_OWORD *)(v7 + 480) = *a3;
  *(_BYTE *)(v7 + 528) = *a4;
  *(_QWORD *)(v7 + 496) = sub_190A47D64();
  *(_QWORD *)(v7 + 504) = sub_190A47D58();
  v24 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 512) = v24;
  *v24 = v7;
  v24[1] = sub_1909460B0;
  return ActivityPreviewSource.makeContent<A>(for:)(v23, v13, v13, v14);
}

uint64_t sub_1909460B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 520) = v0;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_190946134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  void *v53;
  void (*v54)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (**v99)(uint64_t);
  uint64_t v100;
  uint64_t v101;
  int *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(uint64_t, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  uint64_t v131;

  v126 = *(unsigned __int8 *)(v0 + 528);
  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 456);
  v104 = *(_QWORD *)(v0 + 416);
  v105 = *(_QWORD *)(v0 + 432);
  v124 = *(_QWORD *)(v0 + 392);
  v128 = *(_QWORD *)(v0 + 352);
  v100 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 296);
  swift_release();
  v109 = v3;
  v131 = sub_190A47A10();
  *(_QWORD *)(v0 + 120) = *(_QWORD *)(v1 + *(int *)(v2 + 36));
  v4 = sub_190A47D04();
  MEMORY[0x19401429C](MEMORY[0x1E0DEAF38], v4);
  sub_190A47BC0();
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 112);
  sub_190A48478();
  sub_190A48454();
  sub_190A4846C();
  while (1)
  {
    v9 = *(_QWORD *)(v0 + 440);
    v8 = *(_QWORD *)(v0 + 448);
    v11 = *(_QWORD *)(v0 + 416);
    v10 = *(_QWORD *)(v0 + 424);
    sub_190A48460();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 32))(v8, v9, v10);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 48))(v8, 1, v11) == 1)
      break;
    v111 = *(_QWORD *)(v0 + 472);
    v12 = *(char **)(v0 + 448);
    v14 = *(_QWORD *)(v0 + 400);
    v13 = *(_QWORD *)(v0 + 408);
    v15 = *(char **)(v0 + 376);
    v16 = *(_QWORD *)(v0 + 384);
    v17 = *(_QWORD *)(v0 + 344);
    v18 = *(_QWORD **)(v0 + 328);
    v119 = *(_QWORD *)(v0 + 288);
    v114 = *(_QWORD *)(v0 + 280);
    v19 = *(_QWORD *)(v0 + 272);
    v20 = *(_QWORD *)v12;
    (*(void (**)(uint64_t, char *, uint64_t))(v124 + 32))(v13, &v12[*(int *)(v104 + 48)], v16);
    v21 = v111;
    v112 = *(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 16);
    v112(v17, v21, v19);
    v107 = *(void (**)(uint64_t, uint64_t, uint64_t))(v124 + 16);
    v107(v14, v13, v16);
    sub_19093D994(0xD000000000000016, 0x8000000190A61DD0, v17, v14, v126 == 1, v19, v114, v15);
    v22 = (char *)v18 + *(int *)(v109 + 48);
    *v18 = v20;
    v23 = *(void (**)(char *, char *, uint64_t))(v128 + 16);
    v23(v22, v15, v119);
    sub_190A47D04();
    sub_190A47CEC();
    if (v126 == 2)
    {
      v24 = *(_QWORD *)(v0 + 400);
      v25 = *(_QWORD *)(v0 + 408);
      v26 = *(_QWORD *)(v0 + 384);
      v27 = *(char **)(v0 + 368);
      v28 = *(_QWORD *)(v0 + 344);
      v29 = *(_QWORD **)(v0 + 328);
      v30 = *(_QWORD *)(v0 + 272);
      v120 = *(_QWORD *)(v0 + 280);
      v123 = *(_QWORD *)(v0 + 288);
      v112(v28, *(_QWORD *)(v0 + 472), v30);
      v107(v24, v25, v26);
      sub_19093D994(0xD000000000000016, 0x8000000190A61DD0, v28, v24, 1, v30, v120, v27);
      v31 = (char *)v29 + *(int *)(v109 + 48);
      *v29 = v20;
      v23(v31, v27, v123);
      sub_190A47CEC();
      v5 = *(void (**)(char *, uint64_t))(v128 + 8);
      v5(v27, v123);
    }
    else
    {
      v5 = *(void (**)(char *, uint64_t))(v128 + 8);
    }
    v6 = *(_QWORD *)(v0 + 408);
    v7 = *(_QWORD *)(v0 + 384);
    v5(*(char **)(v0 + 376), *(_QWORD *)(v0 + 288));
    (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  if (!MEMORY[0x194012F1C]())
  {
    v35 = MEMORY[0x1E0DEE9D8];
LABEL_25:
    swift_bridgeObjectRelease();
    v70 = *(_QWORD *)(v35 + 16);
    if (v70)
    {
      v71 = *(_QWORD *)(v0 + 240);
      v72 = v35 + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80));
      v106 = *(_QWORD *)(v71 + 72);
      v73 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v74 = *(_QWORD *)(v0 + 520);
      while (1)
      {
        v75 = *(_QWORD **)(v0 + 192);
        sub_1908AF5D8(v72, *(_QWORD *)(v0 + 248), (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewCollection);
        sub_1908DB128(v75);
        if (v74)
          break;
        v116 = v70;
        v127 = *(_QWORD *)(v0 + 248);
        v129 = v73;
        v118 = *(_QWORD *)(v0 + 184);
        v122 = *(_QWORD *)(v0 + 192);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6378);
        v76 = swift_allocObject();
        swift_weakInit();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BBE0);
        v77 = sub_190A464C8();
        v78 = *(_QWORD *)(v77 - 8);
        v79 = swift_allocObject();
        *(_OWORD *)(v79 + 16) = xmmword_190A4A380;
        sub_190A464BC();
        sub_190A46498();
        sub_190A464B0();
        sub_190A464A4();
        v80 = sub_190947570(v79);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(_QWORD *)(v76 + 24) = v80;
        v81 = v76 + qword_1EE1E62F0;
        sub_190A46498();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v78 + 56))(v81, 0, 1, v77);
        *(_QWORD *)(v0 + 128) = sub_190A47884();
        *(_QWORD *)(v0 + 136) = v76;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6148);
        swift_allocObject();
        swift_retain();
        v82 = sub_190A46E40();
        sub_1908AAA48(v122, v118, &qword_1EE1E6428);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6298);
        v83 = swift_allocObject();
        sub_1909477C8(v118, v83 + *(_QWORD *)(*(_QWORD *)v83 + 96));
        *(_QWORD *)(v83 + *(_QWORD *)(*(_QWORD *)v83 + 104)) = v82;
        swift_retain();
        sub_190A46E28();
        sub_190A46E04();
        sub_1908AA544(v122, &qword_1EE1E6428);
        swift_weakAssign();
        swift_release();
        sub_1908B5150(v127, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewCollection);
        *(_QWORD *)(v0 + 80) = v83;
        *(_QWORD *)(v0 + 88) = v82;
        sub_190947810();
        swift_retain();
        v84 = sub_190A46D98();
        v86 = v85;
        swift_release();
        v73 = v129;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v73 = sub_1908F2C94(0, v129[2] + 1, 1, v129);
        v88 = v73[2];
        v87 = v73[3];
        if (v88 >= v87 >> 1)
          v73 = sub_1908F2C94((_QWORD *)(v87 > 1), v88 + 1, 1, v73);
        v73[2] = v88 + 1;
        v89 = &v73[2 * v88];
        v89[4] = v84;
        v89[5] = v86;
        swift_release();
        swift_release();
        v74 = 0;
        v72 += v106;
        v70 = v116 - 1;
        if (v116 == 1)
        {
          swift_bridgeObjectRelease();
          v130 = v73;
          goto LABEL_36;
        }
      }
      v91 = *(_QWORD *)(v0 + 464);
      v90 = *(_QWORD *)(v0 + 472);
      v92 = *(_QWORD *)(v0 + 456);
      sub_1908B5150(*(_QWORD *)(v0 + 248), (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewCollection);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v90, v92);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      swift_bridgeObjectRelease();
      v130 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_36:
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 464) + 8))(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 456));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v130);
    }
  }
  v108 = *(_QWORD *)(v0 + 352);
  v93 = *(_QWORD *)(v0 + 312);
  v113 = *(_QWORD *)(v0 + 304);
  v103 = *(_QWORD *)(v0 + 240);
  v32 = *(_QWORD *)(v0 + 216);
  v101 = *(_QWORD *)(v0 + 208);
  v102 = *(int **)(v0 + 232);
  v96 = *(_QWORD *)(v0 + 200);
  v33 = *(_QWORD *)(v0 + 152);
  v110 = *(_QWORD *)(v0 + 320) + *(int *)(v109 + 48);
  v95 = *(_QWORD *)(v0 + 168);
  v99 = (uint64_t (**)(uint64_t))(*(_QWORD *)(v0 + 176) + *(int *)(v95 + 36));
  v34 = 0;
  v98 = v33 + *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v97 = v32;
  v94 = v32 + 16;
  v35 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v36 = sub_190A47CC8();
    sub_190A47C8C();
    if ((v36 & 1) == 0)
      break;
    result = (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v113 + 16))(*(_QWORD *)(v0 + 320), v131+ ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80))+ *(_QWORD *)(v113 + 72) * v34, *(_QWORD *)(v0 + 296));
    v38 = v34 + 1;
    if (__OFADD__(v34, 1))
      goto LABEL_37;
LABEL_11:
    v39 = **(_QWORD **)(v0 + 320);
    result = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v108 + 32))(*(_QWORD *)(v0 + 360), v110, *(_QWORD *)(v0 + 288));
    if (__OFADD__(v39, 1))
      goto LABEL_38;
    v121 = v38;
    v125 = v35;
    v40 = *(_QWORD *)(v0 + 480);
    v115 = *(void **)(v0 + 488);
    v41 = *(_QWORD *)(v0 + 360);
    v42 = *(_QWORD *)(v0 + 264);
    v43 = *(_QWORD *)(v0 + 224);
    v44 = *(_QWORD *)(v0 + 200);
    v45 = *(_QWORD *)(v0 + 152);
    v117 = *(_QWORD *)(v0 + 160);
    *(_QWORD *)(v0 + 144) = v39 + 1;
    sub_190A4867C();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    v46 = (*v99)(v41);
    sub_1908AF5D8(v45, v42 + v102[7], type metadata accessor for ActivityMetricsDefinition);
    v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v101 + 56);
    v47(v42, 1, 1, v44);
    *(_QWORD *)(v42 + v102[6]) = v46;
    v48 = (_QWORD *)(v42 + v102[5]);
    *v48 = v40;
    v48[1] = v115;
    v49 = v42 + v102[9];
    *(_QWORD *)v49 = 0x206574617453;
    *(_QWORD *)(v49 + 8) = 0xE600000000000000;
    *(_WORD *)(v49 + 16) = 0;
    *(_QWORD *)(v42 + v102[8]) = v117;
    sub_1908AAA48(v98, v43, &qword_1EE1EA8F0);
    v50 = type metadata accessor for JindoMetricsDefinition(0);
    LODWORD(v46) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v43, 1, v50);
    swift_retain();
    v51 = v115;
    swift_bridgeObjectRetain();
    sub_1908AA544(v43, &qword_1EE1EA8F0);
    if ((_DWORD)v46 != 1)
    {
      v52 = *(_QWORD *)(v0 + 480);
      v53 = *(void **)(v0 + 488);
      v54 = v47;
      v55 = *(_QWORD *)(v0 + 264);
      v56 = *(_QWORD **)(v0 + 216);
      v57 = *(_QWORD *)(v0 + 200);
      v58 = *(_QWORD *)(v0 + 152);
      (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 176) + *(int *)(v95 + 40)))(*(_QWORD *)(v0 + 360));
      sub_1908AF5D8(v58, (uint64_t)v56 + *(int *)(v96 + 24), type metadata accessor for ActivityMetricsDefinition);
      sub_1908B4BBC((__int128 *)(v0 + 16), v94);
      *v56 = v52;
      *(_QWORD *)(v97 + 8) = v53;
      swift_retain();
      v59 = v53;
      sub_1908AA544(v55, &qword_1EE1E6430);
      sub_1908BD0B4((uint64_t)v56, v55, (uint64_t (*)(_QWORD))type metadata accessor for JindoViewCollection);
      v54(v55, 0, 1, v57);
    }
    sub_1908AF5D8(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 256), (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewCollection);
    v35 = v125;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v35 = sub_1908F3014(0, *(_QWORD *)(v125 + 16) + 1, 1, v125);
    v61 = *(_QWORD *)(v35 + 16);
    v60 = *(_QWORD *)(v35 + 24);
    if (v61 >= v60 >> 1)
      v35 = sub_1908F3014(v60 > 1, v61 + 1, 1, v35);
    v62 = *(_QWORD *)(v0 + 360);
    v64 = *(_QWORD *)(v0 + 288);
    v63 = *(_QWORD *)(v0 + 296);
    v65 = *(_QWORD *)(v0 + 256);
    v66 = *(_QWORD *)(v0 + 264);
    *(_QWORD *)(v35 + 16) = v61 + 1;
    sub_1908BD0B4(v65, v35+ ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(_QWORD *)(v103 + 72) * v61, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewCollection);
    (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v62, v64);
    sub_1908B5150(v66, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewCollection);
    ++v34;
    if (v121 == MEMORY[0x194012F1C](v131, v63))
      goto LABEL_25;
  }
  result = sub_190A482E0();
  if (v93 != 8)
    goto LABEL_39;
  v67 = result;
  v68 = *(_QWORD *)(v0 + 320);
  v69 = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 104) = v67;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 16))(v68, v0 + 104, v69);
  result = swift_unknownObjectRelease();
  v38 = v34 + 1;
  if (!__OFADD__(v34, 1))
    goto LABEL_11;
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_190946FCC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909470FC(uint64_t a1, uint64_t a2, _OWORD *a3, _BYTE *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_1908C4FDC;
  return ActivityConfiguration.archivedViewCollections(for:metricsDefinition:environment:staleModifications:supportedFamilies:)(a1, a2, a3, a4, a5, a6);
}

uint64_t static EnvironmentValues.ActivityFullScreenKey.defaultValue.getter()
{
  swift_beginAccess();
  return byte_1EE1ED508;
}

uint64_t static EnvironmentValues.ActivityFullScreenKey.defaultValue.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EE1ED508 = a1;
  return result;
}

uint64_t (*static EnvironmentValues.ActivityFullScreenKey.defaultValue.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_19094724C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_beginAccess();
  *a1 = byte_1EE1ED508;
  return result;
}

uint64_t sub_190947294()
{
  return sub_190A4681C();
}

uint64_t sub_1909472A4()
{
  unsigned __int8 v1;

  sub_190939660();
  sub_190A46C3C();
  return v1;
}

uint64_t sub_1909472DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD v12[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6428);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6378);
  swift_allocObject();
  v7 = sub_190947450();
  v8 = sub_190A47884();
  v12[0] = v7;
  v12[1] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6148);
  swift_allocObject();
  swift_retain();
  v9 = sub_190A46E40();
  sub_1908AAA48(a1, (uint64_t)v6, &qword_1EE1E6428);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6298);
  v10 = swift_allocObject();
  sub_1909477C8((uint64_t)v6, v10 + *(_QWORD *)(*(_QWORD *)v10 + 96));
  *(_QWORD *)(v10 + *(_QWORD *)(*(_QWORD *)v10 + 104)) = v9;
  swift_retain();
  sub_190A46E28();
  sub_190A46E04();
  sub_1908AA544(a1, &qword_1EE1E6428);
  swift_weakAssign();
  result = swift_release();
  *a2 = v10;
  a2[1] = v9;
  return result;
}

uint64_t sub_190947450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BBE0);
  v1 = sub_190A464C8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_190A4A380;
  sub_190A464BC();
  sub_190A46498();
  sub_190A464B0();
  sub_190A464A4();
  v4 = sub_190947570(v3);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v0 + 24) = v4;
  v5 = v0 + qword_1EE1E62F0;
  sub_190A46498();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v5, 0, 1, v1);
  return v0;
}

uint64_t sub_190947570(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_190A464C8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BBC0);
    v10 = sub_190A4828C();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_19094806C(&qword_1ECF6BBD8, MEMORY[0x1E0DF0358]);
      v14 = sub_190A47A40();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_19094806C(&qword_1ECF6BB50, MEMORY[0x1E0DF0360]);
          v20 = sub_190A47AAC();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1909477C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_190947810()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1E6290;
  if (!qword_1EE1E6290)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6298);
    result = MEMORY[0x19401429C](&unk_190A5C1B8, v1);
    atomic_store(result, (unint64_t *)&qword_1EE1E6290);
  }
  return result;
}

uint64_t sub_19094785C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_190947894()
{
  unint64_t result;

  result = qword_1EE1ED518;
  if (!qword_1EE1ED518)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ActivityPreviewSourceStaleModifications, &type metadata for ActivityPreviewSourceStaleModifications);
    atomic_store(result, (unint64_t *)&qword_1EE1ED518);
  }
  return result;
}

uint64_t sub_1909478D8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190A46240();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_190947950(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_190A46240();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = *(int *)(a3 + 36);
    v9 = *(int *)(a3 + 40);
    v10 = (uint64_t *)((char *)v4 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)v4 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1909479F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_190A46240();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  return swift_release();
}

uint64_t sub_190947A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_190A46240();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = *(int *)(a3 + 40);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_190947AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_190A46240();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 36);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  v11 = *(int *)(a3 + 40);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_190947B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_190A46240();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 40);
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_190947BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_190A46240();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  swift_release();
  *(_OWORD *)(a1 + *(int *)(a3 + 40)) = *(_OWORD *)(a2 + *(int *)(a3 + 40));
  swift_release();
  return a1;
}

uint64_t sub_190947C4C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190947C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_190A46240();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_190947CD4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190947CE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_190A46240();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  return result;
}

uint64_t dispatch thunk of ActivityPreviewSourceExpanding.archivedViewCollections(for:metricsDefinition:environment:staleModifications:supportedFamilies:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 8)
                                                                                              + *(_QWORD *)(a7 + 8));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_190930784;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t storeEnumTagSinglePayload for ActivityPreviewSourceStaleModifications(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190947E4C + 4 * byte_190A505E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_190947E80 + 4 * byte_190A505E0[v4]))();
}

uint64_t sub_190947E80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190947E88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190947E90);
  return result;
}

uint64_t sub_190947E9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190947EA4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190947EA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190947EB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityPreviewSourceStaleModifications()
{
  return &type metadata for ActivityPreviewSourceStaleModifications;
}

ValueMetadata *type metadata accessor for EnvironmentValues.ActivityFullScreenKey()
{
  return &type metadata for EnvironmentValues.ActivityFullScreenKey;
}

uint64_t sub_190947EDC()
{
  sub_19090D084();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190947F2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED530);
    v3 = sub_190A4828C();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(unsigned __int8 *)(v6 + v4);
      sub_190A487C0();
      sub_190A487CC();
      result = sub_190A48808();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (v7 == *(unsigned __int8 *)(v14 + v10))
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (v7 == *(unsigned __int8 *)(v14 + v10))
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_BYTE *)(v14 + v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_19094806C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_190A464C8();
    result = MEMORY[0x19401429C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1909480AC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

id sub_190948348()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmptyConfigurationINIntent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190948378()
{
  uint64_t v0;

  v0 = sub_190A45F70();
  __swift_allocate_value_buffer(v0, qword_1ECF6A540);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECF6A540);
  return sub_190A45F64();
}

uint64_t static EmptyConfiguration.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ECF6A630 != -1)
    swift_once();
  v2 = sub_190A45F70();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ECF6A540);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static EmptyConfiguration.title.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ECF6A630 != -1)
    swift_once();
  v2 = sub_190A45F70();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ECF6A540);
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static EmptyConfiguration.title.modify())()
{
  uint64_t v0;

  if (qword_1ECF6A630 != -1)
    swift_once();
  v0 = sub_190A45F70();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECF6A540);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_19094859C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ECF6A630 != -1)
    swift_once();
  v2 = sub_190A45F70();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ECF6A540);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_190948648()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_19094B470();
  *v1 = v0;
  v1[1] = sub_1909486AC;
  return sub_190A45DCC();
}

uint64_t sub_1909486AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *v1;
  result = swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  return result;
}

uint64_t sub_190948708()
{
  sub_19094888C();
  return sub_190A45D24();
}

uint64_t ControlToggle.init<A, B, C, D, E>(kind:updatableEntity:content:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  char v30;
  _QWORD v31[7];

  sub_19094888C();
  v18 = sub_190A45CB8();
  v23 = v19;
  v24 = (void (*)(char *, uint64_t, uint64_t))v18;
  sub_1909488D0(a3, a12, v31);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = *(_OWORD *)(a8 + *MEMORY[0x1E0DEE2A8]);
  *(_QWORD *)(v20 + 32) = a8;
  *(_QWORD *)(v20 + 40) = a10;
  *(_QWORD *)(v20 + 48) = a11;
  *(_QWORD *)(v20 + 56) = a12;
  *(_QWORD *)(v20 + 64) = a13;
  *(_QWORD *)(v20 + 72) = a14;
  *(_QWORD *)(v20 + 80) = a4;
  *(_QWORD *)(v20 + 88) = a5;
  v21 = sub_190948980();
  v30 = 0;
  result = sub_1909BC3AC(a1, a2, (uint64_t)&type metadata for EmptyConfiguration, v24, v23, 0, 0, &v30, a9, (uint64_t)v31, (uint64_t)sub_19094897C, v20, (uint64_t)nullsub_1, 0, a6, a7, 0, 0, (uint64_t)&type metadata for EmptyConfiguration,
             a10,
             MEMORY[0x1E0CE0428],
             a11,
             (uint64_t)&type metadata for KeyPathToggleBox,
             a13,
             MEMORY[0x1E0CE0400],
             a14,
             v21);
  *(_BYTE *)(a9 + 176) = 1;
  return result;
}

unint64_t sub_19094888C()
{
  unint64_t result;

  result = qword_1ECF6AF00;
  if (!qword_1ECF6AF00)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for EmptyConfiguration, &type metadata for EmptyConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ECF6AF00);
  }
  return result;
}

uint64_t sub_1909488D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a1;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a1;
  *a3 = &unk_1EE1ED5C8;
  a3[1] = v6;
  a3[2] = sub_19094B854;
  a3[3] = v7;
  a3[4] = &unk_1EE1ED5D0;
  a3[5] = 0;
  return swift_retain();
}

uint64_t sub_190948958()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_190948980()
{
  unint64_t result;

  result = qword_1ECF6A538;
  if (!qword_1ECF6A538)
  {
    result = MEMORY[0x19401429C](&unk_190A50914, &type metadata for KeyPathToggleBox);
    atomic_store(result, (unint64_t *)&qword_1ECF6A538);
  }
  return result;
}

uint64_t ControlToggle.init<A, B, C, D, E>(kind:updatableEntity:content:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char v30;
  _QWORD v31[7];

  sub_19094888C();
  v18 = sub_190A45CB8();
  v24 = v19;
  v25 = v18;
  sub_190948B08(a3, a12, v31);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = *(_OWORD *)(a8 + *MEMORY[0x1E0DEE2A8]);
  *(_QWORD *)(v20 + 32) = a8;
  *(_QWORD *)(v20 + 40) = a10;
  *(_QWORD *)(v20 + 48) = a11;
  *(_QWORD *)(v20 + 56) = a12;
  *(_QWORD *)(v20 + 64) = a13;
  *(_QWORD *)(v20 + 72) = a14;
  *(_QWORD *)(v20 + 80) = a4;
  *(_QWORD *)(v20 + 88) = a5;
  v21 = sub_190948980();
  v30 = 0;
  result = sub_1909BCC40(a1, a2, (uint64_t)&type metadata for EmptyConfiguration, v25, v24, 0, 0, &v30, a9, (uint64_t)v31, (uint64_t)sub_19094897C, (_QWORD *)v20, a6, a7, 0, 0, (uint64_t)&type metadata for EmptyConfiguration, a10, a11,
             (uint64_t)&type metadata for KeyPathToggleBox,
             a13,
             a14,
             v21);
  *(_BYTE *)(a9 + 176) = 1;
  return result;
}

uint64_t sub_190948B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a1;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a1;
  *a3 = &unk_1EE1ED598;
  a3[1] = v6;
  a3[2] = sub_19094B714;
  a3[3] = v7;
  a3[4] = &unk_1EE1ED5A0;
  a3[5] = 0;
  return swift_retain();
}

uint64_t sub_190948B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(uint64_t);
  void (*v12)(char *, uint64_t);
  uint64_t v14;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v14 - v9;
  v11(1);
  sub_1909DA920((uint64_t)v8, a2, (uint64_t)v10);
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, a2);
  sub_1909D989C((uint64_t)v10, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, a2);
}

uint64_t sub_190948C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_190948B90(a1, *(_QWORD *)(v2 + 40), a2);
}

double ControlToggle.init<A, B, C, D, E, F>(kind:intentUpdatableProperty:content:value:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  double result;

  *(_QWORD *)&result = ControlToggle.init<A, B, C, D, E, F, G>(kind:intentUpdatableProperty:title:subtitle:value:affordances:)(a1, a2, a3, a4, a5, (uint64_t)j_nullsub_1, 0, a6, a9, a7, 0, 0, a8, MEMORY[0x1E0CE0428], a10, a11, a12, MEMORY[0x1E0CE0400], a13).n128_u64[0];
  return result;
}

__n128 ControlToggle.init<A, B, C, D, E, F, G>(kind:intentUpdatableProperty:title:subtitle:value:affordances:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  unint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __n128 result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v46;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  char v54;
  _QWORD v55[6];
  _OWORD v56[12];

  v21 = *a3;
  v22 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a3 + 8);
  v23 = *MEMORY[0x1E0C91B88] + v22;
  v24 = *(_QWORD *)(v23 + 16);
  v43 = *(_QWORD *)(v23 + 40);
  v25 = sub_190A45DB4();
  v49 = v26;
  v50 = (void (*)(char *, uint64_t, uint64_t))v25;
  sub_190949040(a3, a16, v55);
  v27 = (_QWORD *)swift_allocObject();
  v28 = *(_QWORD *)(v21 + *MEMORY[0x1E0DEE2A8]);
  v27[2] = v28;
  v27[3] = v24;
  v29 = v22;
  v42 = v22;
  v30 = *(_QWORD *)(*MEMORY[0x1E0C91B88] + v22 + 8);
  v27[4] = v30;
  v27[5] = v29;
  v27[6] = a13;
  v27[7] = a14;
  v27[8] = a15;
  v27[9] = a16;
  v27[10] = v43;
  v27[11] = a17;
  v27[12] = a18;
  v27[13] = a19;
  v27[14] = a4;
  v27[15] = a5;
  v31 = (_QWORD *)swift_allocObject();
  v32 = v31;
  v31[2] = v28;
  v31[3] = v24;
  v31[4] = v30;
  v31[5] = v42;
  v31[6] = a13;
  v31[7] = a14;
  v31[8] = a15;
  v31[9] = a16;
  v31[10] = v43;
  v31[11] = a17;
  v31[12] = a18;
  v31[13] = a19;
  if (!a11)
    a12 = 0;
  v46 = a12;
  v31[14] = a6;
  v31[15] = a7;
  v34 = sub_190948980();
  v54 = 0;
  sub_1909BC3AC(a1, a2, (uint64_t)&type metadata for EmptyConfiguration, v50, v49, 0, 0, &v54, (uint64_t)v56, (uint64_t)v55, (uint64_t)sub_190949234, (uint64_t)v27, (uint64_t)sub_19094931C, v32, a8, a10, a11, v46, (uint64_t)&type metadata for EmptyConfiguration,
    a13,
    a14,
    a15,
    (uint64_t)&type metadata for KeyPathToggleBox,
    a17,
    a18,
    a19,
    v34);
  v35 = v56[7];
  v36 = v56[9];
  v37 = v56[10];
  *(_OWORD *)(a9 + 128) = v56[8];
  *(_OWORD *)(a9 + 144) = v36;
  *(_OWORD *)(a9 + 160) = v37;
  v38 = v56[5];
  v39 = v56[6];
  *(_OWORD *)(a9 + 64) = v56[4];
  *(_OWORD *)(a9 + 80) = v38;
  *(_OWORD *)(a9 + 96) = v39;
  *(_OWORD *)(a9 + 112) = v35;
  v40 = v56[1];
  *(_OWORD *)a9 = v56[0];
  *(_OWORD *)(a9 + 16) = v40;
  result = (__n128)v56[3];
  *(_OWORD *)(a9 + 32) = v56[2];
  *(__n128 *)(a9 + 48) = result;
  *(_BYTE *)(a9 + 176) = 1;
  return result;
}

double ControlToggle.init<A, B, C, D, E, F>(kind:intentUpdatableProperty:title:value:affordances:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = ControlToggle.init<A, B, C, D, E, F, G>(kind:intentUpdatableProperty:title:subtitle:value:affordances:)(a1, a2, a3, a4, a5, (uint64_t)nullsub_1, 0, a6, a9, a7, a8, a10, a11, MEMORY[0x1E0CE0428], a12, a13, a14, MEMORY[0x1E0CE0400], a15).n128_u64[0];
  return result;
}

double ControlToggle.init<A, B, C, D, E, F, G>(kind:intentUpdatableProperty:title:subtitle:value:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  double result;

  *(_QWORD *)&result = ControlToggle.init<A, B, C, D, E, F, G>(kind:intentUpdatableProperty:title:subtitle:value:affordances:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, 0, 0, a11, a12, a13, a14, a15, a16, a17).n128_u64[0];
  return result;
}

uint64_t sub_190949040@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = *a1;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a1;
  v9 = (_QWORD *)swift_allocObject();
  v10 = (_QWORD *)(v6 + *MEMORY[0x1E0DEE2A8]);
  v9[2] = *v10;
  v11 = v10[1];
  v12 = (_QWORD *)(*MEMORY[0x1E0C91B88] + v11);
  v9[3] = v12[2];
  v9[4] = v12[1];
  v9[5] = v11;
  v9[6] = a2;
  v9[7] = v12[5];
  *a3 = &unk_1EE1ED560;
  a3[1] = v7;
  a3[2] = sub_19094B528;
  a3[3] = v8;
  a3[4] = &unk_1EE1ED570;
  a3[5] = v9;
  return swift_retain();
}

uint64_t sub_190949134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(uint64_t);
  void (*v12)(char *, uint64_t);
  uint64_t v14;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v14 - v9;
  v11(1);
  sub_1909DA920((uint64_t)v8, a2, (uint64_t)v10);
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, a2);
  sub_1909D989C((uint64_t)v10, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, a2);
}

uint64_t sub_190949210()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190949234(uint64_t a1)
{
  return sub_190949328(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190949134);
}

uint64_t sub_190949240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(uint64_t);
  void (*v11)(char *, uint64_t);
  uint64_t v13;

  v4 = *(_QWORD *)(a3 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  v10(1);
  sub_1909DA920((uint64_t)v7, a3, (uint64_t)v9);
  v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v7, a3);
  sub_1909D989C((uint64_t)v9, a3, a2);
  return ((uint64_t (*)(char *, uint64_t))v11)(v9, a3);
}

uint64_t sub_19094931C(uint64_t a1)
{
  return sub_190949328(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_190949240);
}

uint64_t sub_190949328(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[14], v2[15], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[10], v2[11], v2[12], v2[13]);
}

unint64_t sub_19094937C()
{
  unint64_t result;

  result = qword_1ECF6AF08;
  if (!qword_1ECF6AF08)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for EmptyConfiguration, &type metadata for EmptyConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ECF6AF08);
  }
  return result;
}

unint64_t sub_1909493C4()
{
  unint64_t result;

  result = qword_1ECF6AEF8;
  if (!qword_1ECF6AEF8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for EmptyConfiguration, &type metadata for EmptyConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ECF6AEF8);
  }
  return result;
}

unint64_t sub_19094940C()
{
  unint64_t result;

  result = qword_1EE1ED538[0];
  if (!qword_1EE1ED538[0])
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0C91D68], MEMORY[0x1E0DEDCE8]);
    atomic_store(result, qword_1EE1ED538);
  }
  return result;
}

uint64_t sub_190949450()
{
  sub_19094888C();
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for EmptyConfigurationINIntent()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for EmptyConfiguration()
{
  return &type metadata for EmptyConfiguration;
}

uint64_t destroy for KeyPathToggleBox()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for KeyPathToggleBox(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for KeyPathToggleBox(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for KeyPathToggleBox(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for KeyPathToggleBox()
{
  return &type metadata for KeyPathToggleBox;
}

uint64_t sub_190949630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v14[2];

  v6 = sub_190A48148();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v14 - v8;
  v14[1] = a1;
  sub_190A4885C();
  swift_retain();
  v10 = swift_dynamicCast();
  v11 = *(_QWORD *)(a2 - 8);
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if ((v10 & 1) != 0)
  {
    v12(v9, 0, 1, a2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v9, a2);
  }
  else
  {
    v12(v9, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_19094B7C0();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_190949780(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;

  v2[7] = a1;
  v2[8] = a2;
  v3 = *a1;
  v4 = *(_QWORD *)(a2 + 8);
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 + 8);
  v5 = *(_QWORD *)(v3 + *MEMORY[0x1E0DEE2A8]);
  v2[11] = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[12] = AssociatedTypeWitness;
  v2[13] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2[14] = swift_task_alloc();
  v2[15] = *(_QWORD *)(v5 - 8);
  v2[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_190949838()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[11];
  v2 = v0[7];
  v3 = *(_QWORD *)(v0[8] + 16);
  v4 = sub_19094B680();
  v0[2] = v1;
  v0[3] = MEMORY[0x1E0DEAFA0];
  v0[4] = v3;
  v0[5] = v4;
  sub_190A45DC0();
  v5 = sub_190A4885C();
  sub_190949630(v2, v5, (uint64_t)(v0 + 6));
  v0[17] = v0[6];
  sub_190A45C58();
  swift_getAssociatedConformanceWitness();
  v6 = (_QWORD *)swift_task_alloc();
  v0[18] = v6;
  *v6 = v0;
  v6[1] = sub_190949978;
  return sub_190A45D90();
}

uint64_t sub_190949978()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[13] + 8))(v2[14], v2[12]);
  return swift_task_switch();
}

uint64_t sub_1909499EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 88);
  sub_190A45C7C();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(unsigned __int8 *)(v0 + 160);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_190949A70()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_190949ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;

  *(_BYTE *)(v6 + 161) = a5;
  *(_QWORD *)(v6 + 56) = a4;
  *(_QWORD *)(v6 + 64) = a6;
  v7 = *a4;
  v8 = *(_QWORD *)(a6 + 8);
  *(_QWORD *)(v6 + 72) = v8;
  *(_QWORD *)(v6 + 80) = *(_QWORD *)(v8 + 8);
  v9 = *(_QWORD *)(v7 + *MEMORY[0x1E0DEE2A8]);
  *(_QWORD *)(v6 + 88) = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 + 96) = AssociatedTypeWitness;
  *(_QWORD *)(v6 + 104) = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v6 + 112) = swift_task_alloc();
  *(_QWORD *)(v6 + 120) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 128) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_190949B78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[11];
  v2 = v0[7];
  v3 = *(_QWORD *)(v0[8] + 16);
  v4 = sub_19094B680();
  v0[2] = v1;
  v0[3] = MEMORY[0x1E0DEAFA0];
  v0[4] = v3;
  v0[5] = v4;
  sub_190A45DC0();
  v5 = sub_190A4885C();
  sub_190949630(v2, v5, (uint64_t)(v0 + 6));
  v0[17] = v0[6];
  sub_190A45C58();
  swift_getAssociatedConformanceWitness();
  v6 = (_QWORD *)swift_task_alloc();
  v0[18] = v6;
  *v6 = v0;
  v6[1] = sub_190949CB4;
  return sub_190A45D90();
}

uint64_t sub_190949CB4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[13] + 8))(v2[14], v2[12]);
  return swift_task_switch();
}

uint64_t sub_190949D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 88);
  *(_BYTE *)(v0 + 160) = *(_BYTE *)(v0 + 161);
  sub_190A45C94();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190949DAC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190949DF4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_190949E0C(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;

  v2[7] = a1;
  v2[8] = a2;
  v3 = *a1;
  v2[9] = *a1;
  v4 = *(_QWORD *)(a2 + 8);
  v2[10] = v4;
  v2[11] = *(_QWORD *)(v4 + 8);
  v5 = *(_QWORD *)(v3 + *MEMORY[0x1E0DEE2A8]);
  v2[12] = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[13] = AssociatedTypeWitness;
  v2[14] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2[15] = swift_task_alloc();
  v2[16] = *(_QWORD *)(v5 - 8);
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_190949EC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[12];
  v2 = v0[8];
  v3 = v0[7];
  v4 = *(_QWORD *)(*MEMORY[0x1E0C918A8] + *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v0[9] + 8) + 8);
  v0[18] = v4;
  v5 = *(_QWORD *)(v2 + 16);
  v6 = MEMORY[0x19401429C](MEMORY[0x1E0C91A98], v4);
  v0[2] = v1;
  v0[3] = v4;
  v0[4] = v5;
  v0[5] = v6;
  sub_190A45DC0();
  v7 = sub_190A4885C();
  sub_190949630(v3, v7, (uint64_t)(v0 + 6));
  v0[19] = v0[6];
  sub_190A45C58();
  swift_getAssociatedConformanceWitness();
  v8 = (_QWORD *)swift_task_alloc();
  v0[20] = v8;
  *v8 = v0;
  v8[1] = sub_19094A03C;
  return sub_190A45D90();
}

uint64_t sub_19094A03C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;

  v2 = (_QWORD *)*v1;
  v2[21] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[14] + 8))(v2[15], v2[13]);
    return swift_task_switch();
  }
  else
  {
    v4 = v2[18];
    (*(void (**)(_QWORD, _QWORD))(v2[14] + 8))(v2[15], v2[13]);
    v5 = (_QWORD *)swift_task_alloc();
    v2[22] = v5;
    MEMORY[0x19401429C](MEMORY[0x1E0C91A90], v4);
    *v5 = v2;
    v5[1] = sub_19094A12C;
    return sub_190A45C64();
  }
}

uint64_t sub_19094A12C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[16] + 8))(v2[17], v2[12]);
  return swift_task_switch();
}

uint64_t sub_19094A1A0()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  v1 = *(unsigned __int8 *)(v0 + 192);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_19094A1FC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_19094A248()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_19094A294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;

  *(_BYTE *)(v6 + 193) = a5;
  *(_QWORD *)(v6 + 56) = a4;
  *(_QWORD *)(v6 + 64) = a6;
  v7 = *a4;
  *(_QWORD *)(v6 + 72) = *a4;
  v8 = *(_QWORD *)(a6 + 8);
  *(_QWORD *)(v6 + 80) = v8;
  *(_QWORD *)(v6 + 88) = *(_QWORD *)(v8 + 8);
  v9 = *(_QWORD *)(v7 + *MEMORY[0x1E0DEE2A8]);
  *(_QWORD *)(v6 + 96) = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 + 104) = AssociatedTypeWitness;
  *(_QWORD *)(v6 + 112) = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v6 + 120) = swift_task_alloc();
  *(_QWORD *)(v6 + 128) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 136) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19094A354()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[12];
  v2 = v0[8];
  v3 = v0[7];
  v4 = *(_QWORD *)(*MEMORY[0x1E0C918A8] + *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v0[9] + 8) + 8);
  v0[18] = v4;
  v5 = *(_QWORD *)(v2 + 16);
  v6 = MEMORY[0x19401429C](MEMORY[0x1E0C91A98], v4);
  v0[2] = v1;
  v0[3] = v4;
  v0[4] = v5;
  v0[5] = v6;
  sub_190A45DC0();
  v7 = sub_190A4885C();
  sub_190949630(v3, v7, (uint64_t)(v0 + 6));
  v0[19] = v0[6];
  sub_190A45C58();
  swift_getAssociatedConformanceWitness();
  v8 = (_QWORD *)swift_task_alloc();
  v0[20] = v8;
  *v8 = v0;
  v8[1] = sub_19094A4C4;
  return sub_190A45D90();
}

uint64_t sub_19094A4C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  _QWORD *v6;

  v2 = *v1;
  *(_QWORD *)(v2 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 + 112) + 8))(*(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 104));
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 144);
    v5 = *(_BYTE *)(v2 + 193);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 + 112) + 8))(*(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 104));
    *(_BYTE *)(v2 + 192) = v5;
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 176) = v6;
    MEMORY[0x19401429C](MEMORY[0x1E0C91A90], v4);
    *v6 = v2;
    v6[1] = sub_19094A5AC;
    return sub_190A45C88();
  }
}

uint64_t sub_19094A5AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[16] + 8))(v2[17], v2[12]);
  return swift_task_switch();
}

uint64_t sub_19094A630()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19094A67C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19094A6C4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19094A70C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_19094A724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_190A45FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19094A778(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;

  v2[13] = a1;
  v2[14] = a2;
  v3 = *a1;
  v2[15] = *a1;
  v2[16] = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(v3 + *MEMORY[0x1E0DEE2A8]);
  v2[17] = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[18] = AssociatedTypeWitness;
  v2[19] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2[20] = swift_task_alloc();
  v2[21] = *(_QWORD *)(v4 - 8);
  v2[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19094A82C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v2 = v0[16];
  v1 = v0[17];
  v3 = v0[15];
  v4 = v0[13];
  v5 = sub_19094B680();
  v0[8] = v1;
  v0[9] = MEMORY[0x1E0DEAFA0];
  v0[10] = v2;
  v0[11] = v5;
  v6 = sub_190A45DD8();
  v0[23] = v6;
  v7 = *MEMORY[0x1E0C91B88] + *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v3 + 8);
  v8 = *(_QWORD *)(v7 + 16);
  v9 = MEMORY[0x19401429C](MEMORY[0x1E0C91A98], v6);
  v0[2] = v1;
  v10 = *(_QWORD *)(v7 + 40);
  v0[3] = v6;
  v0[4] = v8;
  v0[5] = v2;
  v0[6] = v9;
  v0[7] = v10;
  sub_190A45DE4();
  v11 = sub_190A4885C();
  sub_190953F44(v4, v11, (uint64_t)(v0 + 12));
  v0[24] = v0[12];
  sub_190A45C58();
  swift_getAssociatedConformanceWitness();
  v12 = (_QWORD *)swift_task_alloc();
  v0[25] = v12;
  *v12 = v0;
  v12[1] = sub_19094A9F8;
  return sub_190A45D90();
}

uint64_t sub_19094A9F8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;

  v2 = (_QWORD *)*v1;
  v2[26] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[19] + 8))(v2[20], v2[18]);
    return swift_task_switch();
  }
  else
  {
    v4 = v2[23];
    (*(void (**)(_QWORD, _QWORD))(v2[19] + 8))(v2[20], v2[18]);
    v5 = (_QWORD *)swift_task_alloc();
    v2[27] = v5;
    MEMORY[0x19401429C](MEMORY[0x1E0C91A90], v4);
    *v5 = v2;
    v5[1] = sub_19094AAE8;
    return sub_190A45C70();
  }
}

uint64_t sub_19094AAE8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[21] + 8))(v2[22], v2[17]);
  return swift_task_switch();
}

uint64_t sub_19094AB5C()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  v1 = *(unsigned __int8 *)(v0 + 232);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_19094ABB8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_19094AC04()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_19094AC50(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_190A47D7C();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = a3;
  *(_QWORD *)(v11 + 40) = a2;
  *(_BYTE *)(v11 + 48) = a1;
  LODWORD(a3) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  swift_retain();
  if ((_DWORD)a3 == 1)
  {
    sub_1908B463C((uint64_t)v8);
  }
  else
  {
    sub_190A47D70();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(v11 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v12 = sub_190A47D28();
      v14 = v13;
      swift_unknownObjectRelease();
      if (v14 | v12)
      {
        v16[0] = 0;
        v16[1] = 0;
        v16[2] = v12;
        v16[3] = v14;
      }
    }
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_19094AE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;

  *(_BYTE *)(v6 + 233) = a5;
  *(_QWORD *)(v6 + 104) = a4;
  *(_QWORD *)(v6 + 112) = a6;
  v7 = *a4;
  *(_QWORD *)(v6 + 120) = *a4;
  *(_QWORD *)(v6 + 128) = *(_QWORD *)(a6 + 8);
  v8 = *(_QWORD *)(v7 + *MEMORY[0x1E0DEE2A8]);
  *(_QWORD *)(v6 + 136) = v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 + 144) = AssociatedTypeWitness;
  *(_QWORD *)(v6 + 152) = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v6 + 160) = swift_task_alloc();
  *(_QWORD *)(v6 + 168) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 176) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19094AED8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v2 = v0[16];
  v1 = v0[17];
  v3 = v0[15];
  v4 = v0[13];
  v5 = sub_19094B680();
  v0[8] = v1;
  v0[9] = MEMORY[0x1E0DEAFA0];
  v0[10] = v2;
  v0[11] = v5;
  v6 = sub_190A45DD8();
  v0[23] = v6;
  v7 = *MEMORY[0x1E0C91B88] + *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v3 + 8);
  v8 = *(_QWORD *)(v7 + 16);
  v9 = MEMORY[0x19401429C](MEMORY[0x1E0C91A98], v6);
  v0[2] = v1;
  v10 = *(_QWORD *)(v7 + 40);
  v0[3] = v6;
  v0[4] = v8;
  v0[5] = v2;
  v0[6] = v9;
  v0[7] = v10;
  sub_190A45DE4();
  v11 = sub_190A4885C();
  sub_190953F44(v4, v11, (uint64_t)(v0 + 12));
  v0[24] = v0[12];
  sub_190A45C58();
  swift_getAssociatedConformanceWitness();
  v12 = (_QWORD *)swift_task_alloc();
  v0[25] = v12;
  *v12 = v0;
  v12[1] = sub_19094B0A0;
  return sub_190A45D90();
}

uint64_t sub_19094B0A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  _QWORD *v6;

  v2 = *v1;
  *(_QWORD *)(v2 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 + 152) + 8))(*(_QWORD *)(v2 + 160), *(_QWORD *)(v2 + 144));
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 184);
    v5 = *(_BYTE *)(v2 + 233);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 + 152) + 8))(*(_QWORD *)(v2 + 160), *(_QWORD *)(v2 + 144));
    *(_BYTE *)(v2 + 232) = v5;
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 216) = v6;
    MEMORY[0x19401429C](MEMORY[0x1E0C91A90], v4);
    *v6 = v2;
    v6[1] = sub_19094B190;
    return sub_190A45CA0();
  }
}

uint64_t sub_19094B190()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[21] + 8))(v2[22], v2[17]);
  return swift_task_switch();
}

uint64_t sub_19094B214()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19094B260()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19094B2A8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19094B2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v10;

  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v10;
  *v10 = v6;
  v10[1] = sub_1908C5090;
  return sub_190954094(a1, a2, (uint64_t)&type metadata for KeyPathToggleBox, a2, (uint64_t)&off_1E2CC4FD0, a6);
}

uint64_t sub_19094B370()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(*(int *)*v0 + *v0);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_19094B3C4;
  return v4();
}

uint64_t sub_19094B3C4(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    v5 = 0;
  else
    v5 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_19094B420(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 16))(a2);
}

uint64_t sub_19094B444()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  return v1;
}

unint64_t sub_19094B470()
{
  unint64_t result;

  result = qword_1EE1ED550;
  if (!qword_1EE1ED550)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for EmptyConfiguration, &type metadata for EmptyConfiguration);
    atomic_store(result, &qword_1EE1ED550);
  }
  return result;
}

uint64_t sub_19094B4B4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19094B4D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(uint64_t **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_190930784;
  return sub_19094A778(v3, v2);
}

uint64_t sub_19094B528(char a1)
{
  uint64_t v1;

  return sub_19094AC50(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 16));
}

uint64_t sub_19094B550()
{
  return swift_deallocObject();
}

uint64_t sub_19094B560(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1908C5090;
  v7 = (_QWORD *)swift_task_alloc();
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_1908C5090;
  return sub_190954094(a1, v4, (uint64_t)&type metadata for KeyPathToggleBox, v4, (uint64_t)&off_1E2CC4FD0, v5);
}

uint64_t sub_19094B600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(uint64_t **)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1908CEB54;
  return sub_19094AE20(a1, v4, v5, v7, v8, v6);
}

unint64_t sub_19094B680()
{
  unint64_t result;

  result = qword_1EE1ED588;
  if (!qword_1EE1ED588)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0C91CF0], MEMORY[0x1E0DEAFA0]);
    atomic_store(result, &qword_1EE1ED588);
  }
  return result;
}

uint64_t sub_19094B6C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(uint64_t **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_190930C98;
  return sub_190949E0C(v3, v2);
}

uint64_t sub_19094B714(char a1)
{
  uint64_t v1;

  return sub_19094AC50(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 16));
}

uint64_t sub_19094B740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(uint64_t **)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1908CEB54;
  return sub_19094A294(a1, v4, v5, v7, v8, v6);
}

unint64_t sub_19094B7C0()
{
  unint64_t result;

  result = qword_1EE1ED5B8;
  if (!qword_1EE1ED5B8)
  {
    result = MEMORY[0x19401429C](&unk_190A511BC, &_s9AppEntityON);
    atomic_store(result, &qword_1EE1ED5B8);
  }
  return result;
}

uint64_t sub_19094B804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(uint64_t **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_190930C98;
  return sub_190949780(v3, v2);
}

uint64_t sub_19094B854(char a1)
{
  uint64_t v1;

  return sub_19094AC50(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 16));
}

uint64_t objectdestroy_27Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19094B8AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(uint64_t **)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1908CEB54;
  return sub_190949ABC(a1, v4, v5, v7, v8, v6);
}

uint64_t EnvironmentValues._encodesPreciseTextLayout.getter()
{
  unsigned __int8 v1;

  sub_190901D10();
  sub_190A46C3C();
  return v1;
}

uint64_t EnvironmentValues._encodesPreciseTextLayout.setter()
{
  sub_190901D10();
  return sub_190A46C48();
}

uint64_t (*EnvironmentValues._encodesPreciseTextLayout.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_190901D10();
  sub_190A46C3C();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_19094BA20;
}

uint64_t sub_19094BA20(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_190A46C48();
}

ValueMetadata *_s27EncodesPreciseTextLayoutKeyVMa()
{
  return &_s27EncodesPreciseTextLayoutKeyVN;
}

uint64_t sub_19094BA6C()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D548 = result;
  return result;
}

uint64_t sub_19094BA90()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B2A0);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D608 = v0;
  unk_1ECF6D610 = 0xD00000000000001CLL;
  qword_1ECF6D618 = 0x8000000190A61E90;
  return result;
}

ValueMetadata *type metadata accessor for EncodesPreciseTextLayoutKey()
{
  return &type metadata for EncodesPreciseTextLayoutKey;
}

uint64_t sub_19094BB14()
{
  if (qword_1ECF6B1E8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_19094BB54()
{
  uint64_t v0;

  if (qword_1ECF6B360 != -1)
    swift_once();
  v0 = qword_1ECF6D608;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t DynamicIslandExpandedContent.content.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t DynamicIslandExpandedContent.content.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*DynamicIslandExpandedContent.content.modify())()
{
  return nullsub_1;
}

uint64_t DynamicIslandExpandedContent.init(content:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_19094BC34()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19094BCA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_19094BD10(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_19094BD20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_19094BD50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_19094BD80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_19094BDB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_19094BDE0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19094BE90 + 4 * byte_190A509E0[(v7 - 1)]))();
}

void sub_19094BEE0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for DynamicIslandExpandedContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DynamicIslandExpandedContent);
}

ValueMetadata *type metadata accessor for DynamicIslandExpandedContentBuilder()
{
  return &type metadata for DynamicIslandExpandedContentBuilder;
}

uint64_t sub_19094C0AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;

  v4 = type metadata accessor for WidgetDescriptor(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    type metadata accessor for ViewSource(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v14 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v14;
      *(_QWORD *)(a1 + 16) = a2[2];
      v15 = a2[5];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
      *(_QWORD *)(a1 + 40) = v15;
      v16 = *((_BYTE *)a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v16 & 1) != 0)
      {
        v17 = a2[7];
        *(_QWORD *)(a1 + 48) = a2[6];
        *(_QWORD *)(a1 + 56) = v17;
        swift_retain();
      }
      else
      {
        v22 = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(a1 + 72) = v22;
        (**(void (***)(uint64_t, uint64_t))(v22 - 8))(a1 + 48, (uint64_t)(a2 + 6));
      }
      *(_BYTE *)(a1 + 88) = v16;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = sub_190A46240();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0) + 48);
      v10 = a1 + v9;
      v11 = (uint64_t)a2 + v9;
      *(_QWORD *)v10 = *(_QWORD *)v11;
      v12 = *(_QWORD *)(v11 + 24);
      *(_OWORD *)(v10 + 8) = *(_OWORD *)(v11 + 8);
      *(_QWORD *)(v10 + 24) = v12;
      swift_retain();
      swift_retain();
    }
    else
    {
      v18 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v18;
      v19 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v19;
      v20 = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v20)
      {
        v21 = a2[5];
        *(_QWORD *)(a1 + 32) = v20;
        *(_QWORD *)(a1 + 40) = v21;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      }
      v23 = a2[7];
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v24 = v6[5];
    v25 = (_QWORD *)(a1 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = v6[6];
    v29 = (_QWORD *)(a1 + v28);
    v30 = (uint64_t *)((char *)a2 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    *(_QWORD *)(a1 + v6[7]) = *(uint64_t *)((char *)a2 + v6[7]);
    *(_QWORD *)(a1 + v6[8]) = *(uint64_t *)((char *)a2 + v6[8]);
    *(_QWORD *)(a1 + v6[9]) = *(uint64_t *)((char *)a2 + v6[9]);
    *(_QWORD *)(a1 + v6[10]) = *(uint64_t *)((char *)a2 + v6[10]);
    *(_QWORD *)(a1 + v6[11]) = *(uint64_t *)((char *)a2 + v6[11]);
    v32 = v6[12];
    v33 = (_QWORD *)(a1 + v32);
    v34 = (uint64_t *)((char *)a2 + v32);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    *(_BYTE *)(a1 + v6[13]) = *((_BYTE *)a2 + v6[13]);
    *(_BYTE *)(a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
    *(_BYTE *)(a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    *(_BYTE *)(a1 + v6[16]) = *((_BYTE *)a2 + v6[16]);
    *(_BYTE *)(a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
    *(_QWORD *)(a1 + v6[18]) = *(uint64_t *)((char *)a2 + v6[18]);
    *(_BYTE *)(a1 + v6[19]) = *((_BYTE *)a2 + v6[19]);
    *(_BYTE *)(a1 + v6[20]) = *((_BYTE *)a2 + v6[20]);
    *(_BYTE *)(a1 + v6[21]) = *((_BYTE *)a2 + v6[21]);
    *(_BYTE *)(a1 + v6[22]) = *((_BYTE *)a2 + v6[22]);
    v36 = v6[23];
    v37 = (_QWORD *)(a1 + v36);
    v38 = (uint64_t *)((char *)a2 + v36);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    *(_BYTE *)(a1 + v6[24]) = *((_BYTE *)a2 + v6[24]);
    *(_BYTE *)(a1 + v6[25]) = *((_BYTE *)a2 + v6[25]);
    *(_BYTE *)(a1 + v6[26]) = *((_BYTE *)a2 + v6[26]);
    *(_BYTE *)(a1 + v6[27]) = *((_BYTE *)a2 + v6[27]);
    *(_BYTE *)(a1 + v6[28]) = *((_BYTE *)a2 + v6[28]);
    *(_BYTE *)(a1 + v6[29]) = *((_BYTE *)a2 + v6[29]);
    *(_BYTE *)(a1 + v6[30]) = *((_BYTE *)a2 + v6[30]);
    *(_BYTE *)(a1 + v6[31]) = *((_BYTE *)a2 + v6[31]);
    *(_OWORD *)(a1 + v6[32]) = *(_OWORD *)((char *)a2 + v6[32]);
    *(_QWORD *)(a1 + v6[33]) = *(uint64_t *)((char *)a2 + v6[33]);
    v40 = v6[34];
    v41 = (_QWORD *)(a1 + v40);
    v42 = (uint64_t *)((char *)a2 + v40);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_19094C47C(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;

  type metadata accessor for ViewSource(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(_BYTE *)(a1 + 88) & 1) == 0)
      {
        __swift_destroy_boxed_opaque_existential_1(a1 + 48);
        break;
      }
      goto LABEL_8;
    case 1:
      v3 = sub_190A46240();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
      swift_release();
      swift_release();
      break;
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 32))
        swift_release();
LABEL_8:
      swift_release();
      break;
  }
  type metadata accessor for WidgetDescriptor(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19094C5DC(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;

  type metadata accessor for ViewSource(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v10 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v10;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    v11 = *(_QWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = v11;
    v12 = *(_BYTE *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v13;
      swift_retain();
    }
    else
    {
      v18 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 72) = v18;
      (**(void (***)(uint64_t, uint64_t))(v18 - 8))(a1 + 48, a2 + 48);
    }
    *(_BYTE *)(a1 + 88) = v12;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = sub_190A46240();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0) + 48);
    v7 = a1 + v6;
    v8 = a2 + v6;
    *(_QWORD *)v7 = *(_QWORD *)v8;
    v9 = *(_QWORD *)(v8 + 24);
    *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
    *(_QWORD *)(v7 + 24) = v9;
    swift_retain();
    swift_retain();
  }
  else
  {
    v14 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v14;
    v15 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v15;
    v16 = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16)
    {
      v17 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v16;
      *(_QWORD *)(a1 + 40) = v17;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    }
    v19 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v20 = (int *)type metadata accessor for WidgetDescriptor(0);
  v21 = v20[5];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = v20[6];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  *(_QWORD *)(a1 + v20[7]) = *(_QWORD *)(a2 + v20[7]);
  *(_QWORD *)(a1 + v20[8]) = *(_QWORD *)(a2 + v20[8]);
  *(_QWORD *)(a1 + v20[9]) = *(_QWORD *)(a2 + v20[9]);
  *(_QWORD *)(a1 + v20[10]) = *(_QWORD *)(a2 + v20[10]);
  *(_QWORD *)(a1 + v20[11]) = *(_QWORD *)(a2 + v20[11]);
  v29 = v20[12];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  *(_BYTE *)(a1 + v20[13]) = *(_BYTE *)(a2 + v20[13]);
  *(_BYTE *)(a1 + v20[14]) = *(_BYTE *)(a2 + v20[14]);
  *(_BYTE *)(a1 + v20[15]) = *(_BYTE *)(a2 + v20[15]);
  *(_BYTE *)(a1 + v20[16]) = *(_BYTE *)(a2 + v20[16]);
  *(_BYTE *)(a1 + v20[17]) = *(_BYTE *)(a2 + v20[17]);
  *(_QWORD *)(a1 + v20[18]) = *(_QWORD *)(a2 + v20[18]);
  *(_BYTE *)(a1 + v20[19]) = *(_BYTE *)(a2 + v20[19]);
  *(_BYTE *)(a1 + v20[20]) = *(_BYTE *)(a2 + v20[20]);
  *(_BYTE *)(a1 + v20[21]) = *(_BYTE *)(a2 + v20[21]);
  *(_BYTE *)(a1 + v20[22]) = *(_BYTE *)(a2 + v20[22]);
  v33 = v20[23];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  *(_BYTE *)(a1 + v20[24]) = *(_BYTE *)(a2 + v20[24]);
  *(_BYTE *)(a1 + v20[25]) = *(_BYTE *)(a2 + v20[25]);
  *(_BYTE *)(a1 + v20[26]) = *(_BYTE *)(a2 + v20[26]);
  *(_BYTE *)(a1 + v20[27]) = *(_BYTE *)(a2 + v20[27]);
  *(_BYTE *)(a1 + v20[28]) = *(_BYTE *)(a2 + v20[28]);
  *(_BYTE *)(a1 + v20[29]) = *(_BYTE *)(a2 + v20[29]);
  *(_BYTE *)(a1 + v20[30]) = *(_BYTE *)(a2 + v20[30]);
  *(_BYTE *)(a1 + v20[31]) = *(_BYTE *)(a2 + v20[31]);
  *(_OWORD *)(a1 + v20[32]) = *(_OWORD *)(a2 + v20[32]);
  *(_QWORD *)(a1 + v20[33]) = *(_QWORD *)(a2 + v20[33]);
  v37 = v20[34];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)(a2 + v37);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_19094C980(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;

  if (a1 != a2)
  {
    sub_19094CD98(a1);
    type metadata accessor for ViewSource(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      v11 = *(_BYTE *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v11 & 1) != 0)
      {
        v12 = *(_QWORD *)(a2 + 56);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = v12;
        swift_retain();
      }
      else
      {
        v15 = *(_QWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 72) = v15;
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 48, a2 + 48);
      }
      *(_BYTE *)(a1 + 88) = v11;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v5 = sub_190A46240();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0) + 48);
      v7 = (_QWORD *)(a1 + v6);
      v8 = (_QWORD *)(a2 + v6);
      v9 = v8[1];
      *v7 = *v8;
      v7[1] = v9;
      v10 = v8[3];
      v7[2] = v8[2];
      v7[3] = v10;
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      v13 = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13)
      {
        v14 = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 32) = v13;
        *(_QWORD *)(a1 + 40) = v14;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      }
      v16 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v17 = (int *)type metadata accessor for WidgetDescriptor(0);
  v18 = v17[5];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = v17[6];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v17[7]) = *(_QWORD *)(a2 + v17[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v17[8]) = *(_QWORD *)(a2 + v17[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v17[9]) = *(_QWORD *)(a2 + v17[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v17[10]) = *(_QWORD *)(a2 + v17[10]);
  *(_QWORD *)(a1 + v17[11]) = *(_QWORD *)(a2 + v17[11]);
  v24 = v17[12];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v17[13]) = *(_BYTE *)(a2 + v17[13]);
  *(_BYTE *)(a1 + v17[14]) = *(_BYTE *)(a2 + v17[14]);
  *(_BYTE *)(a1 + v17[15]) = *(_BYTE *)(a2 + v17[15]);
  *(_BYTE *)(a1 + v17[16]) = *(_BYTE *)(a2 + v17[16]);
  *(_BYTE *)(a1 + v17[17]) = *(_BYTE *)(a2 + v17[17]);
  *(_QWORD *)(a1 + v17[18]) = *(_QWORD *)(a2 + v17[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v17[19]) = *(_BYTE *)(a2 + v17[19]);
  *(_BYTE *)(a1 + v17[20]) = *(_BYTE *)(a2 + v17[20]);
  *(_BYTE *)(a1 + v17[21]) = *(_BYTE *)(a2 + v17[21]);
  *(_BYTE *)(a1 + v17[22]) = *(_BYTE *)(a2 + v17[22]);
  v27 = v17[23];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  *v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v17[24]) = *(_BYTE *)(a2 + v17[24]);
  *(_BYTE *)(a1 + v17[25]) = *(_BYTE *)(a2 + v17[25]);
  *(_BYTE *)(a1 + v17[26]) = *(_BYTE *)(a2 + v17[26]);
  *(_BYTE *)(a1 + v17[27]) = *(_BYTE *)(a2 + v17[27]);
  *(_BYTE *)(a1 + v17[28]) = *(_BYTE *)(a2 + v17[28]);
  *(_BYTE *)(a1 + v17[29]) = *(_BYTE *)(a2 + v17[29]);
  *(_BYTE *)(a1 + v17[30]) = *(_BYTE *)(a2 + v17[30]);
  *(_BYTE *)(a1 + v17[31]) = *(_BYTE *)(a2 + v17[31]);
  *(_OWORD *)(a1 + v17[32]) = *(_OWORD *)(a2 + v17[32]);
  *(_QWORD *)(a1 + v17[33]) = *(_QWORD *)(a2 + v17[33]);
  v30 = v17[34];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19094CD98(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ViewSource(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_19094CDD4(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  int *v10;

  v4 = type metadata accessor for ViewSource(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_190A46240();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0) + 48);
    v7 = &a1[v6];
    v8 = &a2[v6];
    v9 = *((_OWORD *)v8 + 1);
    *(_OWORD *)v7 = *(_OWORD *)v8;
    *((_OWORD *)v7 + 1) = v9;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  v10 = (int *)type metadata accessor for WidgetDescriptor(0);
  *(_OWORD *)&a1[v10[5]] = *(_OWORD *)&a2[v10[5]];
  *(_OWORD *)&a1[v10[6]] = *(_OWORD *)&a2[v10[6]];
  *(_QWORD *)&a1[v10[7]] = *(_QWORD *)&a2[v10[7]];
  *(_QWORD *)&a1[v10[8]] = *(_QWORD *)&a2[v10[8]];
  *(_QWORD *)&a1[v10[9]] = *(_QWORD *)&a2[v10[9]];
  *(_QWORD *)&a1[v10[10]] = *(_QWORD *)&a2[v10[10]];
  *(_QWORD *)&a1[v10[11]] = *(_QWORD *)&a2[v10[11]];
  *(_OWORD *)&a1[v10[12]] = *(_OWORD *)&a2[v10[12]];
  a1[v10[13]] = a2[v10[13]];
  a1[v10[14]] = a2[v10[14]];
  a1[v10[15]] = a2[v10[15]];
  a1[v10[16]] = a2[v10[16]];
  a1[v10[17]] = a2[v10[17]];
  *(_QWORD *)&a1[v10[18]] = *(_QWORD *)&a2[v10[18]];
  a1[v10[19]] = a2[v10[19]];
  a1[v10[20]] = a2[v10[20]];
  a1[v10[21]] = a2[v10[21]];
  a1[v10[22]] = a2[v10[22]];
  *(_OWORD *)&a1[v10[23]] = *(_OWORD *)&a2[v10[23]];
  a1[v10[24]] = a2[v10[24]];
  a1[v10[25]] = a2[v10[25]];
  a1[v10[26]] = a2[v10[26]];
  a1[v10[27]] = a2[v10[27]];
  a1[v10[28]] = a2[v10[28]];
  a1[v10[29]] = a2[v10[29]];
  a1[v10[30]] = a2[v10[30]];
  a1[v10[31]] = a2[v10[31]];
  *(_OWORD *)&a1[v10[32]] = *(_OWORD *)&a2[v10[32]];
  *(_QWORD *)&a1[v10[33]] = *(_QWORD *)&a2[v10[33]];
  *(_OWORD *)&a1[v10[34]] = *(_OWORD *)&a2[v10[34]];
  return a1;
}

char *sub_19094CFF8(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  if (a1 != a2)
  {
    sub_19094CD98((uint64_t)a1);
    v4 = type metadata accessor for ViewSource(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = sub_190A46240();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0) + 48);
      v7 = &a1[v6];
      v8 = &a2[v6];
      v9 = *((_OWORD *)v8 + 1);
      *(_OWORD *)v7 = *(_OWORD *)v8;
      *((_OWORD *)v7 + 1) = v9;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  v10 = (int *)type metadata accessor for WidgetDescriptor(0);
  v11 = v10[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = v10[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v20 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v10[7]] = *(_QWORD *)&a2[v10[7]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v10[8]] = *(_QWORD *)&a2[v10[8]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v10[9]] = *(_QWORD *)&a2[v10[9]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[v10[10]] = *(_QWORD *)&a2[v10[10]];
  *(_QWORD *)&a1[v10[11]] = *(_QWORD *)&a2[v10[11]];
  v21 = v10[12];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v25 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  a1[v10[13]] = a2[v10[13]];
  a1[v10[14]] = a2[v10[14]];
  a1[v10[15]] = a2[v10[15]];
  a1[v10[16]] = a2[v10[16]];
  a1[v10[17]] = a2[v10[17]];
  *(_QWORD *)&a1[v10[18]] = *(_QWORD *)&a2[v10[18]];
  swift_bridgeObjectRelease();
  a1[v10[19]] = a2[v10[19]];
  a1[v10[20]] = a2[v10[20]];
  a1[v10[21]] = a2[v10[21]];
  a1[v10[22]] = a2[v10[22]];
  v26 = v10[23];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v30 = *(_QWORD *)v28;
  v29 = *((_QWORD *)v28 + 1);
  *(_QWORD *)v27 = v30;
  *((_QWORD *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  a1[v10[24]] = a2[v10[24]];
  a1[v10[25]] = a2[v10[25]];
  a1[v10[26]] = a2[v10[26]];
  a1[v10[27]] = a2[v10[27]];
  a1[v10[28]] = a2[v10[28]];
  a1[v10[29]] = a2[v10[29]];
  a1[v10[30]] = a2[v10[30]];
  a1[v10[31]] = a2[v10[31]];
  *(_OWORD *)&a1[v10[32]] = *(_OWORD *)&a2[v10[32]];
  *(_QWORD *)&a1[v10[33]] = *(_QWORD *)&a2[v10[33]];
  v31 = v10[34];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v35 = *(_QWORD *)v33;
  v34 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v32 = v35;
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19094D2A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19094D2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetDescriptor(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_19094D2E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19094D2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetDescriptor(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ControlDescriptorConfiguration()
{
  uint64_t result;

  result = qword_1EE1EBAD0;
  if (!qword_1EE1EBAD0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_19094D370()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for WidgetDescriptor(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_19094D3D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_19094D3E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D300);
  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WidgetDescriptor(0) - 8) + 80);
  v2 = (v1 + 32) & ~v1;
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_190A4A350;
  sub_190906944(v0, v3 + v2);
  sub_19090D084();
  sub_190A4717C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19094D4AC()
{
  sub_19090D084();
  return swift_getOpaqueTypeConformance2();
}

uint64_t EnvironmentValues._localizationToken.getter()
{
  uint64_t v1;

  sub_190901A40();
  sub_190A46C3C();
  return v1;
}

uint64_t EnvironmentValues._localizationToken.setter()
{
  sub_190901A40();
  return sub_190A46C48();
}

uint64_t sub_19094D56C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v1 = qword_1ECF6C4D8;
  v2 = unk_1ECF6C4E0;
  *a1 = qword_1ECF6C4D8;
  a1[1] = v2;
  return sub_1908B53B8(v1, v2);
}

uint64_t sub_19094D580()
{
  sub_19094D900();
  return sub_190A4681C();
}

void (*EnvironmentValues._localizationToken.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_190901A40();
  sub_190A46C3C();
  *(_OWORD *)v3 = *((_OWORD *)v3 + 1);
  return sub_19094D640;
}

void sub_19094D640(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  v3[2] = v4;
  v3[3] = v5;
  if ((a2 & 1) != 0)
  {
    sub_1908B53B8(v4, v5);
    sub_190A46C48();
    sub_1908B53FC(*v3, v3[1]);
  }
  else
  {
    sub_190A46C48();
  }
  free(v3);
}

ValueMetadata *type metadata accessor for LocalizationTokenKey()
{
  return &type metadata for LocalizationTokenKey;
}

unint64_t sub_19094D6E0()
{
  unint64_t result;

  result = qword_1ECF6CC90;
  if (!qword_1ECF6CC90)
  {
    result = MEMORY[0x19401429C](&unk_190A55590, &type metadata for ComparableData);
    atomic_store(result, (unint64_t *)&qword_1ECF6CC90);
  }
  return result;
}

unint64_t sub_19094D728()
{
  unint64_t result;

  result = qword_1ECF6CCA0;
  if (!qword_1ECF6CCA0)
  {
    result = MEMORY[0x19401429C](&unk_190A55568, &type metadata for ComparableData);
    atomic_store(result, (unint64_t *)&qword_1ECF6CCA0);
  }
  return result;
}

unint64_t sub_19094D770()
{
  unint64_t result;

  result = qword_1ECF6CC88;
  if (!qword_1ECF6CC88)
  {
    result = MEMORY[0x19401429C](&unk_190A55540, &type metadata for ComparableData);
    atomic_store(result, (unint64_t *)&qword_1ECF6CC88);
  }
  return result;
}

uint64_t sub_19094D7B4()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D938 = result;
  return result;
}

uint64_t sub_19094D7D8()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CB60);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D920 = v0;
  *(_QWORD *)algn_1ECF6D928 = 0xD000000000000011;
  qword_1ECF6D930 = 0x8000000190A61EB0;
  return result;
}

uint64_t sub_19094D84C()
{
  if (qword_1ECF6C8C8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_19094D88C()
{
  uint64_t v0;

  if (qword_1ECF6C930 != -1)
    swift_once();
  v0 = qword_1ECF6D920;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_19094D900()
{
  unint64_t result;

  result = qword_1EE1E6920;
  if (!qword_1EE1E6920)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0CB0360], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EE1E6920);
  }
  return result;
}

uint64_t ControlWidgetTemplate.tint(_:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  swift_retain();
  sub_19094DAB4((uint64_t)sub_19094DA5C, v2);
  return swift_release();
}

uint64_t sub_19094D9C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  v5 = *a1;
  swift_retain();
  result = sub_1908B467C(v5);
  *a1 = (uint64_t)sub_19094DEA0;
  a1[1] = v4;
  return result;
}

uint64_t sub_19094DA38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19094DA5C(uint64_t *a1)
{
  uint64_t v1;

  return sub_19094D9C8(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_19094DA64(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;

  if (!a2)
    return 0;
  sub_190A47674();
  return v2 | ((unint64_t)v3 << 32);
}

uint64_t sub_19094DAB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_190904C2C();
  swift_retain();
  sub_190A4705C();
  return swift_release();
}

uint64_t ControlWidgetTemplate.privacySensitive(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_19094DB98(a1, a2, a3, (uint64_t)&unk_1E2CCD480, (uint64_t)sub_19094DB78);
}

uint64_t sub_19094DB68()
{
  return swift_deallocObject();
}

uint64_t sub_19094DB78(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(result + 16) = *(_BYTE *)(v1 + 16);
  return result;
}

uint64_t ControlWidgetTemplate.disabled(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return sub_19094DB98(a1, a2, a3, (uint64_t)&unk_1E2CCD4A8, (uint64_t)sub_19094DC20);
}

uint64_t sub_19094DB98(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;

  v7 = swift_allocObject();
  *(_BYTE *)(v7 + 16) = a1;
  sub_19094DAB4(a5, v7);
  return swift_release();
}

uint64_t sub_19094DC10()
{
  return swift_deallocObject();
}

uint64_t sub_19094DC20(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(result + 17) = *(_BYTE *)(v1 + 16);
  return result;
}

uint64_t ControlWidgetTemplate.accessibilityIdentifier(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_bridgeObjectRetain();
  sub_19094DAB4((uint64_t)sub_19094DCD8, v4);
  return swift_release();
}

uint64_t sub_19094DCB4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19094DCD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t ControlWidgetTemplate.rasterizedImagesAllowed()()
{
  return sub_19094DAB4((uint64_t)sub_19094DD30, 0);
}

uint64_t sub_19094DD30(uint64_t result)
{
  *(_BYTE *)(result + 40) = 1;
  return result;
}

uint64_t sub_19094DD3C()
{
  sub_190904C2C();
  return swift_getOpaqueTypeConformance2();
}

_QWORD *sub_19094DD88(_QWORD *result, void (*a2)(__int128 *))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(__int128 *, uint64_t, uint64_t);
  uint64_t v9;
  __int128 v10;
  _BYTE v11[25];
  __int128 v12;
  _OWORD v13[2];
  _BYTE v14[16];

  v2 = result[3];
  if (v2)
  {
    v4 = (uint64_t)result;
    v5 = result[4];
    __swift_project_boxed_opaque_existential_1(result, result[3]);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v5 + 24))(&v10, v2, v5);
    a2(&v10);
    v6 = *(_QWORD *)(v4 + 24);
    if (v6)
    {
      v12 = v10;
      v13[0] = *(_OWORD *)v11;
      *(_OWORD *)((char *)v13 + 9) = *(_OWORD *)&v11[9];
      v7 = *(_QWORD *)(v4 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(v4, v6);
      v8 = *(void (**)(__int128 *, uint64_t, uint64_t))(v7 + 32);
      v9 = v12;
      sub_19093AEB4((uint64_t)v13 + 8, (uint64_t)v14);
      sub_1908B4C4C(v9);
      sub_19093AF24((uint64_t)v14);
      v8(&v12, v6, v7);
    }
    sub_1908B467C(v10);
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19094DE74()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_19094DE98(_QWORD *a1)
{
  uint64_t v1;

  return sub_19094DD88(a1, *(void (**)(__int128 *))(v1 + 16));
}

unint64_t sub_19094DEA0(uint64_t a1)
{
  uint64_t v1;

  return sub_19094DA64(a1, *(_QWORD *)(v1 + 16));
}

uint64_t _s9WidgetKit29AppIntentControlConfigurationV4bodyQrvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v3 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19094F7F4(v1, (uint64_t)v5);
  swift_storeEnumTagMultiPayload();
  sub_1909F2CA8((uint64_t)v5, a1);
  v6 = *(int *)(type metadata accessor for WidgetDescriptor(0) + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v6) = &unk_1E2CC8720;
  return result;
}

uint64_t AppIntentControlConfiguration.init<A>(kind:provider:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t result;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  swift_getAssociatedConformanceWitness();
  v15 = sub_190A45CB8();
  v27 = v16;
  v28 = v15;
  v17 = sub_1909048C8();
  v25 = v18;
  v26 = v17;
  v19 = *(_QWORD *)(a8 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (*(_QWORD *)(v19 + 64) + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (char *)swift_allocObject();
  *((_QWORD *)v22 + 2) = a6;
  *((_QWORD *)v22 + 3) = a7;
  *((_QWORD *)v22 + 4) = a8;
  *((_QWORD *)v22 + 5) = a10;
  *((_QWORD *)v22 + 6) = a11;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 32))(&v22[v20], a3, a8);
  v24 = &v22[v21];
  *(_QWORD *)v24 = a4;
  *((_QWORD *)v24 + 1) = a5;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = v28;
  *(_QWORD *)(a9 + 24) = v27;
  *(_QWORD *)(a9 + 32) = v26;
  *(_QWORD *)(a9 + 40) = v25;
  *(_QWORD *)(a9 + 48) = &unk_1EE1ED5F0;
  *(_QWORD *)(a9 + 56) = v22;
  *(_BYTE *)(a9 + 88) = 1;
  return result;
}

uint64_t sub_19094E0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8[19] = v14;
  v8[20] = v15;
  v8[17] = a6;
  v8[18] = a8;
  v8[15] = a4;
  v8[16] = a5;
  v8[13] = a2;
  v8[14] = a3;
  v8[12] = a1;
  v8[21] = swift_task_alloc();
  v8[22] = *(_QWORD *)(v14 - 8);
  v8[23] = swift_task_alloc();
  v10 = type metadata accessor for ValueGenerator(0, v14, v16, v9);
  v8[24] = v10;
  v8[25] = *(_QWORD *)(v10 - 8);
  v8[26] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[27] = AssociatedTypeWitness;
  v8[28] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[29] = swift_task_alloc();
  sub_190A47D64();
  v8[30] = sub_190A47D58();
  v8[31] = sub_190A47D28();
  v8[32] = v12;
  return swift_task_switch();
}

uint64_t sub_19094E1CC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;

  v1 = *(void **)(v0 + 104);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 208);
    v4 = *(_QWORD *)(v0 + 176);
    v3 = *(_QWORD *)(v0 + 184);
    v5 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v3, *(_QWORD *)(v0 + 120), v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v3, v5);
    v6 = v1;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v7;
    *v7 = v0;
    v7[1] = sub_19094E32C;
    return sub_19094E6FC(*(_QWORD *)(v0 + 232), (uint64_t)v6, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 192));
  }
  else
  {
    swift_release();
    type metadata accessor for ControlError(0);
    sub_1908AA2F4(&qword_1EE1ED320, type metadata accessor for ControlError, (uint64_t)&protocol conformance descriptor for ControlError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19094E32C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 200);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 208);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_19094E3B4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(void (**)(uint64_t))(v0 + 128);
  swift_release();
  sub_190A47158();
  v2(v1);
  sub_190A4714C();
  sub_190904C2C();
  sub_190A47140();
  if (*(_QWORD *)(v0 + 80))
  {
    v4 = *(_QWORD *)(v0 + 224);
    v3 = *(_QWORD *)(v0 + 232);
    v5 = *(_QWORD *)(v0 + 216);
    v6 = *(_QWORD *)(v0 + 96);
    v7 = *(void **)(v0 + 104);
    v8 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v0 + 32) = v8;
    *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 88);
    sub_1908B4BBC((__int128 *)(v0 + 16), v6);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_190904CFC(v0 + 56);
    return sub_190A48448();
  }
}

uint64_t sub_19094E544()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 104);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19094E5B4()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19094E624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v7 = v3[3];
  v16 = v3[2];
  v8 = *(_QWORD *)(v3[4] - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (uint64_t)v3 + v9;
  v11 = (_QWORD *)((char *)v3 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v14;
  *v14 = v4;
  v14[1] = sub_1908CEB54;
  return sub_19094E0A0(a1, a2, a3, v10, v12, v13, v16, v7);
}

uint64_t sub_19094E6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v5[3] = a3;
  v5[4] = v4;
  v5[2] = a1;
  v5[5] = *(_QWORD *)(a4 + 24);
  v5[6] = *(_QWORD *)(a4 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[7] = AssociatedTypeWitness;
  v5[8] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5[9] = swift_task_alloc();
  v8 = swift_getAssociatedTypeWitness();
  v5[10] = v8;
  v5[11] = *(_QWORD *)(v8 - 8);
  v9 = swift_task_alloc();
  v5[12] = v9;
  v10 = (_QWORD *)swift_task_alloc();
  v5[13] = v10;
  v11 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  *v10 = v5;
  v10[1] = sub_19094E82C;
  return sub_190966918(v9, a2, v8, v11);
}

uint64_t sub_19094E82C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19094E890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD, _QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 == 1)
  {
    if (qword_1EE1EB680 != -1)
      swift_once();
    v9 = sub_190A465A0();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EE1FD748);
    v10 = sub_190A46588();
    v11 = sub_190A47F68();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1908A7000, v10, v11, "Fetching preview value", v12, 2u);
      MEMORY[0x194014398](v12, -1, -1);
    }
    v14 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 80);
    v17 = *(_QWORD *)(v0 + 40);
    v16 = *(_QWORD *)(v0 + 48);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v13, v16, v17);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else if (v1)
  {
    return sub_190A48448();
  }
  else
  {
    if (qword_1EE1EB680 != -1)
      swift_once();
    v2 = sub_190A465A0();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EE1FD748);
    v3 = sub_190A46588();
    v4 = sub_190A47F68();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1908A7000, v3, v4, "Fetching current value", v5, 2u);
      MEMORY[0x194014398](v5, -1, -1);
    }
    v6 = *(_QWORD *)(v0 + 40);

    v18 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v6 + 40) + *(_QWORD *)(v6 + 40));
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v7;
    *v7 = v0;
    v7[1] = sub_19094EB60;
    return v18(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 40));
  }
}

uint64_t sub_19094EB60()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19094EBC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19094EC38()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19094EC78()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v1 = *(void **)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  sub_19094F7B8();
  v5 = sub_190A47ADC();
  v7 = v6;
  v8 = v1;
  sub_19096BFDC(v5, v7, 1106, v1, 0xD00000000000002ALL, 0x8000000190A61F50);
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *AppIntentControlConfiguration.init(kind:intent:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *result;

  v14 = sub_190A45CB8();
  v16 = v15;
  v17 = sub_1909048C8();
  v19 = v18;
  result = (_QWORD *)swift_allocObject();
  result[2] = a5;
  result[3] = a6;
  result[4] = a7;
  result[5] = a9;
  result[6] = a3;
  result[7] = a4;
  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = v14;
  *(_QWORD *)(a8 + 24) = v16;
  *(_QWORD *)(a8 + 32) = v17;
  *(_QWORD *)(a8 + 40) = v19;
  *(_QWORD *)(a8 + 48) = &unk_1EE1ED600;
  *(_QWORD *)(a8 + 56) = result;
  *(_BYTE *)(a8 + 88) = 1;
  return result;
}

uint64_t sub_19094EE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v12;

  v8[19] = a8;
  v8[20] = v12;
  v8[17] = a6;
  v8[18] = a7;
  v8[15] = a4;
  v8[16] = a5;
  v8[13] = a2;
  v8[14] = a3;
  v8[12] = a1;
  v8[21] = swift_task_alloc();
  v8[22] = *(_QWORD *)(a6 - 8);
  v8[23] = swift_task_alloc();
  sub_190A47D64();
  v8[24] = sub_190A47D58();
  v8[25] = sub_190A47D28();
  v8[26] = v10;
  return swift_task_switch();
}

uint64_t sub_19094EEEC()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v1 = *(void **)(v0 + 104);
  if (v1)
  {
    v2 = v1;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v3;
    *v3 = v0;
    v3[1] = sub_19094F028;
    v4 = *(_QWORD *)(v0 + 184);
    v5 = *(_QWORD *)(v0 + 152);
    v6 = *(_QWORD *)(v0 + 136);
    v7 = (_QWORD *)swift_task_alloc();
    v3[2] = v7;
    v8 = *(_QWORD *)(v5 + 8);
    *v7 = v3;
    v7[1] = sub_1908C5090;
    return sub_190966918(v4, (uint64_t)v2, v6, v8);
  }
  else
  {
    swift_release();
    type metadata accessor for ControlError(0);
    sub_1908AA2F4(&qword_1EE1ED320, type metadata accessor for ControlError, (uint64_t)&protocol conformance descriptor for ControlError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19094F028()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19094F088()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(void (**)(uint64_t))(v0 + 120);
  swift_release();
  sub_190A47158();
  v2(v1);
  sub_190A4714C();
  sub_190904C2C();
  sub_190A47140();
  if (*(_QWORD *)(v0 + 80))
  {
    v4 = *(_QWORD *)(v0 + 176);
    v3 = *(_QWORD *)(v0 + 184);
    v5 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 96);
    v7 = *(void **)(v0 + 104);
    v8 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v0 + 32) = v8;
    *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 88);
    sub_1908B4BBC((__int128 *)(v0 + 16), v6);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_190904CFC(v0 + 56);
    return sub_190A48448();
  }
}

uint64_t sub_19094F204()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 104);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19094F254()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19094F278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v8 = v3[2];
  v9 = v3[3];
  v10 = v3[4];
  v12 = v3[6];
  v11 = v3[7];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v13;
  *v13 = v4;
  v13[1] = sub_1908C5090;
  return sub_19094EE30(a1, a2, a3, v12, v11, v8, v9, v10);
}

uint64_t sub_19094F31C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of AppIntentControlValueProvider.previewValue(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of AppIntentControlValueProvider.currentValue(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 40) + *(_QWORD *)(a4 + 40));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1908CEB54;
  return v11(a1, a2, a3, a4);
}

uint64_t destroy for ControlViewSource(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(a1 + 88) & 1) != 0)
    return swift_release();
  else
    return __swift_destroy_boxed_opaque_existential_1(a1 + 48);
}

uint64_t initializeWithCopy for ControlViewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_BYTE *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v7;
    swift_retain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 72) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 48, a2 + 48);
  }
  *(_BYTE *)(a1 + 88) = v6;
  return a1;
}

uint64_t assignWithCopy for ControlViewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  if (a1 != a2)
  {
    sub_19094F59C(a1 + 48);
    if ((*(_BYTE *)(a2 + 88) & 1) != 0)
    {
      v4 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v4;
      *(_BYTE *)(a1 + 88) = 1;
      swift_retain();
    }
    else
    {
      v5 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 72) = v5;
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 48, a2 + 48);
      *(_BYTE *)(a1 + 88) = 0;
    }
  }
  return a1;
}

uint64_t sub_19094F59C(uint64_t a1)
{
  destroy for ControlViewSource.ProviderType(a1);
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ControlViewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  if (a1 != a2)
  {
    sub_19094F59C(a1 + 48);
    v6 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v6;
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlViewSource(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 89))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlViewSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 88) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 89) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 89) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AppIntentControlConfiguration()
{
  JUMPOUT(0x1940141E8);
}

uint64_t sub_19094F70C()
{
  return sub_1908AA2F4((unint64_t *)&qword_1EE1EBAC8, (uint64_t (*)(uint64_t))type metadata accessor for ControlDescriptorConfiguration, (uint64_t)&unk_190A50AA0);
}

uint64_t sub_19094F738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v10;
  uint64_t v11;

  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  v11 = *(_QWORD *)(a5 + 8);
  *v10 = v5;
  v10[1] = sub_1908C5090;
  return sub_190966918(a1, a2, a4, v11);
}

uint64_t type metadata accessor for ValueGenerator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ValueGenerator);
}

unint64_t sub_19094F7B8()
{
  unint64_t result;

  result = qword_1ECF6D3D0;
  if (!qword_1ECF6D3D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECF6D3D0);
  }
  return result;
}

uint64_t sub_19094F7F4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ControlViewSource(a2, a1);
  return a2;
}

uint64_t sub_19094F830(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_19094F8E0 + 4 * byte_190A50BA0[(v7 - 1)]))();
}

void sub_19094F930(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

void WidgetPreviewContextKey.family.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t WidgetPreviewContextKey.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetPreviewContextKey(0) + 20);
  v4 = sub_190A46084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for WidgetPreviewContextKey(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1EE1ED6C8);
}

void *WidgetPreviewContextKey.configuration.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for WidgetPreviewContextKey(0) + 24));
  v2 = v1;
  return v1;
}

uint64_t sub_19094FB78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED6B8);
  __swift_allocate_value_buffer(v0, qword_1EE1ED6A0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE1ED6A0);
  v2 = type metadata accessor for WidgetPreviewContextKey(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t static WidgetPreviewContextKey.defaultValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EE1EC4F8 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED6B8);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE1ED6A0);
  swift_beginAccess();
  return sub_19094FC64(v3, a1);
}

uint64_t sub_19094FC64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED6B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static WidgetPreviewContextKey.defaultValue.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EE1EC4F8 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED6B8);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE1ED6A0);
  swift_beginAccess();
  sub_19094FD40(a1, v3);
  swift_endAccess();
  return sub_19094FD88(a1);
}

uint64_t sub_19094FD40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED6B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_19094FD88(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED6B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t (*static WidgetPreviewContextKey.defaultValue.modify())()
{
  uint64_t v0;

  if (qword_1EE1EC4F8 != -1)
    swift_once();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED6B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE1ED6A0);
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t WidgetPreviewContextKey.contentCategory.getter()
{
  return 0xD000000000000018;
}

unint64_t WidgetPreviewContentCategory.rawValue.getter()
{
  return 0xD000000000000018;
}

uint64_t WidgetPreviewContextKey.previewContentCategory.getter()
{
  return sub_190A46480();
}

uint64_t sub_19094FE98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EE1EC4F8 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED6B8);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE1ED6A0);
  swift_beginAccess();
  return sub_19094FC64(v3, a1);
}

uint64_t WidgetPreviewContentCategory.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_190A484F0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_19094FF70()
{
  sub_190A487C0();
  sub_190A47B18();
  return sub_190A48808();
}

uint64_t sub_19094FFC4()
{
  return sub_190A47B18();
}

uint64_t sub_19094FFE0()
{
  sub_190A487C0();
  sub_190A47B18();
  return sub_190A48808();
}

uint64_t sub_190950030@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_190A484F0();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_190950080(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000018;
  a1[1] = 0x8000000190A5FAA0;
}

uint64_t WidgetPreviewContext.subscript.getter(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v8;
  uint64_t v9;
  char *v10;
  _BYTE *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;

  v3 = type metadata accessor for WidgetPreviewContextKey(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v4 != a1)
    return sub_190A46D2C();
  v8 = *v1;
  v9 = type metadata accessor for WidgetPreviewContext(0);
  v10 = &v1[*(int *)(v9 + 20)];
  v11 = &v6[*(int *)(a1 + 20)];
  v12 = sub_190A46084();
  (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, v10, v12);
  v13 = *(void **)&v1[*(int *)(v9 + 24)];
  *v6 = v8;
  *(_QWORD *)&v6[*(int *)(a1 + 24)] = v13;
  swift_getAssociatedTypeWitness();
  v14 = v13;
  return swift_dynamicCast();
}

uint64_t type metadata accessor for WidgetPreviewContext(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1EE1ED6D8);
}

uint64_t WidgetPreviewContext.init(family:date:configuration:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t result;

  *a4 = *a1;
  v7 = type metadata accessor for WidgetPreviewContext(0);
  v8 = &a4[*(int *)(v7 + 20)];
  v9 = sub_190A46084();
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a2, v9);
  *(_QWORD *)&a4[*(int *)(v7 + 24)] = a3;
  return result;
}

uint64_t WidgetPreviewContext.init(family:)@<X0>(char *a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = type metadata accessor for WidgetPreviewContext(0);
  result = sub_190A46078();
  *a2 = v3;
  *(_QWORD *)&a2[*(int *)(v4 + 24)] = 0;
  return result;
}

unint64_t sub_1909502B0()
{
  unint64_t result;

  result = qword_1EE1ED6C0;
  if (!qword_1EE1ED6C0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetPreviewContentCategory, &type metadata for WidgetPreviewContentCategory);
    atomic_store(result, (unint64_t *)&qword_1EE1ED6C0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetPreviewContextKey()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for WidgetPreviewContextKey()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for WidgetPreviewContentCategory(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_190950374 + 4 * byte_190A50CA0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_190950394 + 4 * byte_190A50CA5[v4]))();
}

_BYTE *sub_190950374(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_190950394(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19095039C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1909503A4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1909503AC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1909503B4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WidgetPreviewContentCategory()
{
  return &type metadata for WidgetPreviewContentCategory;
}

uint64_t *_s9WidgetKit23WidgetPreviewContextKeyVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_190A46084();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = *(int *)(a3 + 24);
    v12 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)v4 + v11) = (uint64_t)v12;
    v13 = v12;
  }
  return v4;
}

void _s9WidgetKit23WidgetPreviewContextKeyVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

}

_BYTE *_s9WidgetKit23WidgetPreviewContextKeyVwcp_0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_190A46084();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = *(void **)&a2[v10];
  *(_QWORD *)&a1[v10] = v11;
  v12 = v11;
  return a1;
}

_BYTE *_s9WidgetKit23WidgetPreviewContextKeyVwca_0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_190A46084();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = *(void **)&a1[v10];
  v12 = *(void **)&a2[v10];
  *(_QWORD *)&a1[v10] = v12;
  v13 = v12;

  return a1;
}

_BYTE *_s9WidgetKit23WidgetPreviewContextKeyVwtk_0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_190A46084();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

_BYTE *_s9WidgetKit23WidgetPreviewContextKeyVwta_0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_190A46084();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = *(void **)&a1[v10];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];

  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetPreviewContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_190A46084();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetPreviewContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_190A46084();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

uint64_t sub_1909507EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190A46084();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t View.controlWidgetStatus(_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_190950A70(a1, a2, a3, a4, a5, a6, type metadata accessor for ControlWidgetStatusModifier);
}

uint64_t View.controlWidgetStatus(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_190950BB4(a1, a2, a3, a4, a5, a6, type metadata accessor for ControlWidgetStatusModifier);
}

uint64_t View.controlWidgetStatus<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_190950C9C(a1, a2, a3, a4, a5, type metadata accessor for ControlWidgetStatusModifier);
}

uint64_t sub_19095088C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v2 = sub_190A46C30();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ControlWidgetStatusModifier(0);
  sub_19096EC18((uint64_t)v5);
  v6 = sub_190A4747C();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  result = swift_bridgeObjectRelease();
  *a1 = v6;
  a1[1] = v8;
  return result;
}

uint64_t sub_19095096C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t (**v12)(uint64_t);
  uint64_t v13;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](a1);
  sub_1908AF5D8(v3, (uint64_t)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ControlWidgetStatusModifier);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  sub_1908BD0B4((uint64_t)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, type metadata accessor for ControlWidgetStatusModifier);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a3, a1, v10);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED728);
  v12 = (uint64_t (**)(uint64_t))(a3 + *(int *)(result + 36));
  *v12 = sub_1909518A4;
  v12[1] = (uint64_t (*)(uint64_t))v9;
  return result;
}

uint64_t View.controlWidgetActionHint(_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_190950A70(a1, a2, a3, a4, a5, a6, type metadata accessor for ControlWidgetActionHintModifier);
}

uint64_t sub_190950A70(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(_QWORD))
{
  return sub_190950A90(a1, a2, a3 & 1, a4, a5, a6, a7);
}

uint64_t sub_190950A90(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(_QWORD))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  char *v17;
  uint64_t v19;

  v14 = a7(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v19 - v15);
  *v16 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
  swift_storeEnumTagMultiPayload();
  v17 = (char *)v16 + *(int *)(v14 + 20);
  *(_QWORD *)v17 = a1;
  *((_QWORD *)v17 + 1) = a2;
  v17[16] = a3 & 1;
  *((_QWORD *)v17 + 3) = a4;
  sub_190950F28(a1, a2, a3 & 1);
  swift_bridgeObjectRetain();
  MEMORY[0x194012838](v16, a5, v14, a6);
  return sub_1908B5150((uint64_t)v16, a7);
}

uint64_t View.controlWidgetActionHint(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_190950BB4(a1, a2, a3, a4, a5, a6, type metadata accessor for ControlWidgetActionHintModifier);
}

uint64_t sub_190950BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_190A474AC();
  v12 = v11;
  v14 = v13 & 1;
  sub_190950A90(v10, v11, v13 & 1, v15, a5, a6, a7);
  sub_19090D1C4(v10, v12, v14);
  return swift_bridgeObjectRelease();
}

uint64_t View.controlWidgetActionHint<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_190950C9C(a1, a2, a3, a4, a5, type metadata accessor for ControlWidgetActionHintModifier);
}

uint64_t sub_190950C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v18;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v10 + 16))((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_190A474B8();
  v13 = v12;
  v15 = v14 & 1;
  sub_190950A90(v11, v12, v14 & 1, v16, a2, a4, a6);
  sub_19090D1C4(v11, v13, v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_190950D80(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx9WidgetKit07ControlF14StatusModifier33_D65CF572C81694DAC92CF1F0D8AF24A2LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(a1, type metadata accessor for ControlWidgetStatusModifier, &qword_1EE1ED6E8, (uint64_t)&unk_190A50F2C);
}

uint64_t type metadata accessor for ControlWidgetStatusModifier(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1EE1ED710);
}

uint64_t sub_190950DB0(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzSyRd__r__lAA15ModifiedContentVyx9WidgetKit07ControlF14StatusModifier33_D65CF572C81694DAC92CF1F0D8AF24A2LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(a1, type metadata accessor for ControlWidgetStatusModifier, &qword_1EE1ED6E8, (uint64_t)&unk_190A50F2C);
}

uint64_t sub_190950DCC(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx9WidgetKit07ControlF14StatusModifier33_D65CF572C81694DAC92CF1F0D8AF24A2LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(a1, type metadata accessor for ControlWidgetActionHintModifier, &qword_1EE1ED6F0, (uint64_t)&unk_190A50EDC);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx9WidgetKit07ControlF14StatusModifier33_D65CF572C81694DAC92CF1F0D8AF24A2LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v7 = *(_QWORD *)(a1 + 8);
  a2(255);
  v8 = sub_190A46894();
  v10[0] = v7;
  v10[1] = sub_1908AA2F4(a3, a2, a4);
  return MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v8, v10);
}

uint64_t type metadata accessor for ControlWidgetActionHintModifier(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1EE1ED700);
}

uint64_t sub_190950E80(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzSyRd__r__lAA15ModifiedContentVyx9WidgetKit07ControlF14StatusModifier33_D65CF572C81694DAC92CF1F0D8AF24A2LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(a1, type metadata accessor for ControlWidgetActionHintModifier, &qword_1EE1ED6F0, (uint64_t)&unk_190A50EDC);
}

uint64_t get_witness_table_7SwiftUI4ViewRzSyRd__r__lAA15ModifiedContentVyx9WidgetKit07ControlF14StatusModifier33_D65CF572C81694DAC92CF1F0D8AF24A2LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v7 = *(_QWORD *)(a1 + 16);
  a2(255);
  v8 = sub_190A46894();
  v10[0] = v7;
  v10[1] = sub_1908AA2F4(a3, a2, a4);
  return MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v8, v10);
}

uint64_t sub_190950F28(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_190950F44(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_190950F8C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190950F9C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_190950FB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE1EBA40[0])
  {
    sub_190A46C30();
    v0 = sub_190A466A8();
    if (!v1)
      atomic_store(v0, qword_1EE1EBA40);
  }
}

uint64_t *sub_190951004(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_190A46C30();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = *(uint64_t *)((char *)a2 + v9);
    v13 = *((_QWORD *)v11 + 1);
    v14 = v11[16];
    sub_190950F28(v12, v13, v14);
    *(_QWORD *)v10 = v12;
    *((_QWORD *)v10 + 1) = v13;
    v10[16] = v14;
    *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_190951110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_190A46C30();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_19090D1C4(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 20) + 16));
  return swift_bridgeObjectRelease();
}

_QWORD *sub_190951190(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_190A46C30();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)((char *)a2 + v7);
  v11 = *((_QWORD *)v9 + 1);
  v12 = v9[16];
  sub_190950F28(v10, v11, v12);
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  v8[16] = v12;
  *((_QWORD *)v8 + 3) = *((_QWORD *)v9 + 3);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_190951270(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  if (a1 != a2)
  {
    sub_190950F44((uint64_t)a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_190A46C30();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)((char *)a2 + v7);
  v11 = *((_QWORD *)v9 + 1);
  v12 = v9[16];
  sub_190950F28(v10, v11, v12);
  v13 = *(_QWORD *)v8;
  v14 = *((_QWORD *)v8 + 1);
  v15 = v8[16];
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  v8[16] = v12;
  sub_19090D1C4(v13, v14, v15);
  *((_QWORD *)v8 + 3) = *((_QWORD *)v9 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_190951378(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_190A46C30();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v11;
  return a1;
}

char *sub_190951428(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  if (a1 != a2)
  {
    sub_190950F44((uint64_t)a1);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_190A46C30();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  LOBYTE(v8) = v10[16];
  v11 = *(_QWORD *)v9;
  v12 = *((_QWORD *)v9 + 1);
  v13 = v9[16];
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v9[16] = v8;
  sub_19090D1C4(v11, v12, v13);
  *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19095150C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED6F8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1909515A0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm_1(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED6F8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

void sub_190951630()
{
  unint64_t v0;

  sub_190950FB0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1909516A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1909516B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v2 = sub_190A46C30();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ControlWidgetActionHintModifier(0);
  sub_19096EC18((uint64_t)v5);
  v6 = sub_190A4747C();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v8;
  return result;
}

uint64_t sub_190951790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t (**v12)(uint64_t);
  uint64_t v13;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](a1);
  sub_1908AF5D8(v3, (uint64_t)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ControlWidgetActionHintModifier);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  sub_1908BD0B4((uint64_t)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, type metadata accessor for ControlWidgetActionHintModifier);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a3, a1, v10);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED738);
  v12 = (uint64_t (**)(uint64_t))(a3 + *(int *)(result + 36));
  *v12 = sub_1909518C4;
  v12[1] = (uint64_t (*)(uint64_t))v9;
  return result;
}

uint64_t sub_190951888()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190951898()
{
  return objectdestroyTm(type metadata accessor for ControlWidgetStatusModifier);
}

uint64_t sub_1909518A4(uint64_t a1)
{
  return sub_1909518D8(a1, type metadata accessor for ControlWidgetStatusModifier, (uint64_t (*)(uint64_t, uint64_t))sub_19095088C);
}

uint64_t sub_1909518B8()
{
  return objectdestroyTm(type metadata accessor for ControlWidgetActionHintModifier);
}

uint64_t sub_1909518C4(uint64_t a1)
{
  return sub_1909518D8(a1, type metadata accessor for ControlWidgetActionHintModifier, (uint64_t (*)(uint64_t, uint64_t))sub_1909516B0);
}

uint64_t sub_1909518D8(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return a3(a1, v3 + ((v5 + 16) & ~v5));
}

uint64_t sub_190951924()
{
  return sub_19095198C(&qword_1EE1ED740, &qword_1EE1ED728, &qword_1EE1ED748, &qword_1EE1ED720);
}

uint64_t sub_190951958()
{
  return sub_19095198C(&qword_1EE1ED760, &qword_1EE1ED738, &qword_1EE1ED768, &qword_1EE1ED730);
}

uint64_t sub_19095198C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_1908AF598(a3, a4, MEMORY[0x1E0CDBF10]);
    v9[1] = sub_1908AF598(&qword_1EE1ED750, &qword_1EE1ED758, MEMORY[0x1E0CDCE28]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_190951A28()
{
  uint64_t inited;
  void *v1;
  id v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190A4A350;
  v1 = (void *)*MEMORY[0x1E0CA8400];
  *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 32) = v1;
  *(_QWORD *)(inited + 40) = 0x8000;
  v2 = v1;
  return sub_1908DFEC8(inited);
}

uint64_t sub_190951A98@<X0>(uint64_t a1@<X8>)
{
  return sub_190951AB0(MEMORY[0x1E0CDB358], a1);
}

uint64_t sub_190951AA4@<X0>(uint64_t a1@<X8>)
{
  return sub_190951AB0(MEMORY[0x1E0CDB300], a1);
}

uint64_t sub_190951AB0@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v4 = sub_190A46EAC();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 104))(a2, v3, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t type metadata accessor for TightLeadingFontDefinition()
{
  return objc_opt_self();
}

uint64_t sub_190951B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_190A46EA0();
  result = sub_1908EE968(a1, v4);
  if ((v6 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v9 = sub_190A46EAC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a2, a1, v9);
  }
  v7 = result - 1;
  if (result < 1)
  {
    v10 = sub_190A46EAC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a2, a1, v10);
    return swift_bridgeObjectRelease();
  }
  if (v7 < *(_QWORD *)(v4 + 16))
  {
    v8 = sub_190A46EAC();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v7, v8);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ContentSizeCategoryDecrementingFontDefinition()
{
  return objc_opt_self();
}

uint64_t sub_190951C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  char v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_190A46EA0();
  result = sub_1908EE968(a1, v4);
  if ((v6 & 1) != 0 || ((v7 = *(_QWORD *)(v4 + 16), v8 = result + 1, result < v7) ? (v9 = v8 == v7) : (v9 = 1), v9))
  {
    swift_bridgeObjectRelease();
    v10 = sub_190A46EAC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a2, a1, v10);
  }
  else if (v8 >= v7)
  {
    __break(1u);
  }
  else
  {
    v11 = sub_190A46EAC();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a2, v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v8, v11);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for ContentSizeCategoryIncrementingFontDefinition()
{
  return objc_opt_self();
}

double sub_190951D20(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  double v9;
  uint64_t v11;

  v4 = sub_190A46EAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  v9 = -3.0;
  if (v8 != *MEMORY[0x1E0CDB330])
  {
    v9 = -2.0;
    if (v8 != *MEMORY[0x1E0CDB368])
    {
      v9 = -1.0;
      if (v8 != *MEMORY[0x1E0CDB370])
      {
        v9 = 0.0;
        if (v8 != *MEMORY[0x1E0CDB358])
        {
          v9 = 2.0;
          if (v8 != *MEMORY[0x1E0CDB328])
          {
            v9 = 4.0;
            if (v8 != *MEMORY[0x1E0CDB338])
            {
              v9 = 6.0;
              if (v8 != *MEMORY[0x1E0CDB300])
              {
                v9 = 10.0;
                if (v8 != *MEMORY[0x1E0CDB348])
                {
                  v9 = 14.0;
                  if (v8 != *MEMORY[0x1E0CDB340])
                  {
                    v9 = 18.0;
                    if (v8 != *MEMORY[0x1E0CDB350])
                    {
                      v9 = 22.0;
                      if (v8 != *MEMORY[0x1E0CDB318])
                      {
                        v9 = 26.0;
                        if (v8 != *MEMORY[0x1E0CDB320])
                        {
                          (*(void (**)(char *, uint64_t, double))(v5 + 8))(v7, v4, 26.0);
                          v9 = 0.0;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return v9 + dbl_190A51048[a1];
}

uint64_t sub_190951F08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = sub_190A47440();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E0CDD788]
    || v6 == *MEMORY[0x1E0CDD7A8]
    || v6 == *MEMORY[0x1E0CDD7B0]
    || v6 == *MEMORY[0x1E0CDD7B8])
  {
    goto LABEL_30;
  }
  if (v6 == *MEMORY[0x1E0CDD7E8])
  {
    sub_190A473E0();
    return v10;
  }
  v11 = v6 == *MEMORY[0x1E0CDD790] || v6 == *MEMORY[0x1E0CDD7A0];
  v12 = v11 || v6 == *MEMORY[0x1E0CDD7C0];
  v13 = v12 || v6 == *MEMORY[0x1E0CDD7E0];
  v14 = v13 || v6 == *MEMORY[0x1E0CDD7C8];
  if (v14 || v6 == *MEMORY[0x1E0CDD7D0])
  {
LABEL_30:
    sub_190A473D4();
    return v10;
  }
  sub_190A473D4();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v18;
}

uint64_t type metadata accessor for iOSLikeFontDefinition()
{
  return objc_opt_self();
}

uint64_t sub_1909520A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46BF4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1909520D0()
{
  return sub_190A46C00();
}

uint64_t sub_1909520F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  *(_QWORD *)(v3 + 96) = a2;
  *(_QWORD *)(v3 + 104) = v2;
  *(_QWORD *)(v3 + 88) = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  *(_QWORD *)(v3 + 112) = swift_task_alloc();
  *(_QWORD *)(v3 + 120) = sub_190A47D64();
  *(_QWORD *)(v3 + 128) = sub_190A47D58();
  *(_BYTE *)(v3 + 328) = *(_BYTE *)(v2 + 32);
  v4 = *(int **)(v2 + 88);
  *(_OWORD *)(v3 + 136) = *(_OWORD *)(v2 + 104);
  *(_OWORD *)(v3 + 152) = *(_OWORD *)(v2 + 120);
  *(_BYTE *)(v3 + 329) = *(_BYTE *)(v2 + 136);
  v5 = *(_QWORD *)(v2 + 176);
  *(_QWORD *)(v3 + 168) = v5;
  v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 176) = v6;
  *v6 = v3;
  v6[1] = sub_1909521C0;
  return v8(v5);
}

uint64_t sub_1909521C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v6)(_QWORD);

  v3 = *v2;
  *(_QWORD *)(v3 + 184) = a1;
  *(_QWORD *)(v3 + 192) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_190A47D28();
    return swift_task_switch();
  }
  else
  {
    v6 = (uint64_t (*)(_QWORD))(**(int **)(v3 + 136) + *(_QWORD *)(v3 + 136));
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v3 + 200) = v5;
    *v5 = v3;
    v5[1] = sub_19095228C;
    return v6(*(_QWORD *)(v3 + 168));
  }
}

uint64_t sub_19095228C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)v2;
  *(_QWORD *)(*(_QWORD *)v2 + 208) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_190A47D28();
  }
  else
  {
    v4[27] = a1;
    v4[28] = sub_190A47D28();
    v4[29] = v5;
  }
  return swift_task_switch();
}

uint64_t sub_190952338()
{
  int8x16_t *v0;
  uint64_t v1;
  uint64_t v2;
  int8x16_t *v3;
  _QWORD *v4;

  v1 = v0[13].i64[1];
  v2 = v0[11].i64[1];
  v3 = (int8x16_t *)swift_task_alloc();
  v3[1] = vextq_s8(v0[6], v0[6], 8uLL);
  v0[15].i64[0] = sub_19095399C(v2, v1, (void (*)(uint64_t, uint64_t *))sub_1909531A8, (uint64_t)v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v4 = (_QWORD *)swift_task_alloc();
  v0[15].i64[1] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_1909523F0;
  return sub_1909531B0(v0[6].i64[1], v0[6].i64[0]);
}

uint64_t sub_1909523F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v7;

  v4 = (_QWORD *)*v3;
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = v2;
  v5 = (_QWORD *)*v3;
  v4[32] = a2;
  v4[33] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    return swift_task_switch();
  }
  else
  {
    v7 = (_QWORD *)swift_task_alloc();
    v4[34] = v7;
    *v7 = v5;
    v7[1] = sub_19095248C;
    return sub_19095356C(v4[13], v4[12]);
  }
}

uint64_t sub_19095248C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;
  uint64_t (*v8)(_QWORD, _QWORD);

  v4 = *v3;
  *(_QWORD *)(v4 + 48) = v3;
  *(_QWORD *)(v4 + 56) = a1;
  *(_QWORD *)(v4 + 64) = a2;
  *(_QWORD *)(v4 + 72) = v2;
  v5 = *v3;
  *(_QWORD *)(v4 + 280) = a2;
  *(_QWORD *)(v4 + 288) = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_task_switch();
  }
  else
  {
    v8 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v4 + 152) + *(_QWORD *)(v4 + 152));
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v4 + 296) = v7;
    *v7 = v5;
    v7[1] = sub_190952550;
    return v8(*(_QWORD *)(v4 + 112), *(_QWORD *)(v4 + 168));
  }
}

uint64_t sub_190952550()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = v2[3];
    v2[39] = v2[7];
    v2[40] = v3;
  }
  return swift_task_switch();
}

uint64_t sub_1909525E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(v0 + 320);
  v12 = *(_QWORD *)(v0 + 280);
  v13 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_BYTE *)(v0 + 329);
  v14 = *(_BYTE *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD **)(v0 + 88);
  swift_release();
  v7 = (int *)type metadata accessor for ControlTemplatePicker(0);
  v8 = (uint64_t)v6 + v7[7];
  v9 = sub_190A45FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (_QWORD *)((char *)v6 + v7[11]);
  *v10 = 0;
  v10[1] = 0;
  *v6 = v3;
  v6[1] = v1;
  v6[2] = v2;
  v6[3] = v13;
  v6[4] = v12;
  *((_BYTE *)v6 + v7[8]) = v4;
  sub_1908DCA84(v5, v8, (uint64_t *)&unk_1ECF6C858);
  *((_BYTE *)v6 + v7[9]) = 0;
  *((_BYTE *)v6 + v7[10]) = v14;
  swift_bridgeObjectRelease();
  *v10 = 0;
  v10[1] = 0;
  *((_BYTE *)v6 + v7[12]) = 0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190952708()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190952744()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19095278C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909527C8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190952804()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190952840@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(char *, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t KeyPath;
  void (*v33)(char *, uint64_t (*)(_QWORD, _QWORD), uint64_t);
  uint64_t v34;
  uint64_t v35;
  int v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  uint64_t *v80;
  uint64_t v81;
  char *v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t (*)(_QWORD, _QWORD), uint64_t);
  uint64_t (*v115)(char *, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t (*v120)(char *, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v120 = a3;
  v111 = a4;
  v109 = type metadata accessor for ControlTemplatePicker.Option(0);
  MEMORY[0x1E0C80A78](v109);
  v110 = (uint64_t *)((char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v108 = (uint64_t)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v89 - v11;
  MEMORY[0x1E0C80A78](v10);
  v118 = (uint64_t)&v89 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB690);
  v15 = MEMORY[0x1E0C80A78](v14);
  v106 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v98 = (char *)&v89 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v89 - v19;
  v21 = sub_190A46C30();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_190A47284();
  v95 = *(_QWORD *)(v121 - 8);
  v25 = MEMORY[0x1E0C80A78](v121);
  v105 = (char *)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v94 = (char *)&v89 - v28;
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v89 - v29;
  v117 = *a2;
  v91 = a2[1];
  v31 = a2[3];
  v89 = a2[2];
  v90 = a2[4];
  v104 = a2[5];
  v103 = a2[6];
  v102 = a2[7];
  v101 = a2[8];
  KeyPath = swift_getKeyPath();
  v122 = a1;
  v123 = KeyPath;
  LOBYTE(v124) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA3E8);
  swift_allocObject();
  v112 = a1;
  swift_retain_n();
  v107 = KeyPath;
  swift_retain();
  sub_190A46FF0();
  v93 = v22;
  v33 = *(void (**)(char *, uint64_t (*)(_QWORD, _QWORD), uint64_t))(v22 + 16);
  v116 = v21;
  v114 = v33;
  v33(v24, (uint64_t (*)(_QWORD, _QWORD))v120, v21);
  sub_190A46FA8();
  sub_190A46FCC();
  swift_release();
  v119 = v30;
  sub_190A47194();
  v34 = sub_190A471D0();
  v35 = *(_QWORD *)(v34 - 8);
  v115 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v36 = v115(v20, 1, v34);
  v97 = v35;
  if (v36 == 1)
  {
    sub_1908AA544((uint64_t)v20, &qword_1EE1EB690);
    v100 = 0;
    v99 = 0;
  }
  else
  {
    v37 = (void *)sub_190A471C4();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v20, v34);
    v38 = objc_msgSend(v37, sel_string);

    v100 = sub_190A47ADC();
    v99 = v39;

  }
  sub_190A4726C();
  v40 = sub_190A47260();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48))(v12, 1, v40);
  v43 = v117;
  v44 = (uint64_t)v98;
  v113 = v41;
  if (v42 == 1)
  {
    sub_1908AA544((uint64_t)v12, (uint64_t *)&unk_1ECF6A3B8);
  }
  else
  {
    v45 = sub_190A47254();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v40);
    if ((v45 & 1) != 0)
    {
      sub_190A4726C();
      goto LABEL_9;
    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v113 + 56))(v118, 1, 1, v40);
LABEL_9:
  v46 = v116;
  v96 = v40;
  if (v43)
  {
    sub_190A46C24();
    sub_190A47674();
    v48 = v47;
    v50 = v49;
    v52 = v51;
    v54 = v53;
    (*(void (**)(char *, uint64_t))(v93 + 8))(v24, v46);
    v93 = v48 | ((unint64_t)v50 << 32);
    v92 = v52 | ((unint64_t)v54 << 32);
  }
  else
  {
    v93 = 0;
    v92 = 0;
  }
  v55 = v91;
  v56 = v89;
  v122 = v91;
  v123 = v89;
  v57 = v90;
  v124 = v31;
  v125 = v90;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA3F0);
  swift_allocObject();
  sub_190953E94(v55, v56, v31, v57);
  sub_190953E94(v55, v56, v31, v57);
  sub_190A46FF0();
  v114(v24, (uint64_t (*)(_QWORD, _QWORD))v120, v46);
  sub_190A46FA8();
  v58 = v94;
  sub_190A46FCC();
  swift_release();
  sub_190953EC4(v55, v56, v31, v57);
  sub_190A47194();
  v59 = *(void (**)(char *, uint64_t))(v95 + 8);
  v59(v58, v121);
  if (v115((char *)v44, 1, v34) == 1)
  {
    sub_1908AA544(v44, &qword_1EE1EB690);
    v98 = 0;
    v95 = 0;
  }
  else
  {
    v60 = (void *)sub_190A471C4();
    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v44, v34);
    v61 = objc_msgSend(v60, sel_string);

    v98 = (char *)sub_190A47ADC();
    v95 = v62;

  }
  v63 = (uint64_t)v106;
  v64 = v104;
  v65 = v103;
  v122 = v104;
  v123 = v103;
  v66 = v102;
  v67 = v101;
  v124 = v102;
  v125 = v101;
  swift_allocObject();
  sub_190953E94(v64, v65, v66, v67);
  sub_190953E94(v64, v65, v66, v67);
  sub_190A46FF0();
  v114(v24, (uint64_t (*)(_QWORD, _QWORD))v120, v116);
  sub_190A46FA8();
  v68 = v105;
  sub_190A46FCC();
  swift_release();
  sub_190953EC4(v64, v65, v66, v67);
  sub_190A47194();
  v120 = (uint64_t (*)(char *, uint64_t))v59;
  v59(v68, v121);
  if (v115((char *)v63, 1, v34) == 1)
  {
    sub_1908AA544(v63, &qword_1EE1EB690);
    v116 = 0;
    v69 = 0;
    v70 = v96;
    v71 = v113;
    v72 = v117;
  }
  else
  {
    v73 = (void *)sub_190A471C4();
    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v63, v34);
    v74 = objc_msgSend(v73, sel_string);

    v116 = sub_190A47ADC();
    v69 = v75;

    v72 = v117;
    v70 = v96;
    v71 = v113;
  }
  v76 = v72 == 0;
  v77 = v118;
  v78 = v108;
  sub_19093AF58(v118, v108);
  v79 = (int *)v109;
  v80 = v110;
  v81 = (uint64_t)v110 + *(int *)(v109 + 20);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56))(v81, 1, 1, v70);
  v82 = (char *)v80 + v79[6];
  *(_QWORD *)v82 = 0;
  *((_QWORD *)v82 + 1) = 0;
  v82[16] = 1;
  v83 = (uint64_t *)((char *)v80 + v79[7]);
  *v83 = 0;
  v83[1] = 0;
  v84 = (uint64_t *)((char *)v80 + v79[8]);
  *v84 = 0;
  v84[1] = 0;
  v85 = v99;
  *v80 = v100;
  v80[1] = v85;
  sub_1908DCA84(v78, v81, (uint64_t *)&unk_1ECF6A3B8);
  v86 = v92;
  *(_QWORD *)v82 = v93;
  *((_QWORD *)v82 + 1) = v86;
  v82[16] = v76;
  swift_bridgeObjectRelease();
  v87 = v95;
  *v83 = v98;
  v83[1] = v87;
  swift_bridgeObjectRelease();
  *v84 = v116;
  v84[1] = v69;
  sub_19090AEF8((uint64_t)v80, v111);
  swift_release();
  swift_release();
  sub_1908AA544(v77, (uint64_t *)&unk_1ECF6A3B8);
  return v120(v119, v121);
}

uint64_t sub_1909531A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_190952840(a1, a2, *(uint64_t (**)(char *, uint64_t))(v3 + 24), a3);
}

uint64_t sub_1909531B0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v2[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB690);
  v2[4] = swift_task_alloc();
  v4 = sub_190A46C30();
  v2[5] = v4;
  v2[6] = *(_QWORD *)(v4 - 8);
  v2[7] = swift_task_alloc();
  v5 = sub_190A47284();
  v2[8] = v5;
  v2[9] = *(_QWORD *)(v5 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_190A47D64();
  v2[12] = sub_190A47D58();
  v6 = *(int **)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 176);
  v10 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
  v8 = (_QWORD *)swift_task_alloc();
  v2[13] = v8;
  *v8 = v2;
  v8[1] = sub_1909532A4;
  return v10(v7);
}

uint64_t sub_1909532A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 112) = a1;
  *(_QWORD *)(v3 + 120) = v1;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_190953334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 24);
  swift_release();
  *(_QWORD *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB688);
  swift_allocObject();
  swift_retain();
  sub_190A46FF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v5);
  sub_190A46FA8();
  sub_190A46FCC();
  swift_release();
  sub_190A47194();
  v7 = sub_190A471D0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7);
  v10 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 64);
  v12 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 32);
  if (v9 == 1)
  {
    (*(void (**)(_QWORD, uint64_t))(v12 + 8))(*(_QWORD *)(v0 + 80), v11);
    swift_release();
    sub_1908AA544(v13, &qword_1EE1EB690);
    v14 = 0;
    v15 = 0;
  }
  else
  {
    v16 = (void *)sub_190A471C4();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
    v17 = objc_msgSend(v16, sel_string);

    v14 = sub_190A47ADC();
    v15 = v18;
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v14, v15);
}

uint64_t sub_19095350C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19095356C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[3] = a1;
  v2[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB690);
  v2[5] = swift_task_alloc();
  v3 = sub_190A46C30();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v4 = sub_190A47284();
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = swift_task_alloc();
  sub_190A47D64();
  v2[12] = sub_190A47D58();
  v2[13] = sub_190A47D28();
  v2[14] = v5;
  return swift_task_switch();
}

uint64_t sub_19095364C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(int **)(v1 + 72);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 176);
    v6 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v4;
    *v4 = v0;
    v4[1] = sub_190953704;
    return v6(v3);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
  }
}

uint64_t sub_190953704(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19095376C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 32);
  swift_release();
  *(_QWORD *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB688);
  swift_allocObject();
  swift_retain();
  sub_190A46FF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v5);
  sub_190A46FA8();
  sub_190A46FCC();
  swift_release();
  sub_190A47194();
  v7 = sub_190A471D0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7);
  v10 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 40);
  if (v9 == 1)
  {
    (*(void (**)(_QWORD, uint64_t))(v12 + 8))(*(_QWORD *)(v0 + 88), v11);
    swift_release();
    sub_1908AA544(v13, &qword_1EE1EB690);
    v14 = 0;
    v15 = 0;
  }
  else
  {
    v16 = (void *)sub_190A471C4();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
    v17 = objc_msgSend(v16, sel_string);

    v14 = sub_190A47ADC();
    v15 = v18;
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v14, v15);
}

uint64_t sub_190953940()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19095399C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t *), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t *v57;
  unint64_t v58;
  _QWORD *v59;
  int64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t *);
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v62 = a3;
  v63 = a4;
  v6 = type metadata accessor for ControlTemplatePicker.Option(0);
  v61 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v56 = (uint64_t)&v51 - v10;
  v11 = *(_QWORD *)(a2 + 16);
  v68 = *(_QWORD *)(a1 + 16);
  if (v11 >= v68)
    v12 = v68;
  else
    v12 = v11;
  v80 = MEMORY[0x1E0DEE9D8];
  sub_1908B8D28(0, v12, 0);
  v69 = v80;
  v60 = v12;
  v53 = a1;
  v52 = a2;
  if (v12)
  {
    v59 = (_QWORD *)(a1 + 32);
    v57 = &v71;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v14 = 0;
    v15 = (uint64_t *)(a2 + 48);
    v58 = v11;
    v67 = v9;
    while (v68 != v14)
    {
      if (v14 >= v68)
      {
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      if (v11 == v14)
        break;
      if (v14 >= v11)
        goto LABEL_33;
      v16 = v59[v14];
      v17 = v15[5];
      v66 = v15[6];
      v19 = v15[3];
      v18 = v15[4];
      v21 = v15[1];
      v20 = v15[2];
      v23 = *(v15 - 1);
      v22 = *v15;
      v24 = *(v15 - 2);
      v70 = v16;
      v71 = v24;
      v72 = v23;
      v73 = v22;
      v74 = v21;
      v75 = v20;
      v76 = v19;
      v77 = v18;
      v78 = v17;
      v79 = v66;
      swift_retain();
      swift_retain();
      sub_190953E94(v23, v22, v21, v20);
      result = sub_190953E94(v19, v18, v17, v66);
      if (!v16)
        break;
      v62(v16, v57);
      v25 = v72;
      v26 = v73;
      v27 = v74;
      v28 = v75;
      v29 = v77;
      v65 = v78;
      v66 = v76;
      v64 = v79;
      swift_release();
      swift_release();
      sub_190953EC4(v25, v26, v27, v28);
      sub_190953EC4(v66, v29, v65, v64);
      v30 = v69;
      v80 = v69;
      v32 = *(_QWORD *)(v69 + 16);
      v31 = *(_QWORD *)(v69 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1908B8D28(v31 > 1, v32 + 1, 1);
        v30 = v80;
      }
      ++v14;
      *(_QWORD *)(v30 + 16) = v32 + 1;
      v33 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
      v69 = v30;
      result = sub_19090AEF8((uint64_t)v67, v30 + v33 + *(_QWORD *)(v61 + 72) * v32);
      v15 += 9;
      v11 = v58;
      if (v60 == v14)
        goto LABEL_16;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v14 = 0;
LABEL_16:
    if (v14 <= v68)
      v34 = v68;
    else
      v34 = v14;
    if (v14 <= v11)
      v35 = v11;
    else
      v35 = v14;
    v64 = v68 - v14;
    if (v68 == v14)
    {
LABEL_23:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v69;
    }
    v36 = 0;
    v55 = &v71;
    v57 = (uint64_t *)(v35 - v14);
    v60 = v34 - v14;
    v54 = v53 + 8 * v14 + 32;
    v59 = (_QWORD *)(v11 - v14);
    v37 = (uint64_t *)(v52 + 72 * v14 + 48);
    while (v60 != v36)
    {
      if (v59 == (_QWORD *)v36)
        goto LABEL_23;
      if (v57 == (uint64_t *)v36)
        goto LABEL_35;
      v38 = *(_QWORD *)(v54 + 8 * v36);
      v39 = v37[5];
      v40 = v37[6];
      v67 = (char *)v39;
      v68 = v36;
      v41 = v37[3];
      v42 = v37[4];
      v44 = v37[1];
      v43 = v37[2];
      v45 = *(v37 - 1);
      v46 = *v37;
      v65 = *(v37 - 2);
      v66 = v43;
      v70 = v38;
      v71 = v65;
      v72 = v45;
      v73 = v46;
      v74 = v44;
      v75 = v43;
      v76 = v41;
      v77 = v42;
      v78 = v39;
      v79 = v40;
      swift_retain();
      swift_retain();
      sub_190953E94(v45, v46, v44, v43);
      sub_190953E94(v41, v42, v39, v40);
      v62(v38, v55);
      swift_release();
      swift_release();
      sub_190953EC4(v45, v46, v44, v66);
      sub_190953EC4(v41, v42, (char)v67, v40);
      v47 = v69;
      v80 = v69;
      v49 = *(_QWORD *)(v69 + 16);
      v48 = *(_QWORD *)(v69 + 24);
      if (v49 >= v48 >> 1)
      {
        sub_1908B8D28(v48 > 1, v49 + 1, 1);
        v47 = v80;
      }
      *(_QWORD *)(v47 + 16) = v49 + 1;
      v50 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
      v69 = v47;
      result = sub_19090AEF8(v56, v47 + v50 + *(_QWORD *)(v61 + 72) * v49);
      v36 = v68 + 1;
      v37 += 9;
      if (v64 == v68 + 1)
        goto LABEL_23;
    }
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_190953E94(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_190950F28(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_190953EC4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_19090D1C4(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_190953EF4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46BF4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_190953F20()
{
  return sub_190A46C00();
}

uint64_t sub_190953F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v14[2];

  v6 = sub_190A48148();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v14 - v8;
  v14[1] = a1;
  sub_190A4885C();
  swift_retain();
  v10 = swift_dynamicCast();
  v11 = *(_QWORD *)(a2 - 8);
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if ((v10 & 1) != 0)
  {
    v12(v9, 0, 1, a2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v9, a2);
  }
  else
  {
    v12(v9, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_19094B7C0();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_190954094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;

  v6[13] = a4;
  v6[14] = a6;
  v6[12] = a1;
  v6[15] = *(_QWORD *)(a6 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[16] = AssociatedTypeWitness;
  v6[17] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6[18] = swift_task_alloc();
  v6[19] = *(_QWORD *)(a4 - 8);
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_190954144()
{
  uint64_t v0;
  _QWORD *v1;

  sub_190A45C58();
  swift_getAssociatedConformanceWitness();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v1;
  *v1 = v0;
  v1[1] = sub_1909541E0;
  return sub_190A45D90();
}

uint64_t sub_1909541E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_190954264()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 16))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 104));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED7A8);
  if (swift_dynamicCast())
  {
    sub_1908B4BBC((__int128 *)(v0 + 56), v0 + 16);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v1;
    *v1 = v0;
    v1[1] = sub_1909543B8;
    return sub_190A45DA8();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 168);
    v4 = *(_QWORD *)(v0 + 152);
    v6 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 104);
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    *(_QWORD *)(v0 + 88) = 0;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    sub_190954800(v0 + 56);
    v7 = sub_190A45FC4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1909543B8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19095440C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 104));
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190954474()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909544BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v1 + 32);
  return swift_task_switch();
}

uint64_t sub_1909544DC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD);

  v3 = (uint64_t (*)(_QWORD))(**(int **)(v0 + 24) + *(_QWORD *)(v0 + 24));
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_190954544;
  return v3(*(_QWORD *)(v0 + 16));
}

uint64_t sub_190954544()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1909545A8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909545DC()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190954610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[4] = a4;
  v5[5] = v4;
  v5[2] = a1;
  v5[3] = a3;
  return swift_task_switch();
}

uint64_t sub_19095462C()
{
  _QWORD *v0;
  int *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD);

  v1 = (int *)(*(uint64_t (**)(_QWORD))(v0[4] + 8))(v0[3]);
  v0[6] = v2;
  v5 = (uint64_t (*)(_QWORD))((char *)v1 + *v1);
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = v3;
  *v3 = v0;
  v3[1] = sub_1909546A0;
  return v5(v0[2]);
}

uint64_t sub_1909546A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_190954704()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190954738()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_19095476C()
{
  return 0xD000000000000038;
}

uint64_t sub_190954788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_1908C5090;
  v7[4] = &off_1E2CC4FC0;
  v7[5] = v3;
  v7[2] = a1;
  v7[3] = a3;
  return swift_task_switch();
}

uint64_t sub_190954800(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED7B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s9AppEntityOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_190954880 + 4 * byte_190A510E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1909548A0 + 4 * byte_190A510E5[v4]))();
}

_BYTE *sub_190954880(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1909548A0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1909548A8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1909548B0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1909548B8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1909548C0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s9AppEntityOMa()
{
  return &_s9AppEntityON;
}

unint64_t sub_1909548E4()
{
  unint64_t result;

  result = qword_1EE1ED7B8;
  if (!qword_1EE1ED7B8)
  {
    result = MEMORY[0x19401429C](&unk_190A51194, &_s9AppEntityON);
    atomic_store(result, (unint64_t *)&qword_1EE1ED7B8);
  }
  return result;
}

uint64_t sub_190954928(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char **v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = a1;
  v24 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_19;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_190A48484())
  {
    v3 = v1 & 0xC000000000000001;
    v4 = 4;
    v5 = &off_1E2CDA000;
    v20 = v1 & 0xC000000000000001;
    v21 = v1;
    while (1)
    {
      v6 = v3 ? (id)MEMORY[0x194013510](v4 - 4, v1) : *(id *)(v1 + 8 * v4);
      v7 = v6;
      v8 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      if (objc_msgSend(v6, v5[83]))
      {
        sub_190A48358();
        sub_190A48388();
        sub_190A48394();
        sub_190A48364();
      }
      else
      {
        if (qword_1ECF6D3D8 != -1)
          swift_once();
        v9 = sub_190A465A0();
        __swift_project_value_buffer(v9, (uint64_t)qword_1ECF6D988);
        v10 = v7;
        v11 = sub_190A46588();
        v12 = sub_190A47F68();
        if (os_log_type_enabled(v11, v12))
        {
          v13 = swift_slowAlloc();
          v22 = swift_slowAlloc();
          v23 = v22;
          *(_DWORD *)v13 = 136446210;
          v14 = v2;
          v15 = objc_msgSend(v10, sel_extensionBundleIdentifier);
          v16 = sub_190A47ADC();
          v18 = v17;

          v2 = v14;
          *(_QWORD *)(v13 + 4) = sub_1908B35C4(v16, v18, &v23);

          v3 = v20;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1908A7000, v11, v12, "Descriptor from %{public}s has no supportedFamilies", (uint8_t *)v13, 0xCu);
          swift_arrayDestroy();
          v1 = v21;
          MEMORY[0x194014398](v22, -1, -1);
          MEMORY[0x194014398](v13, -1, -1);

        }
        else
        {

        }
        v5 = &off_1E2CDA000;
      }
      ++v4;
      if (v8 == v2)
      {
        swift_bridgeObjectRelease();
        return v24;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t DescriptorFetchResult.controlDescriptors.getter()
{
  return swift_bridgeObjectRetain();
}

id DescriptorFetchResult.__allocating_init(widgetDescriptors:activityDescriptors:controlDescriptors:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  uint64_t v8;
  objc_super v10;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = sub_190954928(a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_widgetDescriptors] = v8;
  *(_QWORD *)&v7[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_activityDescriptors] = a2;
  *(_QWORD *)&v7[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_controlDescriptors] = a3;

  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

id DescriptorFetchResult.init(widgetDescriptors:activityDescriptors:controlDescriptors:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  char *v7;
  uint64_t v8;
  objc_super v10;

  v7 = v3;
  v8 = sub_190954928(a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_widgetDescriptors] = v8;
  *(_QWORD *)&v7[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_activityDescriptors] = a2;
  *(_QWORD *)&v7[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_controlDescriptors] = a3;

  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for DescriptorFetchResult();
  return objc_msgSendSuper2(&v10, sel_init);
}

id DescriptorFetchResult.__allocating_init(widgetDescriptors:controlDescriptors:)(unint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  uint64_t v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = sub_190954928(a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v5[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_widgetDescriptors] = v6;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_controlDescriptors] = a2;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_activityDescriptors] = MEMORY[0x1E0DEE9D8];

  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id DescriptorFetchResult.init(widgetDescriptors:controlDescriptors:)(unint64_t a1, uint64_t a2)
{
  void *v2;
  char *v5;
  uint64_t v6;
  objc_super v8;

  v5 = v2;
  v6 = sub_190954928(a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v5[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_widgetDescriptors] = v6;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_controlDescriptors] = a2;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_activityDescriptors] = MEMORY[0x1E0DEE9D8];

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for DescriptorFetchResult();
  return objc_msgSendSuper2(&v8, sel_init);
}

unint64_t sub_190954E74(char a1)
{
  unint64_t result;

  result = 0xD000000000000011;
  if (a1)
  {
    if (a1 == 1)
      return 0xD000000000000012;
    else
      return 0xD000000000000013;
  }
  return result;
}

uint64_t sub_190954ED0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_190A272FC(*a1, *a2);
}

uint64_t sub_190954EDC()
{
  return sub_190A27D34();
}

uint64_t sub_190954EE4()
{
  return sub_190A28038();
}

uint64_t sub_190954EEC()
{
  return sub_190A28240();
}

uint64_t sub_190954EF4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190955540();
  *a1 = result;
  return result;
}

unint64_t sub_190954F20@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = sub_190954E74(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_190954F48()
{
  char *v0;

  return sub_190954E74(*v0);
}

uint64_t sub_190954F50@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190955540();
  *a1 = result;
  return result;
}

uint64_t sub_190954F74()
{
  sub_190955EA8();
  return sub_190A48868();
}

uint64_t sub_190954F9C()
{
  sub_190955EA8();
  return sub_190A48874();
}

_QWORD *DescriptorFetchResult.__allocating_init(from:)(_QWORD *a1)
{
  return sub_190955588(a1);
}

uint64_t sub_190954FD8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  unint64_t v33;
  unint64_t v34;
  void *v35;
  void *v36;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  char v44;
  id v45;
  unint64_t v46;
  uint64_t v47;

  v3 = v2;
  v4 = v1;
  v47 = *MEMORY[0x1E0C80C00];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED7D8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190955EA8();
  sub_190A48850();
  v10 = (void *)objc_opt_self();
  v43 = v4;
  sub_1908AB890(0, &qword_1ECF6D250);
  v11 = (void *)sub_190A47C50();
  v45 = 0;
  v42 = v10;
  v12 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v11, 1, &v45);

  v13 = v45;
  if (v12)
  {
    v14 = (void *)sub_190A46000();
    v16 = v15;

  }
  else
  {
    v17 = v13;
    v18 = (void *)sub_190A45F58();

    swift_willThrow();
    v14 = 0;
    v3 = 0;
    v16 = 0xF000000000000000;
  }
  v45 = v14;
  v46 = v16;
  v44 = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1ED7F0);
  sub_190955EEC();
  sub_190A48640();
  if (v3)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v19 = (uint64_t)v14;
    v20 = v16;
  }
  else
  {
    v40 = v16;
    v41 = v7;
    sub_1908AB890(0, qword_1ECF6A8E8);
    v21 = (void *)sub_190A47C50();
    v45 = 0;
    v22 = objc_msgSend(v42, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v21, 1, &v45);

    v23 = v45;
    if (v22)
    {
      v24 = (void *)sub_190A46000();
      v26 = v25;

    }
    else
    {
      v27 = v23;
      v28 = (void *)sub_190A45F58();

      swift_willThrow();
      v24 = 0;
      v26 = 0xF000000000000000;
    }
    v45 = v24;
    v46 = v26;
    v44 = 1;
    sub_190A48640();
    v38 = (uint64_t)v24;
    v39 = v26;
    sub_1908AB890(0, &qword_1ECF6B010);
    v29 = (void *)sub_190A47C50();
    v45 = 0;
    v30 = objc_msgSend(v42, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v29, 1, &v45);

    v31 = v45;
    if (v30)
    {
      v32 = (void *)sub_190A46000();
      v34 = v33;

    }
    else
    {
      v35 = v31;
      v36 = (void *)sub_190A45F58();

      swift_willThrow();
      v32 = 0;
      v34 = 0xF000000000000000;
    }
    v45 = v32;
    v46 = v34;
    v44 = 2;
    sub_190A48640();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v6);
    sub_1908CE500(v38, v39);
    sub_1908CE500((uint64_t)v14, v40);
    v19 = (uint64_t)v32;
    v20 = v34;
  }
  return sub_1908CE500(v19, v20);
}

id DescriptorFetchResult.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return DescriptorFetchResult.init(coder:)(a1);
}

id DescriptorFetchResult.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DescriptorFetchResult.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DescriptorFetchResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DescriptorFetchResult();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_QWORD *sub_1909554F8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_190955588(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_190955520(_QWORD *a1)
{
  return sub_190954FD8(a1);
}

uint64_t sub_190955540()
{
  unint64_t v0;

  v0 = sub_190A484F0();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

_QWORD *sub_190955588(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  void *v19;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  objc_class *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  objc_super v72;
  uint64_t v73;
  unint64_t v74;
  char v75;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED878);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v71 = a1;
  v8 = __swift_project_boxed_opaque_existential_1(a1, v7);
  v9 = sub_190955EA8();
  sub_190A48838();
  if (!v1)
  {
    v70 = v4;
    v75 = 0;
    sub_19091BF34();
    sub_190A48580();
    v69 = v6;
    v11 = v73;
    v10 = v74;
    v12 = sub_1908AB890(0, (unint64_t *)&unk_1ECF6A620);
    v13 = sub_1908AB890(0, &qword_1ECF6D250);
    v67 = v10;
    v68 = v11;
    v14 = sub_190A47FBC();
    v66 = v12;
    if (v14)
    {
      v21 = v14;
      v75 = 1;
      sub_190A48580();
      v29 = v73;
      v28 = v74;
      v30 = sub_1908AB890(0, qword_1ECF6A8E8);
      v64 = v29;
      v65 = v28;
      v31 = sub_190A47FBC();
      v37 = v31;
      if (v31)
      {
        v75 = 2;
        sub_190A48580();
        v44 = v73;
        v45 = v74;
        v46 = sub_1908AB890(0, &qword_1ECF6B010);
        v62 = v45;
        v63 = v44;
        v47 = sub_190A47FBC();
        v53 = v47;
        if (v47)
        {
          v54 = (objc_class *)type metadata accessor for DescriptorFetchResult();
          v55 = (char *)objc_allocWithZone(v54);
          v56 = sub_190954928(v21);
          swift_bridgeObjectRelease();
          *(_QWORD *)&v55[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_widgetDescriptors] = v56;
          *(_QWORD *)&v55[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_activityDescriptors] = v53;
          *(_QWORD *)&v55[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_controlDescriptors] = v37;

          v72.receiver = v55;
          v72.super_class = v54;
          v8 = objc_msgSendSuper2(&v72, sel_init);
          sub_1908B53FC(v63, v62);
          sub_1908B53FC(v64, v65);
          sub_1908B53FC(v68, v67);
          (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v3);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
          return v8;
        }
        v66 = v3;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v57 = sub_190A4831C();
        v8 = (_QWORD *)swift_allocError();
        v59 = v58;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90);
        *v59 = v46;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE40);
        v60 = swift_allocObject();
        *(_OWORD *)(v60 + 16) = xmmword_190A4A350;
        *(_QWORD *)(v60 + 56) = &type metadata for DescriptorFetchResult.CodingKeys;
        *(_QWORD *)(v60 + 64) = v9;
        *(_BYTE *)(v60 + 32) = 2;
        sub_190A48304();
        v61 = *MEMORY[0x1E0DEC460];
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 104))(v59, v61, v57);
        swift_willThrow();
        v48 = sub_190A4831C();
        swift_allocError();
        v50 = v49;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90);
        *v50 = v46;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE40);
        v51 = swift_allocObject();
        *(_OWORD *)(v51 + 16) = xmmword_190A4A350;
        *(_QWORD *)(v51 + 56) = &type metadata for DescriptorFetchResult.CodingKeys;
        *(_QWORD *)(v51 + 64) = v9;
        *(_BYTE *)(v51 + 32) = 2;
        v52 = v8;
        sub_190A48304();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 104))(v50, v61, v48);
        swift_willThrow();
        sub_1908B53FC(v63, v62);
      }
      else
      {
        v66 = v3;
        swift_bridgeObjectRelease();
        v38 = sub_190A4831C();
        v39 = swift_allocError();
        v41 = v40;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90);
        *v41 = v30;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE40);
        v42 = swift_allocObject();
        *(_OWORD *)(v42 + 16) = xmmword_190A4A350;
        *(_QWORD *)(v42 + 56) = &type metadata for DescriptorFetchResult.CodingKeys;
        *(_QWORD *)(v42 + 64) = v9;
        *(_BYTE *)(v42 + 32) = 1;
        sub_190A48304();
        v43 = *MEMORY[0x1E0DEC460];
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v41, v43, v38);
        v8 = (_QWORD *)v39;
        swift_willThrow();
        v32 = sub_190A4831C();
        swift_allocError();
        v34 = v33;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90);
        *v34 = v30;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE40);
        v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_190A4A350;
        *(_QWORD *)(v35 + 56) = &type metadata for DescriptorFetchResult.CodingKeys;
        *(_QWORD *)(v35 + 64) = v9;
        *(_BYTE *)(v35 + 32) = 1;
        v36 = v8;
        sub_190A48304();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, v43, v32);
        swift_willThrow();
      }
      sub_1908B53FC(v64, v65);
      sub_1908B53FC(v68, v67);
      v19 = v8;
    }
    else
    {
      v66 = v3;
      v22 = sub_190A4831C();
      v23 = (void *)swift_allocError();
      v25 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90);
      *v25 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE40);
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_190A4A350;
      *(_QWORD *)(v26 + 56) = &type metadata for DescriptorFetchResult.CodingKeys;
      *(_QWORD *)(v26 + 64) = v9;
      *(_BYTE *)(v26 + 32) = 0;
      sub_190A48304();
      v27 = *MEMORY[0x1E0DEC460];
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v25, v27, v22);
      swift_willThrow();
      v15 = sub_190A4831C();
      swift_allocError();
      v8 = v16;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90);
      *v8 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE40);
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_190A4A350;
      *(_QWORD *)(v17 + 56) = &type metadata for DescriptorFetchResult.CodingKeys;
      *(_QWORD *)(v17 + 64) = v9;
      *(_BYTE *)(v17 + 32) = 0;
      v18 = v23;
      sub_190A48304();
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v8, v27, v15);
      swift_willThrow();
      sub_1908B53FC(v68, v67);
      v19 = v23;
    }

    (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v66);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
  return v8;
}

unint64_t sub_190955EA8()
{
  unint64_t result;

  result = qword_1EE1ED7E0;
  if (!qword_1EE1ED7E0)
  {
    result = MEMORY[0x19401429C](&unk_190A51394, &type metadata for DescriptorFetchResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ED7E0);
  }
  return result;
}

unint64_t sub_190955EEC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EE1EE920;
  if (!qword_1EE1EE920)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE1ED7F0);
    v2 = sub_19091C084();
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EE920);
  }
  return result;
}

uint64_t method lookup function for DescriptorFetchResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static DescriptorFetchResult.supportsSecureCoding.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of DescriptorFetchResult.__allocating_init(widgetDescriptors:activityDescriptors:controlDescriptors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of DescriptorFetchResult.__allocating_init(widgetDescriptors:controlDescriptors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of DescriptorFetchResult.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of DescriptorFetchResult.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of DescriptorFetchResult.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DescriptorFetchResult.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t storeEnumTagSinglePayload for DescriptorFetchResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190956028 + 4 * byte_190A51205[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19095605C + 4 * byte_190A51200[v4]))();
}

uint64_t sub_19095605C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190956064(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19095606CLL);
  return result;
}

uint64_t sub_190956078(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190956080);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190956084(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19095608C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DescriptorFetchResult.CodingKeys()
{
  return &type metadata for DescriptorFetchResult.CodingKeys;
}

unint64_t sub_1909560AC()
{
  unint64_t result;

  result = qword_1EE1ED860;
  if (!qword_1EE1ED860)
  {
    result = MEMORY[0x19401429C](&unk_190A5136C, &type metadata for DescriptorFetchResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ED860);
  }
  return result;
}

unint64_t sub_1909560F4()
{
  unint64_t result;

  result = qword_1EE1ED868;
  if (!qword_1EE1ED868)
  {
    result = MEMORY[0x19401429C](&unk_190A512A4, &type metadata for DescriptorFetchResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ED868);
  }
  return result;
}

unint64_t sub_19095613C()
{
  unint64_t result;

  result = qword_1EE1ED870;
  if (!qword_1EE1ED870)
  {
    result = MEMORY[0x19401429C](&unk_190A512CC, &type metadata for DescriptorFetchResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ED870);
  }
  return result;
}

uint64_t dispatch thunk of ControlPushHandler.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ControlPushHandler.pushTokensDidChange(controls:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of WidgetRelevanceProvider.relevances()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1908C5090;
  return v9(a1, a2, a3);
}

uint64_t sub_19095620C()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D758 = result;
  return result;
}

uint64_t sub_190956230()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B538);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D740 = v0;
  *(_QWORD *)algn_1ECF6D748 = 0xD000000000000013;
  qword_1ECF6D750 = 0x8000000190A60D80;
  return result;
}

ValueMetadata *type metadata accessor for ColorSchemeContrastKey()
{
  return &type metadata for ColorSchemeContrastKey;
}

unint64_t sub_1909562B8()
{
  unint64_t result;

  result = qword_1ECF6B678;
  if (!qword_1ECF6B678)
  {
    result = MEMORY[0x19401429C](&unk_190A51504, &type metadata for ColorSchemeContrastKey.CodableColorSchemeContrast);
    atomic_store(result, (unint64_t *)&qword_1ECF6B678);
  }
  return result;
}

unint64_t sub_190956300()
{
  unint64_t result;

  result = qword_1ECF6B690;
  if (!qword_1ECF6B690)
  {
    result = MEMORY[0x19401429C](&unk_190A514DC, &type metadata for ColorSchemeContrastKey.CodableColorSchemeContrast);
    atomic_store(result, (unint64_t *)&qword_1ECF6B690);
  }
  return result;
}

unint64_t sub_190956348()
{
  unint64_t result;

  result = qword_1ECF6B670;
  if (!qword_1ECF6B670)
  {
    result = MEMORY[0x19401429C](&unk_190A514B4, &type metadata for ColorSchemeContrastKey.CodableColorSchemeContrast);
    atomic_store(result, (unint64_t *)&qword_1ECF6B670);
  }
  return result;
}

uint64_t sub_19095638C(char *a1, char *a2)
{
  return sub_190A27254(*a1, *a2);
}

uint64_t sub_190956398()
{
  sub_190A487C0();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_19095641C()
{
  sub_190A47B18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19095647C()
{
  sub_190A487C0();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_1909564FC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_190A484F0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_190956558(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6573616572636E69;
  if (*v1)
    v2 = 0x647261646E617473;
  v3 = 0xE900000000000064;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_19095659C()
{
  sub_1909568AC();
  return sub_190A47C2C();
}

uint64_t sub_1909565F8()
{
  sub_1909568AC();
  return sub_190A47C14();
}

uint64_t sub_190956644(char *a1, char *a2)
{
  return sub_190956804(*a1, *a2);
}

uint64_t sub_190956650(char *a1, char *a2)
{
  return sub_1909FF5C4(*a1, *a2);
}

uint64_t sub_19095665C(char *a1, char *a2)
{
  return sub_1909FFB30(*a1, *a2);
}

uint64_t sub_190956668(char *a1, char *a2)
{
  return sub_1909FFE20(*a1, *a2);
}

uint64_t sub_190956674()
{
  if (qword_1ECF6B6A0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1909566B4@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  uint64_t v4;
  unsigned int *v5;

  v3 = *a1;
  v4 = sub_190A46E94();
  v5 = (unsigned int *)MEMORY[0x1E0CDB2D0];
  if (!v3)
    v5 = (unsigned int *)MEMORY[0x1E0CDB2D8];
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a2, *v5, v4);
}

uint64_t sub_19095671C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1909568F0(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_190956748()
{
  uint64_t v0;

  if (qword_1ECF6B668 != -1)
    swift_once();
  v0 = qword_1ECF6D740;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1909567C0()
{
  unint64_t result;

  result = qword_1ECF6B680;
  if (!qword_1ECF6B680)
  {
    result = MEMORY[0x19401429C](&unk_190A5154C, &type metadata for ColorSchemeContrastKey.CodableColorSchemeContrast);
    atomic_store(result, (unint64_t *)&qword_1ECF6B680);
  }
  return result;
}

uint64_t sub_190956804(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x647261646E617473;
  else
    v3 = 0x6573616572636E69;
  if (v2)
    v4 = 0xE900000000000064;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x647261646E617473;
  else
    v5 = 0x6573616572636E69;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE900000000000064;
  if (v3 == v5 && v4 == v6)
    v7 = 0;
  else
    v7 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

unint64_t sub_1909568AC()
{
  unint64_t result;

  result = qword_1ECF6B688;
  if (!qword_1ECF6B688)
  {
    result = MEMORY[0x19401429C](&unk_190A5160C, &type metadata for ColorSchemeContrastKey.CodableColorSchemeContrast);
    atomic_store(result, (unint64_t *)&qword_1ECF6B688);
  }
  return result;
}

uint64_t sub_1909568F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *, uint64_t, uint64_t);
  int v7;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t v16[6];

  v2 = sub_190A46E94();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v6(v5, a1, v2);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v7 == *MEMORY[0x1E0CDB2D0] || v7 == *MEMORY[0x1E0CDB2D8])
    return v7 == *MEMORY[0x1E0CDB2D0];
  v16[3] = v2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  v6((char *)boxed_opaque_existential_1, a1, v2);
  v10 = sub_190A48334();
  swift_allocError();
  v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1ED3B8);
  sub_1908B3694((uint64_t)v16, v12);
  v15[0] = sub_190A482C8();
  v15[1] = v13;
  sub_190A47B3C();
  v16[5] = 36;
  sub_190A4867C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A48304();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v12, *MEMORY[0x1E0DEC4B0], v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t storeEnumTagSinglePayload for ColorSchemeContrastKey.CodableColorSchemeContrast(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190956B30 + 4 * byte_190A51465[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190956B64 + 4 * byte_190A51460[v4]))();
}

uint64_t sub_190956B64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190956B6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190956B74);
  return result;
}

uint64_t sub_190956B80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190956B88);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190956B8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190956B94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ColorSchemeContrastKey.CodableColorSchemeContrast()
{
  return &type metadata for ColorSchemeContrastKey.CodableColorSchemeContrast;
}

uint64_t sub_190956BB0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1908C5090;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t TimelineProvider.relevances()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_190956C28()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190956C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1908CEB54;
  v7[3] = a1;
  v10 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(a3 + 48) + *(_QWORD *)(a3 + 48));
  v8 = (_QWORD *)swift_task_alloc();
  v7[4] = v8;
  *v8 = v7;
  v8[1] = sub_190956D60;
  return v10(v7 + 2, a2, a3);
}

uint64_t TimelineProvider.relevance()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v3 + 24) = a1;
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 48) + *(_QWORD *)(a3 + 48));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 32) = v6;
  *v6 = v3;
  v6[1] = sub_190956D60;
  return v8(v3 + 16, a2, a3);
}

uint64_t sub_190956D60()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_190956DB4()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 24) = *(_QWORD *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t dispatch thunk of TimelineProvider.placeholder(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of TimelineProvider.getSnapshot(in:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of TimelineProvider.getTimeline(in:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of TimelineProvider.relevances()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 48) + *(_QWORD *)(a3 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1908CEB54;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of TimelineProvider.relevance()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 56) + *(_QWORD *)(a3 + 56));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1908CEB54;
  return v9(a1, a2, a3);
}

uint64_t sub_190956ED4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, double a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _DWORD *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int *v25;
  void *v26;
  uint64_t result;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  _QWORD aBlock[6];

  v7 = v6;
  v33 = a4;
  v34 = a2;
  v35 = a3;
  v32 = a1;
  v10 = sub_190A4798C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_190A460CC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UnfairLock();
  v18 = swift_allocObject();
  v19 = (_DWORD *)swift_slowAlloc();
  *v19 = 0;
  *(_QWORD *)(v18 + 16) = v19;
  v7[4] = v18;
  sub_190A460C0();
  sub_190A46090();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v20 = objc_allocWithZone(MEMORY[0x1E0D01720]);
  v21 = (void *)sub_190A47AC4();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v20, sel_initWithIdentifier_, v21);

  v23 = v33;
  v7[5] = v22;
  v7[6] = v23;
  v7[7] = a5;
  v24 = v34;
  v7[2] = v32;
  v7[3] = v24;
  v25 = (unsigned int *)MEMORY[0x1E0DEF530];
  if ((v35 & 1) == 0)
    v25 = (unsigned int *)MEMORY[0x1E0DEF540];
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *v25, v10);
  sub_1908B45BC();
  swift_retain();
  v26 = (void *)sub_190A48028();
  result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v7[8] = v26;
  v28 = (void *)v7[5];
  if (v28)
  {
    aBlock[4] = sub_1909575CC;
    aBlock[5] = v7;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1908AA2A4;
    aBlock[3] = &block_descriptor_0;
    v29 = _Block_copy(aBlock);
    v30 = v28;
    v31 = v26;
    swift_retain();
    swift_release();
    objc_msgSend(v30, sel_scheduleWithFireInterval_leewayInterval_queue_handler_, v31, v29, a6, 0.0);
    swift_release();
    _Block_release(v29);

    return (uint64_t)v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for CompletionOrWatchdogWrapper()
{
  return objc_opt_self();
}

void sub_190957188(void (*a1)(void))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v2 = v1;
  if (sub_19095735C())
  {
    if (qword_1EE1E5E28 != -1)
      swift_once();
    v4 = sub_190A465A0();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EE1FD688);
    swift_retain();
    v5 = sub_190A46588();
    v6 = sub_190A47F68();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v11 = v8;
      *(_DWORD *)v7 = 136446210;
      v9 = *(_QWORD *)(v2 + 16);
      v10 = *(_QWORD *)(v2 + 24);
      swift_bridgeObjectRetain();
      sub_1908B35C4(v9, v10, &v11);
      sub_190A48178();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1908A7000, v5, v6, "[%{public}s] Original request finally completed, but it had already watchdogged.", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v8, -1, -1);
      MEMORY[0x194014398](v7, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
  else
  {
    a1();
  }
}

BOOL sub_19095735C()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  void *v3;
  id v4;
  void *v5;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  v3 = *(void **)(v0 + 40);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v4, sel_cancel);
    objc_msgSend(v4, sel_invalidate);

    v5 = *(void **)(v0 + 40);
    *(_QWORD *)(v0 + 40) = 0;

  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  return v3 == 0;
}

void sub_1909573F0(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (sub_19095735C())
  {
    if (qword_1EE1E5E28 != -1)
      swift_once();
    v4 = sub_190A465A0();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EE1FD688);
    swift_retain();
    v5 = sub_190A46588();
    v6 = sub_190A47F68();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v11 = v8;
      *(_DWORD *)v7 = 136446210;
      v9 = *(_QWORD *)(a1 + 16);
      v10 = *(_QWORD *)(a1 + 24);
      swift_bridgeObjectRetain();
      sub_1908B35C4(v9, v10, &v11);
      sub_190A48178();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1908A7000, v5, v6, "[%{public}s] Original request finally completed, but it had already watchdogged.", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v8, -1, -1);
      MEMORY[0x194014398](v7, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
  else
  {
    a2(0);
  }
}

uint64_t sub_1909575CC()
{
  uint64_t v0;
  uint64_t result;

  result = sub_19095735C();
  if ((result & 1) == 0)
    return (*(uint64_t (**)(void))(v0 + 48))();
  return result;
}

void *sub_1909575F4()
{
  qword_1EE1ED8B8 = (uint64_t)&unk_1EE203418;
  return &unk_1EE203418;
}

id static ControlCenterXPCDefinition.clientInterface.getter()
{
  return sub_1909576A8(&qword_1EE1EC500, (id *)&qword_1EE1ED8B8);
}

void *sub_190957624()
{
  qword_1EE1ED8C0 = (uint64_t)&unk_1EE205178;
  return &unk_1EE205178;
}

id static ControlCenterXPCDefinition.serverInterface.getter()
{
  return sub_1909576A8(&qword_1EE1EC508, (id *)&qword_1EE1ED8C0);
}

id sub_190957654()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_userInteractive);
  qword_1EE1ED8C8 = (uint64_t)result;
  return result;
}

id static ControlCenterXPCDefinition.qos.getter()
{
  return sub_1909576A8(&qword_1EE1EC510, (id *)&qword_1EE1ED8C8);
}

id sub_1909576A8(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

unint64_t static ControlCenterXPCDefinition.domain.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t static ControlCenterXPCDefinition.serviceName.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t static ControlCenterXPCDefinition.machServiceName.getter()
{
  return 0xD00000000000001ELL;
}

ValueMetadata *type metadata accessor for ControlCenterXPCDefinition()
{
  return &type metadata for ControlCenterXPCDefinition;
}

uint64_t sub_190957744@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v3 = sub_190A47CBC();
  *(_QWORD *)(v3 + 16) = 1024;
  v4 = v3 + 32;
  bzero((void *)(v3 + 32), 0x400uLL);
  if (MEMORY[0x1940117DC](objc_msgSend(v1, sel_fileDescriptor), 50, v4) == -1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  sub_190A47AB8();
  v6 = v5;
  swift_bridgeObjectRelease();
  if (!v6)
  {
LABEL_5:
    v7 = sub_190A45FC4();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 1;
    return v8(v9, v10, 1, v7);
  }
  sub_190A45F88();
  swift_bridgeObjectRelease();
  v7 = sub_190A45FC4();
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v9 = a1;
  v10 = 0;
  return v8(v9, v10, 1, v7);
}

double sub_19095783C@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 56) = 1;
  return result;
}

uint64_t sub_19095785C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char v7;

  sub_19093FEF0();
  result = sub_190A46C3C();
  if ((v7 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    *(_OWORD *)a1 = v3;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = v5;
    *(_QWORD *)(a1 + 48) = v6;
  }
  return result;
}

uint64_t sub_1909578C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t result;

  if ((a8 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_1909578D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t result;

  if ((a8 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t type metadata accessor for DynamicIslandExpandedContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DynamicIslandExpandedContainer);
}

uint64_t sub_190957908()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_190957980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 57) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
    swift_retain();
  }
  else
  {
    v19 = *(_QWORD *)(a3 + 16);
    v10 = *(_QWORD *)a2;
    v11 = *(_QWORD *)(a2 + 8);
    v12 = *(_QWORD *)(a2 + 16);
    v13 = *(_QWORD *)(a2 + 24);
    v14 = *(_QWORD *)(a2 + 32);
    v15 = *(_QWORD *)(a2 + 40);
    v17 = *(_QWORD *)(a2 + 48);
    v18 = *(_BYTE *)(a2 + 56);
    sub_1909578C8(*(_QWORD *)a2, v11, v12, v13, v14, v15, v17, v18);
    *(_QWORD *)a1 = v10;
    *(_QWORD *)(a1 + 8) = v11;
    *(_QWORD *)(a1 + 16) = v12;
    *(_QWORD *)(a1 + 24) = v13;
    *(_QWORD *)(a1 + 32) = v14;
    *(_QWORD *)(a1 + 40) = v15;
    *(_QWORD *)(a1 + 48) = v17;
    *(_BYTE *)(a1 + 56) = v18;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))((a1 + v6 + 57) & ~v6, (a2 + v6 + 57) & ~v6, v19);
  }
  return a1;
}

uint64_t sub_190957AA4(uint64_t a1, uint64_t a2)
{
  sub_1909578D8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_190957AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_BYTE *)(a2 + 56);
  sub_1909578C8(*(_QWORD *)a2, v6, v7, v8, v9, v10, v11, v12);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 56) = v12;
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 16))((*(unsigned __int8 *)(v13 + 80) + 57 + a1) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(unsigned __int8 *)(v13 + 80) + 57 + a2) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_190957BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_BYTE *)(a2 + 56);
  sub_1909578C8(*(_QWORD *)a2, v6, v7, v8, v9, v10, v11, v12);
  v13 = *(_QWORD *)a1;
  v14 = *(_QWORD *)(a1 + 8);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(_QWORD *)(a1 + 48);
  v20 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 56) = v12;
  sub_1909578D8(v13, v14, v15, v16, v17, v18, v19, v20);
  v21 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v21 + 24))((*(unsigned __int8 *)(v21 + 80) + 57 + a1) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80), (*(unsigned __int8 *)(v21 + 80) + 57 + a2) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  return a1;
}

_OWORD *sub_190957CA0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  *(_OWORD *)((char *)a1 + 41) = *(_OWORD *)((char *)a2 + 41);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

uint64_t sub_190957D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_BYTE *)(a2 + 56);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(_BYTE *)(a1 + 56);
  v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = v7;
  sub_1909578D8(v8, v9, v10, v11, v12, v13, v14, v15);
  v17 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v17 + 40))((*(unsigned __int8 *)(v17 + 80) + 57 + a1) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), (*(unsigned __int8 *)(v17 + 80) + 57 + a2) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  return a1;
}

uint64_t sub_190957D90(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unsigned int v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFE)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 57) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if (v5 > 0xFE)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v7 + 57) & ~v7);
      v15 = *(unsigned __int8 *)(a1 + 56);
      if (v15 > 1)
        return (v15 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_190957E64 + 4 * byte_190A51710[(v9 - 1)]))();
}

void sub_190957ED4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for DynamicIslandContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DynamicIslandContainer);
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DynamicIslandMetrics(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DynamicIslandMetrics(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 56) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DynamicIslandMetrics()
{
  return &type metadata for DynamicIslandMetrics;
}

uint64_t sub_190958178()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1909581B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  _QWORD v15[2];
  _BYTE v16[24];

  v4 = sub_190A46894();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15[-1] - v9;
  sub_190958314((uint64_t)v16);
  v11 = *(_QWORD *)(a1 + 24);
  sub_190A47608();
  v15[0] = v11;
  v15[1] = MEMORY[0x1E0CD9758];
  MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v4, v15);
  sub_1909DA920((uint64_t)v8, v4, (uint64_t)v10);
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  sub_1909D989C((uint64_t)v10, v4, a2);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, v4);
}

uint64_t sub_1909582FC()
{
  return sub_190A47530();
}

double sub_190958314@<D0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  __int128 v3;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[3];
  double v8;
  _OWORD v9[2];
  _OWORD v10[2];

  v3 = v1[1];
  v9[0] = *v1;
  v9[1] = v3;
  v10[0] = v1[2];
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)v1 + 41);
  sub_1909589A4((uint64_t)v9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1909578C8);
  sub_19096EE48((uint64_t)v7);
  sub_1909589A4((uint64_t)v9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1909578D8);
  result = v8;
  v5 = v7[1];
  v6 = v7[2];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  *(double *)(a1 + 48) = result;
  return result;
}

uint64_t sub_190958398()
{
  uint64_t v0;
  uint64_t v2;
  _BYTE v3[24];

  v0 = sub_190A46CB4();
  MEMORY[0x1E0C80A78](v0);
  sub_190958314((uint64_t)&v2);
  sub_190A46CA8();
  sub_190958314((uint64_t)v3);
  sub_190A46C6C();
  return sub_190A46C60();
}

uint64_t sub_190958444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32[16];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  _QWORD v37[2];
  char v38[24];

  v31 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6050);
  v4 = *(_QWORD *)(a1 + 16);
  sub_1909589EC(&qword_1EE1E6040, MEMORY[0x1E0CD8A18]);
  v5 = sub_190A467F8();
  v6 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  v30 = v6;
  MEMORY[0x1E0C80A78](v5);
  v27 = (char *)&v26 - v7;
  v8 = sub_190A46C78();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_190A46D20();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_190A46894();
  v29 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v28 = (uint64_t)&v26 - v17;
  sub_190958398();
  sub_190A46C84();
  v18 = *(_QWORD *)(a1 + 24);
  v19 = sub_190958770((uint64_t)v12, v4, v18);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v33 = v4;
  v34 = v18;
  v35 = v2;
  v20 = v27;
  ((void (*)(uint64_t (*)@<X0>(uint64_t@<X8>), char *))v19)(sub_1909589E0, v32);
  swift_release();
  sub_190958314((uint64_t)v38);
  v37[0] = sub_1909589EC(&qword_1EE1E6048, MEMORY[0x1E0CD8A20]);
  v37[1] = v18;
  v21 = v26;
  v22 = MEMORY[0x19401429C](MEMORY[0x1E0CD91E0], v26, v37);
  sub_190A47608();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v21);
  v36[0] = v22;
  v36[1] = MEMORY[0x1E0CD9758];
  MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v13, v36);
  v23 = v28;
  sub_1909DA920((uint64_t)v16, v13, v28);
  v24 = *(void (**)(char *, uint64_t))(v29 + 8);
  v24(v16, v13);
  sub_1909D989C(v23, v13, v31);
  return ((uint64_t (*)(uint64_t, uint64_t))v24)(v23, v13);
}

uint64_t (*sub_190958770(uint64_t a1, uint64_t a2, uint64_t a3))@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v6 = sub_190A46D20();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  return sub_190958A90;
}

uint64_t sub_190958844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10;
  unint64_t v11;

  v10 = sub_190A46D20();
  v11 = sub_190958AF8();
  return sub_190A3AFC8(a1, a2, v10, a3, v11, a4, a5);
}

uint64_t sub_1909588C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DynamicIslandExpandedContainer(0, v9, v10, v11);
  sub_1909DA920(a1 + *(int *)(v12 + 36), a2, (uint64_t)v8);
  sub_1909D989C((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_190958970()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1909589A4(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
  return a1;
}

uint64_t sub_1909589E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1909588C0(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1909589EC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6050);
    result = MEMORY[0x19401429C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190958A30()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_190A46D20();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_190958A90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  v7 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  sub_190A46D20();
  return sub_190958844(a1, a2, v7, v8, a3);
}

unint64_t sub_190958AF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1E6140;
  if (!qword_1EE1E6140)
  {
    v1 = sub_190A46D20();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDAB48], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1E6140);
  }
  return result;
}

uint64_t sub_190958B40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_190A46894();
  v4[0] = v1;
  v4[1] = MEMORY[0x1E0CD9758];
  return MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v2, v4);
}

uint64_t sub_190958B94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];
  _QWORD v6[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6050);
  sub_1909589EC(&qword_1EE1E6040, MEMORY[0x1E0CD8A18]);
  v2 = sub_190A467F8();
  v3 = sub_190A46894();
  v6[0] = sub_1909589EC(&qword_1EE1E6048, MEMORY[0x1E0CD8A20]);
  v6[1] = v1;
  v5[0] = MEMORY[0x19401429C](MEMORY[0x1E0CD91E0], v2, v6);
  v5[1] = MEMORY[0x1E0CD9758];
  return MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v3, v5);
}

uint64_t TimelineEntryPreviewSource.unwrapTimeline<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  int *v5;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v4[4] = a2;
  v4[5] = a3;
  v5 = *(int **)(v3 + 24);
  v4[6] = sub_190A47D64();
  v4[7] = sub_190A47D58();
  v8 = (uint64_t (*)(void))((char *)v5 + *v5);
  v6 = (_QWORD *)swift_task_alloc();
  v4[8] = v6;
  *v6 = v4;
  v6[1] = sub_190958CE0;
  return v8();
}

uint64_t sub_190958CE0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = a1;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_190958D58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 72);
  v8 = *(_OWORD *)(v0 + 32);
  swift_release();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = swift_task_alloc();
  *(_OWORD *)(v2 + 16) = v8;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED938);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6AE48);
  v5 = sub_1909591A4();
  v6 = sub_190907290((void (*)(char *, char *))sub_190959188, v2, v3, (char *)v8, v4, v5, MEMORY[0x1E0DEDB38], v0 + 24);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t TimelineProviderPreviewSource.unwrapContent<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = sub_1909597C0(AssociatedTypeWitness, a1);
  if (!v4)
    return sub_1909593B0(a4, a2);
  return result;
}

uint64_t TimelineProviderPreviewSource.unwrapContent<A>(for:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1909593B0(a1, a2);
}

uint64_t static PreviewSourceContentCategory.timelineWidget.getter()
{
  return sub_190A46480();
}

uint64_t TimelineEntryPreviewSource.makeWidget.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  return v1;
}

void TimelineEntryPreviewSource.family.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *TimelineEntryPreviewSource.family.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*TimelineEntryPreviewSource.family.modify())()
{
  return nullsub_1;
}

uint64_t sub_190958F98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23[4];
  __int128 v24;
  uint64_t MetatypeMetadata;

  v8 = sub_190A48148();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23[-1] - v10;
  sub_1908BBDC8((uint64_t)a1, (uint64_t)&v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C530);
  v12 = swift_dynamicCast();
  v13 = *(_QWORD *)(a2 - 8);
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if ((v12 & 1) != 0)
  {
    v14(v11, 0, 1, a2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a4, v11, a2);
  }
  else
  {
    v14(v11, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    MetatypeMetadata = swift_getMetatypeMetadata();
    *(_QWORD *)&v24 = a2;
    v16 = a1[3];
    v17 = __swift_project_boxed_opaque_existential_1(a1, v16);
    v23[3] = v16;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v23);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(boxed_opaque_existential_1, v17, v16);
    sub_19095AD14();
    v19 = swift_allocError();
    v21 = v20;
    strcpy((char *)v20, "Widget preview");
    *(_BYTE *)(v20 + 15) = -18;
    strcpy((char *)(v20 + 16), "timeline entry");
    *(_BYTE *)(v20 + 31) = -18;
    sub_190901E94(&v24, (_OWORD *)(v20 + 32));
    sub_19095AD58((uint64_t)v23, v21 + 64);
    result = swift_willThrow();
    *a3 = v19;
  }
  return result;
}

uint64_t sub_190959188@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_190958F98(a1, *(_QWORD *)(v3 + 16), a2, a3);
}

unint64_t sub_1909591A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1ED940;
  if (!qword_1EE1ED940)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1ED938);
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1ED940);
  }
  return result;
}

uint64_t TimelineEntryPreviewSource.intent.getter()
{
  return 0;
}

uint64_t TimelineEntryPreviewSource.contentCategory.getter()
{
  return sub_190A46480();
}

uint64_t TimelineEntryPreviewSource.contentDomain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CA9C48];
  v3 = sub_190A46474();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_190959258()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  return v1;
}

void sub_190959284(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *sub_190959290(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*sub_19095929C())()
{
  return nullsub_1;
}

uint64_t sub_1909592AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CA9C48];
  v3 = sub_190A46474();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1909592F0()
{
  return sub_190A46480();
}

uint64_t TimelineProviderPreviewSource.makeWidget.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  return v1;
}

void TimelineProviderPreviewSource.family.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *TimelineProviderPreviewSource.family.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*TimelineProviderPreviewSource.family.modify())()
{
  return nullsub_1;
}

void *TimelineProviderPreviewSource.intent.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

uint64_t TimelineProviderPreviewSource.appIntent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1908AAA48(v1 + 32, a1, &qword_1EE1ED948);
}

uint64_t sub_1909593B0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char v10;
  uint64_t v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[32];
  __int128 v17;
  uint64_t MetatypeMetadata;
  _QWORD v19[4];

  v5 = sub_190A48148();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = &v16[-v8];
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(v2 + 72))(v19, v7);
  sub_1908B3694((uint64_t)v19, (uint64_t)&v17);
  v10 = swift_dynamicCast();
  v11 = *(_QWORD *)(a1 - 8);
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if ((v10 & 1) != 0)
  {
    v12(v9, 0, 1, a1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a2, v9, a1);
  }
  else
  {
    v12(v9, 1, 1, a1);
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
    MetatypeMetadata = swift_getMetatypeMetadata();
    *(_QWORD *)&v17 = a1;
    sub_1908B3694((uint64_t)v19, (uint64_t)v16);
    sub_19095AD14();
    swift_allocError();
    v15 = v14;
    strcpy((char *)v14, "Widget preview");
    *(_BYTE *)(v14 + 15) = -18;
    *(_QWORD *)(v14 + 16) = 0xD000000000000011;
    *(_QWORD *)(v14 + 24) = 0x8000000190A62480;
    sub_190901E94(&v17, (_OWORD *)(v14 + 32));
    sub_19095AD58((uint64_t)v16, v15 + 64);
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
}

uint64_t TimelineProviderPreviewSource.unwrapContent<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_190959604(AssociatedTypeWitness, (uint64_t)&v9);
  if (!v3)
  {
    v4 = v9;
    sub_1909593B0(a3, a1);
  }
  return v4;
}

uint64_t sub_190959604@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  char v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t MetatypeMetadata;

  v5 = sub_190A48148();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  *(_QWORD *)&v20 = *(_QWORD *)(v2 + 24);
  v9 = (id)v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED960);
  v10 = swift_dynamicCast();
  v11 = *(_QWORD *)(a1 - 8);
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if ((v10 & 1) != 0)
  {
    v12(v8, 0, 1, a1);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v8, a1);
  }
  else
  {
    v12(v8, 1, 1, a1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    MetatypeMetadata = swift_getMetatypeMetadata();
    *(_QWORD *)&v20 = a1;
    v14 = *(void **)(v2 + 24);
    if (v14)
    {
      *((_QWORD *)&v19 + 1) = sub_19095ADA0();
      *(_QWORD *)&v18 = v14;
    }
    else
    {
      v18 = 0u;
      v19 = 0u;
    }
    sub_19095AD14();
    swift_allocError();
    v16 = v15;
    strcpy((char *)v15, "Widget preview");
    *(_BYTE *)(v15 + 15) = -18;
    *(_QWORD *)(v15 + 16) = 0x746E65746E69;
    *(_QWORD *)(v15 + 24) = 0xE600000000000000;
    sub_190901E94(&v20, (_OWORD *)(v15 + 32));
    sub_19095AD58((uint64_t)&v18, v16 + 64);
    v17 = v14;
    return swift_willThrow();
  }
}

uint64_t sub_1909597C0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t MetatypeMetadata;
  _QWORD v23[3];
  uint64_t v24;

  v5 = sub_190A48148();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - v7;
  v9 = v2 + 32;
  sub_1908AAA48(v2 + 32, (uint64_t)v23, &qword_1EE1ED948);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED948);
  v10 = swift_dynamicCast();
  v11 = *(_QWORD *)(a1 - 8);
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if ((v10 & 1) != 0)
  {
    v12(v8, 0, 1, a1);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v8, a1);
  }
  else
  {
    v12(v8, 1, 1, a1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    MetatypeMetadata = swift_getMetatypeMetadata();
    *(_QWORD *)&v21 = a1;
    sub_1908AAA48(v9, (uint64_t)v23, &qword_1EE1ED948);
    v14 = v24;
    if (v24)
    {
      v15 = __swift_project_boxed_opaque_existential_1(v23, v24);
      *((_QWORD *)&v20 + 1) = v14;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v19);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(boxed_opaque_existential_1, v15, v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    }
    else
    {
      sub_1908AA544((uint64_t)v23, &qword_1EE1ED948);
      v19 = 0u;
      v20 = 0u;
    }
    sub_19095AD14();
    swift_allocError();
    v18 = v17;
    strcpy((char *)v17, "Widget preview");
    *(_BYTE *)(v17 + 15) = -18;
    *(_QWORD *)(v17 + 16) = 0x65746E6920707061;
    *(_QWORD *)(v17 + 24) = 0xEA0000000000746ELL;
    sub_190901E94(&v21, (_OWORD *)(v17 + 32));
    sub_19095AD58((uint64_t)&v19, v18 + 64);
    return swift_willThrow();
  }
}

uint64_t TimelineProviderPreviewSource.contentCategory.getter()
{
  return sub_190A46480();
}

uint64_t TimelineProviderPreviewSource.contentDomain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CA9C48];
  v3 = sub_190A46474();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

void *sub_190959A38()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

uint64_t StaticConfiguration.previewTimeline<A>(source:with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  _QWORD v16[6];

  v10 = *(_QWORD *)(v7 + 16);
  v11 = *(_QWORD *)(v7 + 24);
  (*(void (**)(_QWORD *__return_ptr))v7)(v16);
  v12 = v16[4];
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  sub_19095A0AC(v10, v11, a6, a7);
  v14 = v13;
  (*(void (**)(void *))(v12 + 48))(v13);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

uint64_t sub_190959B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return StaticConfiguration.previewTimeline<A>(source:with:completion:)(a1, a2, a3, a4, a5, a5, a6);
}

uint64_t IntentConfiguration.previewTimeline<A>(source:with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  _QWORD v16[7];

  v10 = *(_QWORD *)(v7 + 16);
  v11 = *(_QWORD *)(v7 + 24);
  (*(void (**)(_QWORD *__return_ptr))v7)(v16);
  v12 = v16[4];
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  sub_19095A0AC(v10, v11, a6, a7);
  v14 = v13;
  (*(void (**)(void *))(v12 + 48))(v13);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

uint64_t sub_190959CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return IntentConfiguration.previewTimeline<A>(source:with:completion:)(a1, a2, a3, a4, a5, a5, a6);
}

uint64_t AppIntentConfiguration.previewTimeline<A>(source:with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  _QWORD v16[7];

  v10 = *(_QWORD *)(v7 + 16);
  v11 = *(_QWORD *)(v7 + 24);
  (*(void (**)(_QWORD *__return_ptr))v7)(v16);
  v12 = v16[4];
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  sub_19095A0AC(v10, v11, a6, a7);
  v14 = v13;
  (*(void (**)(void *))(*(_QWORD *)(v12 + 8) + 48))(v13);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

uint64_t sub_190959DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return AppIntentConfiguration.previewTimeline<A>(source:with:completion:)(a1, a2, a3, a4, a5, a5, a6);
}

uint64_t sub_190959E08()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  sub_1908AAA48(v0 + 64, (uint64_t)&v3, (uint64_t *)&unk_1ECF6C8A0);
  if (v4)
  {
    sub_190901E94(&v3, &v5);
    *(_QWORD *)&v3 = 0;
    *((_QWORD *)&v3 + 1) = 0xE000000000000000;
    sub_190A48298();
    swift_bridgeObjectRetain();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    swift_bridgeObjectRetain();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    sub_190A483DC();
    sub_190A47B3C();
    __swift_project_boxed_opaque_existential_1(&v5, v6);
    swift_getDynamicType();
    sub_190A48880();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    v1 = v3;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v5);
  }
  else
  {
    sub_1908AA544((uint64_t)&v3, (uint64_t *)&unk_1ECF6C8A0);
    *(_QWORD *)&v5 = 0;
    *((_QWORD *)&v5 + 1) = 0xE000000000000000;
    sub_190A48298();
    swift_bridgeObjectRetain();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    swift_bridgeObjectRetain();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    sub_190A483DC();
    sub_190A47B3C();
    return v5;
  }
  return v1;
}

void sub_19095A0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;
  id v7;
  void (*v8)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;

  v6 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v7 = objc_msgSend(v6, sel_bundleIdentifier);

  if (v7)
  {
    sub_190A47ADC();

    v8 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 24);
    swift_bridgeObjectRetain();
    v8(&v9, a3, a4);
    __asm { BR              X10 }
  }
  __break(1u);
}

void sub_19095A244()
{
  sub_190A486D0();
  __break(1u);
  JUMPOUT(0x19095A258);
}

unint64_t sub_19095A278(uint64_t a1)
{
  unint64_t result;

  result = sub_19095A29C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19095A29C()
{
  unint64_t result;

  result = qword_1EE1ED950;
  if (!qword_1EE1ED950)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for TimelineEntryPreviewSource, &type metadata for TimelineEntryPreviewSource);
    atomic_store(result, (unint64_t *)&qword_1EE1ED950);
  }
  return result;
}

unint64_t sub_19095A2E0(uint64_t a1)
{
  unint64_t result;

  result = sub_19095A304();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_19095A304()
{
  unint64_t result;

  result = qword_1EE1ED958;
  if (!qword_1EE1ED958)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for TimelineProviderPreviewSource, &type metadata for TimelineProviderPreviewSource);
    atomic_store(result, (unint64_t *)&qword_1EE1ED958);
  }
  return result;
}

uint64_t sub_19095A348(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x19401429C](&protocol conformance descriptor for StaticConfiguration<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_19095A374(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x19401429C](&protocol conformance descriptor for IntentConfiguration<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_19095A3A0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x19401429C](&protocol conformance descriptor for AppIntentConfiguration<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t destroy for TimelineEntryPreviewSource()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for TimelineEntryPreviewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TimelineEntryPreviewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TimelineEntryPreviewSource(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TimelineEntryPreviewSource(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TimelineEntryPreviewSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TimelineEntryPreviewSource()
{
  return &type metadata for TimelineEntryPreviewSource;
}

uint64_t destroy for TimelineProviderPreviewSource(uint64_t a1)
{
  swift_release();

  if (*(_QWORD *)(a1 + 56))
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  return swift_release();
}

uint64_t initializeWithCopy for TimelineProviderPreviewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = a2 + 32;
  v7 = *(_QWORD *)(a2 + 56);
  swift_retain();
  v8 = v5;
  if (v7)
  {
    v9 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v7;
    *(_QWORD *)(a1 + 64) = v9;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 32, v6, v7);
  }
  else
  {
    v10 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(v6 + 32);
  }
  v11 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v11;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TimelineProviderPreviewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(void **)(a1 + 24);
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = v6;

  v8 = *(_QWORD *)(a2 + 56);
  if (!*(_QWORD *)(a1 + 56))
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 56) = v8;
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 32, a2 + 32);
      goto LABEL_8;
    }
LABEL_7:
    v9 = *(_OWORD *)(a2 + 32);
    v10 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)(a1 + 48) = v10;
    goto LABEL_8;
  }
  if (!v8)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
LABEL_8:
  v11 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v11;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TimelineProviderPreviewSource(uint64_t a1, uint64_t a2)
{
  void *v4;
  __int128 v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  if (*(_QWORD *)(a1 + 56))
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TimelineProviderPreviewSource(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TimelineProviderPreviewSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TimelineProviderPreviewSource()
{
  return &type metadata for TimelineProviderPreviewSource;
}

uint64_t dispatch thunk of TimelinePreviewSource.makeWidget.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TimelinePreviewSource.family.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TimelinePreviewSource.family.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of TimelinePreviewSource.family.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of TimelinePreviewSource.intent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of TimelineWidgetConfiguration.previewTimeline<A>(source:with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 16))();
}

uint64_t destroy for UnwrapError(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  if (*(_QWORD *)(a1 + 88))
    return __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  return result;
}

uint64_t initializeWithCopy for UnwrapError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = a2 + 32;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 32, v6, v7);
  v9 = (_OWORD *)(a1 + 64);
  v10 = (_OWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 88);
  if (v11)
  {
    *(_QWORD *)(a1 + 88) = v11;
    (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v9, v10);
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 80);
    *v9 = *v10;
    *(_OWORD *)(a1 + 80) = v12;
  }
  return a1;
}

uint64_t assignWithCopy for UnwrapError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  v4 = *(_QWORD *)(a2 + 88);
  if (!*(_QWORD *)(a1 + 88))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 88) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 64, a2 + 64);
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v5;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 64);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for UnwrapError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  if (*(_QWORD *)(a1 + 88))
    __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for UnwrapError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UnwrapError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UnwrapError()
{
  return &type metadata for UnwrapError;
}

unint64_t sub_19095AD14()
{
  unint64_t result;

  result = qword_1EE1ED968;
  if (!qword_1EE1ED968)
  {
    result = MEMORY[0x19401429C](&unk_190A51A80, &type metadata for UnwrapError);
    atomic_store(result, (unint64_t *)&qword_1EE1ED968);
  }
  return result;
}

uint64_t sub_19095AD58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C8A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_19095ADA0()
{
  unint64_t result;

  result = qword_1EE1ED970;
  if (!qword_1EE1ED970)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE1ED970);
  }
  return result;
}

uint64_t sub_19095ADDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_190A47D7C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_190A47D70();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1908B463C(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_190A47D28();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

unint64_t static WidgetCenter.serviceName.getter()
{
  return 0xD000000000000027;
}

uint64_t sub_19095AF3C(uint64_t a1, const char *a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  void *v11;

  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v3 = sub_190A465A0();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ECF6D988);
  v4 = sub_190A46588();
  v5 = sub_190A47F50();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1908A7000, v4, v5, a2, v6, 2u);
    MEMORY[0x194014398](v6, -1, -1);
  }

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result;
    v9 = *(_QWORD *)(result + 24);
    v10 = *(os_unfair_lock_s **)(v9 + 16);
    swift_retain();
    os_unfair_lock_lock(v10);
    v11 = *(void **)(v8 + 32);
    *(_QWORD *)(v8 + 32) = 0;

    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_19095B07C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_190A47ADC();
  qword_1EE1EB258 = result;
  unk_1EE1EB260 = v1;
  return result;
}

uint64_t static WidgetCenter.UserInfoKey.kind.getter()
{
  return sub_19095B160(&qword_1EE1EB250, &qword_1EE1EB258);
}

uint64_t sub_19095B0C8()
{
  uint64_t result;
  uint64_t v1;

  result = sub_190A47ADC();
  qword_1EE1EA7F8 = result;
  unk_1EE1EA800 = v1;
  return result;
}

uint64_t static WidgetCenter.UserInfoKey.family.getter()
{
  return sub_19095B160(&qword_1EE1EA808, &qword_1EE1EA7F8);
}

uint64_t sub_19095B114()
{
  uint64_t result;
  uint64_t v1;

  result = sub_190A47ADC();
  qword_1EE1ED978 = result;
  unk_1EE1ED980 = v1;
  return result;
}

uint64_t static WidgetCenter.UserInfoKey.activityID.getter()
{
  return sub_19095B160(qword_1EE1EC520, &qword_1EE1ED978);
}

uint64_t sub_19095B160(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_19095B1B0()
{
  return sub_1908AED78((void (*)(uint64_t))sub_19095B1BC);
}

uint64_t sub_19095B1BC()
{
  id v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)();
  void *v19;
  void (*v20)(void *);
  uint64_t v21;
  _BYTE v22[32];
  uint64_t v23;

  v0 = sub_1908B3D9C();
  v20 = sub_19095B514;
  v21 = 0;
  v1 = MEMORY[0x1E0C809B0];
  v16 = MEMORY[0x1E0C809B0];
  v17 = 1107296256;
  v18 = sub_1908B4904;
  v19 = &block_descriptor_143;
  v2 = _Block_copy(&v16);
  v3 = objc_msgSend(v0, sel_remoteObjectProxyWithErrorHandler_, v2);
  _Block_release(v2);

  sub_190A481B4();
  swift_unknownObjectRelease();
  sub_1908B3694((uint64_t)v22, (uint64_t)&v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AA98);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v4 = (void *)v23;
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v5 = sub_190A465A0();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ECF6D988);
    v6 = sub_190A46588();
    v7 = sub_190A47F68();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1908A7000, v6, v7, "Invalidate widget configuration recommendations.", v8, 2u);
      MEMORY[0x194014398](v8, -1, -1);
    }

    v20 = sub_19095B530;
    v21 = 0;
    v16 = v1;
    v17 = 1107296256;
    v18 = sub_1908B19EC;
    v19 = &block_descriptor_146;
    v9 = _Block_copy(&v16);
    objc_msgSend(v4, sel_invalidateConfigurationRecommendationsWithCompletion_, v9);
    _Block_release(v9);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v10 = sub_190A465A0();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ECF6D988);
    v11 = sub_190A46588();
    v12 = sub_190A47F50();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v16 = v14;
      *(_DWORD *)v13 = 136446210;
      v23 = sub_1908B35C4(0xD000000000000028, 0x8000000190A62760, &v16);
      sub_190A48178();
      swift_arrayDestroy();
      MEMORY[0x194014398](v14, -1, -1);
      MEMORY[0x194014398](v13, -1, -1);
    }

  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

void sub_19095B514(void *a1)
{
  sub_190960758(a1, 0xD000000000000028, 0x8000000190A62760);
}

void sub_19095B530(void *a1)
{
  sub_19095B910(a1, 0xD000000000000028, 0x8000000190A62760);
}

uint64_t sub_19095B54C(uint64_t a1, uint64_t a2)
{
  return sub_1908B166C(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_19095B558);
}

uint64_t sub_19095B558()
{
  id v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  void *v16;
  uint64_t aBlock;
  uint64_t v18;
  uint64_t (*v19)();
  void *v20;
  void (*v21)(void *);
  uint64_t v22;
  _BYTE v23[32];

  v0 = sub_1908B3D9C();
  v21 = sub_19095B8D8;
  v22 = 0;
  v1 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v18 = 1107296256;
  v19 = sub_1908B4904;
  v20 = &block_descriptor_137;
  v2 = _Block_copy(&aBlock);
  v3 = objc_msgSend(v0, sel_remoteObjectProxyWithErrorHandler_, v2);
  _Block_release(v2);

  sub_190A481B4();
  swift_unknownObjectRelease();
  sub_1908B3694((uint64_t)v23, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AA98);
  if ((swift_dynamicCast() & 1) != 0)
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v4 = sub_190A465A0();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ECF6D988);
    v5 = sub_190A46588();
    v6 = sub_190A47F68();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1908A7000, v5, v6, "Invalidate widget configuration recommendations.", v7, 2u);
      MEMORY[0x194014398](v7, -1, -1);
    }

    v8 = (void *)sub_190A47AC4();
    v21 = sub_19095B8F4;
    v22 = 0;
    aBlock = v1;
    v18 = 1107296256;
    v19 = sub_1908B19EC;
    v20 = &block_descriptor_140;
    v9 = _Block_copy(&aBlock);
    objc_msgSend(v16, sel_invalidateConfigurationRecommendationsInBundle_completion_, v8, v9);
    _Block_release(v9);

    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v10 = sub_190A465A0();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ECF6D988);
    v11 = sub_190A46588();
    v12 = sub_190A47F50();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      aBlock = v14;
      *(_DWORD *)v13 = 136446210;
      sub_1908B35C4(0xD000000000000031, 0x8000000190A62720, &aBlock);
      sub_190A48178();
      swift_arrayDestroy();
      MEMORY[0x194014398](v14, -1, -1);
      MEMORY[0x194014398](v13, -1, -1);
    }

  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

void sub_19095B8D8(void *a1)
{
  sub_190960758(a1, 0xD000000000000031, 0x8000000190A62720);
}

void sub_19095B8F4(void *a1)
{
  sub_19095B910(a1, 0xD000000000000031, 0x8000000190A62720);
}

void sub_19095B910(void *a1, uint64_t a2, unint64_t a3)
{
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  os_log_type_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  NSObject *oslog;
  uint64_t v20;
  uint64_t v21;

  if (a1)
  {
    v6 = a1;
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v7 = sub_190A465A0();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ECF6D988);
    v8 = a1;
    v9 = a1;
    oslog = sub_190A46588();
    v10 = sub_190A47F50();
    if (os_log_type_enabled(oslog, v10))
    {
      v11 = swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v21 = v13;
      *(_DWORD *)v11 = 136446466;
      sub_1908B35C4(a2, a3, &v21);
      sub_190A48178();
      *(_WORD *)(v11 + 12) = 2114;
      v14 = a1;
      v20 = _swift_stdlib_bridgeErrorToNSError();
      sub_190A48178();
      *v12 = v20;

      _os_log_impl(&dword_1908A7000, oslog, v10, "%{public}s - error reloading supported intents: %{public}@", (uint8_t *)v11, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
      swift_arrayDestroy();
      MEMORY[0x194014398](v12, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x194014398](v13, -1, -1);
      MEMORY[0x194014398](v11, -1, -1);

      return;
    }

  }
  else
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v15 = sub_190A465A0();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ECF6D988);
    oslog = sub_190A46588();
    v16 = sub_190A47F50();
    if (os_log_type_enabled(oslog, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v21 = v18;
      *(_DWORD *)v17 = 136446210;
      sub_1908B35C4(a2, a3, &v21);
      sub_190A48178();
      _os_log_impl(&dword_1908A7000, oslog, v16, "%{public}s - success", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v18, -1, -1);
      MEMORY[0x194014398](v17, -1, -1);

      return;
    }
  }

}

uint64_t sub_19095BC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[11] = a5;
  v6[12] = a6;
  v6[10] = a4;
  v7 = sub_190A47980();
  v6[13] = v7;
  v6[14] = *(_QWORD *)(v7 - 8);
  v6[15] = swift_task_alloc();
  v8 = sub_190A479C8();
  v6[16] = v8;
  v6[17] = *(_QWORD *)(v8 - 8);
  v6[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19095BD18()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBA08);
  *v1 = v0;
  v1[1] = sub_19095BDA8;
  return sub_190A48718();
}

uint64_t sub_19095BDA8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19095BE0C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = (void *)v0[8];
  v2 = v0[18];
  v3 = v0[15];
  v12 = v0[17];
  v13 = v0[16];
  v4 = v0[13];
  v6 = v0[11];
  v5 = v0[12];
  v7 = v0[20] != 0;
  v11 = v0[14];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v5;
  *(_QWORD *)(v8 + 32) = v1;
  *(_BYTE *)(v8 + 40) = v7;
  v0[6] = sub_190961578;
  v0[7] = v8;
  v0[2] = MEMORY[0x1E0C809B0];
  v0[3] = 1107296256;
  v0[4] = sub_1908A9D98;
  v0[5] = &block_descriptor_133_0;
  v9 = _Block_copy(v0 + 2);
  swift_retain();
  sub_1909615A4(v1, v7);
  sub_190A47998();
  v0[9] = MEMORY[0x1E0DEE9D8];
  sub_1908AA2F4((unint64_t *)&qword_1ECF6D318, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
  sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
  sub_190A481E4();
  MEMORY[0x194013234](0, v2, v3, v9);
  _Block_release(v9);
  sub_19096156C(v1, v7);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v13);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_19095BFE4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (void *)v0[20];
  v2 = v0[18];
  v3 = v0[15];
  v11 = v0[17];
  v12 = v0[16];
  v4 = v0[12];
  v9 = v0[13];
  v5 = v0[11];
  v10 = v0[14];
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *(_QWORD *)(v6 + 32) = v1;
  *(_BYTE *)(v6 + 40) = v1 != 0;
  v0[6] = sub_190961578;
  v0[7] = v6;
  v0[2] = MEMORY[0x1E0C809B0];
  v0[3] = 1107296256;
  v0[4] = sub_1908A9D98;
  v0[5] = &block_descriptor_133_0;
  v7 = _Block_copy(v0 + 2);
  swift_retain();
  sub_1909615A4(v1, v1 != 0);
  sub_190A47998();
  v0[9] = MEMORY[0x1E0DEE9D8];
  sub_1908AA2F4((unint64_t *)&qword_1ECF6D318, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
  sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
  sub_190A481E4();
  MEMORY[0x194013234](0, v2, v3, v7);
  _Block_release(v7);
  sub_19096156C(v1, v1 != 0);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v3, v9);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v12);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_19095C1BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_19095C1D4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBA08);
  *v1 = v0;
  v1[1] = sub_190935E58;
  return sub_190A48718();
}

uint64_t sub_19095C264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  os_unfair_lock_s *v5;

  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_19095C2C8(a2, a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  return swift_release();
}

uint64_t sub_19095C2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, char *, uint64_t);
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  char *v44;
  char *v45;
  uint64_t v46;
  _QWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, char *, uint64_t);
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t aBlock;
  unint64_t v63;
  uint64_t (*v64)();
  void *v65;
  void *v66;
  uint64_t v67;
  _BYTE v68[40];

  v4 = sub_190A47980();
  v56 = *(_QWORD *)(v4 - 8);
  v57 = v4;
  MEMORY[0x1E0C80A78](v4);
  v55 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190A479C8();
  v53 = *(_QWORD *)(v6 - 8);
  v54 = v6;
  MEMORY[0x1E0C80A78](v6);
  v52 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBA10);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1908B3D9C();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v58 = a2;
  v60 = v13;
  v13(v11, a2, v8);
  v14 = *(unsigned __int8 *)(v9 + 80);
  v15 = (v14 + 24) & ~v14;
  v51 = v10;
  v59 = v14;
  v16 = v14 | 7;
  v50 = (void (*)(uint64_t, char *, uint64_t))(v15 + v10);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  v18 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v18(v17 + v15, v11, v8);
  v66 = sub_190961108;
  v67 = v17;
  aBlock = MEMORY[0x1E0C809B0];
  v63 = 1107296256;
  v64 = sub_1908B4904;
  v65 = &block_descriptor_87;
  v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v20 = objc_msgSend(v12, sel_remoteObjectProxyWithErrorHandler_, v19);
  _Block_release(v19);

  sub_190A481B4();
  swift_unknownObjectRelease();
  sub_1908B3694((uint64_t)v68, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AA98);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v21 = (void *)v61;
    v60(v11, v58, v8);
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = a1;
    v18(v22 + v15, v11, v8);
    v66 = sub_19096124C;
    v67 = v22;
    aBlock = MEMORY[0x1E0C809B0];
    v63 = 1107296256;
    v64 = (uint64_t (*)())sub_1908AA750;
    v65 = &block_descriptor_99;
    v23 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v21, sel__loadCurrentConfigurations_, v23);
    _Block_release(v23);
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  }
  else
  {
    v49 = v16;
    v25 = v8;
    v50 = v18;
    v26 = v58;
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v48 = ~v59;
    v27 = sub_190A465A0();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ECF6D988);
    v28 = sub_190A46588();
    v29 = sub_190A47F50();
    v30 = v25;
    if (os_log_type_enabled(v28, v29))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      aBlock = v32;
      *(_DWORD *)v31 = 136446210;
      v47[1] = v31 + 4;
      v61 = sub_1908B35C4(0xD000000000000017, 0x8000000190A61C30, &aBlock);
      sub_190A48178();
      swift_arrayDestroy();
      MEMORY[0x194014398](v32, -1, -1);
      MEMORY[0x194014398](v31, -1, -1);
    }

    v33 = v50;
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
    aBlock = 0;
    v63 = 0xE000000000000000;
    sub_190A48298();
    sub_190A47B3C();
    sub_190A47B3C();
    v34 = aBlock;
    v35 = v63;
    v36 = sub_190A47ADC();
    v38 = sub_19096BFDC(v36, v37, 1200, 0, v34, v35);
    v60(v11, v26, v30);
    v39 = (v59 + 16) & v48;
    v40 = (v51 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
    v41 = swift_allocObject();
    v33(v41 + v39, v11, v30);
    *(_QWORD *)(v41 + v40) = v38;
    v66 = sub_1909611C4;
    v67 = v41;
    aBlock = MEMORY[0x1E0C809B0];
    v63 = 1107296256;
    v64 = (uint64_t (*)())sub_1908A9D98;
    v65 = &block_descriptor_93;
    v42 = _Block_copy(&aBlock);
    v43 = v38;
    v44 = v52;
    sub_190A47998();
    v61 = MEMORY[0x1E0DEE9D8];
    sub_1908AA2F4((unint64_t *)&qword_1ECF6D318, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
    sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
    v45 = v55;
    v46 = v57;
    sub_190A481E4();
    MEMORY[0x194013234](0, v44, v45, v42);
    _Block_release(v42);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v45, v46);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v44, v54);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
    return swift_release();
  }
}

uint64_t sub_19095C9A4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  os_log_type_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  char *v33;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t aBlock[6];

  v42 = a2;
  v5 = sub_190A47980();
  v40 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_190A479C8();
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  MEMORY[0x1E0C80A78](v8);
  v43 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBA10);
  v41 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v38 = v11;
  v39 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v12 = sub_190A465A0();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ECF6D988);
  v13 = a1;
  v14 = a1;
  v15 = sub_190A46588();
  v16 = sub_190A47F50();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v35 = (_QWORD *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    aBlock[0] = v36;
    *(_DWORD *)v17 = 136315394;
    v37 = v5;
    v46 = sub_1908B35C4(0xD000000000000017, 0x8000000190A61C30, aBlock);
    sub_190A48178();
    *(_WORD *)(v17 + 12) = 2112;
    v18 = a1;
    v19 = v10;
    v20 = a3;
    v21 = v7;
    v22 = _swift_stdlib_bridgeErrorToNSError();
    v46 = v22;
    v5 = v37;
    sub_190A48178();
    v23 = v16;
    v24 = v35;
    *v35 = v22;
    v7 = v21;
    a3 = v20;
    v10 = v19;

    _os_log_impl(&dword_1908A7000, v15, v23, "%s - remoteObjectProxy error: %@", (uint8_t *)v17, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
    swift_arrayDestroy();
    MEMORY[0x194014398](v24, -1, -1);
    v25 = v36;
    swift_arrayDestroy();
    MEMORY[0x194014398](v25, -1, -1);
    MEMORY[0x194014398](v17, -1, -1);
  }
  else
  {

  }
  v26 = v41;
  v27 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v39, a3, v10);
  v28 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v29 = (v38 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v30 + v28, v27, v10);
  *(_QWORD *)(v30 + v29) = a1;
  aBlock[4] = (uint64_t)sub_1909613D0;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1908A9D98;
  aBlock[3] = (uint64_t)&block_descriptor_122;
  v31 = _Block_copy(aBlock);
  v32 = a1;
  v33 = v43;
  sub_190A47998();
  v46 = MEMORY[0x1E0DEE9D8];
  sub_1908AA2F4((unint64_t *)&qword_1ECF6D318, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
  sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
  sub_190A481E4();
  MEMORY[0x194013234](0, v33, v7, v31);
  _Block_release(v31);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v33, v45);
  return swift_release();
}

uint64_t sub_19095CE38(uint64_t a1, void *a2)
{
  id v2;

  v2 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBA10);
  return sub_190A47D34();
}

uint64_t sub_19095CE7C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];

  v32 = a3;
  v28 = a1;
  v6 = sub_190A47980();
  v31 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_190A479C8();
  v29 = *(_QWORD *)(v9 - 8);
  v30 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBA10);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v32 = *(_QWORD *)(v32 + 16);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v12);
    v18 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v19 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v19 + v18, (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
    *(_QWORD *)(v19 + ((v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
    aBlock[4] = sub_1909613D0;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1908A9D98;
    aBlock[3] = &block_descriptor_109;
    v20 = _Block_copy(aBlock);
    v21 = a2;
    v22 = a2;
    sub_190A47998();
    v33 = MEMORY[0x1E0DEE9D8];
    sub_1908AA2F4((unint64_t *)&qword_1ECF6D318, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
    sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
    sub_190A481E4();
    MEMORY[0x194013234](0, v11, v8, v20);
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v6);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v30);
  }
  else
  {
    v23 = sub_190A47D7C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v17, 1, 1, v23);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v12);
    v24 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v25 = (char *)swift_allocObject();
    *((_QWORD *)v25 + 2) = 0;
    *((_QWORD *)v25 + 3) = 0;
    v26 = v32;
    *((_QWORD *)v25 + 4) = v28;
    *((_QWORD *)v25 + 5) = v26;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v25[v24], (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_19095ADDC((uint64_t)v17, (uint64_t)&unk_1EE1ED9D0, (uint64_t)v25);
  }
  return swift_release();
}

uint64_t sub_19095D1E8(int a1, id a2)
{
  id v2;

  v2 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBA10);
  return sub_190A47D34();
}

uint64_t sub_19095D230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[20] = a5;
  v6[21] = a6;
  v6[19] = a4;
  v7 = sub_190A47980();
  v6[22] = v7;
  v6[23] = *(_QWORD *)(v7 - 8);
  v6[24] = swift_task_alloc();
  v8 = sub_190A479C8();
  v6[25] = v8;
  v6[26] = *(_QWORD *)(v8 - 8);
  v6[27] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBA10);
  v6[28] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[29] = v10;
  v6[30] = *(_QWORD *)(v10 + 64);
  v6[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19095D2EC()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0[19];
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    v0[32] = v2;
    if (v2)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    v10 = v0[30];
    v9 = v0[31];
    v11 = v0[28];
    v12 = v0[29];
    v13 = v0[27];
    v14 = v0[24];
    v21 = v0[26];
    v22 = v0[25];
    v15 = v0[22];
    v20 = v0[23];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 16))(v9, v0[21], v11);
    v16 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v17 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 32))(v17 + v16, v9, v11);
    v18 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v17 + ((v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = MEMORY[0x1E0DEE9D8];
    v0[16] = sub_190961428;
    v0[17] = v17;
    v0[12] = MEMORY[0x1E0C809B0];
    v0[13] = 1107296256;
    v0[14] = sub_1908A9D98;
    v0[15] = &block_descriptor_115;
    v19 = _Block_copy(v0 + 12);
    sub_190A47998();
    v0[18] = v18;
    sub_1908AA2F4((unint64_t *)&qword_1ECF6D318, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
    sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
    sub_190A481E4();
    MEMORY[0x194013234](0, v13, v14, v19);
    _Block_release(v19);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v14, v15);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v13, v22);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
  swift_bridgeObjectRetain();
  result = sub_190A48484();
  v2 = result;
  v0[32] = result;
  if (!result)
    goto LABEL_9;
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    v4 = v0[19];
    v5 = MEMORY[0x1E0DEE9D8];
    v0[33] = 0;
    v0[34] = v5;
    if ((v4 & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x194013510](0);
    else
      v6 = *(id *)(v4 + 32);
    v0[35] = v6;
    v7 = v6;
    v8 = (_QWORD *)swift_task_alloc();
    v0[36] = v8;
    *v8 = v0;
    v8[1] = sub_19095D5B8;
    return sub_190912A04((uint64_t)(v0 + 2), (uint64_t)v7);
  }
  return result;
}

uint64_t sub_19095D5B8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19095D60C()
{
  uint64_t v0;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2 = *(_QWORD **)(v0 + 272);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v2 = sub_1908F3028(0, v2[2] + 1, 1, *(_QWORD **)(v0 + 272));
  v4 = v2[2];
  v3 = v2[3];
  if (v4 >= v3 >> 1)
    v2 = sub_1908F3028((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
  v5 = *(void **)(v0 + 280);
  v6 = *(_QWORD *)(v0 + 256);
  v7 = *(_QWORD *)(v0 + 264) + 1;
  v2[2] = v4 + 1;
  v8 = &v2[10 * v4];
  v8[2] = *(_OWORD *)(v0 + 16);
  v9 = *(_OWORD *)(v0 + 32);
  v10 = *(_OWORD *)(v0 + 48);
  v11 = *(_OWORD *)(v0 + 80);
  v8[5] = *(_OWORD *)(v0 + 64);
  v8[6] = v11;
  v8[3] = v9;
  v8[4] = v10;

  if (v7 == v6)
  {
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v0 + 240);
    v13 = *(_QWORD *)(v0 + 248);
    v15 = *(_QWORD *)(v0 + 224);
    v14 = *(_QWORD *)(v0 + 232);
    v16 = *(_QWORD *)(v0 + 216);
    v17 = *(_QWORD *)(v0 + 192);
    v29 = *(_QWORD *)(v0 + 208);
    v30 = *(_QWORD *)(v0 + 200);
    v27 = *(_QWORD *)(v0 + 176);
    v28 = *(_QWORD *)(v0 + 184);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 16))(v13, *(_QWORD *)(v0 + 168), v15);
    v18 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v19 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32))(v19 + v18, v13, v15);
    *(_QWORD *)(v19 + ((v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = v2;
    *(_QWORD *)(v0 + 128) = sub_190961428;
    *(_QWORD *)(v0 + 136) = v19;
    *(_QWORD *)(v0 + 96) = MEMORY[0x1E0C809B0];
    *(_QWORD *)(v0 + 104) = 1107296256;
    *(_QWORD *)(v0 + 112) = sub_1908A9D98;
    *(_QWORD *)(v0 + 120) = &block_descriptor_115;
    v20 = _Block_copy((const void *)(v0 + 96));
    sub_190A47998();
    *(_QWORD *)(v0 + 144) = MEMORY[0x1E0DEE9D8];
    sub_1908AA2F4((unint64_t *)&qword_1ECF6D318, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
    sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
    sub_190A481E4();
    MEMORY[0x194013234](0, v16, v17, v20);
    _Block_release(v20);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v17, v27);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v16, v30);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 264) + 1;
    *(_QWORD *)(v0 + 264) = v22;
    *(_QWORD *)(v0 + 272) = v2;
    v23 = *(_QWORD *)(v0 + 152);
    if ((v23 & 0xC000000000000001) != 0)
      v24 = (id)MEMORY[0x194013510]();
    else
      v24 = *(id *)(v23 + 8 * v22 + 32);
    *(_QWORD *)(v0 + 280) = v24;
    v25 = v24;
    v26 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 288) = v26;
    *v26 = v0;
    v26[1] = sub_19095D5B8;
    return sub_190912A04(v0 + 16, (uint64_t)v25);
  }
}

uint64_t sub_19095D930()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBA10);
  return sub_190A47D40();
}

void sub_19095D978(void *a1)
{
  sub_190960758(a1, 0xD000000000000018, 0x8000000190A626E0);
}

uint64_t sub_19095D994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  os_unfair_lock_s *v14;

  v13 = *(_QWORD *)(v6 + 24);
  v14 = *(os_unfair_lock_s **)(v13 + 16);
  swift_retain();
  os_unfair_lock_lock(v14);
  sub_19095DA34(v6, a5, a6, a1, a2, a3, a4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  return swift_release();
}

uint64_t sub_19095DA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  _QWORD *v25;
  void *v26;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  _QWORD *v39;
  void *v40;
  id v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t aBlock;
  unint64_t v55;
  uint64_t (*v56)(uint64_t);
  void *v57;
  void *v58;
  _QWORD *v59;
  _BYTE v60[32];

  v45 = a6;
  v46 = a7;
  v12 = sub_190A47980();
  v51 = *(_QWORD *)(v12 - 8);
  v52 = v12;
  MEMORY[0x1E0C80A78](v12);
  v50 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_190A479C8();
  v48 = *(_QWORD *)(v14 - 8);
  v49 = v14;
  MEMORY[0x1E0C80A78](v14);
  v47 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1908B3D9C();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a1;
  v17[3] = a2;
  v17[4] = a3;
  v58 = sub_190961020;
  v59 = v17;
  v18 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v55 = 1107296256;
  v56 = (uint64_t (*)(uint64_t))sub_1908B4904;
  v57 = &block_descriptor_48;
  v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v20 = objc_msgSend(v16, sel_remoteObjectProxyWithErrorHandler_, v19, v45, v46);
  _Block_release(v19);

  sub_190A481B4();
  swift_unknownObjectRelease();
  sub_1908B3694((uint64_t)v60, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AA98);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v21 = (void *)v53;
    v22 = a4;
    v23 = (void *)sub_190A47AC4();
    v24 = (void *)sub_190A47AC4();
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = a1;
    v25[3] = a2;
    v25[4] = a3;
    v25[5] = v22;
    v25[6] = a5;
    v58 = sub_190961074;
    v59 = v25;
    aBlock = v18;
    v55 = 1107296256;
    v56 = (uint64_t (*)(uint64_t))sub_1908B19EC;
    v57 = &block_descriptor_60;
    v26 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v21, sel__reloadTimelinesOfKind_inBundle_completion_, v23, v24, v26);
    _Block_release(v26);

    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  }
  else
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v28 = sub_190A465A0();
    __swift_project_value_buffer(v28, (uint64_t)qword_1ECF6D988);
    v29 = sub_190A46588();
    v30 = sub_190A47F50();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      aBlock = v32;
      *(_DWORD *)v31 = 136446210;
      v53 = sub_1908B35C4(0xD00000000000002CLL, 0x8000000190A62660, &aBlock);
      sub_190A48178();
      swift_arrayDestroy();
      MEMORY[0x194014398](v32, -1, -1);
      MEMORY[0x194014398](v31, -1, -1);
    }

    v33 = MEMORY[0x1E0C809B0];
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
    aBlock = 0;
    v55 = 0xE000000000000000;
    sub_190A48298();
    sub_190A47B3C();
    sub_190A47B3C();
    v34 = aBlock;
    v35 = v55;
    v36 = sub_190A47ADC();
    v38 = sub_19096BFDC(v36, v37, 1200, 0, v34, v35);
    v39 = (_QWORD *)swift_allocObject();
    v39[2] = a2;
    v39[3] = a3;
    v39[4] = v38;
    v58 = sub_190961058;
    v59 = v39;
    aBlock = v33;
    v55 = 1107296256;
    v56 = sub_1908A9D98;
    v57 = &block_descriptor_54;
    v40 = _Block_copy(&aBlock);
    swift_retain();
    v41 = v38;
    v42 = v47;
    sub_190A47998();
    v53 = MEMORY[0x1E0DEE9D8];
    sub_1908AA2F4((unint64_t *)&qword_1ECF6D318, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
    sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
    v43 = v50;
    v44 = v52;
    sub_190A481E4();
    MEMORY[0x194013234](0, v42, v43, v40);
    _Block_release(v40);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v43, v44);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v42, v49);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
    return swift_release();
  }
}

uint64_t sub_19095E028(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  id v30;
  char *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t aBlock[6];

  v8 = sub_190A47980();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_190A479C8();
  v40 = *(_QWORD *)(v12 - 8);
  v41 = v12;
  MEMORY[0x1E0C80A78](v12);
  v39 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v14 = sub_190A465A0();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ECF6D988);
  v15 = a1;
  v16 = a1;
  v17 = sub_190A46588();
  v18 = sub_190A47F50();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v37 = v11;
    v20 = v19;
    v21 = swift_slowAlloc();
    v35 = a2;
    v22 = (_QWORD *)v21;
    v34 = swift_slowAlloc();
    aBlock[0] = v34;
    *(_DWORD *)v20 = 136446466;
    v38 = v9;
    v36 = v8;
    v42 = sub_1908B35C4(0xD00000000000002CLL, 0x8000000190A62660, aBlock);
    sub_190A48178();
    *(_WORD *)(v20 + 12) = 2114;
    v23 = a1;
    v24 = a3;
    v25 = _swift_stdlib_bridgeErrorToNSError();
    v42 = v25;
    v8 = v36;
    v9 = v38;
    sub_190A48178();
    *v22 = v25;
    a3 = v24;

    _os_log_impl(&dword_1908A7000, v17, v18, "%{public}s - remoteObjectProxy error: %{public}@", (uint8_t *)v20, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
    swift_arrayDestroy();
    MEMORY[0x194014398](v22, -1, -1);
    v26 = v34;
    swift_arrayDestroy();
    MEMORY[0x194014398](v26, -1, -1);
    v27 = v20;
    v11 = v37;
    MEMORY[0x194014398](v27, -1, -1);
  }
  else
  {

  }
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = a3;
  v28[3] = a4;
  v28[4] = a1;
  aBlock[4] = (uint64_t)sub_190961058;
  aBlock[5] = (uint64_t)v28;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1908A9D98;
  aBlock[3] = (uint64_t)&block_descriptor_72;
  v29 = _Block_copy(aBlock);
  v30 = a1;
  swift_retain();
  v31 = v39;
  sub_190A47998();
  v42 = MEMORY[0x1E0DEE9D8];
  sub_1908AA2F4((unint64_t *)&qword_1ECF6D318, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
  sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
  sub_190A481E4();
  MEMORY[0x194013234](0, v31, v11, v29);
  _Block_release(v29);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v41);
  return swift_release();
}

uint64_t sub_19095E438(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  if (a1)
  {
    v11 = a1;
    v12 = a1;
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v13 = sub_190A465A0();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ECF6D988);
    swift_bridgeObjectRetain();
    v14 = v11;
    swift_bridgeObjectRetain();
    v15 = v11;
    v16 = sub_190A46588();
    v17 = sub_190A47F50();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v32 = a3;
      v19 = (_QWORD *)swift_slowAlloc();
      v31 = a4;
      v20 = swift_slowAlloc();
      v35 = v20;
      *(_DWORD *)v18 = 136446722;
      sub_1908B35C4(0xD00000000000002CLL, 0x8000000190A62660, &v35);
      sub_190A48178();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1908B35C4(a5, a6, &v35);
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 22) = 2114;
      v21 = v11;
      v34 = _swift_stdlib_bridgeErrorToNSError();
      sub_190A48178();
      *v19 = v34;

      _os_log_impl(&dword_1908A7000, v16, v17, "%{public}s - error reloading timelines of kind '%{public}s': %{public}@", (uint8_t *)v18, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
      swift_arrayDestroy();
      v22 = v19;
      a3 = v32;
      MEMORY[0x194014398](v22, -1, -1);
      swift_arrayDestroy();
      v23 = v20;
      a4 = v31;
      MEMORY[0x194014398](v23, -1, -1);
      MEMORY[0x194014398](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v24 = sub_190A465A0();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ECF6D988);
    swift_bridgeObjectRetain_n();
    v25 = sub_190A46588();
    v26 = sub_190A47F68();
    if (os_log_type_enabled(v25, v26))
    {
      v33 = a3;
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v35 = v28;
      *(_DWORD *)v27 = 136446466;
      sub_1908B35C4(0xD00000000000002CLL, 0x8000000190A62660, &v35);
      sub_190A48178();
      *(_WORD *)(v27 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1908B35C4(a5, a6, &v35);
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1908A7000, v25, v26, "%{public}s - reloaded timelines of kind '%{public}s'", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194014398](v28, -1, -1);
      v29 = v27;
      a3 = v33;
      MEMORY[0x194014398](v29, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v11 = 0;
  }
  return sub_19095E8D8(a2, a3, a4, v11);
}

uint64_t sub_19095E8D8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v7 = sub_190A47980();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v19[0] = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_190A479C8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a2;
  v15[3] = a3;
  v15[4] = a4;
  aBlock[4] = sub_190961088;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1908A9D98;
  aBlock[3] = &block_descriptor_66;
  v16 = _Block_copy(aBlock);
  swift_retain();
  v17 = a4;
  sub_190A47998();
  v19[1] = MEMORY[0x1E0DEE9D8];
  sub_1908AA2F4((unint64_t *)&qword_1ECF6D318, v8, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
  sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
  sub_190A481E4();
  MEMORY[0x194013234](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v19[0] + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

void sub_19095EAD8(void *a1)
{
  sub_190960758(a1, 0xD000000000000014, 0x8000000190A62640);
}

double static WidgetCenter.Private_Timeouts.placeholder.getter()
{
  return 15.0;
}

double static WidgetCenter.Private_Timeouts.timeline.getter()
{
  return 30.0;
}

double static WidgetCenter.Private_Timeouts.URLSessionEvents.getter()
{
  return 30.0;
}

uint64_t WidgetCenter.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t WidgetCenter.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall WidgetCenter.invalidateRelevance(ofKind:)(Swift::String ofKind)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  os_unfair_lock_s *v5;

  object = ofKind._object;
  countAndFlagsBits = ofKind._countAndFlagsBits;
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_19095EBE8(v1, countAndFlagsBits, (unint64_t)object);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
}

Swift::Void __swiftcall WidgetCenter.invalidateRelevances(ofKind:)(Swift::String ofKind)
{
  sub_1908B166C(ofKind._countAndFlagsBits, (uint64_t)ofKind._object, (void (*)(uint64_t, uint64_t, uint64_t))sub_19095EBE8);
}

uint64_t sub_19095EBE8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];
  uint64_t v33;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1908B3D9C();
  aBlock[4] = sub_19095F068;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1908B4904;
  aBlock[3] = &block_descriptor_31;
  v10 = _Block_copy(aBlock);
  v11 = objc_msgSend(v9, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);

  sub_190A481B4();
  swift_unknownObjectRelease();
  sub_1908B3694((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AA98);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v12 = v33;
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v13 = sub_190A465A0();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ECF6D988);
    swift_bridgeObjectRetain_n();
    v14 = sub_190A46588();
    v15 = sub_190A47F68();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v30 = a2;
      v17 = (uint8_t *)v16;
      v18 = swift_slowAlloc();
      v29 = v3;
      v19 = v18;
      v31[0] = v18;
      *(_DWORD *)v17 = 136446210;
      swift_bridgeObjectRetain();
      v33 = sub_1908B35C4(v30, a3, v31);
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1908A7000, v14, v15, "Invalidate widget relevances for %{public}s.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v19, -1, -1);
      v20 = v17;
      a2 = v30;
      MEMORY[0x194014398](v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v26 = sub_190A47D7C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v8, 1, 1, v26);
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = 0;
    v27[3] = 0;
    v27[4] = v12;
    v27[5] = a2;
    v27[6] = a3;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_19095ADDC((uint64_t)v8, (uint64_t)&unk_1EE1ED9C0, (uint64_t)v27);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v21 = sub_190A465A0();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ECF6D988);
    v22 = sub_190A46588();
    v23 = sub_190A47F50();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v31[0] = v25;
      *(_DWORD *)v24 = 136446210;
      v33 = sub_1908B35C4(0xD00000000000001DLL, 0x8000000190A62620, v31);
      sub_190A48178();
      swift_arrayDestroy();
      MEMORY[0x194014398](v25, -1, -1);
      MEMORY[0x194014398](v24, -1, -1);
    }

  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

void sub_19095F068(void *a1)
{
  sub_190960758(a1, 0xD00000000000001DLL, 0x8000000190A62620);
}

uint64_t sub_19095F084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[16] = a5;
  v6[17] = a6;
  v6[15] = a4;
  return swift_task_switch();
}

uint64_t sub_19095F0A0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (void *)v0[15];
  v2 = sub_190A47AC4();
  v0[18] = v2;
  v0[2] = v0;
  v0[3] = sub_19095F148;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_19095F668;
  v4[3] = &block_descriptor_36;
  v4[4] = v3;
  objc_msgSend(v1, sel_invalidateRelevancesOfKind_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_19095F148()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_19095F1A8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v1 = sub_190A465A0();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ECF6D988);
  swift_bridgeObjectRetain_n();
  v2 = sub_190A46588();
  v3 = sub_190A47F68();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 136);
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 128);
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v10 = v8;
    *(_DWORD *)v7 = 136446466;
    *(_QWORD *)(v0 + 80) = sub_1908B35C4(0xD00000000000001DLL, 0x8000000190A62620, &v10);
    sub_190A48178();
    *(_WORD *)(v7 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_1908B35C4(v6, v5, &v10);
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1908A7000, v2, v3, "%{public}s - invalidated relevances for widget of kind '%{public}s'", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x194014398](v8, -1, -1);
    MEMORY[0x194014398](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19095F3A0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18[2];

  v1 = *(void **)(v0 + 144);
  swift_willThrow();

  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v2 = *(void **)(v0 + 152);
  v3 = sub_190A465A0();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ECF6D988);
  swift_bridgeObjectRetain();
  v4 = v2;
  swift_bridgeObjectRetain();
  v5 = v2;
  v6 = sub_190A46588();
  v7 = sub_190A47F50();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 152);
  v10 = *(_QWORD *)(v0 + 136);
  if (v8)
  {
    v16 = *(_QWORD *)(v0 + 128);
    v11 = swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v18[0] = v17;
    *(_DWORD *)v11 = 136446722;
    *(_QWORD *)(v0 + 80) = sub_1908B35C4(0xD00000000000001DLL, 0x8000000190A62620, v18);
    sub_190A48178();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_1908B35C4(v16, v10, v18);
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 22) = 2114;
    v13 = v9;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v14;
    sub_190A48178();
    *v12 = v14;

    _os_log_impl(&dword_1908A7000, v6, v7, "%{public}s - error invalidating relevances for widget of kind '%{public}s': %{public}@", (uint8_t *)v11, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
    swift_arrayDestroy();
    MEMORY[0x194014398](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x194014398](v17, -1, -1);
    MEMORY[0x194014398](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19095F668(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6AE48);
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t WidgetCenter.invalidateRelevances(ofKind:inBundle:completion:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  os_unfair_lock_s *v10;

  v9 = *(_QWORD *)(v4 + 24);
  v10 = *(os_unfair_lock_s **)(v9 + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  sub_19095F764(v4, a1, a2, a3, a4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  return swift_release();
}

uint64_t sub_19095F764(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[4];
  _QWORD aBlock[6];
  uint64_t v38;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1908B3D9C();
  aBlock[4] = sub_19095FC10;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1908B4904;
  aBlock[3] = &block_descriptor_23;
  v14 = _Block_copy(aBlock);
  v15 = objc_msgSend(v13, sel_remoteObjectProxyWithErrorHandler_, v14);
  _Block_release(v14);

  sub_190A481B4();
  swift_unknownObjectRelease();
  sub_1908B3694((uint64_t)aBlock, (uint64_t)v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AA98);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v35 = v38;
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v16 = sub_190A465A0();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ECF6D988);
    swift_bridgeObjectRetain_n();
    v17 = sub_190A46588();
    v18 = sub_190A47F68();
    if (os_log_type_enabled(v17, v18))
    {
      v33 = a5;
      v19 = swift_slowAlloc();
      v34 = v5;
      v20 = (uint8_t *)v19;
      v21 = swift_slowAlloc();
      v32 = a4;
      v22 = v21;
      v36[0] = v21;
      *(_DWORD *)v20 = 136446210;
      swift_bridgeObjectRetain();
      v38 = sub_1908B35C4(a2, a3, v36);
      a5 = v33;
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1908A7000, v17, v18, "Invalidate widget relevances for %{public}s.", v20, 0xCu);
      swift_arrayDestroy();
      v23 = v22;
      a4 = v32;
      MEMORY[0x194014398](v23, -1, -1);
      MEMORY[0x194014398](v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v29 = sub_190A47D7C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v12, 1, 1, v29);
    v30 = (_QWORD *)swift_allocObject();
    v30[2] = 0;
    v30[3] = 0;
    v30[4] = v35;
    v30[5] = a2;
    v30[6] = a3;
    v30[7] = a4;
    v30[8] = a5;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_19095ADDC((uint64_t)v12, (uint64_t)&unk_1EE1ED9B0, (uint64_t)v30);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v24 = sub_190A465A0();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ECF6D988);
    v25 = sub_190A46588();
    v26 = sub_190A47F50();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v36[0] = v28;
      *(_DWORD *)v27 = 136446210;
      v38 = sub_1908B35C4(0xD000000000000031, 0x8000000190A625E0, v36);
      sub_190A48178();
      swift_arrayDestroy();
      MEMORY[0x194014398](v28, -1, -1);
      MEMORY[0x194014398](v27, -1, -1);
    }

  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

void sub_19095FC10(void *a1)
{
  sub_190960758(a1, 0xD000000000000031, 0x8000000190A625E0);
}

uint64_t sub_19095FC2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[18] = a7;
  v8[19] = a8;
  v8[16] = a5;
  v8[17] = a6;
  v8[15] = a4;
  return swift_task_switch();
}

uint64_t sub_19095FC4C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = (void *)v0[15];
  v2 = sub_190A47AC4();
  v0[20] = v2;
  v3 = sub_190A47AC4();
  v0[21] = v3;
  v0[2] = v0;
  v0[3] = sub_19095FD18;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_19095F668;
  v5[3] = &block_descriptor_28;
  v5[4] = v4;
  objc_msgSend(v1, sel_invalidateRelevancesOfKind_inBundle_completionHandler_, v2, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_19095FD18()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 176) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_19095FD78()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(void **)(v0 + 160);

  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v2 = sub_190A465A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ECF6D988);
  swift_bridgeObjectRetain_n();
  v3 = sub_190A46588();
  v4 = sub_190A47F68();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 136);
  if (v5)
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v11 = v9;
    *(_DWORD *)v8 = 136446466;
    *(_QWORD *)(v0 + 80) = sub_1908B35C4(0xD000000000000031, 0x8000000190A625E0, &v11);
    sub_190A48178();
    *(_WORD *)(v8 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_1908B35C4(v7, v6, &v11);
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1908A7000, v3, v4, "%{public}s - invalidated relevances for widget of kind '%{public}s'", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x194014398](v9, -1, -1);
    MEMORY[0x194014398](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19095FF74()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[2];

  v1 = *(void **)(v0 + 168);
  v2 = *(void **)(v0 + 160);
  swift_willThrow();

  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v3 = *(void **)(v0 + 176);
  v4 = sub_190A465A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ECF6D988);
  swift_bridgeObjectRetain();
  v5 = v3;
  swift_bridgeObjectRetain();
  v6 = v3;
  v7 = sub_190A46588();
  v8 = sub_190A47F50();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(void **)(v0 + 176);
  v11 = *(_QWORD *)(v0 + 136);
  if (v9)
  {
    v17 = *(_QWORD *)(v0 + 128);
    v12 = swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v19[0] = v18;
    *(_DWORD *)v12 = 136446722;
    *(_QWORD *)(v0 + 80) = sub_1908B35C4(0xD000000000000031, 0x8000000190A625E0, v19);
    sub_190A48178();
    *(_WORD *)(v12 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_1908B35C4(v17, v11, v19);
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 22) = 2114;
    v14 = v10;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v15;
    sub_190A48178();
    *v13 = v15;

    _os_log_impl(&dword_1908A7000, v7, v8, "%{public}s - error invalidating relevances for widget of kind '%{public}s': %{public}@", (uint8_t *)v12, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
    swift_arrayDestroy();
    MEMORY[0x194014398](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x194014398](v18, -1, -1);
    MEMORY[0x194014398](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WidgetCenter.setRelevances<A>(_:kind:inBundle:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  objc_class *v15;
  _BYTE *v16;
  _BYTE *v17;
  id v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  objc_super v22;

  v8 = v7;
  v15 = (objc_class *)type metadata accessor for WidgetRelevanceFetchResult();
  v16 = objc_allocWithZone(v15);
  v16[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 0;
  v17 = v16;
  *(_QWORD *)&v17[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = sub_1909AE1FC(MEMORY[0x1E0DEE9D8]);

  v22.receiver = v17;
  v22.super_class = v15;
  v18 = objc_msgSendSuper2(&v22, sel_init);
  v19 = *(_QWORD *)(v8 + 24);
  v20 = *(os_unfair_lock_s **)(v19 + 16);
  swift_retain();
  os_unfair_lock_lock(v20);
  sub_1909603EC(v8, a2, a3, a4, a5, a6, a7, v18);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 16));

  return swift_release();
}

uint64_t WidgetCenter.setRelevanceResult(_:kind:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  os_unfair_lock_s *v12;

  v11 = *(_QWORD *)(v5 + 24);
  v12 = *(os_unfair_lock_s **)(v11 + 16);
  swift_retain();
  os_unfair_lock_lock(v12);
  sub_1909603EC(v5, a2, a3, 0, 0, a4, a5, a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  return swift_release();
}

uint64_t sub_1909603EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  id v13;
  void *v14;
  id v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  void *v27;
  uint64_t aBlock;
  uint64_t v29;
  void (*v30)(uint64_t, void *, void *);
  void *v31;
  void *v32;
  _QWORD *v33;
  _BYTE v34[32];

  v13 = sub_1908B3D9C();
  v32 = sub_19096073C;
  v33 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v29 = 1107296256;
  v30 = (void (*)(uint64_t, void *, void *))sub_1908B4904;
  v31 = &block_descriptor_14;
  v14 = _Block_copy(&aBlock);
  v15 = objc_msgSend(v13, sel_remoteObjectProxyWithErrorHandler_, v14);
  _Block_release(v14);

  sub_190A481B4();
  swift_unknownObjectRelease();
  sub_1908B3694((uint64_t)v34, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AA98);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v16 = (void *)sub_190A47AC4();
    if (a5)
      a5 = (void *)sub_190A47AC4();
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = a6;
    v17[3] = a7;
    v17[4] = a8;
    v17[5] = a2;
    v17[6] = a3;
    v32 = sub_190960EA4;
    v33 = v17;
    aBlock = MEMORY[0x1E0C809B0];
    v29 = 1107296256;
    v30 = sub_190960C50;
    v31 = &block_descriptor_20;
    v18 = _Block_copy(&aBlock);
    swift_retain();
    v19 = a8;
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v27, sel_widgetRelevanceArchiveForKind_inBundle_handler_, v16, a5, v18);
    _Block_release(v18);
    swift_unknownObjectRelease();

  }
  else
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v20 = sub_190A465A0();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ECF6D988);
    v21 = sub_190A46588();
    v22 = sub_190A47F50();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      aBlock = v24;
      *(_DWORD *)v23 = 136446210;
      sub_1908B35C4(0xD00000000000003ALL, 0x8000000190A62550, &aBlock);
      sub_190A48178();
      swift_arrayDestroy();
      MEMORY[0x194014398](v24, -1, -1);
      MEMORY[0x194014398](v23, -1, -1);
    }

  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

void sub_19096073C(void *a1)
{
  sub_190960758(a1, 0xD00000000000003ALL, 0x8000000190A62550);
}

void sub_190960758(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  id v7;
  id v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  NSObject *oslog;
  uint64_t v15;
  uint64_t v16;

  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v6 = sub_190A465A0();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ECF6D988);
  v7 = a1;
  v8 = a1;
  oslog = sub_190A46588();
  v9 = sub_190A47F50();
  if (os_log_type_enabled(oslog, v9))
  {
    v10 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v16 = v12;
    *(_DWORD *)v10 = 136446466;
    sub_1908B35C4(a2, a3, &v16);
    sub_190A48178();
    *(_WORD *)(v10 + 12) = 2114;
    v13 = a1;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    sub_190A48178();
    *v11 = v15;

    _os_log_impl(&dword_1908A7000, oslog, v9, "%{public}s - remoteObjectProxy error: %{public}@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
    swift_arrayDestroy();
    MEMORY[0x194014398](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x194014398](v12, -1, -1);
    MEMORY[0x194014398](v10, -1, -1);

  }
  else
  {

  }
}

void sub_19096098C(void *a1, void *a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  id v9;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;

  if (a1)
  {
    v9 = a1;
    ((void (*)(void *))a3)(a1);

  }
  else if (a2)
  {
    v13 = a2;
    sub_19098C9BC(a5, v13);
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v16 = sub_190A465A0();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ECF6D988);
    swift_bridgeObjectRetain_n();
    v17 = sub_190A46588();
    v18 = sub_190A47F68();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v22 = v20;
      *(_DWORD *)v19 = 136446210;
      swift_bridgeObjectRetain();
      sub_1908B35C4(a6, a7, &v22);
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1908A7000, v17, v18, "Set widget relevances for %{public}s.", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v20, -1, -1);
      MEMORY[0x194014398](v19, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    ((void (*)(_QWORD))a3)(0);

  }
  else
  {
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
    v14 = sub_190A47ADC();
    v21 = sub_19096BFDC(v14, v15, 1200, 0, 0xD00000000000001ELL, 0x8000000190A625C0);
    a3();

  }
}

void sub_190960C50(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v6 = a2;
  v7 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_190960CC4()
{
  return objectdestroyTm_0((void (*)(_QWORD))MEMORY[0x1E0DEEEC0], (void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_190960CDC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1908CEB54;
  return sub_19095BC8C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_190960D5C(uint64_t a1)
{
  uint64_t v1;

  return sub_19095C264(a1, v1);
}

uint64_t method lookup function for WidgetCenter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetCenter.invalidateConfigurationRecommendations()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of WidgetCenter.invalidateConfigurationRecommendations(inBundle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of WidgetCenter.currentConfigurations()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 160) + *(_QWORD *)(*(_QWORD *)v0 + 160));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_190930784;
  return v4();
}

uint64_t dispatch thunk of WidgetCenter.reloadTimelines(ofKind:inBundle:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

ValueMetadata *type metadata accessor for WidgetCenter.UserInfoKey()
{
  return &type metadata for WidgetCenter.UserInfoKey;
}

ValueMetadata *type metadata accessor for WidgetCenter.Private_Timeouts()
{
  return &type metadata for WidgetCenter.Private_Timeouts;
}

uint64_t sub_190960E0C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_190960E30()
{
  uint64_t v0;

  return sub_19095AF3C(v0, "WidgetCenter connection interrupted.");
}

uint64_t sub_190960E50()
{
  uint64_t v0;

  return sub_19095AF3C(v0, "WidgetCenter connection invalidated.");
}

uint64_t sub_190960E70()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_190960EA4(void *a1, void *a2)
{
  uint64_t v2;

  sub_19096098C(a1, a2, *(void (**)(void))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_190960EB4()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190960EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;

  v5 = *(_OWORD *)(v0 + 48);
  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1908C5090;
  *(_QWORD *)(v3 + 152) = v2;
  *(_OWORD *)(v3 + 136) = v5;
  *(_OWORD *)(v3 + 120) = v6;
  return swift_task_switch();
}

uint64_t sub_190960F6C()
{
  return objectdestroyTm_0((void (*)(_QWORD))MEMORY[0x1E0DEEEC0], (void (*)(_QWORD))MEMORY[0x1E0DEEEC0], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190960F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1908CEB54;
  *(_QWORD *)(v3 + 136) = v2;
  *(_OWORD *)(v3 + 120) = v5;
  return swift_task_switch();
}

uint64_t sub_190960FF4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190961020(void *a1)
{
  uint64_t *v1;

  return sub_19095E028(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_19096102C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_19096105C()
{
  return objectdestroyTm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190961074(void *a1)
{
  uint64_t v1;

  return sub_19095E438(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_190961088()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t objectdestroy_62Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1909610E0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190961108(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBA10) - 8) + 80);
  return sub_19095C9A4(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_19096114C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBA10);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1909611C4()
{
  return sub_190961434((uint64_t (*)(unint64_t, _QWORD))sub_19095CE38);
}

uint64_t objectdestroy_83Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBA10);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_19096124C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBA10) - 8) + 80);
  return sub_19095CE7C(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_1909612A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBA10);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_190961328(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBA10) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1908CEB54;
  return sub_19095D230(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_1909613C4()
{
  return objectdestroy_105Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_1909613D4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBA10) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_19095D1E8((int)v0 + (int)v2, *(id *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_19096141C()
{
  return objectdestroy_105Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_190961428()
{
  return sub_190961434((uint64_t (*)(unint64_t, _QWORD))sub_19095D930);
}

uint64_t sub_190961434(uint64_t (*a1)(unint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBA10) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return a1(v1 + v3, *(_QWORD *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_190961488()
{
  return objectdestroy_105Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t objectdestroy_105Tm(void (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBA10);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v1 + v5, v3);
  a1(*(_QWORD *)(v1 + v6));
  return swift_deallocObject();
}

uint64_t sub_190961518()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19096153C()
{
  uint64_t v0;

  swift_release();
  sub_19096156C(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

void sub_19096156C(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_190961578()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

id sub_1909615A4(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

uint64_t sub_190961670(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_190A48484();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_190A48484();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x19401351C](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1908BC2B4(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_190A48484();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_190A47C74();
  }
  __break(1u);
  return result;
}

uint64_t sub_190961828(uint64_t a1)
{
  char **v1;
  size_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  size_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  BOOL v13;
  size_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1908F3148(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[v9 + 32];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = *((_QWORD *)v3 + 2);
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    *((_QWORD *)v3 + 2) = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_190961970(uint64_t a1)
{
  char **v1;
  int64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1908F2A58(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v11 = *((_QWORD *)v3 + 2);
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    *((_QWORD *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_190961AB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1908F3240(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C530);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_190961C1C(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_1908F23D4(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = type metadata accessor for WidgetDescriptor(0);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_190A484CC();
  __break(1u);
  return result;
}

BOOL ActivityViewTag.isJindo.getter()
{
  unsigned __int8 *v0;

  return *v0 != 4;
}

void *static ActivityViewTag.allCases.getter()
{
  uint64_t v0;

  v0 = sub_190962968((uint64_t)&unk_1E2CC4420);
  sub_190961828(v0);
  return &unk_1E2CC4448;
}

uint64_t ActivityViewTag.description.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  if ((_DWORD)v1 != 4)
    __asm { BR              X10 }
  return 0x6D6574497473696CLL;
}

uint64_t ActivityViewTag.defaultViewAlignment.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)&sub_190961F08 + 4 * byte_190A51B44[*v0]))();
}

uint64_t ActivityViewTag.hash(into:)()
{
  _BYTE *v0;

  if (*v0 != 4)
    sub_190A487CC();
  return sub_190A487CC();
}

BOOL static ActivityViewTag.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 4)
    return v3 == 4;
  if (v3 == 4)
    return 0;
  return v2 == v3;
}

uint64_t sub_190961F98()
{
  _BYTE *v0;

  if (*v0)
    return 0x6F646E696ALL;
  else
    return 0x6D6574497473696CLL;
}

uint64_t sub_190961FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_190963164(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190961FF4()
{
  sub_190962A24();
  return sub_190A48868();
}

uint64_t sub_19096201C()
{
  sub_190962A24();
  return sub_190A48874();
}

uint64_t sub_190962044()
{
  return 12383;
}

uint64_t sub_190962050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_190A486DC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1909620CC()
{
  sub_190962A68();
  return sub_190A48868();
}

uint64_t sub_1909620F4()
{
  sub_190962A68();
  return sub_190A48874();
}

uint64_t sub_19096211C()
{
  sub_190962AF0();
  return sub_190A48868();
}

uint64_t sub_190962144()
{
  sub_190962AF0();
  return sub_190A48874();
}

uint64_t ActivityViewTag.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6740);
  v17 = *(_QWORD *)(v3 - 8);
  v18 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6748);
  v15 = *(_QWORD *)(v6 - 8);
  v16 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6738);
  v19 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190962A24();
  sub_190A48850();
  if (v12 == 4)
  {
    v20 = 0;
    sub_190962AF0();
    sub_190A485C8();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v16);
  }
  else
  {
    v22 = 1;
    sub_190962A68();
    sub_190A485C8();
    v21 = v12;
    sub_190962AAC();
    v14 = v18;
    sub_190A48640();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v11, v9);
}

uint64_t ActivityViewTag.hashValue.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_190A487C0();
  if (v1 != 4)
    sub_190A487CC();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t ActivityViewTag.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;

  v32 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6AA8);
  v4 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  v31 = v4;
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6AB0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6AA0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_190962A24();
  v15 = v35;
  sub_190A48838();
  if (v15)
    goto LABEL_7;
  v16 = v7;
  v29 = v6;
  v17 = v33;
  v35 = v11;
  v18 = sub_190A485A4();
  if (*(_QWORD *)(v18 + 16) != 1)
  {
    v21 = sub_190A4831C();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90);
    *v23 = &type metadata for ActivityViewTag;
    sub_190A48508();
    sub_190A48304();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x1E0DEC450], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
LABEL_7:
    v24 = (uint64_t)v34;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v19 = v13;
  if ((*(_BYTE *)(v18 + 32) & 1) != 0)
  {
    v38 = 1;
    sub_190962A68();
    v20 = v10;
    sub_190A484FC();
    sub_190962B34();
    v26 = v30;
    sub_190A48580();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v26);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v19, v20);
    v27 = v37;
  }
  else
  {
    v36 = 0;
    sub_190962AF0();
    sub_190A484FC();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
    v27 = 4;
  }
  v24 = (uint64_t)v34;
  *v32 = v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_1909627A8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_190A487C0();
  if (v1 != 4)
    sub_190A487CC();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t sub_190962804()
{
  _BYTE *v0;

  if (*v0 != 4)
    sub_190A487CC();
  return sub_190A487CC();
}

uint64_t sub_190962848()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_190A487C0();
  if (v1 != 4)
    sub_190A487CC();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t sub_1909628A4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_190962968((uint64_t)&unk_1E2CC4420);
  result = sub_190961828(v2);
  *a1 = &unk_1E2CC4448;
  return result;
}

uint64_t sub_190962900@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return ActivityViewTag.init(from:)(a1, a2);
}

uint64_t sub_190962914(_QWORD *a1)
{
  return ActivityViewTag.encode(to:)(a1);
}

BOOL sub_19096292C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 4)
    return v3 == 4;
  if (v3 == 4)
    return 0;
  return v2 == v3;
}

uint64_t sub_190962968(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  char *v4;
  char v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1908B8DB8(0, v2, 0);
    result = v9;
    v4 = (char *)(a1 + 32);
    do
    {
      v6 = *v4++;
      v5 = v6;
      v10 = result;
      v8 = *(_QWORD *)(result + 16);
      v7 = *(_QWORD *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1908B8DB8(v7 > 1, v8 + 1, 1);
        result = v10;
      }
      *(_QWORD *)(result + 16) = v8 + 1;
      *(_BYTE *)(result + v8 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

unint64_t sub_190962A24()
{
  unint64_t result;

  result = qword_1EE1EAB48;
  if (!qword_1EE1EAB48)
  {
    result = MEMORY[0x19401429C](&unk_190A51F44, &type metadata for ActivityViewTag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EAB48);
  }
  return result;
}

unint64_t sub_190962A68()
{
  unint64_t result;

  result = qword_1EE1ED9D8;
  if (!qword_1EE1ED9D8)
  {
    result = MEMORY[0x19401429C](&unk_190A51EF4, &type metadata for ActivityViewTag.JindoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ED9D8);
  }
  return result;
}

unint64_t sub_190962AAC()
{
  unint64_t result;

  result = qword_1EE1ED9E0;
  if (!qword_1EE1ED9E0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for JindoViewTag, &type metadata for JindoViewTag);
    atomic_store(result, (unint64_t *)&qword_1EE1ED9E0);
  }
  return result;
}

unint64_t sub_190962AF0()
{
  unint64_t result;

  result = qword_1EE1EAB70;
  if (!qword_1EE1EAB70)
  {
    result = MEMORY[0x19401429C](&unk_190A51EA4, &type metadata for ActivityViewTag.ListItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EAB70);
  }
  return result;
}

unint64_t sub_190962B34()
{
  unint64_t result;

  result = qword_1EE1ED9E8;
  if (!qword_1EE1ED9E8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for JindoViewTag, &type metadata for JindoViewTag);
    atomic_store(result, (unint64_t *)&qword_1EE1ED9E8);
  }
  return result;
}

unint64_t sub_190962B7C()
{
  unint64_t result;

  result = qword_1EE1ED9F0;
  if (!qword_1EE1ED9F0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ActivityViewTag, &type metadata for ActivityViewTag);
    atomic_store(result, (unint64_t *)&qword_1EE1ED9F0);
  }
  return result;
}

unint64_t sub_190962BC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1ED9F8;
  if (!qword_1EE1ED9F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EACF8);
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1ED9F8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityViewTag(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
  {
    v6 = *a1;
    v7 = v6 >= 4;
    v8 = v6 - 4;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_190962C60 + 4 * byte_190A51B49[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for ActivityViewTag(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFC)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_190962D08 + 4 * byte_190A51B53[v5]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_190962D3C + 4 * byte_190A51B4E[v5]))();
}

uint64_t sub_190962D3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190962D44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190962D4CLL);
  return result;
}

uint64_t sub_190962D58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190962D60);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_190962D64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190962D6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190962D78(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 4)
    return v1 - 3;
  else
    return 0;
}

_BYTE *sub_190962D8C(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 3;
  return result;
}

ValueMetadata *type metadata accessor for ActivityViewTag()
{
  return &type metadata for ActivityViewTag;
}

uint64_t storeEnumTagSinglePayload for ActivityViewTag.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190962DF8 + 4 * byte_190A51B5D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190962E2C + 4 * byte_190A51B58[v4]))();
}

uint64_t sub_190962E2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190962E34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190962E3CLL);
  return result;
}

uint64_t sub_190962E48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190962E50);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190962E54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190962E5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityViewTag.CodingKeys()
{
  return &type metadata for ActivityViewTag.CodingKeys;
}

ValueMetadata *type metadata accessor for ActivityViewTag.ListItemCodingKeys()
{
  return &type metadata for ActivityViewTag.ListItemCodingKeys;
}

uint64_t storeEnumTagSinglePayload for ActivityViewTag.JindoCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_190962EC8 + 4 * byte_190A51B62[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_190962EE8 + 4 * byte_190A51B67[v4]))();
}

_BYTE *sub_190962EC8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_190962EE8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190962EF0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190962EF8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190962F00(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190962F08(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ActivityViewTag.JindoCodingKeys()
{
  return &type metadata for ActivityViewTag.JindoCodingKeys;
}

unint64_t sub_190962F28()
{
  unint64_t result;

  result = qword_1EE1EDA00;
  if (!qword_1EE1EDA00)
  {
    result = MEMORY[0x19401429C](&unk_190A51D74, &type metadata for ActivityViewTag.JindoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDA00);
  }
  return result;
}

unint64_t sub_190962F70()
{
  unint64_t result;

  result = qword_1EE1EDA08;
  if (!qword_1EE1EDA08)
  {
    result = MEMORY[0x19401429C](&unk_190A51E7C, &type metadata for ActivityViewTag.CodingKeys);
    atomic_store(result, &qword_1EE1EDA08);
  }
  return result;
}

unint64_t sub_190962FB8()
{
  unint64_t result;

  result = qword_1EE1EAB80;
  if (!qword_1EE1EAB80)
  {
    result = MEMORY[0x19401429C](&unk_190A51D9C, &type metadata for ActivityViewTag.ListItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EAB80);
  }
  return result;
}

unint64_t sub_190963000()
{
  unint64_t result;

  result = qword_1EE1EAB78;
  if (!qword_1EE1EAB78)
  {
    result = MEMORY[0x19401429C](&unk_190A51DC4, &type metadata for ActivityViewTag.ListItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EAB78);
  }
  return result;
}

unint64_t sub_190963048()
{
  unint64_t result;

  result = qword_1EE1EAB68;
  if (!qword_1EE1EAB68)
  {
    result = MEMORY[0x19401429C](&unk_190A51CE4, &type metadata for ActivityViewTag.JindoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EAB68);
  }
  return result;
}

unint64_t sub_190963090()
{
  unint64_t result;

  result = qword_1EE1EAB60;
  if (!qword_1EE1EAB60)
  {
    result = MEMORY[0x19401429C](&unk_190A51D0C, &type metadata for ActivityViewTag.JindoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EAB60);
  }
  return result;
}

unint64_t sub_1909630D8()
{
  unint64_t result;

  result = qword_1EE1EAB58;
  if (!qword_1EE1EAB58)
  {
    result = MEMORY[0x19401429C](&unk_190A51DEC, &type metadata for ActivityViewTag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EAB58);
  }
  return result;
}

unint64_t sub_190963120()
{
  unint64_t result;

  result = qword_1EE1EAB50;
  if (!qword_1EE1EAB50)
  {
    result = MEMORY[0x19401429C](&unk_190A51E14, &type metadata for ActivityViewTag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EAB50);
  }
  return result;
}

uint64_t sub_190963164(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D6574497473696CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F646E696ALL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_19096324C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  v3[13] = swift_task_alloc();
  type metadata accessor for ControlTemplateToggle.Option(0);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = sub_190A47D64();
  v3[17] = sub_190A47D58();
  v5 = (_QWORD *)swift_task_alloc();
  v3[18] = v5;
  *v5 = v3;
  v5[1] = sub_19096331C;
  return sub_190964698(v2, a2);
}

uint64_t sub_19096331C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v7;

  v4 = (_QWORD *)*v3;
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = v2;
  v5 = (_QWORD *)*v3;
  v4[19] = a2;
  v4[20] = v2;
  swift_task_dealloc();
  if (v2)
  {
    sub_190A47D28();
    return swift_task_switch();
  }
  else
  {
    v7 = (_QWORD *)swift_task_alloc();
    v4[21] = v7;
    *v7 = v5;
    v7[1] = sub_1909633CC;
    return sub_19096478C(v4[12], v4[11]);
  }
}

uint64_t sub_1909633CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v7;

  v4 = (_QWORD *)*v3;
  v4[6] = v3;
  v4[7] = a1;
  v4[8] = a2;
  v4[9] = v2;
  v5 = (_QWORD *)*v3;
  v4[22] = a2;
  v4[23] = v2;
  swift_task_dealloc();
  if (v2)
  {
    sub_190A47D28();
    return swift_task_switch();
  }
  else
  {
    v7 = (_QWORD *)swift_task_alloc();
    v4[24] = v7;
    *v7 = v5;
    v7[1] = sub_190963484;
    return sub_190963A44(v4[15], 1, v4[12], v4[11]);
  }
}

uint64_t sub_190963484()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  _QWORD *v4;

  v2 = *v1;
  v2[25] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_190A47D28();
    return swift_task_switch();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    v2[26] = (uint64_t)v4;
    *v4 = v2;
    v4[1] = sub_190963558;
    return sub_190963A44(v2[14], 0, v2[12], v2[11]);
  }
}

uint64_t sub_190963558()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v7)(_QWORD, uint64_t);

  v2 = *v1;
  *(_QWORD *)(v2 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_190964924(*(_QWORD *)(v2 + 120));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_190A47D28();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 96);
    *(_BYTE *)(v2 + 256) = *(_BYTE *)(v4 + 32);
    v5 = *(_QWORD *)(v4 + 168);
    v7 = (uint64_t (*)(_QWORD, uint64_t))(**(int **)(v4 + 152) + *(_QWORD *)(v4 + 152));
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 224) = v6;
    *v6 = v2;
    v6[1] = sub_190963660;
    return v7(*(_QWORD *)(v2 + 104), v5);
  }
}

uint64_t sub_190963660()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    v5 = v2 + 14;
    v4 = v2[14];
    v3 = v5[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_190964924(v4);
    sub_190964924(v3);
  }
  else
  {
    v6 = v2[3];
    v2[30] = v2[7];
    v2[31] = v6;
  }
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_190963740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(v0 + 248);
  v14 = *(_BYTE *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  v12 = *(_QWORD *)(v0 + 240);
  v13 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD **)(v0 + 80);
  swift_release();
  v7 = (int *)type metadata accessor for ControlTemplateToggle(0);
  v8 = (uint64_t)v6 + v7[8];
  v9 = sub_190A45FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (_QWORD *)((char *)v6 + v7[11]);
  *v10 = 0;
  v10[1] = 0;
  *v6 = v1;
  v6[1] = v3;
  v6[2] = v12;
  v6[3] = v2;
  sub_190964960(v4, (uint64_t)v6 + v7[6]);
  sub_190964960(v5, (uint64_t)v6 + v7[7]);
  sub_1908DCA84(v13, v8, (uint64_t *)&unk_1ECF6C858);
  *((_BYTE *)v6 + v7[9]) = 0;
  *((_BYTE *)v6 + v7[10]) = v14;
  swift_bridgeObjectRelease();
  *v10 = 0;
  v10[1] = 0;
  *((_BYTE *)v6 + v7[12]) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190963880()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909638D8()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19096393C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190963994()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909639EC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190963A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t);

  *(_BYTE *)(v4 + 169) = a2;
  *(_QWORD *)(v4 + 176) = a1;
  *(_QWORD *)(v4 + 184) = a4;
  *(_QWORD *)(v4 + 192) = type metadata accessor for ControlTemplateToggle.Option(0);
  *(_QWORD *)(v4 + 200) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  *(_QWORD *)(v4 + 208) = swift_task_alloc();
  *(_QWORD *)(v4 + 216) = swift_task_alloc();
  *(_QWORD *)(v4 + 224) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB690);
  *(_QWORD *)(v4 + 232) = swift_task_alloc();
  *(_QWORD *)(v4 + 240) = swift_task_alloc();
  *(_QWORD *)(v4 + 248) = swift_task_alloc();
  v7 = sub_190A46C30();
  *(_QWORD *)(v4 + 256) = v7;
  *(_QWORD *)(v4 + 264) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 272) = swift_task_alloc();
  v8 = sub_190A47284();
  *(_QWORD *)(v4 + 280) = v8;
  *(_QWORD *)(v4 + 288) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 296) = swift_task_alloc();
  *(_QWORD *)(v4 + 304) = swift_task_alloc();
  *(_QWORD *)(v4 + 312) = swift_task_alloc();
  *(_QWORD *)(v4 + 320) = sub_190A47D64();
  *(_QWORD *)(v4 + 328) = sub_190A47D58();
  v9 = *(int **)(a3 + 88);
  *(_OWORD *)(v4 + 336) = *(_OWORD *)(a3 + 104);
  v10 = *(_QWORD *)(a3 + 168);
  *(_QWORD *)(v4 + 352) = v10;
  v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)v9 + *v9);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 360) = v11;
  *v11 = v4;
  v11[1] = sub_190963BF0;
  return v13(v10, a2);
}

uint64_t sub_190963BF0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)*v2;
  v3[46] = a1;
  v3[47] = v1;
  swift_task_dealloc();
  v3[48] = sub_190A47D28();
  v3[49] = v4;
  return swift_task_switch();
}

uint64_t sub_190963C84()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  int *v4;

  v1 = *(int **)(v0 + 336);
  *(_QWORD *)(v0 + 400) = swift_getKeyPath();
  v4 = (int *)((char *)v1 + *v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 408) = v2;
  *v2 = v0;
  v2[1] = sub_190963D00;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))v4)(v0 + 16, *(_QWORD *)(v0 + 352), *(unsigned __int8 *)(v0 + 169));
}

uint64_t sub_190963D00()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 416) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_190963D60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  void (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v1 = *(_QWORD *)(v0 + 400);
  v2 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 248);
  v80 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 184);
  swift_release();
  *(_QWORD *)(v0 + 152) = v2;
  v89 = *(_QWORD *)(v0 + 16);
  v83 = *(_QWORD *)(v0 + 32);
  v84 = *(_QWORD *)(v0 + 24);
  v82 = *(_QWORD *)(v0 + 40);
  v81 = *(_QWORD *)(v0 + 48);
  v87 = *(_QWORD *)(v0 + 64);
  v88 = *(_QWORD *)(v0 + 56);
  v85 = *(_QWORD *)(v0 + 80);
  v86 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 160) = v1;
  *(_BYTE *)(v0 + 168) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA3E8);
  swift_allocObject();
  swift_retain();
  swift_retain();
  sub_190A46FF0();
  v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v78(v3, v6, v80);
  sub_190A46FA8();
  sub_190A46FCC();
  swift_release();
  sub_190A47194();
  v7 = sub_190A471D0();
  v8 = *(_QWORD *)(v7 - 8);
  v79 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  v9 = v79(v5, 1, v7);
  v10 = *(_QWORD *)(v0 + 248);
  if (v9 == 1)
  {
    sub_1908AA544(v10, &qword_1EE1EB690);
    v75 = 0;
    v76 = 0;
  }
  else
  {
    v11 = (void *)sub_190A471C4();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
    v12 = objc_msgSend(v11, sel_string);

    v13 = sub_190A47ADC();
    v75 = v14;
    v76 = v13;

  }
  v15 = *(_QWORD *)(v0 + 216);
  sub_190A4726C();
  v16 = sub_190A47260();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  v19 = *(_QWORD *)(v0 + 216);
  if (v18 == 1)
  {
    sub_1908AA544(*(_QWORD *)(v0 + 216), (uint64_t *)&unk_1ECF6A3B8);
  }
  else
  {
    v20 = sub_190A47254();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v16);
    if ((v20 & 1) != 0)
    {
      sub_190A4726C();
      goto LABEL_9;
    }
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v17 + 56))(*(_QWORD *)(v0 + 224), 1, 1, v16);
LABEL_9:
  v73 = v16;
  v74 = v8;
  v72 = v17;
  if (v89)
  {
    swift_retain();
    sub_190A47674();
    v22 = v21;
    v24 = v23;
    v26 = v25;
    v28 = v27;
    swift_release();
    v70 = v26 | ((unint64_t)v28 << 32);
    v71 = v22 | ((unint64_t)v24 << 32);
  }
  else
  {
    v70 = 0;
    v71 = 0;
  }
  v29 = *(_QWORD *)(v0 + 304);
  v30 = *(_QWORD *)(v0 + 272);
  v66 = *(_QWORD *)(v0 + 288);
  v68 = *(_QWORD *)(v0 + 280);
  v62 = *(_QWORD *)(v0 + 256);
  v64 = *(_QWORD *)(v0 + 240);
  v31 = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 88) = v84;
  *(_QWORD *)(v0 + 96) = v83;
  *(_QWORD *)(v0 + 104) = v82;
  *(_QWORD *)(v0 + 112) = v81;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA3F0);
  swift_allocObject();
  sub_190953E94(v84, v83, v82, v81);
  sub_190953E94(v84, v83, v82, v81);
  sub_190A46FF0();
  v78(v30, v31, v62);
  sub_190A46FA8();
  sub_190A46FCC();
  swift_release();
  sub_190953EC4(v84, v83, v82, v81);
  sub_190A47194();
  v77 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
  v77(v29, v68);
  v32 = v79(v64, 1, v7);
  v33 = *(_QWORD *)(v0 + 240);
  if (v32 == 1)
  {
    sub_1908AA544(*(_QWORD *)(v0 + 240), &qword_1EE1EB690);
    v67 = 0;
    v69 = 0;
  }
  else
  {
    v34 = (void *)sub_190A471C4();
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v33, v7);
    v35 = objc_msgSend(v34, sel_string);

    v36 = sub_190A47ADC();
    v67 = v37;
    v69 = v36;

  }
  v38 = *(_QWORD *)(v0 + 296);
  v39 = *(_QWORD *)(v0 + 272);
  v60 = *(_QWORD *)(v0 + 256);
  v63 = *(_QWORD *)(v0 + 232);
  v65 = *(_QWORD *)(v0 + 280);
  v40 = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 120) = v88;
  *(_QWORD *)(v0 + 128) = v87;
  *(_QWORD *)(v0 + 136) = v86;
  *(_QWORD *)(v0 + 144) = v85;
  swift_allocObject();
  sub_190953E94(v88, v87, v86, v85);
  sub_190953E94(v88, v87, v86, v85);
  sub_190A46FF0();
  v78(v39, v40, v60);
  sub_190A46FA8();
  sub_190A46FCC();
  swift_release();
  sub_190953EC4(v88, v87, v86, v85);
  sub_190A47194();
  v77(v38, v65);
  v41 = v79(v63, 1, v7);
  v42 = *(_QWORD *)(v0 + 232);
  if (v41 == 1)
  {
    sub_1908AA544(*(_QWORD *)(v0 + 232), &qword_1EE1EB690);
    v57 = 0;
    v58 = 0;
  }
  else
  {
    v43 = (void *)sub_190A471C4();
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v42, v7);
    v44 = objc_msgSend(v43, sel_string);

    v45 = sub_190A47ADC();
    v57 = v46;
    v58 = v45;

  }
  v61 = *(_QWORD *)(v0 + 312);
  v59 = *(_QWORD *)(v0 + 280);
  v47 = *(_QWORD *)(v0 + 224);
  v48 = *(_QWORD *)(v0 + 208);
  v50 = *(int **)(v0 + 192);
  v49 = *(uint64_t **)(v0 + 200);
  v51 = *(_QWORD *)(v0 + 176);
  sub_19093AF58(v47, v48);
  v52 = (uint64_t)v49 + v50[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v52, 1, 1, v73);
  v53 = (char *)v49 + v50[7];
  *(_QWORD *)v53 = 0;
  *((_QWORD *)v53 + 1) = 0;
  v53[16] = 1;
  v54 = (uint64_t *)((char *)v49 + v50[8]);
  *v54 = 0;
  v54[1] = 0;
  v55 = (uint64_t *)((char *)v49 + v50[9]);
  *v55 = 0;
  v55[1] = 0;
  *v49 = v76;
  v49[1] = v75;
  v49[2] = 0;
  sub_1908DCA84(v48, v52, (uint64_t *)&unk_1ECF6A3B8);
  *(_QWORD *)v53 = v71;
  *((_QWORD *)v53 + 1) = v70;
  v53[16] = v89 == 0;
  swift_bridgeObjectRelease();
  *v54 = v69;
  v54[1] = v67;
  swift_bridgeObjectRelease();
  *v55 = v58;
  v55[1] = v57;
  sub_190964960((uint64_t)v49, v51);
  swift_release();
  swift_release();
  swift_release();
  sub_190953EC4(v84, v83, v82, v81);
  sub_190953EC4(v88, v87, v86, v85);
  sub_1908AA544(v47, (uint64_t *)&unk_1ECF6A3B8);
  v77(v61, v59);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909644E8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909645B4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190964698(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v2[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB690);
  v2[4] = swift_task_alloc();
  v4 = sub_190A46C30();
  v2[5] = v4;
  v2[6] = *(_QWORD *)(v4 - 8);
  v2[7] = swift_task_alloc();
  v5 = sub_190A47284();
  v2[8] = v5;
  v2[9] = *(_QWORD *)(v5 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_190A47D64();
  v2[12] = sub_190A47D58();
  v6 = *(int **)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 168);
  v10 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
  v8 = (_QWORD *)swift_task_alloc();
  v2[13] = v8;
  *v8 = v2;
  v8[1] = sub_1909532A4;
  return v10(v7);
}

uint64_t sub_19096478C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[3] = a1;
  v2[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB690);
  v2[5] = swift_task_alloc();
  v3 = sub_190A46C30();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v4 = sub_190A47284();
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = swift_task_alloc();
  sub_190A47D64();
  v2[12] = sub_190A47D58();
  v2[13] = sub_190A47D28();
  v2[14] = v5;
  return swift_task_switch();
}

uint64_t sub_19096486C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(int **)(v1 + 72);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 168);
    v6 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v4;
    *v4 = v0;
    v4[1] = sub_190953704;
    return v6(v3);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
  }
}

uint64_t sub_190964924(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ControlTemplateToggle.Option(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_190964960(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ControlTemplateToggle.Option(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t EnvironmentValues.widget.getter()
{
  uint64_t v1;

  sub_19094291C();
  sub_190A46C3C();
  return v1;
}

uint64_t EnvironmentValues.widget.setter()
{
  sub_19094291C();
  return sub_190A46C48();
}

uint64_t sub_190964A1C()
{
  sub_190964B50();
  return sub_190A4681C();
}

void (*EnvironmentValues.widget.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = sub_19094291C();
  sub_190A46C3C();
  return sub_190964AB8;
}

void sub_190964AB8(uint64_t a1, char a2)
{
  id v2;
  id v4;

  v2 = *(id *)a1;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)a1;
  if ((a2 & 1) != 0)
  {
    v4 = v2;
    sub_190A46C48();

  }
  else
  {
    sub_190A46C48();
  }
}

ValueMetadata *_s23CHSWidgetEnvironmentKeyVMa()
{
  return &_s23CHSWidgetEnvironmentKeyVN;
}

unint64_t sub_190964B50()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EE1E6910;
  if (!qword_1EE1E6910)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6908);
    v2 = sub_190964BB4();
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEE998], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6910);
  }
  return result;
}

unint64_t sub_190964BB4()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1EE1E6918;
  if (!qword_1EE1E6918)
  {
    v1 = sub_190964BFC();
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEFD00], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1E6918);
  }
  return result;
}

unint64_t sub_190964BFC()
{
  unint64_t result;

  result = qword_1ECF6BF60;
  if (!qword_1ECF6BF60)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECF6BF60);
  }
  return result;
}

uint64_t WidgetURLModifier.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_190964C40(a1, a2);
}

uint64_t sub_190964C40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_190964C88()
{
  return 7107189;
}

uint64_t sub_190964C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_190A486DC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_190964D1C()
{
  sub_190964F40();
  return sub_190A48868();
}

uint64_t sub_190964D44()
{
  sub_190964F40();
  return sub_190A48874();
}

uint64_t WidgetURLModifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v15 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v4);
  v16 = (uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA728);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WidgetURLModifier(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190964F40();
  sub_190A48838();
  if (!v2)
  {
    sub_190A45FC4();
    sub_1908AA2F4(&qword_1ECF69D80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    sub_190A4852C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_190964C40(v16, (uint64_t)v12);
    sub_190964F84((uint64_t)v12, v15);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for WidgetURLModifier(uint64_t a1)
{
  return sub_1908B0210(a1, qword_1ECF6B9D8);
}

unint64_t sub_190964F40()
{
  unint64_t result;

  result = qword_1ECF6B890;
  if (!qword_1ECF6B890)
  {
    result = MEMORY[0x19401429C](&unk_190A52300, &type metadata for WidgetURLModifier.CodableKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B890);
  }
  return result;
}

uint64_t sub_190964F84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetURLModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t WidgetURLModifier.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B858);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190964F40();
  sub_190A48850();
  sub_190A45FC4();
  sub_1908AA2F4(&qword_1ECF6C648, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
  sub_190A485EC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t WidgetURLModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E67A0);
  sub_19093FE6C(v2, a2 + *(int *)(v5 + 36));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA718);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
}

uint64_t sub_19096513C()
{
  sub_1908AA2F4(&qword_1ECF6B8C0, type metadata accessor for WidgetURLModifier, (uint64_t)&protocol conformance descriptor for WidgetURLModifier);
  return sub_190A470F8();
}

uint64_t sub_1909651BC()
{
  sub_1908AA2F4(&qword_1ECF6B8C0, type metadata accessor for WidgetURLModifier, (uint64_t)&protocol conformance descriptor for WidgetURLModifier);
  return sub_190A47104();
}

uint64_t sub_19096523C()
{
  sub_1908AA2F4(&qword_1ECF6B8C0, type metadata accessor for WidgetURLModifier, (uint64_t)&protocol conformance descriptor for WidgetURLModifier);
  return sub_190A47110();
}

uint64_t sub_1909652AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E67A0);
  sub_19093FE6C(v2, a2 + *(int *)(v5 + 36));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA718);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
}

uint64_t sub_190965310@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetURLModifier.init(from:)(a1, a2);
}

uint64_t sub_190965324(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B858);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190964F40();
  sub_190A48850();
  sub_190A45FC4();
  sub_1908AA2F4(&qword_1ECF6C648, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
  sub_190A485EC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_190965434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  __swift_allocate_value_buffer(v0, qword_1ECF69F00);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ECF69F00);
  v2 = sub_190A45FC4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t static WidgetURLPreferenceKey.defaultValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ECF6A578 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ECF69F00);
  swift_beginAccess();
  return sub_19093FE6C(v3, a1);
}

uint64_t static WidgetURLPreferenceKey.defaultValue.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ECF6A578 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ECF69F00);
  swift_beginAccess();
  sub_19093DF34(a1, v3);
  swift_endAccess();
  return sub_1909655B4(a1);
}

uint64_t sub_1909655B4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t (*static WidgetURLPreferenceKey.defaultValue.modify())()
{
  uint64_t v0;

  if (qword_1ECF6A578 != -1)
    swift_once();
  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECF69F00);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static WidgetURLPreferenceKey.reduce(value:nextValue:)(uint64_t a1, void (*a2)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  sub_190964C40(a1, (uint64_t)v7);
  v10 = sub_190A45FC4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
  {
    a2();
    sub_1909655B4((uint64_t)v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v9, v7, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  }
  return sub_190964C40((uint64_t)v9, a1);
}

uint64_t sub_190965788@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ECF6A578 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ECF69F00);
  swift_beginAccess();
  return sub_19093FE6C(v3, a1);
}

uint64_t sub_19096580C(uint64_t a1, void (*a2)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  sub_190964C40(a1, (uint64_t)v7);
  v10 = sub_190A45FC4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
  {
    a2();
    sub_1909655B4((uint64_t)v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v9, v7, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  }
  return sub_190964C40((uint64_t)v9, a1);
}

uint64_t sub_190965924()
{
  sub_1909667B0();
  return sub_190A46C54();
}

uint64_t sub_19096594C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AA60);
  sub_19093FE6C(v2, a2 + *(int *)(v5 + 36));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AA70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  v7 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A580) + 36);
  return sub_19093FE6C(v2, v7);
}

uint64_t View.widgetURL(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  _QWORD v20[2];

  v19[1] = a4;
  v19[0] = type metadata accessor for WidgetURLMetadataModifier(0);
  MEMORY[0x1E0C80A78](v19[0]);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for WidgetURLModifier(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_190A46894();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v19 - v14;
  sub_19093FE6C(a1, (uint64_t)v11);
  MEMORY[0x194012838](v11, a2, v9, a3);
  sub_1908B5150((uint64_t)v11, type metadata accessor for WidgetURLModifier);
  sub_19093FE6C(a1, (uint64_t)v8);
  v16 = sub_1908AA2F4(&qword_1ECF6B9D0, type metadata accessor for WidgetURLModifier, (uint64_t)&protocol conformance descriptor for WidgetURLModifier);
  v20[0] = a3;
  v20[1] = v16;
  v17 = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v12, v20);
  MEMORY[0x194012838](v8, v12, v19[0], v17);
  sub_1908B5150((uint64_t)v8, type metadata accessor for WidgetURLMetadataModifier);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t type metadata accessor for WidgetURLMetadataModifier(uint64_t a1)
{
  return sub_1908B0210(a1, qword_1ECF6ADB8);
}

uint64_t View.hiddenWidgetURL(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v6 = type metadata accessor for WidgetURLModifier(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19093FE6C(a1, (uint64_t)v8);
  MEMORY[0x194012838](v8, a2, v6, a3);
  return sub_1908B5150((uint64_t)v8, type metadata accessor for WidgetURLModifier);
}

uint64_t sub_190965C3C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_190A45FC4();
  __swift_allocate_value_buffer(v3, qword_1EE1EA660);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EE1EA660);
  sub_190A45FB8();
  v5 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

uint64_t IgnoredWidgetURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EE1EA680 != -1)
    swift_once();
  v2 = sub_190A45FC4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE1EA660);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_190965D94()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190965DA4()
{
  return sub_1908AA2F4(&qword_1ECF6B8D0, type metadata accessor for WidgetURLModifier, (uint64_t)&protocol conformance descriptor for WidgetURLModifier);
}

uint64_t sub_190965DD0()
{
  return sub_1908AA2F4(&qword_1ECF6B8C8, type metadata accessor for WidgetURLModifier, (uint64_t)&protocol conformance descriptor for WidgetURLModifier);
}

uint64_t sub_190965DFC()
{
  return sub_1908AA2F4(&qword_1ECF6B9D0, type metadata accessor for WidgetURLModifier, (uint64_t)&protocol conformance descriptor for WidgetURLModifier);
}

unint64_t sub_190965E2C()
{
  unint64_t result;

  result = qword_1ECF6A878;
  if (!qword_1ECF6A878)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetURLPreferenceKey, &type metadata for WidgetURLPreferenceKey);
    atomic_store(result, (unint64_t *)&qword_1ECF6A878);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetURLModifier()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for WidgetURLModifier()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

ValueMetadata *type metadata accessor for WidgetURLPreferenceKey()
{
  return &type metadata for WidgetURLPreferenceKey;
}

unint64_t sub_190965EC0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E6798;
  if (!qword_1EE1E6798)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E67A0);
    v2[0] = sub_1908AF598(&qword_1EE1EA710, &qword_1EE1EA718, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1908AF598(&qword_1ECF6A638, &qword_1ECF6A640, MEMORY[0x1E0CDCAD0]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6798);
  }
  return result;
}

uint64_t sub_190965F5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  _QWORD v7[2];

  v1 = *(_QWORD *)(a1 + 8);
  type metadata accessor for WidgetURLModifier(255);
  v2 = sub_190A46894();
  type metadata accessor for WidgetURLMetadataModifier(255);
  v3 = sub_190A46894();
  v7[0] = v1;
  v7[1] = sub_1908AA2F4(&qword_1ECF6B9D0, type metadata accessor for WidgetURLModifier, (uint64_t)&protocol conformance descriptor for WidgetURLModifier);
  v4 = MEMORY[0x1E0CD9C20];
  v6[0] = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v2, v7);
  v6[1] = sub_1908AA2F4(&qword_1ECF6AAB8, type metadata accessor for WidgetURLMetadataModifier, (uint64_t)&unk_190A522B0);
  return MEMORY[0x19401429C](v4, v3, v6);
}

uint64_t sub_19096603C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  type metadata accessor for WidgetURLModifier(255);
  v2 = sub_190A46894();
  v4[0] = v1;
  v4[1] = sub_1908AA2F4(&qword_1ECF6B9D0, type metadata accessor for WidgetURLModifier, (uint64_t)&protocol conformance descriptor for WidgetURLModifier);
  return MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v2, v4);
}

uint64_t *_s9WidgetKit17WidgetURLModifierVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_190A45FC4();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  return a1;
}

uint64_t _s9WidgetKit17WidgetURLModifierVwxx_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_190A45FC4();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *_s9WidgetKit17WidgetURLModifierVwcp_0(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_190A45FC4();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *_s9WidgetKit17WidgetURLModifierVwca_0(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_190A45FC4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *_s9WidgetKit17WidgetURLModifierVwtk_0(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_190A45FC4();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *_s9WidgetKit17WidgetURLModifierVwta_0(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_190A45FC4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_190966520()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm_2(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_190966570()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm_2(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_1909665C4()
{
  unint64_t v0;

  sub_19093FE18();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for WidgetURLModifier.CodableKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_19096666C + 4 * byte_190A52030[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_19096668C + 4 * byte_190A52035[v4]))();
}

_BYTE *sub_19096666C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_19096668C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190966694(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19096669C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1909666A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1909666AC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WidgetURLModifier.CodableKeys()
{
  return &type metadata for WidgetURLModifier.CodableKeys;
}

unint64_t sub_1909666CC()
{
  unint64_t result;

  result = qword_1EE1EDA30;
  if (!qword_1EE1EDA30)
  {
    result = MEMORY[0x19401429C](&unk_190A52288, &type metadata for WidgetURLModifier.CodableKeys);
    atomic_store(result, &qword_1EE1EDA30);
  }
  return result;
}

uint64_t sub_190966710()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_190966724()
{
  unint64_t result;

  result = qword_1ECF6B888;
  if (!qword_1ECF6B888)
  {
    result = MEMORY[0x19401429C](&unk_190A521F8, &type metadata for WidgetURLModifier.CodableKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B888);
  }
  return result;
}

unint64_t sub_19096676C()
{
  unint64_t result;

  result = qword_1ECF6B880;
  if (!qword_1ECF6B880)
  {
    result = MEMORY[0x19401429C](&unk_190A52220, &type metadata for WidgetURLModifier.CodableKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B880);
  }
  return result;
}

unint64_t sub_1909667B0()
{
  unint64_t result;

  result = qword_1ECF6A880;
  if (!qword_1ECF6A880)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetURLPreferenceKey, &type metadata for WidgetURLPreferenceKey);
    atomic_store(result, (unint64_t *)&qword_1ECF6A880);
  }
  return result;
}

unint64_t sub_1909667F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6A5D0;
  if (!qword_1ECF6A5D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6A580);
    v2[0] = sub_19096687C();
    v2[1] = sub_1908AF598(&qword_1ECF6A638, &qword_1ECF6A640, MEMORY[0x1E0CDCAD0]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6A5D0);
  }
  return result;
}

unint64_t sub_19096687C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6AA48;
  if (!qword_1ECF6AA48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6AA60);
    v2[0] = sub_1908AF598(&qword_1ECF6AA68, &qword_1ECF6AA70, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1908AF598(&qword_1ECF6AAA8, &qword_1ECF6AAB0, MEMORY[0x1E0CDCAD0]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6AA48);
  }
  return result;
}

uint64_t sub_190966918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[8] = a3;
  v4[9] = a4;
  v4[6] = a1;
  v4[7] = a2;
  return swift_task_switch();
}

uint64_t sub_190966934()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  _QWORD *v7;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  objc_opt_self();
  v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    v2 = (void *)v1;
    v3 = *(id *)(v0 + 56);
    v4 = objc_msgSend(v2, sel_linkAction);
    *(_QWORD *)(v0 + 80) = v4;
    if (v4)
    {
      v5 = v4;
      *(_QWORD *)(v0 + 40) = sub_1909120B0();
      *(_QWORD *)(v0 + 16) = v5;
      v6 = v5;
      v7 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 88) = v7;
      *v7 = v0;
      v7[1] = sub_190966A98;
      return sub_190A45D30();
    }
    v10 = *(void **)(v0 + 56);
    sub_190966BB4();
    swift_allocError();
    *(_OWORD *)v11 = xmmword_190A52350;
    *(_BYTE *)(v11 + 16) = 2;
    swift_willThrow();

  }
  else
  {
    sub_190966BB4();
    swift_allocError();
    *(_QWORD *)v9 = 0;
    *(_QWORD *)(v9 + 8) = 0;
    *(_BYTE *)(v9 + 16) = 2;
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190966A98()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_190966AFC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 56);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190966B38()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(void **)(v0 + 80);
  v3 = *(void **)(v0 + 56);
  sub_190966BB4();
  swift_allocError();
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = 0;
  *(_BYTE *)(v4 + 16) = 0;
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_190966BB4()
{
  unint64_t result;

  result = qword_1EE1EDA40;
  if (!qword_1EE1EDA40)
  {
    result = MEMORY[0x19401429C](&unk_190A523B4, &_s9AppIntentON);
    atomic_store(result, (unint64_t *)&qword_1EE1EDA40);
  }
  return result;
}

id sub_190966BFC(id result, uint64_t a2, char a3)
{
  if (!a3)
    return result;
  return result;
}

void _s9AppIntentOwxx(uint64_t a1)
{
  sub_190966C1C(*(id *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_190966C1C(id a1, uint64_t a2, char a3)
{
  if (!a3)

}

uint64_t _s9AppIntentOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_190966BFC(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s9AppIntentOwca(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_190966BFC(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_190966C1C(v6, v7, v8);
  return a1;
}

uint64_t _s9AppIntentOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_190966C1C(v4, v5, v6);
  return a1;
}

uint64_t _s9AppIntentOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s9AppIntentOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_190966D98(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_190966DB0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *_s9AppIntentOMa()
{
  return &_s9AppIntentON;
}

uint64_t sub_190966DDC(unint64_t a1, uint64_t a2, char a3)
{
  id v5;
  unint64_t v7;

  if (!a3)
  {
    v5 = (id)a1;
    sub_190A48298();
    swift_bridgeObjectRelease();
    v7 = 0xD000000000000027;
    swift_getErrorValue();
    sub_190A48778();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190966C1C((id)a1, a2, 0);
    return v7;
  }
  if (a3 == 1)
  {
    v7 = 0;
    sub_190A48298();
    sub_190A47B3C();
    sub_190A4867C();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    sub_190A4867C();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    return v7;
  }
  if (a1 | a2)
    return 0xD000000000000022;
  else
    return 0xD00000000000001CLL;
}

uint64_t sub_190966FD4()
{
  uint64_t v0;

  return sub_190966DDC(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_190966FE0()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_unfair_lock_s *v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  char v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  os_signpost_id_t v59;
  uint64_t v60;
  uint8_t *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  NSObject *v72;
  os_signpost_type_t v73;
  char v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  const char *v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint8_t *v83;
  os_signpost_id_t v84;
  void (*v85)(char *, uint64_t);
  uint64_t *v87;
  void *v88;
  uint64_t v89;
  uint64_t KeyPath;
  os_unfair_lock_s *v91;
  id v92;
  uint64_t v93;
  uint64_t *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  os_unfair_lock_s *v98;
  id v99;
  uint64_t v100;
  int v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  char *v106;
  uint64_t v107;
  NSObject *v108;
  char *v109;
  os_signpost_type_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  const char *v114;
  char *v115;
  uint64_t v116;
  uint8_t *v117;
  os_signpost_id_t v118;
  uint64_t (*v119)(char *, uint64_t);
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  char *v134;
  void (*v135)(char *, char *, uint64_t);
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  __int128 v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  __int128 v151;
  uint64_t v152;

  v1 = (char *)v0;
  v132 = sub_190A4654C();
  v131 = *(_QWORD *)(v132 - 8);
  v2 = MEMORY[0x1E0C80A78](v132);
  v130 = (char *)&v120 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v120 = (char *)&v120 - v4;
  v125 = sub_190A46F54();
  v124 = *(_QWORD *)(v125 - 8);
  v5 = MEMORY[0x1E0C80A78](v125);
  v123 = (char *)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v122 = (char *)&v120 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6428);
  MEMORY[0x1E0C80A78](v8);
  v128 = (char **)((char *)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for ActivityViewCollection();
  v11 = MEMORY[0x1E0C80A78](v10);
  v127 = (uint64_t)&v120 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v129 = (uint64_t)&v120 - v13;
  v14 = sub_190A4651C();
  v139 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v120 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v121 = (char *)&v120 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v120 - v21;
  MEMORY[0x1E0C80A78](v20);
  v143 = (char *)&v120 - v23;
  v152 = sub_190A46540();
  v147 = *(_QWORD *)(v152 - 8);
  v24 = MEMORY[0x1E0C80A78](v152);
  v26 = (char *)&v120 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v24);
  v126 = (char *)&v120 - v28;
  MEMORY[0x1E0C80A78](v27);
  *(_QWORD *)&v146 = (char *)&v120 - v29;
  v137 = type metadata accessor for ActivityArchiver();
  v30 = MEMORY[0x1E0C80A78](v137);
  v138 = (uint64_t)&v120 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v33 = (char **)((char *)&v120 - v32);
  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v34 = sub_190A465A0();
  __swift_project_value_buffer(v34, (uint64_t)qword_1ECF6D988);
  sub_1908AF5D8(v0, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for ActivityArchiver);
  v35 = sub_190A46588();
  v36 = sub_190A47F44();
  v37 = os_log_type_enabled(v35, v36);
  v144 = (char *)v0;
  v145 = v14;
  v141 = v17;
  v142 = v26;
  v136 = v22;
  if (v37)
  {
    v38 = (uint8_t *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    v148 = v39;
    *(_DWORD *)v38 = 136315138;
    v135 = (void (*)(char *, char *, uint64_t))(v38 + 4);
    v40 = *v33 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment;
    v41 = *(_QWORD *)v40;
    v42 = *(os_unfair_lock_s **)(*(_QWORD *)v40 + 16);
    swift_retain();
    os_unfair_lock_lock(v42);
    v150 = 0xD000000000000012;
    *(_QWORD *)&v151 = 0x8000000190A5FFB0;
    WidgetEnvironment.Storage.debugDescription.getter();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    v43 = v150;
    v44 = v151;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v41 + 16));
    v22 = v136;
    swift_release();
    v150 = sub_1908B35C4(v43, v44, &v148);
    v14 = v145;
    sub_190A48178();
    v1 = v144;
    swift_bridgeObjectRelease();
    sub_1908B5150((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for ActivityArchiver);
    _os_log_impl(&dword_1908A7000, v35, v36, "Environment for archiving: %s", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v39, -1, -1);
    MEMORY[0x194014398](v38, -1, -1);
  }
  else
  {
    sub_1908B5150((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for ActivityArchiver);
  }

  v45 = v143;
  v46 = v137;
  v47 = *(void (**)(char *, char *, uint64_t))(v147 + 16);
  v134 = &v1[*(int *)(v137 + 24)];
  v135 = v47;
  v48 = v152;
  ((void (*)(_QWORD))v47)(v146);
  v49 = v139;
  v50 = *(void (**)(char *, char *, uint64_t))(v139 + 16);
  v50(v45, &v1[*(int *)(v46 + 28)], v14);
  v51 = (uint64_t)v1;
  v52 = v138;
  sub_1908AF5D8(v51, v138, (uint64_t (*)(_QWORD))type metadata accessor for ActivityArchiver);
  v53 = sub_190A46534();
  v133 = sub_190A48040();
  v54 = sub_190A48118();
  v137 = (uint64_t)v50;
  if ((v54 & 1) != 0)
  {
    v50(v22, v45, v14);
    v55 = (uint8_t *)swift_slowAlloc();
    v56 = swift_slowAlloc();
    *(_DWORD *)v55 = 136315138;
    v150 = v56;
    v57 = sub_190A461F8();
    v148 = sub_1908B35C4(v57, v58, &v150);
    v50 = (void (*)(char *, char *, uint64_t))v137;
    sub_190A48178();
    swift_bridgeObjectRelease();
    sub_1908B5150(v52, (uint64_t (*)(_QWORD))type metadata accessor for ActivityArchiver);
    v59 = sub_190A46510();
    _os_signpost_emit_with_name_impl(&dword_1908A7000, v53, (os_signpost_type_t)v133, v59, "GetSessionPlatter", "<session-id>=%s", v55, 0xCu);
    swift_arrayDestroy();
    v60 = v56;
    v48 = v152;
    MEMORY[0x194014398](v60, -1, -1);
    v61 = v55;
    v14 = v145;
    MEMORY[0x194014398](v61, -1, -1);

    v62 = v143;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v22, v14);
  }
  else
  {

    sub_1908B5150(v52, (uint64_t (*)(_QWORD))type metadata accessor for ActivityArchiver);
    v62 = v45;
  }
  v50(v22, v62, v14);
  sub_190A46570();
  swift_allocObject();
  sub_190A46564();
  v143 = *(char **)(v49 + 8);
  ((void (*)(char *, uint64_t))v143)(v62, v14);
  v147 = *(_QWORD *)(v147 + 8);
  ((void (*)(_QWORD, uint64_t))v147)(v146, v48);
  v63 = v144;
  v64 = *((_QWORD *)v144 + 4);
  v65 = *((_QWORD *)v144 + 5);
  __swift_project_boxed_opaque_existential_1((_QWORD *)v144 + 1, v64);
  v66 = v140;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v65 + 48))(&v150, *(_QWORD *)v63 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_descriptor, v64, v65);
  if (v66)
  {
    v67 = v141;
    v71 = v142;
    v135(v142, v134, v48);
    v72 = sub_190A46534();
    sub_190A46558();
    v73 = sub_190A48034();
    v74 = sub_190A48118();
    if ((v74 & 1) != 0)
    {
      swift_retain();
      v75 = v130;
      sub_190A4657C();
      swift_release();
      v76 = v131;
      v77 = v132;
      if ((*(unsigned int (**)(char *, uint64_t))(v131 + 88))(v75, v132) == *MEMORY[0x1E0DF2190])
      {
        v78 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v77);
        v78 = "<error.present>=true)";
      }
      v79 = v136;
      v80 = v67;
      v81 = v67;
      v82 = v145;
      ((void (*)(char *, char *, uint64_t))v137)(v136, v80, v145);
      v83 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v83 = 0;
      v84 = sub_190A46510();
      _os_signpost_emit_with_name_impl(&dword_1908A7000, v72, v73, v84, "GetSessionPlatter", v78, v83, 2u);
      MEMORY[0x194014398](v83, -1, -1);

      v85 = (void (*)(char *, uint64_t))v143;
      ((void (*)(char *, uint64_t))v143)(v81, v82);
      ((void (*)(char *, uint64_t))v147)(v142, v152);
      v85(v79, v82);
    }
    else
    {

      ((void (*)(char *, uint64_t))v143)(v67, v145);
      ((void (*)(char *, uint64_t))v147)(v71, v48);
    }
    swift_willThrow();
    return swift_release();
  }
  v146 = v151;
  v68 = v129;
  sub_190967F5C((uint64_t)&v150, v129);
  v69 = v127;
  sub_1908AF5D8(v68, v127, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewCollection);
  v70 = v128;
  sub_1908DB128(v128);
  sub_1909472DC((uint64_t)v70, &v148);
  sub_1908B5150(v69, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewCollection);
  v150 = v148;
  *(_QWORD *)&v151 = v149;
  v140 = v149;
  v87 = (uint64_t *)(*(_QWORD *)v144 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment);
  v89 = *v87;
  v88 = (void *)v87[1];
  KeyPath = swift_getKeyPath();
  v91 = *(os_unfair_lock_s **)(v89 + 16);
  swift_retain_n();
  v92 = v88;
  os_unfair_lock_lock(v91);
  v93 = sub_1908B7C8C(KeyPath);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v89 + 16));

  swift_release();
  swift_release_n();
  if (v93)
    swift_bridgeObjectRelease();
  sub_190A46E04();
  v94 = (uint64_t *)(*(_QWORD *)v144 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment);
  v96 = *v94;
  v95 = (void *)v94[1];
  v97 = swift_getKeyPath();
  v98 = *(os_unfair_lock_s **)(v96 + 16);
  swift_retain_n();
  v99 = v95;
  os_unfair_lock_lock(v98);
  v100 = sub_1908B7C8C(v97);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v96 + 16));

  swift_release();
  swift_release_n();
  if (v100)
  {
    if (*(_QWORD *)(v100 + 16))
    {
      swift_bridgeObjectRelease();
      sub_190A46E1C();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v101 = *(unsigned __int8 *)(*(_QWORD *)v144 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_archiveVersion);
  if (v101 != 2)
  {
    v102 = v122;
    if ((v101 & 1) != 0)
      sub_190A46F48();
    else
      sub_190A46F3C();
    v103 = v124;
    v104 = v125;
    (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v123, v102, v125);
    sub_190A46DEC();
    (*(void (**)(char *, uint64_t))(v103 + 8))(v102, v104);
  }
  v105 = *(id *)(*(_QWORD *)v144 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_fileHandle);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6298);
  sub_190947810();
  sub_190A46D8C();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  sub_1908B5150(v129, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewCollection);
  v106 = v126;
  v107 = v152;
  v135(v126, v134, v152);
  v108 = sub_190A46534();
  v109 = v121;
  sub_190A46558();
  v110 = sub_190A48034();
  if ((sub_190A48118() & 1) == 0)
  {

    ((void (*)(char *, uint64_t))v143)(v109, v145);
    ((void (*)(char *, uint64_t))v147)(v106, v107);
    return swift_release();
  }
  swift_retain();
  v111 = v120;
  sub_190A4657C();
  swift_release();
  v112 = v131;
  v113 = v132;
  if ((*(unsigned int (**)(char *, uint64_t))(v131 + 88))(v111, v132) == *MEMORY[0x1E0DF2190])
  {
    v114 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v111, v113);
    v114 = "<error.present>=false)";
  }
  v115 = v136;
  v116 = v145;
  ((void (*)(char *, char *, uint64_t))v137)(v136, v109, v145);
  v117 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v117 = 0;
  v118 = sub_190A46510();
  _os_signpost_emit_with_name_impl(&dword_1908A7000, v108, v110, v118, "GetSessionPlatter", v114, v117, 2u);
  MEMORY[0x194014398](v117, -1, -1);

  v119 = (uint64_t (*)(char *, uint64_t))v143;
  ((void (*)(char *, uint64_t))v143)(v109, v116);
  ((void (*)(char *, uint64_t))v147)(v126, v152);
  swift_release();
  return v119(v115, v116);
}

id ActivityArchiver.request.getter()
{
  id *v0;

  return *v0;
}

void ActivityArchiver.request.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*ActivityArchiver.request.modify())()
{
  return nullsub_1;
}

uint64_t ActivityArchiver.signposter.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ActivityArchiver() + 24);
  v4 = sub_190A46540();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ActivityArchiver()
{
  uint64_t result;

  result = qword_1EE1E6380;
  if (!qword_1EE1E6380)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_190967F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t KeyPath;
  os_unfair_lock_s *v22;
  id v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unsigned __int8 *v27;
  int v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  _QWORD v46[2];
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t (*v55)(char *);

  v4 = v2;
  v7 = type metadata accessor for ActivityViewSourceContext();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = *(uint64_t (**)(char *))a1;
  v51 = *(_OWORD *)(a1 + 8);
  v50 = *(_QWORD *)(a1 + 24);
  v10 = *v4;
  v11 = *v4 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_descriptor;
  v12 = sub_190A46204();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v11, v12);
  v13 = *(_QWORD *)(v10 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload);
  v14 = *(_QWORD *)(v10 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload + 8);
  v15 = *(_BYTE *)(v10 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata + 16);
  v16 = (uint64_t *)&v9[*(int *)(v7 + 20)];
  *v16 = v13;
  v16[1] = v14;
  v9[*(int *)(v7 + 24)] = v15;
  sub_1908B53B8(v13, v14);
  v17 = (char *)sub_190968E30();
  v18 = v10 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment;
  v19 = *(_QWORD *)(v10 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment);
  v20 = *(void **)(v18 + 8);
  KeyPath = swift_getKeyPath();
  v22 = *(os_unfair_lock_s **)(v19 + 16);
  swift_retain_n();
  v23 = v20;
  os_unfair_lock_lock(v22);
  v24 = sub_1908B7CB4(KeyPath);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 16));

  swift_release();
  swift_release_n();
  if (v24)
  {
    if (*(_QWORD *)(v24 + 16))
    {
      v25 = *(unsigned __int8 *)(v24 + 32);
      swift_bridgeObjectRelease();
      v26 = *((_QWORD *)v17 + 2);
      if (v26)
      {
        v27 = (unsigned __int8 *)(v17 + 32);
        while (v25 != *v27)
        {
          ++v27;
          if (!--v26)
            goto LABEL_7;
        }
      }
      else
      {
LABEL_7:
        if ((v25 & 1) == 0)
        {
          v28 = MEMORY[0x194013C6C]("_makeViewCollection(source:)");
          v48 = v17;
          v49 = v3;
          if (v28)
            v52 = sub_190A47728();
          v47 = sub_190A47884();
          goto LABEL_15;
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v29 = v55(v9);
  if (v3)
  {
    sub_1908B5150((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewSourceContext);
    return swift_bridgeObjectRelease();
  }
  v47 = v29;
  v48 = v17;
  v49 = 0;
LABEL_15:
  v31 = *v4;
  v32 = *v4 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_metrics;
  v33 = (int *)type metadata accessor for ActivityViewCollection();
  sub_1908AF5D8(v32, a2 + v33[7], type metadata accessor for ActivityMetricsDefinition);
  v34 = *(_QWORD *)(v31 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment);
  v35 = *(void **)(v31 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment + 8);
  v36 = v31 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata;
  v46[1] = v4;
  v37 = *(_QWORD *)(v31 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata);
  v38 = *(_QWORD *)(v31 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata + 8);
  v39 = *(_BYTE *)(v36 + 16);
  v40 = *(_BYTE *)(v36 + 17);
  v41 = type metadata accessor for JindoViewCollection();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(a2, 1, 1, v41);
  *(_QWORD *)(a2 + v33[6]) = v47;
  v42 = (_QWORD *)(a2 + v33[5]);
  *v42 = v34;
  v42[1] = v35;
  v43 = a2 + v33[9];
  *(_QWORD *)v43 = v37;
  *(_QWORD *)(v43 + 8) = v38;
  *(_BYTE *)(v43 + 16) = v39;
  *(_BYTE *)(v43 + 17) = v40;
  *(_QWORD *)(a2 + v33[8]) = v48;
  v52 = (uint64_t)v55;
  v53 = v51;
  v54 = v50;
  swift_retain();
  swift_retain();
  v44 = v35;
  swift_bridgeObjectRetain();
  v45 = v49;
  sub_1909692EC((uint64_t)&v52, a2);
  if (v45)
    sub_1908B5150(a2, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewCollection);
  swift_release();
  return sub_1908B5150((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewSourceContext);
}

unint64_t static ActivityArchiver.PreviewsActivityID.getter()
{
  return 0xD000000000000016;
}

uint64_t static ActivityArchiver.makeArchivedViewCollection(attributesType:attributesData:contentStatePayload:isStale:viewSource:metricsDefinition:environment:payloadID:supportedFamilies:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t *v66;
  uint64_t v67;
  char *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t KeyPath;
  uint64_t v80;
  os_unfair_lock_s *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  os_unfair_lock_s *v85;
  uint64_t *v86;
  uint64_t v87;
  char *v88;
  char *v90;
  uint64_t v91;
  void (*v92)(__int128 *__return_ptr, uint64_t);
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t (*v103)(uint64_t);
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;

  v98 = a8;
  v110 = a7;
  v111 = a1;
  LODWORD(v116) = a6;
  v114 = a4;
  v115 = a5;
  v112 = (char *)a2;
  v113 = (char *)a3;
  v109 = a9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6428);
  MEMORY[0x1E0C80A78](v12);
  v94 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for JindoViewCollection();
  v96 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v90 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
  MEMORY[0x1E0C80A78](v15);
  v97 = (uint64_t)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for ActivityViewCollection();
  v17 = MEMORY[0x1E0C80A78](v95);
  v93 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v100 = (uint64_t)&v90 - v19;
  v108 = type metadata accessor for ActivityViewSourceContext();
  MEMORY[0x1E0C80A78](v108);
  v122 = (uint64_t)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_190A46084();
  MEMORY[0x1E0C80A78](v21);
  v107 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_190A46240();
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v104 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_190A46204();
  v118 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v119 = (char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_190A46264();
  v27 = MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v90 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v90 - v30;
  v32 = sub_190A46258();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = MEMORY[0x1E0C80A78](v32);
  v36 = (char *)&v90 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v38 = (char *)&v90 - v37;
  v103 = *(uint64_t (**)(_QWORD))v110;
  v102 = *(_QWORD *)(v110 + 8);
  v39 = *(_QWORD *)(v110 + 24);
  v92 = *(void (**)(_QWORD *__return_ptr, _QWORD))(v110 + 16);
  v91 = v39;
  v40 = (uint64_t *)v109[1];
  v101 = *v109;
  v109 = v40;
  sub_190A4624C();
  sub_190A46270();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v104, v111, v106);
  sub_1908AF5D8((uint64_t)v31, (uint64_t)v29, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
  v110 = v33;
  v111 = v32;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v36, v38, v32);
  sub_1908B53B8((uint64_t)v112, (unint64_t)v113);
  sub_190A46078();
  v41 = v24;
  v42 = v118;
  v43 = v119;
  v44 = v122;
  sub_190A461EC();
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v44, v43, v41);
  v45 = v108;
  v46 = (uint64_t *)(v44 + *(int *)(v108 + 20));
  v47 = v114;
  v48 = v115;
  *v46 = v114;
  v46[1] = v48;
  v49 = v116;
  *(_BYTE *)(v44 + *(int *)(v45 + 24)) = v116;
  sub_1908B53B8(v47, v48);
  v50 = v44;
  v51 = v102;
  v52 = v117;
  v53 = v103(v50);
  v117 = v52;
  if (v52)
  {
    sub_1908B5150(v122, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewSourceContext);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v41);
    sub_1908B5150((uint64_t)v31, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v38, v111);
    return v51;
  }
  v112 = v31;
  v113 = v38;
  v114 = v41;
  v115 = a12;
  v54 = v49 & 1;
  v55 = (int *)v95;
  v56 = v100;
  v57 = v53;
  v58 = v98;
  sub_1908AF5D8(v98, v100 + *(int *)(v95 + 28), type metadata accessor for ActivityMetricsDefinition);
  v108 = *(_QWORD *)(v96 + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v108)(v56, 1, 1, v99);
  *(_QWORD *)(v56 + v55[6]) = v57;
  v59 = (_QWORD *)(v56 + v55[5]);
  v60 = v109;
  *v59 = v101;
  v59[1] = v60;
  v61 = v56 + v55[9];
  *(_QWORD *)v61 = a10;
  *(_QWORD *)(v61 + 8) = a11;
  *(_BYTE *)(v61 + 16) = v54;
  *(_BYTE *)(v61 + 17) = 0;
  *(_QWORD *)(v56 + v55[8]) = v115;
  v62 = v58 + *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v63 = v97;
  sub_1908AAA48(v62, v97, &qword_1EE1EA8F0);
  v64 = type metadata accessor for JindoMetricsDefinition(0);
  v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 48))(v63, 1, v64);
  swift_bridgeObjectRetain();
  v116 = v57;
  swift_retain();
  swift_retain();
  v66 = v60;
  swift_bridgeObjectRetain();
  sub_1908AA544(v63, &qword_1EE1EA8F0);
  if (v65 == 1)
  {
    v67 = v118;
    v68 = v119;
    v69 = v94;
    v70 = (uint64_t)v93;
    v71 = v117;
  }
  else
  {
    v72 = v56;
    v51 = v91;
    v73 = v117;
    v92(&v120, v122);
    v71 = v73;
    v67 = v118;
    if (v73)
    {
      swift_release();
      sub_1908B5150(v122, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewSourceContext);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v119, v114);
      sub_1908B5150((uint64_t)v112, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
      (*(void (**)(char *, uint64_t))(v110 + 8))(v113, v111);
      v74 = v72;
LABEL_17:
      sub_1908B5150(v74, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewCollection);
      return v51;
    }
    v75 = v90;
    sub_1908B4BBC(&v120, (uint64_t)(v90 + 16));
    v76 = v99;
    sub_1908AF5D8(v98, (uint64_t)v75 + *(int *)(v99 + 24), type metadata accessor for ActivityMetricsDefinition);
    *v75 = v101;
    v75[1] = v66;
    swift_retain();
    v77 = v66;
    v56 = v72;
    sub_1908AA544(v72, &qword_1EE1E6430);
    sub_1908BD0B4((uint64_t)v75, v72, (uint64_t (*)(_QWORD))type metadata accessor for JindoViewCollection);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v108)(v72, 0, 1, v76);
    v68 = v119;
    v69 = v94;
    v70 = (uint64_t)v93;
  }
  sub_1908AF5D8(v56, v70, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewCollection);
  v78 = v56;
  sub_1908DB128(v69);
  if (v71)
  {
    v51 = v67;
    sub_1908B5150(v70, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewCollection);
    swift_release();
    sub_1908B5150(v122, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewSourceContext);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v114);
    sub_1908B5150((uint64_t)v112, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v113, v111);
    v74 = v78;
    goto LABEL_17;
  }
  sub_1909472DC((uint64_t)v69, (uint64_t *)&v121);
  sub_1908B5150(v70, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewCollection);
  v120 = v121;
  KeyPath = swift_getKeyPath();
  v80 = v101;
  v81 = *(os_unfair_lock_s **)(v101 + 16);
  swift_retain_n();
  v82 = v66;
  os_unfair_lock_lock(v81);
  v83 = sub_1908B7C8C(KeyPath);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v80 + 16));

  swift_release();
  swift_release_n();
  if (v83)
    swift_bridgeObjectRelease();
  sub_190A46E04();
  v84 = swift_getKeyPath();
  v85 = *(os_unfair_lock_s **)(v80 + 16);
  swift_retain_n();
  v86 = v82;
  os_unfair_lock_lock(v85);
  v87 = sub_1908B7C8C(v84);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v80 + 16));

  swift_release();
  swift_release_n();
  v88 = v119;
  if (v87)
  {
    if (*(_QWORD *)(v87 + 16))
    {
      swift_bridgeObjectRelease();
      sub_190A46E1C();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6298);
  sub_190947810();
  v51 = sub_190A46D98();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1908B5150(v122, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewSourceContext);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v88, v114);
  sub_1908B5150((uint64_t)v112, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v113, v111);
  sub_1908B5150(v100, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewCollection);
  return v51;
}

void *sub_190968E30()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v45 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v45);
  v2 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB998);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WidgetDescriptor(0);
  v7 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  v40 = v7;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  v11 = MEMORY[0x1E0C80A78](v10);
  v37 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v38 = (char *)&v36 - v13;
  v14 = sub_190A46240();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v0[4];
  v19 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 1, v18);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 64))(v18, v19);
  sub_190A461D4();
  v44 = sub_190A46210();
  v42 = v21;
  v41 = *(void (**)(char *, uint64_t))(v15 + 8);
  v41(v17, v14);
  v22 = *(_QWORD *)(v20 + 16);
  if (!v22)
  {
LABEL_17:
    v29 = 1;
    v31 = (uint64_t)v38;
    v30 = v39;
    v32 = v40;
    v33 = (uint64_t)v37;
    goto LABEL_20;
  }
  v23 = v20 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
  v43 = *(_QWORD *)(v40 + 72);
  v36 = v20;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1908AF5D8(v23, (uint64_t)v9, type metadata accessor for WidgetDescriptor);
    sub_1908AF5D8((uint64_t)v9, (uint64_t)v2, type metadata accessor for ViewSource);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
        swift_release();
        swift_release();
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v5, v2, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v5, 0, 1, v14);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v5, 1, 1, v14);
        sub_1908B5150((uint64_t)v2, type metadata accessor for ViewSource);
      }
    }
    else
    {
      sub_1908B5150((uint64_t)v2, type metadata accessor for ViewSource);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v5, 1, 1, v14);
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v5, 1, v14) == 1)
    {
      sub_1908AA544((uint64_t)v5, &qword_1EE1EB998);
      goto LABEL_4;
    }
    v25 = sub_190A46210();
    v27 = v26;
    v41(v5, v14);
    if (v25 == v44 && v27 == v42)
      break;
    v28 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v28 & 1) != 0)
      goto LABEL_19;
LABEL_4:
    sub_1908B5150((uint64_t)v9, type metadata accessor for WidgetDescriptor);
    v23 += v43;
    if (!--v22)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease();
LABEL_19:
  v31 = (uint64_t)v38;
  v30 = v39;
  v32 = v40;
  v33 = (uint64_t)v37;
  swift_bridgeObjectRelease();
  sub_1908BD0B4((uint64_t)v9, v31, type metadata accessor for WidgetDescriptor);
  v29 = 0;
LABEL_20:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v31, v29, 1, v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1908AAA48(v31, v33, &qword_1ECF6C788);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v33, 1, v30) == 1)
  {
    sub_1908AA544(v33, &qword_1ECF6C788);
    v34 = &unk_1E2CC4B80;
  }
  else
  {
    v34 = *(void **)(v33 + *(int *)(v30 + 32));
    swift_bridgeObjectRetain();
    sub_1908B5150(v33, type metadata accessor for WidgetDescriptor);
  }
  sub_1908AA544(v31, &qword_1ECF6C788);
  return v34;
}

void sub_1909692EC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36[2];
  void (*v37)(__int128 *__return_ptr, char *);

  v4 = v2;
  v34 = a2;
  v6 = type metadata accessor for JindoViewCollection();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for ActivityViewSourceContext();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = *(void (**)(__int128 *__return_ptr, char *))(a1 + 16);
  v35 = *(_QWORD *)(a1 + 24);
  v15 = *v4;
  v16 = (uint64_t *)(*v4 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment);
  swift_beginAccess();
  v17 = *v16;
  if (*v16)
  {
    v31 = (void *)v16[1];
    v18 = OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_metrics;
    v19 = type metadata accessor for ActivityMetricsDefinition(0);
    sub_1908AAA48(v15 + *(int *)(v19 + 20) + v18, (uint64_t)v14, &qword_1EE1EA8F0);
    v20 = type metadata accessor for JindoMetricsDefinition(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v14, 1, v20) == 1)
    {
      sub_1908AA544((uint64_t)v14, &qword_1EE1EA8F0);
    }
    else
    {
      swift_retain();
      v30 = v31;
      sub_1908AA544((uint64_t)v14, &qword_1EE1EA8F0);
      v21 = v15 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_descriptor;
      v22 = sub_190A46204();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v11, v21, v22);
      v23 = *(_QWORD *)(v15 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload);
      v24 = *(_QWORD *)(v15 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload + 8);
      v25 = *(_BYTE *)(v15 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata + 16);
      v26 = (uint64_t *)&v11[*(int *)(v9 + 20)];
      *v26 = v23;
      v26[1] = v24;
      v11[*(int *)(v9 + 24)] = v25;
      sub_1908B53B8(v23, v24);
      v37(v36, v11);
      sub_1908B5150((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewSourceContext);
      if (v3)
      {
        sub_190969C68(v17, v31);
      }
      else
      {
        sub_1908B4BBC(v36, (uint64_t)(v8 + 2));
        v27 = v33;
        sub_1908AF5D8(*v4 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_metrics, (uint64_t)v8 + *(int *)(v33 + 24), type metadata accessor for ActivityMetricsDefinition);
        v28 = (uint64_t)v30;
        *v8 = v17;
        v8[1] = v28;
        v29 = v34;
        sub_1908AA544(v34, &qword_1EE1E6430);
        sub_1908BD0B4((uint64_t)v8, v29, (uint64_t (*)(_QWORD))type metadata accessor for JindoViewCollection);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v27);
      }
    }
  }
}

char *initializeBufferWithCopyOfBuffer for ActivityArchiver(char *a1, char **a2, uint64_t a3)
{
  int v4;
  char *v5;
  char **v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(char *, char **, uint64_t);
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    v8 = a2 + 1;
    v9 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 2) = v9;
    v10 = v9;
    v11 = **(void (***)(char *, char **, uint64_t))(v9 - 8);
    v12 = v5;
    v11(a1 + 8, v8, v10);
    v13 = *(int *)(a3 + 24);
    v14 = &a1[v13];
    v15 = (uint64_t)a2 + v13;
    v16 = sub_190A46540();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = *(int *)(a3 + 28);
    v18 = &a1[v17];
    v19 = (uint64_t)a2 + v17;
    v20 = sub_190A4651C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return a1;
}

uint64_t destroy for ActivityArchiver(id *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v4 = (uint64_t)(a1 + 1);

  __swift_destroy_boxed_opaque_existential_1(v4);
  v5 = (char *)a1 + *(int *)(a2 + 24);
  v6 = sub_190A46540();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = (char *)a1 + *(int *)(a2 + 28);
  v8 = sub_190A4651C();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for ActivityArchiver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = a1 + 8;
  v8 = a2 + 8;
  v9 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v9;
  v10 = v9;
  v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  v12 = v6;
  v11(v7, v8, v10);
  v13 = *(int *)(a3 + 24);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_190A46540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = *(int *)(a3 + 28);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_190A4651C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

void **assignWithCopy for ActivityArchiver(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t *v7;
  void *v8;
  uint64_t *v9;
  id v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v7 = (uint64_t *)(a2 + 1);
  v6 = *a2;
  v8 = *a1;
  *a1 = *a2;
  v9 = (uint64_t *)(a1 + 1);
  v10 = v6;

  __swift_assign_boxed_opaque_existential_1(v9, v7);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_190A46540();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = *(int *)(a3 + 28);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_190A4651C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for ActivityArchiver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_190A46540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_190A4651C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for ActivityArchiver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_190A46540();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_190A4651C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityArchiver()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190969A7C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_190A46540();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = sub_190A4651C();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ActivityArchiver()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_190969B28(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_190A46540();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_190A4651C();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t sub_190969BC4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_190A46540();
  if (v1 <= 0x3F)
  {
    result = sub_190A4651C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_190969C68(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_release();

  }
}

uint64_t View.applyCommonEnvironment(widget:metrics:overrideFamily:)(void *a1, void *a2, id a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t KeyPath;
  uint64_t v13;
  id v14;
  id v15;
  _QWORD v17[4];
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  KeyPath = swift_getKeyPath();
  v13 = swift_getKeyPath();
  v14 = a1;
  v15 = a2;
  if ((a4 & 1) != 0)
    a3 = objc_msgSend(v14, sel_family);
  v17[0] = v14;
  v17[1] = v15;
  v17[2] = a3;
  v17[3] = KeyPath;
  v18 = 0;
  v19 = v13;
  v20 = 0;
  v21 = 0;
  MEMORY[0x194012838](v17, a5, &type metadata for CommonArchivingWidgetEnvironmentModifier, a6);

  sub_1908CE654(KeyPath, 0);
  return sub_1908CE660(v13, 0, 0);
}

uint64_t sub_190969D8C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_190901C88();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_190969DD8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_190901C88();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_190969E24()
{
  sub_190901C88();
  return sub_190A46C48();
}

uint64_t sub_190969E6C()
{
  sub_190901C88();
  return sub_190A46C48();
}

uint64_t sub_190969EB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;
  uint64_t v4;

  sub_190901C44();
  result = sub_190A46C3C();
  *(_BYTE *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_190969F08@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;
  uint64_t v4;

  sub_190901C44();
  result = sub_190A46C3C();
  *(_BYTE *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_190969F5C()
{
  return EnvironmentValues._widgetRenderScheme.setter();
}

uint64_t sub_190969F98()
{
  return EnvironmentValues._widgetRenderScheme.setter();
}

uint64_t sub_190969FD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_190A46894();
  v4[0] = v1;
  v4[1] = sub_1908CE070();
  return MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v2, v4);
}

uint64_t sub_19096A028(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t destroy for CommonArchivingWidgetEnvironmentModifier(uint64_t a1)
{

  sub_1908CE654(*(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return sub_1908CE660(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t initializeWithCopy for CommonArchivingWidgetEnvironmentModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  void *v5;
  uint64_t v6;
  char v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v2 = a2;
  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 32);
  v8 = v4;
  v9 = v5;
  sub_1908D1B74(v6, v7);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  v10 = *(_QWORD *)(v2 + 40);
  v11 = *(_QWORD *)(v2 + 48);
  LOBYTE(v2) = *(_BYTE *)(v2 + 56);
  sub_19096A028(v10, v11, v2);
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 56) = v2;
  return a1;
}

uint64_t assignWithCopy for CommonArchivingWidgetEnvironmentModifier(uint64_t a1, void **a2)
{
  void **v2;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v2 = a2;
  v4 = *a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *a2;
  v6 = v4;

  v7 = v2[1];
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 16) = v2[2];
  v10 = (uint64_t)v2[3];
  v11 = *((_BYTE *)v2 + 32);
  sub_1908D1B74(v10, v11);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v10;
  *(_BYTE *)(a1 + 32) = v11;
  sub_1908CE654(v12, v13);
  v14 = (uint64_t)v2[5];
  v15 = (uint64_t)v2[6];
  LOBYTE(v2) = *((_BYTE *)v2 + 56);
  sub_19096A028(v14, v15, (char)v2);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = v14;
  *(_QWORD *)(a1 + 48) = v15;
  *(_BYTE *)(a1 + 56) = (_BYTE)v2;
  sub_1908CE660(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for CommonArchivingWidgetEnvironmentModifier(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = v5;
  sub_1908CE654(v6, v7);
  v8 = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_BYTE *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = v8;
  sub_1908CE660(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for CommonArchivingWidgetEnvironmentModifier(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CommonArchivingWidgetEnvironmentModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CommonArchivingWidgetEnvironmentModifier()
{
  return &type metadata for CommonArchivingWidgetEnvironmentModifier;
}

uint64_t sub_19096A2C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_19096A2D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t result;
  uint64_t v33;
  char *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  int EnumCaseMultiPayload;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  int v53;
  id v54;
  id v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  _BOOL4 v60;
  id v61;
  id v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t KeyPath;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  id v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  unint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  int v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  id v188;
  uint64_t v189;
  unint64_t v190;

  v147 = a1;
  v177 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6BB58);
  MEMORY[0x1E0C80A78](v3);
  v185 = (uint64_t)&v138 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A770);
  MEMORY[0x1E0C80A78](v146);
  v184 = (uint64_t)&v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A780);
  MEMORY[0x1E0C80A78](v148);
  v150 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A790);
  MEMORY[0x1E0C80A78](v149);
  v152 = (uint64_t)&v138 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A7A0);
  MEMORY[0x1E0C80A78](v151);
  v155 = (uint64_t)&v138 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A7B0);
  MEMORY[0x1E0C80A78](v153);
  v157 = (uint64_t)&v138 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A7C0);
  MEMORY[0x1E0C80A78](v154);
  v159 = (uint64_t)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A7D0);
  MEMORY[0x1E0C80A78](v156);
  v161 = (uint64_t)&v138 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A7E0);
  MEMORY[0x1E0C80A78](v158);
  v165 = (uint64_t)&v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A7F0);
  MEMORY[0x1E0C80A78](v160);
  v166 = (uint64_t)&v138 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A800);
  MEMORY[0x1E0C80A78](v162);
  v167 = (uint64_t)&v138 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A810);
  MEMORY[0x1E0C80A78](v163);
  v168 = (uint64_t)&v138 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A820);
  MEMORY[0x1E0C80A78](v164);
  v17 = (char *)&v138 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A830);
  MEMORY[0x1E0C80A78](v173);
  v169 = (char *)&v138 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A758);
  v175 = *(_QWORD *)(v19 - 8);
  v176 = v19;
  MEMORY[0x1E0C80A78](v19);
  v171 = (char *)&v138 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A6D0);
  v172 = *(_QWORD *)(v174 - 8);
  MEMORY[0x1E0C80A78](v174);
  v170 = (char *)&v138 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v187);
  v23 = (uint64_t *)((char *)&v138 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = type metadata accessor for WidgetDescriptor(0);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v138 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  v29 = MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v138 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v29);
  v34 = (char *)&v138 - v33;
  if (!(_QWORD)xmmword_1ECF6D940)
  {
    __break(1u);
    return result;
  }
  v35 = *(void **)(v2 + 8);
  v188 = *(id *)v2;
  v144 = *(_QWORD *)(v2 + 16);
  v179 = *(_QWORD *)(v2 + 24);
  v178 = *(unsigned __int8 *)(v2 + 32);
  v143 = *(_QWORD *)(v2 + 40);
  v181 = *(_QWORD *)(v2 + 48);
  v180 = *(unsigned __int8 *)(v2 + 56);
  v36 = *(_QWORD *)xmmword_1ECF6D940;
  v189 = xmmword_1ECF6D940;
  v37 = (*(uint64_t (**)(uint64_t))(qword_1ECF6D950 + 24))(v36);
  v38 = *(_QWORD *)(v37 + 16);
  v145 = v17;
  v182 = v37;
  v183 = v34;
  if (!v38)
  {
    v50 = 1;
    v51 = v143;
    goto LABEL_21;
  }
  v139 = v31;
  v141 = v35;
  v142 = v24;
  v39 = v37 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
  v140 = v25;
  v186 = *(_QWORD *)(v25 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1908AF5D8(v39, (uint64_t)v27, type metadata accessor for WidgetDescriptor);
    sub_1908AF5D8((uint64_t)v27, (uint64_t)v23, type metadata accessor for ViewSource);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
        swift_release();
        swift_release();
        v42 = sub_190A46240();
        (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v23, v42);
      }
      else
      {
        sub_1908B5150((uint64_t)v23, type metadata accessor for ViewSource);
      }
      v43 = 0;
      v44 = 0;
    }
    else
    {
      v43 = *v23;
      v44 = v23[1];
      v45 = v23[4];
      swift_bridgeObjectRelease();
      sub_1908B467C(v45);
      swift_release();
    }
    v46 = objc_msgSend(v188, sel_kind);
    v47 = sub_190A47ADC();
    v49 = v48;

    if (!v44)
    {
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    if (v43 == v47 && v44 == v49)
      break;
    v40 = sub_190A486DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v40 & 1) != 0)
      goto LABEL_19;
LABEL_5:
    sub_1908B5150((uint64_t)v27, type metadata accessor for WidgetDescriptor);
    v39 += v186;
    if (!--v38)
    {
      swift_bridgeObjectRelease();
      v50 = 1;
      v34 = v183;
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_19:
  swift_bridgeObjectRelease();
  v34 = v183;
  sub_190906900((uint64_t)v27, (uint64_t)v183);
  v50 = 0;
LABEL_20:
  v51 = v143;
  v24 = v142;
  v35 = v141;
  v25 = v140;
  v31 = v139;
LABEL_21:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v34, v50, 1, v24);
  swift_bridgeObjectRelease();
  sub_1908AAA48((uint64_t)v34, (uint64_t)v31, &qword_1ECF6C788);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v31, 1, v24) == 1)
  {
    sub_1908AA544((uint64_t)v31, &qword_1ECF6C788);
    v52 = 0;
  }
  else
  {
    v53 = v31[*(int *)(v24 + 52)];
    sub_1908B5150((uint64_t)v31, type metadata accessor for WidgetDescriptor);
    v52 = v53 == 2;
  }
  v54 = v188;
  v55 = v35;
  v56 = v179;
  v57 = v178;
  sub_1908D1B74(v179, v178);
  v58 = v181;
  v59 = v180;
  sub_19096A028(v51, v181, v180);
  sub_1908D1B74(v56, v57);
  sub_19096F040(v56, v57, &v189);
  sub_1908CE654(v56, v57);

  sub_1908CE654(v56, v57);
  sub_1908CE660(v51, v58, v59);
  v188 = v54;
  if (v52 || v189 == 2)
  {
    v61 = v54;
    v62 = v55;
    v63 = v179;
    v64 = v178;
    sub_1908D1B74(v179, v178);
    v65 = v181;
    v66 = v180;
    sub_19096A028(v51, v181, v180);
    sub_19096A028(v51, v65, v66);
    sub_19096F06C(v51, v65, v66, (uint64_t)&v189);
    sub_1908CE660(v51, v65, v66);

    sub_1908CE654(v63, v64);
    sub_1908CE660(v51, v65, v66);
    v60 = v190 - 3 < 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    v60 = 0;
  }
  InternalWidgetFamily.init(_:)(v144, &v189);
  v67 = sub_190A0C6DC(v55, (unsigned __int8 *)&v189);
  v69 = v68;
  KeyPath = swift_getKeyPath();
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B030);
  v72 = v184;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v184, v147, v71);
  v73 = (uint64_t *)(v72 + *(int *)(v146 + 36));
  *v73 = KeyPath;
  v73[1] = v67;
  v73[2] = v69;
  v74 = swift_getKeyPath();
  if (v60)
  {
    if (qword_1ECF69EA0 != -1)
      swift_once();
    v75 = sub_190A478B4();
    v76 = __swift_project_value_buffer(v75, (uint64_t)qword_1ECF6D410);
    v77 = *(_QWORD *)(v75 - 8);
    v78 = v185;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16))(v185, v76, v75);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v77 + 56))(v78, 0, 1, v75);
  }
  else
  {
    v79 = sub_190A478B4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v185, 1, 1, v79);
  }
  v80 = v149;
  v81 = (uint64_t)v150;
  v82 = (uint64_t *)&v150[*(int *)(v148 + 36)];
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BB80);
  v84 = v185;
  sub_1908AAA48(v185, (uint64_t)v82 + *(int *)(v83 + 28), (uint64_t *)&unk_1ECF6BB58);
  *v82 = v74;
  v85 = v184;
  sub_1908AAA48(v184, v81, &qword_1ECF6A770);
  sub_1908AA544(v84, (uint64_t *)&unk_1ECF6BB58);
  sub_1908AA544(v85, &qword_1ECF6A770);
  v86 = swift_getKeyPath();
  v87 = v152;
  sub_1908AAA48(v81, v152, &qword_1ECF6A780);
  v88 = v87 + *(int *)(v80 + 36);
  *(_QWORD *)v88 = v86;
  *(_BYTE *)(v88 + 8) = 0;
  sub_1908AA544(v81, &qword_1ECF6A780);
  v89 = swift_getKeyPath();
  v90 = swift_getKeyPath();
  v91 = swift_getKeyPath();
  v92 = swift_getKeyPath();
  v93 = v155;
  sub_1908AAA48(v87, v155, &qword_1ECF6A790);
  v94 = v93 + *(int *)(v151 + 36);
  *(_QWORD *)v94 = v89;
  *(_BYTE *)(v94 + 8) = 0;
  *(_QWORD *)(v94 + 16) = v90;
  *(_BYTE *)(v94 + 24) = 0;
  *(_QWORD *)(v94 + 32) = v91;
  *(_BYTE *)(v94 + 40) = 0;
  *(_QWORD *)(v94 + 48) = v92;
  *(_BYTE *)(v94 + 56) = 0;
  sub_1908AA544(v87, &qword_1ECF6A790);
  v95 = swift_getKeyPath();
  v96 = swift_getKeyPath();
  v97 = swift_getKeyPath();
  v98 = v157;
  sub_1908AAA48(v93, v157, &qword_1ECF6A7A0);
  v99 = v98 + *(int *)(v153 + 36);
  *(_QWORD *)v99 = v95;
  *(_BYTE *)(v99 + 8) = 0;
  *(_QWORD *)(v99 + 16) = v96;
  *(_BYTE *)(v99 + 24) = 0;
  *(_QWORD *)(v99 + 32) = v97;
  *(_BYTE *)(v99 + 40) = 0;
  sub_1908AA544(v93, &qword_1ECF6A7A0);
  v100 = swift_getKeyPath();
  v101 = swift_getKeyPath();
  v102 = v159;
  sub_1908AAA48(v98, v159, &qword_1ECF6A7B0);
  v103 = v102 + *(int *)(v154 + 36);
  *(_QWORD *)v103 = v100;
  *(_BYTE *)(v103 + 8) = 0;
  *(_QWORD *)(v103 + 16) = v101;
  *(_QWORD *)(v103 + 24) = 0;
  *(_BYTE *)(v103 + 32) = 0;
  sub_1908AA544(v98, &qword_1ECF6A7B0);
  v104 = swift_getKeyPath();
  v105 = swift_getKeyPath();
  v106 = v161;
  sub_1908AAA48(v102, v161, &qword_1ECF6A7C0);
  v107 = v106 + *(int *)(v156 + 36);
  *(_QWORD *)v107 = v104;
  *(_BYTE *)(v107 + 8) = 0;
  *(_QWORD *)(v107 + 16) = v105;
  *(_BYTE *)(v107 + 24) = 0;
  *(_QWORD *)(v107 + 32) = 0;
  *(_BYTE *)(v107 + 40) = 1;
  sub_1908AA544(v102, &qword_1ECF6A7C0);
  v108 = swift_getKeyPath();
  v109 = swift_getKeyPath();
  v110 = v165;
  sub_1908AAA48(v106, v165, &qword_1ECF6A7D0);
  v111 = v110 + *(int *)(v158 + 36);
  *(_QWORD *)v111 = v108;
  *(_BYTE *)(v111 + 8) = 0;
  *(_QWORD *)(v111 + 16) = v109;
  *(_BYTE *)(v111 + 24) = 0;
  sub_1908AA544(v106, &qword_1ECF6A7D0);
  v112 = swift_getKeyPath();
  v113 = swift_getKeyPath();
  v114 = v166;
  sub_1908AAA48(v110, v166, &qword_1ECF6A7E0);
  v115 = v114 + *(int *)(v160 + 36);
  *(_QWORD *)v115 = v112;
  *(_BYTE *)(v115 + 8) = 0;
  *(_QWORD *)(v115 + 16) = v113;
  *(_BYTE *)(v115 + 24) = 0;
  sub_1908AA544(v110, &qword_1ECF6A7E0);
  v116 = swift_getKeyPath();
  v117 = v167;
  sub_1908AAA48(v114, v167, &qword_1ECF6A7F0);
  v118 = v117 + *(int *)(v162 + 36);
  *(_QWORD *)v118 = v116;
  *(_BYTE *)(v118 + 8) = 0;
  sub_1908AA544(v114, &qword_1ECF6A7F0);
  v119 = swift_getKeyPath();
  v120 = v168;
  sub_1908AAA48(v117, v168, &qword_1ECF6A800);
  v121 = v120 + *(int *)(v163 + 36);
  *(_QWORD *)v121 = v119;
  *(_BYTE *)(v121 + 8) = 0;
  sub_1908AA544(v117, &qword_1ECF6A800);
  v122 = swift_getKeyPath();
  v123 = (uint64_t)v145;
  sub_1908AAA48(v120, (uint64_t)v145, &qword_1ECF6A810);
  v124 = (uint64_t *)(v123 + *(int *)(v164 + 36));
  v125 = v188;
  *v124 = v122;
  v124[1] = (uint64_t)v125;
  v126 = v125;
  sub_1908AA544(v120, &qword_1ECF6A810);
  v127 = swift_getKeyPath();
  if (qword_1ECF6AB30 != -1)
    swift_once();
  v128 = sub_190A467B0();
  v129 = __swift_project_value_buffer(v128, (uint64_t)qword_1ECF6D4D0);
  v130 = v173;
  v131 = (uint64_t)v169;
  v132 = (uint64_t *)&v169[*(int *)(v173 + 36)];
  v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AC78);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 16))((char *)v132 + *(int *)(v133 + 28), v129, v128);
  *v132 = v127;
  sub_19096B530(v123, v131);
  v134 = sub_19096B578();
  v135 = v171;
  sub_190A475A8();
  sub_1908AA544(v131, &qword_1ECF6A830);
  v189 = v130;
  v190 = v134;
  swift_getOpaqueTypeConformance2();
  v136 = v170;
  v137 = v176;
  sub_190A475CC();
  (*(void (**)(char *, uint64_t))(v175 + 8))(v135, v137);
  sub_1908AA544((uint64_t)v183, &qword_1ECF6C788);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v172 + 32))(v177, v136, v174);
}

uint64_t sub_19096B3B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6BB58);
  MEMORY[0x1E0C80A78](v2);
  sub_1908AAA48(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_1ECF6BB58);
  return sub_190A46ABC();
}

uint64_t sub_19096B430(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_190A467B0();
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_190A46BD0();
}

uint64_t sub_19096B4B8()
{
  return sub_190A46AB0();
}

uint64_t sub_19096B50C()
{
  return sub_190A46BC4();
}

uint64_t sub_19096B530(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_19096B578()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6A828;
  if (!qword_1ECF6A828)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6A830);
    v2[0] = sub_19096B5FC();
    v2[1] = sub_1908AF598(&qword_1ECF6AC70, &qword_1ECF6AC78, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6A828);
  }
  return result;
}

unint64_t sub_19096B5FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6A818;
  if (!qword_1ECF6A818)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6A820);
    v2[0] = sub_190941D80(&qword_1ECF6A808, &qword_1ECF6A810, sub_19096B6A0, (uint64_t (*)(void))sub_1909395F8);
    v2[1] = sub_1908AF598(&qword_1ECF6AD98, &qword_1ECF6ADA0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6A818);
  }
  return result;
}

uint64_t sub_19096B6A0()
{
  return sub_190941D80(&qword_1ECF6A7F8, &qword_1ECF6A800, sub_19096B6C4, (uint64_t (*)(void))sub_190941E8C);
}

uint64_t sub_19096B6C4()
{
  return sub_190941D80(&qword_1ECF6A7E8, &qword_1ECF6A7F0, sub_19096B6E8, (uint64_t (*)(void))sub_19096BA78);
}

uint64_t sub_19096B6E8()
{
  return sub_190941D80(&qword_1ECF6A7D8, &qword_1ECF6A7E0, sub_19096B70C, (uint64_t (*)(void))sub_19096BA34);
}

uint64_t sub_19096B70C()
{
  return sub_190941D80(&qword_1ECF6A7C8, &qword_1ECF6A7D0, sub_19096B730, (uint64_t (*)(void))sub_19096B9F0);
}

uint64_t sub_19096B730()
{
  return sub_190941D80(&qword_1ECF6A7B8, &qword_1ECF6A7C0, sub_19096B754, (uint64_t (*)(void))sub_19096B9AC);
}

uint64_t sub_19096B754()
{
  return sub_190941D80(&qword_1ECF6A7A8, &qword_1ECF6A7B0, sub_19096B778, (uint64_t (*)(void))sub_19096B968);
}

uint64_t sub_19096B778()
{
  return sub_190941D80(&qword_1ECF6A798, &qword_1ECF6A7A0, sub_19096B79C, (uint64_t (*)(void))sub_19096B924);
}

uint64_t sub_19096B79C()
{
  return sub_190941D80(&qword_1ECF6A788, &qword_1ECF6A790, (uint64_t (*)(void))sub_19096B7C0, (uint64_t (*)(void))sub_19096B8E0);
}

unint64_t sub_19096B7C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6A778;
  if (!qword_1ECF6A778)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6A780);
    v2[0] = sub_19096B844();
    v2[1] = sub_1908AF598(&qword_1ECF6BB78, &qword_1ECF6BB80, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6A778);
  }
  return result;
}

unint64_t sub_19096B844()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6A768;
  if (!qword_1ECF6A768)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6A770);
    v2[0] = sub_1908AF598(&qword_1ECF6B028, &qword_1ECF6B030, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1908AF598(&qword_1ECF6C628, &qword_1ECF6C630, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6A768);
  }
  return result;
}

unint64_t sub_19096B8E0()
{
  unint64_t result;

  result = qword_1ECF6BAA8;
  if (!qword_1ECF6BAA8)
  {
    result = MEMORY[0x19401429C](&unk_190A5D080, &type metadata for AssuredWidgetMetadataModifier);
    atomic_store(result, (unint64_t *)&qword_1ECF6BAA8);
  }
  return result;
}

unint64_t sub_19096B924()
{
  unint64_t result;

  result = qword_1ECF6AD08;
  if (!qword_1ECF6AD08)
  {
    result = MEMORY[0x19401429C](&unk_190A4C404, &type metadata for FirstPartyDominoLegacyMarginsFixIfNecessaryModifier);
    atomic_store(result, (unint64_t *)&qword_1ECF6AD08);
  }
  return result;
}

unint64_t sub_19096B968()
{
  unint64_t result;

  result = qword_1ECF6ACA8;
  if (!qword_1ECF6ACA8)
  {
    result = MEMORY[0x19401429C](&unk_190A53418, &type metadata for WidgetContentMarginsModifier);
    atomic_store(result, (unint64_t *)&qword_1ECF6ACA8);
  }
  return result;
}

unint64_t sub_19096B9AC()
{
  unint64_t result;

  result = qword_1ECF6AC90;
  if (!qword_1ECF6AC90)
  {
    result = MEMORY[0x19401429C](&unk_190A5881C, &type metadata for WidgetBackgroundModifier);
    atomic_store(result, (unint64_t *)&qword_1ECF6AC90);
  }
  return result;
}

unint64_t sub_19096B9F0()
{
  unint64_t result;

  result = qword_1ECF6ACA0;
  if (!qword_1ECF6ACA0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetContainerShapeModifier, &type metadata for WidgetContainerShapeModifier);
    atomic_store(result, (unint64_t *)&qword_1ECF6ACA0);
  }
  return result;
}

unint64_t sub_19096BA34()
{
  unint64_t result;

  result = qword_1ECF6AC98;
  if (!qword_1ECF6AC98)
  {
    result = MEMORY[0x19401429C](&unk_190A5626C, &type metadata for WidgetLayoutInsetsModifier);
    atomic_store(result, (unint64_t *)&qword_1ECF6AC98);
  }
  return result;
}

unint64_t sub_19096BA78()
{
  unint64_t result;

  result = qword_1ECF6BAB0;
  if (!qword_1ECF6BAB0)
  {
    result = MEMORY[0x19401429C](&unk_190A4A8D8, &type metadata for WidgetScalingModifier);
    atomic_store(result, (unint64_t *)&qword_1ECF6BAB0);
  }
  return result;
}

uint64_t sub_19096BABC()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6A758);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6A830);
  sub_19096B578();
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

id NSError.init(code:underlyingError:debugDescription:__file:__line:)(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a4;
  v7 = *a1;
  if (!a4)
  {
    a3 = CKCErrorCode.debugDescription.getter();
    v4 = v8;
  }
  v9 = sub_190A47ADC();
  return sub_19096BFDC(v9, v10, qword_190A52930[v7], a2, a3, v4);
}

uint64_t CKCErrorCode.debugDescription.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_19096BBF0 + 4 * byte_190A52760[*v0]))(0xD000000000000023, 0x8000000190A62B70);
}

uint64_t sub_19096BBF0()
{
  return 0x676F646863746157;
}

unint64_t sub_19096BC08()
{
  return 0xD000000000000014;
}

uint64_t sub_19096BCD4@<X0>(uint64_t a1@<X8>)
{
  return a1 - 3;
}

uint64_t sub_19096BCE4@<X0>(uint64_t a1@<X8>)
{
  return a1 - 1;
}

uint64_t sub_19096BCF4@<X0>(uint64_t a1@<X8>)
{
  return a1 + 13;
}

uint64_t sub_19096BD04()
{
  return 0x4E65766968637261;
}

uint64_t sub_19096BD28@<X0>(uint64_t a1@<X8>)
{
  return a1 - 1;
}

void sub_19096BD38()
{
  JUMPOUT(0x19096BD44);
}

WidgetKit::CKCErrorCode_optional __swiftcall CKCErrorCode.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;
  char v3;

  if (rawValue > 1199)
  {
    if (rawValue <= 1301)
    {
      switch(rawValue)
      {
        case 1200:
          *v1 = 13;
          return (WidgetKit::CKCErrorCode_optional)rawValue;
        case 1300:
          *v1 = 14;
          return (WidgetKit::CKCErrorCode_optional)rawValue;
        case 1301:
          *v1 = 15;
          return (WidgetKit::CKCErrorCode_optional)rawValue;
      }
    }
    else if (rawValue > 1499)
    {
      if (rawValue == 1500)
      {
        *v1 = 18;
        return (WidgetKit::CKCErrorCode_optional)rawValue;
      }
      if (rawValue == 1501)
      {
        *v1 = 19;
        return (WidgetKit::CKCErrorCode_optional)rawValue;
      }
    }
    else
    {
      if (rawValue == 1302)
      {
        *v1 = 16;
        return (WidgetKit::CKCErrorCode_optional)rawValue;
      }
      if (rawValue == 1400)
      {
        *v1 = 17;
        return (WidgetKit::CKCErrorCode_optional)rawValue;
      }
    }
LABEL_32:
    *v1 = 20;
    return (WidgetKit::CKCErrorCode_optional)rawValue;
  }
  v2 = 0;
  v3 = 2;
  switch(rawValue)
  {
    case 1001:
      goto LABEL_4;
    case 1002:
      v2 = 1;
LABEL_4:
      v3 = v2;
      goto LABEL_5;
    case 1050:
LABEL_5:
      *v1 = v3;
      break;
    case 1051:
      *v1 = 3;
      break;
    case 1052:
      *v1 = 4;
      break;
    case 1100:
      *v1 = 5;
      break;
    case 1101:
      *v1 = 6;
      break;
    case 1102:
      *v1 = 7;
      break;
    case 1103:
      *v1 = 8;
      break;
    case 1104:
      *v1 = 9;
      break;
    case 1105:
      *v1 = 10;
      break;
    case 1106:
      *v1 = 11;
      break;
    case 1107:
      *v1 = 12;
      break;
    default:
      goto LABEL_32;
  }
  return (WidgetKit::CKCErrorCode_optional)rawValue;
}

uint64_t CKCErrorCode.rawValue.getter()
{
  char *v0;

  return qword_190A52930[*v0];
}

BOOL sub_19096BEC8(char *a1, char *a2)
{
  return qword_190A52930[*a1] == qword_190A52930[*a2];
}

uint64_t sub_19096BEEC()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t sub_19096BF38()
{
  return sub_190A487CC();
}

uint64_t sub_19096BF6C()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

WidgetKit::CKCErrorCode_optional sub_19096BFB4(Swift::Int *a1)
{
  return CKCErrorCode.init(rawValue:)(*a1);
}

void sub_19096BFBC(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_190A52930[*v1];
}

id sub_19096BFDC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  id v20;
  char v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  _OWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;

  sub_1908DFD94(MEMORY[0x1E0DEE9D8]);
  if (a6)
  {
    v10 = sub_190A47ADC();
    v12 = v11;
    v31 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v30 = a5;
    *((_QWORD *)&v30 + 1) = a6;
    sub_190901E94(&v30, v27);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1908FBC10(v27, v10, v12, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a4)
  {
    v14 = sub_190A47ADC();
    v16 = v15;
    swift_getErrorValue();
    v17 = v28;
    v18 = v29;
    v31 = v29;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v30);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(boxed_opaque_existential_1, v17, v18);
    sub_190901E94(&v30, v27);
    v20 = a4;
    v21 = swift_isUniquelyReferenced_nonNull_native();
    sub_1908FBC10(v27, v14, v16, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  v22 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v23 = (void *)sub_190A47AC4();
  swift_bridgeObjectRelease();
  v24 = (void *)sub_190A47A1C();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v22, sel_initWithDomain_code_userInfo_, v23, a3, v24);

  return v25;
}

unint64_t sub_19096C1EC()
{
  unint64_t result;

  result = qword_1EE1EDA48[0];
  if (!qword_1EE1EDA48[0])
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for CKCErrorCode, &type metadata for CKCErrorCode);
    atomic_store(result, qword_1EE1EDA48);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CKCErrorCode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xED)
    goto LABEL_17;
  if (a2 + 19 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 19) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 19;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 19;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 19;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x14;
  v8 = v6 - 20;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CKCErrorCode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_19096C30C + 4 * byte_190A527E4[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_19096C340 + 4 * byte_190A527DF[v4]))();
}

uint64_t sub_19096C340(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19096C348(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19096C350);
  return result;
}

uint64_t sub_19096C35C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19096C364);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_19096C368(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19096C370(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CKCErrorCode()
{
  return &type metadata for CKCErrorCode;
}

uint64_t sub_19096C38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_19096C394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t sub_19096C39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t sub_19096C3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 48))();
}

uint64_t sub_19096C3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_19096C3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_190911770;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_19096C440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 24) + *(_QWORD *)(a4 + 24));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_190912240;
  return v11(a1, a2, a3, a4);
}

void sub_19096C4C4()
{
  sub_190A48448();
  __break(1u);
}

void sub_19096C51C()
{
  sub_190A48448();
  __break(1u);
}

uint64_t sub_19096C574()
{
  return sub_190A48880();
}

uint64_t EnvironmentValues.userWantsWidgetDataWhenPasscodeLocked.getter()
{
  return sub_19096C5B8((void (*)(void))sub_190901B18);
}

uint64_t EnvironmentValues.userWantsWidgetDataWhenPasscodeLocked.setter(uint64_t a1)
{
  return sub_19096C60C(a1, (void (*)(void))sub_190901B18);
}

uint64_t EnvironmentValues.userWantsLiveActivityDataWhenPasscodeLocked.getter()
{
  return sub_19096C5B8((void (*)(void))sub_190901B5C);
}

uint64_t sub_19096C5B8(void (*a1)(void))
{
  unsigned __int8 v2;

  a1();
  sub_190A46C3C();
  return v2;
}

uint64_t EnvironmentValues.userWantsLiveActivityDataWhenPasscodeLocked.setter(uint64_t a1)
{
  return sub_19096C60C(a1, (void (*)(void))sub_190901B5C);
}

uint64_t sub_19096C60C(uint64_t a1, void (*a2)(void))
{
  a2();
  return sub_190A46C48();
}

uint64_t (*EnvironmentValues.userWantsWidgetDataWhenPasscodeLocked.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_190901B18();
  sub_190A46C3C();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_19096C6AC;
}

uint64_t sub_19096C6AC(uint64_t a1)
{
  return sub_19096C724(a1);
}

uint64_t (*EnvironmentValues.userWantsLiveActivityDataWhenPasscodeLocked.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_190901B5C();
  sub_190A46C3C();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_19096C718;
}

uint64_t sub_19096C718(uint64_t a1)
{
  return sub_19096C724(a1);
}

uint64_t sub_19096C724(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_190A46C48();
}

ValueMetadata *_s46UserWantsLiveActivityDataWhenPasscodeLockedKeyVMa()
{
  return &_s46UserWantsLiveActivityDataWhenPasscodeLockedKeyVN;
}

ValueMetadata *_s40UserWantsWidgetDataWhenPasscodeLockedKeyVMa()
{
  return &_s40UserWantsWidgetDataWhenPasscodeLockedKeyVN;
}

uint64_t sub_19096C780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;

  v0 = sub_190A46E64();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v13 - v5;
  sub_190A47494();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v4, v0);
  if (v7 == *MEMORY[0x1E0CDAE08])
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    (*(void (**)(char *, uint64_t))(v1 + 96))(v4, v0);
    return *(_QWORD *)v4;
  }
  if (v7 == *MEMORY[0x1E0CDAE10])
  {
    (*(void (**)(char *, uint64_t))(v1 + 96))(v4, v0);
    if ((v4[40] & 1) == 0)
    {
      v9 = (void *)*((_QWORD *)v4 + 4);
      if (v9)
      {
        v10 = (id)*((_QWORD *)v4 + 4);
      }
      else
      {
        v10 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
        v9 = 0;
      }
      v11 = v9;
      v8 = sub_190A45EE0();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
      return v8;
    }
    v14 = 0;
    v15 = 0xE000000000000000;
    sub_190A48298();
    swift_bridgeObjectRelease();
    v14 = 0xD000000000000014;
    v15 = 0x8000000190A62C90;
    sub_190A47B3C();
    sub_190A47B3C();
  }
  else
  {
    if (v7 != *MEMORY[0x1E0CDAE00])
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    v14 = 0;
    v15 = 0xE000000000000000;
    sub_190A48298();
    swift_bridgeObjectRelease();
    v14 = 0xD000000000000022;
    v15 = 0x8000000190A62C30;
    sub_190A47B3C();
  }
  result = sub_190A48448();
  __break(1u);
  return result;
}

uint64_t sub_19096CAB8()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D7F8 = result;
  return result;
}

uint64_t sub_19096CADC()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B560);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D7E0 = v0;
  *(_QWORD *)algn_1ECF6D7E8 = 0xD000000000000026;
  qword_1ECF6D7F0 = 0x8000000190A60DE0;
  return result;
}

uint64_t sub_19096CB50(uint64_t a1, uint64_t a2)
{
  return sub_19096CF24(a1, a2, &qword_1ECF6B738);
}

uint64_t sub_19096CB6C()
{
  uint64_t v0;

  if (qword_1ECF6B730 != -1)
    swift_once();
  v0 = qword_1ECF6D7E0;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_19096CBE0()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D798 = result;
  return result;
}

uint64_t sub_19096CC04()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B548);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D780 = v0;
  *(_QWORD *)algn_1ECF6D788 = 0xD000000000000019;
  qword_1ECF6D790 = 0x8000000190A60E10;
  return result;
}

uint64_t sub_19096CC78(uint64_t a1, uint64_t a2)
{
  return sub_19096CF24(a1, a2, &qword_1ECF6B6E8);
}

uint64_t sub_19096CC94()
{
  uint64_t v0;

  if (qword_1ECF6B6E0 != -1)
    swift_once();
  v0 = qword_1ECF6D780;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_19096CD08()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D7B8 = result;
  return result;
}

uint64_t sub_19096CD2C()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B550);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D7A0 = v0;
  *(_QWORD *)algn_1ECF6D7A8 = 0xD000000000000019;
  qword_1ECF6D7B0 = 0x8000000190A60E30;
  return result;
}

uint64_t sub_19096CDA0(uint64_t a1, uint64_t a2)
{
  return sub_19096CF24(a1, a2, &qword_1ECF6B6F8);
}

uint64_t sub_19096CDBC()
{
  uint64_t v0;

  if (qword_1ECF6B6F0 != -1)
    swift_once();
  v0 = qword_1ECF6D7A0;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_19096CE30()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D7D8 = result;
  return result;
}

uint64_t sub_19096CE54()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B558);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D7C0 = v0;
  *(_QWORD *)algn_1ECF6D7C8 = 0xD00000000000001FLL;
  qword_1ECF6D7D0 = 0x8000000190A60E50;
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityDifferentiateWithoutColorKey()
{
  return &type metadata for AccessibilityDifferentiateWithoutColorKey;
}

ValueMetadata *type metadata accessor for AccessibilityInvertColorsKey()
{
  return &type metadata for AccessibilityInvertColorsKey;
}

ValueMetadata *type metadata accessor for AccessibilityReduceMotionKey()
{
  return &type metadata for AccessibilityReduceMotionKey;
}

ValueMetadata *type metadata accessor for AccessibilityReduceTransparencyKey()
{
  return &type metadata for AccessibilityReduceTransparencyKey;
}

uint64_t sub_19096CF08(uint64_t a1, uint64_t a2)
{
  return sub_19096CF24(a1, a2, &qword_1ECF6B728);
}

uint64_t sub_19096CF24(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  if (*a3 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_19096CF60()
{
  uint64_t v0;

  if (qword_1ECF6B720 != -1)
    swift_once();
  v0 = qword_1ECF6D7C0;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

BOOL static JindoDisplayMode.< infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

BOOL static JindoDisplayMode.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t JindoDisplayMode.hash(into:)()
{
  return sub_190A487CC();
}

uint64_t sub_19096D038()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x746361706D6F63;
  if (*v0 != 1)
    v1 = 0x6465646E61707865;
  if (*v0)
    return v1;
  else
    return 0x6C616D696E696DLL;
}

uint64_t sub_19096D094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19096D7BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19096D0B8()
{
  sub_19096D468();
  return sub_190A48868();
}

uint64_t sub_19096D0E0()
{
  sub_19096D468();
  return sub_190A48874();
}

uint64_t sub_19096D108()
{
  sub_19096D4F0();
  return sub_190A48868();
}

uint64_t sub_19096D130()
{
  sub_19096D4F0();
  return sub_190A48874();
}

uint64_t sub_19096D158()
{
  sub_19096D4AC();
  return sub_190A48868();
}

uint64_t sub_19096D180()
{
  sub_19096D4AC();
  return sub_190A48874();
}

uint64_t sub_19096D1A8()
{
  sub_19096D534();
  return sub_190A48868();
}

uint64_t sub_19096D1D0()
{
  sub_19096D534();
  return sub_190A48874();
}

void *static JindoDisplayMode.allCases.getter()
{
  return &unk_1E2CC4E88;
}

uint64_t JindoDisplayMode.encode(to:)(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  char v26;
  char v27;

  v24 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDA60);
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  MEMORY[0x1E0C80A78](v3);
  v20 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDA68);
  v18 = *(_QWORD *)(v5 - 8);
  v19 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDA70);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDA78);
  v23 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19096D468();
  sub_190A48850();
  if ((_BYTE)v24)
  {
    if (v24 == 1)
    {
      v26 = 1;
      sub_19096D4F0();
      sub_190A485C8();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v19);
    }
    else
    {
      v27 = 2;
      sub_19096D4AC();
      v15 = v20;
      sub_190A485C8();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v22);
    }
  }
  else
  {
    v25 = 0;
    sub_19096D534();
    sub_190A485C8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v14, v12);
}

unint64_t sub_19096D468()
{
  unint64_t result;

  result = qword_1EE1EDA80;
  if (!qword_1EE1EDA80)
  {
    result = MEMORY[0x19401429C](&unk_190A53194, &type metadata for JindoDisplayMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDA80);
  }
  return result;
}

unint64_t sub_19096D4AC()
{
  unint64_t result;

  result = qword_1EE1EDA88;
  if (!qword_1EE1EDA88)
  {
    result = MEMORY[0x19401429C](&unk_190A53144, &type metadata for JindoDisplayMode.ExpandedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDA88);
  }
  return result;
}

unint64_t sub_19096D4F0()
{
  unint64_t result;

  result = qword_1EE1EDA90;
  if (!qword_1EE1EDA90)
  {
    result = MEMORY[0x19401429C](&unk_190A530F4, &type metadata for JindoDisplayMode.CompactCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDA90);
  }
  return result;
}

unint64_t sub_19096D534()
{
  unint64_t result;

  result = qword_1EE1EDA98;
  if (!qword_1EE1EDA98)
  {
    result = MEMORY[0x19401429C](&unk_190A530A4, &type metadata for JindoDisplayMode.MinimalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDA98);
  }
  return result;
}

uint64_t JindoDisplayMode.hashValue.getter()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

_QWORD *JindoDisplayMode.init(from:)(_QWORD *a1)
{
  return sub_19096D910(a1);
}

void sub_19096D5D0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E2CC4F40;
}

_QWORD *sub_19096D5E0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_19096D910(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_19096D608(_QWORD *a1)
{
  unsigned __int8 *v1;

  return JindoDisplayMode.encode(to:)(a1, *v1);
}

BOOL sub_19096D620(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_19096D634(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_19096D648(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_19096D65C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t sub_19096D670()
{
  sub_19096DD30();
  return sub_190A4681C();
}

uint64_t EnvironmentValues.jindoDisplayMode.getter()
{
  unsigned __int8 v1;

  sub_19096DCE8();
  sub_190A46C3C();
  return v1;
}

uint64_t EnvironmentValues.jindoDisplayMode.setter()
{
  sub_19096DCE8();
  return sub_190A46C48();
}

uint64_t (*EnvironmentValues.jindoDisplayMode.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = sub_19096DCE8();
  sub_190A46C3C();
  return sub_19096D788;
}

uint64_t sub_19096D788(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_190A46C48();
}

uint64_t sub_19096D7BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C616D696E696DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746361706D6F63 && a2 == 0xE700000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465646E61707865 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

_QWORD *sub_19096D910(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  char v31;
  char v32;
  char v33;

  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDB08);
  v25 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDB10);
  v23 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDB18);
  v4 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDB20);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19096D468();
  v11 = (uint64_t)v30;
  sub_190A48838();
  if (v11)
    goto LABEL_7;
  v21 = v4;
  v22 = v8;
  v12 = v29;
  v30 = a1;
  v13 = v10;
  v14 = sub_190A485A4();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v18 = sub_190A4831C();
    swift_allocError();
    v10 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90);
    *v10 = &type metadata for JindoDisplayMode;
    sub_190A48508();
    sub_190A48304();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v10, *MEMORY[0x1E0DEC450], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v13, v7);
    a1 = v30;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v10;
  }
  v10 = (_QWORD *)*(unsigned __int8 *)(v14 + 32);
  if (*(_BYTE *)(v14 + 32))
  {
    if ((_DWORD)v10 == 1)
    {
      v32 = 1;
      sub_19096D4F0();
      v16 = v28;
      sub_190A484FC();
      v17 = v22;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v16, v26);
    }
    else
    {
      v33 = 2;
      sub_19096D4AC();
      sub_190A484FC();
      v17 = v22;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v27);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v13, v15);
  }
  else
  {
    v31 = 0;
    sub_19096D534();
    sub_190A484FC();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v24);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v13, v7);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return v10;
}

unint64_t sub_19096DCE8()
{
  unint64_t result;

  result = qword_1EE1EDAA0;
  if (!qword_1EE1EDAA0)
  {
    result = MEMORY[0x19401429C](&unk_190A5306C, &_s20_JindoDisplayModeKeyVN);
    atomic_store(result, (unint64_t *)&qword_1EE1EDAA0);
  }
  return result;
}

unint64_t sub_19096DD30()
{
  unint64_t result;

  result = qword_1EE1EDAA8;
  if (!qword_1EE1EDAA8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for JindoDisplayMode, &type metadata for JindoDisplayMode);
    atomic_store(result, (unint64_t *)&qword_1EE1EDAA8);
  }
  return result;
}

unint64_t sub_19096DD78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EDAB0;
  if (!qword_1EE1EDAB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EDAB8);
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EDAB0);
  }
  return result;
}

uint64_t sub_19096DDC4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_19096DCE8();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_19096DE10()
{
  sub_19096DCE8();
  return sub_190A46C48();
}

ValueMetadata *type metadata accessor for JindoDisplayMode()
{
  return &type metadata for JindoDisplayMode;
}

ValueMetadata *_s20_JindoDisplayModeKeyVMa()
{
  return &_s20_JindoDisplayModeKeyVN;
}

uint64_t _s9WidgetKit16JindoDisplayModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19096DECC + 4 * byte_190A52CD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19096DF00 + 4 * byte_190A52CD0[v4]))();
}

uint64_t sub_19096DF00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19096DF08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19096DF10);
  return result;
}

uint64_t sub_19096DF1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19096DF24);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19096DF28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19096DF30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JindoDisplayMode.CodingKeys()
{
  return &type metadata for JindoDisplayMode.CodingKeys;
}

ValueMetadata *type metadata accessor for JindoDisplayMode.MinimalCodingKeys()
{
  return &type metadata for JindoDisplayMode.MinimalCodingKeys;
}

ValueMetadata *type metadata accessor for JindoDisplayMode.CompactCodingKeys()
{
  return &type metadata for JindoDisplayMode.CompactCodingKeys;
}

ValueMetadata *type metadata accessor for JindoDisplayMode.ExpandedCodingKeys()
{
  return &type metadata for JindoDisplayMode.ExpandedCodingKeys;
}

unint64_t sub_19096DF80()
{
  unint64_t result;

  result = qword_1EE1EDAC0;
  if (!qword_1EE1EDAC0)
  {
    result = MEMORY[0x19401429C](&unk_190A53044, &type metadata for JindoDisplayMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDAC0);
  }
  return result;
}

unint64_t sub_19096DFC8()
{
  unint64_t result;

  result = qword_1EE1EDAC8;
  if (!qword_1EE1EDAC8)
  {
    result = MEMORY[0x19401429C](&unk_190A52F64, &type metadata for JindoDisplayMode.MinimalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDAC8);
  }
  return result;
}

unint64_t sub_19096E010()
{
  unint64_t result;

  result = qword_1EE1EDAD0;
  if (!qword_1EE1EDAD0)
  {
    result = MEMORY[0x19401429C](&unk_190A52F8C, &type metadata for JindoDisplayMode.MinimalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDAD0);
  }
  return result;
}

unint64_t sub_19096E058()
{
  unint64_t result;

  result = qword_1EE1EDAD8;
  if (!qword_1EE1EDAD8)
  {
    result = MEMORY[0x19401429C](&unk_190A52F14, &type metadata for JindoDisplayMode.CompactCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDAD8);
  }
  return result;
}

unint64_t sub_19096E0A0()
{
  unint64_t result;

  result = qword_1EE1EDAE0;
  if (!qword_1EE1EDAE0)
  {
    result = MEMORY[0x19401429C](&unk_190A52F3C, &type metadata for JindoDisplayMode.CompactCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDAE0);
  }
  return result;
}

unint64_t sub_19096E0E8()
{
  unint64_t result;

  result = qword_1EE1EDAE8;
  if (!qword_1EE1EDAE8)
  {
    result = MEMORY[0x19401429C](&unk_190A52EC4, &type metadata for JindoDisplayMode.ExpandedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDAE8);
  }
  return result;
}

unint64_t sub_19096E130()
{
  unint64_t result;

  result = qword_1EE1EDAF0;
  if (!qword_1EE1EDAF0)
  {
    result = MEMORY[0x19401429C](&unk_190A52EEC, &type metadata for JindoDisplayMode.ExpandedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDAF0);
  }
  return result;
}

unint64_t sub_19096E178()
{
  unint64_t result;

  result = qword_1EE1EDAF8;
  if (!qword_1EE1EDAF8)
  {
    result = MEMORY[0x19401429C](&unk_190A52FB4, &type metadata for JindoDisplayMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDAF8);
  }
  return result;
}

unint64_t sub_19096E1C0()
{
  unint64_t result;

  result = qword_1EE1EDB00;
  if (!qword_1EE1EDB00)
  {
    result = MEMORY[0x19401429C](&unk_190A52FDC, &type metadata for JindoDisplayMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDB00);
  }
  return result;
}

uint64_t AccessoryWidgetBackground.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t KeyPath;
  uint64_t result;

  KeyPath = swift_getKeyPath();
  result = swift_getKeyPath();
  *(_QWORD *)a1 = KeyPath;
  *(_BYTE *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = result;
  *(_BYTE *)(a1 + 24) = 0;
  return result;
}

void AccessoryWidgetBackground.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  _BYTE v5[48];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_BYTE *)(v0 + 24);
  sub_1908D1B74(v1, v2);
  sub_1908D1B74(v3, v4);
  sub_1908D1B74(v3, v4);
  sub_19096FB48(v3, v4, (void (*)(uint64_t, _QWORD))sub_1909701C8, 0x6146746567646957, 0xEC000000796C696DLL, (void (*)(_QWORD, _QWORD))sub_1909701CC, v5);
  sub_1908CE654(v3, v4);
  sub_1908CE654(v1, v2);
  sub_1908CE654(v3, v4);
  __asm { BR              X10 }
}

double sub_19096E32C()
{
  uint64_t v0;
  double result;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  char v5;
  char v6;

  if (CHSWidgetFamilyIsAccessory())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_getKeyPath();
  }
  sub_19096F280();
  sub_190A46F90();
  result = *(double *)&v2;
  *(_OWORD *)v0 = v2;
  *(_OWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 32) = v4;
  *(_BYTE *)(v0 + 40) = v5;
  *(_BYTE *)(v0 + 41) = v6;
  return result;
}

void sub_19096E43C()
{
  sub_190A486D0();
  __break(1u);
}

uint64_t sub_19096E454@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_190970184();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_19096E4A0()
{
  sub_190970184();
  return sub_190A46C48();
}

id sub_19096E4E8(void *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  os_log_type_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  v16 = a1;
  v3 = sub_190A46C30();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return v16;
  swift_retain();
  v7 = sub_190A47F5C();
  v8 = sub_190A472FC();
  v9 = v7;
  if (os_log_type_enabled(v8, v7))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v18 = v11;
    *(_DWORD *)v10 = 136315138;
    sub_190970100();
    v12 = sub_190A48880();
    v17 = sub_1908B35C4(v12, v13, &v18);
    sub_190A48178();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v8, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v11, -1, -1);
    MEMORY[0x194014398](v10, -1, -1);
  }

  sub_190A46C24();
  swift_getAtKeyPath();
  sub_1908D1BB0(v16, 0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (id)v18;
}

double sub_19096E6CC(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  double v15;

  v4 = sub_190A46C30();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return *(double *)&a1;
  swift_retain();
  v8 = sub_190A47F5C();
  v9 = sub_190A472FC();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = *(double *)&v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_1908B35C4(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v15);
    sub_190A48178();
    _os_log_impl(&dword_1908A7000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v12, -1, -1);
    MEMORY[0x194014398](v11, -1, -1);
  }

  sub_190A46C24();
  swift_getAtKeyPath();
  sub_1908CE654(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_19096E88C(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  _QWORD v17[3];
  uint64_t v18;

  v4 = sub_190A46C30();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v15 = a1;
  }
  else
  {
    swift_retain();
    v8 = sub_190A47F5C();
    v9 = sub_190A472FC();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v18 = v12;
      *(_DWORD *)v11 = 136315138;
      v17[1] = v11 + 4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6908);
      v13 = sub_190A48880();
      v17[2] = sub_1908B35C4(v13, v14, &v18);
      sub_190A48178();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1908A7000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v12, -1, -1);
      MEMORY[0x194014398](v11, -1, -1);
    }

    sub_190A46C24();
    swift_getAtKeyPath();
    sub_1908D1BB0(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v18;
  }
  return (uint64_t)a1;
}

uint64_t sub_19096EA60(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_190A46C30();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain();
  v8 = sub_190A47F5C();
  v9 = sub_190A472FC();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_1908B35C4(1819242306, 0xE400000000000000, &v15);
    sub_190A48178();
    _os_log_impl(&dword_1908A7000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v12, -1, -1);
    MEMORY[0x194014398](v11, -1, -1);
  }

  sub_190A46C24();
  swift_getAtKeyPath();
  sub_1908CE654(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_19096EC18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;

  v2 = v1;
  v4 = sub_190A46C30();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1908AAA48(v2, (uint64_t)v10, &qword_1EE1EB960);
  if (swift_getEnumCaseMultiPayload() == 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v10, v4);
  v12 = sub_190A47F5C();
  v13 = sub_190A472FC();
  v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v18[1] = a1;
    v17 = v16;
    v19 = v16;
    *(_DWORD *)v15 = 136315138;
    v18[2] = sub_1908B35C4(0xD000000000000011, 0x8000000190A62CF0, &v19);
    sub_190A48178();
    _os_log_impl(&dword_1908A7000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v17, -1, -1);
    MEMORY[0x194014398](v15, -1, -1);
  }

  sub_190A46C24();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_19096EE48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;

  v3 = sub_190A46C30();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)v1;
  if (*(_BYTE *)(v1 + 56) == 1)
  {
    *(_QWORD *)a1 = v8;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  }
  else
  {
    sub_1909589A4(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1909578C8);
    v9 = sub_190A47F5C();
    v10 = sub_190A472FC();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v15[1] = v8;
      v14 = v13;
      v16 = v13;
      *(_DWORD *)v12 = 136315138;
      v15[0] = v12 + 4;
      v15[2] = sub_1908B35C4(0xD000000000000014, 0x8000000190A62DB0, &v16);
      sub_190A48178();
      _os_log_impl(&dword_1908A7000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v14, -1, -1);
      MEMORY[0x194014398](v12, -1, -1);
    }

    sub_190A46C24();
    swift_getAtKeyPath();
    sub_1909589A4(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1909578D8);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_19096F040@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  return sub_19096FB48(a1, a2, (void (*)(uint64_t, _QWORD))sub_1908D1B74, 0xD000000000000015, 0x8000000190A62D30, (void (*)(_QWORD, _QWORD))sub_1908CE654, a3);
}

uint64_t sub_19096F06C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  os_log_type_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v8 = sub_190A46C30();
  v9 = *(_QWORD *)(v8 - 8);
  result = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    *(_BYTE *)a4 = a1;
    *(_QWORD *)(a4 + 8) = a2;
  }
  else
  {
    sub_19096A028(a1, a2, 0);
    v13 = sub_190A47F5C();
    v14 = sub_190A472FC();
    v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v21 = a2;
      v18 = v17;
      v23 = v17;
      *(_DWORD *)v16 = 136315138;
      v20 = v16 + 4;
      v22 = sub_1908B35C4(0xD000000000000012, 0x8000000190A62D10, &v23);
      sub_190A48178();
      _os_log_impl(&dword_1908A7000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      v19 = v18;
      a2 = v21;
      MEMORY[0x194014398](v19, -1, -1);
      MEMORY[0x194014398](v16, -1, -1);
    }

    sub_190A46C24();
    swift_getAtKeyPath();
    sub_1908CE660(a1, a2, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return result;
}

uint64_t sub_19096F250@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  return sub_19096FB48(a1, a2, (void (*)(uint64_t, _QWORD))sub_1909701C8, 0x6146746567646957, 0xEC000000796C696DLL, (void (*)(_QWORD, _QWORD))sub_1909701CC, a3);
}

unint64_t sub_19096F280()
{
  unint64_t result;

  result = qword_1ECF6A030;
  if (!qword_1ECF6A030)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for _AccessoryWidgetBackground, &type metadata for _AccessoryWidgetBackground);
    atomic_store(result, (unint64_t *)&qword_1ECF6A030);
  }
  return result;
}

uint64_t sub_19096F2CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_190970184();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_19096F318()
{
  sub_190970184();
  return sub_190A46C48();
}

uint64_t sub_19096F360()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for AccessoryWidgetBackground(uint64_t a1)
{
  sub_1908CE654(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return sub_1908CE654(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for AccessoryWidgetBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B74(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(v2 + 16);
  LOBYTE(v2) = *(_BYTE *)(v2 + 24);
  sub_1908D1B74(v6, v2);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v2;
  return a1;
}

uint64_t assignWithCopy for AccessoryWidgetBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B74(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1908CE654(v6, v7);
  v8 = *(_QWORD *)(v2 + 16);
  LOBYTE(v2) = *(_BYTE *)(v2 + 24);
  sub_1908D1B74(v8, v2);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v2;
  sub_1908CE654(v9, v10);
  return a1;
}

uint64_t assignWithTake for AccessoryWidgetBackground(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1908CE654(v6, v7);
  v8 = *((_BYTE *)a2 + 24);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v8;
  sub_1908CE654(v9, v10);
  return a1;
}

ValueMetadata *type metadata accessor for AccessoryWidgetBackground()
{
  return &type metadata for AccessoryWidgetBackground;
}

unint64_t sub_19096F4F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EC0C8;
  if (!qword_1EE1EC0C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EC0D0);
    v2[0] = sub_19096F280();
    v2[1] = MEMORY[0x1E0CE0400];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EC0C8);
  }
  return result;
}

uint64_t sub_19096F55C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;

  v2 = v1;
  v4 = sub_190A46C30();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69A10);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1908AAA48(v2, (uint64_t)v10, &qword_1ECF69A10);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_19097013C((uint64_t)v10, a1);
  v12 = sub_190A47F5C();
  v13 = sub_190A472FC();
  v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v18[1] = a1;
    v17 = v16;
    v19 = v16;
    *(_DWORD *)v15 = 136315138;
    v18[2] = sub_1908B35C4(0x6C616E6F6974704FLL, 0xEE003E657461443CLL, &v19);
    sub_190A48178();
    _os_log_impl(&dword_1908A7000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v17, -1, -1);
    MEMORY[0x194014398](v15, -1, -1);
  }

  sub_190A46C24();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_19096F78C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_190A46C30();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    v8 = sub_190A47F5C();
    v9 = sub_190A472FC();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14 = sub_1908B35C4(0xD00000000000001ELL, 0x8000000190A62D70, &v15);
      sub_190A48178();
      _os_log_impl(&dword_1908A7000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v12, -1, -1);
      MEMORY[0x194014398](v11, -1, -1);
    }

    sub_190A46C24();
    swift_getAtKeyPath();
    sub_1908CE654(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_19096F94C@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;

  v6 = sub_190A46C30();
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    *a3 = a1;
  }
  else
  {
    sub_1908D1B74(a1, 0);
    v11 = sub_190A47F5C();
    v12 = sub_190A472FC();
    v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v17[1] = a3;
      v16 = v15;
      v18 = v15;
      *(_DWORD *)v14 = 136315138;
      v17[2] = sub_1908B35C4(0xD000000000000013, 0x8000000190A62D90, &v18);
      sub_190A48178();
      _os_log_impl(&dword_1908A7000, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v16, -1, -1);
      MEMORY[0x194014398](v14, -1, -1);
    }

    sub_190A46C24();
    swift_getAtKeyPath();
    sub_1908CE654(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

uint64_t sub_19096FB1C@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  return sub_19096FB48(a1, a2, (void (*)(uint64_t, _QWORD))sub_1908D1B74, 0xD000000000000014, 0x8000000190A62D50, (void (*)(_QWORD, _QWORD))sub_1909701CC, a3);
}

uint64_t sub_19096FB48@<X0>(uint64_t a1@<X0>, char a2@<W1>, void (*a3)(uint64_t, _QWORD)@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, void (*a6)(_QWORD, _QWORD)@<X5>, _BYTE *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  os_log_type_t v19;
  NSObject *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26[2];
  void (*v27)(_QWORD, _QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v14 = sub_190A46C30();
  v15 = *(_QWORD *)(v14 - 8);
  result = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    *a7 = a1;
  }
  else
  {
    v28 = a4;
    a3(a1, 0);
    v19 = sub_190A47F5C();
    v20 = sub_190A472FC();
    if (os_log_type_enabled(v20, v19))
    {
      v26[1] = (unint64_t)a7;
      v21 = swift_slowAlloc();
      v26[0] = a5;
      v22 = (uint8_t *)v21;
      v23 = swift_slowAlloc();
      v27 = a6;
      v24 = v23;
      v30 = v23;
      *(_DWORD *)v22 = 136315138;
      v29 = sub_1908B35C4(v28, v26[0], &v30);
      sub_190A48178();
      _os_log_impl(&dword_1908A7000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
      swift_arrayDestroy();
      v25 = v24;
      a6 = v27;
      MEMORY[0x194014398](v25, -1, -1);
      MEMORY[0x194014398](v22, -1, -1);
    }

    sub_190A46C24();
    swift_getAtKeyPath();
    a6(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  return result;
}

double sub_19096FD28()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  os_log_type_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD v11[2];
  double v12;

  v1 = sub_190A46C30();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[32] == 1)
    return *(double *)v0;
  swift_retain();
  v6 = sub_190A47F5C();
  v7 = sub_190A472FC();
  v8 = v6;
  if (os_log_type_enabled(v7, v6))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = *(double *)&v10;
    *(_DWORD *)v9 = 136315138;
    v11[0] = v9 + 4;
    v11[1] = sub_1908B35C4(0x65736E4965676445, 0xEA00000000007374, (uint64_t *)&v12);
    sub_190A48178();
    _os_log_impl(&dword_1908A7000, v7, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v10, -1, -1);
    MEMORY[0x194014398](v9, -1, -1);
  }

  sub_190A46C24();
  swift_getAtKeyPath();
  sub_19096FEFC((uint64_t)v0);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v12;
}

uint64_t sub_19096FEFC(uint64_t a1)
{
  sub_19096FF30(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_19096FF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_19096FF3C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_190A46C30();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    v8 = sub_190A47F5C();
    v9 = sub_190A472FC();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14 = sub_1908B35C4(0xD000000000000017, 0x8000000190A62CD0, &v15);
      sub_190A48178();
      _os_log_impl(&dword_1908A7000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v12, -1, -1);
      MEMORY[0x194014398](v11, -1, -1);
    }

    sub_190A46C24();
    swift_getAtKeyPath();
    j__swift_release(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

unint64_t sub_190970100()
{
  unint64_t result;

  result = qword_1ECF6CD48;
  if (!qword_1ECF6CD48)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECF6CD48);
  }
  return result;
}

uint64_t sub_19097013C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_190970184()
{
  unint64_t result;

  result = qword_1EE1E68A8;
  if (!qword_1EE1E68A8)
  {
    result = MEMORY[0x19401429C](&unk_190A59384, &_s33WidgetInvertsAccentFilterStyleKeyVN);
    atomic_store(result, (unint64_t *)&qword_1EE1E68A8);
  }
  return result;
}

unint64_t sub_1909701D4()
{
  unint64_t result;

  result = qword_1ECF6ABC8;
  if (!qword_1ECF6ABC8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for EnvironmentValues.WidgetContentMarginsKey, &type metadata for EnvironmentValues.WidgetContentMarginsKey);
    atomic_store(result, (unint64_t *)&qword_1ECF6ABC8);
  }
  return result;
}

double static EnvironmentValues.WidgetContentMarginsKey.defaultValue.getter()
{
  return 0.0;
}

double sub_19097022C@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_190970238()
{
  sub_1909703A4();
  return sub_190A4681C();
}

double _s7SwiftUI17EnvironmentValuesV9WidgetKitE20widgetContentMarginsAA10EdgeInsetsVvg_0()
{
  double v1;

  sub_1909701D4();
  sub_190A46C3C();
  return v1;
}

uint64_t sub_1909702C8()
{
  unsigned __int8 v1;

  sub_1909703E8();
  sub_190A46C3C();
  return v1;
}

uint64_t WidgetConfiguration._contentMarginsDisabled()()
{
  return sub_190A2B704((uint64_t)sub_190970318, 0);
}

uint64_t sub_190970318(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for WidgetDescriptor(0);
  *(_BYTE *)(a1 + *(int *)(result + 84)) = 1;
  return result;
}

ValueMetadata *type metadata accessor for EnvironmentValues.WidgetContentMarginsKey()
{
  return &type metadata for EnvironmentValues.WidgetContentMarginsKey;
}

uint64_t sub_190970358()
{
  sub_19090D084();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1909703A4()
{
  unint64_t result;

  result = qword_1EE1EDB28;
  if (!qword_1EE1EDB28)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD83E0], MEMORY[0x1E0CD83D8]);
    atomic_store(result, (unint64_t *)&qword_1EE1EDB28);
  }
  return result;
}

unint64_t sub_1909703E8()
{
  unint64_t result;

  result = qword_1ECF6A6C8;
  if (!qword_1ECF6A6C8)
  {
    result = MEMORY[0x19401429C](&unk_190A533E0, &_s36ContentMarginsDisabledEnvironmentKeyVN);
    atomic_store(result, (unint64_t *)&qword_1ECF6A6C8);
  }
  return result;
}

ValueMetadata *_s36ContentMarginsDisabledEnvironmentKeyVMa()
{
  return &_s36ContentMarginsDisabledEnvironmentKeyVN;
}

uint64_t destroy for WidgetContentMarginsModifier(uint64_t a1)
{
  sub_1908D1BB0(*(id *)a1, *(_BYTE *)(a1 + 8));
  sub_1908D1BB0(*(id *)(a1 + 16), *(_BYTE *)(a1 + 24));
  return sub_1908CE654(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for WidgetContentMarginsModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  char v5;
  void *v6;
  char v7;
  uint64_t v8;

  v2 = a2;
  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B68(*(id *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(void **)(v2 + 16);
  v7 = *(_BYTE *)(v2 + 24);
  sub_1908D1B68(v6, v7);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(v2 + 32);
  LOBYTE(v2) = *(_BYTE *)(v2 + 40);
  sub_1908D1B74(v8, v2);
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v2;
  return a1;
}

uint64_t assignWithCopy for WidgetContentMarginsModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  char v5;
  void *v6;
  char v7;
  void *v8;
  char v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v2 = a2;
  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B68(*(id *)a2, v5);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1908D1BB0(v6, v7);
  v8 = *(void **)(v2 + 16);
  v9 = *(_BYTE *)(v2 + 24);
  sub_1908D1B68(v8, v9);
  v10 = *(void **)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  sub_1908D1BB0(v10, v11);
  v12 = *(_QWORD *)(v2 + 32);
  LOBYTE(v2) = *(_BYTE *)(v2 + 40);
  sub_1908D1B74(v12, v2);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v12;
  *(_BYTE *)(a1 + 40) = v2;
  sub_1908CE654(v13, v14);
  return a1;
}

uint64_t assignWithTake for WidgetContentMarginsModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  char v7;
  char v8;
  void *v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1908D1BB0(v6, v7);
  v8 = *((_BYTE *)a2 + 24);
  v9 = *(void **)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v8;
  sub_1908D1BB0(v9, v10);
  v11 = *((_BYTE *)a2 + 40);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_BYTE *)(a1 + 40) = v11;
  sub_1908CE654(v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetContentMarginsModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetContentMarginsModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetContentMarginsModifier()
{
  return &type metadata for WidgetContentMarginsModifier;
}

uint64_t sub_1909706BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1909706CC()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_190903624((uint64_t)&unk_1E2CC9BF8);
  result = swift_arrayDestroy();
  qword_1ECF6AD18 = v0;
  return result;
}

uint64_t sub_190970714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char v27;
  void *v28;
  void (*v29)(void *, uint64_t);
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  int v35;
  uint64_t v36;
  BOOL v37;
  char v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  void *v44;
  char v45;
  id v46;
  id v47;
  char **v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  double v68;
  double v69;
  double v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t KeyPath;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  void *v88;
  char v89;
  id v90;
  double v91;
  double v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  _QWORD v107[3];
  ValueMetadata *v108;
  unint64_t v109;

  v103 = a1;
  v101 = a2;
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AB70);
  MEMORY[0x1E0C80A78](v102);
  v106 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6ABB0);
  MEMORY[0x1E0C80A78](v104);
  v100 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A6C0);
  MEMORY[0x1E0C80A78](v98);
  v99 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  v7 = MEMORY[0x1E0C80A78](v6);
  v105 = (uint64_t)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v94 = (uint64_t)&v93 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v95 = (uint64_t)&v93 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v97 = (uint64_t)&v93 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v93 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v93 - v19;
  result = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v93 - v22;
  if (!(_QWORD)xmmword_1ECF6D940)
  {
    __break(1u);
    goto LABEL_45;
  }
  v24 = qword_1ECF6D950;
  v25 = *(_QWORD *)xmmword_1ECF6D940;
  v107[0] = xmmword_1ECF6D940;
  v26 = *(void **)v2;
  v96 = v2;
  v27 = *(_BYTE *)(v2 + 8);
  swift_retain();
  sub_1908D1B68(v26, v27);
  v28 = (void *)sub_19096E88C(v26, v27);
  sub_1908D1BB0(v26, v27);
  v29 = *(void (**)(void *, uint64_t))(*(_QWORD *)(v24 + 8) + 8);
  v30 = (uint64_t)v23;
  v29(v28, v25);
  swift_release();

  sub_1908D1B68(v26, v27);
  v31 = (void *)sub_19096E88C(v26, v27);
  sub_1908D1BB0(v26, v27);
  result = xmmword_1ECF6D940;
  if (!(_QWORD)xmmword_1ECF6D940)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v108 = *(ValueMetadata **)xmmword_1ECF6D940;
  v32 = (uint64_t)v108;
  v109 = *(_QWORD *)(qword_1ECF6D950 + 8);
  v33 = v109;
  v107[0] = xmmword_1ECF6D940;
  swift_retain();
  v34 = sub_1909D75B8((uint64_t)v31, (uint64_t)v107, v32, v33);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
  if (qword_1ECF6C608 != -1)
    swift_once();
  v35 = dyld_program_sdk_at_least();
  sub_1908AAA48((uint64_t)v23, (uint64_t)v20, &qword_1ECF6C788);
  if (!v35)
  {
    sub_1908AA544((uint64_t)v20, &qword_1ECF6C788);
    v37 = 0;
    goto LABEL_12;
  }
  sub_1908B4BD4((uint64_t)v20, (uint64_t)v17, &qword_1ECF6C788);
  v36 = type metadata accessor for WidgetDescriptor(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v17, 1, v36) == 1)
  {
    sub_1908AA544((uint64_t)v17, &qword_1ECF6C788);
  }
  else
  {
    v38 = v17[*(int *)(v36 + 84)];
    sub_190906988((uint64_t)v17);
    if ((v38 & 1) != 0)
    {
      v37 = 0;
      goto LABEL_12;
    }
  }
  v37 = !v34;
LABEL_12:
  sub_1908D1B68(v26, v27);
  v39 = (void *)sub_19096E88C(v26, v27);
  sub_1908D1BB0(v26, v27);
  result = xmmword_1ECF6D940;
  if (!(_QWORD)xmmword_1ECF6D940)
  {
LABEL_46:
    __break(1u);
    return result;
  }
  v108 = *(ValueMetadata **)xmmword_1ECF6D940;
  v109 = *(_QWORD *)(qword_1ECF6D950 + 8);
  v107[0] = xmmword_1ECF6D940;
  swift_retain();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
  v40 = v96;
  v41 = *(_QWORD *)(v96 + 32);
  v42 = *(_BYTE *)(v96 + 40);
  sub_1908D1B74(v41, v42);
  v43 = sub_19096EA60(v41, v42);
  sub_1908CE654(v41, v42);
  v44 = *(void **)(v40 + 16);
  v45 = *(_BYTE *)(v40 + 24);
  sub_1908D1B68(v44, v45);
  v46 = sub_19096E4E8(v44, v45);
  sub_1908D1BB0(v44, v45);
  v47 = objc_msgSend(v46, sel_margins);

  v48 = &selRef_contentMargins;
  if ((v43 & 1) == 0)
    v48 = &selRef_backgroundRemovedContentMargins;
  objc_msgSend(v47, *v48);
  v50 = v49;
  v52 = v51;
  v54 = v53;

  v108 = &type metadata for FeatureFlags.Widgets;
  v109 = sub_1909068BC();
  LOBYTE(v107[0]) = 5;
  v55 = sub_190A462A0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
  if ((v55 & 1) != 0)
  {
    v56 = v97;
    sub_1908AAA48(v30, v97, &qword_1ECF6C788);
    v58 = (uint64_t)v99;
    v57 = (uint64_t)v100;
  }
  else
  {
    v58 = (uint64_t)v99;
    if (qword_1ECF6AD28 != -1)
      swift_once();
    v59 = qword_1ECF6AD18;
    v60 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v61 = objc_msgSend(v60, sel_mainBundle);
    v62 = objc_msgSend(v61, sel_bundleIdentifier);

    if (v62)
    {
      v63 = sub_190A47ADC();
      v65 = v64;

    }
    else
    {
      v65 = 0xE300000000000000;
      v63 = 7104878;
    }
    v66 = sub_1909C71EC(v63, v65, v59);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v56 = v97;
    sub_1908AAA48(v30, v97, &qword_1ECF6C788);
    v57 = (uint64_t)v100;
    if ((v66 & 1) == 0)
    {
      v84 = v95;
      sub_1908B4BD4(v56, v95, &qword_1ECF6C788);
      if (v34)
      {
        sub_1908AA544(v84, &qword_1ECF6C788);
      }
      else
      {
        v85 = v94;
        sub_1908B4BD4(v84, v94, &qword_1ECF6C788);
        v86 = type metadata accessor for WidgetDescriptor(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 48))(v85, 1, v86) == 1)
        {
          v67 = v85;
          goto LABEL_24;
        }
        v87 = *(_BYTE *)(v85 + *(int *)(v86 + 88));
        sub_190906988(v85);
        if ((v87 & 1) == 0)
          goto LABEL_25;
      }
      v88 = *(void **)(v40 + 16);
      v89 = *(_BYTE *)(v40 + 24);
      sub_1908D1B68(v88, v89);
      v90 = sub_19096E4E8(v88, v89);
      sub_1908D1BB0(v88, v89);
      objc_msgSend(v90, sel_scaleFactor);
      v92 = v91;

      v50 = v50 * v92;
      v52 = v52 * v92;
      v54 = v54 * v92;
      goto LABEL_25;
    }
  }
  v67 = v56;
LABEL_24:
  sub_1908AA544(v67, &qword_1ECF6C788);
LABEL_25:
  if (v37)
    v68 = v50;
  else
    v68 = 0.0;
  if (v37)
    v69 = v52;
  else
    v69 = 0.0;
  if (v37)
    v70 = v54;
  else
    v70 = 0.0;
  v71 = sub_190A47308();
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AC50);
  v73 = (uint64_t)v106;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v106, v103, v72);
  v74 = v73 + *(int *)(v102 + 36);
  *(_BYTE *)v74 = v71;
  *(double *)(v74 + 8) = v68;
  *(double *)(v74 + 16) = v69;
  *(double *)(v74 + 24) = v69;
  *(double *)(v74 + 32) = v70;
  *(_BYTE *)(v74 + 40) = 0;
  KeyPath = swift_getKeyPath();
  sub_1908AAA48(v73, v57, &qword_1ECF6AB70);
  v76 = v57 + *(int *)(v104 + 36);
  *(_QWORD *)v76 = KeyPath;
  *(double *)(v76 + 8) = v50;
  *(double *)(v76 + 16) = v52;
  *(double *)(v76 + 24) = v52;
  *(double *)(v76 + 32) = v54;
  sub_1908AA544(v73, &qword_1ECF6AB70);
  v77 = swift_getKeyPath();
  v78 = v105;
  sub_1908AAA48(v30, v105, &qword_1ECF6C788);
  v79 = type metadata accessor for WidgetDescriptor(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 48))(v78, 1, v79) == 1)
  {
    sub_1908AA544(v78, &qword_1ECF6C788);
    v80 = 0;
  }
  else
  {
    v80 = *(_BYTE *)(v78 + *(int *)(v79 + 84));
    sub_190906988(v78);
  }
  v81 = v101;
  v82 = v98;
  sub_1908AAA48(v57, v58, &qword_1ECF6ABB0);
  v83 = v58 + *(int *)(v82 + 36);
  *(_QWORD *)v83 = v77;
  *(_BYTE *)(v83 + 8) = v80;
  sub_1908AA544(v57, &qword_1ECF6ABB0);
  sub_1908AA544(v30, &qword_1ECF6C788);
  return sub_1908B4BD4(v58, v81, &qword_1ECF6A6C0);
}

double sub_190970FFC@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;

  sub_1909701D4();
  sub_190A46C3C();
  result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_190971048()
{
  sub_1909701D4();
  return sub_190A46C48();
}

unint64_t sub_1909710A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6A6B8;
  if (!qword_1ECF6A6B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6A6C0);
    v2[0] = sub_19097112C();
    v2[1] = sub_1908AF598((unint64_t *)&qword_1ECF6A8D8, &qword_1ECF6A8E0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6A6B8);
  }
  return result;
}

unint64_t sub_19097112C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6ABA8;
  if (!qword_1ECF6ABA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6ABB0);
    v2[0] = sub_1909711B0();
    v2[1] = sub_1908AF598(&qword_1ECF6AC60, &qword_1ECF6AC68, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6ABA8);
  }
  return result;
}

unint64_t sub_1909711B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6AB68;
  if (!qword_1ECF6AB68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6AB70);
    v2[0] = sub_1908AF598(&qword_1ECF6AC48, &qword_1ECF6AC50, MEMORY[0x1E0CDBF10]);
    v2[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6AB68);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for OptionalMargins(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for OptionalMargins(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 57) = v3;
  return result;
}

ValueMetadata *type metadata accessor for OptionalMargins()
{
  return &type metadata for OptionalMargins;
}

uint64_t sub_1909712A0@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  unsigned __int8 v4;
  int v5;
  BOOL v6;
  double v7;
  unsigned __int8 v8;
  int v9;
  BOOL v10;
  double v11;
  unsigned __int8 v12;
  int v13;
  BOOL v14;
  double v15;
  unsigned __int8 v16;
  uint64_t result;
  double v18;

  v4 = sub_190A47314();
  sub_190A47338();
  v5 = sub_190A47338();
  v6 = v5 != v4;
  if (v5 == v4)
    v7 = a2;
  else
    v7 = 0.0;
  v8 = sub_190A4732C();
  sub_190A47338();
  v9 = sub_190A47338();
  v10 = v9 != v8;
  if (v9 == v8)
    v11 = a2;
  else
    v11 = 0.0;
  v12 = sub_190A47320();
  sub_190A47338();
  v13 = sub_190A47338();
  v14 = v13 != v12;
  if (v13 == v12)
    v15 = a2;
  else
    v15 = 0.0;
  v16 = sub_190A47344();
  sub_190A47338();
  result = sub_190A47338();
  *(double *)a1 = v7;
  *(_BYTE *)(a1 + 8) = v6;
  *(double *)(a1 + 16) = v11;
  if (result == v16)
    v18 = a2;
  else
    v18 = 0.0;
  *(_BYTE *)(a1 + 24) = v10;
  *(double *)(a1 + 32) = v15;
  *(_BYTE *)(a1 + 40) = v14;
  *(double *)(a1 + 48) = v18;
  *(_BYTE *)(a1 + 56) = result != v16;
  return result;
}

uint64_t ActivityPreviewSource.makeContent<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;

  v5[19] = a4;
  v5[20] = v4;
  v5[17] = a1;
  v5[18] = a3;
  v7 = sub_190A48148();
  v5[21] = v7;
  v5[22] = *(_QWORD *)(v7 - 8);
  v5[23] = swift_task_alloc();
  v5[24] = *(_QWORD *)(a3 - 8);
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  sub_190A47D64();
  v5[27] = sub_190A47D58();
  v5[28] = sub_190A47D28();
  v5[29] = v8;
  return swift_task_switch();
}

uint64_t sub_19097146C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  int v3;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  _QWORD *v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v24)(void);

  v1 = *(_QWORD *)(v0 + 192);
  v2 = (_QWORD *)(*(_QWORD *)(v0 + 160) + 24);
  sub_1908BBDC8((uint64_t)v2, v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDB38);
  v3 = swift_dynamicCast();
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if (v3)
  {
    v5 = *(_QWORD *)(v0 + 208);
    v6 = *(_QWORD *)(v0 + 184);
    v7 = *(_QWORD *)(v0 + 192);
    v8 = *(_QWORD *)(v0 + 160);
    v9 = *(_QWORD *)(v0 + 144);
    v4(v6, 0, 1, v9);
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
    *(_QWORD *)(v0 + 240) = v10;
    v10(v5, v6, v9);
    v24 = (uint64_t (*)(void))(**(int **)(v8 + 64) + *(_QWORD *)(v8 + 64));
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v11;
    *v11 = v0;
    v11[1] = sub_190971694;
    v12 = v24;
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 176);
    v13 = *(_QWORD *)(v0 + 184);
    v16 = *(_QWORD *)(v0 + 160);
    v15 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 144);
    v4(v13, 1, 1, v17);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    *(_QWORD *)(v0 + 80) = swift_getMetatypeMetadata();
    *(_QWORD *)(v0 + 56) = v17;
    v18 = *(_QWORD *)(v16 + 48);
    v19 = __swift_project_boxed_opaque_existential_1(v2, v18);
    *(_QWORD *)(v0 + 112) = v18;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 88));
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(boxed_opaque_existential_1, v19, v18);
    sub_19095AD14();
    swift_allocError();
    v22 = v21;
    *(_QWORD *)v21 = 0xD000000000000017;
    *(_QWORD *)(v21 + 8) = 0x8000000190A62DD0;
    *(_QWORD *)(v21 + 16) = 0x7475626972747461;
    *(_QWORD *)(v21 + 24) = 0xEA00000000007365;
    sub_190901E94((_OWORD *)(v0 + 56), (_OWORD *)(v21 + 32));
    sub_19095AD58(v0 + 88, v22 + 64);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v12 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v12();
}

uint64_t sub_190971694(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1909716EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *AssociatedTypeWitness;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  swift_release();
  *(_QWORD *)(v0 + 120) = v1;
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDB40);
  AssociatedTypeWitness = (char *)swift_getAssociatedTypeWitness();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6AE48);
  v8 = sub_190971BE0();
  v9 = sub_190907290((void (*)(char *, char *))sub_190971BC4, v4, v5, AssociatedTypeWitness, v7, v8, MEMORY[0x1E0DEDB38], v0 + 128);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 240);
  v12 = *(_QWORD *)(v0 + 200);
  v11 = *(_QWORD *)(v0 + 208);
  v14 = *(_QWORD *)(v0 + 144);
  v13 = *(_QWORD *)(v0 + 152);
  v15 = *(_QWORD *)(v0 + 136);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v10(v12, v11, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v15, v12, v14);
  *(_QWORD *)(v15 + *(int *)(type metadata accessor for ActivityPreviewSource.Content(0, v14, v13, v16) + 36)) = v9;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ActivityPreviewSource.Content.attributes.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ActivityPreviewSource.Content.attributes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*ActivityPreviewSource.Content.attributes.modify())()
{
  return nullsub_1;
}

uint64_t ActivityPreviewSource.Content.states.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ActivityPreviewSource.Content.states.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 36);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

uint64_t (*ActivityPreviewSource.Content.states.modify())()
{
  return nullsub_1;
}

uint64_t sub_19097194C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  result = type metadata accessor for ActivityPreviewSource.Content(0, a3, a4, v9);
  *(_QWORD *)(a5 + *(int *)(result + 36)) = a2;
  return result;
}

uint64_t ActivityPreviewSource.makeWidget.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  return v1;
}

void ActivityPreviewSource.viewKind.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t sub_1909719E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  char v11;
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[32];
  __int128 v19;
  uint64_t MetatypeMetadata;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = sub_190A48148();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v18[-v9];
  sub_1908B3694(a1, (uint64_t)&v19);
  v11 = swift_dynamicCast();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if ((v11 & 1) != 0)
  {
    v13(v10, 0, 1, AssociatedTypeWitness);
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v12 + 32))(a3, v10, AssociatedTypeWitness);
  }
  else
  {
    v13(v10, 1, 1, AssociatedTypeWitness);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
    MetatypeMetadata = swift_getMetatypeMetadata();
    *(_QWORD *)&v19 = AssociatedTypeWitness;
    sub_1908B3694(a1, (uint64_t)v18);
    sub_19095AD14();
    v15 = swift_allocError();
    v17 = v16;
    *(_QWORD *)v16 = 0xD000000000000017;
    *(_QWORD *)(v16 + 8) = 0x8000000190A62DD0;
    strcpy((char *)(v16 + 16), "content state");
    *(_WORD *)(v16 + 30) = -4864;
    sub_190901E94(&v19, (_OWORD *)(v16 + 32));
    sub_19095AD58((uint64_t)v18, v17 + 64);
    result = swift_willThrow();
    *a2 = v15;
  }
  return result;
}

uint64_t sub_190971BC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1909719E0(a1, a2, a3);
}

unint64_t sub_190971BE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EDB48[0];
  if (!qword_1EE1EDB48[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EDB40);
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, qword_1EE1EDB48);
  }
  return result;
}

uint64_t ActivityPreviewSource.contentCategory.getter()
{
  return sub_190A46480();
}

uint64_t static PreviewSourceContentCategory.activityWidget.getter()
{
  return sub_190A46480();
}

uint64_t ActivityPreviewSource.contentDomain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CA9C48];
  v3 = sub_190A46474();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t ActivityPreviewSource.supportsOnDevicePreviews.getter()
{
  return 0;
}

uint64_t sub_190971CB0()
{
  return sub_190A46480();
}

uint64_t Widget.buildActivityHost()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v6 = type metadata accessor for ResolvedWidgetHost(0, a1, a2, a3);
  result = sub_1909CD430(v4, v7, v8, v9);
  a4[3] = v6;
  a4[4] = (uint64_t)&off_1E2CC0830;
  *a4 = result;
  return result;
}

uint64_t sub_190971D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v0 = type metadata accessor for WidgetDescriptor(0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1909C9060();
  v11 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = v4 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v7 = *(_QWORD *)(v1 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_190906944(v6, (uint64_t)v3);
      v8 = *(_QWORD *)&v3[*(int *)(v0 + 32)];
      swift_bridgeObjectRetain();
      sub_190906988((uint64_t)v3);
      sub_190961970(v8);
      v6 += v7;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n();
    return v11;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
}

uint64_t sub_190971E28()
{
  return sub_190971D20();
}

uint64_t destroy for ActivityPreviewSource(uint64_t a1)
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  return swift_release();
}

uint64_t initializeWithCopy for ActivityPreviewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = a2 + 24;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  v8(a1 + 24, v5, v7);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ActivityPreviewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ActivityPreviewSource(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityPreviewSource(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityPreviewSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityPreviewSource()
{
  return &type metadata for ActivityPreviewSource;
}

uint64_t sub_190972080()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1909720F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1909721AC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1909721EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_19097224C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1909722B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_190972314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190972378(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1909723F4 + 4 * byte_190A534E0[v10]))();
  }
}

void sub_190972478(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_19097256C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1909725E0);
}

void sub_190972574(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x19097257CLL);
  JUMPOUT(0x1909725E0);
}

void sub_1909725BC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1909725E0);
}

void sub_1909725C4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1909725E0);
}

uint64_t sub_1909725CC(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1909725E0);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1909725DCLL);
    JUMPOUT(0x1909725D8);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t type metadata accessor for ActivityPreviewSource.Content(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActivityPreviewSource.Content);
}

uint64_t dispatch thunk of ActivityWidgetHost.supportedActivityFamilies.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t ControlPicker.init<A, B, C, D>(kind:intent:displayName:preferredSize:stateProvider:title:subtitle:value:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65[9];

  v60 = a8;
  v61 = a7;
  v63 = a3;
  v64 = a5;
  v62 = a4;
  v58 = a1;
  v59 = a2;
  v57 = a9;
  v51 = a22;
  v52 = a23;
  v49 = a19;
  v50 = a20;
  v47 = a16;
  v48 = a18;
  v45 = a14;
  v46 = a15;
  v55 = a12;
  v56 = a13;
  v53 = a10;
  v54 = a11;
  v44 = a24;
  v26 = *(_QWORD *)(a21 - 8);
  MEMORY[0x1E0C80A78](a1);
  v28 = (char *)&v41 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for PickerStateProviderBox(0, a21, a25, v29);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v41 - v31;
  v33 = sub_190A45F70();
  MEMORY[0x1E0C80A78](v33);
  v34 = *a6;
  v35 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  v43 = sub_190A45CB8();
  v42 = v36;
  if (!v64)
  {
    sub_190A45CC4();
    v62 = sub_190A47AF4();
    v64 = v37;
  }
  v65[0] = v34;
  v38 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v28, v61, a21);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v32, v28, a21);
  v39 = MEMORY[0x19401429C](&unk_190A53738, v30);
  sub_1909728E8(v58, v59, v63, v43, v42, v62, v64, v65, v57, (uint64_t)v32, v60, v53, v54, v55, v56, v45, v46, v47, a17,
    v48,
    v49,
    v50,
    v30,
    v35,
    v51,
    v52,
    v44,
    v39);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v38, a21);
}

uint64_t type metadata accessor for PickerStateProviderBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PickerStateProviderBox);
}

uint64_t sub_1909728D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t sub_1909728E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD *v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  _QWORD *v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD v121[5];
  char v122;
  _OWORD v123[11];

  v96 = a6;
  v100 = a5;
  v97 = a4;
  v120 = a28;
  v117 = a27;
  v107 = a26;
  v106 = a25;
  v116 = a22;
  v115 = a21;
  v114 = a20;
  v102 = a18;
  v101 = a17;
  v119 = a16;
  v99 = a15;
  v109 = a14;
  v98 = a13;
  v118 = a12;
  v95 = a11;
  v111 = a10;
  v108 = a23;
  v110 = *(_QWORD *)(a23 - 8);
  MEMORY[0x1E0C80A78](a1);
  v105 = (char *)&v94 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_190A45F70();
  MEMORY[0x1E0C80A78](v35);
  v36 = *a8;
  *(_BYTE *)(a9 + 176) = 0;
  v103 = a1;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  v112 = a2;
  *(_QWORD *)(a9 + 16) = 0;
  *(_QWORD *)(a9 + 24) = 0;
  *(_QWORD *)(a9 + 32) = a3;
  swift_bridgeObjectRetain_n();
  if (a7)
  {
    v37 = a24;
    v38 = v96;
  }
  else
  {
    sub_190A45CC4();
    v38 = sub_190A47AF4();
    a7 = v39;
    v37 = a24;
  }
  *(_QWORD *)(a9 + 136) = v38;
  *(_QWORD *)(a9 + 144) = a7;
  *(_BYTE *)(a9 + 152) = v36;
  v40 = v100;
  *(_QWORD *)(a9 + 160) = v97;
  *(_QWORD *)(a9 + 168) = v40;
  v97 = sub_190A45CB8();
  v96 = v41;
  v42 = v108;
  (*(void (**)(char *, uint64_t))(v110 + 16))(v105, v111);
  v43 = (_QWORD *)swift_allocObject();
  v44 = v114;
  v43[2] = a19;
  v43[3] = v44;
  v45 = v115;
  v43[4] = v115;
  v46 = v45;
  v100 = (_QWORD *)a9;
  v47 = v116;
  v43[5] = v116;
  v43[6] = v42;
  v48 = v42;
  v113 = a19;
  v49 = v106;
  v43[7] = v37;
  v43[8] = v49;
  v50 = v49;
  v51 = v107;
  v43[9] = v107;
  v52 = v51;
  v53 = v117;
  v43[10] = v117;
  v54 = v53;
  v43[11] = v120;
  v55 = (_QWORD *)swift_allocObject();
  v55[2] = a19;
  v56 = v114;
  v55[3] = v114;
  v55[4] = v46;
  v55[5] = v47;
  v55[6] = v48;
  v55[7] = v37;
  v55[8] = v50;
  v55[9] = v52;
  v55[10] = v54;
  v57 = v120;
  v58 = v95;
  v55[11] = v120;
  v55[12] = v58;
  v55[13] = v118;
  v59 = (_QWORD *)swift_allocObject();
  v60 = v37;
  v104 = v37;
  v61 = (uint64_t)v59;
  v59[2] = v113;
  v59[3] = v56;
  v62 = v56;
  v63 = v116;
  v59[4] = v115;
  v59[5] = v63;
  v59[6] = v48;
  v59[7] = v60;
  v59[8] = v50;
  v59[9] = v52;
  v59[10] = v54;
  v59[11] = v57;
  v64 = v109;
  v59[12] = v98;
  v59[13] = v64;
  v65 = (_QWORD *)swift_allocObject();
  v66 = v113;
  v65[2] = v113;
  v65[3] = v62;
  v67 = v115;
  v65[4] = v115;
  v65[5] = v63;
  v68 = v104;
  v65[6] = v48;
  v65[7] = v68;
  v69 = v106;
  v70 = v107;
  v65[8] = v106;
  v65[9] = v70;
  v71 = v120;
  v65[10] = v117;
  v65[11] = v71;
  v72 = v119;
  v65[12] = v99;
  v65[13] = v72;
  v73 = (_QWORD *)swift_allocObject();
  v74 = v114;
  v73[2] = v66;
  v73[3] = v74;
  v75 = v116;
  v73[4] = v67;
  v73[5] = v75;
  v76 = v108;
  v73[6] = v108;
  v73[7] = v68;
  v73[8] = v69;
  v73[9] = v70;
  v77 = v120;
  v73[10] = v117;
  v73[11] = v77;
  v78 = v101;
  v79 = v102;
  v73[12] = v101;
  v73[13] = v79;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1908B4C4C(v78);
  v93 = (uint64_t)v65;
  v92 = (uint64_t)v55;
  v80 = v103;
  v81 = v112;
  sub_190973934(v103, v112, v97, v96, v105, (uint64_t)sub_1909783F8, (unint64_t)v43, (uint64_t)sub_19097842C, (uint64_t)v123, v92, sub_190978438, v61, (uint64_t)sub_1909784AC, v93, (uint64_t)sub_190978510, (uint64_t)v73, v76, v77);
  v83 = type metadata accessor for ControlPicker(0, v113, v104, v82);
  v121[3] = &type metadata for ControlPickerTemplateProvider;
  v121[4] = &off_1E2CC8980;
  v84 = (_OWORD *)swift_allocObject();
  v121[0] = v84;
  sub_1908B467C(v78);
  swift_release();
  swift_release();
  swift_release();
  v85 = v123[9];
  v84[9] = v123[8];
  v84[10] = v85;
  v84[11] = v123[10];
  v86 = v123[5];
  v84[5] = v123[4];
  v84[6] = v86;
  v87 = v123[7];
  v84[7] = v123[6];
  v84[8] = v87;
  v88 = v123[1];
  v84[1] = v123[0];
  v84[2] = v88;
  v89 = v123[3];
  v84[3] = v123[2];
  v84[4] = v89;
  (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v111, v76);
  v122 = 0;
  v90 = v100;
  v100[5] = v80;
  v90[6] = v81;
  v90[7] = 0;
  v90[8] = 0;
  v90[9] = v83;
  v90[10] = &off_1E2CC3928;
  return sub_190977CC4((uint64_t)v121, (uint64_t)(v90 + 11));
}

uint64_t ControlPicker.init<A, B, C>(kind:intent:displayName:preferredSize:stateProvider:title:value:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  char v58[9];

  v53 = a8;
  v54 = a7;
  v56 = a3;
  v57 = a5;
  v55 = a4;
  v51 = a1;
  v52 = a2;
  v50 = a9;
  v44 = a17;
  v45 = a19;
  v42 = a14;
  v43 = a16;
  v48 = a12;
  v49 = a13;
  v46 = a10;
  v47 = a11;
  v41 = a20;
  v22 = *(_QWORD *)(a18 - 8);
  MEMORY[0x1E0C80A78](a1);
  v24 = (char *)&v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for PickerStateProviderBox(0, a18, a21, v25);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v38 - v27;
  v29 = sub_190A45F70();
  MEMORY[0x1E0C80A78](v29);
  v30 = *a6;
  v31 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  v32 = sub_190A45CB8();
  v39 = v33;
  v40 = v32;
  if (!v57)
  {
    sub_190A45CC4();
    v55 = (_QWORD *)sub_190A47AF4();
    v57 = v34;
  }
  v58[0] = v30;
  v35 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v54, a18);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v28, v24, a18);
  v36 = MEMORY[0x19401429C](&unk_190A53738, v26);
  sub_1909731C4(v51, v52, v56, v40, v39, v55, v57, v58, v50, (uint64_t)v28, v53, v46, v47, v48, v49, v42, a15, v43, v44,
    v26,
    v31,
    v45,
    v41,
    v36);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v35, a18);
}

uint64_t sub_1909731C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD *v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _QWORD *v73;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD v100[5];
  char v101;
  _OWORD v102[11];

  v78 = a6;
  v81 = a5;
  v80 = a4;
  v87 = a24;
  v86 = a23;
  v85 = a22;
  v84 = a19;
  v99 = a18;
  v89 = a16;
  v88 = a15;
  v95 = a14;
  v83 = a13;
  v94 = a12;
  v82 = a11;
  v97 = a10;
  v93 = a20;
  v96 = *(_QWORD *)(a20 - 8);
  MEMORY[0x1E0C80A78](a1);
  v31 = (char *)&v77 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_190A45F70();
  MEMORY[0x1E0C80A78](v32);
  v33 = *a8;
  *(_BYTE *)(a9 + 176) = 0;
  v90 = a1;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  v98 = a2;
  *(_QWORD *)(a9 + 16) = 0;
  *(_QWORD *)(a9 + 24) = 0;
  *(_QWORD *)(a9 + 32) = a3;
  swift_bridgeObjectRetain_n();
  if (a7)
  {
    v34 = (uint64_t)v78;
  }
  else
  {
    sub_190A45CC4();
    v34 = sub_190A47AF4();
    a7 = v35;
  }
  *(_QWORD *)(a9 + 136) = v34;
  *(_QWORD *)(a9 + 144) = a7;
  *(_BYTE *)(a9 + 152) = v33;
  v36 = v81;
  *(_QWORD *)(a9 + 160) = v80;
  *(_QWORD *)(a9 + 168) = v36;
  v78 = (_QWORD *)a9;
  v91 = a21;
  v81 = sub_190A45CB8();
  v80 = v37;
  v38 = *(void (**)(char *, uint64_t))(v96 + 16);
  v79 = v31;
  v39 = v93;
  v38(v31, v97);
  v40 = (_QWORD *)swift_allocObject();
  v92 = a17;
  v41 = v99;
  v40[2] = a17;
  v40[3] = v41;
  v42 = v41;
  v43 = v84;
  v40[4] = v84;
  v40[5] = v39;
  v44 = v43;
  v40[6] = a21;
  v45 = v85;
  v46 = v86;
  v40[7] = v85;
  v40[8] = v46;
  v47 = v87;
  v40[9] = v87;
  v48 = v47;
  v49 = (_QWORD *)swift_allocObject();
  v49[2] = a17;
  v49[3] = v42;
  v49[4] = v44;
  v49[5] = v39;
  v50 = v44;
  v51 = v39;
  v49[6] = a21;
  v49[7] = v45;
  v49[8] = v46;
  v49[9] = v48;
  v52 = v48;
  v53 = v94;
  v49[10] = v82;
  v49[11] = v53;
  v54 = (_QWORD *)swift_allocObject();
  v55 = v92;
  v56 = v99;
  v54[2] = v92;
  v54[3] = v56;
  v54[4] = v44;
  v54[5] = v51;
  v54[6] = a21;
  v54[7] = v45;
  v54[8] = v46;
  v54[9] = v52;
  v57 = v95;
  v54[10] = v83;
  v54[11] = v57;
  v58 = (_QWORD *)swift_allocObject();
  v59 = v99;
  v58[2] = v55;
  v58[3] = v59;
  v60 = v93;
  v58[4] = v50;
  v58[5] = v60;
  v58[6] = v91;
  v58[7] = v45;
  v58[8] = v46;
  v58[9] = v52;
  v61 = v88;
  v62 = v89;
  v58[10] = v88;
  v58[11] = v62;
  swift_retain();
  swift_retain();
  sub_1908B4C4C(v61);
  v76 = (uint64_t)v58;
  v75 = (uint64_t)v49;
  v63 = v90;
  v64 = v98;
  sub_190973934(v90, v98, v81, v80, v79, (uint64_t)sub_190977B74, (unint64_t)v40, (uint64_t)sub_190977BAC, (uint64_t)v102, v75, 0, 0, (uint64_t)sub_190977BE8, (uint64_t)v54, (uint64_t)sub_190977C4C, v76, v60, v52);
  v66 = type metadata accessor for ControlPicker(0, v92, v91, v65);
  v100[3] = &type metadata for ControlPickerTemplateProvider;
  v100[4] = &off_1E2CC8980;
  v67 = (_OWORD *)swift_allocObject();
  v100[0] = v67;
  sub_1908B467C(v61);
  swift_release();
  swift_release();
  v68 = v102[9];
  v67[9] = v102[8];
  v67[10] = v68;
  v67[11] = v102[10];
  v69 = v102[5];
  v67[5] = v102[4];
  v67[6] = v69;
  v70 = v102[7];
  v67[7] = v102[6];
  v67[8] = v70;
  v71 = v102[1];
  v67[1] = v102[0];
  v67[2] = v71;
  v72 = v102[3];
  v67[3] = v102[2];
  v67[4] = v72;
  (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v97, v60);
  v101 = 0;
  v73 = v78;
  v78[5] = v63;
  v73[6] = v64;
  v73[7] = 0;
  v73[8] = 0;
  v73[9] = v66;
  v73[10] = &off_1E2CC3928;
  return sub_190977CC4((uint64_t)v100, (uint64_t)(v73 + 11));
}

uint64_t sub_19097372C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190978388();
  sub_190A45D48();
  v5 = sub_1909EEA28();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5;
}

uint64_t sub_1909737D8(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = MEMORY[0x1E0C80A78](a1);
  v2(v1);
  return sub_190A47884();
}

uint64_t sub_19097384C(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = MEMORY[0x1E0C80A78](a1);
  v2(v1);
  return sub_190A47884();
}

uint64_t sub_1909738C0(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = MEMORY[0x1E0C80A78](a1);
  v2(v1);
  return sub_190A47884();
}

__n128 sub_190973934@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(unint64_t, char *, uint64_t);
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void (*v36)(unint64_t, char *, uint64_t);
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __n128 result;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  unint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __n128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  _QWORD v98[4];
  char v99;
  uint64_t v100;
  unint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  char v112;
  void *v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;

  v69 = a8;
  v80 = a6;
  v81 = a7;
  v85 = a2;
  v86 = a4;
  v78 = a1;
  v79 = a3;
  v74 = a9;
  v73 = a16;
  v72 = a15;
  v70 = a14;
  v68 = a13;
  v67 = a11;
  v66 = a10;
  v19 = *(_QWORD *)(a17 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  MEMORY[0x1E0C80A78](a1);
  v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v22(v21, v23, a17);
  v24 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = a17;
  *(_QWORD *)(v25 + 24) = a18;
  v84 = v25;
  v26 = *(void (**)(unint64_t, char *, uint64_t))(v19 + 32);
  v26(v25 + v24, v21, a17);
  v22(v21, (uint64_t)a5, a17);
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a17;
  *(_QWORD *)(v27 + 24) = a18;
  v83 = v27;
  v26(v27 + v24, v21, a17);
  v77 = a5;
  v22(v21, (uint64_t)a5, a17);
  v71 = v24 + v20;
  v28 = (v24 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v75 = v28 + 16;
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = a17;
  *(_QWORD *)(v29 + 24) = a18;
  v76 = v24;
  v26(v29 + v24, v21, a17);
  v82 = v29;
  v30 = (uint64_t *)(v29 + v28);
  v31 = v66;
  *v30 = v69;
  v30[1] = v31;
  v65 = v28;
  if (v67)
  {
    v32 = v67;
    v66 = a12;
    v22(v21, (uint64_t)v77, a17);
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = a17;
    *(_QWORD *)(v33 + 24) = a18;
    v26(v33 + v76, v21, a17);
    v69 = v33;
    v34 = (_QWORD *)(v33 + v28);
    v35 = v66;
    *v34 = v32;
    v34[1] = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1908B467C(0);
    v67 = &unk_1EE1EDD40;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v67 = 0;
    v69 = 0;
  }
  v36 = v26;
  v63 = a18;
  v37 = v77;
  v22(v21, (uint64_t)v77, a17);
  v64 = v22;
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = a17;
  *(_QWORD *)(v38 + 24) = a18;
  v39 = v76;
  v40 = v38;
  v66 = v38;
  v36(v38 + v76, v21, a17);
  v41 = v65;
  v42 = (_QWORD *)(v40 + v65);
  v43 = v70;
  *v42 = v68;
  v42[1] = v43;
  v64(v21, (uint64_t)v37, a17);
  v44 = swift_allocObject();
  v45 = v63;
  *(_QWORD *)(v44 + 16) = a17;
  *(_QWORD *)(v44 + 24) = v45;
  v36(v44 + v39, v21, a17);
  v46 = (_QWORD *)(v44 + v41);
  v47 = v73;
  *v46 = v72;
  v46[1] = v47;
  v36((unint64_t)v21, v37, a17);
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = a17;
  *(_QWORD *)(v48 + 24) = v45;
  v36(v48 + v39, v21, a17);
  *(_QWORD *)&v87 = v78;
  *((_QWORD *)&v87 + 1) = v85;
  *(_QWORD *)&v88 = v79;
  *((_QWORD *)&v88 + 1) = v86;
  LOBYTE(v89) = 0;
  v49 = v81;
  *((_QWORD *)&v89 + 1) = v80;
  v90.n128_u64[0] = v81;
  v90.n128_u64[1] = (unint64_t)&unk_1EE1EDD00;
  *(_QWORD *)&v91 = v82;
  v51 = v66;
  v50 = (uint64_t)v67;
  v52 = v69;
  *((_QWORD *)&v91 + 1) = v67;
  *(_QWORD *)&v92 = v69;
  *((_QWORD *)&v92 + 1) = &unk_1EE1EDD10;
  *(_QWORD *)&v93 = v66;
  *((_QWORD *)&v93 + 1) = &unk_1EE1EDD20;
  *(_QWORD *)&v94 = v44;
  *((_QWORD *)&v94 + 1) = &unk_1EE1EDD30;
  *(_QWORD *)&v95 = v48;
  BYTE8(v95) = 0;
  *(_QWORD *)&v96 = &unk_1EE1EDCE0;
  *((_QWORD *)&v96 + 1) = v84;
  *(_QWORD *)&v97 = &unk_1EE1EDCF0;
  *((_QWORD *)&v97 + 1) = v83;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1908B4C4C(v50);
  sub_1909779D8((uint64_t)&v87);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1908B467C(v50);
  v53 = v85;
  swift_bridgeObjectRelease();
  v54 = v86;
  swift_bridgeObjectRelease();
  v55 = v82;
  swift_release();
  v98[0] = v78;
  v98[1] = v53;
  v98[2] = v79;
  v98[3] = v54;
  v99 = 0;
  v100 = v80;
  v101 = v49;
  v102 = &unk_1EE1EDD00;
  v103 = v55;
  v104 = v50;
  v105 = v52;
  v106 = &unk_1EE1EDD10;
  v107 = v51;
  v108 = &unk_1EE1EDD20;
  v109 = v44;
  v110 = &unk_1EE1EDD30;
  v111 = v48;
  v112 = 0;
  v113 = &unk_1EE1EDCE0;
  v114 = v84;
  v115 = &unk_1EE1EDCF0;
  v116 = v83;
  sub_1909780DC((uint64_t)v98);
  v56 = v96;
  v57 = v74;
  *(_OWORD *)(v74 + 128) = v95;
  *(_OWORD *)(v57 + 144) = v56;
  *(_OWORD *)(v57 + 160) = v97;
  v58 = v92;
  *(_OWORD *)(v57 + 64) = v91;
  *(_OWORD *)(v57 + 80) = v58;
  v59 = v94;
  *(_OWORD *)(v57 + 96) = v93;
  *(_OWORD *)(v57 + 112) = v59;
  v60 = v88;
  *(_OWORD *)v57 = v87;
  *(_OWORD *)(v57 + 16) = v60;
  result = v90;
  *(_OWORD *)(v57 + 32) = v89;
  *(__n128 *)(v57 + 48) = result;
  return result;
}

uint64_t sub_190973ED0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190978388();
  sub_190A45D48();
  v5 = sub_1909EEA28();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5;
}

uint64_t sub_190973F7C(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = MEMORY[0x1E0C80A78](a1);
  v2(v1);
  return sub_190A47884();
}

uint64_t sub_190973FF0(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = MEMORY[0x1E0C80A78](a1);
  v2(v1);
  return sub_190A47884();
}

uint64_t sub_190974064@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v5;

  v2 = *(_QWORD *)(v1 + 136);
  v3 = *(_QWORD *)(v1 + 144);
  v5 = *(_BYTE *)(v1 + 152);
  return sub_1909F2EA8(v1 + 40, v2, v3, &v5, 0, 0, *(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 168), a1, *(_BYTE *)(v1 + 176));
}

uint64_t ControlPicker.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D300);
  v0 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WidgetDescriptor(0) - 8) + 80);
  v1 = (v0 + 32) & ~v0;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_190A4A350;
  sub_190974064(v2 + v1);
  sub_19090D084();
  sub_190A46F00();
  return swift_bridgeObjectRelease();
}

uint64_t ControlPicker.init<A, B, C>(kind:intent:stateProvider:content:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v31 = a7;
  v32 = a8;
  v24 = a5;
  v25 = a6;
  v26 = a4;
  v27 = a9;
  v29 = a2;
  v30 = a3;
  v28 = a1;
  v16 = *(_QWORD *)(a13 - 8);
  MEMORY[0x1E0C80A78](a1);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v19, a13);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a10;
  v20[3] = a11;
  v20[4] = a12;
  v20[5] = a13;
  v20[6] = a14;
  v20[7] = a15;
  v21 = v24;
  v20[8] = a16;
  v20[9] = v21;
  v20[10] = v25;
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = a10;
  v22[3] = a11;
  v22[4] = a12;
  v22[5] = a13;
  v22[6] = a14;
  v22[7] = a15;
  v22[8] = a16;
  v33 = 0;
  ControlPicker.init<A, B, C, D>(kind:intent:displayName:preferredSize:stateProvider:title:subtitle:value:affordances:)(v28, v29, v30, 0, 0, &v33, (uint64_t)v18, (uint64_t)sub_1909743E4, v27, (uint64_t)v20, (uint64_t)nullsub_1, (uint64_t)v22, v31, v32, 0, 0, a10, a11, MEMORY[0x1E0CE0428],
    a12,
    a13,
    a14,
    MEMORY[0x1E0CE0400],
    a15,
    a16);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v26, a13);
}

uint64_t sub_1909742E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(uint64_t);
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v15 - v10;
  v12(v9);
  sub_1909DA920((uint64_t)v8, a2, (uint64_t)v11);
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, a2);
  sub_1909D989C((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, a2);
}

uint64_t sub_1909743C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909743E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1909742E8(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_190974418()
{
  return swift_deallocObject();
}

uint64_t ControlPicker.disabled(_:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  _QWORD v16[5];
  char v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;
  __int128 v29;
  __int128 v30;
  _BYTE v31[40];
  _BYTE v32[40];

  v4 = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, v4, a2);
  sub_1908CD8F8(v4 + 88, (uint64_t)&v18);
  if (v21 == 1)
    return sub_19094F59C((uint64_t)&v18);
  sub_1908B4BBC(&v18, (uint64_t)v32);
  sub_1908BBDC8((uint64_t)v32, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA430);
  if ((swift_dynamicCast() & 1) == 0)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  v15 = v18;
  v8 = v19;
  v9 = v20;
  v10 = v23;
  v11 = v24;
  v12 = v28;
  v16[3] = &type metadata for ControlPickerTemplateProvider;
  v16[4] = &off_1E2CC8980;
  v13 = swift_allocObject();
  v16[0] = v13;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = v8;
  *(_QWORD *)(v13 + 40) = v9;
  *(_BYTE *)(v13 + 48) = a1 & 1;
  *(_OWORD *)(v13 + 56) = v21;
  *(_OWORD *)(v13 + 72) = v22;
  *(_QWORD *)(v13 + 88) = v10;
  *(_QWORD *)(v13 + 96) = v11;
  *(_OWORD *)(v13 + 104) = v25;
  *(_OWORD *)(v13 + 120) = v26;
  *(_OWORD *)(v13 + 136) = v27;
  *(_BYTE *)(v13 + 152) = v12;
  v14 = v30;
  *(_OWORD *)(v13 + 160) = v29;
  *(_OWORD *)(v13 + 176) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  v17 = 0;
  return sub_190974614((uint64_t)v16, a3 + 88);
}

uint64_t sub_1909745A0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 88))
    swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190974614(uint64_t a1, uint64_t a2)
{
  assignWithTake for ControlViewSource.ProviderType(a2, a1);
  return a2;
}

uint64_t sub_190974650()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190974684()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_19097468C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(a1 + 128) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(a1 + 88);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1909746F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v6;
  v7 = *(_BYTE *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v7 & 1) != 0)
  {
    v8 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v8;
    swift_retain();
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 112) = v9;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 88, a2 + 88);
  }
  *(_BYTE *)(a1 + 128) = v7;
  v10 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v10;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v11 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v11;
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1909747F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  if (a1 != a2)
  {
    sub_19094F59C(a1 + 88);
    if ((*(_BYTE *)(a2 + 128) & 1) != 0)
    {
      v4 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = v4;
      *(_BYTE *)(a1 + 128) = 1;
      swift_retain();
    }
    else
    {
      v5 = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 112) = v5;
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 88, a2 + 88);
      *(_BYTE *)(a1 + 128) = 0;
    }
  }
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  return a1;
}

__n128 __swift_memcpy177_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[10];
  *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t sub_190974994(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  if (a1 != a2)
  {
    sub_19094F59C(a1 + 88);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  }
  v7 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v8 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  return a1;
}

uint64_t sub_190974A60(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 177))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_190974AA8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 176) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 177) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 177) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for ControlPicker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ControlPicker);
}

uint64_t dispatch thunk of PickerStateProvider.allStates(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of PickerStateProvider.state(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 48) + *(_QWORD *)(a4 + 48));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1908C5090;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_190974BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 40) + *(_QWORD *)(a3 + 40));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_190930784;
  return v9(a1, a2, a3);
}

uint64_t sub_190974C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 48) + *(_QWORD *)(a4 + 48));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1908CEB54;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_190974CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 56) + *(_QWORD *)(a4 + 56));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1908CEB54;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_190974D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 64) + *(_QWORD *)(a4 + 64));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1908CEB54;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_190974DC0()
{
  sub_19090D084();
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for ControlPickerTemplateProvider(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(_QWORD *)(a1 + 72))
    swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ControlPickerTemplateProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = v6;
  v8 = (_OWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v7)
  {
    v9 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v7;
    *(_QWORD *)(a1 + 80) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *v8;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 128);
  v11 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v11;
  *(_QWORD *)(a1 + 128) = v10;
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v12 = *(_QWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 168) = v12;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ControlPickerTemplateProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 72);
  if (!*(_QWORD *)(a1 + 72))
  {
    if (v6)
    {
      v8 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v6;
      *(_QWORD *)(a1 + 80) = v8;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = v7;
  swift_retain();
  swift_release();
LABEL_8:
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_retain();
  swift_release();
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  swift_retain();
  swift_release();
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v12 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v12;
  swift_retain();
  swift_release();
  v13 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v13;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy176_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t assignWithTake for ControlPickerTemplateProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  v6 = *(_QWORD *)(a2 + 72);
  if (!*(_QWORD *)(a1 + 72))
  {
    if (v6)
    {
      v8 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v6;
      *(_QWORD *)(a1 + 80) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = v7;
  swift_release();
LABEL_8:
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_release();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_release();
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlPickerTemplateProvider(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 176))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlPickerTemplateProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 176) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 176) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlPickerTemplateProvider()
{
  return &type metadata for ControlPickerTemplateProvider;
}

uint64_t sub_190975334(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1909753E4 + 4 * byte_190A535C0[(v7 - 1)]))();
}

void sub_190975434(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1909755E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_190975600()
{
  uint64_t v0;
  ValueMetadata *AssociatedTypeWitness;
  uint64_t v2;
  _QWORD *v3;
  uint64_t AssociatedConformanceWitness;

  AssociatedTypeWitness = (ValueMetadata *)swift_getAssociatedTypeWitness();
  if (AssociatedTypeWitness == &type metadata for EmptyConfiguration)
  {
    swift_dynamicCast();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = (uint64_t)AssociatedTypeWitness;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v3;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    *v3 = v0;
    v3[1] = sub_1909756E8;
    return sub_190966918(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v2, AssociatedConformanceWitness);
  }
}

uint64_t sub_1909756E8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_190975730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v4 = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(a3 + 24) + 40))(a1, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = sub_190A47D04();
  MEMORY[0x19401429C](MEMORY[0x1E0DEAF48], v6);
  sub_190A47E00();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDCC0);
  if ((sub_190A47ED8() & 1) != 0)
  {
    sub_190A47D1C();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v8 = MEMORY[0x194012F04](v4, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    sub_190966BB4();
    swift_allocError();
    *(_QWORD *)v9 = a2;
    *(_QWORD *)(v9 + 8) = v8;
    *(_BYTE *)(v9 + 16) = 1;
    return swift_willThrow();
  }
}

uint64_t sub_19097588C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(a2 + 24) + 40))(a1, *(_QWORD *)(a2 + 16));
}

uint64_t sub_190975898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v6 + 48) + *(_QWORD *)(v6 + 48));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_1908C5090;
  return v10(a1, a2, v7, v6);
}

uint64_t sub_19097591C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4[7] = AssociatedConformanceWitness;
  v4[8] = *(_QWORD *)(AssociatedConformanceWitness + 8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v6 = sub_190A48148();
  v4[9] = v6;
  v4[10] = *(_QWORD *)(v6 - 8);
  v4[11] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[12] = AssociatedTypeWitness;
  v4[13] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_190975AA4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  _QWORD *v5;

  sub_190975730(v0[2], v0[3], v0[4]);
  v1 = v0[14];
  v2 = v0[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[13] + 16))(v1, v0[15], v0[12]);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  v4 = swift_checkMetadataState();
  v3(v1, v4, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[16] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_190975BA8;
  return sub_190A45D0C();
}

uint64_t sub_190975BA8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    (*(void (**)(_QWORD, _QWORD))(v2[10] + 8))(v2[11], v2[9]);
  return swift_task_switch();
}

uint64_t sub_190975C1C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190975C80()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190975CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_19097588C(a1, a2);
  return sub_19097797C(*(uint64_t (**)(uint64_t))(v2 + 8), v2, v3);
}

uint64_t sub_190975D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1908CEB54;
  v10 = a3 + 16;
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v10 + 8);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v9 + 48) + *(_QWORD *)(v9 + 48));
  v11 = (_QWORD *)swift_task_alloc();
  v7[2] = v11;
  *v11 = v7;
  v11[1] = sub_1908C5090;
  return v13(a1, a2, v8, v9);
}

uint64_t sub_190975DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1908CEB54;
  return sub_19097591C(a1, a2, a3);
}

uint64_t sub_190975E24(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1908CEB54;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_190975E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  _QWORD *v11;

  v4[6] = a3;
  v4[7] = a4;
  v4[5] = a2;
  swift_getAssociatedTypeWitness();
  v4[8] = swift_getAssociatedConformanceWitness();
  v4[9] = swift_getAssociatedTypeWitness();
  v4[10] = swift_task_alloc();
  v8 = swift_checkMetadataState();
  v4[11] = v8;
  v4[12] = *(_QWORD *)(v8 - 8);
  v4[13] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[14] = AssociatedTypeWitness;
  v4[15] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = swift_task_alloc();
  v4[16] = v10;
  v11 = (_QWORD *)swift_task_alloc();
  v4[17] = v11;
  *v11 = v4;
  v11[1] = sub_190975FF4;
  v11[4] = a3;
  v11[5] = a4;
  v11[2] = v10;
  v11[3] = a1;
  return swift_task_switch();
}

uint64_t sub_190975FF4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD);

  v2 = (_QWORD *)*v1;
  v2[18] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v2[7] + 48) + *(_QWORD *)(v2[7] + 48));
  v4 = (_QWORD *)swift_task_alloc();
  v2[19] = v4;
  *v4 = v2;
  v4[1] = sub_1909760AC;
  return v5(v2[13], v2[16], v2[6], v2[7]);
}

uint64_t sub_1909760AC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD);

  v2 = (_QWORD *)*v1;
  v2[20] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(v2[7] + 40) + *(_QWORD *)(v2[7] + 40));
  v4 = (_QWORD *)swift_task_alloc();
  v2[21] = v4;
  *v4 = v2;
  v4[1] = sub_190976160;
  return v5(v2[16], v2[6], v2[7]);
}

uint64_t sub_190976160(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 176) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 184) = a1;
  return swift_task_switch();
}

uint64_t sub_1909761D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v15;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 184);
  v1 = *(_QWORD *)(v0 + 104);
  v2 = swift_task_alloc();
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = sub_190A47D04();
  MEMORY[0x19401429C](MEMORY[0x1E0DEAF50], v3);
  sub_190A47E78();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 96);
  if (*(_BYTE *)(v0 + 24) == 1)
  {
    sub_190A47C08();
    v10 = sub_190A47B00();
    v12 = v11;
    sub_190978344();
    swift_allocError();
    *v13 = v10;
    v13[1] = v12;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v7);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 16);
    (*(void (**)(_QWORD, _QWORD))(v5 + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v15);
  }
}

uint64_t sub_1909763B8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19097640C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190976470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909764E8()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  char v7;
  void (*v8)(char *, uint64_t);
  uint64_t v10;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10 - v5;
  swift_checkMetadataState();
  sub_190A47C08();
  sub_190A47C08();
  swift_getAssociatedConformanceWitness();
  v7 = sub_190A47AAC();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, AssociatedTypeWitness);
  v8(v6, AssociatedTypeWitness);
  return v7 & 1;
}

uint64_t sub_190976678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  _QWORD *v11;

  v5[4] = a4;
  v5[5] = a5;
  v5[2] = a2;
  v5[3] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[6] = AssociatedTypeWitness;
  v5[7] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = swift_task_alloc();
  v5[8] = v10;
  v11 = (_QWORD *)swift_task_alloc();
  v5[9] = v11;
  *v11 = v5;
  v11[1] = sub_190976738;
  v11[4] = a4;
  v11[5] = a5;
  v11[2] = v10;
  v11[3] = a1;
  return swift_task_switch();
}

uint64_t sub_190976738()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD);

  v2 = (_QWORD *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v2[5] + 56) + *(_QWORD *)(v2[5] + 56));
  v4 = (_QWORD *)swift_task_alloc();
  v2[11] = v4;
  *v4 = v2;
  v4[1] = sub_1909767EC;
  return v5(v2[8], v2[2], v2[4], v2[5]);
}

uint64_t sub_1909767EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_190976850()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190976898()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909768CC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190976910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  _QWORD *v12;

  v6[2] = a3;
  v6[3] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[4] = AssociatedTypeWitness;
  v6[5] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = swift_task_alloc();
  v6[6] = v11;
  v6[7] = sub_190A47D64();
  v6[8] = sub_190A47D58();
  v12 = (_QWORD *)swift_task_alloc();
  v6[9] = v12;
  *v12 = v6;
  v12[1] = sub_1909769EC;
  v12[4] = a5;
  v12[5] = a6;
  v12[2] = v11;
  v12[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1909769EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_190976A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(uint64_t (**)(uint64_t))(v0 + 16);
  swift_release();
  v5 = v4(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_190976AEC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190976B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  _QWORD *v12;

  v6[2] = a3;
  v6[3] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[4] = AssociatedTypeWitness;
  v6[5] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = swift_task_alloc();
  v6[6] = v11;
  v6[7] = sub_190A47D64();
  v6[8] = sub_190A47D58();
  v12 = (_QWORD *)swift_task_alloc();
  v6[9] = v12;
  *v12 = v6;
  v12[1] = sub_190976C08;
  v12[4] = a5;
  v12[5] = a6;
  v12[2] = v11;
  v12[3] = a1;
  return swift_task_switch();
}

uint64_t sub_190976C08()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_190976C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  _QWORD *v12;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[3] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[8] = AssociatedTypeWitness;
  v6[9] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = swift_task_alloc();
  v6[10] = v11;
  v6[11] = sub_190A47D64();
  v6[12] = sub_190A47D58();
  v12 = (_QWORD *)swift_task_alloc();
  v6[13] = v12;
  *v12 = v6;
  v12[1] = sub_190976D74;
  v12[4] = a5;
  v12[5] = a6;
  v12[2] = v11;
  v12[3] = a1;
  return swift_task_switch();
}

uint64_t sub_190976D74()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD);

  v2 = (_QWORD *)*v1;
  v2[14] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_190A47D28();
    return swift_task_switch();
  }
  else
  {
    v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(v2[7] + 40) + *(_QWORD *)(v2[7] + 40));
    v4 = (_QWORD *)swift_task_alloc();
    v2[15] = v4;
    *v4 = v2;
    v4[1] = sub_190976E40;
    return v5(v2[10], v2[6], v2[7]);
  }
}

uint64_t sub_190976E40(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 136) = a1;
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_190976EE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;

  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 48);
  v13 = *(_OWORD *)(v0 + 32);
  swift_release();
  *(_QWORD *)(v0 + 16) = v1;
  v7 = swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  *(_OWORD *)(v7 + 32) = v13;
  *(_QWORD *)(v7 + 48) = v2;
  swift_getAssociatedTypeWitness();
  v8 = sub_190A47D04();
  v9 = MEMORY[0x19401429C](MEMORY[0x1E0DEAF50], v8);
  v11 = sub_190907290((void (*)(char *, char *))sub_1909782E4, v7, v8, MEMORY[0x1E0CDFD18], MEMORY[0x1E0DEDCE8], v9, MEMORY[0x1E0DEDD18], v10);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v11);
}

uint64_t sub_190977014()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190977050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909770AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  _QWORD *v12;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[3] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[8] = AssociatedTypeWitness;
  v6[9] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = swift_task_alloc();
  v6[10] = v11;
  v6[11] = sub_190A47D64();
  v6[12] = sub_190A47D58();
  v12 = (_QWORD *)swift_task_alloc();
  v6[13] = v12;
  *v12 = v6;
  v12[1] = sub_190977190;
  v12[4] = a5;
  v12[5] = a6;
  v12[2] = v11;
  v12[3] = a1;
  return swift_task_switch();
}

uint64_t sub_190977190()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD);

  v2 = (_QWORD *)*v1;
  v2[14] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_190A47D28();
    return swift_task_switch();
  }
  else
  {
    v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(v2[7] + 40) + *(_QWORD *)(v2[7] + 40));
    v4 = (_QWORD *)swift_task_alloc();
    v2[15] = v4;
    *v4 = v2;
    v4[1] = sub_19097725C;
    return v5(v2[10], v2[6], v2[7]);
  }
}

uint64_t sub_19097725C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 136) = a1;
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_190977300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;

  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 48);
  v13 = *(_OWORD *)(v0 + 32);
  swift_release();
  *(_QWORD *)(v0 + 16) = v1;
  v7 = swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  *(_OWORD *)(v7 + 32) = v13;
  *(_QWORD *)(v7 + 48) = v2;
  swift_getAssociatedTypeWitness();
  v8 = sub_190A47D04();
  v9 = MEMORY[0x19401429C](MEMORY[0x1E0DEAF50], v8);
  v11 = sub_190907290((void (*)(char *, char *))sub_1909782B4, v7, v8, (char *)&type metadata for ControlAffordances, MEMORY[0x1E0DEDCE8], v9, MEMORY[0x1E0DEDD18], v10);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v11);
}

uint64_t sub_190977430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  _QWORD *v11;

  v5[4] = a4;
  v5[5] = a5;
  v5[2] = a1;
  v5[3] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[6] = AssociatedTypeWitness;
  v5[7] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = swift_task_alloc();
  v5[8] = v10;
  v11 = (_QWORD *)swift_task_alloc();
  v5[9] = v11;
  *v11 = v5;
  v11[1] = sub_1909774F0;
  v11[4] = a4;
  v11[5] = a5;
  v11[2] = v10;
  v11[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1909774F0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD);

  v2 = (_QWORD *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v2[5] + 64) + *(_QWORD *)(v2[5] + 64));
  v4 = (_QWORD *)swift_task_alloc();
  v2[11] = v4;
  *v4 = v2;
  v4[1] = sub_1909767EC;
  return v5(v2[2], v2[8], v2[4], v2[5]);
}

uint64_t sub_1909775A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_1909775C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  *(_QWORD *)(v4 + 576) = a3;
  *(_QWORD *)(v4 + 568) = a2;
  *(_QWORD *)(v4 + 560) = a1;
  v5 = v3[9];
  *(_OWORD *)(v4 + 512) = v3[8];
  *(_OWORD *)(v4 + 528) = v5;
  *(_OWORD *)(v4 + 544) = v3[10];
  v6 = v3[5];
  *(_OWORD *)(v4 + 448) = v3[4];
  *(_OWORD *)(v4 + 464) = v6;
  v7 = v3[7];
  *(_OWORD *)(v4 + 480) = v3[6];
  *(_OWORD *)(v4 + 496) = v7;
  v8 = v3[1];
  *(_OWORD *)(v4 + 384) = *v3;
  *(_OWORD *)(v4 + 400) = v8;
  v9 = v3[3];
  *(_OWORD *)(v4 + 416) = v3[2];
  *(_OWORD *)(v4 + 432) = v9;
  sub_190A47D64();
  *(_QWORD *)(v4 + 584) = sub_190A47D58();
  *(_QWORD *)(v4 + 592) = sub_190A47D28();
  *(_QWORD *)(v4 + 600) = v10;
  return swift_task_switch();
}

uint64_t sub_19097766C()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  uint64_t *v12;
  uint64_t *boxed_opaque_existential_1;
  id v14;
  _QWORD *v15;

  v1 = *(_OWORD *)(v0 + 528);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 512);
  *(_OWORD *)(v0 + 160) = v1;
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 544);
  v2 = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 448);
  *(_OWORD *)(v0 + 96) = v2;
  v3 = *(_OWORD *)(v0 + 496);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 480);
  *(_OWORD *)(v0 + 128) = v3;
  v4 = *(_OWORD *)(v0 + 400);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 384);
  *(_OWORD *)(v0 + 32) = v4;
  v5 = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v0 + 64) = v5;
  v6 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 328) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 344) = v6;
  *(_OWORD *)(v0 + 360) = *(_OWORD *)(v0 + 176);
  v7 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 264) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 280) = v7;
  v8 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 296) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 312) = v8;
  v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 200) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 216) = v9;
  v10 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 232) = *(_OWORD *)(v0 + 48);
  v11 = *(void **)(v0 + 576);
  v12 = *(uint64_t **)(v0 + 560);
  *(_QWORD *)(v0 + 192) = v11;
  *(_QWORD *)(v0 + 376) = v11;
  *(_OWORD *)(v0 + 248) = v10;
  v12[3] = type metadata accessor for ControlTemplatePicker(0);
  v12[4] = sub_190977990();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
  sub_1909779D8(v0 + 384);
  v14 = v11;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 608) = v15;
  *v15 = v0;
  v15[1] = sub_190977774;
  return sub_1909520F4((uint64_t)boxed_opaque_existential_1, *(_QWORD *)(v0 + 568));
}

uint64_t sub_190977774()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 616) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1909777D8()
{
  uint64_t v0;

  sub_190977A9C(v0 + 16);
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190977818()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 560);
  sub_190977A9C(v0 + 16);
  swift_release();
  __swift_deallocate_boxed_opaque_existential_1(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190977864(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(v1 + 144) + *(_QWORD *)(v1 + 144));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1908C4FDC;
  return v6(a1);
}

uint64_t sub_1909778C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v2 + 160) + *(_QWORD *)(v2 + 160));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1908CEB54;
  return v8(a2, a1);
}

uint64_t sub_190977930()
{
  return *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
}

uint64_t sub_190977960()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_19097797C(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

unint64_t sub_190977990()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EDCD0;
  if (!qword_1EE1EDCD0)
  {
    v1 = type metadata accessor for ControlTemplatePicker(255);
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ControlTemplatePicker, v1);
    atomic_store(result, &qword_1EE1EDCD0);
  }
  return result;
}

uint64_t sub_1909779D8(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1908B4C4C(v2);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_190977A9C(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(void **)(a1 + 176);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1908B467C(v2);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_190977B64()
{
  return swift_deallocObject();
}

uint64_t sub_190977B74()
{
  uint64_t v0;

  return sub_190973ED0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_190977B88()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190977BAC(uint64_t a1)
{
  return sub_190973F7C(a1);
}

uint64_t sub_190977BE8(uint64_t a1)
{
  return sub_190973FF0(a1);
}

uint64_t sub_190977C20()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 80))
    swift_release();
  return swift_deallocObject();
}

_QWORD *sub_190977C4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *(*v3)(__int128 *__return_ptr);
  _QWORD *result;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v3 = *(_QWORD *(**)(__int128 *__return_ptr))(v1 + 80);
  if (v3)
  {
    result = v3(&v9);
    v5 = v10;
    v6 = v11;
    v7 = v12;
    v8 = v13;
    *(_OWORD *)a1 = v9;
    *(_QWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = 0;
    v6 = 0uLL;
    *(_OWORD *)a1 = 0u;
    v7 = 0uLL;
    v8 = 0uLL;
  }
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 56) = v8;
  return result;
}

uint64_t sub_190977CC4(uint64_t a1, uint64_t a2)
{
  __swift_memcpy41_8(a2, a1);
  return a2;
}

uint64_t sub_190977D04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v7 = v1 + ((v6 + 32) & ~v6);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_190930C98;
  return sub_190975E84(a1, v7, v4, v5);
}

uint64_t sub_190977D80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v9 = v2 + ((v8 + 32) & ~v8);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_1908CEB54;
  return sub_190976678(a1, a2, v9, v6, v7);
}

uint64_t sub_190977E0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v1 + v7;
  v9 = (uint64_t *)(v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_190930C98;
  return sub_190976910(a1, v8, v10, v11, v4, v5);
}

uint64_t sub_190977EB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v1 + v7;
  v9 = (uint64_t *)(v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_190930C98;
  return sub_190976C90(a1, v8, v10, v11, v4, v5);
}

uint64_t sub_190977F54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v1 + v7;
  v9 = (uint64_t *)(v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_190930C98;
  return sub_1909770AC(a1, v8, v10, v11, v4, v5);
}

uint64_t objectdestroy_43Tm()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_190978050(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v9 = v2 + ((v8 + 32) & ~v8);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_1908CEB54;
  return sub_190977430(a1, a2, v9, v6, v7);
}

uint64_t sub_1909780DC(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 72);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1908B467C(v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t objectdestroy_51Tm()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190978214(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v1 + v7;
  v9 = (uint64_t *)(v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_190930C98;
  return sub_190976B2C(a1, v8, v10, v11, v4, v5);
}

uint64_t sub_1909782B4(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 32))(a1, *(_QWORD *)(v1 + 48));
}

uint64_t sub_1909782E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 32))(a1, *(_QWORD *)(v2 + 48));
  *a2 = result;
  return result;
}

uint64_t sub_190978324()
{
  return sub_1909764E8() & 1;
}

unint64_t sub_190978344()
{
  unint64_t result;

  result = qword_1EE1EDD50;
  if (!qword_1EE1EDD50)
  {
    result = MEMORY[0x19401429C](&unk_190A537A4, &type metadata for ControlPickerTemplateProvider.Errors);
    atomic_store(result, (unint64_t *)&qword_1EE1EDD50);
  }
  return result;
}

unint64_t sub_190978388()
{
  unint64_t result;

  result = qword_1EE1EA408;
  if (!qword_1EE1EA408)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE1EA408);
  }
  return result;
}

uint64_t sub_1909783C4()
{
  return 0x206E776F6E6B6E55;
}

uint64_t sub_1909783E8()
{
  return swift_deallocObject();
}

uint64_t sub_1909783F8()
{
  uint64_t v0;

  return sub_19097372C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_19097842C(uint64_t a1)
{
  return sub_190978444(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1909737D8);
}

uint64_t sub_190978438(uint64_t a1)
{
  return sub_190978444(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19097384C);
}

uint64_t sub_190978444(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[12], v2[13], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[10], v2[11]);
}

uint64_t sub_190978488()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909784AC(uint64_t a1)
{
  return sub_1909738C0(a1);
}

uint64_t sub_1909784E4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 96))
    swift_release();
  return swift_deallocObject();
}

_QWORD *sub_190978510@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *(*v3)(__int128 *__return_ptr);
  _QWORD *result;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v3 = *(_QWORD *(**)(__int128 *__return_ptr))(v1 + 96);
  if (v3)
  {
    result = v3(&v9);
    v5 = v10;
    v6 = v11;
    v7 = v12;
    v8 = v13;
    *(_OWORD *)a1 = v9;
    *(_QWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = 0;
    v6 = 0uLL;
    *(_OWORD *)a1 = 0u;
    v7 = 0uLL;
    v8 = 0uLL;
  }
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 56) = v8;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ControlPickerTemplateProvider.Errors(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ActivityWidgetRequest.PayloadMetadata()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for ControlPickerTemplateProvider.Errors(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ControlPickerTemplateProvider.Errors(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlPickerTemplateProvider.Errors(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlPickerTemplateProvider.Errors(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlPickerTemplateProvider.Errors()
{
  return &type metadata for ControlPickerTemplateProvider.Errors;
}

id sub_1909786E4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  id v6;

  v3 = v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  v4 = (_QWORD *)(v3 + *(int *)(type metadata accessor for WidgetArchivableMetadata(0) + 28));
  v6 = (id)v4[1];
  *a1 = *v4;
  a1[1] = v6;
  swift_retain();
  return v6;
}

id sub_190978738()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata
                           + *(int *)(type metadata accessor for WidgetArchivableMetadata(0) + 32)));
}

uint64_t sub_19097876C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  v4 = type metadata accessor for WidgetArchivableMetadata(0);
  return sub_1908AF5D8(v3 + *(int *)(v4 + 44), a1, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
}

uint64_t sub_1909787B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _BOOL8 v9;
  _QWORD v11[3];

  v1 = sub_190A46F78();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB218);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v0 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_archivedStates;
  swift_beginAccess();
  sub_1908AAA48(v8, (uint64_t)v7, &qword_1EE1EB218);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_1908AA544((uint64_t)v7, &qword_1EE1EB218);
    return 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
    sub_1908AA544((uint64_t)v7, &qword_1EE1EB218);
    sub_1908AA2F4(&qword_1EE1EA708, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDB800], MEMORY[0x1E0CDB810]);
    sub_190A47E18();
    sub_190A47E60();
    v9 = v11[2] == v11[1];
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v9;
}

uint64_t sub_190978940@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  v4 = v3 + *(int *)(type metadata accessor for WidgetArchivableMetadata(0) + 20);
  v5 = sub_190A46084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t sub_190978994()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1909789C4(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_190978A00())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_190978A3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  v4 = type metadata accessor for WidgetArchivableMetadata(0);
  return sub_1908AF5D8(v3 + *(int *)(v4 + 24), a1, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
}

uint64_t sub_190978A84()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for WidgetArchivableMetadata(0);
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1908B62C8(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_190978AD4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 17);
  return result;
}

uint64_t sub_190978B14(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 17) = v2;
  return result;
}

uint64_t (*sub_190978B50())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_190978B8C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C4F0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_190A45E68();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v11 = *a2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v6, v10, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v12 = v11 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection____lazy_storage___dateRange;
  swift_beginAccess();
  sub_1908DCA84((uint64_t)v6, v12, &qword_1ECF6C4F0);
  return swift_endAccess();
}

uint64_t sub_190978CBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C4F0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v13[-v7];
  v9 = v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection____lazy_storage___dateRange;
  swift_beginAccess();
  sub_1908AAA48(v9, (uint64_t)v8, &qword_1ECF6C4F0);
  v10 = sub_190A45E68();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_1908AA544((uint64_t)v8, &qword_1ECF6C4F0);
  sub_190978E3C(v1, a1);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_1908DCA84((uint64_t)v6, v9, &qword_1ECF6C4F0);
  return swift_endAccess();
}

uint64_t sub_190978E3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  void (*v41)(char *, uint64_t, uint64_t);
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v39 - v8;
  v10 = sub_190A46084();
  v11 = *(_QWORD **)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v46 = (char *)&v39 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v45 = (char *)&v39 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v39 - v19;
  v21 = a1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  v22 = type metadata accessor for WidgetArchivableMetadata(0);
  v23 = *(_QWORD *)(v21 + *(int *)(v22 + 36));
  if (*(_QWORD *)(v23 + 16))
  {
    v24 = v22;
    v43 = v14;
    v44 = v7;
    v47 = v20;
    v48 = a2;
    v25 = *(_QWORD *)(type metadata accessor for WidgetArchivableMetadata.EntryMetadata(0) - 8);
    v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v27 = v23 + v26;
    v28 = (void (*)(char *, uint64_t, uint64_t))v11[2];
    v28(v9, v27, v10);
    v29 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v11[7];
    v29(v9, 0, 1, v10);
    v30 = (unsigned int (*)(char *, uint64_t, uint64_t))v11[6];
    if (v30(v9, 1, v10) != 1)
    {
      v40 = v30;
      v41 = v28;
      v42 = v29;
      v31 = (void (*)(char *, char *, uint64_t))v11[4];
      v31(v47, v9, v10);
      v32 = *(_QWORD *)(v21 + *(int *)(v24 + 36));
      v33 = *(_QWORD *)(v32 + 16);
      if (v33)
      {
        v9 = v44;
        v34 = (void (*)(char *, char *, uint64_t))v41;
        v41(v44, v32 + v26 + *(_QWORD *)(v25 + 72) * (v33 - 1), v10);
        v42(v9, 0, 1, v10);
        if (v40(v9, 1, v10) != 1)
        {
          v35 = v45;
          v31(v45, v9, v10);
          v36 = v47;
          v34(v46, v47, v10);
          v34(v43, v35, v10);
          sub_190A45E44();
          v37 = (void (*)(char *, uint64_t))v11[1];
          v37(v35, v10);
          return ((uint64_t (*)(char *, uint64_t))v37)(v36, v10);
        }
      }
      else
      {
        v9 = v44;
        v42(v44, 1, 1, v10);
      }
      ((void (*)(char *, uint64_t))v11[1])(v47, v10);
    }
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v11[7])(v9, 1, 1, v10);
  }
  sub_1908AA544((uint64_t)v9, &qword_1ECF6C2F8);
  return sub_190A45E5C();
}

uint64_t sub_190979150(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C4F0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190A45E68();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v5, a1, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  v8 = v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection____lazy_storage___dateRange;
  swift_beginAccess();
  sub_1908DCA84((uint64_t)v5, v8, &qword_1ECF6C4F0);
  return swift_endAccess();
}

void (*sub_190979234(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C4F0);
  v3[7] = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v5 = sub_190A45E68();
  v3[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[9] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[10] = malloc(v7);
  v8 = malloc(v7);
  v3[11] = v8;
  sub_190978CBC((uint64_t)v8);
  return sub_1909792D0;
}

void sub_1909792D0(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD **)a1;
  v4 = *(void **)(*(_QWORD *)a1 + 80);
  v3 = *(void **)(*(_QWORD *)a1 + 88);
  if ((a2 & 1) != 0)
  {
    v5 = v2[8];
    v6 = v2[9];
    v8 = v2[6];
    v7 = (void *)v2[7];
    (*(void (**)(_QWORD, _QWORD, uint64_t))(v6 + 16))(v2[10], v2[11], v5);
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v7, v4, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v7, 0, 1, v5);
    v9 = v8 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection____lazy_storage___dateRange;
    swift_beginAccess();
    sub_1908DCA84((uint64_t)v7, v9, &qword_1ECF6C4F0);
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v5);
  }
  else
  {
    v10 = v2[8];
    v11 = v2[9];
    v12 = v2[6];
    v7 = (void *)v2[7];
    (*(void (**)(void *, _QWORD, uint64_t))(v11 + 32))(v7, v2[11], v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    v13 = v12 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection____lazy_storage___dateRange;
    swift_beginAccess();
    sub_1908DCA84((uint64_t)v7, v13, &qword_1ECF6C4F0);
    swift_endAccess();
  }
  free(v3);
  free(v4);
  free(v7);
  free(v2);
}

uint64_t sub_190979438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  void *v3;
  uint64_t v4;
  uint64_t KeyPath;
  os_unfair_lock_s *v6;
  id v7;
  unint64_t v8;
  uint64_t result;
  id v10;
  id v11;
  uint64_t v12;

  v1 = v0 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WidgetArchivableMetadata(0) + 28));
  v4 = *v2;
  v3 = (void *)v2[1];
  KeyPath = swift_getKeyPath();
  v6 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain_n();
  v7 = v3;
  os_unfair_lock_lock(v6);
  v8 = sub_1908B7A4C(KeyPath);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));

  swift_release();
  result = swift_release_n();
  if (!v8)
    goto LABEL_12;
  if (!(v8 >> 62))
  {
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_9:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v12 = sub_190A48484();
  result = swift_bridgeObjectRelease();
  if (!v12)
    goto LABEL_9;
LABEL_4:
  if ((v8 & 0xC000000000000001) != 0)
  {
LABEL_10:
    v10 = (id)MEMORY[0x194013510](0, v8);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(v8 + 32);
LABEL_7:
    v11 = v10;
    swift_bridgeObjectRelease();
    return (uint64_t)v11;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_190979568@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t (*v12)(_QWORD);
  void *v13;
  uint64_t *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  id v24;
  uint64_t v25;
  void (*v26)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _BYTE v37[4];
  int v38;
  _BYTE *v39;
  uint64_t *v40;
  uint64_t v41;

  v40 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB218);
  MEMORY[0x1E0C80A78](v2);
  v39 = &v37[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = (int *)type metadata accessor for WidgetArchivableMetadata(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v37[-v8];
  v10 = v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  v12 = v11;
  sub_1908AF5D8(v10, (uint64_t)v7, v11);
  v13 = *(void **)((char *)v7 + v4[8]);
  v14 = (_QWORD *)((char *)v7 + v4[7]);
  v16 = *v14;
  v15 = (void *)v14[1];
  sub_1908AF5D8((uint64_t)v7 + v4[6], (uint64_t)v9 + v4[6], (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  v17 = *(_QWORD *)((char *)v7 + v4[9]);
  sub_1908AF5D8((uint64_t)v7 + v4[11], (uint64_t)v9 + v4[11], (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  v18 = v4[5];
  v19 = (char *)v7 + v18;
  v20 = (char *)v9 + v18;
  v21 = sub_190A46084();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, v19, v21);
  *(_QWORD *)((char *)v9 + v4[8]) = v13;
  v22 = (_QWORD *)((char *)v9 + v4[7]);
  *v22 = v16;
  v22[1] = v15;
  *(_QWORD *)((char *)v9 + v4[9]) = v17;
  *v9 = *v7;
  *(_QWORD *)((char *)v9 + v4[10]) = MEMORY[0x1E0DEE9D8];
  v23 = v13;
  swift_retain();
  v24 = v15;
  swift_bridgeObjectRetain();
  sub_1908B5150((uint64_t)v7, v12);
  sub_1908AF5D8((uint64_t)v9, (uint64_t)v7, v12);
  v25 = sub_190A46F78();
  v26 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v27 = (uint64_t)v39;
  v26(v39, 1, 1, v25);
  v28 = v41;
  swift_beginAccess();
  v38 = *(unsigned __int8 *)(v28 + 17);
  v29 = type metadata accessor for _TimelineArchivedViewCollection();
  v30 = swift_allocObject();
  *(_BYTE *)(v30 + 16) = 0;
  swift_beginAccess();
  *(_BYTE *)(v30 + 17) = byte_1ECF6C560;
  v31 = v30 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection____lazy_storage___dateRange;
  v32 = sub_190A45E68();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  v33 = v30 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_archivedStates;
  v26((_BYTE *)(v30 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_archivedStates), 1, 1, v25);
  sub_1908BD0B4((uint64_t)v7, v30 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata, type metadata accessor for WidgetArchivableMetadata);
  swift_beginAccess();
  sub_1908DCA84(v27, v33, &qword_1EE1EB218);
  swift_endAccess();
  swift_beginAccess();
  *(_BYTE *)(v30 + 17) = v38;
  v34 = v41;
  swift_beginAccess();
  LOBYTE(v34) = *(_BYTE *)(v34 + 16);
  swift_beginAccess();
  *(_BYTE *)(v30 + 16) = v34;
  v35 = v40;
  v40[3] = v29;
  v35[4] = (uint64_t)&protocol witness table for _TimelineArchivedViewCollection;
  *v35 = v30;
  return sub_1908B5150((uint64_t)v9, type metadata accessor for WidgetArchivableMetadata);
}

uint64_t sub_1909798E0@<X0>(uint64_t a1@<X1>, int64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v7 = sub_190979A90();
  if ((v8 & 1) != 0)
  {
    type metadata accessor for WidgetArchivableMetadata(0);
    v10 = swift_bridgeObjectRetain();
    sub_1908B62C8(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = 0;
  }
  else
  {
    v9 = v7;
  }
  v11 = sub_190979D84(v9, a1, a2);
  if ((v12 & 1) != 0)
  {
    v15 = type metadata accessor for ViewableTimelineEntry();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
  else
  {
    result = sub_19097A034(v9, v11, a3);
    if (!v3)
    {
      v14 = type metadata accessor for ViewableTimelineEntry();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a3, 0, 1, v14);
    }
  }
  return result;
}

uint64_t sub_1909799E8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, int64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  unint64_t v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v7 = sub_190979D84(a1, a2, a3);
  if ((v8 & 1) != 0)
  {
    v11 = type metadata accessor for ViewableTimelineEntry();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a4, 1, 1, v11);
  }
  else
  {
    result = sub_19097A034(a1, v7, a4);
    if (!v4)
    {
      v10 = type metadata accessor for ViewableTimelineEntry();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a4, 0, 1, v10);
    }
  }
  return result;
}

uint64_t sub_190979A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  BOOL v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  type metadata accessor for WidgetArchivableMetadata(0);
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1908B62C8(v0);
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (_QWORD *)(v1 + 40 * v2 - 8);
    do
    {
      v4 = sub_190A31630(v3);
      --v2;
      v3 -= 5;
    }
    while (!v4 && v2 != 0);
    v5 = !v4;
  }
  else
  {
    v5 = 1;
  }
  v6 = v5 & 1;
  swift_bridgeObjectRelease();
  v7 = swift_bridgeObjectRetain();
  sub_1908B62C8(v7);
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return v2;
  }
  v8 = swift_bridgeObjectRetain();
  v9 = sub_1908B62C8(v8);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (__OFSUB__(v10 - 1, v2))
  {
    __break(1u);
  }
  else if (v10 - 1 == v2 || !__OFADD__(v2, 1))
  {
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_190979C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  BOOL v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_1908B62B4(v0);
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (_QWORD *)(v1 + 40 * v2 - 8);
    do
    {
      v4 = sub_190A31630(v3);
      --v2;
      v3 -= 5;
    }
    while (!v4 && v2 != 0);
    v5 = !v4;
  }
  else
  {
    v5 = 1;
  }
  v6 = v5 & 1;
  swift_bridgeObjectRelease();
  v7 = swift_bridgeObjectRetain();
  sub_1908B62B4(v7);
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return v2;
  }
  v8 = swift_bridgeObjectRetain();
  v9 = sub_1908B62B4(v8);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (__OFSUB__(v10 - 1, v2))
  {
    __break(1u);
  }
  else if (v10 - 1 == v2 || !__OFADD__(v2, 1))
  {
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_190979D84(uint64_t a1, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v18;
  char v19;
  Swift::Int v20;
  Swift::Int v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  __int128 v26;

  v25 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB218);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_190A46F78();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v3 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_archivedStates;
  swift_beginAccess();
  sub_1908AAA48(v13, (uint64_t)v8, &qword_1EE1EB218);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    v14 = v3 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
    v8 = (char *)type metadata accessor for WidgetArchivableMetadata(0);
    v15 = (_QWORD *)(v14 + *((int *)v8 + 7));
    v16 = (void *)v15[1];
    *(_QWORD *)&v26 = *v15;
    *((_QWORD *)&v26 + 1) = v16;
    swift_retain();
    v17 = v16;
    v18 = WidgetEnvironment.findEnumeratedIndex(matching:ignoring:)(a2, a3);
    LOBYTE(v16) = v19;

    swift_release();
    if ((v16 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return v18;
    }
    v26 = *(_OWORD *)(v14 + *((int *)v8 + 7));
    v20 = WidgetEnvironment.enumeratedCount()();
    v21 = v25 * v20;
    if ((unsigned __int128)(v25 * (__int128)v20) >> 64 == (v25 * v20) >> 63)
    {
      v22 = __OFADD__(v21, v18);
      v18 += v21;
      if (!v22)
      {
        sub_1908AA2F4(&qword_1EE1EA708, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDB800], MEMORY[0x1E0CDB810]);
        sub_190A47E18();
        sub_190A47E60();
        v23 = sub_190A47E54();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        if (v18 >= v23)
          return 0;
        return v18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  sub_1908AA544((uint64_t)v8, &qword_1EE1EB218);
  result = sub_190A48448();
  __break(1u);
  return result;
}

uint64_t sub_19097A034@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  NSObject *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint8_t *v40;
  _QWORD *v41;
  char *v42;
  void *v43;
  id v44;
  id v45;
  char *v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  void *v85;
  uint64_t *v86;
  char *v87;
  uint64_t result;
  id v89;
  id v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  _QWORD *v94;
  char *v95;
  void *v96;
  id v97;
  id v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _BYTE *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  unint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  NSObject *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  id v132;
  void *v133;
  id v134;

  v124 = a2;
  v115 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE20);
  MEMORY[0x1E0C80A78](v5);
  v114 = (uint64_t)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_190A46084();
  v117 = *(_QWORD *)(v7 - 8);
  v118 = v7;
  MEMORY[0x1E0C80A78](v7);
  v116 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for WidgetViewMetadata();
  v110 = *(_QWORD *)(v111 - 8);
  v9 = MEMORY[0x1E0C80A78](v111);
  v109 = (uint64_t)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v113 = (char *)&v104 - v11;
  v112 = sub_190A467EC();
  v108 = *(_QWORD *)(v112 - 8);
  v12 = MEMORY[0x1E0C80A78](v112);
  v106 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v107 = (char *)&v104 - v15;
  MEMORY[0x1E0C80A78](v14);
  v127 = (char *)&v104 - v16;
  v17 = sub_190A4651C();
  v120 = *(_QWORD *)(v17 - 8);
  v121 = v17;
  MEMORY[0x1E0C80A78](v17);
  v130 = (char *)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for WidgetArchivableMetadata.EntryMetadata(0);
  v19 = *(_QWORD *)(v104 - 8);
  v20 = MEMORY[0x1E0C80A78](v104);
  v105 = (uint64_t)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v131 = (uint64_t)&v104 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB218);
  MEMORY[0x1E0C80A78](v23);
  v25 = (unint64_t)&v104 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_190A46F78();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v104 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = v3;
  v30 = (uint64_t)v3 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_archivedStates;
  swift_beginAccess();
  sub_1908AAA48(v30, v25, &qword_1EE1EB218);
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
LABEL_29:
    sub_1908AA544(v25, &qword_1EE1EB218);
    result = sub_190A48448();
    __break(1u);
    return result;
  }
  v31 = *(void (**)(char *, unint64_t, uint64_t))(v27 + 32);
  v122 = v26;
  v31(v29, v25, v26);
  v32 = OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  v33 = type metadata accessor for WidgetArchivableMetadata(0);
  v129 = v29;
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v34 = *(int *)(v33 + 36);
    v125 = v33;
    v126 = (char *)v128 + v32;
    v35 = *(uint64_t *)((char *)&v128->isa + v32 + v34);
    if (*(_QWORD *)(v35 + 16) > a1)
    {
      sub_1908AF5D8(v35+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(_QWORD *)(v19 + 72) * a1, v131, type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
      if (qword_1ECF6AE58 == -1)
        goto LABEL_5;
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_26:
  swift_once();
LABEL_5:
  v36 = sub_190A465A0();
  __swift_project_value_buffer(v36, (uint64_t)qword_1ECF6D528);
  swift_retain_n();
  v37 = sub_190A46588();
  v38 = sub_190A47F44();
  v39 = os_log_type_enabled(v37, v38);
  v119 = v27;
  if (v39)
  {
    v40 = (uint8_t *)swift_slowAlloc();
    v41 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v40 = 138543362;
    v42 = &v126[*(int *)(v125 + 24)];
    v43 = *(void **)&v42[*(int *)(type metadata accessor for BundleStub() + 20)];
    v134 = v43;
    v44 = v43;
    sub_190A48178();
    *v41 = v43;
    swift_release_n();
    _os_log_impl(&dword_1908A7000, v37, v38, "Reading the view archive for %{public}@", v40, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
    swift_arrayDestroy();
    MEMORY[0x194014398](v41, -1, -1);
    MEMORY[0x194014398](v40, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v25 = v124;
  if (qword_1ECF6C5F8 != -1)
    swift_once();
  v45 = (id)qword_1ECF6D8A8;
  sub_190A46504();
  sub_190A48040();
  sub_190A464EC();
  v46 = v127;
  v47 = v123;
  sub_190A46F6C();
  if (!v47)
  {
    if ((v25 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v61 = *(_QWORD *)&v126[*(int *)(v125 + 40)];
      if (*(_QWORD *)(v61 + 16) > v25)
      {
        v62 = v110;
        v63 = v113;
        sub_1908AF5D8(v61+ ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80))+ *(_QWORD *)(v110 + 72) * v25, (uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for WidgetViewMetadata);
        *v63 = sub_190A467C8() & 1;
        v63[1] = sub_190A467D4() & 1;
        v63[2] = sub_190A467E0() & 1;
        v64 = v105;
        sub_1908AF5D8(v131, v105, type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
        v65 = v109;
        sub_1908AF5D8((uint64_t)v63, v109, (uint64_t (*)(_QWORD))type metadata accessor for WidgetViewMetadata);
        v66 = v46;
        v67 = v108;
        v68 = *(void (**)(char *, char *, uint64_t))(v108 + 16);
        v69 = v107;
        v70 = v112;
        v68(v107, v66, v112);
        v71 = *(void (**)(char *, uint64_t, uint64_t))(v117 + 16);
        v128 = 0;
        v71(v116, v64, v118);
        v68(v106, v69, v70);
        sub_1908AA2F4(&qword_1EE1EAD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9098], MEMORY[0x1E0CD9090]);
        v72 = sub_190A47884();
        v73 = *(char **)(v67 + 8);
        v125 = v72;
        v126 = v73;
        ((void (*)(char *, uint64_t))v73)(v69, v70);
        v74 = v104;
        v75 = v64 + *(int *)(v104 + 20);
        v76 = *(_QWORD *)v75;
        v123 = *(void **)(v75 + 8);
        v124 = v76;
        LODWORD(v108) = *(unsigned __int8 *)(v75 + 16);
        v77 = v65;
        v78 = v114;
        sub_1908BD0B4(v77, v114, (uint64_t (*)(_QWORD))type metadata accessor for WidgetViewMetadata);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v62 + 56))(v78, 0, 1, v111);
        v79 = (uint64_t *)(v64 + *(int *)(v74 + 24));
        v80 = *v79;
        v81 = v79[1];
        sub_1908CE0B4(*v79, v81);
        sub_1908B5150(v64, type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
        v82 = v115;
        (*(void (**)(uint64_t, char *, uint64_t))(v117 + 32))(v115, v116, v118);
        v83 = (int *)type metadata accessor for ViewableTimelineEntry();
        *(_QWORD *)(v82 + v83[5]) = v125;
        v84 = v82 + v83[6];
        v85 = v123;
        *(_QWORD *)v84 = v124;
        *(_QWORD *)(v84 + 8) = v85;
        *(_BYTE *)(v84 + 16) = v108;
        sub_19097B498(v78, v82 + v83[7]);
        v86 = (uint64_t *)(v82 + v83[8]);
        *v86 = v80;
        v86[1] = v81;
        sub_1908B5150((uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for WidgetViewMetadata);
        ((void (*)(char *, uint64_t))v126)(v127, v70);
        sub_190A48034();
        v87 = v130;
        sub_190A464EC();
        (*(void (**)(char *, uint64_t))(v120 + 8))(v87, v121);
        sub_1908B5150(v131, type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
        return (*(uint64_t (**)(char *, uint64_t))(v119 + 8))(v129, v122);
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  v134 = v47;
  v48 = v47;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6AE48);
  sub_19094F7B8();
  if (swift_dynamicCast())
  {

    v49 = v133;
    swift_retain_n();
    v50 = v49;
    v51 = sub_190A46588();
    v52 = sub_190A47F50();
    v53 = v52;
    if (os_log_type_enabled(v51, v52))
    {
      v54 = swift_slowAlloc();
      LODWORD(v128) = v53;
      v55 = v54;
      v56 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v55 = 138543618;
      v57 = &v126[*(int *)(v125 + 24)];
      v58 = *(void **)&v57[*(int *)(type metadata accessor for BundleStub() + 20)];
      v132 = v58;
      v59 = v58;
      sub_190A48178();
      *v56 = v58;
      swift_release_n();
      *(_WORD *)(v55 + 12) = 2112;
      v132 = v50;
      v60 = v50;
      sub_190A48178();
      v56[1] = v50;

      _os_log_impl(&dword_1908A7000, v51, (os_log_type_t)v128, "Encountered an error reading the view archive for %{public}@; error: %@",
        (uint8_t *)v55,
        0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
      swift_arrayDestroy();
      MEMORY[0x194014398](v56, -1, -1);
      MEMORY[0x194014398](v55, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v101 = v120;
    v100 = v121;
    v102 = v119;
    swift_willThrow();

  }
  else
  {

    swift_retain();
    v89 = v47;
    swift_retain();
    v90 = v47;
    v91 = sub_190A46588();
    v92 = sub_190A47F50();
    if (os_log_type_enabled(v91, v92))
    {
      v93 = swift_slowAlloc();
      v94 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v93 = 138543618;
      v128 = v91;
      v95 = &v126[*(int *)(v125 + 24)];
      v96 = *(void **)&v95[*(int *)(type metadata accessor for BundleStub() + 20)];
      v134 = v96;
      v97 = v96;
      sub_190A48178();
      *v94 = v96;
      swift_release_n();
      *(_WORD *)(v93 + 12) = 2114;
      v98 = v47;
      v99 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v134 = v99;
      v91 = v128;
      sub_190A48178();
      v94[1] = v99;

      _os_log_impl(&dword_1908A7000, v91, v92, "Encountered an error reading the view archive for %{public}@; error: %{public}@",
        (uint8_t *)v93,
        0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
      swift_arrayDestroy();
      MEMORY[0x194014398](v94, -1, -1);
      MEMORY[0x194014398](v93, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    v101 = v120;
    v100 = v121;
    v102 = v119;

    swift_willThrow();
  }
  sub_190A48034();
  v103 = v130;
  sub_190A464EC();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v103, v100);
  sub_1908B5150(v131, type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
  return (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v129, v122);
}

uint64_t _TimelineArchivedViewCollection.deinit()
{
  uint64_t v0;

  sub_1908AA544(v0 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection____lazy_storage___dateRange, &qword_1ECF6C4F0);
  sub_1908B5150(v0 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata, type metadata accessor for WidgetArchivableMetadata);
  sub_1908AA544(v0 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_archivedStates, &qword_1EE1EB218);
  return v0;
}

uint64_t _TimelineArchivedViewCollection.__deallocating_deinit()
{
  uint64_t v0;

  sub_1908AA544(v0 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection____lazy_storage___dateRange, &qword_1ECF6C4F0);
  sub_1908B5150(v0 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata, type metadata accessor for WidgetArchivableMetadata);
  sub_1908AA544(v0 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_archivedStates, &qword_1EE1EB218);
  return swift_deallocClassInstance();
}

uint64_t sub_19097ADEC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  v4 = type metadata accessor for WidgetArchivableMetadata(0);
  return sub_1908AF5D8(v3 + *(int *)(v4 + 24), a1, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
}

id sub_19097AE38()
{
  _QWORD *v0;

  return objc_retain(*(id *)(*v0
                           + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata
                           + *(int *)(type metadata accessor for WidgetArchivableMetadata(0) + 32)));
}

uint64_t sub_19097AE70()
{
  return sub_190979438();
}

id sub_19097AE90@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _QWORD *v4;
  id v6;

  v3 = *v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  v4 = (_QWORD *)(v3 + *(int *)(type metadata accessor for WidgetArchivableMetadata(0) + 28));
  v6 = (id)v4[1];
  *a1 = *v4;
  a1[1] = v6;
  swift_retain();
  return v6;
}

uint64_t sub_19097AEE8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  v4 = v3 + *(int *)(type metadata accessor for WidgetArchivableMetadata(0) + 20);
  v5 = sub_190A46084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t sub_19097AF40@<X0>(uint64_t a1@<X8>)
{
  return sub_190978CBC(a1);
}

uint64_t sub_19097AF60()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for WidgetArchivableMetadata(0);
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1908B62C8(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_19097AFB4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9WidgetKit31_TimelineArchivedViewCollection_metadata;
  v4 = type metadata accessor for WidgetArchivableMetadata(0);
  return sub_1908AF5D8(v3 + *(int *)(v4 + 44), a1, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
}

uint64_t sub_19097B000@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v3 + 17);
  return result;
}

uint64_t sub_19097B044()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 16);
}

uint64_t sub_19097B080@<X0>(uint64_t *a1@<X8>)
{
  return sub_190979568(a1);
}

uint64_t sub_19097B0A0@<X0>(uint64_t a1@<X1>, int64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1909798E0(a1, a2, a3);
}

uint64_t type metadata accessor for _TimelineArchivedViewCollection()
{
  uint64_t result;

  result = qword_1ECF680C0;
  if (!qword_1ECF680C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_19097B0FC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_19097B140(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 16) = v2;
  return result;
}

uint64_t sub_19097B180@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 17);
  return result;
}

uint64_t sub_19097B1C4(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 17) = v2;
  return result;
}

uint64_t sub_19097B204@<X0>(uint64_t a1@<X8>)
{
  return sub_190978CBC(a1);
}

uint64_t sub_19097B228()
{
  return type metadata accessor for _TimelineArchivedViewCollection();
}

void sub_19097B230()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1908BBFB0(319, &qword_1ECF6C4F8, (void (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for WidgetArchivableMetadata(319);
    if (v1 <= 0x3F)
    {
      sub_1908BBFB0(319, &qword_1EE1EB220, (void (*)(uint64_t))MEMORY[0x1E0CDB800]);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for _TimelineArchivedViewCollection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.environment.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.widget.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.reloadPolicy.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.isEmpty.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.creationDate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.requiresReload.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.requiresReload.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.requiresReload.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.originatingBundle.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.entries.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.protectionLevel.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.protectionLevel.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.protectionLevel.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.dateRange.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.dateRange.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.dateRange.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.metrics.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.copyWithoutRenderData()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of _TimelineArchivedViewCollection.viewableEntry(for:in:ignoringEnvironmentKeys:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t sub_19097B420(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    v6 = a3 + 40 * v4 - 8;
    do
    {
      v7 = a1(v6);
      if (v3)
        break;
      --v4;
      v6 -= 40;
    }
    while (!(v7 & 1 | (v4 == 0)));
  }
  return v4;
}

uint64_t sub_19097B498(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double ActivityViewEntryMetadata.metrics.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v3;

  result = *(double *)(v1 + 32);
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v3;
  *(double *)(a1 + 32) = result;
  return result;
}

double ActivityViewEntryMetadata.metrics.setter(uint64_t a1)
{
  uint64_t v1;
  double result;
  __int128 v3;

  result = *(double *)(a1 + 32);
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v3;
  *(double *)(v1 + 32) = result;
  return result;
}

uint64_t (*ActivityViewEntryMetadata.metrics.modify())()
{
  return nullsub_1;
}

uint64_t ActivityViewEntryMetadata.containsPrivacyRedactions.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t ActivityViewEntryMetadata.containsPrivacyRedactions.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = result;
  return result;
}

uint64_t (*ActivityViewEntryMetadata.containsPrivacyRedactions.modify())()
{
  return nullsub_1;
}

__n128 ActivityViewEntryMetadata.backgroundTintColor.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = *(_BYTE *)(v1 + 60);
  v3 = *(_BYTE *)(v1 + 61);
  result = *(__n128 *)(v1 + 44);
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  a1[1].n128_u8[1] = v3;
  return result;
}

__n128 ActivityViewEntryMetadata.backgroundTintColor.setter(__n128 *a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = a1[1].n128_u8[0];
  v3 = a1[1].n128_u8[1];
  result = *a1;
  *(__n128 *)(v1 + 44) = *a1;
  *(_BYTE *)(v1 + 60) = v2;
  *(_BYTE *)(v1 + 61) = v3;
  return result;
}

uint64_t (*ActivityViewEntryMetadata.backgroundTintColor.modify())()
{
  return nullsub_1;
}

__n128 ActivityViewEntryMetadata.textColor.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = v1[5].n128_u8[0];
  v3 = v1[5].n128_u8[1];
  result = v1[4];
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  a1[1].n128_u8[1] = v3;
  return result;
}

__n128 ActivityViewEntryMetadata.textColor.setter(__n128 *a1)
{
  __n128 *v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = a1[1].n128_u8[0];
  v3 = a1[1].n128_u8[1];
  result = *a1;
  v1[4] = *a1;
  v1[5].n128_u8[0] = v2;
  v1[5].n128_u8[1] = v3;
  return result;
}

uint64_t (*ActivityViewEntryMetadata.textColor.modify())()
{
  return nullsub_1;
}

void ActivityViewEntryMetadata.archivedFamily.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 82);
}

_BYTE *ActivityViewEntryMetadata.archivedFamily.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 82) = *result;
  return result;
}

uint64_t (*ActivityViewEntryMetadata.archivedFamily.modify())()
{
  return nullsub_1;
}

uint64_t sub_19097B5F4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19097B628 + 4 * byte_190A538C0[a1]))(0x7363697274656DLL, 0xE700000000000000);
}

unint64_t sub_19097B628()
{
  return 0xD000000000000019;
}

unint64_t sub_19097B648()
{
  return 0xD000000000000013;
}

uint64_t sub_19097B664()
{
  return 0x6F6C6F4374786574;
}

uint64_t sub_19097B680()
{
  return 0x6465766968637261;
}

uint64_t sub_19097B6A4()
{
  unsigned __int8 *v0;

  return sub_19097B5F4(*v0);
}

uint64_t sub_19097B6AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19097C2A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19097B6D0()
{
  sub_19097BE40();
  return sub_190A48868();
}

uint64_t sub_19097B6F8()
{
  sub_19097BE40();
  return sub_190A48874();
}

uint64_t ActivityViewEntryMetadata.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  __int128 v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  __int128 v26;
  __int128 v27;
  char v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6768);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v26 = v1[1];
  v27 = v8;
  v9 = *((_QWORD *)v1 + 4);
  v25 = *((unsigned __int8 *)v1 + 40);
  v10 = *(_QWORD *)((char *)v1 + 44);
  v23 = *(_QWORD *)((char *)v1 + 52);
  v24 = v10;
  LODWORD(v10) = *((unsigned __int8 *)v1 + 60);
  v21 = *((unsigned __int8 *)v1 + 61);
  v22 = v10;
  v11 = *((_QWORD *)v1 + 9);
  *(_QWORD *)&v18 = *((_QWORD *)v1 + 8);
  *((_QWORD *)&v18 + 1) = v11;
  LODWORD(v10) = *((unsigned __int8 *)v1 + 80);
  v19 = *((unsigned __int8 *)v1 + 81);
  v20 = v10;
  v12 = *((_BYTE *)v1 + 82);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19097BE40();
  sub_190A48850();
  v29 = v27;
  v30 = v26;
  v31 = v9;
  v28 = 0;
  sub_19097BE84();
  sub_190A48640();
  if (!v2)
  {
    v13 = v22;
    v15 = v23;
    v14 = v24;
    LOBYTE(v29) = 1;
    sub_190A48604();
    *(_QWORD *)&v29 = v14;
    *((_QWORD *)&v29 + 1) = v15;
    LOBYTE(v30) = v13;
    BYTE1(v30) = v21;
    v28 = 2;
    sub_19097BEC8();
    sub_190A485EC();
    v29 = v18;
    LOBYTE(v30) = v20;
    BYTE1(v30) = v19;
    v28 = 3;
    sub_190A485EC();
    LOBYTE(v29) = v12;
    v28 = 4;
    sub_19097BF0C();
    sub_190A48640();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ActivityViewEntryMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1E6AD0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19097BE40();
  sub_190A48838();
  if (!v2)
  {
    v27 = 0;
    sub_19097BF50();
    sub_190A48580();
    v9 = v28;
    v10 = v29;
    v11 = v30;
    v12 = v31;
    v13 = v32;
    LOBYTE(v28) = 1;
    v14 = sub_190A48544();
    v27 = 2;
    sub_19097BF94();
    sub_190A4852C();
    v25 = v29;
    v26 = v28;
    v23 = BYTE1(v30);
    v24 = v30;
    v27 = 3;
    sub_190A4852C();
    v16 = v26;
    v21 = v29;
    v22 = v28;
    v19 = BYTE1(v30);
    v20 = v30;
    v27 = 4;
    sub_19097BFD8();
    sub_190A48580();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v17 = v28;
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
    *(_QWORD *)(a2 + 16) = v11;
    *(_QWORD *)(a2 + 24) = v12;
    *(_QWORD *)(a2 + 32) = v13;
    *(_BYTE *)(a2 + 40) = v14 & 1;
    *(_QWORD *)(a2 + 44) = v16;
    *(_QWORD *)(a2 + 52) = v25;
    *(_BYTE *)(a2 + 60) = v24;
    *(_BYTE *)(a2 + 61) = v23;
    v18 = v21;
    *(_QWORD *)(a2 + 64) = v22;
    *(_QWORD *)(a2 + 72) = v18;
    *(_BYTE *)(a2 + 80) = v20;
    *(_BYTE *)(a2 + 81) = v19;
    *(_BYTE *)(a2 + 82) = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_19097BC50@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ActivityViewEntryMetadata.init(from:)(a1, a2);
}

uint64_t sub_19097BC64(_QWORD *a1)
{
  return ActivityViewEntryMetadata.encode(to:)(a1);
}

uint64_t _s9WidgetKit25ActivityViewEntryMetadataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  int v3;
  char v4;
  char v5;
  double v6;
  int v7;
  char v8;
  char v9;
  _BOOL4 v10;
  uint64_t result;
  char v12;
  char v13;
  int v14;
  int v15;
  char v16;
  char v17;

  v2 = *(double *)(a1 + 32);
  v3 = *(unsigned __int8 *)(a1 + 40);
  v4 = *(_BYTE *)(a1 + 60);
  v5 = *(_BYTE *)(a1 + 61);
  v6 = *(double *)(a2 + 32);
  v7 = *(unsigned __int8 *)(a2 + 40);
  v8 = *(_BYTE *)(a2 + 60);
  v9 = *(_BYTE *)(a2 + 61);
  v12 = *(_BYTE *)(a2 + 80);
  v13 = *(_BYTE *)(a1 + 80);
  v16 = *(_BYTE *)(a2 + 81);
  v17 = *(_BYTE *)(a1 + 81);
  v14 = *(unsigned __int8 *)(a2 + 82);
  v15 = *(unsigned __int8 *)(a1 + 82);
  v10 = CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2);
  result = 0;
  if (v10 && v2 == v6 && ((v3 ^ v7) & 1) == 0)
  {
    if ((v5 & 1) != 0)
    {
      if ((v9 & 1) != 0)
        goto LABEL_6;
    }
    else if ((v9 & 1) == 0)
    {
      if ((v4 & 1) != 0)
      {
        if ((v8 & 1) == 0)
          return 0;
      }
      else if ((v8 & 1) != 0 || (sub_190A4768C() & 1) == 0)
      {
        return 0;
      }
LABEL_6:
      if ((v17 & 1) != 0)
      {
        if ((v16 & 1) != 0)
          return v15 ^ v14 ^ 1u;
      }
      else if ((v16 & 1) == 0)
      {
        if ((v13 & 1) != 0)
        {
          if ((v12 & 1) != 0)
            return v15 ^ v14 ^ 1u;
        }
        else if ((v12 & 1) == 0 && (sub_190A4768C() & 1) != 0)
        {
          return v15 ^ v14 ^ 1u;
        }
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_19097BE40()
{
  unint64_t result;

  result = qword_1EE1EACD8;
  if (!qword_1EE1EACD8)
  {
    result = MEMORY[0x19401429C](&unk_190A53A50, &type metadata for ActivityViewEntryMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EACD8);
  }
  return result;
}

unint64_t sub_19097BE84()
{
  unint64_t result;

  result = qword_1EE1E63A0[0];
  if (!qword_1EE1E63A0[0])
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ActivityViewMetrics, &type metadata for ActivityViewMetrics);
    atomic_store(result, qword_1EE1E63A0);
  }
  return result;
}

unint64_t sub_19097BEC8()
{
  unint64_t result;

  result = qword_1EE1E62A0;
  if (!qword_1EE1E62A0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for CodableColor, &type metadata for CodableColor);
    atomic_store(result, (unint64_t *)&qword_1EE1E62A0);
  }
  return result;
}

unint64_t sub_19097BF0C()
{
  unint64_t result;

  result = qword_1EE1E62C8;
  if (!qword_1EE1E62C8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ActivityFamily, &type metadata for ActivityFamily);
    atomic_store(result, (unint64_t *)&qword_1EE1E62C8);
  }
  return result;
}

unint64_t sub_19097BF50()
{
  unint64_t result;

  result = qword_1EE1E69D8;
  if (!qword_1EE1E69D8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ActivityViewMetrics, &type metadata for ActivityViewMetrics);
    atomic_store(result, (unint64_t *)&qword_1EE1E69D8);
  }
  return result;
}

unint64_t sub_19097BF94()
{
  unint64_t result;

  result = qword_1EE1E6988;
  if (!qword_1EE1E6988)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for CodableColor, &type metadata for CodableColor);
    atomic_store(result, (unint64_t *)&qword_1EE1E6988);
  }
  return result;
}

unint64_t sub_19097BFD8()
{
  unint64_t result;

  result = qword_1EE1E6998;
  if (!qword_1EE1E6998)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ActivityFamily, &type metadata for ActivityFamily);
    atomic_store(result, (unint64_t *)&qword_1EE1E6998);
  }
  return result;
}

__n128 __swift_memcpy83_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 79) = *(_DWORD *)(a2 + 79);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityViewEntryMetadata(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 83))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 40);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityViewEntryMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 82) = 0;
    *(_WORD *)(result + 80) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 83) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 83) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityViewEntryMetadata()
{
  return &type metadata for ActivityViewEntryMetadata;
}

uint64_t storeEnumTagSinglePayload for ActivityViewEntryMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_19097C150 + 4 * byte_190A538CA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_19097C184 + 4 * byte_190A538C5[v4]))();
}

uint64_t sub_19097C184(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19097C18C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19097C194);
  return result;
}

uint64_t sub_19097C1A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19097C1A8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_19097C1AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19097C1B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityViewEntryMetadata.CodingKeys()
{
  return &type metadata for ActivityViewEntryMetadata.CodingKeys;
}

unint64_t sub_19097C1D4()
{
  unint64_t result;

  result = qword_1EE1EDD58;
  if (!qword_1EE1EDD58)
  {
    result = MEMORY[0x19401429C](&unk_190A53A28, &type metadata for ActivityViewEntryMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDD58);
  }
  return result;
}

unint64_t sub_19097C21C()
{
  unint64_t result;

  result = qword_1EE1EACE8;
  if (!qword_1EE1EACE8)
  {
    result = MEMORY[0x19401429C](&unk_190A53998, &type metadata for ActivityViewEntryMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EACE8);
  }
  return result;
}

unint64_t sub_19097C264()
{
  unint64_t result;

  result = qword_1EE1EACE0;
  if (!qword_1EE1EACE0)
  {
    result = MEMORY[0x19401429C](&unk_190A539C0, &type metadata for ActivityViewEntryMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EACE0);
  }
  return result;
}

uint64_t sub_19097C2A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7363697274656DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000190A60D20 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000190A62F30 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6C6F4374786574 && a2 == 0xE900000000000072 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6465766968637261 && a2 == 0xEE00796C696D6146)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t ControlAffordances.init(tint:status:actionHint:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  return result;
}

uint64_t destroy for ControlAffordances(uint64_t a1)
{
  uint64_t result;

  result = swift_release();
  if (*(_QWORD *)(a1 + 32))
  {
    sub_19090D1C4(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
    result = swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 64))
  {
    sub_19090D1C4(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ControlAffordances(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 32);
  swift_retain();
  if (!v5)
  {
    v13 = *(_OWORD *)(a2 + 24);
    *v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v13;
    v9 = *(_QWORD *)(a2 + 64);
    if (v9)
      goto LABEL_3;
LABEL_5:
    v14 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v14;
    return a1;
  }
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a2 + 24);
  sub_190950F28(v6, v7, v8);
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  v9 = *(_QWORD *)(a2 + 64);
  if (!v9)
    goto LABEL_5;
LABEL_3:
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_BYTE *)(a2 + 56);
  sub_190950F28(v10, v11, v12);
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 56) = v12;
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ControlAffordances(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  __int128 v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  __int128 v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v6)
    {
      v7 = *(_QWORD *)(a2 + 8);
      v8 = *(_QWORD *)(a2 + 16);
      v9 = *(_BYTE *)(a2 + 24);
      sub_190950F28(v7, v8, v9);
      v10 = *(_QWORD *)(a1 + 8);
      v11 = *(_QWORD *)(a1 + 16);
      v12 = *(_BYTE *)(a1 + 24);
      *(_QWORD *)(a1 + 8) = v7;
      *(_QWORD *)(a1 + 16) = v8;
      *(_BYTE *)(a1 + 24) = v9;
      sub_19090D1C4(v10, v11, v12);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19097C7E8(a1 + 8);
      v16 = *(_OWORD *)(a2 + 24);
      *v4 = *v5;
      *(_OWORD *)(a1 + 24) = v16;
    }
  }
  else if (v6)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v14 = *(_QWORD *)(a2 + 16);
    v15 = *(_BYTE *)(a2 + 24);
    sub_190950F28(v13, v14, v15);
    *(_QWORD *)(a1 + 8) = v13;
    *(_QWORD *)(a1 + 16) = v14;
    *(_BYTE *)(a1 + 24) = v15;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    v17 = *(_OWORD *)(a2 + 24);
    *v4 = *v5;
    *(_OWORD *)(a1 + 24) = v17;
  }
  v18 = (_OWORD *)(a1 + 40);
  v19 = (_OWORD *)(a2 + 40);
  v20 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v20)
    {
      v21 = *(_QWORD *)(a2 + 40);
      v22 = *(_QWORD *)(a2 + 48);
      v23 = *(_BYTE *)(a2 + 56);
      sub_190950F28(v21, v22, v23);
      v24 = *(_QWORD *)(a1 + 40);
      v25 = *(_QWORD *)(a1 + 48);
      v26 = *(_BYTE *)(a1 + 56);
      *(_QWORD *)(a1 + 40) = v21;
      *(_QWORD *)(a1 + 48) = v22;
      *(_BYTE *)(a1 + 56) = v23;
      sub_19090D1C4(v24, v25, v26);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19097C7E8(a1 + 40);
      v30 = *(_OWORD *)(a2 + 56);
      *v18 = *v19;
      *(_OWORD *)(a1 + 56) = v30;
    }
  }
  else if (v20)
  {
    v27 = *(_QWORD *)(a2 + 40);
    v28 = *(_QWORD *)(a2 + 48);
    v29 = *(_BYTE *)(a2 + 56);
    sub_190950F28(v27, v28, v29);
    *(_QWORD *)(a1 + 40) = v27;
    *(_QWORD *)(a1 + 48) = v28;
    *(_BYTE *)(a1 + 56) = v29;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
  }
  else
  {
    v31 = *(_OWORD *)(a2 + 56);
    *v18 = *v19;
    *(_OWORD *)(a1 + 56) = v31;
  }
  return a1;
}

uint64_t sub_19097C7E8(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CDDD78] - 8) + 8))();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ControlAffordances(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  if (*(_QWORD *)(a1 + 32))
  {
    v4 = *(_QWORD *)(a2 + 32);
    if (v4)
    {
      v5 = *(_BYTE *)(a2 + 24);
      v6 = *(_QWORD *)(a1 + 8);
      v7 = *(_QWORD *)(a1 + 16);
      v8 = *(_BYTE *)(a1 + 24);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 24) = v5;
      sub_19090D1C4(v6, v7, v8);
      *(_QWORD *)(a1 + 32) = v4;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_19097C7E8(a1 + 8);
  }
  v9 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v9;
LABEL_6:
  if (!*(_QWORD *)(a1 + 64))
  {
LABEL_10:
    v15 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v15;
    return a1;
  }
  v10 = *(_QWORD *)(a2 + 64);
  if (!v10)
  {
    sub_19097C7E8(a1 + 40);
    goto LABEL_10;
  }
  v11 = *(_BYTE *)(a2 + 56);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_BYTE *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = v11;
  sub_19090D1C4(v12, v13, v14);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlAffordances(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 72))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlAffordances(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlAffordances()
{
  return &type metadata for ControlAffordances;
}

uint64_t sub_19097C9FC()
{
  return swift_initClassMetadata2();
}

void sub_19097CA3C()
{
  sub_190A48130();
  JUMPOUT(0x194013564);
}

void sub_19097CA78()
{
  sub_19097CA3C();
}

uint64_t sub_19097CA84()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AtomicBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AtomicBuffer);
}

uint64_t ActivityWidgetRequest.descriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_descriptor;
  v4 = sub_190A46204();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ActivityWidgetRequest.defaultPayload.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload);
  sub_1908B53B8(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload + 8));
  return v1;
}

uint64_t ActivityWidgetRequest.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1908AF5D8(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_metrics, a1, type metadata accessor for ActivityMetricsDefinition);
}

uint64_t ActivityWidgetRequest.PayloadMetadata.payloadID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActivityWidgetRequest.PayloadMetadata.isStale.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ActivityWidgetRequest.PayloadMetadata.isAlerting.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t ActivityWidgetRequest.payloadMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata + 8);
  v3 = *(_BYTE *)(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata + 16);
  v4 = *(_BYTE *)(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata + 17);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 17) = v4;
  return swift_bridgeObjectRetain();
}

id ActivityWidgetRequest.fileHandle.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_fileHandle);
}

id ActivityWidgetRequest.environment.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v3;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment + 8);
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment);
  a1[1] = v3;
  swift_retain();
  return v3;
}

void ActivityWidgetRequest.archiveVersion.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_archiveVersion);
}

id sub_19097CC14@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;
  void *v5;

  v3 = *a1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment;
  swift_beginAccess();
  v4 = *(void **)v3;
  v5 = *(void **)(v3 + 8);
  *a2 = *(_QWORD *)v3;
  a2[1] = v5;
  return sub_19097CD30(v4, v5);
}

void sub_19097CC68(uint64_t a1, _QWORD *a2)
{
  void *v2;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  void *v6;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = (uint64_t *)(*a2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment);
  swift_beginAccess();
  v5 = *v4;
  v6 = (void *)v4[1];
  *v4 = (uint64_t)v2;
  v4[1] = (uint64_t)v3;
  sub_19097CD30(v2, v3);
  sub_190969C68(v5, v6);
}

id sub_19097CCE0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;

  v3 = v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment;
  swift_beginAccess();
  v4 = *(void **)v3;
  v5 = *(void **)(v3 + 8);
  *a1 = *(_QWORD *)v3;
  a1[1] = v5;
  return sub_19097CD30(v4, v5);
}

id sub_19097CD30(id result, void *a2)
{
  if (result)
  {
    swift_retain();
    return a2;
  }
  return result;
}

void sub_19097CD5C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  void *v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment);
  swift_beginAccess();
  v5 = *v4;
  v6 = (void *)v4[1];
  *v4 = v2;
  v4[1] = v3;
  sub_190969C68(v5, v6);
}

uint64_t (*sub_19097CDB4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_19097CDF8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19097CE34 + 4 * byte_190A53B10[a1]))(0x6D6E6F7269766E65, 0xEB00000000746E65);
}

uint64_t sub_19097CE34()
{
  return 0x646E6148656C6966;
}

uint64_t sub_19097CE50()
{
  return 0x7363697274656DLL;
}

unint64_t sub_19097CE68()
{
  return 0xD000000000000012;
}

uint64_t sub_19097CE88()
{
  return 0x50746C7561666564;
}

uint64_t sub_19097CEAC()
{
  return 0x656C6174537369;
}

uint64_t sub_19097CEC4()
{
  return 0x4964616F6C796170;
}

uint64_t sub_19097CEE0()
{
  return 0x697472656C417369;
}

uint64_t sub_19097CF04()
{
  return 0x5665766968637261;
}

unint64_t sub_19097CF28()
{
  return 0xD000000000000010;
}

uint64_t sub_19097CF44(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19097CF80 + 4 * byte_190A53B1A[a1]))(0x6D6E6F7269766E65, 0xEB00000000746E65);
}

uint64_t sub_19097CF80()
{
  return 0x646E6148656C6966;
}

uint64_t sub_19097CF9C()
{
  return 0x7363697274656DLL;
}

unint64_t sub_19097CFB4()
{
  return 0xD000000000000012;
}

uint64_t sub_19097CFD4()
{
  return 0x50746C7561666564;
}

uint64_t sub_19097CFF8()
{
  return 0x656C6174537369;
}

uint64_t sub_19097D010()
{
  return 0x4964616F6C796170;
}

uint64_t sub_19097D02C()
{
  return 0x697472656C417369;
}

uint64_t sub_19097D050()
{
  return 0x5665766968637261;
}

unint64_t sub_19097D074()
{
  return 0xD000000000000010;
}

uint64_t sub_19097D090(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_19097CDF8(*a1);
  v5 = v4;
  if (v3 == sub_19097CDF8(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_19097D118()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_190A487C0();
  sub_19097CDF8(v1);
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_19097D178()
{
  unsigned __int8 *v0;

  sub_19097CDF8(*v0);
  sub_190A47B18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19097D1B8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_190A487C0();
  sub_19097CDF8(v1);
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_19097D214@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19097F248();
  *a1 = result;
  return result;
}

uint64_t sub_19097D240@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_19097CDF8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_19097D268()
{
  unsigned __int8 *v0;

  return sub_19097CF44(*v0);
}

uint64_t sub_19097D270@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_19097F248();
  *a1 = result;
  return result;
}

uint64_t sub_19097D294()
{
  sub_19098019C();
  return sub_190A48868();
}

uint64_t sub_19097D2BC()
{
  sub_19098019C();
  return sub_190A48874();
}

uint64_t sub_19097D2E4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  __int128 v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6AE0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190983158();
  sub_190A48850();
  LOBYTE(v13) = 0;
  sub_190A46204();
  sub_1908AA2F4(&qword_1EE1E6938, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F670], MEMORY[0x1E0C8F680]);
  sub_190A48640();
  if (!v2)
  {
    v9 = type metadata accessor for ActivityWidgetRequest.CodingProxy(0);
    LOBYTE(v13) = 1;
    type metadata accessor for ActivityMetricsDefinition(0);
    sub_1908AA2F4(&qword_1EE1E6A08, type metadata accessor for ActivityMetricsDefinition, (uint64_t)&protocol conformance descriptor for ActivityMetricsDefinition);
    sub_190A48640();
    v13 = *(_OWORD *)(v3 + *(int *)(v9 + 24));
    v12 = 2;
    sub_19091C084();
    sub_190A48640();
    LOBYTE(v13) = 3;
    sub_190A48604();
    LOBYTE(v13) = 4;
    sub_190A485F8();
    LOBYTE(v13) = 5;
    sub_190A48604();
    LOBYTE(v13) = *(_BYTE *)(v3 + *(int *)(v9 + 40));
    v12 = 6;
    sub_190980244();
    sub_190A485EC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_19097D57C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  __int128 v35;
  char v36;

  v26 = a2;
  v27 = type metadata accessor for ActivityMetricsDefinition(0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_190A46204();
  v28 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v31 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6710);
  v5 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for ActivityWidgetRequest.CodingProxy(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(int *)(v9 + 40);
  v11[v12] = 2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190983158();
  v33 = v7;
  v13 = (uint64_t)v34;
  sub_190A48838();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v14 = (uint64_t)v29;
  v25 = v12;
  v15 = v5;
  v34 = a1;
  v16 = (uint64_t)v11;
  LOBYTE(v35) = 0;
  sub_1908AA2F4((unint64_t *)&unk_1EE1E6020, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F670], MEMORY[0x1E0C8F688]);
  v18 = v30;
  v17 = v31;
  sub_190A48580();
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v16, v17, v18);
  LOBYTE(v35) = 1;
  sub_1908AA2F4(&qword_1EE1E6588, type metadata accessor for ActivityMetricsDefinition, (uint64_t)&protocol conformance descriptor for ActivityMetricsDefinition);
  sub_190A48580();
  sub_1908BD0B4(v14, v16 + v8[5], type metadata accessor for ActivityMetricsDefinition);
  v36 = 2;
  sub_19091BF34();
  sub_190A48580();
  *(_OWORD *)(v16 + v8[6]) = v35;
  LOBYTE(v35) = 3;
  v20 = v32;
  *(_BYTE *)(v16 + v8[7]) = sub_190A48544() & 1;
  LOBYTE(v35) = 4;
  v21 = sub_190A48538();
  v22 = (uint64_t *)(v16 + v8[8]);
  *v22 = v21;
  v22[1] = v23;
  LOBYTE(v35) = 5;
  *(_BYTE *)(v16 + v8[9]) = sub_190A48544() & 1;
  v36 = 6;
  sub_19098319C();
  sub_190A4852C();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v33, v20);
  v24 = v26;
  *(_BYTE *)(v16 + v25) = v35;
  sub_1908AF5D8(v16, v24, type metadata accessor for ActivityWidgetRequest.CodingProxy);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return sub_1908B5150(v16, type metadata accessor for ActivityWidgetRequest.CodingProxy);
}

uint64_t sub_19097DA40()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19097DA78 + 4 * byte_190A53B24[*v0]))(0x7470697263736564, 0xEA0000000000726FLL);
}

uint64_t sub_19097DA78()
{
  return 0x7363697274656DLL;
}

uint64_t sub_19097DA90()
{
  return 0x50746C7561666564;
}

uint64_t sub_19097DAB4()
{
  return 0x656C6174537369;
}

uint64_t sub_19097DACC()
{
  return 0x4964616F6C796170;
}

uint64_t sub_19097DAE8()
{
  return 0x697472656C417369;
}

uint64_t sub_19097DB04()
{
  return 0x5665766968637261;
}

uint64_t sub_19097DB28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19097F290(a1, a2);
  *a3 = result;
  return result;
}

void sub_19097DB4C(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_19097DB58()
{
  sub_190983158();
  return sub_190A48868();
}

uint64_t sub_19097DB80()
{
  sub_190983158();
  return sub_190A48874();
}

uint64_t sub_19097DBA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19097D57C(a1, a2);
}

uint64_t sub_19097DBBC(_QWORD *a1)
{
  return sub_19097D2E4(a1);
}

id ActivityWidgetRequest.__allocating_init(descriptor:metrics:defaultPayload:fileHandle:environment:isStale:payloadID:archiveVersion:isAlerting:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6, char a7, uint64_t a8, uint64_t a9, char *a10, char a11)
{
  objc_class *v11;
  id v18;

  v18 = objc_allocWithZone(v11);
  return ActivityWidgetRequest.init(descriptor:metrics:defaultPayload:fileHandle:environment:isStale:payloadID:archiveVersion:isAlerting:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

id ActivityWidgetRequest.init(descriptor:metrics:defaultPayload:fileHandle:environment:isStale:payloadID:archiveVersion:isAlerting:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6, char a7, uint64_t a8, uint64_t a9, char *a10, char a11)
{
  _BYTE *v11;
  char v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  id v24;
  __int128 v26;
  objc_super v30;

  v17 = *a10;
  v18 = &v11[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment];
  *v18 = 0;
  v18[1] = 0;
  v19 = &v11[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_descriptor];
  v20 = sub_190A46204();
  v21 = *(_QWORD *)(v20 - 8);
  v26 = *a6;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, a1, v20);
  sub_1908AF5D8(a2, (uint64_t)&v11[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_metrics], type metadata accessor for ActivityMetricsDefinition);
  v22 = &v11[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload];
  *v22 = a3;
  v22[1] = a4;
  *(_QWORD *)&v11[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_fileHandle] = a5;
  *(_OWORD *)&v11[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment] = v26;
  v11[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_archiveVersion] = v17;
  v23 = &v11[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata];
  *(_QWORD *)v23 = a8;
  *((_QWORD *)v23 + 1) = a9;
  v23[16] = a7;
  v23[17] = a11;
  v30.receiver = v11;
  v30.super_class = (Class)type metadata accessor for ActivityWidgetRequest(0);
  v24 = objc_msgSendSuper2(&v30, sel_init);
  sub_1908B5150(a2, type metadata accessor for ActivityMetricsDefinition);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a1, v20);
  return v24;
}

uint64_t type metadata accessor for ActivityWidgetRequest(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1ECF6D050);
}

id ActivityWidgetRequest.__allocating_init(descriptor:metrics:defaultPayload:fileHandle:environment:jindoEnvironment:isStale:payloadID:archiveVersion:isAlerting:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, __int128 *a6, uint64_t *a7, char a8, __int128 a9, char *a10, char a11)
{
  objc_class *v11;
  id v19;
  id v20;

  v19 = objc_allocWithZone(v11);
  v20 = sub_19097F5DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, *((uint64_t *)&a9 + 1), a10, a11);

  sub_1908B53FC(a3, a4);
  return v20;
}

id ActivityWidgetRequest.init(descriptor:metrics:defaultPayload:fileHandle:environment:jindoEnvironment:isStale:payloadID:archiveVersion:isAlerting:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, __int128 *a6, uint64_t *a7, char a8, uint64_t a9, uint64_t a10, char *a11, char a12)
{
  id v15;

  v15 = sub_19097F5DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);

  sub_1908B53FC(a3, a4);
  return v15;
}

char *ActivityWidgetRequest.__allocating_init(from:)(_QWORD *a1)
{
  return sub_19097F7F8(a1);
}

uint64_t sub_19097DF4C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  __int128 *v10;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v3 = v1;
  v24 = *MEMORY[0x1E0C80C00];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDDF0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19098019C();
  sub_190A48850();
  v23 = *(_OWORD *)(v3 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment);
  LOBYTE(v22) = 0;
  sub_19091BFBC();
  sub_190A48640();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(v23) = 2;
  type metadata accessor for ActivityMetricsDefinition(0);
  sub_1908AA2F4(&qword_1EE1E6A08, type metadata accessor for ActivityMetricsDefinition, (uint64_t)&protocol conformance descriptor for ActivityMetricsDefinition);
  sub_190A48640();
  v23 = *(_OWORD *)(v3 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload);
  LOBYTE(v22) = 4;
  sub_19091C084();
  sub_190A48640();
  LOBYTE(v23) = 3;
  sub_190A46204();
  sub_1908AA2F4(&qword_1EE1E6938, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F670], MEMORY[0x1E0C8F680]);
  sub_190A48640();
  LOBYTE(v23) = 5;
  sub_190A48604();
  LOBYTE(v23) = 7;
  sub_190A48604();
  v9 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_archiveVersion);
  if (v9 != 2)
  {
    LOBYTE(v23) = v9 & 1;
    LOBYTE(v22) = 8;
    sub_190980244();
    sub_190A48640();
  }
  v10 = (__int128 *)(v3 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment);
  swift_beginAccess();
  v22 = *v10;
  v21 = 9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE00);
  sub_1909801E0();
  sub_190A48640();
  v12 = (void *)objc_opt_self();
  v13 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_fileHandle);
  *(_QWORD *)&v22 = 0;
  v14 = objc_msgSend(v12, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v13, 1, &v22);
  v15 = (id)v22;
  if (!v14)
  {
    v19 = v15;
    sub_190A45F58();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v16 = sub_190A46000();
  v18 = v17;

  *(_QWORD *)&v22 = v16;
  *((_QWORD *)&v22 + 1) = v18;
  v21 = 1;
  sub_190A48640();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_1908B53FC(v16, v18);
}

char *ActivityWidgetRequest.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ActivityWidgetRequest.init(coder:)(a1);
}

char *ActivityWidgetRequest.init(coder:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  unsigned int v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _DWORD *v41;
  char v42;
  objc_class *v43;
  _BYTE *v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  void *v50;
  uint64_t *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  id v59;
  _DWORD *v60;
  id v61;
  uint64_t *v62;
  uint64_t v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  unsigned int v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  objc_super v83;

  v3 = type metadata accessor for ActivityMetricsDefinition(0);
  MEMORY[0x1E0C80A78](v3);
  v81 = (uint64_t)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_190A46204();
  v79 = *(_QWORD *)(v5 - 8);
  v80 = v5;
  MEMORY[0x1E0C80A78](v5);
  v78 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1E6208);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for ActivityWidgetRequest.CodingProxy(0);
  v11 = *((_QWORD *)v10 - 1);
  MEMORY[0x1E0C80A78](v10);
  v82 = (uint64_t)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for WidgetEnvironment.Storage();
  v14 = v1;
  v76 = v13;
  v15 = (void *)sub_190A48088();
  sub_1908AB890(0, (unint64_t *)&unk_1ECF6D060);
  v16 = (void *)sub_190A48088();
  v17 = (void *)sub_190A47AC4();
  v77 = objc_msgSend(a1, sel_decodeBoolForKey_, v17);

  v18 = (void *)sub_190A47AC4();
  v19 = objc_msgSend(a1, sel_decodeBoolForKey_, v18);

  sub_1908AB890(0, (unint64_t *)&qword_1ECF6C7D0);
  v20 = sub_190A48088();
  if (!v20)
    goto LABEL_5;
  v21 = (void *)v20;
  v73 = sub_190A47ADC();
  v23 = v22;

  sub_1908AB890(0, &qword_1ECF6D310);
  v24 = sub_190A48088();
  if (!v24)
  {
    swift_bridgeObjectRelease();
LABEL_5:

LABEL_6:
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v25 = (void *)v24;
  v74 = v23;
  v75 = v15;
  v72 = v19;
  v26 = sub_190A46000();
  v28 = v27;

  sub_190A45F10();
  swift_allocObject();
  v29 = sub_190A45F04();
  sub_1908AA2F4((unint64_t *)&unk_1EE1E61F8, type metadata accessor for ActivityWidgetRequest.CodingProxy, (uint64_t)&unk_190A53DAC);
  sub_190A45EEC();
  v70 = v29;
  v71 = v26;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v11 + 56))(v9, 0, 1, v10);
  v32 = v82;
  sub_1908BD0B4((uint64_t)v9, v82, type metadata accessor for ActivityWidgetRequest.CodingProxy);
  v33 = v75;
  if (!v75)
  {
    swift_release();
    swift_bridgeObjectRelease();

    sub_1908B53FC(v71, v28);
    v33 = v14;
LABEL_14:

    sub_1908B5150(v32, type metadata accessor for ActivityWidgetRequest.CodingProxy);
    goto LABEL_6;
  }
  if (!v16)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_1908B53FC(v71, v28);

    a1 = v14;
    goto LABEL_14;
  }
  v69 = v28;
  v34 = v16;
  v35 = v33;

  v36 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
  v36(v78, v32, v80);
  sub_1908AF5D8(v32 + v10[5], v81, type metadata accessor for ActivityMetricsDefinition);
  v37 = (uint64_t *)(v32 + v10[6]);
  v38 = v37[1];
  v67 = *v37;
  v39 = v67;
  v66 = type metadata accessor for UnfairLock();
  v40 = swift_allocObject();
  v68 = v34;
  v75 = v35;
  sub_1908B53B8(v39, v38);
  v41 = (_DWORD *)swift_slowAlloc();
  *v41 = 0;
  *(_QWORD *)(v40 + 16) = v41;
  v42 = *(_BYTE *)(v32 + v10[10]);
  v43 = (objc_class *)type metadata accessor for ActivityWidgetRequest(0);
  v44 = objc_allocWithZone(v43);
  v45 = &v44[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment];
  *v45 = 0;
  v45[1] = 0;
  v46 = v78;
  v47 = v80;
  v36(&v44[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_descriptor], (uint64_t)v78, v80);
  v48 = v81;
  sub_1908AF5D8(v81, (uint64_t)&v44[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_metrics], type metadata accessor for ActivityMetricsDefinition);
  v49 = (uint64_t *)&v44[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload];
  *v49 = v67;
  v49[1] = v38;
  v50 = v68;
  *(_QWORD *)&v44[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_fileHandle] = v68;
  v51 = (uint64_t *)&v44[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment];
  v52 = (uint64_t)v75;
  *v51 = v40;
  v51[1] = v52;
  v44[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_archiveVersion] = v42;
  v53 = &v44[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata];
  v54 = v74;
  *(_QWORD *)v53 = v73;
  *((_QWORD *)v53 + 1) = v54;
  v53[16] = v77;
  v53[17] = v72;
  v83.receiver = v44;
  v83.super_class = v43;
  v55 = objc_msgSendSuper2(&v83, sel_init);
  sub_1908B5150(v48, type metadata accessor for ActivityMetricsDefinition);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v46, v47);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  v30 = (char *)v55;
  v56 = sub_190A48088();
  if (v56)
  {
    v57 = (void *)v56;
    v58 = swift_allocObject();
    v59 = v57;
    v60 = (_DWORD *)swift_slowAlloc();
    *v60 = 0;
    *(_QWORD *)(v58 + 16) = v60;
    swift_release();
    sub_1908B53FC(v71, v69);

    v61 = v75;
    sub_1908B5150(v82, type metadata accessor for ActivityWidgetRequest.CodingProxy);
    v62 = (uint64_t *)&v30[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment];
    swift_beginAccess();
    v63 = *v62;
    v64 = (void *)v62[1];
    *v62 = v58;
    v62[1] = (uint64_t)v57;
    sub_190969C68(v63, v64);
  }
  else
  {
    swift_release();
    v65 = v75;

    sub_1908B53FC(v71, v69);
    sub_1908B5150(v82, type metadata accessor for ActivityWidgetRequest.CodingProxy);
  }
  return v30;
}

uint64_t sub_19097EB88(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  os_unfair_lock_s *v10;
  id v11;
  os_unfair_lock_s *v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  _QWORD *v39;
  void *v40;
  os_unfair_lock_s *v41;
  os_unfair_lock_s *v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v47;
  int v48;

  v2 = v1;
  v4 = (int *)type metadata accessor for ActivityWidgetRequest.CodingProxy(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment;
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment);
  v9 = *(void **)(v7 + 8);
  v10 = *(os_unfair_lock_s **)(v8 + 16);
  swift_retain_n();
  v11 = v9;
  os_unfair_lock_lock(v10);
  v12 = *(os_unfair_lock_s **)(v8 + 16);
  v13 = v11;
  os_unfair_lock_unlock(v12);

  swift_release_n();
  v14 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v13, v14);

  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_fileHandle);
  v16 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v15, v16);

  v17 = (uint64_t *)(v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata);
  v18 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata + 16);
  v48 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata + 16);
  v19 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeBool_forKey_, v18, v19);

  v21 = *v17;
  v20 = v17[1];
  v22 = (void *)sub_190A47AC4();
  v23 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v22, v23);

  v24 = *((unsigned __int8 *)v17 + 17);
  v25 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeBool_forKey_, v24, v25);

  sub_190A45F40();
  swift_allocObject();
  sub_190A45F34();
  sub_190A45F1C();
  v26 = v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_descriptor;
  v27 = sub_190A46204();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v6, v26, v27);
  sub_1908AF5D8(v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_metrics, (uint64_t)&v6[v4[5]], type metadata accessor for ActivityMetricsDefinition);
  v28 = *(_BYTE *)(v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_archiveVersion);
  v29 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload);
  v30 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload + 8);
  v31 = (uint64_t *)&v6[v4[6]];
  *v31 = v29;
  v31[1] = v30;
  v6[v4[7]] = v48;
  v32 = &v6[v4[8]];
  *(_QWORD *)v32 = v21;
  *((_QWORD *)v32 + 1) = v20;
  v6[v4[9]] = v24;
  v6[v4[10]] = v28;
  sub_1908B53B8(v29, v30);
  sub_1908AA2F4(&qword_1EE1E6960, type metadata accessor for ActivityWidgetRequest.CodingProxy, (uint64_t)&unk_190A53D84);
  swift_bridgeObjectRetain();
  v33 = sub_190A45F28();
  v35 = v34;
  sub_1908B5150((uint64_t)v6, type metadata accessor for ActivityWidgetRequest.CodingProxy);
  v36 = (void *)sub_190A45FE8();
  v37 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v36, v37);

  v38 = v2 + OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment;
  swift_beginAccess();
  v39 = *(_QWORD **)v38;
  if (*(_QWORD *)v38)
  {
    v40 = *(void **)(v38 + 8);
    v41 = (os_unfair_lock_s *)v39[2];
    sub_19097CD30(v39, v40);
    swift_retain();
    os_unfair_lock_lock(v41);
    v42 = (os_unfair_lock_s *)v39[2];
    v43 = v40;
    os_unfair_lock_unlock(v42);
    swift_release();
    sub_190969C68((uint64_t)v39, v40);
    v44 = v43;
    v45 = (void *)sub_190A47AC4();
    objc_msgSend(a1, sel_encodeObject_forKey_, v44, v45);
    sub_1908B53FC(v33, v35);

  }
  else
  {
    sub_1908B53FC(v33, v35);
  }
  return swift_release();
}

id ActivityWidgetRequest.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ActivityWidgetRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ActivityWidgetRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityWidgetRequest(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *sub_19097F200@<X0>(_QWORD *a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;
  char *result;

  result = sub_19097F7F8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_19097F228(_QWORD *a1)
{
  return sub_19097DF4C(a1);
}

uint64_t sub_19097F248()
{
  unint64_t v0;

  v0 = sub_190A484F0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

uint64_t sub_19097F290(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x7470697263736564 && a2 == 0xEA0000000000726FLL || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7363697274656DLL && a2 == 0xE700000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x50746C7561666564 && a2 == 0xEE0064616F6C7961 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C6174537369 && a2 == 0xE700000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4964616F6C796170 && a2 == 0xE900000000000044 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x697472656C417369 && a2 == 0xEA0000000000676ELL || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x5665766968637261 && a2 == 0xEE006E6F69737265)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

id sub_19097F5DC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, __int128 *a6, uint64_t *a7, char a8, uint64_t a9, uint64_t a10, char *a11, char a12)
{
  char *v12;
  uint64_t v19;
  uint64_t *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  char *v28;
  id v29;
  uint64_t v30;
  void *v31;
  char *v32;
  id v33;
  __int128 v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  objc_super v40;
  __int128 v41;

  v19 = *a7;
  v36 = a7[1];
  v37 = *a11;
  v20 = (uint64_t *)&v12[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment];
  *v20 = 0;
  v20[1] = 0;
  v21 = &v12[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_descriptor];
  v22 = sub_190A46204();
  v38 = *(_QWORD *)(v22 - 8);
  v35 = *a6;
  v23 = v21;
  v24 = a1;
  v25 = a2;
  v26 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v23, v24, v22);
  sub_1908AF5D8(v25, (uint64_t)&v12[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_metrics], type metadata accessor for ActivityMetricsDefinition);
  v27 = (uint64_t *)&v12[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload];
  *v27 = a3;
  v27[1] = a4;
  *(_QWORD *)&v12[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_fileHandle] = a5;
  v41 = v35;
  v28 = v12;
  v29 = a5;
  sub_1908B53B8(a3, a4);
  WidgetEnvironment.filterForExtensions()();
  *(_OWORD *)&v28[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment] = v35;
  if (v19)
  {
    *(_QWORD *)&v41 = v19;
    *((_QWORD *)&v41 + 1) = v36;
    WidgetEnvironment.filterForExtensions()();
  }
  swift_beginAccess();
  v30 = *v20;
  v31 = (void *)v20[1];
  *v20 = v19;
  v20[1] = v36;
  sub_190969C68(v30, v31);
  v28[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_archiveVersion] = v37;
  v32 = &v28[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata];
  *(_QWORD *)v32 = a9;
  *((_QWORD *)v32 + 1) = a10;
  v32[16] = a8 & 1;
  v32[17] = a12 & 1;

  v40.receiver = v28;
  v40.super_class = (Class)type metadata accessor for ActivityWidgetRequest(0);
  v33 = objc_msgSendSuper2(&v40, sel_init);
  sub_1908B5150(v25, type metadata accessor for ActivityMetricsDefinition);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v24, v26);
  return v33;
}

char *sub_19097F7F8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  objc_class *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  void *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  id v40;
  char *v41;
  uint64_t v42;
  id v43;
  id v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  Class v50;
  void *v51;
  void *v52;
  uint64_t *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int v59;
  unint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void *v66;
  id v67;
  unint64_t v68;
  uint64_t v69;
  Class v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  void *v78;
  void *v79;
  objc_super v80;
  int v81;
  char v82;

  v73 = sub_190A46204();
  v71 = *(_QWORD *)(v73 - 8);
  v2 = MEMORY[0x1E0C80A78](v73);
  v74 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v72 = (char *)&v56 - v4;
  v5 = type metadata accessor for ActivityMetricsDefinition(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v75 = (uint64_t)&v56 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE38);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (char *)a1[3];
  v76 = a1;
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v14);
  v15 = (objc_class *)sub_19098019C();
  v16 = (uint64_t)v77;
  sub_190A48838();
  if (!v16)
  {
    v70 = v15;
    v77 = v8;
    v14 = v74;
    v17 = v11;
    LOBYTE(v78) = 2;
    sub_1908AA2F4(&qword_1EE1E6588, type metadata accessor for ActivityMetricsDefinition, (uint64_t)&protocol conformance descriptor for ActivityMetricsDefinition);
    sub_190A48580();
    v82 = 0;
    v18 = sub_19091BE58();
    sub_190A48580();
    v68 = v18;
    v69 = v17;
    v19 = v78;
    v20 = v79;
    v82 = 4;
    v21 = sub_19091BF34();
    sub_190A48580();
    v65 = (char *)v21;
    v66 = v19;
    v67 = v20;
    v23 = (uint64_t)v78;
    v22 = (unint64_t)v79;
    LOBYTE(v78) = 5;
    v81 = sub_190A48544();
    v64 = v23;
    LOBYTE(v78) = 6;
    v62 = sub_190A48538();
    v63 = v24;
    LOBYTE(v78) = 7;
    v61 = sub_190A48544();
    v82 = 8;
    sub_19098319C();
    sub_190A4852C();
    v60 = v22;
    v59 = v78;
    LOBYTE(v78) = 3;
    sub_1908AA2F4((unint64_t *)&unk_1EE1E6020, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F670], MEMORY[0x1E0C8F688]);
    sub_190A48580();
    v82 = 1;
    sub_190A48580();
    v65 = v13;
    v69 = v10;
    v27 = (uint64_t)v78;
    v26 = (unint64_t)v79;
    sub_1908AB890(0, (unint64_t *)&unk_1ECF6A620);
    sub_1908AB890(0, (unint64_t *)&unk_1ECF6D060);
    v57 = v27;
    v58 = v26;
    v28 = sub_190A47FB0();
    v29 = (void *)v28;
    if (v28)
    {
      v30 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
      v31 = v14;
      v32 = v73;
      v30(v14, v72, v73);
      v33 = (uint64_t)v77;
      sub_1908AF5D8(v75, (uint64_t)v77, type metadata accessor for ActivityMetricsDefinition);
      v70 = (Class)type metadata accessor for ActivityWidgetRequest(0);
      v34 = objc_allocWithZone(v70);
      v35 = &v34[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment];
      *v35 = 0;
      v35[1] = 0;
      v30(&v34[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_descriptor], v31, v32);
      sub_1908AF5D8(v33, (uint64_t)&v34[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_metrics], type metadata accessor for ActivityMetricsDefinition);
      v36 = &v34[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_defaultPayload];
      v37 = v64;
      v38 = v60;
      *v36 = v64;
      v36[1] = v38;
      *(_QWORD *)&v34[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_fileHandle] = v29;
      v39 = &v34[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_environment];
      v40 = v67;
      *v39 = v66;
      v39[1] = v40;
      v34[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_archiveVersion] = v59;
      v41 = &v34[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_payloadMetadata];
      v42 = v63;
      *(_QWORD *)v41 = v62;
      *((_QWORD *)v41 + 1) = v42;
      v41[16] = v81 & 1;
      v41[17] = v61 & 1;
      sub_1908B53B8(v37, v38);
      v80.receiver = v34;
      v80.super_class = v70;
      v70 = v29;
      swift_retain();
      v43 = v40;
      v44 = objc_msgSendSuper2(&v80, sel_init);
      sub_1908B5150(v33, type metadata accessor for ActivityMetricsDefinition);
      v45 = *(void (**)(char *, uint64_t))(v71 + 8);
      v45(v74, v32);
      v82 = 9;
      v14 = (char *)v44;
      sub_190A4852C();
      sub_1908B53FC(v57, v58);

      swift_release();
      sub_1908B53FC(v64, v60);
      v45(v72, v73);
      sub_1908B5150(v75, type metadata accessor for ActivityMetricsDefinition);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v65, v69);
      v51 = v78;
      v52 = v79;
      v53 = (uint64_t *)&v14[OBJC_IVAR____TtC9WidgetKit21ActivityWidgetRequest_jindoEnvironment];
      swift_beginAccess();
      v54 = *v53;
      v55 = (void *)v53[1];
      *v53 = (uint64_t)v51;
      v53[1] = (uint64_t)v52;
      sub_19097CD30(v51, v52);
      sub_190969C68(v54, v55);

      sub_190969C68((uint64_t)v51, v52);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
      return v14;
    }
    swift_bridgeObjectRelease();
    v46 = sub_190A4831C();
    swift_allocError();
    v48 = v47;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90);
    *v48 = sub_1908AB890(0, (unint64_t *)&qword_1ECF6BF60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE40);
    v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_190A4A350;
    v50 = v70;
    *(_QWORD *)(v49 + 56) = &type metadata for ActivityWidgetRequest.CodingKeys;
    *(_QWORD *)(v49 + 64) = v50;
    *(_BYTE *)(v49 + 32) = 1;
    sub_190A48304();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v46 - 8) + 104))(v48, *MEMORY[0x1E0DEC460], v46);
    swift_willThrow();
    sub_1908B53FC(v57, v58);

    swift_release();
    sub_1908B53FC(v64, v60);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
    sub_1908B5150(v75, type metadata accessor for ActivityMetricsDefinition);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v65, v69);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
  return v14;
}

unint64_t sub_19098019C()
{
  unint64_t result;

  result = qword_1EE1EDDF8;
  if (!qword_1EE1EDDF8)
  {
    result = MEMORY[0x19401429C](&unk_190A53DD4, &type metadata for ActivityWidgetRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDDF8);
  }
  return result;
}

unint64_t sub_1909801E0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EE1EDE08;
  if (!qword_1EE1EDE08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EDE00);
    v2 = sub_19091BFBC();
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EDE08);
  }
  return result;
}

unint64_t sub_190980244()
{
  unint64_t result;

  result = qword_1EE1EA6A0;
  if (!qword_1EE1EA6A0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ArchiveVersion, &type metadata for ArchiveVersion);
    atomic_store(result, (unint64_t *)&qword_1EE1EA6A0);
  }
  return result;
}

uint64_t type metadata accessor for ActivityWidgetRequest.CodingProxy(uint64_t a1)
{
  return sub_1908B0210(a1, qword_1EE1EA838);
}

uint64_t sub_19098029C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1E6208);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1909802E4()
{
  return type metadata accessor for ActivityWidgetRequest(0);
}

uint64_t sub_1909802EC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_190A46204();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ActivityMetricsDefinition(319);
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for ActivityWidgetRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static ActivityWidgetRequest.supportsSecureCoding.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ActivityWidgetRequest.jindoEnvironment.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ActivityWidgetRequest.jindoEnvironment.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ActivityWidgetRequest.jindoEnvironment.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ActivityWidgetRequest.__allocating_init(descriptor:metrics:defaultPayload:fileHandle:environment:isStale:payloadID:archiveVersion:isAlerting:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of ActivityWidgetRequest.__allocating_init(descriptor:metrics:defaultPayload:fileHandle:environment:jindoEnvironment:isStale:payloadID:archiveVersion:isAlerting:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of ActivityWidgetRequest.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of ActivityWidgetRequest.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ActivityWidgetRequest.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of ActivityWidgetRequest.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t sub_1909804B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActivityWidgetRequest.PayloadMetadata(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ActivityWidgetRequest.PayloadMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityWidgetRequest.PayloadMetadata(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 18))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityWidgetRequest.PayloadMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityWidgetRequest.PayloadMetadata()
{
  return &type metadata for ActivityWidgetRequest.PayloadMetadata;
}

_QWORD *sub_190980638(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(char *, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_190A46204();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_OWORD *)v9 = *(_OWORD *)((char *)a2 + v8);
    v9[16] = *((_BYTE *)a2 + v8 + 16);
    *(_OWORD *)(v9 + 24) = *(_OWORD *)((char *)a2 + v8 + 24);
    v9[40] = *((_BYTE *)a2 + v8 + 40);
    *((_QWORD *)v9 + 6) = *(_QWORD *)((char *)a2 + v8 + 48);
    *(_OWORD *)(v9 + 56) = *(_OWORD *)((char *)a2 + v8 + 56);
    *(_OWORD *)(v9 + 72) = *(_OWORD *)((char *)a2 + v8 + 72);
    v9[88] = *((_BYTE *)a2 + v8 + 88);
    *((_OWORD *)v9 + 6) = *(_OWORD *)((char *)a2 + v8 + 96);
    v11 = type metadata accessor for MetricsRequest(0);
    v12 = *(int *)(v11 + 40);
    v13 = &v9[v12];
    v14 = &v10[v12];
    v15 = sub_190A46EE8();
    v16 = *(_QWORD *)(v15 - 8);
    v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    if (v68(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v19 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
    v20 = &v9[v19];
    v21 = &v10[v19];
    v22 = (int *)type metadata accessor for JindoMetricsDefinition(0);
    v23 = *((_QWORD *)v22 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v66 = v23;
      v67 = v16;
      *(_OWORD *)v20 = *(_OWORD *)v21;
      v25 = v22[5];
      v26 = &v20[v25];
      v27 = &v21[v25];
      v26[16] = v27[16];
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *(_OWORD *)(v26 + 24) = *(_OWORD *)(v27 + 24);
      v26[40] = v27[40];
      *((_QWORD *)v26 + 6) = *((_QWORD *)v27 + 6);
      *(_OWORD *)(v26 + 56) = *(_OWORD *)(v27 + 56);
      *(_OWORD *)(v26 + 72) = *(_OWORD *)(v27 + 72);
      v26[88] = v27[88];
      *((_OWORD *)v26 + 6) = *((_OWORD *)v27 + 6);
      v28 = *(int *)(v11 + 40);
      v29 = &v26[v28];
      v30 = &v27[v28];
      if (v68(&v27[v28], 1, v15))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v29, v30, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v29, 0, 1, v15);
      }
      v32 = v22[6];
      v33 = &v20[v32];
      v34 = &v21[v32];
      *(_OWORD *)v33 = *(_OWORD *)v34;
      v33[16] = v34[16];
      *(_OWORD *)(v33 + 24) = *(_OWORD *)(v34 + 24);
      v33[40] = v34[40];
      *((_QWORD *)v33 + 6) = *((_QWORD *)v34 + 6);
      *(_OWORD *)(v33 + 56) = *(_OWORD *)(v34 + 56);
      *(_OWORD *)(v33 + 72) = *(_OWORD *)(v34 + 72);
      v33[88] = v34[88];
      *((_OWORD *)v33 + 6) = *((_OWORD *)v34 + 6);
      v35 = *(int *)(v11 + 40);
      v36 = &v33[v35];
      v37 = &v34[v35];
      if (v68(&v34[v35], 1, v15))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v36, v37, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v36, 0, 1, v15);
      }
      v39 = v22[7];
      v40 = &v20[v39];
      v41 = &v21[v39];
      *(_OWORD *)v40 = *(_OWORD *)v41;
      v40[16] = v41[16];
      *(_OWORD *)(v40 + 24) = *(_OWORD *)(v41 + 24);
      v40[40] = v41[40];
      *((_QWORD *)v40 + 6) = *((_QWORD *)v41 + 6);
      *(_OWORD *)(v40 + 56) = *(_OWORD *)(v41 + 56);
      *(_OWORD *)(v40 + 72) = *(_OWORD *)(v41 + 72);
      v40[88] = v41[88];
      *((_OWORD *)v40 + 6) = *((_OWORD *)v41 + 6);
      v42 = *(int *)(v11 + 40);
      v43 = &v40[v42];
      v44 = &v41[v42];
      if (v68(&v41[v42], 1, v15))
      {
        v45 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        v46 = v67;
      }
      else
      {
        v47 = v44;
        v46 = v67;
        (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v43, v47, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v43, 0, 1, v15);
      }
      v48 = v22[8];
      v49 = &v20[v48];
      v50 = &v21[v48];
      *(_OWORD *)v49 = *(_OWORD *)v50;
      v49[16] = v50[16];
      *(_OWORD *)(v49 + 24) = *(_OWORD *)(v50 + 24);
      v49[40] = v50[40];
      *((_QWORD *)v49 + 6) = *((_QWORD *)v50 + 6);
      *(_OWORD *)(v49 + 56) = *(_OWORD *)(v50 + 56);
      *(_OWORD *)(v49 + 72) = *(_OWORD *)(v50 + 72);
      v49[88] = v50[88];
      *((_OWORD *)v49 + 6) = *((_OWORD *)v50 + 6);
      v51 = *(int *)(v11 + 40);
      v52 = &v49[v51];
      v53 = &v50[v51];
      if (v68(&v50[v51], 1, v15))
      {
        v54 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v52, v53, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v52, 0, 1, v15);
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v66 + 56))(v20, 0, 1, v22);
    }
    v55 = a3[6];
    v56 = (_QWORD *)((char *)a1 + v55);
    v57 = (_QWORD *)((char *)a2 + v55);
    v58 = *v57;
    v59 = v57[1];
    sub_1908B53B8(*v57, v59);
    *v56 = v58;
    v56[1] = v59;
    v60 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v61 = (_QWORD *)((char *)a1 + v60);
    v62 = (_QWORD *)((char *)a2 + v60);
    v63 = v62[1];
    *v61 = *v62;
    v61[1] = v63;
    v64 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)a1 + v64) = *((_BYTE *)a2 + v64);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_190980BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_190A46204();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for MetricsRequest(0);
  v7 = v5 + *(int *)(v6 + 40);
  v8 = sub_190A46EE8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v11 = v5 + *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v12 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v12 - 1) + 48))(v11, 1, v12))
  {
    v13 = *(int *)(v6 + 40);
    v14 = v11 + v12[5] + v13;
    if (!v10(v14, 1, v8))
    {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v8);
      v13 = *(int *)(v6 + 40);
    }
    v15 = v11 + v12[6] + v13;
    if (!v10(v15, 1, v8))
    {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v8);
      v13 = *(int *)(v6 + 40);
    }
    v16 = v11 + v12[7] + v13;
    if (!v10(v16, 1, v8))
    {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v16, v8);
      v13 = *(int *)(v6 + 40);
    }
    v17 = v11 + v12[8] + v13;
    if (!v10(v17, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v17, v8);
  }
  sub_1908B53FC(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8));
  return swift_bridgeObjectRelease();
}

uint64_t sub_190980DB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  unsigned int (*v66)(const void *, uint64_t, uint64_t);

  v6 = sub_190A46204();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(a2 + v7 + 16);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(_BYTE *)(v8 + 40) = *(_BYTE *)(a2 + v7 + 40);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(a2 + v7 + 48);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(a2 + v7 + 56);
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(a2 + v7 + 72);
  *(_BYTE *)(v8 + 88) = *(_BYTE *)(a2 + v7 + 88);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(a2 + v7 + 96);
  v10 = type metadata accessor for MetricsRequest(0);
  v11 = *(int *)(v10 + 40);
  v12 = (void *)(v8 + v11);
  v13 = (const void *)(v9 + v11);
  v14 = sub_190A46EE8();
  v15 = *(_QWORD *)(v14 - 8);
  v66 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  if (v66(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v18 = (_OWORD *)(v8 + v17);
  v19 = (_OWORD *)(v9 + v17);
  v20 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v21 = *((_QWORD *)v20 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v64 = v21;
    v65 = v15;
    *v18 = *v19;
    v23 = v20[5];
    v24 = (char *)v18 + v23;
    v25 = (char *)v19 + v23;
    v24[16] = v25[16];
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 24) = *(_OWORD *)(v25 + 24);
    v24[40] = v25[40];
    *((_QWORD *)v24 + 6) = *((_QWORD *)v25 + 6);
    *(_OWORD *)(v24 + 56) = *(_OWORD *)(v25 + 56);
    *(_OWORD *)(v24 + 72) = *(_OWORD *)(v25 + 72);
    v24[88] = v25[88];
    *((_OWORD *)v24 + 6) = *((_OWORD *)v25 + 6);
    v26 = *(int *)(v10 + 40);
    v27 = &v24[v26];
    v28 = &v25[v26];
    if (v66(&v25[v26], 1, v14))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v27, v28, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v27, 0, 1, v14);
    }
    v30 = v20[6];
    v31 = (char *)v18 + v30;
    v32 = (char *)v19 + v30;
    *(_OWORD *)v31 = *(_OWORD *)v32;
    v31[16] = v32[16];
    *(_OWORD *)(v31 + 24) = *(_OWORD *)(v32 + 24);
    v31[40] = v32[40];
    *((_QWORD *)v31 + 6) = *((_QWORD *)v32 + 6);
    *(_OWORD *)(v31 + 56) = *(_OWORD *)(v32 + 56);
    *(_OWORD *)(v31 + 72) = *(_OWORD *)(v32 + 72);
    v31[88] = v32[88];
    *((_OWORD *)v31 + 6) = *((_OWORD *)v32 + 6);
    v33 = *(int *)(v10 + 40);
    v34 = &v31[v33];
    v35 = &v32[v33];
    if (v66(&v32[v33], 1, v14))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v34, v35, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v34, 0, 1, v14);
    }
    v37 = v20[7];
    v38 = (char *)v18 + v37;
    v39 = (char *)v19 + v37;
    *(_OWORD *)v38 = *(_OWORD *)v39;
    v38[16] = v39[16];
    *(_OWORD *)(v38 + 24) = *(_OWORD *)(v39 + 24);
    v38[40] = v39[40];
    *((_QWORD *)v38 + 6) = *((_QWORD *)v39 + 6);
    *(_OWORD *)(v38 + 56) = *(_OWORD *)(v39 + 56);
    *(_OWORD *)(v38 + 72) = *(_OWORD *)(v39 + 72);
    v38[88] = v39[88];
    *((_OWORD *)v38 + 6) = *((_OWORD *)v39 + 6);
    v40 = *(int *)(v10 + 40);
    v41 = &v38[v40];
    v42 = &v39[v40];
    if (v66(&v39[v40], 1, v14))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      v44 = v65;
    }
    else
    {
      v45 = v42;
      v44 = v65;
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v41, v45, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v41, 0, 1, v14);
    }
    v46 = v20[8];
    v47 = (char *)v18 + v46;
    v48 = (char *)v19 + v46;
    *(_OWORD *)v47 = *(_OWORD *)v48;
    v47[16] = v48[16];
    *(_OWORD *)(v47 + 24) = *(_OWORD *)(v48 + 24);
    v47[40] = v48[40];
    *((_QWORD *)v47 + 6) = *((_QWORD *)v48 + 6);
    *(_OWORD *)(v47 + 56) = *(_OWORD *)(v48 + 56);
    *(_OWORD *)(v47 + 72) = *(_OWORD *)(v48 + 72);
    v47[88] = v48[88];
    *((_OWORD *)v47 + 6) = *((_OWORD *)v48 + 6);
    v49 = *(int *)(v10 + 40);
    v50 = &v47[v49];
    v51 = &v48[v49];
    if (v66(&v48[v49], 1, v14))
    {
      v52 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v50, v51, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v50, 0, 1, v14);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v64 + 56))(v18, 0, 1, v20);
  }
  v53 = a3[6];
  v54 = (uint64_t *)(a1 + v53);
  v55 = (uint64_t *)(a2 + v53);
  v56 = *v55;
  v57 = v55[1];
  sub_1908B53B8(*v55, v57);
  *v54 = v56;
  v54[1] = v57;
  v58 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v59 = (_QWORD *)(a1 + v58);
  v60 = (_QWORD *)(a2 + v58);
  v61 = v60[1];
  *v59 = *v60;
  v59[1] = v61;
  v62 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v62) = *(_BYTE *)(a2 + v62);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_190981328(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, int *);
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  size_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  char *v51;
  char *v52;
  int v53;
  int v54;
  uint64_t v55;
  char *v56;
  char *v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  char *v110;
  char *v111;
  int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;
  char *v123;
  char *v124;
  int v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  uint64_t v135;
  char *v136;
  char *v137;
  int v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  int *v142;
  uint64_t v143;
  uint64_t (*v144)(char *, uint64_t, uint64_t);

  v6 = sub_190A46204();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v142 = a3;
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  LOBYTE(v7) = *(_BYTE *)(a2 + v7 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = v7;
  LOBYTE(v7) = *(_BYTE *)(v9 + 40);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  *(_BYTE *)(v8 + 40) = v7;
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  v10 = *(_OWORD *)(v9 + 56);
  v11 = *(_OWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 88) = *(_BYTE *)(v9 + 88);
  *(_OWORD *)(v8 + 72) = v11;
  *(_OWORD *)(v8 + 56) = v10;
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  v143 = type metadata accessor for MetricsRequest(0);
  v12 = *(int *)(v143 + 40);
  v13 = (void *)(v8 + v12);
  v14 = (void *)(v9 + v12);
  v15 = sub_190A46EE8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v144 = (uint64_t (*)(char *, uint64_t, uint64_t))v17;
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_7:
  v21 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v22 = (char *)(v8 + v21);
  v23 = (char *)(v9 + v21);
  v24 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(uint64_t (**)(char *, uint64_t, int *))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (v28)
    {
      sub_1908B5150((uint64_t)v22, type metadata accessor for JindoMetricsDefinition);
      goto LABEL_13;
    }
    v141 = v16;
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
    v43 = v24[5];
    v44 = &v22[v43];
    v45 = &v23[v43];
    v46 = *(_OWORD *)v45;
    v44[16] = v45[16];
    *(_OWORD *)v44 = v46;
    v47 = *(_OWORD *)(v45 + 24);
    v44[40] = v45[40];
    *(_OWORD *)(v44 + 24) = v47;
    *((_QWORD *)v44 + 6) = *((_QWORD *)v45 + 6);
    v48 = *(_OWORD *)(v45 + 56);
    v49 = *(_OWORD *)(v45 + 72);
    v44[88] = v45[88];
    *(_OWORD *)(v44 + 72) = v49;
    *(_OWORD *)(v44 + 56) = v48;
    *((_QWORD *)v44 + 12) = *((_QWORD *)v45 + 12);
    *((_QWORD *)v44 + 13) = *((_QWORD *)v45 + 13);
    v50 = *(int *)(v143 + 40);
    v51 = &v44[v50];
    v52 = &v45[v50];
    v53 = v144(&v44[v50], 1, v15);
    v54 = v144(v52, 1, v15);
    if (v53)
    {
      if (!v54)
      {
        (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v51, v52, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v51, 0, 1, v15);
        goto LABEL_34;
      }
    }
    else
    {
      if (!v54)
      {
        (*(void (**)(char *, char *, uint64_t))(v141 + 24))(v51, v52, v15);
LABEL_34:
        v102 = v24[6];
        v103 = &v22[v102];
        v104 = &v23[v102];
        v105 = *(_OWORD *)v104;
        v103[16] = v104[16];
        *(_OWORD *)v103 = v105;
        v106 = *(_OWORD *)(v104 + 24);
        v103[40] = v104[40];
        *(_OWORD *)(v103 + 24) = v106;
        *((_QWORD *)v103 + 6) = *((_QWORD *)v104 + 6);
        v107 = *(_OWORD *)(v104 + 56);
        v108 = *(_OWORD *)(v104 + 72);
        v103[88] = v104[88];
        *(_OWORD *)(v103 + 72) = v108;
        *(_OWORD *)(v103 + 56) = v107;
        *((_QWORD *)v103 + 12) = *((_QWORD *)v104 + 12);
        *((_QWORD *)v103 + 13) = *((_QWORD *)v104 + 13);
        v109 = *(int *)(v143 + 40);
        v110 = &v103[v109];
        v111 = &v104[v109];
        v112 = v144(&v103[v109], 1, v15);
        v113 = v144(v111, 1, v15);
        if (v112)
        {
          if (!v113)
          {
            (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v110, v111, v15);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v110, 0, 1, v15);
            goto LABEL_40;
          }
        }
        else
        {
          if (!v113)
          {
            (*(void (**)(char *, char *, uint64_t))(v141 + 24))(v110, v111, v15);
LABEL_40:
            v115 = v24[7];
            v116 = &v22[v115];
            v117 = &v23[v115];
            v118 = *(_OWORD *)v117;
            v116[16] = v117[16];
            *(_OWORD *)v116 = v118;
            v119 = *(_OWORD *)(v117 + 24);
            v116[40] = v117[40];
            *(_OWORD *)(v116 + 24) = v119;
            *((_QWORD *)v116 + 6) = *((_QWORD *)v117 + 6);
            v120 = *(_OWORD *)(v117 + 56);
            v121 = *(_OWORD *)(v117 + 72);
            v116[88] = v117[88];
            *(_OWORD *)(v116 + 72) = v121;
            *(_OWORD *)(v116 + 56) = v120;
            *((_QWORD *)v116 + 12) = *((_QWORD *)v117 + 12);
            *((_QWORD *)v116 + 13) = *((_QWORD *)v117 + 13);
            v122 = *(int *)(v143 + 40);
            v123 = &v116[v122];
            v124 = &v117[v122];
            v125 = v144(&v116[v122], 1, v15);
            v126 = v144(v124, 1, v15);
            if (v125)
            {
              if (!v126)
              {
                (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v123, v124, v15);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v123, 0, 1, v15);
LABEL_46:
                v128 = v24[8];
                v129 = &v22[v128];
                v130 = &v23[v128];
                v131 = *(_OWORD *)v130;
                v129[16] = v130[16];
                *(_OWORD *)v129 = v131;
                v132 = *(_OWORD *)(v130 + 24);
                v129[40] = v130[40];
                *(_OWORD *)(v129 + 24) = v132;
                *((_QWORD *)v129 + 6) = *((_QWORD *)v130 + 6);
                v133 = *(_OWORD *)(v130 + 56);
                v134 = *(_OWORD *)(v130 + 72);
                v129[88] = v130[88];
                *(_OWORD *)(v129 + 72) = v134;
                *(_OWORD *)(v129 + 56) = v133;
                *((_QWORD *)v129 + 12) = *((_QWORD *)v130 + 12);
                *((_QWORD *)v129 + 13) = *((_QWORD *)v130 + 13);
                v135 = *(int *)(v143 + 40);
                v136 = &v129[v135];
                v137 = &v130[v135];
                v138 = v144(&v129[v135], 1, v15);
                v139 = v144(v137, 1, v15);
                if (v138)
                {
                  if (!v139)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v136, v137, v15);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v136, 0, 1, v15);
                    goto LABEL_30;
                  }
                }
                else
                {
                  if (!v139)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v141 + 24))(v136, v137, v15);
                    goto LABEL_30;
                  }
                  (*(void (**)(char *, uint64_t))(v141 + 8))(v136, v15);
                }
                v40 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0) - 8) + 64);
                v41 = v136;
                v42 = v137;
                goto LABEL_14;
              }
            }
            else
            {
              if (!v126)
              {
                (*(void (**)(char *, char *, uint64_t))(v141 + 24))(v123, v124, v15);
                goto LABEL_46;
              }
              (*(void (**)(char *, uint64_t))(v141 + 8))(v123, v15);
            }
            v127 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
            memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
            goto LABEL_46;
          }
          (*(void (**)(char *, uint64_t))(v141 + 8))(v110, v15);
        }
        v114 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t))(v141 + 8))(v51, v15);
    }
    v101 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
    goto LABEL_34;
  }
  if (v28)
  {
LABEL_13:
    v40 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0) - 8) + 64);
    v41 = v22;
    v42 = v23;
LABEL_14:
    memcpy(v41, v42, v40);
    goto LABEL_30;
  }
  v140 = v16;
  *(_OWORD *)v22 = *(_OWORD *)v23;
  v29 = v24[5];
  v30 = &v22[v29];
  v31 = &v23[v29];
  v32 = *(_OWORD *)v31;
  v30[16] = v31[16];
  *(_OWORD *)v30 = v32;
  v33 = *(_OWORD *)(v31 + 24);
  v30[40] = v31[40];
  *(_OWORD *)(v30 + 24) = v33;
  *((_QWORD *)v30 + 6) = *((_QWORD *)v31 + 6);
  v34 = *(_OWORD *)(v31 + 56);
  v35 = *(_OWORD *)(v31 + 72);
  v30[88] = v31[88];
  *(_OWORD *)(v30 + 72) = v35;
  *(_OWORD *)(v30 + 56) = v34;
  *((_QWORD *)v30 + 12) = *((_QWORD *)v31 + 12);
  *((_QWORD *)v30 + 13) = *((_QWORD *)v31 + 13);
  v36 = *(int *)(v143 + 40);
  v37 = &v30[v36];
  v38 = &v31[v36];
  if (v144(&v31[v36], 1, v15))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v37, v38, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v37, 0, 1, v15);
  }
  v55 = v24[6];
  v56 = &v22[v55];
  v57 = &v23[v55];
  v58 = *(_OWORD *)v57;
  v56[16] = v57[16];
  *(_OWORD *)v56 = v58;
  v59 = *(_OWORD *)(v57 + 24);
  v56[40] = v57[40];
  *(_OWORD *)(v56 + 24) = v59;
  *((_QWORD *)v56 + 6) = *((_QWORD *)v57 + 6);
  v60 = *(_OWORD *)(v57 + 56);
  v61 = *(_OWORD *)(v57 + 72);
  v56[88] = v57[88];
  *(_OWORD *)(v56 + 72) = v61;
  *(_OWORD *)(v56 + 56) = v60;
  *((_QWORD *)v56 + 12) = *((_QWORD *)v57 + 12);
  *((_QWORD *)v56 + 13) = *((_QWORD *)v57 + 13);
  v62 = *(int *)(v143 + 40);
  v63 = &v56[v62];
  v64 = &v57[v62];
  if (v144(&v57[v62], 1, v15))
  {
    v65 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v63, v64, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v63, 0, 1, v15);
  }
  v66 = v24[7];
  v67 = &v22[v66];
  v68 = &v23[v66];
  v69 = *(_OWORD *)v68;
  v67[16] = v68[16];
  *(_OWORD *)v67 = v69;
  v70 = *(_OWORD *)(v68 + 24);
  v67[40] = v68[40];
  *(_OWORD *)(v67 + 24) = v70;
  *((_QWORD *)v67 + 6) = *((_QWORD *)v68 + 6);
  v71 = *(_OWORD *)(v68 + 56);
  v72 = *(_OWORD *)(v68 + 72);
  v67[88] = v68[88];
  *(_OWORD *)(v67 + 72) = v72;
  *(_OWORD *)(v67 + 56) = v71;
  *((_QWORD *)v67 + 12) = *((_QWORD *)v68 + 12);
  *((_QWORD *)v67 + 13) = *((_QWORD *)v68 + 13);
  v73 = *(int *)(v143 + 40);
  v74 = &v67[v73];
  v75 = &v68[v73];
  if (v144(&v68[v73], 1, v15))
  {
    v76 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    v77 = v140;
  }
  else
  {
    v78 = v75;
    v77 = v140;
    (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v74, v78, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v74, 0, 1, v15);
  }
  v79 = v24[8];
  v80 = &v22[v79];
  v81 = &v23[v79];
  v82 = *(_OWORD *)v81;
  v80[16] = v81[16];
  *(_OWORD *)v80 = v82;
  v83 = *(_OWORD *)(v81 + 24);
  v80[40] = v81[40];
  *(_OWORD *)(v80 + 24) = v83;
  *((_QWORD *)v80 + 6) = *((_QWORD *)v81 + 6);
  v84 = *(_OWORD *)(v81 + 56);
  v85 = *(_OWORD *)(v81 + 72);
  v80[88] = v81[88];
  *(_OWORD *)(v80 + 72) = v85;
  *(_OWORD *)(v80 + 56) = v84;
  *((_QWORD *)v80 + 12) = *((_QWORD *)v81 + 12);
  *((_QWORD *)v80 + 13) = *((_QWORD *)v81 + 13);
  v86 = *(int *)(v143 + 40);
  v87 = &v80[v86];
  v88 = &v81[v86];
  if (v144(&v81[v86], 1, v15))
  {
    v89 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v87, v88, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v87, 0, 1, v15);
  }
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
LABEL_30:
  v90 = v142[6];
  v91 = (uint64_t *)(a1 + v90);
  v92 = (uint64_t *)(a2 + v90);
  v93 = *v92;
  v94 = v92[1];
  sub_1908B53B8(*v92, v94);
  v95 = *v91;
  v96 = v91[1];
  *v91 = v93;
  v91[1] = v94;
  sub_1908B53FC(v95, v96);
  *(_BYTE *)(a1 + v142[7]) = *(_BYTE *)(a2 + v142[7]);
  v97 = v142[8];
  v98 = (_QWORD *)(a1 + v97);
  v99 = (_QWORD *)(a2 + v97);
  *v98 = *v99;
  v98[1] = v99[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v142[9]) = *(_BYTE *)(a2 + v142[9]);
  *(_BYTE *)(a1 + v142[10]) = *(_BYTE *)(a2 + v142[10]);
  return a1;
}

uint64_t sub_190981DEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(const void *, uint64_t, uint64_t);

  v6 = sub_190A46204();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(a2 + v7 + 16);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(_BYTE *)(v8 + 40) = *(_BYTE *)(a2 + v7 + 40);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(a2 + v7 + 48);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(a2 + v7 + 56);
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(a2 + v7 + 72);
  *(_BYTE *)(v8 + 88) = *(_BYTE *)(a2 + v7 + 88);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(a2 + v7 + 96);
  v10 = type metadata accessor for MetricsRequest(0);
  v11 = *(int *)(v10 + 40);
  v12 = (void *)(v8 + v11);
  v13 = (const void *)(v9 + v11);
  v14 = sub_190A46EE8();
  v15 = *(_QWORD *)(v14 - 8);
  v58 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  if (v58(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v18 = (_OWORD *)(v8 + v17);
  v19 = (_OWORD *)(v9 + v17);
  v20 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v21 = *((_QWORD *)v20 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v56 = v21;
    v57 = v15;
    *v18 = *v19;
    v23 = v20[5];
    v24 = (char *)v18 + v23;
    v25 = (char *)v19 + v23;
    v24[16] = v25[16];
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 24) = *(_OWORD *)(v25 + 24);
    v24[40] = v25[40];
    *((_QWORD *)v24 + 6) = *((_QWORD *)v25 + 6);
    *(_OWORD *)(v24 + 56) = *(_OWORD *)(v25 + 56);
    *(_OWORD *)(v24 + 72) = *(_OWORD *)(v25 + 72);
    v24[88] = v25[88];
    *((_OWORD *)v24 + 6) = *((_OWORD *)v25 + 6);
    v26 = *(int *)(v10 + 40);
    v27 = &v24[v26];
    v28 = &v25[v26];
    if (v58(&v25[v26], 1, v14))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v27, v28, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v27, 0, 1, v14);
    }
    v30 = v20[6];
    v31 = (char *)v18 + v30;
    v32 = (char *)v19 + v30;
    *(_OWORD *)v31 = *(_OWORD *)v32;
    v31[16] = v32[16];
    *(_OWORD *)(v31 + 24) = *(_OWORD *)(v32 + 24);
    v31[40] = v32[40];
    *((_QWORD *)v31 + 6) = *((_QWORD *)v32 + 6);
    *(_OWORD *)(v31 + 56) = *(_OWORD *)(v32 + 56);
    *(_OWORD *)(v31 + 72) = *(_OWORD *)(v32 + 72);
    v31[88] = v32[88];
    *((_OWORD *)v31 + 6) = *((_OWORD *)v32 + 6);
    v33 = *(int *)(v10 + 40);
    v34 = &v31[v33];
    v35 = &v32[v33];
    if (v58(&v32[v33], 1, v14))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v34, v35, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v34, 0, 1, v14);
    }
    v37 = v20[7];
    v38 = (char *)v18 + v37;
    v39 = (char *)v19 + v37;
    *(_OWORD *)v38 = *(_OWORD *)v39;
    v38[16] = v39[16];
    *(_OWORD *)(v38 + 24) = *(_OWORD *)(v39 + 24);
    v38[40] = v39[40];
    *((_QWORD *)v38 + 6) = *((_QWORD *)v39 + 6);
    *(_OWORD *)(v38 + 56) = *(_OWORD *)(v39 + 56);
    *(_OWORD *)(v38 + 72) = *(_OWORD *)(v39 + 72);
    v38[88] = v39[88];
    *((_OWORD *)v38 + 6) = *((_OWORD *)v39 + 6);
    v40 = *(int *)(v10 + 40);
    v41 = &v38[v40];
    v42 = &v39[v40];
    if (v58(&v39[v40], 1, v14))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      v44 = v57;
    }
    else
    {
      v45 = v42;
      v44 = v57;
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v41, v45, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v41, 0, 1, v14);
    }
    v46 = v20[8];
    v47 = (char *)v18 + v46;
    v48 = (char *)v19 + v46;
    *(_OWORD *)v47 = *(_OWORD *)v48;
    v47[16] = v48[16];
    *(_OWORD *)(v47 + 24) = *(_OWORD *)(v48 + 24);
    v47[40] = v48[40];
    *((_QWORD *)v47 + 6) = *((_QWORD *)v48 + 6);
    *(_OWORD *)(v47 + 56) = *(_OWORD *)(v48 + 56);
    *(_OWORD *)(v47 + 72) = *(_OWORD *)(v48 + 72);
    v47[88] = v48[88];
    *((_OWORD *)v47 + 6) = *((_OWORD *)v48 + 6);
    v49 = *(int *)(v10 + 40);
    v50 = &v47[v49];
    v51 = &v48[v49];
    if (v58(&v48[v49], 1, v14))
    {
      v52 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v50, v51, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v50, 0, 1, v14);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v56 + 56))(v18, 0, 1, v20);
  }
  v53 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v53) = *(_BYTE *)(a2 + v53);
  v54 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v54) = *(_BYTE *)(a2 + v54);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_190982344(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, int *);
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  size_t v34;
  char *v35;
  char *v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int v44;
  int v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  int v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  int v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  int *v109;
  uint64_t v110;
  uint64_t (*v111)(char *, uint64_t, uint64_t);

  v6 = sub_190A46204();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v109 = a3;
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(a2 + v7 + 16);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(_BYTE *)(v8 + 40) = *(_BYTE *)(a2 + v7 + 40);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(a2 + v7 + 48);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(a2 + v7 + 56);
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(a2 + v7 + 72);
  *(_BYTE *)(v8 + 88) = *(_BYTE *)(a2 + v7 + 88);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(a2 + v7 + 96);
  v110 = type metadata accessor for MetricsRequest(0);
  v10 = *(int *)(v110 + 40);
  v11 = (void *)(v8 + v10);
  v12 = (void *)(v9 + v10);
  v13 = sub_190A46EE8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v111 = (uint64_t (*)(char *, uint64_t, uint64_t))v15;
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  v19 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v20 = (char *)(v8 + v19);
  v21 = (char *)(v9 + v19);
  v22 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v23 = *((_QWORD *)v22 - 1);
  v24 = *(uint64_t (**)(char *, uint64_t, int *))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (v26)
    {
      sub_1908B5150((uint64_t)v20, type metadata accessor for JindoMetricsDefinition);
      goto LABEL_13;
    }
    v108 = v14;
    *(_OWORD *)v20 = *(_OWORD *)v21;
    v38 = v22[5];
    v39 = &v20[v38];
    v40 = &v21[v38];
    *(_OWORD *)v39 = *(_OWORD *)v40;
    v39[16] = v40[16];
    *(_OWORD *)(v39 + 24) = *(_OWORD *)(v40 + 24);
    v39[40] = v40[40];
    *((_QWORD *)v39 + 6) = *((_QWORD *)v40 + 6);
    *(_OWORD *)(v39 + 56) = *(_OWORD *)(v40 + 56);
    *(_OWORD *)(v39 + 72) = *(_OWORD *)(v40 + 72);
    v39[88] = v40[88];
    *((_OWORD *)v39 + 6) = *((_OWORD *)v40 + 6);
    v41 = *(int *)(v110 + 40);
    v42 = &v39[v41];
    v43 = &v40[v41];
    v44 = v111(&v39[v41], 1, v13);
    v45 = v111(v43, 1, v13);
    if (v44)
    {
      if (!v45)
      {
        (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v42, v43, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v42, 0, 1, v13);
        goto LABEL_35;
      }
    }
    else
    {
      if (!v45)
      {
        (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v42, v43, v13);
LABEL_35:
        v81 = v22[6];
        v82 = &v20[v81];
        v83 = &v21[v81];
        *(_OWORD *)v82 = *(_OWORD *)v83;
        v82[16] = v83[16];
        *(_OWORD *)(v82 + 24) = *(_OWORD *)(v83 + 24);
        v82[40] = v83[40];
        *((_QWORD *)v82 + 6) = *((_QWORD *)v83 + 6);
        *(_OWORD *)(v82 + 56) = *(_OWORD *)(v83 + 56);
        *(_OWORD *)(v82 + 72) = *(_OWORD *)(v83 + 72);
        v82[88] = v83[88];
        *((_OWORD *)v82 + 6) = *((_OWORD *)v83 + 6);
        v84 = *(int *)(v110 + 40);
        v85 = &v82[v84];
        v86 = &v83[v84];
        v87 = v111(&v82[v84], 1, v13);
        v88 = v111(v86, 1, v13);
        if (v87)
        {
          if (!v88)
          {
            (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v85, v86, v13);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v85, 0, 1, v13);
            goto LABEL_41;
          }
        }
        else
        {
          if (!v88)
          {
            (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v85, v86, v13);
LABEL_41:
            v90 = v22[7];
            v91 = &v20[v90];
            v92 = &v21[v90];
            *(_OWORD *)v91 = *(_OWORD *)v92;
            v91[16] = v92[16];
            *(_OWORD *)(v91 + 24) = *(_OWORD *)(v92 + 24);
            v91[40] = v92[40];
            *((_QWORD *)v91 + 6) = *((_QWORD *)v92 + 6);
            *(_OWORD *)(v91 + 56) = *(_OWORD *)(v92 + 56);
            *(_OWORD *)(v91 + 72) = *(_OWORD *)(v92 + 72);
            v91[88] = v92[88];
            *((_OWORD *)v91 + 6) = *((_OWORD *)v92 + 6);
            v93 = *(int *)(v110 + 40);
            v94 = &v91[v93];
            v95 = &v92[v93];
            v96 = v111(&v91[v93], 1, v13);
            v97 = v111(v95, 1, v13);
            if (v96)
            {
              if (!v97)
              {
                (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v94, v95, v13);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v94, 0, 1, v13);
LABEL_47:
                v99 = v22[8];
                v100 = &v20[v99];
                v101 = &v21[v99];
                *(_OWORD *)v100 = *(_OWORD *)v101;
                v100[16] = v101[16];
                *(_OWORD *)(v100 + 24) = *(_OWORD *)(v101 + 24);
                v100[40] = v101[40];
                *((_QWORD *)v100 + 6) = *((_QWORD *)v101 + 6);
                *(_OWORD *)(v100 + 56) = *(_OWORD *)(v101 + 56);
                *(_OWORD *)(v100 + 72) = *(_OWORD *)(v101 + 72);
                v100[88] = v101[88];
                *((_OWORD *)v100 + 6) = *((_OWORD *)v101 + 6);
                v102 = *(int *)(v110 + 40);
                v103 = &v100[v102];
                v104 = &v101[v102];
                v105 = v111(&v100[v102], 1, v13);
                v106 = v111(v104, 1, v13);
                if (v105)
                {
                  if (!v106)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v103, v104, v13);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v103, 0, 1, v13);
                    goto LABEL_15;
                  }
                }
                else
                {
                  if (!v106)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v103, v104, v13);
                    goto LABEL_15;
                  }
                  (*(void (**)(char *, uint64_t))(v108 + 8))(v103, v13);
                }
                v34 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0) - 8) + 64);
                v35 = v103;
                v36 = v104;
LABEL_14:
                memcpy(v35, v36, v34);
LABEL_15:
                v37 = v109;
                goto LABEL_31;
              }
            }
            else
            {
              if (!v97)
              {
                (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v94, v95, v13);
                goto LABEL_47;
              }
              (*(void (**)(char *, uint64_t))(v108 + 8))(v94, v13);
            }
            v98 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
            memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
            goto LABEL_47;
          }
          (*(void (**)(char *, uint64_t))(v108 + 8))(v85, v13);
        }
        v89 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
        goto LABEL_41;
      }
      (*(void (**)(char *, uint64_t))(v108 + 8))(v42, v13);
    }
    v80 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    goto LABEL_35;
  }
  if (v26)
  {
LABEL_13:
    v34 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0) - 8) + 64);
    v35 = v20;
    v36 = v21;
    goto LABEL_14;
  }
  v107 = v14;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  v27 = v22[5];
  v28 = &v20[v27];
  v29 = &v21[v27];
  v28[16] = v29[16];
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 24) = *(_OWORD *)(v29 + 24);
  v28[40] = v29[40];
  *((_QWORD *)v28 + 6) = *((_QWORD *)v29 + 6);
  *(_OWORD *)(v28 + 56) = *(_OWORD *)(v29 + 56);
  *(_OWORD *)(v28 + 72) = *(_OWORD *)(v29 + 72);
  v28[88] = v29[88];
  *((_OWORD *)v28 + 6) = *((_OWORD *)v29 + 6);
  v30 = *(int *)(v110 + 40);
  v31 = &v28[v30];
  v32 = &v29[v30];
  if (v111(&v29[v30], 1, v13))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v31, v32, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v31, 0, 1, v13);
  }
  v46 = v22[6];
  v47 = &v20[v46];
  v48 = &v21[v46];
  *(_OWORD *)v47 = *(_OWORD *)v48;
  v47[16] = v48[16];
  *(_OWORD *)(v47 + 24) = *(_OWORD *)(v48 + 24);
  v47[40] = v48[40];
  *((_QWORD *)v47 + 6) = *((_QWORD *)v48 + 6);
  *(_OWORD *)(v47 + 56) = *(_OWORD *)(v48 + 56);
  *(_OWORD *)(v47 + 72) = *(_OWORD *)(v48 + 72);
  v47[88] = v48[88];
  *((_OWORD *)v47 + 6) = *((_OWORD *)v48 + 6);
  v49 = *(int *)(v110 + 40);
  v50 = &v47[v49];
  v51 = &v48[v49];
  if (v111(&v48[v49], 1, v13))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v50, v51, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v50, 0, 1, v13);
  }
  v53 = v22[7];
  v54 = &v20[v53];
  v55 = &v21[v53];
  *(_OWORD *)v54 = *(_OWORD *)v55;
  v54[16] = v55[16];
  *(_OWORD *)(v54 + 24) = *(_OWORD *)(v55 + 24);
  v54[40] = v55[40];
  *((_QWORD *)v54 + 6) = *((_QWORD *)v55 + 6);
  *(_OWORD *)(v54 + 56) = *(_OWORD *)(v55 + 56);
  *(_OWORD *)(v54 + 72) = *(_OWORD *)(v55 + 72);
  v54[88] = v55[88];
  *((_OWORD *)v54 + 6) = *((_OWORD *)v55 + 6);
  v56 = *(int *)(v110 + 40);
  v57 = &v54[v56];
  v58 = &v55[v56];
  if (v111(&v55[v56], 1, v13))
  {
    v59 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    v60 = v107;
  }
  else
  {
    v61 = v58;
    v60 = v107;
    (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v57, v61, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v57, 0, 1, v13);
  }
  v62 = v23;
  v63 = v22[8];
  v64 = &v20[v63];
  v65 = &v21[v63];
  *(_OWORD *)v64 = *(_OWORD *)v65;
  v64[16] = v65[16];
  *(_OWORD *)(v64 + 24) = *(_OWORD *)(v65 + 24);
  v64[40] = v65[40];
  *((_QWORD *)v64 + 6) = *((_QWORD *)v65 + 6);
  *(_OWORD *)(v64 + 56) = *(_OWORD *)(v65 + 56);
  *(_OWORD *)(v64 + 72) = *(_OWORD *)(v65 + 72);
  v64[88] = v65[88];
  *((_OWORD *)v64 + 6) = *((_OWORD *)v65 + 6);
  v66 = *(int *)(v110 + 40);
  v67 = &v64[v66];
  v68 = &v65[v66];
  if (v111(&v65[v66], 1, v13))
  {
    v69 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v67, v68, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v67, 0, 1, v13);
  }
  v37 = v109;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v62 + 56))(v20, 0, 1, v22);
LABEL_31:
  v70 = v37[6];
  v71 = *(_QWORD *)(a1 + v70);
  v72 = *(_QWORD *)(a1 + v70 + 8);
  *(_OWORD *)(a1 + v70) = *(_OWORD *)(a2 + v70);
  sub_1908B53FC(v71, v72);
  v73 = v37[8];
  *(_BYTE *)(a1 + v37[7]) = *(_BYTE *)(a2 + v37[7]);
  v74 = (_QWORD *)(a1 + v73);
  v75 = (uint64_t *)(a2 + v73);
  v77 = *v75;
  v76 = v75[1];
  *v74 = v77;
  v74[1] = v76;
  swift_bridgeObjectRelease();
  v78 = v37[10];
  *(_BYTE *)(a1 + v37[9]) = *(_BYTE *)(a2 + v37[9]);
  *(_BYTE *)(a1 + v78) = *(_BYTE *)(a2 + v78);
  return a1;
}

uint64_t sub_190982D9C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190982DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_190A46204();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for ActivityMetricsDefinition(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_190982E54()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190982E60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_190A46204();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for ActivityMetricsDefinition(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_190982F08()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_190A46204();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ActivityMetricsDefinition(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActivityWidgetRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_190983000 + 4 * byte_190A53B30[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_190983034 + 4 * byte_190A53B2B[v4]))();
}

uint64_t sub_190983034(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19098303C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190983044);
  return result;
}

uint64_t sub_190983050(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190983058);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_19098305C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190983064(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityWidgetRequest.CodingKeys()
{
  return &type metadata for ActivityWidgetRequest.CodingKeys;
}

unint64_t sub_190983084()
{
  unint64_t result;

  result = qword_1EE1EDE18;
  if (!qword_1EE1EDE18)
  {
    result = MEMORY[0x19401429C](&unk_190A53D5C, &type metadata for ActivityWidgetRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDE18);
  }
  return result;
}

unint64_t sub_1909830CC()
{
  unint64_t result;

  result = qword_1EE1EDE20;
  if (!qword_1EE1EDE20)
  {
    result = MEMORY[0x19401429C](&unk_190A53C94, &type metadata for ActivityWidgetRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDE20);
  }
  return result;
}

unint64_t sub_190983114()
{
  unint64_t result;

  result = qword_1EE1EDE28;
  if (!qword_1EE1EDE28)
  {
    result = MEMORY[0x19401429C](&unk_190A53CBC, &type metadata for ActivityWidgetRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDE28);
  }
  return result;
}

unint64_t sub_190983158()
{
  unint64_t result;

  result = qword_1EE1EAB08;
  if (!qword_1EE1EAB08)
  {
    result = MEMORY[0x19401429C](&unk_190A53EDC, &type metadata for ActivityWidgetRequest.CodingProxy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EAB08);
  }
  return result;
}

unint64_t sub_19098319C()
{
  unint64_t result;

  result = qword_1ECF6A700;
  if (!qword_1ECF6A700)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ArchiveVersion, &type metadata for ArchiveVersion);
    atomic_store(result, (unint64_t *)&qword_1ECF6A700);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityWidgetRequest.CodingProxy.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityWidgetRequest.CodingProxy.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1909832BC + 4 * byte_190A53B3A[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1909832F0 + 4 * byte_190A53B35[v4]))();
}

uint64_t sub_1909832F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909832F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190983300);
  return result;
}

uint64_t sub_19098330C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190983314);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_190983318(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190983320(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityWidgetRequest.CodingProxy.CodingKeys()
{
  return &type metadata for ActivityWidgetRequest.CodingProxy.CodingKeys;
}

unint64_t sub_190983340()
{
  unint64_t result;

  result = qword_1EE1EDE48;
  if (!qword_1EE1EDE48)
  {
    result = MEMORY[0x19401429C](&unk_190A53EB4, &type metadata for ActivityWidgetRequest.CodingProxy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDE48);
  }
  return result;
}

unint64_t sub_190983388()
{
  unint64_t result;

  result = qword_1EE1EAB20;
  if (!qword_1EE1EAB20)
  {
    result = MEMORY[0x19401429C](&unk_190A53E24, &type metadata for ActivityWidgetRequest.CodingProxy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EAB20);
  }
  return result;
}

unint64_t sub_1909833D0()
{
  unint64_t result;

  result = qword_1EE1EAB18;
  if (!qword_1EE1EAB18)
  {
    result = MEMORY[0x19401429C](&unk_190A53E4C, &type metadata for ActivityWidgetRequest.CodingProxy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EAB18);
  }
  return result;
}

uint64_t sub_190983414()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WGAutoreleasePool()
{
  return objc_opt_self();
}

uint64_t sub_190983444()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_190A46618();
  swift_release();
  return swift_release();
}

uint64_t sub_1909834A8()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for DatePublisher(0);
  v0 = swift_allocObject();
  result = sub_1909835A4(20.0);
  qword_1ECF6D3F8 = v0;
  return result;
}

uint64_t sub_1909834E8(uint64_t a1)
{
  return sub_19098353C(60.0, a1, 0x796C6574756E696DLL, 0xE800000000000000, &qword_1ECF6D400);
}

uint64_t sub_190983510(uint64_t a1)
{
  return sub_19098353C(5.0, a1, 0x6F63657365766966, 0xEB0000000073646ELL, &qword_1ECF6D408);
}

uint64_t sub_19098353C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t result;

  type metadata accessor for DatePublisher(0);
  v9 = swift_allocObject();
  result = sub_190983734(a3, a4, a1);
  *a5 = v9;
  return result;
}

uint64_t sub_1909835A4(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69A08);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_190A46084();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v17 - v12;
  v14 = v1 + OBJC_IVAR____TtC9WidgetKit13DatePublisher__date;
  sub_190A46078();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  sub_190A46600();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v14, v6, v3);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_requesters) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_machTimer) = 0;
  *(double *)(v1 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_period) = 1.0 / a1;
  v15 = (_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_name);
  *v15 = 0x746C7561666564;
  v15[1] = 0xE700000000000000;
  return v1;
}

uint64_t sub_190983734(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v22 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69A08);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_190A46084();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v21 - v15;
  v17 = v3 + OBJC_IVAR____TtC9WidgetKit13DatePublisher__date;
  sub_190A46078();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  sub_190A46600();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v17, v9, v6);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_requesters) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v3 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_machTimer) = 0;
  *(double *)(v3 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_period) = a3;
  v18 = (_QWORD *)(v3 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_name);
  v19 = v22;
  *v18 = a1;
  v18[1] = v19;
  return v3;
}

uint64_t sub_1909838B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  double v35;
  double v36;
  void *v37;
  uint64_t v38;
  _QWORD *v39;
  void *v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  id v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t aBlock[6];
  uint64_t v65[5];

  v2 = v1;
  v63 = a1;
  v3 = sub_190A46084();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v59 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v57 - v7;
  BSDispatchQueueAssertMain();
  v9 = v1 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_name;
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_name);
  v11 = *(_QWORD *)(v9 + 8);
  v12 = qword_1EE1E6B10;
  swift_bridgeObjectRetain();
  if (v12 != -1)
    swift_once();
  v62 = v10;
  v13 = sub_190A465A0();
  v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE1FD718);
  swift_bridgeObjectRetain_n();
  v15 = sub_190A46588();
  v16 = sub_190A47F68();
  v17 = os_log_type_enabled(v15, v16);
  v60 = v8;
  if (v17)
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    aBlock[0] = v19;
    v61 = v2;
    *(_DWORD *)v18 = 136446210;
    swift_bridgeObjectRetain();
    v65[1] = sub_1908B35C4(v62, v11, aBlock);
    v2 = v61;
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1908A7000, v15, v16, "startTickingForView %{public}s.", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v19, -1, -1);
    MEMORY[0x194014398](v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v20 = v2 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_requesters;
  swift_beginAccess();
  v21 = *(_QWORD *)(*(_QWORD *)v20 + 16);
  v61 = v20;
  if (v21)
  {
    swift_bridgeObjectRetain_n();
    v22 = sub_190A46588();
    v23 = sub_190A47F68();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v58 = v14;
      v26 = v25;
      aBlock[0] = v25;
      *(_DWORD *)v24 = 136446466;
      swift_bridgeObjectRetain();
      v65[0] = sub_1908B35C4(v62, v11, aBlock);
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v24 + 12) = 2082;
      v65[0] = v63;
      v27 = sub_190A47B00();
      v65[0] = sub_1908B35C4(v27, v28, aBlock);
      sub_190A48178();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1908A7000, v22, v23, "Publishing %{public}s to new requester %{public}s.", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194014398](v26, -1, -1);
      MEMORY[0x194014398](v24, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v49 = v59;
    v48 = v60;
    sub_190A46078();
    swift_getKeyPath();
    swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v49, v48, v3);
    swift_retain();
    sub_190A46624();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v48, v3);
  }
  else
  {
    v29 = objc_allocWithZone(MEMORY[0x1E0D01720]);
    swift_bridgeObjectRetain();
    v30 = v62;
    v31 = (void *)sub_190A47AC4();
    swift_bridgeObjectRelease();
    v32 = objc_msgSend(v29, sel_initWithIdentifier_, v31);

    v33 = *(void **)(v2 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_machTimer);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_machTimer) = v32;
    v34 = v32;

    v35 = *(double *)(v2 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_period);
    if (v35 >= 1.0)
      v36 = 1.0;
    else
      v36 = v35 / 10.0;
    sub_1908B45BC();
    v37 = (void *)sub_190A48004();
    v38 = swift_allocObject();
    swift_weakInit();
    v39 = (_QWORD *)swift_allocObject();
    v39[2] = v38;
    v39[3] = v30;
    v39[4] = v11;
    aBlock[4] = (uint64_t)sub_1909879E4;
    aBlock[5] = (uint64_t)v39;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1908AA2A4;
    aBlock[3] = (uint64_t)&block_descriptor_2;
    v40 = _Block_copy(aBlock);
    v58 = v14;
    swift_bridgeObjectRetain();
    swift_release();
    v57 = v34;
    objc_msgSend(v34, sel_scheduleRepeatingWithFireInterval_repeatInterval_leewayInterval_queue_handler_, v37, v40, 0.0, v35, v36);
    _Block_release(v40);

    v41 = v60;
    sub_190A46078();
    swift_getKeyPath();
    swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v59, v41, v3);
    swift_retain();
    sub_190A46624();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v41, v3);
    swift_bridgeObjectRetain_n();
    v42 = sub_190A46588();
    v43 = sub_190A47F68();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      aBlock[0] = v45;
      *(_DWORD *)v44 = 136446466;
      swift_bridgeObjectRetain();
      v65[0] = sub_1908B35C4(v62, v11, aBlock);
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 12) = 2082;
      v65[0] = v63;
      v46 = sub_190A47B00();
      v65[0] = sub_1908B35C4(v46, v47, aBlock);
      sub_190A48178();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1908A7000, v42, v43, "Started machtimer %{public}s %{public}s.", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194014398](v45, -1, -1);
      MEMORY[0x194014398](v44, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  swift_bridgeObjectRetain();
  v50 = sub_190A46588();
  v51 = sub_190A47F44();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = swift_slowAlloc();
    v53 = swift_slowAlloc();
    aBlock[0] = v53;
    *(_DWORD *)v52 = 136446466;
    swift_bridgeObjectRetain();
    v65[0] = sub_1908B35C4(v62, v11, aBlock);
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v52 + 12) = 2082;
    v65[0] = v63;
    v54 = sub_190A47B00();
    v65[0] = sub_1908B35C4(v54, v55, aBlock);
    sub_190A48178();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v50, v51, "Add reference to %{public}s: %{public}s", (uint8_t *)v52, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x194014398](v53, -1, -1);
    MEMORY[0x194014398](v52, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  sub_1908F563C(v65, v63);
  return swift_endAccess();
}

uint64_t sub_190984210(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_190A46084();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21 - v11;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_1EE1E6B10 != -1)
      swift_once();
    v14 = sub_190A465A0();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EE1FD718);
    swift_bridgeObjectRetain_n();
    v15 = sub_190A46588();
    v16 = sub_190A47F44();
    if (os_log_type_enabled(v15, v16))
    {
      v21 = a3;
      v17 = swift_slowAlloc();
      v23 = v6;
      v18 = (uint8_t *)v17;
      v19 = swift_slowAlloc();
      v25 = v19;
      v22 = v7;
      *(_DWORD *)v18 = 136446210;
      swift_bridgeObjectRetain();
      v24 = sub_1908B35C4(v21, a4, &v25);
      v7 = v22;
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1908A7000, v15, v16, "Tick %{public}s.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v19, -1, -1);
      v20 = v18;
      v6 = v23;
      MEMORY[0x194014398](v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_190A46078();
    swift_getKeyPath();
    swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    swift_retain();
    sub_190A46624();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    return swift_release();
  }
  return result;
}

void sub_1909844B8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20[3];

  v1 = v0;
  BSDispatchQueueAssertMain();
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_name);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_name + 8);
  v4 = qword_1EE1E6B10;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v5 = sub_190A465A0();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EE1FD718);
  swift_bridgeObjectRetain_n();
  v6 = sub_190A46588();
  v7 = sub_190A47F44();
  v19 = v3;
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v20[0] = v9;
    *(_DWORD *)v8 = 136446466;
    swift_bridgeObjectRetain();
    sub_1908B35C4(v3, v2, v20);
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2082;
    v10 = sub_190A47B00();
    sub_1908B35C4(v10, v11, v20);
    sub_190A48178();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v6, v7, "Remove reference from %{public}s: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x194014398](v9, -1, -1);
    MEMORY[0x194014398](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v12 = v1 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_requesters;
  swift_beginAccess();
  sub_1909DFC00();
  swift_endAccess();
  if (*(_QWORD *)(*(_QWORD *)v12 + 16))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    v13 = sub_190A46588();
    v14 = sub_190A47F68();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v20[0] = v16;
      *(_DWORD *)v15 = 136446210;
      swift_bridgeObjectRetain();
      sub_1908B35C4(v19, v2, v20);
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1908A7000, v13, v14, "Stopped %{public}s.", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v16, -1, -1);
      MEMORY[0x194014398](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v17 = OBJC_IVAR____TtC9WidgetKit13DatePublisher_machTimer;
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC9WidgetKit13DatePublisher_machTimer), sel_invalidate);
    v18 = *(void **)(v1 + v17);
    *(_QWORD *)(v1 + v17) = 0;

  }
}

uint64_t sub_190984850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9WidgetKit13DatePublisher__date;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69A08);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1909848D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  int *v18;
  uint64_t *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v33 = a2;
  v9 = sub_190A46084();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v30 - v14;
  v16 = *a1;
  v17 = *((_BYTE *)a1 + 8);
  *(_QWORD *)a3 = swift_getKeyPath();
  *(_BYTE *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = swift_getKeyPath();
  *(_BYTE *)(a3 + 24) = 0;
  v18 = (int *)type metadata accessor for _ClockHandRotationEffect(0);
  v19 = (uint64_t *)(a3 + v18[6]);
  *v19 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69A10);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(a3 + v18[7]) = 0;
  v20 = a3 + v18[8];
  sub_190A46078();
  v21 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v21(v13, v15, v9);
  v32 = v20;
  sub_190A477E8();
  v31 = *(void (**)(char *, uint64_t))(v10 + 8);
  v31(v15, v9);
  if ((v17 & 1) != 0)
    v22 = qword_190A54320[v16];
  else
    v22 = v16;
  *(_QWORD *)(a3 + v18[11]) = v22;
  v34 = v16;
  v35 = v17;
  *(_QWORD *)(a3 + v18[9]) = sub_190987738();
  v23 = a3 + v18[12];
  v24 = sub_190A461BC();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = v23;
  v27 = v33;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v26, v33, v24);
  v28 = (double *)(a3 + v18[10]);
  *v28 = a4;
  v28[1] = a5;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain_n();
  sub_190A46618();
  swift_release();
  swift_release();
  swift_release();
  v21(v13, v15, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF680E0);
  sub_190A47800();
  v31(v15, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v27, v24);
}

uint64_t sub_190984B64()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x646F69726570;
  if (*v0 != 1)
    v1 = 0x656E6F5A656D6974;
  if (*v0)
    return v1;
  else
    return 0x726F68636E61;
}

uint64_t sub_190984BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_190987848(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190984BDC()
{
  sub_190984E68();
  return sub_190A48868();
}

uint64_t sub_190984C04()
{
  sub_190984E68();
  return sub_190A48874();
}

uint64_t _ClockHandRotationEffect.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  char v20;

  v16 = a2;
  v4 = sub_190A461BC();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1E6B58);
  v7 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190984E68();
  sub_190A48838();
  if (!v2)
  {
    v10 = (uint64_t)v6;
    v11 = v16;
    type metadata accessor for CGPoint(0);
    v20 = 0;
    sub_1908AA2F4((unint64_t *)&unk_1EE1E6B40, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x1E0C9BA30]);
    sub_190A48580();
    v12 = v18;
    v13 = v19;
    LOBYTE(v18) = 1;
    sub_190A48550();
    v18 = *(double *)&v15;
    LOBYTE(v19) = 0;
    v20 = 2;
    sub_1908AA2F4(&qword_1EE1E6B08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB14A0]);
    sub_190A48580();
    sub_1909848D8((uint64_t *)&v18, v10, v11, v12, v13);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_190984E68()
{
  unint64_t result;

  result = qword_1ECF68128;
  if (!qword_1ECF68128)
  {
    result = MEMORY[0x19401429C](&unk_190A5422C, &type metadata for _ClockHandRotationEffect.CodableKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF68128);
  }
  return result;
}

uint64_t _ClockHandRotationEffect.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  __int128 v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E5E70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190984E68();
  sub_190A48850();
  v11 = *(_OWORD *)(v3 + *(int *)(type metadata accessor for _ClockHandRotationEffect(0) + 40));
  v10[15] = 0;
  type metadata accessor for CGPoint(0);
  sub_1908AA2F4(&qword_1EE1E5E68, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x1E0C9BA20]);
  sub_190A48640();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_190A48610();
    LOBYTE(v11) = 2;
    sub_190A461BC();
    sub_1908AA2F4(&qword_1EE1E5E60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1488]);
    sub_190A48640();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t type metadata accessor for _ClockHandRotationEffect(uint64_t a1)
{
  return sub_1908B0210(a1, qword_1ECF69AD8);
}

uint64_t _ClockHandRotationEffect.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  long double v41;
  long double v42;
  long double v43;
  long double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (**v61)();
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (**v76)(uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v3 = v2;
  v100 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6B18);
  v98 = *(_QWORD *)(v5 - 8);
  v99 = v5;
  MEMORY[0x1E0C80A78](v5);
  v97 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_190A46888();
  v92 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v89 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for _ClockHandRotationEffect(0);
  v90 = *(_QWORD *)(v101 - 8);
  v8 = MEMORY[0x1E0C80A78](v101);
  v83 = (uint64_t)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v78 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_190A46084();
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6B28);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE50);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE58);
  MEMORY[0x1E0C80A78](v80);
  v82 = (uint64_t)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE60);
  MEMORY[0x1E0C80A78](v81);
  v25 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE68);
  MEMORY[0x1E0C80A78](v84);
  v86 = (uint64_t)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE70);
  MEMORY[0x1E0C80A78](v85);
  v88 = (uint64_t)&v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE78);
  MEMORY[0x1E0C80A78](v87);
  v96 = (uint64_t)&v78 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE80);
  MEMORY[0x1E0C80A78](v93);
  v95 = (uint64_t)&v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6B30);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v19, a1, v30);
  KeyPath = swift_getKeyPath();
  sub_1908AAA48((uint64_t)v19, (uint64_t)v22, &qword_1EE1E6B28);
  v32 = &v22[*(int *)(v20 + 36)];
  *(_QWORD *)v32 = KeyPath;
  v33 = v101;
  v32[8] = 0;
  sub_1908AA544((uint64_t)v19, &qword_1EE1E6B28);
  v34 = v33;
  v35 = v79;
  sub_19096F55C((uint64_t)v14);
  v36 = (uint64_t)v11;
  v37 = v78;
  sub_1909860B0(v3, v36);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v14, 1, v35) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF680E0);
    sub_190A477F4();
    sub_1909860F4(v36);
    sub_1908AA544((uint64_t)v14, &qword_1ECF6C2F8);
  }
  else
  {
    sub_1909860F4(v36);
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v16, v14, v35);
  }
  v38 = v3;
  v39 = (double)sub_190A46198();
  sub_190A46024();
  v41 = v40 + v39;
  v42 = *(double *)(v3 + *(int *)(v34 + 44));
  v43 = fmod(v41, v42);
  v44 = (v43 + v43) * 3.14159265 / v42;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v35);
  sub_190A47938();
  v46 = v45;
  v48 = v47;
  v49 = v82;
  sub_1908AAA48((uint64_t)v22, v82, &qword_1EE1EDE50);
  v50 = v49 + *(int *)(v80 + 36);
  *(long double *)v50 = v44;
  *(_QWORD *)(v50 + 8) = v46;
  *(_QWORD *)(v50 + 16) = v48;
  sub_1908AA544((uint64_t)v22, &qword_1EE1EDE50);
  v51 = swift_getKeyPath();
  v52 = v92;
  v53 = v89;
  v54 = v94;
  (*(void (**)(char *, _QWORD, uint64_t))(v92 + 104))(v89, *MEMORY[0x1E0CD9A90], v94);
  v55 = (uint64_t *)&v25[*(int *)(v81 + 36)];
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6B38);
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))((char *)v55 + *(int *)(v56 + 28), v53, v54);
  *v55 = v51;
  sub_1908AAA48(v49, (uint64_t)v25, &qword_1EE1EDE58);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
  sub_1908AA544(v49, &qword_1EE1EDE58);
  v57 = v83;
  sub_1909860B0(v38, v83);
  v58 = (*(unsigned __int8 *)(v90 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
  v59 = swift_allocObject();
  sub_190986158(v57, v59 + v58);
  v60 = v86;
  sub_1908AAA48((uint64_t)v25, v86, &qword_1EE1EDE60);
  v61 = (uint64_t (**)())(v60 + *(int *)(v84 + 36));
  *v61 = sub_19098619C;
  v61[1] = (uint64_t (*)())v59;
  v61[2] = 0;
  v61[3] = 0;
  sub_1908AA544((uint64_t)v25, &qword_1EE1EDE60);
  sub_1909860B0(v38, v57);
  v62 = swift_allocObject();
  sub_190986158(v57, v62 + v58);
  v63 = v88;
  sub_1908AAA48(v60, v88, &qword_1EE1EDE68);
  v64 = (_QWORD *)(v63 + *(int *)(v85 + 36));
  *v64 = 0;
  v64[1] = 0;
  v64[2] = sub_1909861AC;
  v64[3] = v62;
  sub_1908AA544(v60, &qword_1EE1EDE68);
  v65 = *(_QWORD *)v38;
  LOBYTE(v54) = *(_BYTE *)(v38 + 8);
  sub_1908D1B74(*(_QWORD *)v38, v54);
  v66 = sub_19096EA60(v65, v54);
  sub_1908CE654(v65, v54);
  sub_1909860B0(v38, v57);
  v67 = swift_allocObject();
  sub_190986158(v57, v67 + v58);
  v68 = v96;
  sub_1908AAA48(v63, v96, &qword_1EE1EDE70);
  v69 = v68 + *(int *)(v87 + 36);
  *(_BYTE *)v69 = v66 & 1;
  *(_QWORD *)(v69 + 8) = sub_1909861FC;
  *(_QWORD *)(v69 + 16) = v67;
  sub_1908AA544(v63, &qword_1EE1EDE70);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69A08);
  v70 = v97;
  sub_190A4660C();
  swift_endAccess();
  sub_1909860B0(v38, v57);
  v71 = swift_allocObject();
  sub_190986158(v57, v71 + v58);
  v72 = v95;
  sub_1908AAA48(v68, v95, &qword_1EE1EDE78);
  v73 = v93;
  v75 = v98;
  v74 = v99;
  (*(void (**)(uint64_t, char *, uint64_t))(v98 + 16))(v72 + *(int *)(v93 + 52), v70, v99);
  v76 = (uint64_t (**)(uint64_t))(v72 + *(int *)(v73 + 56));
  *v76 = sub_19098623C;
  v76[1] = (uint64_t (*)(uint64_t))v71;
  (*(void (**)(char *, uint64_t))(v75 + 8))(v70, v74);
  sub_1908AA544(v68, &qword_1EE1EDE78);
  return sub_190986278(v72, v100);
}

uint64_t sub_19098596C()
{
  return sub_190A46A5C();
}

uint64_t sub_19098598C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_190A46888();
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_190A46A68();
}

uint64_t sub_190985A08(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;

  type metadata accessor for _ClockHandRotationEffect(0);
  v3 = sub_190A478F0();
  return a2(v3);
}

uint64_t sub_190985A50(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v2 = sub_190A46084();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v10 - v8;
  if ((*a1 & 1) == 0)
  {
    type metadata accessor for _ClockHandRotationEffect(0);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_190A46618();
    swift_release();
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v9, v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF680E0);
    sub_190A47800();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  return result;
}

uint64_t sub_190985B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t result;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;

  v4 = sub_190A46084();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v16 - v9;
  v11 = *(_QWORD *)a2;
  v12 = *(_BYTE *)(a2 + 8);
  sub_1908D1B74(*(_QWORD *)a2, v12);
  v13 = sub_19096EA60(v11, v12);
  result = sub_1908CE654(v11, v12);
  if ((v13 & 1) == 0)
  {
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v15(v10, a1, v4);
    type metadata accessor for _ClockHandRotationEffect(0);
    v15(v8, (uint64_t)v10, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF680E0);
    sub_190A47800();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  return result;
}

uint64_t sub_190985CB4()
{
  sub_1908AA2F4((unint64_t *)&unk_1ECF69A60, type metadata accessor for _ClockHandRotationEffect, (uint64_t)&protocol conformance descriptor for _ClockHandRotationEffect);
  return sub_190A470F8();
}

uint64_t sub_190985D34()
{
  sub_1908AA2F4((unint64_t *)&unk_1ECF69A60, type metadata accessor for _ClockHandRotationEffect, (uint64_t)&protocol conformance descriptor for _ClockHandRotationEffect);
  return sub_190A47104();
}

uint64_t sub_190985DB4()
{
  sub_1908AA2F4((unint64_t *)&unk_1ECF69A60, type metadata accessor for _ClockHandRotationEffect, (uint64_t)&protocol conformance descriptor for _ClockHandRotationEffect);
  return sub_190A47110();
}

uint64_t sub_190985E28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return _ClockHandRotationEffect.init(from:)(a1, a2);
}

uint64_t sub_190985E3C(_QWORD *a1)
{
  return _ClockHandRotationEffect.encode(to:)(a1);
}

uint64_t View._clockHandRotationEffect(_:in:anchor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v12 = sub_190A461BC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for _ClockHandRotationEffect(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_BYTE *)(a1 + 8);
  v22 = *(_QWORD *)a1;
  v23 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  sub_1909848D8(&v22, (uint64_t)v15, (uint64_t)v18, a5, a6);
  MEMORY[0x194012838](v18, a3, v16, a4);
  return sub_1909860F4((uint64_t)v18);
}

uint64_t sub_190985F88@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_1909879F0();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_190985FD4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_1909879F0();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_190986020()
{
  sub_1909879F0();
  return sub_190A46C48();
}

uint64_t sub_190986068()
{
  sub_1909879F0();
  return sub_190A46C48();
}

uint64_t sub_1909860B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _ClockHandRotationEffect(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1909860F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for _ClockHandRotationEffect(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_190986130()
{
  return sub_190A46A5C();
}

uint64_t sub_190986158(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _ClockHandRotationEffect(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19098619C()
{
  return sub_1909861B8(sub_1909838B8);
}

uint64_t sub_1909861AC()
{
  return sub_1909861B8((uint64_t (*)(uint64_t))sub_1909844B8);
}

uint64_t sub_1909861B8(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for _ClockHandRotationEffect(0) - 8) + 80);
  return sub_190985A08(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_1909861FC(_BYTE *a1)
{
  type metadata accessor for _ClockHandRotationEffect(0);
  return sub_190985A50(a1);
}

uint64_t sub_19098623C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for _ClockHandRotationEffect(0) - 8) + 80);
  return sub_190985B8C(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_190986278(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1909862C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1909862D0()
{
  return sub_1908AA2F4(&qword_1ECF69AD0, type metadata accessor for _ClockHandRotationEffect, (uint64_t)&protocol conformance descriptor for _ClockHandRotationEffect);
}

uint64_t sub_1909862FC()
{
  return sub_1908AA2F4(&qword_1ECF69AC8, type metadata accessor for _ClockHandRotationEffect, (uint64_t)&protocol conformance descriptor for _ClockHandRotationEffect);
}

uint64_t sub_190986328()
{
  return sub_1908AA2F4(&qword_1ECF69AC0, type metadata accessor for _ClockHandRotationEffect, (uint64_t)&protocol conformance descriptor for _ClockHandRotationEffect);
}

uint64_t sub_190986354()
{
  return type metadata accessor for DatePublisher(0);
}

uint64_t type metadata accessor for DatePublisher(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1ECF68108);
}

void sub_190986370()
{
  unint64_t v0;

  sub_190987250(319, &qword_1ECF680D8, MEMORY[0x1E0C96198]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

unint64_t initializeBufferWithCopyOfBuffer for _ClockHandRotationEffect(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_1908D1B74(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_BYTE *)(a2 + 24);
    sub_1908D1B74(v9, v10);
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v10;
    v11 = a3[6];
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_190A46084();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
    }
    else
    {
      *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v18 = a3[8];
    *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
    v19 = a1 + v18;
    v20 = a2 + v18;
    v21 = sub_190A46084();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF680E0);
    *(_QWORD *)(v19 + *(int *)(v22 + 28)) = *(_QWORD *)(v20 + *(int *)(v22 + 28));
    v23 = a3[10];
    *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
    *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
    v24 = a3[12];
    *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
    v25 = a1 + v24;
    v26 = a2 + v24;
    v27 = sub_190A461BC();
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
    swift_retain();
    swift_retain();
    v28(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for _ClockHandRotationEffect(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1908CE654(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  sub_1908CE654(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v4 = a1 + a2[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_190A46084();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v7 = a1 + a2[8];
  v8 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF680E0);
  swift_release();
  swift_release();
  v9 = a1 + a2[12];
  v10 = sub_190A461BC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for _ClockHandRotationEffect(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_1908D1B74(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_1908D1B74(v8, v9);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_190A46084();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  else
  {
    *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v16 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF680E0);
  *(_QWORD *)(v17 + *(int *)(v20 + 28)) = *(_QWORD *)(v18 + *(int *)(v20 + 28));
  v21 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  v22 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_190A461BC();
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  swift_retain();
  swift_retain();
  v26(v23, v24, v25);
  return a1;
}

uint64_t assignWithCopy for _ClockHandRotationEffect(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_1908D1B74(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1908CE654(v8, v9);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_BYTE *)(a2 + 24);
  sub_1908D1B74(v10, v11);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 24) = v11;
  sub_1908CE654(v12, v13);
  if (a1 != a2)
  {
    v14 = a3[6];
    v15 = (_QWORD *)(a1 + v14);
    v16 = (_QWORD *)(a2 + v14);
    sub_1908AA544(a1 + v14, &qword_1ECF69A10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_190A46084();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF680E0);
  *(_QWORD *)(v21 + *(int *)(v24 + 28)) = *(_QWORD *)(v22 + *(int *)(v24 + 28));
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  v25 = a3[10];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v28 = a3[12];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_190A461BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 24))(v29, v30, v31);
  return a1;
}

uint64_t initializeWithTake for _ClockHandRotationEffect(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_190A46084();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v7, v8, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v13 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF680E0);
  *(_QWORD *)(v14 + *(int *)(v17 + 28)) = *(_QWORD *)(v15 + *(int *)(v17 + 28));
  v18 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  v19 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_190A461BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for _ClockHandRotationEffect(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_1908CE654(v8, v9);
  v10 = *((_BYTE *)a2 + 24);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v10;
  sub_1908CE654(v11, v12);
  if ((uint64_t *)a1 != a2)
  {
    v13 = a3[6];
    v14 = (void *)(a1 + v13);
    v15 = (char *)a2 + v13;
    sub_1908AA544(a1 + v13, &qword_1ECF69A10);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69A10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_190A46084();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v18 + 32))(v14, v15, v17);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  v20 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  v21 = a1 + v20;
  v22 = (uint64_t)a2 + v20;
  v23 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF680E0);
  *(_QWORD *)(v21 + *(int *)(v24 + 28)) = *(_QWORD *)(v22 + *(int *)(v24 + 28));
  swift_release();
  *(_QWORD *)(a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  swift_release();
  v25 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)(a1 + v25) = *(uint64_t *)((char *)a2 + v25);
  v26 = a3[12];
  v27 = a1 + v26;
  v28 = (uint64_t)a2 + v26;
  v29 = sub_190A461BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
  return a1;
}

uint64_t getEnumTagSinglePayload for _ClockHandRotationEffect()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190986F70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6B20);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF680E0);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_190A461BC();
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[12];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[9]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for _ClockHandRotationEffect()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19098704C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6B20);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[6];
  }
  else
  {
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF680E0);
    v9 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = result;
      v11 = a4[8];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[9]) = (a2 - 1);
        return result;
      }
      v10 = sub_190A461BC();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = a4[12];
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_190987118()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1909871F8();
  if (v0 <= 0x3F)
  {
    sub_190987250(319, &qword_1ECF69B20, MEMORY[0x1E0CDF9A8]);
    if (v1 <= 0x3F)
    {
      sub_190A461BC();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_1909871F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ECF69BE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6C2F8);
    v0 = sub_190A466A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ECF69BE8);
  }
}

void sub_190987250(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_190A46084();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for _ClockHandRotationEffect.Period(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for _ClockHandRotationEffect.Period(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_19098730C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_190987328(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for _ClockHandRotationEffect.Period()
{
  return &type metadata for _ClockHandRotationEffect.Period;
}

unint64_t sub_19098735C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EDE88;
  if (!qword_1EE1EDE88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EDE80);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDA108], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EDE88);
  }
  return result;
}

uint64_t sub_1909873A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  type metadata accessor for _ClockHandRotationEffect(255);
  v2 = sub_190A46894();
  v4[0] = v1;
  v4[1] = sub_1908AA2F4(&qword_1ECF69AC0, type metadata accessor for _ClockHandRotationEffect, (uint64_t)&protocol conformance descriptor for _ClockHandRotationEffect);
  return MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v2, v4);
}

uint64_t storeEnumTagSinglePayload for _ClockHandRotationEffect.CodableKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190987474 + 4 * byte_190A53F75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1909874A8 + 4 * byte_190A53F70[v4]))();
}

uint64_t sub_1909874A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909874B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909874B8);
  return result;
}

uint64_t sub_1909874C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909874CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1909874D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909874D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for _ClockHandRotationEffect.CodableKeys()
{
  return &type metadata for _ClockHandRotationEffect.CodableKeys;
}

unint64_t sub_1909874F8()
{
  unint64_t result;

  result = qword_1EE1EDE90;
  if (!qword_1EE1EDE90)
  {
    result = MEMORY[0x19401429C](&unk_190A54204, &type metadata for _ClockHandRotationEffect.CodableKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDE90);
  }
  return result;
}

unint64_t sub_190987540()
{
  unint64_t result;

  result = qword_1ECF68120;
  if (!qword_1ECF68120)
  {
    result = MEMORY[0x19401429C](&unk_190A54174, &type metadata for _ClockHandRotationEffect.CodableKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF68120);
  }
  return result;
}

unint64_t sub_190987588()
{
  unint64_t result;

  result = qword_1ECF68118;
  if (!qword_1ECF68118)
  {
    result = MEMORY[0x19401429C](&unk_190A5419C, &type metadata for _ClockHandRotationEffect.CodableKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF68118);
  }
  return result;
}

uint64_t sub_1909875CC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_190A46618();
  swift_release();
  return swift_release();
}

uint64_t sub_190987634(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = sub_190A46084();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  swift_getKeyPath();
  swift_getKeyPath();
  v9(v6, (uint64_t)v8, v2);
  swift_retain();
  sub_190A46624();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_190987738()
{
  uint64_t v0;
  double v1;
  uint64_t *v2;
  double v3;

  v1 = *(double *)v0;
  if (*(_BYTE *)(v0 + 8) == 1)
  {
    if (v1 != 0.0)
    {
      if (*(_QWORD *)&v1 == 1)
        goto LABEL_4;
LABEL_16:
      if (qword_1ECF68100 != -1)
        swift_once();
      v2 = &qword_1ECF6D3F8;
      return *v2;
    }
  }
  else
  {
    v3 = *(double *)v0;
    if (v1 < 43200.0 || v3 > 1.79769313e308)
    {
      if (v3 >= 3600.0 && v3 < 43200.0)
      {
LABEL_4:
        if (qword_1ECF69A20 != -1)
          swift_once();
        v2 = &qword_1ECF6D408;
        return *v2;
      }
      goto LABEL_16;
    }
  }
  if (qword_1ECF69A18 != -1)
    swift_once();
  v2 = &qword_1ECF6D400;
  return *v2;
}

uint64_t sub_190987848(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F68636E61 && a2 == 0xE600000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F69726570 && a2 == 0xE600000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_190987994()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1909879B8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1909879E4(uint64_t a1)
{
  uint64_t v1;

  return sub_190984210(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

unint64_t sub_1909879F0()
{
  unint64_t result;

  result = qword_1EE1EA720;
  if (!qword_1EE1EA720)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetIsSnapshottingKey, &type metadata for WidgetIsSnapshottingKey);
    atomic_store(result, (unint64_t *)&qword_1EE1EA720);
  }
  return result;
}

uint64_t EnvironmentValues._wantsCustomFontsEmbeddedInArchive.getter()
{
  unsigned __int8 v1;

  sub_190901CCC();
  sub_190A46C3C();
  return v1;
}

uint64_t EnvironmentValues._wantsCustomFontsEmbeddedInArchive.setter()
{
  sub_190901CCC();
  return sub_190A46C48();
}

uint64_t (*EnvironmentValues._wantsCustomFontsEmbeddedInArchive.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_190901CCC();
  sub_190A46C3C();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_190987B14;
}

uint64_t sub_190987B14(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_190A46C48();
}

ValueMetadata *_s36WantsCustomFontsEmbeddedInArchiveKeyVMa()
{
  return &_s36WantsCustomFontsEmbeddedInArchiveKeyVN;
}

uint64_t sub_190987B60()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D638 = result;
  return result;
}

uint64_t sub_190987B84()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B2A8);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D620 = v0;
  *(_QWORD *)algn_1ECF6D628 = 0xD000000000000025;
  qword_1ECF6D630 = 0x8000000190A630F0;
  return result;
}

ValueMetadata *type metadata accessor for WantsCustomFontsEmbeddedInArchiveKey()
{
  return &type metadata for WantsCustomFontsEmbeddedInArchiveKey;
}

uint64_t sub_190987C08()
{
  if (qword_1ECF6B3A8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_190987C48()
{
  uint64_t v0;

  if (qword_1ECF6B3A0 != -1)
    swift_once();
  v0 = qword_1ECF6D620;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t EnvironmentValues.inJindo.getter()
{
  unsigned __int8 v1;

  sub_190987CFC();
  sub_190A46C3C();
  return v1;
}

unint64_t sub_190987CFC()
{
  unint64_t result;

  result = qword_1EE1EB4B8;
  if (!qword_1EE1EB4B8)
  {
    result = MEMORY[0x19401429C](&unk_190A54428, &_s22_InJindoEnvironmentKeyVN);
    atomic_store(result, (unint64_t *)&qword_1EE1EB4B8);
  }
  return result;
}

uint64_t EnvironmentValues.inJindo.setter()
{
  sub_190987CFC();
  return sub_190A46C48();
}

uint64_t (*EnvironmentValues.inJindo.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_190987CFC();
  sub_190A46C3C();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_190987DD8;
}

uint64_t sub_190987DD8(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_190A46C48();
}

uint64_t sub_190987E0C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_190987CFC();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_190987E58()
{
  sub_190987CFC();
  return sub_190A46C48();
}

ValueMetadata *_s22_InJindoEnvironmentKeyVMa()
{
  return &_s22_InJindoEnvironmentKeyVN;
}

uint64_t destroy for WidgetURLSessionEventConfiguration()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for WidgetURLSessionEventConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for WidgetURLSessionEventConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for WidgetURLSessionEventConfiguration(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetURLSessionEventConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetURLSessionEventConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityViewSource()
{
  return &type metadata for ActivityViewSource;
}

_QWORD *sub_190988058(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_190A46204();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = *v10;
    v12 = v10[1];
    sub_1908B53B8(*v10, v12);
    *v9 = v11;
    v9[1] = v12;
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_190988108(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_190A46204();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return sub_1908B53FC(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
}

uint64_t sub_190988150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;

  v6 = sub_190A46204();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  sub_1908B53B8(*v9, v11);
  *v8 = v10;
  v8[1] = v11;
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1909881D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v6 = sub_190A46204();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  sub_1908B53B8(*v9, v11);
  v12 = *v8;
  v13 = v8[1];
  *v8 = v10;
  v8[1] = v11;
  sub_1908B53FC(v12, v13);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_190988260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_190A46204();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_1909882C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = sub_190A46204();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v7);
  v9 = *(_QWORD *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  sub_1908B53FC(v8, v9);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_190988338()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190988344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_190A46204();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1909883D0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909883DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_190A46204();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for ActivityViewSourceContext()
{
  uint64_t result;

  result = qword_1EE1E6598;
  if (!qword_1EE1E6598)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_190988490()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190A46204();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_19098850C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (**v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  _QWORD *v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  os_log_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  _BOOL4 v56;
  uint64_t (**v57)(uint64_t, uint64_t, uint64_t);
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  os_log_t v62;
  uint64_t v63;
  char *v64;
  void (*v65)(os_log_t, uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  id v69;
  os_log_t v70;
  uint64_t v71;
  id v72;
  id v73;
  NSObject *v74;
  os_log_type_t v75;
  _BOOL4 v76;
  char *v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  id v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  uint64_t v94;
  uint8_t *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t result;
  uint64_t v107;
  os_log_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint8_t *v114;
  uint64_t v115;
  uint64_t (**v116)(uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t AssociatedTypeWitness;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  os_log_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136[2];
  uint64_t v137;

  v120 = a3;
  v130 = type metadata accessor for ActivityViewSourceContext();
  v5 = MEMORY[0x1E0C80A78](v130);
  v123 = (uint64_t)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v128 = (uint64_t)&v114 - v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_190A48148();
  v126 = *(_QWORD *)(v8 - 8);
  v127 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v121 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v119 = (char *)&v114 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v124 = (char *)&v114 - v14;
  MEMORY[0x1E0C80A78](v13);
  v129 = (os_log_t)((char *)&v114 - v15);
  v134 = sub_190A48148();
  v16 = *(_QWORD *)(v134 - 8);
  v17 = MEMORY[0x1E0C80A78](v134);
  v122 = (uint64_t)&v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))((char *)&v114 - v20);
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v114 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v114 - v25;
  v27 = *(_QWORD *)(a1 - 8);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  v28((char *)&v114 - v25, 1, 1, a1);
  v29 = v133;
  sub_190A461E0();
  v132 = v26;
  v133 = v29;
  v131 = v16;
  if (v29)
  {
    v30 = v134;
    if (qword_1EE1E6038 != -1)
      swift_once();
    v31 = sub_190A465A0();
    __swift_project_value_buffer(v31, (uint64_t)qword_1EE1FD6E8);
    v32 = v128;
    sub_190989178(v137, v128);
    v33 = v133;
    v34 = v133;
    v35 = v33;
    v36 = sub_190A46588();
    v37 = sub_190A47F50();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc();
      v130 = swift_slowAlloc();
      v137 = swift_slowAlloc();
      v136[0] = v137;
      *(_DWORD *)v38 = 136315394;
      v129 = v36;
      v39 = sub_190A461C8();
      v41 = v40;
      v42 = sub_190A45FDC();
      v43 = v33;
      v45 = v44;
      sub_1908B53FC(v39, v41);
      v135 = sub_1908B35C4(v42, v45, v136);
      v30 = v134;
      sub_190A48178();
      swift_bridgeObjectRelease();
      sub_1909891BC(v32);
      *(_WORD *)(v38 + 12) = 2112;
      v46 = v43;
      v47 = _swift_stdlib_bridgeErrorToNSError();
      v135 = v47;
      sub_190A48178();
      v48 = v130;
      *(_QWORD *)v130 = v47;

      v49 = v129;
      _os_log_impl(&dword_1908A7000, v129, v37, "Error decoding activity attributes: %s: %@", (uint8_t *)v38, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
      swift_arrayDestroy();
      MEMORY[0x194014398](v48, -1, -1);
      v50 = v137;
      swift_arrayDestroy();
      MEMORY[0x194014398](v50, -1, -1);
      MEMORY[0x194014398](v38, -1, -1);

    }
    else
    {
      sub_1909891BC(v32);

    }
    v90 = v131;
    v77 = v132;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v77, v30);
  }
  v116 = v21;
  v115 = v27;
  v118 = a2;
  v28(v24, 0, 1, a1);
  v51 = *(void (**)(char *, char *, uint64_t))(v16 + 40);
  v52 = v134;
  v51(v26, v24, v134);
  if (qword_1EE1E6038 != -1)
    swift_once();
  v128 = a1;
  v53 = sub_190A465A0();
  v117 = __swift_project_value_buffer(v53, (uint64_t)qword_1EE1FD6E8);
  v54 = sub_190A46588();
  v55 = sub_190A47F44();
  v56 = os_log_type_enabled(v54, v55);
  v57 = v116;
  if (v56)
  {
    v58 = (uint8_t *)swift_slowAlloc();
    v59 = swift_slowAlloc();
    v136[0] = v59;
    *(_DWORD *)v58 = 136315138;
    v114 = v58 + 4;
    swift_beginAccess();
    (*(void (**)(uint64_t (**)(uint64_t, uint64_t, uint64_t), char *, uint64_t))(v131 + 16))(v57, v26, v52);
    v60 = sub_190A47B00();
    v135 = sub_1908B35C4(v60, v61, v136);
    sub_190A48178();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v54, v55, "Decoded activity attributes: %s", v58, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v59, -1, -1);
    MEMORY[0x194014398](v58, -1, -1);
  }

  v62 = v129;
  v63 = AssociatedTypeWitness;
  v64 = *(char **)(AssociatedTypeWitness - 8);
  v65 = (void (*)(os_log_t, uint64_t, uint64_t, uint64_t))*((_QWORD *)v64 + 7);
  v65(v129, 1, 1, AssociatedTypeWitness);
  sub_190A45E08();
  swift_allocObject();
  v66 = sub_190A45DFC();
  v67 = v137;
  swift_getAssociatedConformanceWitness();
  v68 = v124;
  v69 = v133;
  sub_190A45DF0();
  if (v69)
  {
    v70 = v62;
    swift_release();
    v71 = v123;
    sub_190989178(v67, v123);
    v72 = v69;
    v73 = v69;
    v74 = sub_190A46588();
    v75 = sub_190A47F50();
    v76 = os_log_type_enabled(v74, v75);
    v77 = v132;
    if (v76)
    {
      v78 = swift_slowAlloc();
      v133 = (_QWORD *)swift_slowAlloc();
      v137 = swift_slowAlloc();
      v136[0] = v137;
      *(_DWORD *)v78 = 136315394;
      v79 = (uint64_t *)(v71 + *(int *)(v130 + 20));
      v80 = *v79;
      v81 = v79[1];
      sub_1908B53B8(*v79, v81);
      v82 = sub_190A45FDC();
      v84 = v83;
      v85 = v81;
      v70 = v129;
      sub_1908B53FC(v80, v85);
      v135 = sub_1908B35C4(v82, v84, v136);
      sub_190A48178();
      swift_bridgeObjectRelease();
      sub_1909891BC(v123);
      *(_WORD *)(v78 + 12) = 2112;
      v86 = v69;
      v87 = _swift_stdlib_bridgeErrorToNSError();
      v135 = v87;
      v77 = v132;
      sub_190A48178();
      v88 = v133;
      *v133 = v87;

      _os_log_impl(&dword_1908A7000, v74, v75, "Error decoding activity state: %s: %@", (uint8_t *)v78, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
      swift_arrayDestroy();
      MEMORY[0x194014398](v88, -1, -1);
      v89 = v137;
      swift_arrayDestroy();
      MEMORY[0x194014398](v89, -1, -1);
      MEMORY[0x194014398](v78, -1, -1);
    }
    else
    {
      sub_1909891BC(v71);

    }
    v30 = v134;
    v90 = v131;
    v113 = v126;
    v112 = v127;
    swift_willThrow();
    (*(void (**)(os_log_t, uint64_t))(v113 + 8))(v70, v112);
    return (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v77, v30);
  }
  v123 = v66;
  v116 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v64;
  v133 = 0;
  v65((os_log_t)v68, 0, 1, v63);
  v92 = v126;
  v91 = v127;
  (*(void (**)(os_log_t, char *, uint64_t))(v126 + 40))(v62, v68, v127);
  v93 = sub_190A46588();
  v94 = sub_190A47F44();
  if (os_log_type_enabled(v93, (os_log_type_t)v94))
  {
    v95 = (uint8_t *)swift_slowAlloc();
    v96 = swift_slowAlloc();
    v136[0] = v96;
    *(_DWORD *)v95 = 136315138;
    v124 = (char *)(v95 + 4);
    swift_beginAccess();
    (*(void (**)(char *, os_log_t, uint64_t))(v92 + 16))(v119, v62, v91);
    v97 = sub_190A47B00();
    v135 = sub_1908B35C4(v97, v98, v136);
    sub_190A48178();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v93, (os_log_type_t)v94, "Decoded activity state: %s", v95, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v96, -1, -1);
    MEMORY[0x194014398](v95, -1, -1);
  }

  swift_release();
  v99 = v134;
  v100 = v122;
  v101 = sub_190A461F8();
  v103 = v102;
  v104 = v132;
  swift_beginAccess();
  v105 = v131;
  (*(void (**)(uint64_t, char *, uint64_t))(v131 + 16))(v100, v104, v99);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v100, 1, v128);
  v107 = v130;
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v108 = v129;
    swift_beginAccess();
    v110 = v126;
    v109 = v127;
    v111 = (uint64_t)v121;
    (*(void (**)(char *, os_log_t, uint64_t))(v126 + 16))(v121, v108, v127);
    result = v116[6](v111, 1, AssociatedTypeWitness);
    if ((_DWORD)result != 1)
    {
      sub_19093D994(v101, v103, v122, v111, *(_BYTE *)(v137 + *(int *)(v107 + 24)), v128, v118, v120);
      (*(void (**)(os_log_t, uint64_t))(v110 + 8))(v108, v109);
      return (*(uint64_t (**)(char *, uint64_t))(v105 + 8))(v132, v99);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_190989178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityViewSourceContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1909891BC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ActivityViewSourceContext();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t EnvironmentValues._widgetAccessoryBackgroundAccentable.getter()
{
  unsigned __int8 v1;

  sub_190942114();
  sub_190A46C3C();
  return v1;
}

uint64_t EnvironmentValues._widgetAccessoryBackgroundAccentable.setter()
{
  sub_190942114();
  return sub_190A46C48();
}

uint64_t (*EnvironmentValues._widgetAccessoryBackgroundAccentable.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_190942114();
  sub_190A46C3C();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_1909892C8;
}

uint64_t sub_1909892C8(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_190A46C48();
}

ValueMetadata *type metadata accessor for WidgetAccessoryBackgroundAccentableEnvironmentKey()
{
  return &type metadata for WidgetAccessoryBackgroundAccentableEnvironmentKey;
}

uint64_t *sub_190989314(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  id v27;
  id v28;
  id v29;
  char *v31;
  char *v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_190A45FC4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = type metadata accessor for BundleStub();
    v12 = *(int *)(v11 + 20);
    v13 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
    v14 = *(int *)(v11 + 24);
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v19 = *(void **)((char *)a2 + v18);
    *(uint64_t *)((char *)a1 + v18) = (uint64_t)v19;
    v20 = a3[7];
    v21 = a3[8];
    v22 = (uint64_t *)((char *)a1 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = (void *)v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v31 = (char *)a1 + v21;
    v32 = (char *)a2 + v21;
    v25 = sub_190A46084();
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    v27 = v13;
    swift_bridgeObjectRetain();
    v28 = v19;
    swift_retain();
    v29 = v24;
    v26(v31, v32, v25);
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  }
  swift_retain();
  return a1;
}

uint64_t sub_1909894B0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_190A45FC4();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);

  swift_bridgeObjectRelease();
  v6 = a1 + a2[7];
  swift_release();

  v7 = a1 + a2[8];
  v8 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_release();
}

char *sub_190989588(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  id v25;
  id v26;
  id v27;
  char *v29;
  char *v30;

  v6 = sub_190A45FC4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = type metadata accessor for BundleStub();
  v10 = *(int *)(v9 + 20);
  v11 = *(void **)&a2[v10];
  *(_QWORD *)&a1[v10] = v11;
  v12 = *(int *)(v9 + 24);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  v16 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v17 = *(void **)&a2[v16];
  *(_QWORD *)&a1[v16] = v17;
  v18 = a3[7];
  v19 = a3[8];
  v20 = &a1[v18];
  v21 = &a2[v18];
  v22 = (void *)*((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = v22;
  v29 = &a1[v19];
  v30 = &a2[v19];
  v23 = sub_190A46084();
  v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v25 = v11;
  swift_bridgeObjectRetain();
  v26 = v17;
  swift_retain();
  v27 = v22;
  v24(v29, v30, v23);
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_retain();
  return a1;
}

char *sub_1909896FC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v6 = sub_190A45FC4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = type metadata accessor for BundleStub();
  v13 = *(int *)(v12 + 20);
  v14 = *(void **)&a2[v13];
  v15 = *(void **)&a1[v13];
  *(_QWORD *)&a1[v13] = v14;
  v16 = v14;

  v17 = *(int *)(v12 + 24);
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[5];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *((_DWORD *)v21 + 1) = *((_DWORD *)v22 + 1);
  v23 = a3[6];
  v24 = *(void **)&a2[v23];
  v25 = *(void **)&a1[v23];
  *(_QWORD *)&a1[v23] = v24;
  v26 = v24;

  v27 = a3[7];
  v28 = &a1[v27];
  v29 = &a2[v27];
  *(_QWORD *)&a1[v27] = *(_QWORD *)&a2[v27];
  swift_retain();
  swift_release();
  v30 = (void *)*((_QWORD *)v29 + 1);
  v31 = (void *)*((_QWORD *)v28 + 1);
  *((_QWORD *)v28 + 1) = v30;
  v32 = v30;

  v33 = a3[8];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v36 = sub_190A46084();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 24))(v34, v35, v36);
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1909898FC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v6 = sub_190A45FC4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = type metadata accessor for BundleStub();
  *(_QWORD *)&a1[*(int *)(v9 + 20)] = *(_QWORD *)&a2[*(int *)(v9 + 20)];
  *(_OWORD *)&a1[*(int *)(v9 + 24)] = *(_OWORD *)&a2[*(int *)(v9 + 24)];
  v10 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  v11 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_190A46084();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  return a1;
}

char *sub_190989A20(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  void *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v6 = sub_190A45FC4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = type metadata accessor for BundleStub();
  v13 = *(int *)(v12 + 20);
  v14 = *(void **)&a1[v13];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];

  v15 = *(int *)(v12 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v19 = *(_QWORD *)v17;
  v18 = *((_QWORD *)v17 + 1);
  *(_QWORD *)v16 = v19;
  *((_QWORD *)v16 + 1) = v18;
  swift_bridgeObjectRelease();
  v20 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v21 = *(void **)&a1[v20];
  *(_QWORD *)&a1[v20] = *(_QWORD *)&a2[v20];

  v22 = a3[7];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *(_QWORD *)&a1[v22] = *(_QWORD *)&a2[v22];
  swift_release();
  v25 = (void *)*((_QWORD *)v23 + 1);
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);

  v26 = a3[8];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = sub_190A46084();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_release();
  return a1;
}

uint64_t sub_190989BE0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190989BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for BundleStub();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_190A46084();
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_190989C94()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190989CA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for BundleStub();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    v10 = sub_190A46084();
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for ControlArchiveStorageMetadata(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1EE1EBF28);
}

uint64_t sub_190989D58()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for BundleStub();
  if (v1 <= 0x3F)
  {
    result = sub_190A46084();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_190989E08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  char *v32;
  char *v33;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_190A45FC4();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v10 = type metadata accessor for BundleStub();
    v11 = *(int *)(v10 + 20);
    v12 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v12;
    v13 = *(int *)(v10 + 24);
    v14 = (uint64_t *)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
    *(uint64_t *)((char *)a1 + v17[5]) = *(uint64_t *)((char *)a2 + v17[5]);
    v18 = v17[6];
    v19 = *(void **)((char *)a2 + v18);
    *(uint64_t *)((char *)a1 + v18) = (uint64_t)v19;
    v20 = v17[7];
    v21 = (uint64_t *)((char *)a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = (void *)v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = v17[8];
    v32 = (char *)a2 + v24;
    v33 = (char *)a1 + v24;
    v25 = sub_190A46084();
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    v27 = v12;
    swift_bridgeObjectRetain();
    v28 = v19;
    swift_retain();
    v29 = v23;
    v26(v33, v32, v25);
    *(uint64_t *)((char *)a1 + v17[9]) = *(uint64_t *)((char *)a2 + v17[9]);
    v30 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(_DWORD *)((char *)a1 + v30) = *(_DWORD *)((char *)a2 + v30);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_190989FD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_190A45FC4();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);

  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);

  v5 = a1 + v4[7];
  swift_release();

  v6 = a1 + v4[8];
  v7 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  return swift_bridgeObjectRelease();
}

char *sub_19098A0C8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  char *v30;
  char *v31;

  v5 = sub_190A45FC4();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  v8 = type metadata accessor for BundleStub();
  v9 = *(int *)(v8 + 20);
  v10 = *(void **)&a2[v9];
  *(_QWORD *)&a1[v9] = v10;
  v11 = *(int *)(v8 + 24);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = v14;
  v15 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  *(_QWORD *)&a1[v15[5]] = *(_QWORD *)&a2[v15[5]];
  v16 = v15[6];
  v17 = *(void **)&a2[v16];
  *(_QWORD *)&a1[v16] = v17;
  v18 = v15[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = (void *)*((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v22 = v15[8];
  v30 = &a2[v22];
  v31 = &a1[v22];
  v23 = sub_190A46084();
  v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v25 = v10;
  swift_bridgeObjectRetain();
  v26 = v17;
  swift_retain();
  v27 = v21;
  v24(v31, v30, v23);
  *(_QWORD *)&a1[v15[9]] = *(_QWORD *)&a2[v15[9]];
  v28 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  *(_DWORD *)&a1[v28] = *(_DWORD *)&a2[v28];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_19098A26C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  char *v29;
  char *v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;

  v6 = sub_190A45FC4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = type metadata accessor for BundleStub();
  v13 = *(int *)(v12 + 20);
  v14 = *(void **)&a2[v13];
  v15 = *(void **)&a1[v13];
  *(_QWORD *)&a1[v13] = v14;
  v16 = v14;

  v17 = *(int *)(v12 + 24);
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  v21 = v20[5];
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *((_DWORD *)v22 + 1) = *((_DWORD *)v23 + 1);
  v24 = v20[6];
  v25 = *(void **)&a2[v24];
  v26 = *(void **)&a1[v24];
  *(_QWORD *)&a1[v24] = v25;
  v27 = v25;

  v28 = v20[7];
  v29 = &a1[v28];
  v30 = &a2[v28];
  *(_QWORD *)&a1[v28] = *(_QWORD *)&a2[v28];
  swift_retain();
  swift_release();
  v31 = (void *)*((_QWORD *)v30 + 1);
  v32 = (void *)*((_QWORD *)v29 + 1);
  *((_QWORD *)v29 + 1) = v31;
  v33 = v31;

  v34 = v20[8];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = sub_190A46084();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v35, v36, v37);
  *(_QWORD *)&a1[v20[9]] = *(_QWORD *)&a2[v20[9]];
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)&a1[*(int *)(a3 + 24)] = *(_DWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_19098A4A0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_190A45FC4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = type metadata accessor for BundleStub();
  *(_QWORD *)&a1[*(int *)(v9 + 20)] = *(_QWORD *)&a2[*(int *)(v9 + 20)];
  *(_OWORD *)&a1[*(int *)(v9 + 24)] = *(_OWORD *)&a2[*(int *)(v9 + 24)];
  v10 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  *(_QWORD *)&a1[v10[5]] = *(_QWORD *)&a2[v10[5]];
  *(_QWORD *)&a1[v10[6]] = *(_QWORD *)&a2[v10[6]];
  *(_OWORD *)&a1[v10[7]] = *(_OWORD *)&a2[v10[7]];
  v11 = v10[8];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_190A46084();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_QWORD *)&a1[v10[9]] = *(_QWORD *)&a2[v10[9]];
  v15 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  *(_DWORD *)&a1[v15] = *(_DWORD *)&a2[v15];
  return a1;
}

char *sub_19098A5EC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = sub_190A45FC4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = type metadata accessor for BundleStub();
  v13 = *(int *)(v12 + 20);
  v14 = *(void **)&a1[v13];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];

  v15 = *(int *)(v12 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v19 = *(_QWORD *)v17;
  v18 = *((_QWORD *)v17 + 1);
  *(_QWORD *)v16 = v19;
  *((_QWORD *)v16 + 1) = v18;
  swift_bridgeObjectRelease();
  v20 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  *(_QWORD *)&a1[v20[5]] = *(_QWORD *)&a2[v20[5]];
  v21 = v20[6];
  v22 = *(void **)&a1[v21];
  *(_QWORD *)&a1[v21] = *(_QWORD *)&a2[v21];

  v23 = v20[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  *(_QWORD *)&a1[v23] = *(_QWORD *)&a2[v23];
  swift_release();
  v26 = (void *)*((_QWORD *)v24 + 1);
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);

  v27 = v20[8];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = sub_190A46084();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  *(_QWORD *)&a1[v20[9]] = *(_QWORD *)&a2[v20[9]];
  swift_release();
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(_DWORD *)&a1[*(int *)(a3 + 24)] = *(_DWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_19098A7DC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19098A7E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for ControlArchiveStorageMetadata(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_19098A864()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19098A870(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ControlArchiveStorageMetadata(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ControlArchiveStorage(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1EE1EBF00);
}

uint64_t sub_19098A8FC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ControlArchiveStorageMetadata(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_19098A980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  os_unfair_lock_s *v14;
  id v15;
  _QWORD v17[2];

  v1 = v0;
  v2 = sub_190A45FC4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19093FE6C(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_190A487D8();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_190A487D8();
    sub_1908AA2F4(&qword_1EE1EDEA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    sub_190A47A4C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  type metadata accessor for BundleStub();
  sub_190A48100();
  sub_190A47B18();
  v9 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  sub_190A487E4();
  sub_190A487E4();
  v10 = *(id *)(v1 + v9[6]);
  sub_190A48100();

  v11 = (_QWORD *)(v1 + v9[7]);
  v12 = *v11;
  v13 = (void *)v11[1];
  v14 = *(os_unfair_lock_s **)(*v11 + 16);
  swift_retain_n();
  v15 = v13;
  os_unfair_lock_lock(v14);
  WidgetEnvironment.Storage.hash.getter();
  sub_190A487CC();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));

  swift_release_n();
  sub_190A46084();
  sub_1908AA2F4(&qword_1EE1EC910, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_190A47A4C();
  v17[1] = *(_QWORD *)(v1 + v9[9]);
  sub_190A462E8();
  sub_1908AA2F4(&qword_1EE1ED2F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0F858], MEMORY[0x1E0D0F870]);
  return sub_190A47A4C();
}

uint64_t sub_19098AC10(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  __int128 v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB710);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19098BC84();
  sub_190A48850();
  LOBYTE(v11) = 0;
  type metadata accessor for BundleStub();
  sub_1908AA2F4(&qword_1ECF6C638, (uint64_t (*)(uint64_t))type metadata accessor for BundleStub, (uint64_t)&protocol conformance descriptor for BundleStub);
  sub_190A48640();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
    *(_QWORD *)&v11 = *(_QWORD *)(v3 + v9[5]);
    v12 = 1;
    sub_19091BF78();
    sub_190A48640();
    *(_QWORD *)&v11 = *(_QWORD *)(v3 + v9[6]);
    v12 = 2;
    sub_1908AB890(0, &qword_1EE1EBF40);
    sub_19098BCC8(&qword_1EE1EB6E0, MEMORY[0x1E0D0FDE8]);
    sub_190A48640();
    v11 = *(_OWORD *)(v3 + v9[7]);
    v12 = 3;
    sub_19091BFBC();
    sub_190A48640();
    LOBYTE(v11) = 4;
    sub_190A46084();
    sub_1908AA2F4((unint64_t *)&unk_1ECF6C610, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_190A48640();
    *(_QWORD *)&v11 = *(_QWORD *)(v3 + v9[9]);
    v12 = 5;
    sub_190A462E8();
    sub_1908AA2F4(&qword_1EE1EB678, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0F858], MEMORY[0x1E0D0F868]);
    sub_190A48640();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_19098AEF0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  __int128 v28;
  char v29;

  v20 = a2;
  v3 = sub_190A46084();
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for BundleStub();
  MEMORY[0x1E0C80A78](v6);
  v24 = (uint64_t)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB7F0);
  v8 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for ControlArchiveStorageMetadata(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_19098BC84();
  v25 = v10;
  v15 = v27;
  sub_190A48838();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  else
  {
    v16 = v5;
    v17 = v8;
    v18 = v22;
    LOBYTE(v28) = 0;
    sub_1908AA2F4(&qword_1ECF69DA8, (uint64_t (*)(uint64_t))type metadata accessor for BundleStub, (uint64_t)&protocol conformance descriptor for BundleStub);
    v19 = v23;
    sub_190A48580();
    sub_1908BD0B4(v24, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
    v29 = 1;
    sub_19091BDD0();
    sub_190A48580();
    *(_QWORD *)&v13[v11[5]] = v28;
    sub_1908AB890(0, &qword_1EE1EBF40);
    v29 = 2;
    sub_19098BCC8(&qword_1EE1EB7B0, MEMORY[0x1E0D0FDF0]);
    sub_190A48580();
    *(_QWORD *)&v13[v11[6]] = v28;
    v29 = 3;
    sub_19091BE58();
    sub_190A48580();
    *(_OWORD *)&v13[v11[7]] = v28;
    LOBYTE(v28) = 4;
    sub_1908AA2F4((unint64_t *)&unk_1ECF69DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v27 = 0;
    sub_190A48580();
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v13[v11[8]], v16, v18);
    sub_190A462E8();
    v29 = 5;
    sub_1908AA2F4(&qword_1EE1EB720, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0F858], MEMORY[0x1E0D0F880]);
    sub_190A48580();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v25, v19);
    *(_QWORD *)&v13[v11[9]] = v28;
    sub_19098BD18((uint64_t)v13, v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    sub_1908B5150((uint64_t)v13, type metadata accessor for ControlArchiveStorageMetadata);
  }
}

uint64_t sub_19098B3EC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_19098B420 + 4 * byte_190A54560[*v0]))(0xD000000000000011, 0x8000000190A60000);
}

uint64_t sub_19098B420()
{
  return 0x65566D6574737973;
}

uint64_t sub_19098B444()
{
  return 0x6C6F72746E6F63;
}

uint64_t sub_19098B45C()
{
  return 0x6D6E6F7269766E65;
}

uint64_t sub_19098B47C()
{
  return 0x6E6F697461657263;
}

uint64_t sub_19098B49C()
{
  return 0x6574617473;
}

uint64_t sub_19098B4B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19098C570(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19098B4D4()
{
  sub_19098BC84();
  return sub_190A48868();
}

uint64_t sub_19098B4FC()
{
  sub_19098BC84();
  return sub_190A48874();
}

void sub_19098B524(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_19098AEF0(a1, a2);
}

uint64_t sub_19098B538(_QWORD *a1)
{
  return sub_19098AC10(a1);
}

uint64_t sub_19098B54C()
{
  sub_190A487C0();
  sub_19098A980();
  return sub_190A48808();
}

uint64_t sub_19098B58C()
{
  sub_190A487C0();
  sub_19098A980();
  return sub_190A48808();
}

uint64_t sub_19098B5C8()
{
  return sub_1908AA2F4(&qword_1EE1EDE98, type metadata accessor for ControlArchiveStorageMetadata, (uint64_t)&unk_190A545F8);
}

uint64_t sub_19098B5F4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x617461646174656DLL;
  if (*v0 != 1)
    v1 = 0x6574616C706D6574;
  if (*v0)
    return v1;
  else
    return 0x5665766968637261;
}

uint64_t sub_19098B660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19098C838(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19098B684()
{
  sub_19098BBBC();
  return sub_190A48868();
}

uint64_t sub_19098B6AC()
{
  sub_19098BBBC();
  return sub_190A48874();
}

uint64_t sub_19098B6D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;

  v20 = a2;
  v3 = type metadata accessor for ControlArchiveStorageMetadata(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB7D8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19098BBBC();
  v10 = v21;
  sub_190A48838();
  if (!v10)
  {
    v21 = a1;
    v25 = 0;
    v11 = sub_190A4858C();
    if ((int)v11 >= 2)
    {
      v24 = 1;
      sub_1908AA2F4(&qword_1EE1EB7A0, type metadata accessor for ControlArchiveStorageMetadata, (uint64_t)&unk_190A54688);
      sub_190A48580();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBF38);
      v23 = 2;
      sub_19098BC00(&qword_1EE1EB7A8, &qword_1EE1EB740, (uint64_t)&protocol conformance descriptor for ControlTemplateType, MEMORY[0x1E0DEAF40]);
      sub_190A48580();
      v15 = v22;
      if (*(_QWORD *)(v22 + 16))
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        v16 = v20;
        sub_1908BD0B4((uint64_t)v5, v20, type metadata accessor for ControlArchiveStorageMetadata);
        v17 = type metadata accessor for ControlArchiveStorage(0);
        *(_QWORD *)(v16 + *(int *)(v17 + 20)) = v15;
        *(_DWORD *)(v16 + *(int *)(v17 + 24)) = v11;
        v13 = (uint64_t)v21;
        return __swift_destroy_boxed_opaque_existential_1(v13);
      }
      swift_bridgeObjectRelease();
      sub_1908CDC58();
      swift_allocError();
      *(_QWORD *)v18 = 0xD00000000000001ELL;
      *(_QWORD *)(v18 + 8) = 0x8000000190A63120;
      *(_BYTE *)(v18 + 16) = 2;
      swift_willThrow();
      sub_1908B5150((uint64_t)v5, type metadata accessor for ControlArchiveStorageMetadata);
    }
    else
    {
      sub_1908CDC58();
      swift_allocError();
      *(_QWORD *)v12 = (v11 << 32) | 2;
      *(_QWORD *)(v12 + 8) = 0;
      *(_BYTE *)(v12 + 16) = 0;
      swift_willThrow();
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    a1 = v21;
  }
  v13 = (uint64_t)a1;
  return __swift_destroy_boxed_opaque_existential_1(v13);
}

uint64_t sub_19098B9D8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB708);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19098BBBC();
  sub_190A48850();
  v13 = 0;
  sub_190A4864C();
  if (!v2)
  {
    v12 = 1;
    type metadata accessor for ControlArchiveStorageMetadata(0);
    sub_1908AA2F4(&qword_1EE1EB6D0, type metadata accessor for ControlArchiveStorageMetadata, (uint64_t)&unk_190A54660);
    sub_190A48640();
    v11 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for ControlArchiveStorage(0) + 20));
    v10[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBF38);
    sub_19098BC00(&qword_1EE1EB6D8, &qword_1EE1EB6B0, (uint64_t)&protocol conformance descriptor for ControlTemplateType, MEMORY[0x1E0DEAF10]);
    sub_190A48640();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_19098BB94@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19098B6D4(a1, a2);
}

uint64_t sub_19098BBA8(_QWORD *a1)
{
  return sub_19098B9D8(a1);
}

unint64_t sub_19098BBBC()
{
  unint64_t result;

  result = qword_1EE1EBEE8;
  if (!qword_1EE1EBEE8)
  {
    result = MEMORY[0x19401429C](&unk_190A548CC, &type metadata for ControlArchiveStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBEE8);
  }
  return result;
}

uint64_t sub_19098BC00(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EBF38);
    v10 = sub_1908AA2F4(a2, (uint64_t (*)(uint64_t))type metadata accessor for ControlTemplateType, a3);
    result = MEMORY[0x19401429C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19098BC84()
{
  unint64_t result;

  result = qword_1EE1EBF10;
  if (!qword_1EE1EBF10)
  {
    result = MEMORY[0x19401429C](&unk_190A5487C, &type metadata for ControlArchiveStorageMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBF10);
  }
  return result;
}

uint64_t sub_19098BCC8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1908AB890(255, &qword_1EE1EBF40);
    result = MEMORY[0x19401429C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19098BD18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ControlArchiveStorageMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19098BD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char *v35;
  int v36;
  int v37;
  char *v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  unint64_t *v45;
  unint64_t v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  char v51;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;

  v4 = type metadata accessor for ControlArchiveStorageMetadata(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v57 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v56 = (uint64_t)&v53 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v54 = (uint64_t)&v53 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v55 = (char *)&v53 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v53 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v53 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v53 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v53 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v27 = (char *)&v53 - v26;
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v53 - v28;
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6C5E0);
  v30 = sub_190A480F4();
  sub_19098BD18(a1, (uint64_t)v29);
  sub_19098BD18(a2, (uint64_t)v27);
  if ((v30 & 1) == 0)
  {
    sub_1908B5150((uint64_t)v27, type metadata accessor for ControlArchiveStorageMetadata);
    sub_1908B5150((uint64_t)v29, type metadata accessor for ControlArchiveStorageMetadata);
    sub_19098BD18(a1, (uint64_t)v24);
    sub_19098BD18(a2, (uint64_t)v21);
    goto LABEL_9;
  }
  v53 = v4;
  v31 = static BundleStub.== infix(_:_:)((uint64_t)v29, (uint64_t)v27);
  sub_1908B5150((uint64_t)v27, type metadata accessor for ControlArchiveStorageMetadata);
  sub_1908B5150((uint64_t)v29, type metadata accessor for ControlArchiveStorageMetadata);
  sub_19098BD18(a1, (uint64_t)v24);
  sub_19098BD18(a2, (uint64_t)v21);
  if ((v31 & 1) == 0)
  {
LABEL_9:
    sub_1908B5150((uint64_t)v21, type metadata accessor for ControlArchiveStorageMetadata);
    sub_1908B5150((uint64_t)v24, type metadata accessor for ControlArchiveStorageMetadata);
    sub_19098BD18(a1, (uint64_t)v18);
    sub_19098BD18(a2, (uint64_t)v15);
    v34 = (uint64_t)v55;
    goto LABEL_10;
  }
  v32 = v53;
  v33 = sub_190A4606C();
  sub_1908B5150((uint64_t)v21, type metadata accessor for ControlArchiveStorageMetadata);
  sub_1908B5150((uint64_t)v24, type metadata accessor for ControlArchiveStorageMetadata);
  sub_19098BD18(a1, (uint64_t)v18);
  sub_19098BD18(a2, (uint64_t)v15);
  v34 = (uint64_t)v55;
  if ((v33 & 1) == 0)
  {
LABEL_10:
    sub_1908B5150((uint64_t)v15, type metadata accessor for ControlArchiveStorageMetadata);
    sub_1908B5150((uint64_t)v18, type metadata accessor for ControlArchiveStorageMetadata);
    goto LABEL_11;
  }
  v35 = &v18[*(int *)(v32 + 20)];
  v37 = *(_DWORD *)v35;
  v36 = *((_DWORD *)v35 + 1);
  sub_1908B5150((uint64_t)v18, type metadata accessor for ControlArchiveStorageMetadata);
  v38 = &v15[*(int *)(v32 + 20)];
  v40 = *(_DWORD *)v38;
  v39 = *((_DWORD *)v38 + 1);
  sub_1908B5150((uint64_t)v15, type metadata accessor for ControlArchiveStorageMetadata);
  if (v37 != v40)
  {
LABEL_11:
    sub_19098BD18(a1, v34);
    v41 = v54;
    sub_19098BD18(a2, v54);
    goto LABEL_12;
  }
  sub_19098BD18(a1, v34);
  v41 = v54;
  sub_19098BD18(a2, v54);
  if (v36 != v39)
  {
LABEL_12:
    sub_1908B5150(v41, type metadata accessor for ControlArchiveStorageMetadata);
    sub_1908B5150(v34, type metadata accessor for ControlArchiveStorageMetadata);
    v50 = v56;
    sub_19098BD18(a1, v56);
    sub_19098BD18(a2, v57);
    goto LABEL_13;
  }
  v42 = *(int *)(v53 + 28);
  v43 = *(_QWORD *)(v34 + v42);
  v44 = *(void **)(v34 + v42 + 8);
  v45 = (unint64_t *)(v41 + v42);
  v46 = *v45;
  v47 = (void *)v45[1];
  swift_retain();
  v48 = v44;
  swift_retain();
  v49 = v47;
  LOBYTE(v44) = sub_1909FD19C(v43, v46);

  swift_release();
  swift_release();
  sub_1908B5150(v41, type metadata accessor for ControlArchiveStorageMetadata);
  sub_1908B5150(v34, type metadata accessor for ControlArchiveStorageMetadata);
  v50 = v56;
  sub_19098BD18(a1, v56);
  sub_19098BD18(a2, v57);
  if ((v44 & 1) == 0)
  {
LABEL_13:
    v51 = 0;
    goto LABEL_14;
  }
  sub_190A462E8();
  v51 = sub_190A462C4();
LABEL_14:
  sub_1908B5150(v50, type metadata accessor for ControlArchiveStorageMetadata);
  sub_1908B5150(v57, type metadata accessor for ControlArchiveStorageMetadata);
  return v51 & 1;
}

uint64_t storeEnumTagSinglePayload for ControlArchiveStorageMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_19098C274 + 4 * byte_190A5456B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_19098C2A8 + 4 * byte_190A54566[v4]))();
}

uint64_t sub_19098C2A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19098C2B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19098C2B8);
  return result;
}

uint64_t sub_19098C2C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19098C2CCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_19098C2D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19098C2D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlArchiveStorageMetadata.CodingKeys()
{
  return &type metadata for ControlArchiveStorageMetadata.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ControlArchiveStorage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19098C340 + 4 * byte_190A54575[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19098C374 + 4 * byte_190A54570[v4]))();
}

uint64_t sub_19098C374(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19098C37C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19098C384);
  return result;
}

uint64_t sub_19098C390(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19098C398);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19098C39C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19098C3A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlArchiveStorage.CodingKeys()
{
  return &type metadata for ControlArchiveStorage.CodingKeys;
}

unint64_t sub_19098C3C4()
{
  unint64_t result;

  result = qword_1EE1EDEA8;
  if (!qword_1EE1EDEA8)
  {
    result = MEMORY[0x19401429C](&unk_190A5479C, &type metadata for ControlArchiveStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDEA8);
  }
  return result;
}

unint64_t sub_19098C40C()
{
  unint64_t result;

  result = qword_1EE1EDEB0;
  if (!qword_1EE1EDEB0)
  {
    result = MEMORY[0x19401429C](&unk_190A54854, &type metadata for ControlArchiveStorageMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDEB0);
  }
  return result;
}

unint64_t sub_19098C454()
{
  unint64_t result;

  result = qword_1EE1EBF20;
  if (!qword_1EE1EBF20)
  {
    result = MEMORY[0x19401429C](&unk_190A547C4, &type metadata for ControlArchiveStorageMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBF20);
  }
  return result;
}

unint64_t sub_19098C49C()
{
  unint64_t result;

  result = qword_1EE1EBF18;
  if (!qword_1EE1EBF18)
  {
    result = MEMORY[0x19401429C](&unk_190A547EC, &type metadata for ControlArchiveStorageMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBF18);
  }
  return result;
}

unint64_t sub_19098C4E4()
{
  unint64_t result;

  result = qword_1EE1EBEF8;
  if (!qword_1EE1EBEF8)
  {
    result = MEMORY[0x19401429C](&unk_190A5470C, &type metadata for ControlArchiveStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBEF8);
  }
  return result;
}

unint64_t sub_19098C52C()
{
  unint64_t result;

  result = qword_1EE1EBEF0;
  if (!qword_1EE1EBEF0)
  {
    result = MEMORY[0x19401429C](&unk_190A54734, &type metadata for ControlArchiveStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EBEF0);
  }
  return result;
}

uint64_t sub_19098C570(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000190A60000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65566D6574737973 && a2 == 0xED00006E6F697372 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6F72746E6F63 && a2 == 0xE700000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_19098C838(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x5665766968637261 && a2 == 0xEE006E6F69737265;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574616C706D6574 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_19098C9BC(uint64_t a1, void *a2)
{
  void *v2;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  unsigned int v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22[3];

  v22[2] = *(id *)MEMORY[0x1E0C80C00];
  v22[0] = 0;
  v4 = objc_msgSend((id)objc_opt_self(), sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, v22);
  v5 = v22[0];
  if (!v4)
  {
    v16 = v5;
    v17 = sub_190A45F58();

    swift_willThrow();
    sub_19098CC08();
    swift_allocError();
    *(_QWORD *)v18 = v17;
    *(_BYTE *)(v18 + 8) = 0;
    swift_willThrow();
    return;
  }
  v6 = (void *)sub_190A46000();
  v8 = v7;

  v22[0] = 0;
  sub_1908B53B8((uint64_t)v6, (unint64_t)v8);
  v9 = objc_msgSend(a2, sel_seekToOffset_error_, 0, v22);
  v10 = v22[0];
  if (!v9)
  {
    v19 = v22[0];
    sub_1908B53FC((uint64_t)v6, (unint64_t)v8);
LABEL_8:
    v12 = (void *)sub_190A45F58();

    swift_willThrow();
    goto LABEL_9;
  }
  v22[0] = v6;
  v22[1] = v8;
  sub_1908CDC14();
  v11 = v10;
  sub_190A47F14();
  v12 = v2;
  sub_1908B53FC((uint64_t)v6, (unint64_t)v8);
  if (!v2)
  {
    v13 = sub_190A47F20();
    v22[0] = 0;
    v14 = objc_msgSend(a2, sel_truncateAtOffset_error_, v13, v22);
    v15 = v22[0];
    if ((v14 & 1) != 0)
    {
      sub_1908B53FC((uint64_t)v6, (unint64_t)v8);
      return;
    }
    v19 = v15;
    goto LABEL_8;
  }
LABEL_9:
  sub_19098CC08();
  swift_allocError();
  *(_QWORD *)v20 = v12;
  *(_BYTE *)(v20 + 8) = 1;
  v21 = v12;
  swift_willThrow();
  sub_1908B53FC((uint64_t)v6, (unint64_t)v8);

}

unint64_t sub_19098CC08()
{
  unint64_t result;

  result = qword_1EE1EDEB8;
  if (!qword_1EE1EDEB8)
  {
    result = MEMORY[0x19401429C](&unk_190A54980, &type metadata for WidgetRelevanceArchiverError);
    atomic_store(result, (unint64_t *)&qword_1EE1EDEB8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for WidgetRelevanceArchiverError(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  id v5;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(id *)a2;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for WidgetRelevanceArchiverError(id *a1)
{

}

uint64_t assignWithCopy for WidgetRelevanceArchiverError(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  id v5;
  void *v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(id *)a2;
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;

  return a1;
}

uint64_t assignWithTake for WidgetRelevanceArchiverError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetRelevanceArchiverError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetRelevanceArchiverError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_19098CDC0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_19098CDC8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetRelevanceArchiverError()
{
  return &type metadata for WidgetRelevanceArchiverError;
}

uint64_t sub_19098CDE8(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t result;
  char *v34;
  char *v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v40 = a8;
  v41 = a5;
  v9 = v8;
  v53 = a4;
  v54 = a1;
  v55 = a2;
  v39 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v52 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v51 = (char *)v37 - v12;
  v45 = v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v38 = (char *)v37 - v18;
  v19 = sub_190A48148();
  v42 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v49 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v37 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v37[1] = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v48 = *((_QWORD *)v15 - 1);
  MEMORY[0x1E0C80A78](v27);
  v47 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v46 = (char *)v37 - v29;
  v30 = v15;
  v31 = sub_190A47BA8();
  v57 = sub_190A47A10();
  v53 = sub_190A483B8();
  sub_190A48370();
  (*(void (**)(char *, _QWORD, _QWORD *))(v48 + 16))(v47, v50, v15);
  v32 = v46;
  v50 = v30;
  result = sub_190A47B9C();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_190A4816C();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v24, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v54(v24, v52);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v52, v41);
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      sub_190A483A0();
      if (!--v31)
      {
        v34 = v49;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v34 = v49;
LABEL_9:
  sub_190A4816C();
  v52 = *(char **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v34, 1, AssociatedTypeWitness) == 1)
  {
    v35 = v49;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    return v57;
  }
  else
  {
    v50 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v36 = v38;
    v35 = v49;
    while (1)
    {
      v50(v36, v35, AssociatedTypeWitness);
      v54(v36, v51);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
      sub_190A483A0();
      sub_190A4816C();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v51, v41);
  }
}

BOOL WidgetRenderScheme.actuallyIncludeBackground.getter()
{
  uint64_t v0;

  return (unint64_t)(*(_QWORD *)(v0 + 8) - 3) < 0xFFFFFFFFFFFFFFFELL;
}

_BYTE *WidgetRenderScheme.init(renderingMode:backgroundViewPolicy:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_BYTE *)a3 = *result;
  *(_QWORD *)(a3 + 8) = a2;
  return result;
}

void static WidgetRenderScheme.default.getter(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
}

void WidgetRenderScheme.renderingMode.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *WidgetRenderScheme.renderingMode.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*WidgetRenderScheme.renderingMode.modify())()
{
  return nullsub_1;
}

uint64_t WidgetRenderScheme.backgroundViewPolicy.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t WidgetRenderScheme.backgroundViewPolicy.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*WidgetRenderScheme.backgroundViewPolicy.modify())()
{
  return nullsub_1;
}

BOOL WidgetRenderScheme.developerFacingEnvironmentShowsWidgetBackground.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8) != 1;
}

uint64_t sub_19098D37C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000014;
  else
    return 0x6E697265646E6572;
}

uint64_t sub_19098D3C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19098DFF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19098D3EC()
{
  sub_19098DCA8();
  return sub_190A48868();
}

uint64_t sub_19098D414()
{
  sub_19098DCA8();
  return sub_190A48874();
}

void WidgetRenderScheme.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4;
  char v5;
  id v6;

  v4 = (unint64_t)objc_msgSend(a1, sel_renderingMode);
  if (v4 >= 3)
    v5 = 0;
  else
    v5 = 0x10200u >> (8 * v4);
  v6 = objc_msgSend(a1, sel_backgroundViewPolicy);

  *(_BYTE *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
}

uint64_t WidgetRenderScheme.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B3C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19098DCA8();
  sub_190A48838();
  if (!v2)
  {
    v14 = 0;
    sub_19098DCEC();
    sub_190A48580();
    v9 = v15;
    v13 = 1;
    v11 = sub_190A48598();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_BYTE *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t WidgetRenderScheme.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  char v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B078);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v11 = *((_QWORD *)v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19098DCA8();
  sub_190A48850();
  v14 = v8;
  v13 = 0;
  sub_19098DD30();
  sub_190A48640();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!HIDWORD(v11))
  {
    v12 = 1;
    sub_190A48658();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  result = sub_190A4843C();
  __break(1u);
  return result;
}

uint64_t WidgetRenderScheme.description.getter()
{
  id v0;

  sub_190A48298();
  sub_190A47B3C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v0 = (id)NSStringFromCHSWidgetBackgroundViewPolicy();
  sub_190A47ADC();

  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  return 0;
}

BOOL static WidgetRenderScheme.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2 && *((_QWORD *)a1 + 1) < *((_QWORD *)a2 + 1);
}

uint64_t WidgetRenderScheme.hash(into:)()
{
  sub_190A487CC();
  return sub_190A487CC();
}

BOOL static WidgetRenderScheme.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && *((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1);
}

uint64_t WidgetRenderScheme.hashValue.getter()
{
  sub_190A487C0();
  sub_190A487CC();
  sub_190A487CC();
  return sub_190A48808();
}

BOOL sub_19098D9D8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2 && *((_QWORD *)a1 + 1) < *((_QWORD *)a2 + 1);
}

BOOL sub_19098DA04(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1 || *((_QWORD *)a2 + 1) >= *((_QWORD *)a1 + 1);
}

BOOL sub_19098DA30(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2 || *((_QWORD *)a1 + 1) >= *((_QWORD *)a2 + 1);
}

BOOL sub_19098DA5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1 && *((_QWORD *)a2 + 1) < *((_QWORD *)a1 + 1);
}

uint64_t sub_19098DA88@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetRenderScheme.init(from:)(a1, a2);
}

uint64_t sub_19098DA9C(_QWORD *a1)
{
  return WidgetRenderScheme.encode(to:)(a1);
}

uint64_t sub_19098DAB0()
{
  sub_190A487C0();
  sub_190A487CC();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t sub_19098DB0C()
{
  sub_190A487CC();
  return sub_190A487CC();
}

uint64_t sub_19098DB48()
{
  sub_190A487C0();
  sub_190A487CC();
  sub_190A487CC();
  return sub_190A48808();
}

BOOL sub_19098DBA4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && *((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1);
}

uint64_t Sequence<>.widgetRenderSchemes.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_19098CDE8((void (*)(char *, char *))sub_19098DC24, 0, a1, (uint64_t)&type metadata for WidgetRenderScheme, MEMORY[0x1E0DEDCE8], a2, MEMORY[0x1E0DEDD18], a8);
}

void sub_19098DC24(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  unint64_t v4;
  char v5;
  id v6;

  v3 = *a1;
  v4 = (unint64_t)objc_msgSend(v3, sel_renderingMode);
  if (v4 >= 3)
    v5 = 0;
  else
    v5 = 0x10200u >> (8 * v4);
  v6 = objc_msgSend(v3, sel_backgroundViewPolicy);

  *(_BYTE *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
}

unint64_t sub_19098DCA8()
{
  unint64_t result;

  result = qword_1ECF6B2D0;
  if (!qword_1ECF6B2D0)
  {
    result = MEMORY[0x19401429C](&unk_190A54BE8, &type metadata for WidgetRenderScheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B2D0);
  }
  return result;
}

unint64_t sub_19098DCEC()
{
  unint64_t result;

  result = qword_1ECF6B330;
  if (!qword_1ECF6B330)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetRenderingMode, &type metadata for WidgetRenderingMode);
    atomic_store(result, (unint64_t *)&qword_1ECF6B330);
  }
  return result;
}

unint64_t sub_19098DD30()
{
  unint64_t result;

  result = qword_1ECF6B070;
  if (!qword_1ECF6B070)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetRenderingMode, &type metadata for WidgetRenderingMode);
    atomic_store(result, (unint64_t *)&qword_1ECF6B070);
  }
  return result;
}

unint64_t sub_19098DD78()
{
  unint64_t result;

  result = qword_1ECF6B1F0;
  if (!qword_1ECF6B1F0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetRenderScheme, &type metadata for WidgetRenderScheme);
    atomic_store(result, (unint64_t *)&qword_1ECF6B1F0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetRenderScheme(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && a1[16])
    return (*(_DWORD *)a1 + 254);
  v3 = *a1;
  v4 = v3 >= 3;
  v5 = v3 - 3;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetRenderScheme(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetRenderScheme()
{
  return &type metadata for WidgetRenderScheme;
}

uint64_t storeEnumTagSinglePayload for WidgetRenderScheme.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_19098DE9C + 4 * byte_190A549C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_19098DED0 + 4 * byte_190A549C0[v4]))();
}

uint64_t sub_19098DED0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19098DED8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19098DEE0);
  return result;
}

uint64_t sub_19098DEEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19098DEF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19098DEF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19098DF00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetRenderScheme.CodingKeys()
{
  return &type metadata for WidgetRenderScheme.CodingKeys;
}

unint64_t sub_19098DF20()
{
  unint64_t result;

  result = qword_1EE1EDEC0;
  if (!qword_1EE1EDEC0)
  {
    result = MEMORY[0x19401429C](&unk_190A54BC0, &type metadata for WidgetRenderScheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDEC0);
  }
  return result;
}

unint64_t sub_19098DF68()
{
  unint64_t result;

  result = qword_1ECF6B2E0;
  if (!qword_1ECF6B2E0)
  {
    result = MEMORY[0x19401429C](&unk_190A54B30, &type metadata for WidgetRenderScheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B2E0);
  }
  return result;
}

unint64_t sub_19098DFB0()
{
  unint64_t result;

  result = qword_1ECF6B2D8;
  if (!qword_1ECF6B2D8)
  {
    result = MEMORY[0x19401429C](&unk_190A54B58, &type metadata for WidgetRenderScheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B2D8);
  }
  return result;
}

uint64_t sub_19098DFF4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E697265646E6572 && a2 == 0xED000065646F4D67;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000190A63210)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

id sub_19098E104(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v20;

  v3 = sub_190A45D78();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for WidgetRelevanceEntry.Attribute(0, *(_QWORD *)(a1 + 16), v7, v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v20 - v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v20 - v10, v1 + *(int *)(a1 + 28), v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = v11[1];
    if (v13)
    {
      if (v13 == 1)
      {
        return 0;
      }
      else
      {
        v16 = *v11;
        v17 = objc_allocWithZone(MEMORY[0x1E0D10220]);
        v18 = (void *)sub_190A47AC4();
        sub_19098E2C0(v16, v13);
        v14 = objc_msgSend(v17, sel_initWithNamedGroupIdentifier_, v18);

      }
    }
    else
    {
      return objc_msgSend((id)objc_opt_self(), sel_ungrouped);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v4 + 32))(v6, v11, v3);
    v15 = (void *)sub_190A45D6C();
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D10238]), sel_initWithRelevantContext_, v15);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v14;
}

uint64_t sub_19098E2C0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

__n128 sub_19098E2D4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __n128 result;
  __int128 v27;

  v18 = sub_190A45F70();
  MEMORY[0x1E0C80A78](v18);
  v19 = *a6;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = 0;
  *(_QWORD *)(a9 + 24) = 0;
  *(_QWORD *)(a9 + 32) = a3;
  swift_bridgeObjectRetain();
  if (!a5)
  {
    sub_190A45CC4();
    a4 = sub_190A47AF4();
    a5 = v21;
  }
  *(_QWORD *)(a9 + 136) = a4;
  *(_QWORD *)(a9 + 144) = a5;
  *(_BYTE *)(a9 + 152) = v19;
  v22 = type metadata accessor for ControlButton(0, a8, a10, v20);
  *(_QWORD *)(a9 + 112) = &type metadata for ControlButtonTemplateProvider;
  *(_QWORD *)(a9 + 120) = &off_1E2CC8830;
  v23 = swift_allocObject();
  *(_QWORD *)(a9 + 88) = v23;
  v24 = *(_OWORD *)(a7 + 80);
  *(_OWORD *)(v23 + 80) = *(_OWORD *)(a7 + 64);
  *(_OWORD *)(v23 + 96) = v24;
  *(_OWORD *)(v23 + 112) = *(_OWORD *)(a7 + 96);
  *(_QWORD *)(v23 + 128) = *(_QWORD *)(a7 + 112);
  v25 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)a7;
  *(_OWORD *)(v23 + 32) = v25;
  result = *(__n128 *)(a7 + 32);
  v27 = *(_OWORD *)(a7 + 48);
  *(__n128 *)(v23 + 48) = result;
  *(_OWORD *)(v23 + 64) = v27;
  *(_BYTE *)(a9 + 128) = 0;
  *(_QWORD *)(a9 + 40) = a1;
  *(_QWORD *)(a9 + 48) = a2;
  *(_QWORD *)(a9 + 56) = 0;
  *(_QWORD *)(a9 + 64) = 0;
  *(_QWORD *)(a9 + 72) = v22;
  *(_QWORD *)(a9 + 80) = &off_1E2CC38B8;
  return result;
}

uint64_t ControlButton.init<A, B>(kind:intent:displayName:preferredSize:title:subtitle:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v37;
  _BYTE v38[128];

  v31 = *a6;
  v20 = sub_190A45CB8();
  v29 = v21;
  v30 = v20;
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = a14;
  v22[3] = a15;
  v22[4] = a16;
  v22[5] = a17;
  v22[6] = a18;
  v22[7] = a19;
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a14;
  v23[3] = a15;
  v23[4] = a16;
  v23[5] = a17;
  v23[6] = a18;
  v23[7] = a19;
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = a14;
  v24[3] = a15;
  v24[4] = a16;
  v24[5] = a17;
  v24[6] = a18;
  v24[7] = a19;
  v24[8] = a7;
  v24[9] = a8;
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = a14;
  v25[3] = a15;
  v25[4] = a16;
  v25[5] = a17;
  v25[6] = a18;
  v25[7] = a19;
  v25[8] = a10;
  v25[9] = a11;
  swift_retain();
  swift_retain();
  sub_1908B4C4C(a12);
  swift_bridgeObjectRetain();
  sub_19098E78C(a1, a2, v30, v29, (uint64_t)sub_19098E674, (uint64_t)v22, (uint64_t)sub_19098E688, (uint64_t)v23, (uint64_t)v38, (uint64_t)sub_19098E700, (uint64_t)v24, sub_19098E780, (uint64_t)v25, a12, a13, a14, a17);
  v37 = v31;
  sub_19098E2D4(a1, a2, a3, a4, a5, &v37, (uint64_t)v38, a14, a9, a17);
  sub_1908B467C(a12);
  swift_release();
  return swift_release();
}

{
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v37;
  _BYTE v38[128];

  v31 = *a6;
  v20 = sub_190A45CB8();
  v29 = v21;
  v30 = v20;
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = a14;
  v22[3] = a15;
  v22[4] = a16;
  v22[5] = a17;
  v22[6] = a18;
  v22[7] = a19;
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a14;
  v23[3] = a15;
  v23[4] = a16;
  v23[5] = a17;
  v23[6] = a18;
  v23[7] = a19;
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = a14;
  v24[3] = a15;
  v24[4] = a16;
  v24[5] = a17;
  v24[6] = a18;
  v24[7] = a19;
  v24[8] = a7;
  v24[9] = a8;
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = a14;
  v25[3] = a15;
  v25[4] = a16;
  v25[5] = a17;
  v25[6] = a18;
  v25[7] = a19;
  v25[8] = a10;
  v25[9] = a11;
  swift_retain();
  swift_retain();
  sub_1908B4C4C(a12);
  swift_bridgeObjectRetain();
  sub_19098E78C(a1, a2, v30, v29, (uint64_t)sub_19098E674, (uint64_t)v22, (uint64_t)sub_19098E688, (uint64_t)v23, (uint64_t)v38, (uint64_t)sub_19098EE0C, (uint64_t)v24, sub_19098EE98, (uint64_t)v25, a12, a13, a14, a17);
  v37 = v31;
  sub_19098E2D4(a1, a2, a3, a4, a5, &v37, (uint64_t)v38, a14, a9, a17);
  sub_1908B467C(a12);
  swift_release();
  return swift_release();
}

uint64_t sub_19098E664()
{
  return swift_deallocObject();
}

uint64_t sub_19098E678()
{
  return swift_deallocObject();
}

uint64_t sub_19098E68C(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = MEMORY[0x1E0C80A78](a1);
  v2(v1);
  return sub_190A47884();
}

uint64_t sub_19098E700(uint64_t a1, uint64_t a2)
{
  return sub_19098EEA4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19098E68C);
}

uint64_t sub_19098E70C(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = MEMORY[0x1E0C80A78](a1);
  v2(v1);
  return sub_190A47884();
}

uint64_t sub_19098E780(uint64_t a1, uint64_t a2)
{
  return sub_19098EEA4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19098E70C);
}

uint64_t sub_19098E78C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  void *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t result;

  v21 = a12;
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = a16;
  v22[3] = a17;
  v22[4] = a10;
  v22[5] = a11;
  if (a12)
  {
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = a16;
    v23[3] = a17;
    v23[4] = a12;
    v23[5] = a13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1908B467C(0);
    v21 = &unk_1EE1EDF08;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    v23 = 0;
  }
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = a16;
  v24[3] = a17;
  v24[4] = a14;
  v24[5] = a15;
  swift_retain();
  sub_1908B4C4C((uint64_t)v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1908B4C4C((uint64_t)v21);
  swift_release();
  swift_release();
  sub_1908B467C((uint64_t)v21);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  sub_1908B467C((uint64_t)v21);
  result = swift_release();
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 32) = 0;
  *(_QWORD *)(a9 + 40) = a5;
  *(_QWORD *)(a9 + 48) = a6;
  *(_QWORD *)(a9 + 56) = a7;
  *(_QWORD *)(a9 + 64) = a8;
  *(_QWORD *)(a9 + 72) = &unk_1EE1EDEE8;
  *(_QWORD *)(a9 + 80) = v22;
  *(_QWORD *)(a9 + 88) = v21;
  *(_QWORD *)(a9 + 96) = v23;
  *(_QWORD *)(a9 + 104) = &unk_1EE1EDEF8;
  *(_QWORD *)(a9 + 112) = v24;
  return result;
}

uint64_t sub_19098EBE0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v7;

  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A45D48();
  return ControlAction.init<A>(_:)((uint64_t)v5, a1, a2);
}

uint64_t sub_19098EC5C()
{
  return swift_deallocObject();
}

uint64_t sub_19098EC6C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_19098EBE0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_19098EC8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190978388();
  sub_190A45D48();
  v5 = sub_1909EEA28();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5;
}

uint64_t sub_19098ED38()
{
  return swift_deallocObject();
}

uint64_t sub_19098ED48()
{
  uint64_t v0;

  return sub_19098EC8C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_19098ED68(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;

  MEMORY[0x1E0C80A78](a1);
  v2(v1, v3);
  return sub_190A47884();
}

uint64_t sub_19098EDE8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19098EE0C(uint64_t a1, uint64_t a2)
{
  return sub_19098EEA4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19098ED68);
}

uint64_t sub_19098EE18(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;

  MEMORY[0x1E0C80A78](a1);
  v2(v1, v3);
  return sub_190A47884();
}

uint64_t sub_19098EE98(uint64_t a1, uint64_t a2)
{
  return sub_19098EEA4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19098EE18);
}

uint64_t sub_19098EEA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[8], v3[9], v3[2], v3[3], v3[4], v3[5], v3[6], v3[7]);
}

uint64_t ControlButton.init<A>(kind:intent:displayName:preferredSize:title:affordances:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v24;
  uint64_t v25;
  char v27;
  char v32;
  _BYTE v33[128];

  v27 = *a6;
  v16 = sub_190A45CB8();
  v24 = v17;
  v25 = v16;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a12;
  v18[3] = a13;
  v18[4] = a14;
  v18[5] = a15;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a12;
  v19[3] = a13;
  v19[4] = a14;
  v19[5] = a15;
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a12;
  v20[3] = a13;
  v20[4] = a14;
  v20[5] = a15;
  v20[6] = a7;
  v20[7] = a8;
  swift_retain();
  sub_1908B4C4C(a10);
  swift_bridgeObjectRetain();
  sub_19098E78C(a1, a2, v25, v24, (uint64_t)sub_190990C4C, (uint64_t)v18, (uint64_t)sub_190990C44, (uint64_t)v19, (uint64_t)v33, (uint64_t)sub_19098F114, (uint64_t)v20, 0, 0, a10, a11, a12, a14);
  v32 = v27;
  sub_19098E2D4(a1, a2, a3, a4, a5, &v32, (uint64_t)v33, a12, a9, a14);
  sub_1908B467C(a10);
  return swift_release();
}

{
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v24;
  uint64_t v25;
  char v27;
  char v32;
  _BYTE v33[128];

  v27 = *a6;
  v16 = sub_190A45CB8();
  v24 = v17;
  v25 = v16;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a12;
  v18[3] = a13;
  v18[4] = a14;
  v18[5] = a15;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a12;
  v19[3] = a13;
  v19[4] = a14;
  v19[5] = a15;
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a12;
  v20[3] = a13;
  v20[4] = a14;
  v20[5] = a15;
  v20[6] = a7;
  v20[7] = a8;
  swift_retain();
  sub_1908B4C4C(a10);
  swift_bridgeObjectRetain();
  sub_19098E78C(a1, a2, v25, v24, (uint64_t)sub_19098F330, (uint64_t)v18, (uint64_t)sub_19098F408, (uint64_t)v19, (uint64_t)v33, (uint64_t)sub_19098F4A4, (uint64_t)v20, 0, 0, a10, a11, a12, a14);
  v32 = v27;
  sub_19098E2D4(a1, a2, a3, a4, a5, &v32, (uint64_t)v33, a12, a9, a14);
  sub_1908B467C(a10);
  return swift_release();
}

uint64_t sub_19098F05C()
{
  return swift_deallocObject();
}

uint64_t sub_19098F06C()
{
  return swift_deallocObject();
}

uint64_t sub_19098F07C(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = MEMORY[0x1E0C80A78](a1);
  v2(v1);
  return sub_190A47884();
}

uint64_t sub_19098F0F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19098F114(uint64_t a1, uint64_t a2)
{
  return sub_19098F4B0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19098F07C);
}

uint64_t sub_19098F2A4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v7;

  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A45D48();
  return ControlAction.init<A>(_:)((uint64_t)v5, a1, a2);
}

uint64_t sub_19098F320()
{
  return swift_deallocObject();
}

uint64_t sub_19098F330@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_19098F2A4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_19098F34C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190978388();
  sub_190A45D48();
  v5 = sub_1909EEA28();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5;
}

uint64_t sub_19098F3F8()
{
  return swift_deallocObject();
}

uint64_t sub_19098F408()
{
  uint64_t v0;

  return sub_19098F34C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_19098F424(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;

  MEMORY[0x1E0C80A78](a1);
  v2(v1, v3);
  return sub_190A47884();
}

uint64_t sub_19098F4A4(uint64_t a1, uint64_t a2)
{
  return sub_19098F4B0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_19098F424);
}

uint64_t sub_19098F4B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[6], v3[7], v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_19098F4C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v5;

  v2 = *(_QWORD *)(v1 + 136);
  v3 = *(_QWORD *)(v1 + 144);
  v5 = *(_BYTE *)(v1 + 152);
  return sub_1909F2EA8(v1 + 40, v2, v3, &v5, 0, 0, 0, 0, a1, 0);
}

uint64_t ControlButton.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D300);
  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WidgetDescriptor(0) - 8) + 80);
  v2 = (v1 + 32) & ~v1;
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_190A4A350;
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 144);
  v7 = *(_BYTE *)(v0 + 152);
  sub_1909F2EA8(v0 + 40, v4, v5, &v7, 0, 0, 0, 0, v3 + v2, 0);
  sub_19090D084();
  sub_190A46F00();
  return swift_bridgeObjectRelease();
}

uint64_t ControlButton.init<A>(kind:intent:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  _QWORD *v19;
  char v21;

  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a6;
  v19[3] = a7;
  v19[4] = a8;
  v19[5] = a10;
  v21 = 0;
  return ControlButton.init<A, B>(kind:intent:displayName:preferredSize:title:subtitle:affordances:)(a1, a2, a3, 0, 0, &v21, a4, a5, a9, (uint64_t)nullsub_1, (uint64_t)v19, 0, 0, a6, a7, MEMORY[0x1E0CE0428], a8, a10, MEMORY[0x1E0CE0400]);
}

uint64_t sub_19098F6CC()
{
  return swift_deallocObject();
}

uint64_t ControlButton.disabled(_:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  ValueMetadata *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  ValueMetadata *v20;
  _UNKNOWN **v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  _BYTE v28[40];
  _BYTE v29[40];

  v4 = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, v4, a2);
  sub_1908CD8F8(v4 + 88, (uint64_t)&v18);
  if (v22 == 1)
    return sub_19094F59C((uint64_t)&v18);
  sub_1908B4BBC(&v18, (uint64_t)v29);
  sub_1908BBDC8((uint64_t)v29, (uint64_t)v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA430);
  if ((swift_dynamicCast() & 1) == 0)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  v8 = v19;
  v9 = v20;
  v10 = v25;
  v11 = v26;
  v14 = v23;
  v15 = v22;
  v13 = v24;
  v16 = v27;
  v17 = v18;
  v20 = &type metadata for ControlButtonTemplateProvider;
  v21 = &off_1E2CC8830;
  v12 = swift_allocObject();
  *(_QWORD *)&v18 = v12;
  *(_OWORD *)(v12 + 16) = v17;
  *(_QWORD *)(v12 + 32) = v8;
  *(_QWORD *)(v12 + 40) = v9;
  *(_BYTE *)(v12 + 48) = a1 & 1;
  *(_OWORD *)(v12 + 56) = v15;
  *(_OWORD *)(v12 + 72) = v14;
  *(_OWORD *)(v12 + 88) = v13;
  *(_QWORD *)(v12 + 104) = v10;
  *(_QWORD *)(v12 + 112) = v11;
  *(_OWORD *)(v12 + 120) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  LOBYTE(v22) = 0;
  return sub_190974614((uint64_t)&v18, a3 + 88);
}

uint64_t sub_19098F848()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 104))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19098F8A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_19098F8D8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(a1 + 128) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(a1 + 88);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19098F934(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v6;
  v7 = *(_BYTE *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v7 & 1) != 0)
  {
    v8 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v8;
    swift_retain();
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 112) = v9;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 88, a2 + 88);
  }
  *(_BYTE *)(a1 + 128) = v7;
  v10 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v10;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_19098FA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  if (a1 != a2)
  {
    sub_19094F59C(a1 + 88);
    if ((*(_BYTE *)(a2 + 128) & 1) != 0)
    {
      v4 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = v4;
      *(_BYTE *)(a1 + 128) = 1;
      swift_retain();
    }
    else
    {
      v5 = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 112) = v5;
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 88, a2 + 88);
      *(_BYTE *)(a1 + 128) = 0;
    }
  }
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  return a1;
}

__n128 __swift_memcpy153_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t sub_19098FB90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  if (a1 != a2)
  {
    sub_19094F59C(a1 + 88);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  }
  v7 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  return a1;
}

uint64_t sub_19098FC44(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 153))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_19098FC8C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 152) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 153) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 153) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for ControlButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ControlButton);
}

uint64_t sub_19098FD00()
{
  sub_19090D084();
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for ControlButtonTemplateProvider(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(a1 + 88))
    swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ControlButtonTemplateProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 80);
  v12 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 80) = v6;
  v8 = (_OWORD *)(a2 + 88);
  v7 = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v7)
  {
    v9 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = v7;
    *(_QWORD *)(a1 + 96) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *v8;
  }
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ControlButtonTemplateProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 88);
  if (!*(_QWORD *)(a1 + 88))
  {
    if (v7)
    {
      v9 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v7;
      *(_QWORD *)(a1 + 96) = v9;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_8;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = v8;
  swift_retain();
  swift_release();
LABEL_8:
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for ControlButtonTemplateProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  v6 = *(_QWORD *)(a2 + 88);
  if (!*(_QWORD *)(a1 + 88))
  {
    if (v6)
    {
      v8 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v6;
      *(_QWORD *)(a1 + 96) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v6;
  *(_QWORD *)(a1 + 96) = v7;
  swift_release();
LABEL_8:
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlButtonTemplateProvider(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlButtonTemplateProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlButtonTemplateProvider()
{
  return &type metadata for ControlButtonTemplateProvider;
}

uint64_t sub_190990164(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  _QWORD *v11;

  *(_QWORD *)(v6 + 24) = a4;
  *(_QWORD *)(v6 + 32) = a5;
  *(_QWORD *)(v6 + 16) = a3;
  *(_BYTE *)(v6 + 88) = a2;
  *(_QWORD *)(v6 + 40) = *(_QWORD *)(a5 - 8);
  v10 = swift_task_alloc();
  *(_QWORD *)(v6 + 48) = v10;
  *(_QWORD *)(v6 + 56) = sub_190A47D64();
  *(_QWORD *)(v6 + 64) = sub_190A47D58();
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 72) = v11;
  *v11 = v6;
  v11[1] = sub_190990220;
  return sub_190966918(v10, a1, a5, a6);
}

uint64_t sub_190990220()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_1909902A8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  _QWORD *v11;

  *(_QWORD *)(v6 + 24) = a4;
  *(_QWORD *)(v6 + 32) = a5;
  *(_QWORD *)(v6 + 16) = a3;
  *(_BYTE *)(v6 + 88) = a2;
  *(_QWORD *)(v6 + 40) = *(_QWORD *)(a5 - 8);
  v10 = swift_task_alloc();
  *(_QWORD *)(v6 + 48) = v10;
  *(_QWORD *)(v6 + 56) = sub_190A47D64();
  *(_QWORD *)(v6 + 64) = sub_190A47D58();
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 72) = v11;
  *v11 = v6;
  v11[1] = sub_190990364;
  return sub_190966918(v10, a1, a5, a6);
}

uint64_t sub_190990364()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_1909903EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 16);
  v5 = *(unsigned __int8 *)(v0 + 88);
  swift_release();
  v6 = v4(v1, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_19099046C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v10;
  _QWORD *v11;

  v6[4] = a4;
  v6[5] = a5;
  v6[2] = a1;
  v6[3] = a3;
  v6[6] = *(_QWORD *)(a5 - 8);
  v10 = swift_task_alloc();
  v6[7] = v10;
  v6[8] = sub_190A47D64();
  v6[9] = sub_190A47D58();
  v11 = (_QWORD *)swift_task_alloc();
  v6[10] = v11;
  *v11 = v6;
  v11[1] = sub_190990524;
  return sub_190966918(v10, a2, a5, a6);
}

uint64_t sub_190990524()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_1909905AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v13[4];
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v5 = *(_OWORD **)(v0 + 16);
    (*(void (**)(_OWORD *__return_ptr, _QWORD))(v0 + 24))(v13, *(_QWORD *)(v0 + 56));
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    v6 = v13[2];
    v7 = v13[3];
    v8 = v14;
    v9 = v13[1];
    *v5 = v13[0];
    v5[1] = v9;
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 16);
    (*(void (**)(_QWORD, _QWORD))(v3 + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
    v8 = 0;
    *(_QWORD *)v10 = 1;
    *(_QWORD *)(v10 + 8) = 0;
    v6 = 0uLL;
    *(_OWORD *)(v10 + 16) = 0u;
    v7 = 0uLL;
  }
  v11 = *(_QWORD *)(v0 + 16);
  *(_OWORD *)(v11 + 32) = v6;
  *(_OWORD *)(v11 + 48) = v7;
  *(_QWORD *)(v11 + 64) = v8;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190990678()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909906B8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 56))();
}

uint64_t sub_1909906D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  *(_QWORD *)(v4 + 272) = a1;
  *(_QWORD *)(v4 + 280) = a2;
  v5 = *v3;
  v6 = v3[1];
  *(_QWORD *)(v4 + 288) = a3;
  *(_QWORD *)(v4 + 296) = v5;
  *(_QWORD *)(v4 + 304) = v6;
  v7 = *((_OWORD *)v3 + 1);
  *(_BYTE *)(v4 + 448) = *((_BYTE *)v3 + 32);
  v8 = *(_OWORD *)(v3 + 5);
  *(_OWORD *)(v4 + 312) = v7;
  *(_OWORD *)(v4 + 328) = v8;
  v9 = *(_OWORD *)(v3 + 9);
  *(_OWORD *)(v4 + 344) = *(_OWORD *)(v3 + 7);
  *(_OWORD *)(v4 + 360) = v9;
  v10 = *(_OWORD *)(v3 + 13);
  *(_OWORD *)(v4 + 376) = *(_OWORD *)(v3 + 11);
  *(_OWORD *)(v4 + 392) = v10;
  sub_190A47D64();
  *(_QWORD *)(v4 + 408) = sub_190A47D58();
  *(_QWORD *)(v4 + 416) = sub_190A47D28();
  *(_QWORD *)(v4 + 424) = v11;
  return swift_task_switch();
}

uint64_t sub_190990780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t *boxed_opaque_existential_1;
  id v19;
  _QWORD *v20;
  __int128 v22;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 400);
  v4 = *(_QWORD *)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 384);
  v5 = *(_QWORD *)(v0 + 368);
  v6 = *(_BYTE *)(v0 + 448);
  v8 = *(_QWORD *)(v0 + 320);
  v7 = *(_QWORD *)(v0 + 328);
  v10 = *(_QWORD *)(v0 + 304);
  v9 = *(_QWORD *)(v0 + 312);
  v11 = *(void **)(v0 + 288);
  v12 = *(uint64_t **)(v0 + 272);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 24) = v10;
  *(_QWORD *)(v0 + 32) = v9;
  *(_QWORD *)(v0 + 40) = v8;
  *(_BYTE *)(v0 + 48) = v6;
  *(_QWORD *)(v0 + 56) = v7;
  v22 = *(_OWORD *)(v0 + 352);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 336);
  *(_OWORD *)(v0 + 80) = v22;
  *(_QWORD *)(v0 + 96) = v5;
  *(_QWORD *)(v0 + 104) = v4;
  *(_QWORD *)(v0 + 112) = v3;
  *(_QWORD *)(v0 + 120) = v1;
  *(_QWORD *)(v0 + 128) = v2;
  *(_QWORD *)(v0 + 136) = v11;
  v13 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 256) = v13;
  v14 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 224) = v14;
  v15 = *(_OWORD *)(v0 + 16);
  v16 = *(_OWORD *)(v0 + 32);
  v17 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 192) = v17;
  *(_OWORD *)(v0 + 144) = v15;
  *(_OWORD *)(v0 + 160) = v16;
  v12[3] = type metadata accessor for ControlTemplateButton(0);
  v12[4] = sub_19093B308();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1908B4C4C(v4);
  swift_retain();
  v19 = v11;
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 432) = v20;
  *v20 = v0;
  v20[1] = sub_1909908C8;
  return sub_1909AE900((uint64_t)boxed_opaque_existential_1, *(_QWORD *)(v0 + 280));
}

uint64_t sub_1909908C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 440) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_190990928()
{
  uint64_t v0;

  sub_1909909E4(v0 + 16);
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190990968()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 272);
  sub_1909909E4(v0 + 16);
  swift_release();
  __swift_deallocate_boxed_opaque_existential_1(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909909B4()
{
  uint64_t v0;

  return sub_19097797C(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

uint64_t sub_1909909C8()
{
  uint64_t v0;

  return sub_1909909D8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1909909D8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1909909E4(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(void **)(a1 + 120);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1908B467C(v2);

  swift_release();
  return a1;
}

uint64_t sub_190990A7C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190990AA0(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_190930C98;
  return sub_190990164(a1, a2, v9, v8, v6, v7);
}

uint64_t sub_190990B1C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_190990B48(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_1908C5090;
  return sub_19099046C(a1, a2, v9, v8, v6, v7);
}

uint64_t sub_190990BC8(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_190930784;
  return sub_1909902A8(a1, a2, v9, v8, v6, v7);
}

uint64_t WidgetPersonality.extensionBundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___CHKWidgetPersonality_extensionBundleIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_190990CB4()
{
  void *v0;

  swift_bridgeObjectRetain();
  v0 = (void *)sub_190A47AC4();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WidgetPersonality.kind.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___CHKWidgetPersonality_kind);
  swift_bridgeObjectRetain();
  return v1;
}

id WidgetPersonality.__allocating_init(extensionBundleIdentifier:kind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  char *v9;
  char *v10;
  char *v11;
  objc_super v13;

  v9 = (char *)objc_allocWithZone(v4);
  v10 = &v9[OBJC_IVAR___CHKWidgetPersonality_extensionBundleIdentifier];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  v11 = &v9[OBJC_IVAR___CHKWidgetPersonality_kind];
  *(_QWORD *)v11 = a3;
  *((_QWORD *)v11 + 1) = a4;
  v13.receiver = v9;
  v13.super_class = v4;
  return objc_msgSendSuper2(&v13, sel_init);
}

id WidgetPersonality.init(extensionBundleIdentifier:kind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  char *v6;
  objc_super v8;

  v5 = &v4[OBJC_IVAR___CHKWidgetPersonality_extensionBundleIdentifier];
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = a2;
  v6 = &v4[OBJC_IVAR___CHKWidgetPersonality_kind];
  *(_QWORD *)v6 = a3;
  *((_QWORD *)v6 + 1) = a4;
  v8.receiver = v4;
  v8.super_class = (Class)type metadata accessor for WidgetPersonality();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t type metadata accessor for WidgetPersonality()
{
  return objc_opt_self();
}

id WidgetPersonality.__allocating_init<A>(_:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1909917FC(a1);
  swift_unknownObjectRelease();
  return v4;
}

id WidgetPersonality.init<A>(_:)(void *a1)
{
  id v1;

  v1 = sub_1909917FC(a1);
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_190990EA0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(v1 + OBJC_IVAR___CHKWidgetPersonality_extensionBundleIdentifier);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___CHKWidgetPersonality_extensionBundleIdentifier + 8);
  v5 = objc_msgSend(a1, sel_extensionBundleIdentifier);
  v6 = sub_190A47ADC();
  v8 = v7;

  if (v4 == v6 && v3 == v8)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = sub_190A486DC();
    swift_bridgeObjectRelease();
    v11 = 0;
    if ((v10 & 1) == 0)
      return v11 & 1;
  }
  v13 = *(_QWORD *)(v1 + OBJC_IVAR___CHKWidgetPersonality_kind);
  v12 = *(_QWORD *)(v1 + OBJC_IVAR___CHKWidgetPersonality_kind + 8);
  v14 = objc_msgSend(a1, sel_kind);
  v15 = sub_190A47ADC();
  v17 = v16;

  if (v13 == v15 && v12 == v17)
    v11 = 1;
  else
    v11 = sub_190A486DC();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1909910F0()
{
  sub_190A48814();
  swift_bridgeObjectRetain();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A487FC();
}

id sub_1909911A8(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v4;
  _BYTE v5[24];
  uint64_t v6;

  sub_1909918CC(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_1908B4324((uint64_t)v5);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1EDF28);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v2 = objc_msgSend(v4, sel_matchesPersonality_, v1);
  swift_unknownObjectRelease();
  return v2;
}

id WidgetPersonality.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return WidgetPersonality.init(coder:)(a1);
}

id WidgetPersonality.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  id v16;
  objc_super v18;

  v2 = v1;
  sub_190991914();
  v4 = v2;
  v5 = sub_190A48088();
  if (!v5)
    goto LABEL_5;
  v6 = (void *)v5;
  v7 = sub_190A48088();
  if (!v7)
  {

LABEL_5:
    type metadata accessor for WidgetPersonality();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v8 = (void *)v7;
  v9 = sub_190A47ADC();
  v10 = (uint64_t *)&v4[OBJC_IVAR___CHKWidgetPersonality_extensionBundleIdentifier];
  *v10 = v9;
  v10[1] = v11;
  v12 = sub_190A47ADC();
  v14 = v13;

  v15 = (uint64_t *)&v4[OBJC_IVAR___CHKWidgetPersonality_kind];
  *v15 = v12;
  v15[1] = v14;

  v18.receiver = v4;
  v18.super_class = (Class)type metadata accessor for WidgetPersonality();
  v16 = objc_msgSendSuper2(&v18, sel_init);

  return v16;
}

void sub_19099144C(void *a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = (void *)sub_190A47AC4();
  v3 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v2, v3);

  v4 = (void *)sub_190A47AC4();
  v5 = (id)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

}

uint64_t sub_190991658()
{
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  return 91;
}

id WidgetPersonality.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void WidgetPersonality.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id WidgetPersonality.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WidgetPersonality();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1909917FC(void *a1)
{
  void *v1;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  objc_super v15;

  v3 = v1;
  v4 = objc_msgSend(a1, sel_extensionBundleIdentifier);
  v5 = sub_190A47ADC();
  v7 = v6;

  v8 = (uint64_t *)&v3[OBJC_IVAR___CHKWidgetPersonality_extensionBundleIdentifier];
  *v8 = v5;
  v8[1] = v7;
  v9 = objc_msgSend(a1, sel_kind);
  v10 = sub_190A47ADC();
  v12 = v11;

  v13 = (uint64_t *)&v3[OBJC_IVAR___CHKWidgetPersonality_kind];
  *v13 = v10;
  v13[1] = v12;

  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for WidgetPersonality();
  return objc_msgSendSuper2(&v15, sel_init);
}

uint64_t sub_1909918CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C8A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_190991914()
{
  unint64_t result;

  result = qword_1ECF6C7D0;
  if (!qword_1ECF6C7D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECF6C7D0);
  }
  return result;
}

uint64_t method lookup function for WidgetPersonality()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetPersonality.__allocating_init(extensionBundleIdentifier:kind:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of WidgetPersonality.__allocating_init<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of WidgetPersonality.matches(personality:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of static WidgetPersonality.supportsSecureCoding.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of WidgetPersonality.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of WidgetPersonality.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t Preview.init<A>(_:as:widget:timeline:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v12;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a8;
  v12[3] = a9;
  v12[4] = a4;
  v12[5] = a5;
  sub_19095A29C();
  return sub_190A4648C();
}

uint64_t sub_190991A70()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190991A94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(void);

  v2 = *(uint64_t (**)(void))(v1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 16);
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
  return v2();
}

uint64_t Preview.init<A, B>(_:as:widget:timelineProvider:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  char v16;
  _QWORD *v17;
  _QWORD *v18;
  _OWORD v20[2];
  uint64_t v21;
  uint64_t (*v22)@<X0>(uint64_t *@<X8>);
  _QWORD *v23;
  char v24;
  uint64_t v25;
  _QWORD v26[8];

  v16 = *a3;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a8;
  v17[3] = a9;
  v17[4] = a10;
  v17[5] = a11;
  v17[6] = a4;
  v17[7] = a5;
  v21 = 0;
  memset(v20, 0, sizeof(v20));
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a8;
  v18[3] = a9;
  v18[4] = a10;
  v18[5] = a11;
  v18[6] = a6;
  v18[7] = a7;
  v22 = sub_190991BE0;
  v23 = v17;
  v24 = v16;
  v25 = 0;
  sub_190991C4C((uint64_t)v20, (uint64_t)v26);
  v26[5] = sub_190991C18;
  v26[6] = v18;
  sub_19095A304();
  return sub_190A4648C();
}

uint64_t sub_190991BE0@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v2 = v1[4];
  v3 = (uint64_t (*)(void))v1[6];
  a1[3] = v1[2];
  a1[4] = v2;
  __swift_allocate_boxed_opaque_existential_1(a1);
  return v3();
}

uint64_t sub_190991C18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(void);

  v2 = *(uint64_t (**)(void))(v1 + 48);
  a1[3] = *(_QWORD *)(v1 + 24);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return v2();
}

uint64_t sub_190991C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED948);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Preview.init<A, B>(_:as:using:widget:timelineProvider:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  char v16;
  _QWORD *v17;
  _QWORD *v18;
  _OWORD v21[2];
  uint64_t v22;
  uint64_t (*v23)();
  _QWORD *v24;
  char v25;
  uint64_t v26;
  _QWORD v27[8];

  v16 = *a3;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a9;
  v17[3] = a10;
  v17[4] = a11;
  v17[5] = a12;
  v17[6] = a5;
  v17[7] = a6;
  v22 = 0;
  memset(v21, 0, sizeof(v21));
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a9;
  v18[3] = a10;
  v18[4] = a11;
  v18[5] = a12;
  v18[6] = a7;
  v18[7] = a8;
  v23 = sub_190991DA0;
  v24 = v17;
  v25 = v16;
  v26 = a4;
  sub_190991C4C((uint64_t)v21, (uint64_t)v27);
  v27[5] = sub_190991DC8;
  v27[6] = v18;
  sub_19095A304();
  return sub_190A4648C();
}

{
  char v15;
  _QWORD *v16;
  uint64_t AssociatedTypeWitness;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v24[7];
  char v25;
  uint64_t v26;
  _QWORD v27[8];

  v15 = *a3;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a9;
  v16[3] = a10;
  v16[4] = a11;
  v16[5] = a12;
  v16[6] = a5;
  v16[7] = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v24[3] = AssociatedTypeWitness;
  v24[4] = swift_getAssociatedConformanceWitness();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v19 + 16))(boxed_opaque_existential_1, a4, AssociatedTypeWitness);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a9;
  v20[3] = a10;
  v20[4] = a11;
  v20[5] = a12;
  v20[6] = a7;
  v20[7] = a8;
  v24[5] = (uint64_t)sub_190991DA0;
  v24[6] = (uint64_t)v16;
  v25 = v15;
  v26 = 0;
  sub_190991C4C((uint64_t)v24, (uint64_t)v27);
  v27[5] = sub_190991DC8;
  v27[6] = v20;
  sub_19095A304();
  sub_190A4648C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(a4, AssociatedTypeWitness);
}

uint64_t sub_190991DA4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190991F48@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v2 = v1[5];
  v3 = (uint64_t (*)(void))v1[6];
  a1[3] = v1[3];
  a1[4] = v2;
  __swift_allocate_boxed_opaque_existential_1(a1);
  return v3();
}

uint64_t sub_190991F80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(void);

  v2 = *(uint64_t (**)(void))(v1 + 48);
  a1[3] = *(_QWORD *)(v1 + 16);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return v2();
}

uint64_t static PreviewTimelineBuilder.buildExpression<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5B0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_190A4A350;
  *(_QWORD *)(v6 + 56) = a2;
  *(_QWORD *)(v6 + 64) = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v6 + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_1, a1, a2);
  return v6;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> static PreviewTimelineBuilder.buildPartialBlock(accumulated:next:)()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  v0 = swift_bridgeObjectRetain();
  sub_190961AB4(v0);
}

uint64_t static PreviewTimelineBuilder.buildArray(_:)(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;

  result = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v3; ++i)
    {
      v5 = swift_bridgeObjectRetain();
      sub_190961AB4(v5);
    }
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewTimelineBuilder()
{
  return &type metadata for PreviewTimelineBuilder;
}

uint64_t static WidgetLocalizations.< infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  v0 = sub_190A46300();
  v2 = v1;
  if (v0 == sub_190A46300() && v2 == v3)
    v5 = 0;
  else
    v5 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t WidgetLocalizations.__allocating_init(identifier:availableLocalizations:supportsMixedLocalizations:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;

  v6 = swift_allocObject();
  sub_190A462F4();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations) = a3;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations) = a4;
  return v6;
}

uint64_t WidgetLocalizations.init(identifier:availableLocalizations:supportsMixedLocalizations:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A462F4();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v4 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_identifier, v10, v7);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations) = a3;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations) = a4;
  return v4;
}

uint64_t static WidgetLocalizations.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_190992324(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_190A27B34(*a1, *a2);
}

uint64_t sub_190992330()
{
  return sub_190A27DD8();
}

uint64_t sub_190992338()
{
  sub_190A47B18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1909923BC()
{
  return sub_190A280B4();
}

uint64_t sub_1909923C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1909939CC();
  *a1 = result;
  return result;
}

void sub_1909923F0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEA00000000007265;
  v4 = 0x8000000190A5FDA0;
  v5 = 0xD000000000000016;
  if (v2 != 1)
  {
    v5 = 0xD00000000000001ALL;
    v4 = 0x8000000190A5FDC0;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x696669746E656469;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_190992458()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000016;
  if (*v0 != 1)
    v1 = 0xD00000000000001ALL;
  if (*v0)
    return v1;
  else
    return 0x696669746E656469;
}

uint64_t sub_1909924BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1909939CC();
  *a1 = result;
  return result;
}

uint64_t sub_1909924E0()
{
  sub_190993024();
  return sub_190A48868();
}

uint64_t sub_190992508()
{
  sub_190993024();
  return sub_190A48874();
}

void sub_190992530(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  MEMORY[0x1E0C80A78](v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v1 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_identifier, v3);
  v6 = sub_190A4873C();
  v7 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);
  swift_unknownObjectRelease();

  v8 = (void *)sub_190A47C50();
  v9 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v8, v9);

  v10 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations);
  v11 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeBool_forKey_, v10, v11);

}

uint64_t WidgetLocalizations.__allocating_init(coder:)(void *a1)
{
  swift_allocObject();
  WidgetLocalizations.init(coder:)(a1);
  return 0;
}

uint64_t WidgetLocalizations.init(coder:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  int v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  char v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[24];
  uint64_t v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDF38);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v9 = (void *)sub_190A47AC4();
  v10 = objc_msgSend(a1, sel_decodeObjectForKey_, v9);

  if (v10)
  {
    sub_190A481B4();
    swift_unknownObjectRelease();
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  sub_19095AD58((uint64_t)&v23, (uint64_t)v25);
  if (!v26)
  {
    sub_1908AA544((uint64_t)v25, (uint64_t *)&unk_1ECF6C8A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_9;
  }
  v11 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, v11 ^ 1u, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_9:

    swift_release();
    sub_1908AA544((uint64_t)v4, &qword_1EE1EDF38);
LABEL_24:
    swift_deallocPartialClassInstance();
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v12 = (void *)sub_190A47AC4();
  v13 = objc_msgSend(a1, sel_decodeObjectForKey_, v12);

  if (v13)
  {
    sub_190A481B4();
    swift_unknownObjectRelease();
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  sub_19095AD58((uint64_t)&v23, (uint64_t)v25);
  if (!v26)
  {

    swift_release();
LABEL_22:
    sub_1908AA544((uint64_t)v25, (uint64_t *)&unk_1ECF6C8A0);
    goto LABEL_23;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
  if ((swift_dynamicCast() & 1) == 0)
  {

    swift_release();
LABEL_23:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    goto LABEL_24;
  }
  v14 = v22;
  v15 = (void *)sub_190A47AC4();
  v16 = objc_msgSend(a1, sel_decodeObjectForKey_, v15);

  if (v16)
  {
    sub_190A481B4();
    swift_unknownObjectRelease();
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  sub_19095AD58((uint64_t)&v23, (uint64_t)v25);
  if (!v26)
  {

    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  v17 = v22;
  swift_release();
  sub_190A46300();
  type metadata accessor for WidgetLocalizations();
  v18 = swift_allocObject();
  sub_190A462F4();

  *(_QWORD *)(v18 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations) = v14;
  *(_BYTE *)(v18 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations) = v17;
  v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  swift_deallocPartialClassInstance();
  swift_setDeallocating();
  v19((char *)(v18 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_identifier), v5);
  swift_bridgeObjectRelease();
  swift_deallocClassInstance();
  return 0;
}

uint64_t type metadata accessor for WidgetLocalizations()
{
  uint64_t result;

  result = qword_1ECF6B220;
  if (!qword_1ECF6B220)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_190992C14()
{
  uint64_t v0;

  sub_190A48298();
  sub_190A47B3C();
  v0 = swift_bridgeObjectRetain();
  MEMORY[0x194012E8C](v0, MEMORY[0x1E0DEA968]);
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  sub_190993A14(&qword_1EE1EAF60, MEMORY[0x1E0D0F998]);
  sub_190A4867C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t WidgetLocalizations.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_identifier;
  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WidgetLocalizations.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_identifier;
  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_190992E64(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C778);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190993024();
  sub_190A48850();
  v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  sub_190993A14(&qword_1ECF6B018, MEMORY[0x1E0D0F970]);
  sub_190A48640();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations);
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
    sub_1909933B0(&qword_1ECF6C770, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_190A48640();
    v10[14] = 2;
    sub_190A48604();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_190993024()
{
  unint64_t result;

  result = qword_1ECF6CC10;
  if (!qword_1ECF6CC10)
  {
    result = MEMORY[0x19401429C](&unk_190A54FCC, &type metadata for WidgetLocalizations.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6CC10);
  }
  return result;
}

uint64_t WidgetLocalizations.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  WidgetLocalizations.init(from:)(a1);
  return v2;
}

uint64_t WidgetLocalizations.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CD78);
  v7 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v19 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_190993024();
  sub_190A48838();
  if (v1)
  {
    v13 = v20;
    v11 = (uint64_t)v19;
    type metadata accessor for WidgetLocalizations();
    swift_deallocPartialClassInstance();
    __swift_destroy_boxed_opaque_existential_1(v11);
  }
  else
  {
    v17 = v4;
    v24 = 0;
    sub_190993A14((unint64_t *)&unk_1ECF6B230, MEMORY[0x1E0D0F990]);
    sub_190A48580();
    v13 = v20;
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v20 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_identifier, v6, v3);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
    v23 = 1;
    sub_1909933B0(&qword_1ECF6CD18, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_190A48580();
    *(_QWORD *)(v13 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations) = v21;
    v22 = 2;
    v14 = v18;
    v15 = sub_190A48544();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v14);
    *(_BYTE *)(v13 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations) = v15 & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  return v13;
}

uint64_t sub_1909933B0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ECF6CD08);
    v8 = a2;
    result = MEMORY[0x19401429C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190993410@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  type metadata accessor for WidgetLocalizations();
  v5 = swift_allocObject();
  result = WidgetLocalizations.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_190993468(_QWORD *a1)
{
  return sub_190992E64(a1);
}

uint64_t sub_190993488()
{
  return sub_190992C14();
}

uint64_t sub_1909934AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  v0 = sub_190A46300();
  v2 = v1;
  if (v0 == sub_190A46300() && v2 == v3)
    v5 = 0;
  else
    v5 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_190993560(uint64_t *a1, uint64_t *a2)
{
  return _s9WidgetKit0A13LocalizationsC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t _s9WidgetKit0A13LocalizationsC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v5;
  char v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  sub_190993A14((unint64_t *)&qword_1EE1E5F10, MEMORY[0x1E0D0F988]);
  sub_190A47C08();
  sub_190A47C08();
  if (v10 == v8 && v11 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v5 = sub_190A486DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = 0;
    if ((v5 & 1) == 0)
      return v6 & 1;
  }
  if ((sub_190917DA8(*(_QWORD **)(a1 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations), *(_QWORD **)(a2 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations)) & 1) != 0)v6 = *(_BYTE *)(a1 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations) ^ *(_BYTE *)(a2 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations) ^ 1;
  else
    v6 = 0;
  return v6 & 1;
}

unint64_t sub_190993698()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EDF40;
  if (!qword_1EE1EDF40)
  {
    v1 = type metadata accessor for WidgetLocalizations();
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetLocalizations, v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EDF40);
  }
  return result;
}

uint64_t sub_1909936E0()
{
  return type metadata accessor for WidgetLocalizations();
}

void sub_1909936E8()
{
  unint64_t v0;

  sub_1909937D4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for WidgetLocalizations()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetLocalizations.__allocating_init(identifier:availableLocalizations:supportsMixedLocalizations:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of WidgetLocalizations.encode(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of WidgetLocalizations.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of WidgetLocalizations.debugDescription.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of WidgetLocalizations.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of WidgetLocalizations.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

void sub_1909937D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ECF6B240)
  {
    v0 = sub_190A4630C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ECF6B240);
  }
}

uint64_t storeEnumTagSinglePayload for WidgetLocalizations.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190993874 + 4 * byte_190A54D85[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1909938A8 + 4 * asc_190A54D80[v4]))();
}

uint64_t sub_1909938A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909938B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909938B8);
  return result;
}

uint64_t sub_1909938C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909938CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1909938D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909938D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetLocalizations.CodingKeys()
{
  return &type metadata for WidgetLocalizations.CodingKeys;
}

unint64_t sub_1909938F8()
{
  unint64_t result;

  result = qword_1EE1EDF48;
  if (!qword_1EE1EDF48)
  {
    result = MEMORY[0x19401429C](&unk_190A54FA4, &type metadata for WidgetLocalizations.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDF48);
  }
  return result;
}

unint64_t sub_190993940()
{
  unint64_t result;

  result = qword_1ECF6CC20;
  if (!qword_1ECF6CC20)
  {
    result = MEMORY[0x19401429C](&unk_190A54EDC, &type metadata for WidgetLocalizations.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6CC20);
  }
  return result;
}

unint64_t sub_190993988()
{
  unint64_t result;

  result = qword_1ECF6CC18;
  if (!qword_1ECF6CC18)
  {
    result = MEMORY[0x19401429C](&unk_190A54F04, &type metadata for WidgetLocalizations.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6CC18);
  }
  return result;
}

uint64_t sub_1909939CC()
{
  unint64_t v0;

  v0 = sub_190A484F0();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_190993A14(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ECF6B760);
    result = MEMORY[0x19401429C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static WidgetIsSnapshottingKey.defaultValue.getter()
{
  swift_beginAccess();
  return byte_1EE1EDF50;
}

uint64_t static WidgetIsSnapshottingKey.defaultValue.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EE1EDF50 = a1;
  return result;
}

uint64_t (*static WidgetIsSnapshottingKey.defaultValue.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_190993B1C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_beginAccess();
  *a1 = byte_1EE1EDF50;
  return result;
}

uint64_t EnvironmentValues.widgetIsSnapshotting.getter()
{
  return sub_19096C5B8((void (*)(void))sub_1909879F0);
}

uint64_t EnvironmentValues.widgetIsSnapshotting.setter(uint64_t a1)
{
  return sub_19096C60C(a1, (void (*)(void))sub_1909879F0);
}

uint64_t (*EnvironmentValues.widgetIsSnapshotting.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_1909879F0();
  sub_190A46C3C();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_190993BEC;
}

uint64_t sub_190993BEC(uint64_t a1)
{
  return sub_19096C724(a1);
}

uint64_t sub_190993BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  __swift_allocate_value_buffer(v0, qword_1EE1EAD40);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE1EAD40);
  v2 = sub_190A46084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t sub_190993C60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EE1EAD58 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE1EAD40);
  return sub_190993F10(v3, a1);
}

uint64_t sub_190993CC0()
{
  sub_190994478();
  return sub_190A4681C();
}

uint64_t EnvironmentValues.widgetReferenceDate.getter()
{
  sub_190993D44();
  return sub_190A46C3C();
}

unint64_t sub_190993D44()
{
  unint64_t result;

  result = qword_1EE1EAD60;
  if (!qword_1EE1EAD60)
  {
    result = MEMORY[0x19401429C](&unk_190A550F8, &_s22WidgetReferenceDateKeyVN);
    atomic_store(result, (unint64_t *)&qword_1EE1EAD60);
  }
  return result;
}

uint64_t sub_190993D88()
{
  sub_190993D44();
  return sub_190A46C3C();
}

uint64_t sub_190993DC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  sub_190993F10(a1, (uint64_t)&v9 - v6);
  sub_190993F10((uint64_t)v7, (uint64_t)v5);
  sub_190993D44();
  sub_190A46C48();
  return sub_190993F58((uint64_t)v7);
}

uint64_t EnvironmentValues.widgetReferenceDate.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  MEMORY[0x1E0C80A78](v2);
  sub_190993F10(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_190993D44();
  sub_190A46C48();
  return sub_190993F58(a1);
}

uint64_t sub_190993F10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_190993F58(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void (*EnvironmentValues.widgetReferenceDate.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_190993D44();
  sub_190A46C3C();
  return sub_190994038;
}

void sub_190994038(uint64_t **a1, char a2)
{
  uint64_t *v3;
  void *v4;
  void *v5;
  void *v6;

  v3 = *a1;
  sub_190993F10((*a1)[3], (*a1)[2]);
  v4 = (void *)v3[3];
  v5 = (void *)v3[1];
  v6 = (void *)v3[2];
  if ((a2 & 1) != 0)
  {
    sub_190993F10(v3[2], v3[1]);
    sub_190A46C48();
    sub_190993F58((uint64_t)v6);
  }
  else
  {
    sub_190A46C48();
  }
  sub_190993F58((uint64_t)v4);
  free(v4);
  free(v6);
  free(v5);
  free(v3);
}

uint64_t static WidgetAnimationsPausedKey.defaultValue.getter()
{
  swift_beginAccess();
  return byte_1EE1EDF58;
}

uint64_t static WidgetAnimationsPausedKey.defaultValue.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EE1EDF58 = a1;
  return result;
}

uint64_t (*static WidgetAnimationsPausedKey.defaultValue.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1909941B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_beginAccess();
  *a1 = byte_1EE1EDF58;
  return result;
}

uint64_t EnvironmentValues.widgetAnimationsPaused.getter()
{
  return sub_19096C5B8((void (*)(void))sub_190994214);
}

unint64_t sub_190994214()
{
  unint64_t result;

  result = qword_1EE1EADF0;
  if (!qword_1EE1EADF0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetAnimationsPausedKey, &type metadata for WidgetAnimationsPausedKey);
    atomic_store(result, (unint64_t *)&qword_1EE1EADF0);
  }
  return result;
}

uint64_t sub_190994258@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_190994214();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_1909942A4()
{
  sub_190994214();
  return sub_190A46C48();
}

uint64_t EnvironmentValues.widgetAnimationsPaused.setter(uint64_t a1)
{
  return sub_19096C60C(a1, (void (*)(void))sub_190994214);
}

uint64_t (*EnvironmentValues.widgetAnimationsPaused.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_190994214();
  sub_190A46C3C();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_190994360;
}

uint64_t sub_190994360(uint64_t a1)
{
  return sub_19096C724(a1);
}

uint64_t sub_190994374()
{
  sub_190993D44();
  return sub_190A46C3C();
}

uint64_t sub_1909943B4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_190994214();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_190994400()
{
  sub_190994214();
  return sub_190A46C48();
}

ValueMetadata *type metadata accessor for WidgetIsSnapshottingKey()
{
  return &type metadata for WidgetIsSnapshottingKey;
}

ValueMetadata *type metadata accessor for WidgetAnimationsPausedKey()
{
  return &type metadata for WidgetAnimationsPausedKey;
}

ValueMetadata *_s22WidgetReferenceDateKeyVMa()
{
  return &_s22WidgetReferenceDateKeyVN;
}

unint64_t sub_190994478()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EE1EDF60;
  if (!qword_1EE1EDF60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6C2F8);
    v2 = sub_1909944DC();
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEE998], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EDF60);
  }
  return result;
}

unint64_t sub_1909944DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1E6BE0;
  if (!qword_1EE1E6BE0)
  {
    v1 = sub_190A46084();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CB08B8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1E6BE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetBackgroundAbsent()
{
  return &type metadata for WidgetBackgroundAbsent;
}

ValueMetadata *type metadata accessor for WidgetBackgroundAbsent.View()
{
  return &type metadata for WidgetBackgroundAbsent.View;
}

uint64_t sub_190994544()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190994554@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  id v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  __int128 v54;
  __int128 v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  _OWORD v61[20];

  v36 = a1;
  v1 = type metadata accessor for WidgetURLModifier(0);
  MEMORY[0x1E0C80A78](v1);
  v35 = (uint64_t)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDF68);
  MEMORY[0x1E0C80A78](v34);
  v33 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v4);
  v32 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_190A46EB8();
  sub_1909948A4((uint64_t)v61);
  v6 = v61[0];
  v31 = *(_QWORD *)&v61[0];
  v7 = *(_QWORD *)&v61[1];
  v8 = *(_QWORD *)&v61[2];
  v29 = BYTE8(v61[2]);
  v28 = v61[3];
  v27 = *(_QWORD *)&v61[4];
  v25 = *((_QWORD *)&v61[1] + 1);
  v26 = *((_QWORD *)&v61[4] + 1);
  v9 = v61[5];
  v11 = *((_QWORD *)&v61[5] + 1);
  v10 = *(_QWORD *)&v61[6];
  v12 = BYTE8(v61[6]);
  v13 = *(_QWORD *)&v61[7];
  v59 = 1;
  v58 = v61[5];
  v57 = BYTE8(v61[6]);
  v14 = sub_190A47308();
  v60 = 1;
  v37 = v30;
  v38 = 0;
  v39 = 1;
  v40 = v6;
  v41 = v7;
  v42 = v25;
  v43 = v8;
  v44 = v29;
  v45 = v28;
  v46 = v27;
  v47 = v26;
  v48 = v9;
  v49 = v11;
  v50 = v10;
  v51 = v12;
  v52 = v13;
  v53 = v14;
  v55 = 0u;
  v54 = 0u;
  v56 = 1;
  sub_190A478CC();
  sub_190A3B2A0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v61, 0.0, 1, INFINITY, 0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_19090D1C4(v11, v10, v12);
  swift_bridgeObjectRelease();
  v15 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  v16 = MEMORY[0x1940128E0](v15);
  v17 = sub_190A47308();
  *(_QWORD *)&v61[19] = v16;
  BYTE8(v61[19]) = v17;
  sub_190A47ADC();
  v18 = (uint64_t)v32;
  sub_190A45FB8();
  swift_bridgeObjectRelease();
  v19 = v35;
  sub_19093FE6C(v18, v35);
  v20 = v33;
  sub_190994AF8(v19, (uint64_t)&v33[*(int *)(v34 + 36)]);
  memcpy(v20, v61, 0x139uLL);
  sub_190994B3C((uint64_t)v61);
  sub_190994BDC(v19);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDF70);
  v22 = v36;
  sub_19093FE6C(v18, v36 + *(int *)(v21 + 36));
  sub_190994C18((uint64_t)v20, v22);
  sub_1909655B4(v18);
  return sub_190994C60((uint64_t)v61);
}

uint64_t sub_1909948A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;

  v24 = sub_190A476F8();
  v23 = sub_190A473F8();
  KeyPath = swift_getKeyPath();
  v21 = sub_190A47698();
  v20 = swift_getKeyPath();
  v19 = sub_190A47320();
  sub_190A46E70();
  v2 = sub_190A474AC();
  v4 = v3;
  v6 = v5 & 1;
  sub_190A4735C();
  v7 = sub_190A474A0();
  v9 = v8;
  v11 = v10;
  swift_release();
  sub_19090D1C4(v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_190A47698();
  v12 = sub_190A47488();
  v14 = v13;
  LOBYTE(v2) = v15;
  v17 = v16;
  swift_release();
  LOBYTE(v2) = v2 & 1;
  sub_19090D1C4(v7, v9, v11 & 1);
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v24;
  *(_QWORD *)(a1 + 8) = KeyPath;
  *(_QWORD *)(a1 + 16) = v23;
  *(_QWORD *)(a1 + 24) = v20;
  *(_QWORD *)(a1 + 32) = v21;
  *(_BYTE *)(a1 + 40) = v19;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_BYTE *)(a1 + 80) = 1;
  *(_QWORD *)(a1 + 88) = v12;
  *(_QWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 104) = v2;
  *(_QWORD *)(a1 + 112) = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_190950F28(v12, v14, v2);
  swift_bridgeObjectRetain();
  sub_19090D1C4(v12, v14, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190994AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetURLModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_190994B3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 120);
  v4 = *(_BYTE *)(a1 + 128);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_190950F28(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_190994BDC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WidgetURLModifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_190994C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_190994C60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 120);
  v4 = *(_BYTE *)(a1 + 128);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_19090D1C4(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190994D00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46B94();
  *a1 = result;
  return result;
}

uint64_t sub_190994D28()
{
  swift_retain();
  return sub_190A46BA0();
}

unint64_t sub_190994D5C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EDF78;
  if (!qword_1EE1EDF78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EDF70);
    v2[0] = sub_190994DE0();
    v2[1] = sub_1908AA2F4(&qword_1ECF6AAB8, type metadata accessor for WidgetURLMetadataModifier, (uint64_t)&unk_190A522B0);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EDF78);
  }
  return result;
}

unint64_t sub_190994DE0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EDF80;
  if (!qword_1EE1EDF80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EDF68);
    v2[0] = sub_190994E64();
    v2[1] = sub_1908AA2F4(&qword_1ECF6B9D0, type metadata accessor for WidgetURLModifier, (uint64_t)&protocol conformance descriptor for WidgetURLModifier);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EDF80);
  }
  return result;
}

unint64_t sub_190994E64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EDF88;
  if (!qword_1EE1EDF88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EDF90);
    v2[0] = sub_190994EE8();
    v2[1] = sub_1908AF598(&qword_1EE1EA820, (uint64_t *)&unk_1EE1EA828, MEMORY[0x1E0CDC6D0]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EDF88);
  }
  return result;
}

unint64_t sub_190994EE8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EDF98;
  if (!qword_1EE1EDF98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EDFA0);
    v2[0] = sub_190994F54();
    v2[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EDF98);
  }
  return result;
}

unint64_t sub_190994F54()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EDFA8;
  if (!qword_1EE1EDFA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EDFB0);
    v2[0] = sub_1908AF598(&qword_1EE1EDFB8, &qword_1EE1EDFC0, MEMORY[0x1E0CDFCC0]);
    v2[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EDFA8);
  }
  return result;
}

uint64_t sub_190994FD8()
{
  sub_19099605C();
  return sub_190A4681C();
}

uint64_t EnvironmentValues._widgetAccentedDesaturatedMode.getter()
{
  uint64_t v1;

  sub_190943F38();
  sub_190A46C3C();
  return v1;
}

uint64_t EnvironmentValues._widgetAccentedDesaturatedMode.setter()
{
  sub_190943F38();
  return sub_190A46C48();
}

uint64_t (*EnvironmentValues._widgetAccentedDesaturatedMode.modify(uint64_t a1))(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = sub_190943F38();
  sub_190A46C3C();
  return sub_1909950E4;
}

uint64_t sub_1909950E4(_QWORD *a1)
{
  a1[1] = *a1;
  return sub_190A46C48();
}

uint64_t sub_190995118()
{
  return 0x6465746E65636361;
}

uint64_t sub_190995130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6465746E65636361 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_190A486DC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1909951C4()
{
  sub_190995348();
  return sub_190A48868();
}

uint64_t sub_1909951EC()
{
  sub_190995348();
  return sub_190A48874();
}

uint64_t WidgetAccentedDesaturatedViewModifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA690);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190995348();
  sub_190A48838();
  if (!v2)
  {
    v9 = sub_190A48544();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    KeyPath = swift_getKeyPath();
    v11 = swift_getKeyPath();
    *(_QWORD *)a2 = KeyPath;
    *(_BYTE *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = v11;
    *(_BYTE *)(a2 + 24) = 0;
    *(_BYTE *)(a2 + 25) = v9 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_190995348()
{
  unint64_t result;

  result = qword_1EE1EB940;
  if (!qword_1EE1EB940)
  {
    result = MEMORY[0x19401429C](&unk_190A5549C, &type metadata for WidgetAccentedDesaturatedViewModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EB940);
  }
  return result;
}

uint64_t WidgetAccentedDesaturatedViewModifier.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB188);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190995348();
  sub_190A48850();
  sub_190A48604();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t WidgetAccentedDesaturatedViewModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_BYTE *, uint64_t, uint64_t);
  uint64_t v30;
  _BYTE v31[4];
  int v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  char v39;

  v3 = v2;
  v36 = a1;
  v37 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA658);
  *(_QWORD *)&v38 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v31[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA638);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v31[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA630);
  v11 = MEMORY[0x1E0C80A78](v10);
  v34 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v35 = &v31[-v13];
  v14 = *(_QWORD *)v2;
  v15 = *(_BYTE *)(v2 + 8);
  v16 = *(_QWORD *)(v2 + 16);
  v17 = *(_BYTE *)(v2 + 24);
  v18 = *(unsigned __int8 *)(v3 + 25);
  sub_1908D1B74(v14, v15);
  sub_1908D1B74(v16, v17);
  sub_1908D1B74(v16, v17);
  sub_19096F94C(v16, v17, &v39);
  sub_1908CE654(v16, v17);
  sub_1908CE654(v14, v15);
  sub_1908CE654(v16, v17);
  if (v39 != 1)
  {
    v27 = v38;
    v28 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v38 + 16);
    v28(v6, v36, v4);
    v28(v9, (uint64_t)v6, v4);
    swift_storeEnumTagMultiPayload();
    sub_190995A2C();
    sub_190995A98();
    sub_190A46F90();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v27 + 8))(v6, v4);
  }
  v32 = v18;
  v33 = v7;
  v19 = v38;
  sub_1908D1B74(v14, v15);
  sub_1908D1B74(v16, v17);
  sub_1908D1B74(v14, v15);
  v20 = sub_19096F78C(v14, v15);
  sub_1908CE654(v14, v15);
  sub_1908CE654(v14, v15);
  sub_1908CE654(v16, v17);
  v21 = xmmword_190A55210;
  if (v20 != 1)
  {
    if (v20 == 3)
    {
      v22 = v4;
      v23 = (uint64_t)v9;
      v24 = (uint64_t)v34;
      v26 = (uint64_t)v35;
      v25 = v36;
      goto LABEL_11;
    }
    v22 = v4;
    v23 = (uint64_t)v9;
    v24 = (uint64_t)v34;
    v26 = (uint64_t)v35;
    v25 = v36;
    if (v20 == 2 && (v32 & 1) == 0)
      goto LABEL_11;
    goto LABEL_9;
  }
  v22 = v4;
  v23 = (uint64_t)v9;
  v24 = (uint64_t)v34;
  v26 = (uint64_t)v35;
  v25 = v36;
  if ((v32 & 1) == 0)
LABEL_9:
    v21 = xmmword_190A55220;
LABEL_11:
  v38 = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v24, v25, v22);
  v30 = v24 + *(int *)(v10 + 36);
  *(_OWORD *)(v30 + 44) = 0u;
  *(_OWORD *)(v30 + 16) = 0u;
  *(_OWORD *)(v30 + 32) = 0u;
  *(_OWORD *)v30 = 0u;
  *(_OWORD *)(v30 + 60) = v38;
  *(_DWORD *)(v30 + 76) = 0;
  sub_190995AE4(v24, v26);
  sub_190995B2C(v26, v23);
  swift_storeEnumTagMultiPayload();
  sub_190995A2C();
  sub_190995A98();
  sub_190A46F90();
  return sub_190995B74(v26);
}

uint64_t sub_190995804@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetAccentedDesaturatedViewModifier.init(from:)(a1, a2);
}

uint64_t sub_190995818(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB188);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190995348();
  sub_190A48850();
  sub_190A48604();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_190995900()
{
  sub_1909960A4();
  return sub_190A470F8();
}

uint64_t sub_190995968()
{
  sub_1909960A4();
  return sub_190A47104();
}

uint64_t sub_1909959D0()
{
  sub_1909960A4();
  return sub_190A47110();
}

unint64_t sub_190995A2C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EA628;
  if (!qword_1EE1EA628)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EA630);
    v2[0] = sub_190995A98();
    v2[1] = MEMORY[0x1E0CDD040];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EA628);
  }
  return result;
}

unint64_t sub_190995A98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EA650;
  if (!qword_1EE1EA650)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EA658);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDBF10], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EA650);
  }
  return result;
}

uint64_t sub_190995AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_190995B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_190995B74(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA630);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_190995BB8()
{
  unint64_t result;

  result = qword_1EE1EBB00;
  if (!qword_1EE1EBB00)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetAccentedDesaturatedViewModifier, &type metadata for WidgetAccentedDesaturatedViewModifier);
    atomic_store(result, (unint64_t *)&qword_1EE1EBB00);
  }
  return result;
}

unint64_t sub_190995C00()
{
  unint64_t result;

  result = qword_1EE1EBAF8;
  if (!qword_1EE1EBAF8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetAccentedDesaturatedViewModifier, &type metadata for WidgetAccentedDesaturatedViewModifier);
    atomic_store(result, (unint64_t *)&qword_1EE1EBAF8);
  }
  return result;
}

uint64_t sub_190995C48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeWithCopy for WidgetAccentedDesaturatedViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B74(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1908D1B74(v6, v7);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

uint64_t assignWithCopy for WidgetAccentedDesaturatedViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B74(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1908CE654(v6, v7);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_1908D1B74(v8, v9);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  sub_1908CE654(v10, v11);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

__n128 __swift_memcpy26_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for WidgetAccentedDesaturatedViewModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1908CE654(v6, v7);
  v8 = *((_BYTE *)a2 + 24);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v8;
  sub_1908CE654(v9, v10);
  *(_BYTE *)(a1 + 25) = *((_BYTE *)a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetAccentedDesaturatedViewModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 26))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetAccentedDesaturatedViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 26) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 26) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetAccentedDesaturatedViewModifier()
{
  return &type metadata for WidgetAccentedDesaturatedViewModifier;
}

unint64_t sub_190995E6C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EA640;
  if (!qword_1EE1EA640)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EA648);
    v2[0] = sub_190995A2C();
    v2[1] = sub_190995A98();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EA640);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WidgetAccentedDesaturatedViewModifier.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_190995F18 + 4 * byte_190A55230[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_190995F38 + 4 * byte_190A55235[v4]))();
}

_BYTE *sub_190995F18(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_190995F38(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190995F40(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190995F48(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190995F50(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190995F58(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WidgetAccentedDesaturatedViewModifier.CodingKeys()
{
  return &type metadata for WidgetAccentedDesaturatedViewModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for WidgetAccentedDesaturatedModeKey()
{
  return &type metadata for WidgetAccentedDesaturatedModeKey;
}

unint64_t sub_190995F88()
{
  unint64_t result;

  result = qword_1EE1EDFC8;
  if (!qword_1EE1EDFC8)
  {
    result = MEMORY[0x19401429C](&unk_190A55474, &type metadata for WidgetAccentedDesaturatedViewModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDFC8);
  }
  return result;
}

unint64_t sub_190995FD0()
{
  unint64_t result;

  result = qword_1EE1EB800;
  if (!qword_1EE1EB800)
  {
    result = MEMORY[0x19401429C](&unk_190A553E4, &type metadata for WidgetAccentedDesaturatedViewModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EB800);
  }
  return result;
}

unint64_t sub_190996018()
{
  unint64_t result;

  result = qword_1EE1EB948;
  if (!qword_1EE1EB948)
  {
    result = MEMORY[0x19401429C](&unk_190A5540C, &type metadata for WidgetAccentedDesaturatedViewModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EB948);
  }
  return result;
}

unint64_t sub_19099605C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EDFD0;
  if (!qword_1EE1EDFD0)
  {
    type metadata accessor for CHSTintAccentedDesaturatedMode(255);
    result = MEMORY[0x19401429C](&unk_190A49DFC, v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EDFD0);
  }
  return result;
}

unint64_t sub_1909960A4()
{
  unint64_t result;

  result = qword_1EE1EBAF0;
  if (!qword_1EE1EBAF0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetAccentedDesaturatedViewModifier, &type metadata for WidgetAccentedDesaturatedViewModifier);
    atomic_store(result, (unint64_t *)&qword_1EE1EBAF0);
  }
  return result;
}

void sub_1909960E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDFD8);
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

uint64_t sub_190996174()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1908B53B8(v3, v2);
  sub_1908B53B8(v3, v2);
  sub_1908B53B8(v1, v0);
  sub_190A46018();
  v4 = sub_1908B53FC(v3, v2);
  return ((uint64_t (*)(uint64_t))((char *)sub_1909961E4 + 4 * byte_190A55528[v0 >> 62]))(v4);
}

uint64_t sub_1909961E4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  sub_1908B53B8(v2, v0);
  sub_190A46018();
  sub_1908B53FC(v2, v0);
  v5 = *(int *)(v3 + 56);
  *(_BYTE *)(v1 + v5) = 0;
  sub_190A4600C();
  sub_190997148();
  while (1)
  {
    sub_190A4816C();
    if ((*(_BYTE *)(v4 - 65) & 1) != 0)
      break;
    v6 = *(unsigned __int8 *)(v4 - 66);
    sub_190A4816C();
    if ((*(_BYTE *)(v4 - 67) & 1) != 0)
      break;
    if (v6 < *(unsigned __int8 *)(v4 - 68))
    {
      v7 = 1;
      goto LABEL_7;
    }
  }
  v7 = 0;
  *(_BYTE *)(v1 + v5) = 1;
LABEL_7:
  sub_190997190(v1);
  return v7;
}

_BYTE *sub_1909962CC@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1909962D8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return sub_1908B53B8(v3, v2);
}

uint64_t sub_190996310()
{
  return 0x65756C6156776172;
}

uint64_t sub_19099632C()
{
  sub_1909975E4();
  return sub_190A48868();
}

uint64_t sub_190996354()
{
  sub_1909975E4();
  return sub_190A48874();
}

uint64_t sub_19099637C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t result;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B740);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909975E4();
  sub_190A48838();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = sub_190A48544();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = v9 & 1;
  return result;
}

uint64_t sub_190996490(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B490);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909975E4();
  sub_190A48850();
  sub_190A48604();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_190996578(_BYTE *a1, _BYTE *a2)
{
  return *a2 & ~*a1 & 1;
}

uint64_t sub_19099658C(_BYTE *a1, _BYTE *a2)
{
  return *a2 & 1 | ((*a1 & 1) == 0);
}

uint64_t sub_1909965A0(_BYTE *a1, _BYTE *a2)
{
  return *a1 & 1 | ((*a2 & 1) == 0);
}

uint64_t sub_1909965B4(_BYTE *a1, _BYTE *a2)
{
  return *a1 & ~*a2 & 1;
}

uint64_t sub_1909965C8()
{
  _BYTE *v0;

  if (*v0)
    return 1702195828;
  else
    return 0x65736C6166;
}

uint64_t sub_1909965F8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B498);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909972F4();
  sub_190A48850();
  v11[0] = a2;
  v11[1] = a3;
  sub_19091C084();
  sub_190A48640();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1909966FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_190A486DC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_190996790()
{
  sub_1909972F4();
  return sub_190A48868();
}

uint64_t sub_1909967B8()
{
  sub_1909972F4();
  return sub_190A48874();
}

_QWORD *sub_1909967E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = sub_1909971D0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_190996808(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1909965F8(a1, *v1, v1[1]);
}

unint64_t sub_190996824()
{
  unint64_t result;

  result = qword_1ECF6CC98;
  if (!qword_1ECF6CC98)
  {
    result = MEMORY[0x19401429C](&unk_190A555D8, &type metadata for ComparableData);
    atomic_store(result, (unint64_t *)&qword_1ECF6CC98);
  }
  return result;
}

uint64_t sub_190996868(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  sub_1908B53B8(*a1, v3);
  sub_1908B53B8(v4, v5);
  sub_1909960E8(v2, v3);
  v7 = v6;
  sub_1908B53FC(v2, v3);
  sub_1908B53FC(v4, v5);
  return v7 & 1;
}

BOOL sub_1909968F0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  sub_1908B53B8(*a2, v5);
  sub_1908B53B8(v2, v3);
  sub_1909960E8(v4, v5);
  v7 = v6;
  sub_1908B53FC(v4, v5);
  sub_1908B53FC(v2, v3);
  return (v7 & 1) == 0;
}

BOOL sub_19099697C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  sub_1908B53B8(*a1, v3);
  sub_1908B53B8(v4, v5);
  sub_1909960E8(v2, v3);
  v7 = v6;
  sub_1908B53FC(v2, v3);
  sub_1908B53FC(v4, v5);
  return (v7 & 1) == 0;
}

uint64_t sub_190996A08(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  sub_1908B53B8(*a2, v5);
  sub_1908B53B8(v2, v3);
  sub_1909960E8(v4, v5);
  v7 = v6;
  sub_1908B53FC(v4, v5);
  sub_1908B53FC(v2, v3);
  return v7 & 1;
}

uint64_t sub_190996A90()
{
  return sub_190A45FDC();
}

void sub_190996A98(uint64_t *a1)
{
  sub_19099700C(*a1, a1[1]);
}

double sub_190996AAC@<D0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  double result;

  result = *a1;
  *a2 = *(_QWORD *)a1;
  return result;
}

uint64_t sub_190996AB8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *(_BYTE *)a2 = *(_BYTE *)result;
  *(_QWORD *)(a2 + 8) = v2;
  return result;
}

void sub_190996ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_190996B2C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x190996D10);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

void sub_190996D34(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_190996D90()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = v3;
  v9 = v4;
  v10 = BYTE2(v4);
  v11 = BYTE3(v4);
  v12 = BYTE4(v4);
  v13 = BYTE5(v4);
  sub_190996ACC((uint64_t)&v8, (uint64_t)&v8 + BYTE6(v4), v1, v0);
  sub_1908B53FC(v1, v0);
  if (!v2)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_190996F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_190A45E8C();
  v11 = result;
  if (result)
  {
    result = sub_190A45EA4();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_190A45E98();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_190996ACC(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_19099700C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_190997050()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_190997084 + *((int *)qword_190997138 + (v0 >> 62))))();
}

BOOL sub_190997094@<W0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _BOOL8 result;

  result = 0;
  if (a1 == BYTE6(v1))
  {
    if (a1 < 1)
      return 1;
    sub_1908B53B8(v2, v1);
    sub_190996D34(v4, v3);
    if ((v5 & 1) != 0)
      return 1;
  }
  return result;
}

unint64_t sub_190997148()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EDFE0;
  if (!qword_1EE1EDFE0)
  {
    v1 = sub_190A4600C();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CB02D0], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EDFE0);
  }
  return result;
}

uint64_t sub_190997190(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_1909971D0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD *v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B748);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909972F4();
  sub_190A48838();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_19091BF34();
    sub_190A48580();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = v9;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1909972F4()
{
  unint64_t result;

  result = qword_1ECF6B5C0;
  if (!qword_1ECF6B5C0)
  {
    result = MEMORY[0x19401429C](&unk_190A557C4, &type metadata for ComparableData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B5C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ComparableData.CodingKeys()
{
  return &type metadata for ComparableData.CodingKeys;
}

uint64_t *initializeBufferWithCopyOfBuffer for ControlPushInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_1908B53B8(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for ControlPushInfo(uint64_t a1)
{
  return sub_1908B53FC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *assignWithCopy for ControlPushInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_1908B53B8(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1908B53FC(v5, v6);
  return a1;
}

uint64_t *assignWithTake for ControlPushInfo(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1908B53FC(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlPushInfo(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ControlPushInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComparableData()
{
  return &type metadata for ComparableData;
}

unint64_t sub_1909974C8()
{
  unint64_t result;

  result = qword_1EE1EDFE8;
  if (!qword_1EE1EDFE8)
  {
    result = MEMORY[0x19401429C](&unk_190A556DC, &type metadata for ComparableData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDFE8);
  }
  return result;
}

unint64_t sub_190997510()
{
  unint64_t result;

  result = qword_1ECF6BF90;
  if (!qword_1ECF6BF90)
  {
    result = MEMORY[0x19401429C](&unk_190A5579C, &type metadata for CodableBool);
    atomic_store(result, (unint64_t *)&qword_1ECF6BF90);
  }
  return result;
}

unint64_t sub_190997558()
{
  unint64_t result;

  result = qword_1ECF6B5D0;
  if (!qword_1ECF6B5D0)
  {
    result = MEMORY[0x19401429C](&unk_190A5564C, &type metadata for ComparableData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B5D0);
  }
  return result;
}

unint64_t sub_1909975A0()
{
  unint64_t result;

  result = qword_1ECF6B5C8;
  if (!qword_1ECF6B5C8)
  {
    result = MEMORY[0x19401429C](&unk_190A55674, &type metadata for ComparableData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B5C8);
  }
  return result;
}

unint64_t sub_1909975E4()
{
  unint64_t result;

  result = qword_1ECF6B570;
  if (!qword_1ECF6B570)
  {
    result = MEMORY[0x19401429C](&unk_190A55900, &type metadata for CodableBool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B570);
  }
  return result;
}

uint64_t _s9WidgetKit14ComparableDataV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_190997668 + 4 * byte_190A5552C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_190997688 + 4 * byte_190A55531[v4]))();
}

_BYTE *sub_190997668(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_190997688(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190997690(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190997698(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1909976A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1909976A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CodableBool.CodingKeys()
{
  return &type metadata for CodableBool.CodingKeys;
}

uint64_t getEnumTagSinglePayload for CodableBool(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CodableBool(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1909977B0 + 4 * byte_190A5553B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1909977E4 + 4 * byte_190A55536[v4]))();
}

uint64_t sub_1909977E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909977EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909977F4);
  return result;
}

uint64_t sub_190997800(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190997808);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_19099780C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190997814(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CodableBool()
{
  return &type metadata for CodableBool;
}

unint64_t sub_190997834()
{
  unint64_t result;

  result = qword_1EE1EDFF0;
  if (!qword_1EE1EDFF0)
  {
    result = MEMORY[0x19401429C](&unk_190A558D8, &type metadata for CodableBool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EDFF0);
  }
  return result;
}

unint64_t sub_19099787C()
{
  unint64_t result;

  result = qword_1ECF6B580;
  if (!qword_1ECF6B580)
  {
    result = MEMORY[0x19401429C](&unk_190A55848, &type metadata for CodableBool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B580);
  }
  return result;
}

unint64_t sub_1909978C4()
{
  unint64_t result;

  result = qword_1ECF6B578;
  if (!qword_1ECF6B578)
  {
    result = MEMORY[0x19401429C](&unk_190A55870, &type metadata for CodableBool.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B578);
  }
  return result;
}

_BYTE *sub_19099790C@<X0>(_BYTE *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1909962CC(a1, a2);
}

double sub_190997920@<D0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_190996AAC(a1, a2);
}

uint64_t sub_190997938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_190996AB8(a1, a2);
}

ValueMetadata *type metadata accessor for ControlViewSource()
{
  return &type metadata for ControlViewSource;
}

uint64_t destroy for ControlViewSource.ProviderType(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  if (v1 == 1)
    return swift_release();
  else
    return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t initializeWithCopy for ControlViewSource.ProviderType(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  uint64_t v4;
  char v5;
  __int128 v6;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    swift_retain();
    v5 = 1;
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t))(v6 - 8))(a1);
    v5 = 0;
  }
  *(_BYTE *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for ControlViewSource.ProviderType(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
      swift_release();
    else
      __swift_destroy_boxed_opaque_existential_1(a1);
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v6;
      *(_BYTE *)(a1 + 40) = 1;
      swift_retain();
    }
    else
    {
      v7 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t assignWithTake for ControlViewSource.ProviderType(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
      swift_release();
    else
      __swift_destroy_boxed_opaque_existential_1(a1);
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      LOBYTE(v5) = 0;
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    }
    *(_BYTE *)(a1 + 40) = v5;
  }
  return a1;
}

ValueMetadata *type metadata accessor for ControlViewSource.ProviderType()
{
  return &type metadata for ControlViewSource.ProviderType;
}

uint64_t sub_190997B5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  sub_190A48298();
  sub_190A47B3C();
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  sub_190A47F74();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  v4 = objc_msgSend(v3, sel_description);
  sub_190A47ADC();

  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  sub_190997D4C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_190997D4C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[5];
  __int128 v4[2];
  char v5;

  sub_1908CD8F8(v0, (uint64_t)v4);
  if ((v5 & 1) != 0)
  {
    swift_release();
    return 4804673;
  }
  else
  {
    sub_1908B4BBC(v4, (uint64_t)v3);
    __swift_project_boxed_opaque_existential_1(v3, v3[3]);
    swift_getDynamicType();
    sub_190A48880();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    v1 = 675893331;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  return v1;
}

uint64_t sub_190997E00()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_190997E2C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_190997E60(uint64_t a1)
{
  unint64_t result;

  result = sub_190997E84();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_190997E84()
{
  unint64_t result;

  result = qword_1EE1EB6A0;
  if (!qword_1EE1EB6A0)
  {
    result = MEMORY[0x19401429C](&unk_190A55980, &type metadata for ControlViewSource);
    atomic_store(result, (unint64_t *)&qword_1EE1EB6A0);
  }
  return result;
}

uint64_t sub_190997ECC(_QWORD *a1, _QWORD *a2)
{
  char v5;
  uint64_t v6;
  char v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  _QWORD v14[12];
  _BYTE v15[32];
  uint64_t v16;
  _BYTE v17[32];
  uint64_t v18;
  _BYTE v19[32];
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;

  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_19094F7F4((uint64_t)a1, (uint64_t)v24);
    sub_19094F7F4((uint64_t)a2, (uint64_t)v21);
  }
  else
  {
    v5 = sub_190A486DC();
    sub_19094F7F4((uint64_t)a1, (uint64_t)v24);
    sub_19094F7F4((uint64_t)a2, (uint64_t)v21);
    if ((v5 & 1) == 0)
    {
      sub_1908CD934((uint64_t)v21);
      sub_1908CD934((uint64_t)v24);
LABEL_17:
      sub_19094F7F4((uint64_t)a1, (uint64_t)v19);
      sub_19094F7F4((uint64_t)a2, (uint64_t)v17);
LABEL_18:
      sub_1908CD934((uint64_t)v17);
      sub_1908CD934((uint64_t)v19);
      sub_19094F7F4((uint64_t)a1, (uint64_t)v15);
      sub_19094F7F4((uint64_t)a2, (uint64_t)v14);
      goto LABEL_19;
    }
  }
  v6 = v23;
  if (!v26)
  {
    swift_bridgeObjectRetain();
    sub_1908CD934((uint64_t)v21);
    sub_1908CD934((uint64_t)v24);
    if (!v6)
      goto LABEL_14;
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (!v23)
  {
    swift_bridgeObjectRetain();
    sub_1908CD934((uint64_t)v21);
    sub_1908CD934((uint64_t)v24);
    goto LABEL_16;
  }
  if (v25 == v22 && v26 == v23)
  {
    swift_bridgeObjectRetain();
    sub_1908CD934((uint64_t)v21);
    sub_1908CD934((uint64_t)v24);
    swift_bridgeObjectRelease();
LABEL_14:
    sub_19094F7F4((uint64_t)a1, (uint64_t)v19);
    sub_19094F7F4((uint64_t)a2, (uint64_t)v17);
    goto LABEL_22;
  }
  v9 = sub_190A486DC();
  swift_bridgeObjectRetain();
  sub_1908CD934((uint64_t)v21);
  sub_1908CD934((uint64_t)v24);
  swift_bridgeObjectRelease();
  sub_19094F7F4((uint64_t)a1, (uint64_t)v19);
  sub_19094F7F4((uint64_t)a2, (uint64_t)v17);
  if ((v9 & 1) == 0)
    goto LABEL_18;
LABEL_22:
  v10 = (*(uint64_t (**)(void))(v20 + 8))();
  v11 = (*(uint64_t (**)(void))(v18 + 8))();
  sub_1908CD934((uint64_t)v17);
  sub_1908CD934((uint64_t)v19);
  sub_19094F7F4((uint64_t)a1, (uint64_t)v15);
  sub_19094F7F4((uint64_t)a2, (uint64_t)v14);
  if (v10 == v11)
  {
    sub_19092E5B8();
    v12 = (void *)(*(uint64_t (**)(void))(v16 + 16))();
    v13 = (void *)(*(uint64_t (**)(void))(v14[5] + 16))();
    v7 = sub_190A480F4();

    goto LABEL_20;
  }
LABEL_19:
  v7 = 0;
LABEL_20:
  sub_1908CD934((uint64_t)v14);
  sub_1908CD934((uint64_t)v15);
  return v7 & 1;
}

uint64_t EnvironmentValues._developmentMode.getter()
{
  unsigned __int8 v1;

  sub_190901960();
  sub_190A46C3C();
  return v1;
}

uint64_t EnvironmentValues._developmentMode.setter()
{
  sub_190901960();
  return sub_190A46C48();
}

uint64_t sub_1909981E0()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D600 = result;
  return result;
}

uint64_t sub_190998204()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B290);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D5E8 = v0;
  unk_1ECF6D5F0 = 0xD000000000000010;
  qword_1ECF6D5F8 = 0x8000000190A60E70;
  return result;
}

uint64_t sub_190998278()
{
  if (qword_1ECF6B1D0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1909982B8()
{
  uint64_t v0;

  if (qword_1ECF6B358 != -1)
    swift_once();
  v0 = qword_1ECF6D5E8;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t (*EnvironmentValues._developmentMode.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_190901960();
  sub_190A46C3C();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_19099838C;
}

uint64_t sub_19099838C(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_190A46C48();
}

ValueMetadata *_s29DevelopmentModeEnvironmentKeyVMa()
{
  return &_s29DevelopmentModeEnvironmentKeyVN;
}

ValueMetadata *type metadata accessor for DevelopmentModeKey()
{
  return &type metadata for DevelopmentModeKey;
}

uint64_t dispatch thunk of WidgetExtensionSessionAssertionInvalidatable.invalidate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of WidgetExtensionSessionSuspensionObserving.invalidate(_:onSuspendOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t initializeBufferWithCopyOfBuffer for WidgetIdiomModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned __int8 v4;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  sub_1909701C8(*a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for WidgetIdiomModifier(uint64_t a1)
{
  return sub_1909701CC(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t *assignWithCopy for WidgetIdiomModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  sub_1909701C8(*a2, v4);
  v5 = *a1;
  v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((_BYTE *)a1 + 8) = v4;
  sub_1909701CC(v5, v6);
  return a1;
}

uint64_t *assignWithTake for WidgetIdiomModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((_BYTE *)a1 + 8) = v4;
  sub_1909701CC(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for WidgetIdiomModifier()
{
  return &type metadata for WidgetIdiomModifier;
}

uint64_t sub_1909984F0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_190998500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[16];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B270);
  MEMORY[0x1E0C80A78](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B248);
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B278);
  MEMORY[0x1E0C80A78](v3);
  v4 = *(_QWORD *)v0;
  v5 = *(unsigned __int8 *)(v0 + 8);
  sub_1909701C8(v4, v5);
  sub_19096F250(v4, v5, v6);
  sub_1909701CC(v4, v5);
  __asm { BR              X10 }
}

uint64_t sub_19099862C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int IsAccessory;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;

  IsAccessory = CHSWidgetFamilyIsAccessory();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B268);
  v9 = sub_1909987E8();
  if (IsAccessory)
  {
    sub_190A4756C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v3, v5, v2);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)(v6 - 96) = v8;
    *(_QWORD *)(v6 - 88) = v9;
    swift_getOpaqueTypeConformance2();
    *(_QWORD *)(v6 - 96) = v8;
    *(_QWORD *)(v6 - 88) = v9;
    swift_getOpaqueTypeConformance2();
    sub_190A46F90();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v5, v2);
  }
  else
  {
    sub_190A4750C();
    v11 = *(_QWORD *)(v6 - 120);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v3, v4, v0);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)(v6 - 96) = v8;
    *(_QWORD *)(v6 - 88) = v9;
    swift_getOpaqueTypeConformance2();
    *(_QWORD *)(v6 - 96) = v8;
    *(_QWORD *)(v6 - 88) = v9;
    swift_getOpaqueTypeConformance2();
    sub_190A46F90();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v4, v0);
  }
}

void sub_1909987D0()
{
  sub_190A486D0();
  __break(1u);
}

unint64_t sub_1909987E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECF6B260;
  if (!qword_1ECF6B260)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6B268);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDBF10], v1);
    atomic_store(result, (unint64_t *)&qword_1ECF6B260);
  }
  return result;
}

unint64_t sub_190998838()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1ECF6B250;
  if (!qword_1ECF6B250)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6B258);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6B268);
    v2[3] = sub_1909987E8();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6B250);
  }
  return result;
}

uint64_t EnvironmentValues.activityFamily.getter()
{
  sub_190998924();
  return sub_190A46C3C();
}

unint64_t sub_190998924()
{
  unint64_t result;

  result = qword_1EE1EB4C0;
  if (!qword_1EE1EB4C0)
  {
    result = MEMORY[0x19401429C](&unk_190A55DE0, &type metadata for ActivityFamilyEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_1EE1EB4C0);
  }
  return result;
}

uint64_t sub_190998968@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_190998924();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_1909989B4()
{
  sub_190998924();
  return sub_190A46C48();
}

uint64_t EnvironmentValues.activityFamily.setter()
{
  sub_190998924();
  return sub_190A46C48();
}

void static ActivityFamily.defaultFamily.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

WidgetKit::ActivityFamily_optional __swiftcall ActivityFamily.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (WidgetKit::ActivityFamily_optional)rawValue;
}

uint64_t ActivityFamily.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ActivityFamily.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D756964656DLL;
  else
    return 0x6C6C616D73;
}

uint64_t sub_190998A9C()
{
  sub_19099943C();
  return sub_190A47C38();
}

uint64_t sub_190998AF8()
{
  sub_19099943C();
  return sub_190A47C20();
}

uint64_t sub_190998B44()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D756964656DLL;
  else
    return 0x6C6C616D73;
}

uint64_t ActivityFamily.filePath.getter()
{
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  return 980246886;
}

uint64_t sub_190998BF0()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D4F8 = result;
  return result;
}

uint64_t sub_190998C14()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AB08);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D4B8 = v0;
  strcpy(byte_1ECF6D4C0, "activityFamily");
  HIBYTE(qword_1ECF6D4C8) = -18;
  return result;
}

uint64_t sub_190998C90()
{
  if (qword_1ECF6AB10 != -1)
    swift_once();
  return swift_retain();
}

uint64_t *sub_190998CD0@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if (*result != 1 && v2)
    *a2 = 1;
  else
    *a2 = v2;
  return result;
}

uint64_t sub_190998CF4()
{
  uint64_t v0;

  if (qword_1ECF6AAC8 != -1)
    swift_once();
  v0 = qword_1ECF6D4B8;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t WidgetConfiguration.supplementalActivityFamilies(_:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = a1;
  swift_bridgeObjectRetain();
  sub_190A2B704((uint64_t)sub_190998E44, v2);
  return swift_release();
}

uint64_t sub_190998DE4()
{
  uint64_t v0;

  type metadata accessor for WidgetDescriptor(0);
  v0 = swift_bridgeObjectRetain();
  return sub_190961970(v0);
}

uint64_t sub_190998E20()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190998E44()
{
  return sub_190998DE4();
}

uint64_t (*EnvironmentValues.activityFamily.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = sub_190998924();
  sub_190A46C3C();
  return sub_190998EA4;
}

uint64_t sub_190998EA4(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_190A46C48();
}

uint64_t sub_190998ED8()
{
  sub_190999190();
  return sub_190A4681C();
}

uint64_t static SupportedActivityFamiliesEnvironmentKey.defaultValue.getter()
{
  return sub_190947F2C((uint64_t)&unk_1E2CC9588);
}

uint64_t sub_190998F34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_190947F2C((uint64_t)&unk_1E2CC95B0);
  *a1 = result;
  return result;
}

uint64_t sub_190998F60()
{
  sub_1909993F0();
  return sub_190A4681C();
}

uint64_t EnvironmentValues.supportedActivityFamilies.getter()
{
  uint64_t v1;

  sub_190999148();
  sub_190A46C3C();
  return v1;
}

uint64_t sub_190998FE8()
{
  sub_190999148();
  swift_bridgeObjectRetain();
  return sub_190A46C48();
}

uint64_t EnvironmentValues.supportedActivityFamilies.setter()
{
  sub_190999148();
  return sub_190A46C48();
}

uint64_t (*EnvironmentValues.supportedActivityFamilies.modify(uint64_t a1))(_QWORD *a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = sub_190999148();
  sub_190A46C3C();
  return sub_1909990C8;
}

uint64_t sub_1909990C8(_QWORD *a1, char a2)
{
  a1[1] = *a1;
  if ((a2 & 1) == 0)
    return sub_190A46C48();
  swift_bridgeObjectRetain();
  sub_190A46C48();
  return swift_bridgeObjectRelease();
}

unint64_t sub_190999148()
{
  unint64_t result;

  result = qword_1EE1EDFF8;
  if (!qword_1EE1EDFF8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for SupportedActivityFamiliesEnvironmentKey, &type metadata for SupportedActivityFamiliesEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_1EE1EDFF8);
  }
  return result;
}

unint64_t sub_190999190()
{
  unint64_t result;

  result = qword_1EE1E6990;
  if (!qword_1EE1E6990)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ActivityFamily, &type metadata for ActivityFamily);
    atomic_store(result, (unint64_t *)&qword_1EE1E6990);
  }
  return result;
}

uint64_t sub_1909991D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_190998924();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_190999220()
{
  sub_190998924();
  return sub_190A46C48();
}

uint64_t sub_190999268@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_190999148();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t storeEnumTagSinglePayload for ActivityFamily(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190999304 + 4 * byte_190A55BF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190999338 + 4 * byte_190A55BF0[v4]))();
}

uint64_t sub_190999338(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190999340(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190999348);
  return result;
}

uint64_t sub_190999354(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19099935CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190999360(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190999368(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityFamily()
{
  return &type metadata for ActivityFamily;
}

ValueMetadata *type metadata accessor for SupportedActivityFamiliesEnvironmentKey()
{
  return &type metadata for SupportedActivityFamiliesEnvironmentKey;
}

uint64_t sub_190999394()
{
  sub_19090D084();
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for ActivityFamilyEnvironmentKey()
{
  return &type metadata for ActivityFamilyEnvironmentKey;
}

unint64_t sub_1909993F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EE000;
  if (!qword_1EE1EE000)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EE008);
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEB3C8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EE000);
  }
  return result;
}

unint64_t sub_19099943C()
{
  unint64_t result;

  result = qword_1EE1EAB28;
  if (!qword_1EE1EAB28)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ActivityFamily, &type metadata for ActivityFamily);
    atomic_store(result, (unint64_t *)&qword_1EE1EAB28);
  }
  return result;
}

uint64_t static WidgetArchiver.archive(_:to:delegate:)(_QWORD *a1, void *a2, void *a3)
{
  uint64_t v3;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  sub_1908BBDC8((uint64_t)a1, (uint64_t)v12);
  if (a3)
  {
    v7 = a3;
  }
  else
  {
    v8 = v13;
    v9 = v14;
    v10 = __swift_project_boxed_opaque_existential_1(v12, v13);
    v7 = sub_1909A0564((uint64_t)v10, v8, v9);
  }
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  sub_190999714(a1, (uint64_t)v7, v3, a2);
  return swift_release();
}

id sub_190999530(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6C5E0);
    v4 = (void *)sub_190A47A1C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t sub_1909995B4()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v1 = objc_msgSend(v0, sel_infoDictionary);
  if (!v1)
  {
    v8 = 0u;
    v9 = 0u;
    goto LABEL_11;
  }
  v2 = v1;
  v3 = sub_190A47A28();

  if (!*(_QWORD *)(v3 + 16) || (v4 = sub_1908D2C98(0x656C646E75424643, 0xEF6E6F6973726556), (v5 & 1) == 0))
  {
    v8 = 0u;
    v9 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_1908B3694(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v9 + 1))
  {
LABEL_11:
    sub_1908AA544((uint64_t)&v8, (uint64_t *)&unk_1ECF6C8A0);
    return 0;
  }
  if (swift_dynamicCast())
    return v7;
  else
    return 0;
}

uint64_t sub_1909996D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for WidgetDescriptor(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

void sub_190999714(_QWORD *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t KeyPath;
  os_unfair_lock_s *v14;
  unint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[6];
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD aBlock[6];

  v22 = a3;
  v21 = sub_190A4651C();
  v20[5] = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BBD0);
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_190A46F54();
  MEMORY[0x1E0C80A78](v8);
  v10 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v9 + 8) + 32))(aBlock, v10);
  v11 = aBlock[0];
  v12 = (void *)aBlock[1];
  KeyPath = swift_getKeyPath();
  v14 = *(os_unfair_lock_s **)(v11 + 16);
  swift_retain();
  os_unfair_lock_lock(v14);
  v15 = sub_1908B7A4C(KeyPath);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));

  swift_release();
  swift_release_n();
  if (v15)
  {
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      v18 = sub_190A48484();
      swift_bridgeObjectRelease();
      if (v18)
      {
LABEL_4:
        if ((v15 & 0xC000000000000001) != 0)
        {
          v16 = (id)MEMORY[0x194013510](0, v15);
        }
        else
        {
          if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            JUMPOUT(0x19099A374);
          }
          v16 = *(id *)(v15 + 32);
        }
        v17 = v16;
        swift_bridgeObjectRelease();
        objc_msgSend(v17, sel_size);

        type metadata accessor for WGAutoreleasePool();
        *(_QWORD *)(swift_initStackObject() + 16) = 0;
        _widgetkit_objc_autoreleasePoolPush();
      }
    }
    else if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
  }
  sub_1909A14F0();
  swift_allocError();
  *(_OWORD *)v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(_BYTE *)(v19 + 32) = 3;
  swift_willThrow();

}

uint64_t sub_19099A398(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t KeyPath;
  os_unfair_lock_s *v14;
  unint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[11];
  _QWORD aBlock[6];

  v21[5] = a4;
  v21[6] = a3;
  v21[10] = a2;
  v5 = sub_190A4651C();
  v21[3] = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v21[9] = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BBD0);
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_190A46F54();
  MEMORY[0x1E0C80A78](v8);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v10 + 8) + 32))(aBlock, v9);
  v11 = aBlock[0];
  v12 = (void *)aBlock[1];
  KeyPath = swift_getKeyPath();
  v14 = *(os_unfair_lock_s **)(v11 + 16);
  swift_retain();
  os_unfair_lock_lock(v14);
  v15 = sub_1908B7A4C(KeyPath);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));

  swift_release();
  swift_release_n();
  if (v15)
  {
    v21[2] = v5;
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      v18 = sub_190A48484();
      swift_bridgeObjectRelease();
      if (v18)
      {
LABEL_4:
        if ((v15 & 0xC000000000000001) != 0)
        {
          v16 = (id)MEMORY[0x194013510](0, v15);
        }
        else
        {
          if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            JUMPOUT(0x19099B06CLL);
          }
          v16 = *(id *)(v15 + 32);
        }
        v17 = v16;
        swift_bridgeObjectRelease();
        objc_msgSend(v17, sel_size);

        type metadata accessor for WGAutoreleasePool();
        *(_QWORD *)(swift_initStackObject() + 16) = 0;
        _widgetkit_objc_autoreleasePoolPush();
      }
    }
    else if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
  }
  sub_1909A14F0();
  swift_allocError();
  *(_OWORD *)v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(_BYTE *)(v19 + 32) = 3;
  return swift_willThrow();
}

uint64_t sub_19099B090@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t KeyPath;
  os_unfair_lock_s *v13;
  unint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[15];
  _QWORD aBlock[6];

  v20[10] = a2;
  v20[7] = a3;
  v4 = sub_190A4651C();
  v20[9] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v20[14] = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BBD0);
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_190A46F54();
  MEMORY[0x1E0C80A78](v7);
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v9 + 8) + 32))(aBlock, v8);
  v10 = aBlock[0];
  v11 = (void *)aBlock[1];
  KeyPath = swift_getKeyPath();
  v13 = *(os_unfair_lock_s **)(v10 + 16);
  swift_retain();
  os_unfair_lock_lock(v13);
  v14 = sub_1908B7A4C(KeyPath);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));

  swift_release();
  swift_release_n();
  if (v14)
  {
    v20[8] = v4;
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      v17 = sub_190A48484();
      swift_bridgeObjectRelease();
      if (v17)
      {
LABEL_4:
        if ((v14 & 0xC000000000000001) != 0)
        {
          v15 = (id)MEMORY[0x194013510](0, v14);
        }
        else
        {
          if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            JUMPOUT(0x19099BD68);
          }
          v15 = *(id *)(v14 + 32);
        }
        v16 = v15;
        swift_bridgeObjectRelease();
        objc_msgSend(v16, sel_size);

        type metadata accessor for WGAutoreleasePool();
        *(_QWORD *)(swift_initStackObject() + 16) = 0;
        _widgetkit_objc_autoreleasePoolPush();
      }
    }
    else if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
  }
  sub_1909A14F0();
  swift_allocError();
  *(_OWORD *)v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(_BYTE *)(v18 + 32) = 3;
  return swift_willThrow();
}

uint64_t static WidgetArchiver.archive(_:to:delegate:)(_QWORD *a1, uint64_t a2, void *a3)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD v12[5];
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  sub_1908BBDC8((uint64_t)a1, (uint64_t)v13);
  if (a3)
  {
    v6 = a3;
  }
  else
  {
    v7 = v14;
    v8 = v15;
    v9 = __swift_project_boxed_opaque_existential_1(v13, v14);
    v6 = sub_1909A0564((uint64_t)v9, v7, v8);
  }
  swift_retain();
  v10 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  MEMORY[0x1E0C80A78](v10);
  v12[2] = a2;
  sub_19099A398(a1, (uint64_t)v6, (uint64_t)sub_1909A0858, (uint64_t)v12);
  return swift_release();
}

uint64_t static WidgetArchiver.archive(_:delegate:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  sub_1908BBDC8((uint64_t)a1, (uint64_t)v11);
  if (!a2)
  {
    v6 = v12;
    v7 = v13;
    v8 = __swift_project_boxed_opaque_existential_1(v11, v12);
    sub_1909A0564((uint64_t)v8, v6, v7);
  }
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  sub_19099B090(a1, v2, (uint64_t)&v10);
  result = swift_release();
  if (!v3)
    return v10;
  return result;
}

uint64_t WidgetArchiver.ArchivingDelegate.__allocating_init(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  v9 = sub_1909A0134((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v9;
}

void WidgetArchiver.ArchivingError.errorDescription.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_19099C014()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    sub_1908B8C6C(0, v1, 0);
    v2 = v0 + 32;
    do
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6C10);
      v3 = sub_190A47B00();
      v5 = v4;
      v7 = *(_QWORD *)(v10 + 16);
      v6 = *(_QWORD *)(v10 + 24);
      if (v7 >= v6 >> 1)
        sub_1908B8C6C(v6 > 1, v7 + 1, 1);
      *(_QWORD *)(v10 + 16) = v7 + 1;
      v8 = v10 + 16 * v7;
      *(_QWORD *)(v8 + 32) = v3;
      *(_QWORD *)(v8 + 40) = v5;
      v2 += 8;
      --v1;
    }
    while (v1);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
  sub_19090B004();
  sub_190A47A58();
  swift_bridgeObjectRelease();
  sub_190A48298();
  sub_190A47B3C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_19099C2B4()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  sub_190A487C0();
  sub_190A487CC();
  v2 = v1;
  sub_190A48100();

  return sub_190A48808();
}

void sub_19099C318()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  sub_190A487CC();
  v2 = v1;
  sub_190A48100();

}

uint64_t sub_19099C370()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  sub_190A487C0();
  sub_190A487CC();
  v2 = v1;
  sub_190A48100();

  return sub_190A48808();
}

uint64_t sub_19099C3D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2)
    return 0;
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6C5E0);
  return sub_190A480F4() & 1;
}

uint64_t WidgetArchiver.ArchivingDelegate.SelectableRegionKey.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_190A46084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

id WidgetArchiver.ArchivingDelegate.SelectableRegionKey.environment.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  id v5;

  v3 = (_QWORD *)(v1
                + *(int *)(type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0) + 20));
  v5 = (id)v3[1];
  *a1 = *v3;
  a1[1] = v5;
  swift_retain();
  return v5;
}

__n128 WidgetArchiver.ArchivingDelegate.SelectableRegionKey.init(date:environment:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  __n128 result;
  __n128 v9;

  v6 = sub_190A46084();
  v9 = *a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  result = v9;
  *(__n128 *)(a3 + *(int *)(v7 + 20)) = v9;
  return result;
}

uint64_t WidgetArchiver.ArchivingDelegate.SelectableRegionKey.hash(into:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  os_unfair_lock_s *v4;
  id v5;

  sub_190A46084();
  sub_1908AA2F4(&qword_1EE1EC910, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_190A47A4C();
  v1 = (_QWORD *)(v0
                + *(int *)(type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0) + 20));
  v2 = *v1;
  v3 = (void *)v1[1];
  v4 = *(os_unfair_lock_s **)(*v1 + 16);
  swift_retain_n();
  v5 = v3;
  os_unfair_lock_lock(v4);
  WidgetEnvironment.Storage.hash.getter();
  sub_190A487CC();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));

  return swift_release_n();
}

uint64_t static WidgetArchiver.ArchivingDelegate.SelectableRegionKey.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  unint64_t *v8;
  void *v9;
  unint64_t v10;
  id v11;
  id v12;
  char v13;

  if ((sub_190A4606C() & 1) != 0)
  {
    v4 = *(int *)(type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0) + 20);
    v5 = a1 + v4;
    v6 = *(_QWORD *)(a1 + v4);
    v7 = *(void **)(v5 + 8);
    v8 = (unint64_t *)(a2 + v4);
    v10 = *v8;
    v9 = (void *)v8[1];
    swift_retain();
    v11 = v7;
    swift_retain();
    v12 = v9;
    v13 = sub_1909FD19C(v6, v10);

    swift_release();
    swift_release();
  }
  else
  {
    v13 = 0;
  }
  return v13 & 1;
}

uint64_t WidgetArchiver.ArchivingDelegate.SelectableRegionKey.hashValue.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  os_unfair_lock_s *v4;
  id v5;

  sub_190A487C0();
  sub_190A46084();
  sub_1908AA2F4(&qword_1EE1EC910, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_190A47A4C();
  v1 = (_QWORD *)(v0
                + *(int *)(type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0) + 20));
  v2 = *v1;
  v3 = (void *)v1[1];
  v4 = *(os_unfair_lock_s **)(*v1 + 16);
  swift_retain_n();
  v5 = v3;
  os_unfair_lock_lock(v4);
  WidgetEnvironment.Storage.hash.getter();
  sub_190A487CC();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));

  swift_release_n();
  return sub_190A48808();
}

uint64_t sub_19099C778(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  os_unfair_lock_s *v7;
  id v8;

  sub_190A46084();
  sub_1908AA2F4(&qword_1EE1EC910, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_190A47A4C();
  v4 = (_QWORD *)(v2 + *(int *)(a2 + 20));
  v5 = *v4;
  v6 = (void *)v4[1];
  v7 = *(os_unfair_lock_s **)(*v4 + 16);
  swift_retain_n();
  v8 = v6;
  os_unfair_lock_lock(v7);
  WidgetEnvironment.Storage.hash.getter();
  sub_190A487CC();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));

  return swift_release_n();
}

uint64_t sub_19099C82C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  os_unfair_lock_s *v7;
  id v8;

  sub_190A487C0();
  sub_190A46084();
  sub_1908AA2F4(&qword_1EE1EC910, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_190A47A4C();
  v4 = (_QWORD *)(v2 + *(int *)(a2 + 20));
  v5 = *v4;
  v6 = (void *)v4[1];
  v7 = *(os_unfair_lock_s **)(*v4 + 16);
  swift_retain_n();
  v8 = v6;
  os_unfair_lock_lock(v7);
  WidgetEnvironment.Storage.hash.getter();
  sub_190A487CC();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));

  swift_release_n();
  return sub_190A48808();
}

uint64_t sub_19099C8F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  void *v8;
  unint64_t *v9;
  void *v10;
  unint64_t v11;
  id v12;
  id v13;
  char v14;

  if ((sub_190A4606C() & 1) != 0)
  {
    v6 = *(int *)(a3 + 20);
    v7 = *(_QWORD *)(a1 + v6);
    v8 = *(void **)(a1 + v6 + 8);
    v9 = (unint64_t *)(a2 + v6);
    v11 = *v9;
    v10 = (void *)v9[1];
    swift_retain();
    v12 = v8;
    swift_retain();
    v13 = v10;
    v14 = sub_1909FD19C(v7, v11);

    swift_release();
    swift_release();
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t WidgetArchiver.ArchivingDelegate.SelectableRegion.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double WidgetArchiver.ArchivingDelegate.SelectableRegion.boundingRect.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t WidgetArchiver.ArchivingDelegate.SelectableRegion.accessibilityNode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_1908CE0B4(v1, *(_QWORD *)(v0 + 56));
  return v1;
}

uint64_t WidgetArchiver.ArchivingDelegate.bundleStub.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1908AF5D8(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_bundleStub, a1, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
}

double WidgetArchiver.ArchivingDelegate.systemVersion.getter@<D0>(double *a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_systemVersion);
  *a1 = result;
  return result;
}

uint64_t sub_19099CA5C()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_includeSelectableRegions);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_19099CAA0(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_includeSelectableRegions);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_19099CAE8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_19099CB2C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_computedSelectableRegions);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19099CB94()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_19099CBDC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_computedSelectableRegions);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_19099CC2C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_19099CC70@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_archiveVersion);
  result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_19099CCBC(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_archiveVersion);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t (*sub_19099CD0C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_19099CD50()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfBackgroundIsMissing);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_19099CD94(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfBackgroundIsMissing);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_19099CDDC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_19099CE20()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfAnyTypeFailedToEncode);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_19099CE64(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfAnyTypeFailedToEncode);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_19099CEAC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_19099CEF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;
  __int128 *v20;
  double v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_190A46C30();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_viewCollection;
  sub_1908AAA48(v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_viewCollection, (uint64_t)v40, &qword_1ECF6ACC0);
  v10 = v41;
  if (v41)
  {
    v11 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
    v13 = objc_msgSend(v12, sel_extensionIdentity);

    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
    v14 = sub_190A46300();
    v16 = v15;
    swift_endAccess();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    if (v14 == 0xD000000000000026 && v16 == 0x8000000190A5FB60)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v17 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
      return 0;
  }
  else
  {
    sub_1908AA544((uint64_t)v40, &qword_1ECF6ACC0);
  }
  v18 = v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_currentEnvironment;
  swift_beginAccess();
  sub_1908AAA48(v18, (uint64_t)v4, (uint64_t *)&unk_1ECF6C868);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    v19 = (uint64_t *)&unk_1ECF6C868;
    v20 = (__int128 *)v4;
LABEL_12:
    sub_1908AA544((uint64_t)v20, v19);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  sub_1908AAA48(v9, (uint64_t)&v38, &qword_1ECF6ACC0);
  if (!v39)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v19 = &qword_1ECF6ACC0;
    v20 = &v38;
    goto LABEL_12;
  }
  sub_1908B4BBC(&v38, (uint64_t)v40);
  v21 = sub_190904194();
  v23 = v22;
  v24 = v21;
  v26 = v25;
  v27 = v41;
  v28 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  v29 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
  v30 = objc_msgSend(v29, sel_family);

  v31 = v41;
  v32 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  v33 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v32 + 24))(v31, v32);
  sub_1908FF90C();
  sub_190A46C3C();
  v34 = (void *)v38;
  v35 = sub_190903E40((uint64_t)v30, v33, (void *)v38, v23, v26, v24);
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  return v35;
}

uint64_t sub_19099D2A8(uint64_t a1)
{
  uint64_t v1;
  _QWORD **v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v6;
  unint64_t v7;

  v3 = (_QWORD **)(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_unencodeableTypes);
  swift_beginAccess();
  v4 = *v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v3 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v4 = sub_1908F3360(0, v4[2] + 1, 1, v4);
    *v3 = v4;
  }
  v7 = v4[2];
  v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    v4 = sub_1908F3360((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
    *v3 = v4;
  }
  v4[2] = v7 + 1;
  v4[v7 + 4] = a1;
  return swift_endAccess();
}

void *sub_19099D37C(void *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)sub_1909A08B0(a1);
  v3 = v2;
  if (!v1)
    v4 = v2;
  return v3;
}

uint64_t sub_19099D3B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_unencodeableTypes);
  result = swift_beginAccess();
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 16))
  {
    v9 = *v2;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    swift_bridgeObjectRetain();
    WidgetArchiver.ArchivingError.errorDescription.getter();
    if (v6)
    {
      v9 = v5;
      v10 = v6;
      sub_19099D4B8(&v9);
      swift_bridgeObjectRelease();
    }
    v7 = (_BYTE *)(v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfAnyTypeFailedToEncode);
    swift_beginAccess();
    if ((*v7 & 1) != 0)
    {
      sub_1909A14F0();
      swift_allocError();
      *(_QWORD *)v8 = v4;
      *(_QWORD *)(v8 + 8) = 0;
      *(_QWORD *)(v8 + 16) = 0;
      *(_QWORD *)(v8 + 24) = 0;
      *(_BYTE *)(v8 + 32) = 0;
      return swift_willThrow();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_19099D4B8(uint64_t *a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *a1;
  v1 = a1[1];
  if (qword_1ECF6AE58 != -1)
    swift_once();
  v3 = sub_190A465A0();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ECF6D528);
  swift_bridgeObjectRetain_n();
  v4 = sub_190A46588();
  v5 = sub_190A47F50();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v8 = v7;
    *(_DWORD *)v6 = 136446210;
    swift_bridgeObjectRetain();
    sub_1908B35C4(v2, v1, &v8);
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1908A7000, v4, v5, "%{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v7, -1, -1);
    MEMORY[0x194014398](v6, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t WidgetArchiver.ArchivingDelegate.deinit()
{
  uint64_t v0;

  sub_1908B5150(v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_bundleStub, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1908AA544(v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_currentEnvironment, (uint64_t *)&unk_1ECF6C868);
  swift_bridgeObjectRelease();
  sub_1908AA544(v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_viewCollection, &qword_1ECF6ACC0);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_descriptorQuerying);
  swift_bridgeObjectRelease();
  sub_1908AA544(v0 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_defaultImageType, &qword_1ECF6BBD0);
  return v0;
}

uint64_t WidgetArchiver.ArchivingDelegate.__deallocating_deinit()
{
  WidgetArchiver.ArchivingDelegate.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_19099D748(uint64_t a1)
{
  return sub_19099D2A8(a1);
}

void *sub_19099D768(void *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)sub_1909A08B0(a1);
  v3 = v2;
  if (!v1)
    v4 = v2;
  return v3;
}

uint64_t sub_19099D7A4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(*v1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_descriptorQuerying);
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(a1, v4, v5);
}

id sub_19099D80C()
{
  void *v0;
  id result;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v0 = (void *)objc_opt_self();
  result = objc_msgSend(v0, sel_currentState);
  if ((_DWORD)result)
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v2 = sub_190A465A0();
    __swift_project_value_buffer(v2, (uint64_t)qword_1ECF6D988);
    v3 = sub_190A46588();
    v4 = sub_190A47F44();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1908A7000, v3, v4, "Flushing CATransaction because one was opened during archiving.", v5, 2u);
      MEMORY[0x194014398](v5, -1, -1);
    }

    return objc_msgSend(v0, sel_flush);
  }
  return result;
}

void sub_19099D914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[8];
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;

  v54 = a8;
  v58 = a7;
  v60 = a6;
  v52 = sub_190A47284();
  v49 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v39[1] = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_190A46084();
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v41 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  v11 = MEMORY[0x1E0C80A78](v40);
  v44 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v45 = (char *)v39 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC08);
  v15 = MEMORY[0x1E0C80A78](v14);
  v39[2] = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v39[5] = (char *)v39 - v18;
  MEMORY[0x1E0C80A78](v17);
  v56 = (char *)v39 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  v21 = MEMORY[0x1E0C80A78](v20);
  v39[6] = (char *)v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v39[7] = (char *)v39 - v24;
  MEMORY[0x1E0C80A78](v23);
  v53 = (char *)v39 - v25;
  v57 = type metadata accessor for WidgetViewMetadata();
  v48 = *(_QWORD *)(v57 - 8);
  v26 = MEMORY[0x1E0C80A78](v57);
  v47 = (char *)v39 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x1E0C80A78](v26);
  v46 = (char *)v39 - v29;
  MEMORY[0x1E0C80A78](v28);
  v55 = (char *)v39 - v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
  MEMORY[0x1E0C80A78](v31);
  v50 = sub_190A46EAC();
  v39[4] = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v32 = sub_190A46990();
  MEMORY[0x1E0C80A78](v32);
  v33 = sub_190A46C30();
  v61 = *(_QWORD *)(v33 - 8);
  v62 = v33;
  v34 = MEMORY[0x1E0C80A78](v33);
  v51 = (char *)v39 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v59 = (char *)v39 - v36;
  v37 = type metadata accessor for ViewableTimelineEntry();
  MEMORY[0x1E0C80A78](v37);
  v63 = (char *)v39 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  _widgetkit_objc_autoreleasePoolPop(*(void **)(a2 + 16));
  _widgetkit_objc_autoreleasePoolPush();
}

uint64_t sub_19099DD60(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  ValueMetadata *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t Kind;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(_QWORD *, unint64_t, uint64_t);
  _QWORD *v19;
  unint64_t v20;
  char v21;
  void *v22;
  id v23;
  uint64_t v24;
  void (*v25)(uint64_t, _QWORD *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  int v28;
  id v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  char v43;
  void **v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint8_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _DWORD *v104;
  id v105;
  void (*v106)(uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  char v110;
  double v111;
  double v112;
  char v113;
  double v114;
  double v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v123;

  *(_QWORD *)(v3 + 16) = a1;
  sub_19099D80C();
  v11 = v8;
  v12 = *(unint64_t **)(v8 + 16);
  if (!v12)
  {
    __break(1u);
    goto LABEL_67;
  }
  v13 = v2 / (uint64_t)v12;
  if (v2 / (uint64_t)v12 < 0)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  Kind = v9[1].Kind;
  if (v13 >= Kind)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  *(_QWORD *)(v10 - 408) = Kind;
  *(_QWORD *)(v10 - 312) = v2;
  sub_1908AF5D8((uint64_t)v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v13, *(_QWORD *)(v10 - 232), (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
  if (v2 % (uint64_t)v12 < 0)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  v16 = *(_QWORD *)(v10 - 248);
  v15 = *(_QWORD *)(v10 - 240);
  v17 = v11
      + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))
      + *(_QWORD *)(v16 + 72) * (v2 % (uint64_t)v12);
  v18 = *(void (**)(_QWORD *, unint64_t, uint64_t))(v16 + 16);
  v19 = *(_QWORD **)(v10 - 264);
  *(_QWORD *)(v10 - 360) = v18;
  v18(v19, v17, v15);
  v9 = &type metadata for FeatureFlags.Widgets;
  *(_QWORD *)(v10 - 136) = &type metadata for FeatureFlags.Widgets;
  v20 = sub_1909068BC();
  *(_QWORD *)(v10 - 128) = v20;
  *(_BYTE *)(v10 - 160) = 1;
  v21 = sub_190A462A0();
  __swift_destroy_boxed_opaque_existential_1(v10 - 160);
  v5 = *(_QWORD *)(v10 - 328);
  if ((v21 & 1) == 0)
    goto LABEL_9;
  if (qword_1ECF6C608 != -1)
    goto LABEL_73;
  while (1)
  {
    if (dyld_program_sdk_at_least())
    {
      sub_190A46984();
      sub_190A46AF8();
    }
LABEL_9:
    *(_QWORD *)(v10 - 416) = v12;
    sub_1908BE014();
    sub_190A46C3C();
    v22 = *(void **)(v10 - 160);
    v23 = objc_msgSend(v22, sel_dynamicTextSupport);

    if (v23 == (id)2)
    {
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v10 - 496) + 104))(v6, *MEMORY[0x1E0CDB358], *(_QWORD *)(v10 - 368));
      sub_190A46A08();
    }
    *(_QWORD *)(v10 - 368) = *(_QWORD *)(v10 + 24);
    *(_QWORD *)(v10 - 160) = *(_QWORD *)(*(_QWORD *)(v10 - 232) + *(int *)(v1 + 20));
    swift_retain();
    *(_QWORD *)(v10 - 160) = sub_190A47884();
    sub_190A46E58();
    v24 = *(_QWORD *)(v10 - 240);
    v25 = *(void (**)(uint64_t, _QWORD *, uint64_t))(v10 - 360);
    v25(*(_QWORD *)(v10 - 352), v19, v24);
    sub_190A46D50();
    v25(v7, v19, v24);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 248) + 56))(v7, 0, 1, v24);
    v26 = *(_QWORD *)(v10 - 288) + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_currentEnvironment;
    swift_beginAccess();
    sub_1909A2490(v7, v26);
    swift_endAccess();
    *(_QWORD *)(v10 - 136) = v9;
    *(_QWORD *)(v10 - 128) = v20;
    *(_BYTE *)(v10 - 160) = 0;
    LOBYTE(v26) = sub_190A462A0();
    __swift_destroy_boxed_opaque_existential_1(v10 - 160);
    v27 = *(_QWORD *)(v10 - 296);
    if ((v26 & 1) != 0)
    {
      if (qword_1ECF6C608 != -1)
        swift_once();
      v28 = dyld_program_sdk_at_least();
      v29 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
      v30 = (uint64_t)objc_msgSend(v29, sel_bundleIdentifier);

      if (v30)
      {
        sub_190A47ADC();

        v31 = sub_190A47B60();
        swift_bridgeObjectRelease();
        sub_1908BBDC8(v5, v10 - 160);
        if ((v31 & 1) != 0)
        {
          v32 = *(_QWORD *)(v10 - 136);
          v33 = *(_QWORD *)(v10 - 128);
          __swift_project_boxed_opaque_existential_1((_QWORD *)(v10 - 160), v32);
          v30 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v33 + 8) + 16))(v32);
          objc_msgSend((id)v30, sel_family);

          LOBYTE(v30) = CHSWidgetFamilyIsAccessory();
        }
        else
        {
          LOBYTE(v30) = 0;
        }
      }
      else
      {
        sub_1908BBDC8(v5, v10 - 160);
      }
      __swift_destroy_boxed_opaque_existential_1(v10 - 160);
      v35 = *(_QWORD *)(v5 + 24);
      v34 = *(_QWORD *)(v5 + 32);
      __swift_project_boxed_opaque_existential_1((_QWORD *)v5, v35);
      v36 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v34 + 8) + 16))(v35);
      v37 = *(_QWORD *)(v10 - 288);
      swift_retain();
      LOBYTE(v35) = sub_1909A02C4((uint64_t)v36, v37);
      swift_release();

      sub_1908BBDC8(v5, v10 - 224);
      v38 = 1;
      if ((v35 & 1) == 0 && (v30 & 1) == 0)
      {
        v39 = *(_QWORD *)(v10 - 200);
        v40 = *(_QWORD *)(v10 - 192);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v10 - 224), v39);
        v41 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v40 + 8) + 16))(v39);
        v42 = objc_msgSend(v41, sel_family);

        v38 = v42 == (id)12;
      }
      __swift_destroy_boxed_opaque_existential_1(v10 - 224);
      sub_1909A27F8();
      sub_190A46DBC();
      v43 = *(_BYTE *)(v10 - 176);
      sub_190901960();
      sub_190A46C3C();
      if (v28 && (v43 & 1) == 0 && !v38 && *(_BYTE *)(v10 - 176))
      {
        v44 = *(void ***)(v10 + 16);
        sub_1909A283C();
        *(_QWORD *)(v10 - 176) = sub_190A47884();
        sub_190A46E58();
        if (qword_1ECF6AE58 != -1)
          swift_once();
        v45 = sub_190A465A0();
        __swift_project_value_buffer(v45, (uint64_t)qword_1ECF6D528);
        v46 = sub_190A46588();
        v47 = sub_190A47F50();
        if (os_log_type_enabled(v46, v47))
        {
          v48 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v48 = 0;
          MEMORY[0x194014398](v48, -1, -1);
        }

        sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
        v49 = sub_190A47ADC();
        v51 = sub_19096BFDC(v49, v50, 1302, 0, 0xD000000000000021, 0x8000000190A629E0);
        v52 = *v44;
        *v44 = v51;

      }
    }
    sub_190A46C3C();
    v53 = *(void **)(v10 - 160);
    sub_190A469E4();
    objc_msgSend(v53, sel__effectiveSizePixelAlignedForDisplayScale_);

    v6 = *(_QWORD *)(v10 - 256);
    sub_190A46E34();
    v55 = *(_QWORD *)(v5 + 24);
    v54 = *(_QWORD *)(v5 + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)v5, v55);

    sub_190A46C3C();
    v56 = *(void **)(v10 - 160);
    objc_msgSend(v56, sel_safeAreaInsets);

    sub_190A46DB0();
    v57 = *(_QWORD *)(v10 - 400);
    v58 = v57 + *(int *)(v27 + 28);
    v59 = sub_190A45FC4();
    v60 = *(_QWORD *)(v59 - 8);
    *(_QWORD *)(v10 - 496) = v60;
    v61 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56);
    v61(v58, 1, 1, v59);
    v62 = v57 + *(int *)(v27 + 32);
    v63 = *(_QWORD *)(v10 - 376);
    v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56);
    v65 = *(_QWORD *)(v10 - 344);
    v64(v62, 1, 1, v65);
    *(_WORD *)v57 = 0;
    *(_BYTE *)(v57 + 2) = 0;
    sub_1908AA544(v58, (uint64_t *)&unk_1ECF6C858);
    *(_QWORD *)(v10 - 504) = v61;
    v61(v58, 1, 1, v59);
    sub_1908AA544(v62, &qword_1ECF6BC08);
    v64(v62, 1, 1, v65);
    v5 = *(_QWORD *)(v10 - 320);
    sub_1908BD0B4(v57, v5, (uint64_t (*)(_QWORD))type metadata accessor for WidgetViewMetadata);
    sub_1909667B0();
    v66 = *(_QWORD *)(v10 - 336);
    sub_190A46DBC();
    sub_190A471AC();
    sub_1908AA2F4(&qword_1ECF6A760, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDCC08], MEMORY[0x1E0CDCC00]);
    v67 = *(_QWORD *)(v10 - 304);
    sub_190A46DBC();
    v68 = v5;
    v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
    v9 = *(ValueMetadata **)(v10 - 296);
    v70 = v67;
    v12 = *(unint64_t **)(v10 - 368);
    *(_QWORD *)(v10 - 400) = v69;
    v71 = v69(v70, 1, v65);
    v7 = *(_QWORD *)(v10 - 288);
    v4 = *(_QWORD *)(v10 - 392);
    if (v71 != 1)
    {
      v72 = v5 + SLODWORD(v9[2].Kind);
      v73 = *(_QWORD *)(v10 - 304);
      sub_1909A27B4(v73, v72, &qword_1ECF6BC08);
      v6 = *(_QWORD *)(v10 - 480);
      sub_1908AAA48(v66, v6, (uint64_t *)&unk_1ECF6C858);
      v74 = v73;
      v75 = *(_QWORD *)(v10 - 488);
      sub_1908AAA48(v74, v75, &qword_1ECF6BC08);
      v76 = *(_QWORD *)(v10 - 496);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v6, 1, v59) == 1)
      {
        v77 = *(_QWORD *)(v10 - 512);
        sub_1908AAA48(v75, v77, &qword_1ECF6BC08);
        v78 = *(_QWORD *)(v10 - 344);
        v79 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 - 400))(v77, 1, v78);
        v80 = v75;
        v5 = *(_QWORD *)(v10 - 472);
        if (v79 == 1)
        {
          sub_1908AA544(v80, &qword_1ECF6BC08);
          sub_1908AA544(v66, (uint64_t *)&unk_1ECF6C858);
          sub_1908AA544(v77, &qword_1ECF6BC08);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 - 504))(v5, 1, 1, v59);
        }
        else
        {
          sub_190A471B8();
          v68 = *(_QWORD *)(v10 - 320);
          sub_1908AA544(v80, &qword_1ECF6BC08);
          sub_1908AA544(v66, (uint64_t *)&unk_1ECF6C858);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 376) + 8))(v77, v78);
        }
        sub_1908AA544(v6, (uint64_t *)&unk_1ECF6C858);
        v12 = *(unint64_t **)(v10 - 368);
        v9 = *(ValueMetadata **)(v10 - 296);
      }
      else
      {
        sub_1908AA544(v75, &qword_1ECF6BC08);
        sub_1908AA544(v66, (uint64_t *)&unk_1ECF6C858);
        v5 = *(_QWORD *)(v10 - 472);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 32))(v5, v6, v59);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 - 504))(v5, 0, 1, v59);
      }
      sub_1908B4BD4(v5, v66, (uint64_t *)&unk_1ECF6C858);
    }
    sub_1909A27B4(v66, v68 + SHIDWORD(v9[1].Description), (uint64_t *)&unk_1ECF6C858);
    sub_1908AF5D8(v68, v4, (uint64_t (*)(_QWORD))type metadata accessor for WidgetViewMetadata);
    v1 = *v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v12 = v1;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
LABEL_70:
      v1 = sub_1908F3474(0, *(_QWORD *)(v1 + 16) + 1, 1, v1);
      *v12 = v1;
    }
    v82 = *(_QWORD *)(v10 - 264);
    v84 = *(_QWORD *)(v1 + 16);
    v83 = *(_QWORD *)(v1 + 24);
    if (v84 >= v83 >> 1)
    {
      v1 = sub_1908F3474(v83 > 1, v84 + 1, 1, v1);
      *v12 = v1;
    }
    *(_QWORD *)(v1 + 16) = v84 + 1;
    sub_1908BD0B4(v4, v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v10 - 384) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v10 - 384) + 80))+ *(_QWORD *)(*(_QWORD *)(v10 - 384) + 72) * v84, (uint64_t (*)(_QWORD))type metadata accessor for WidgetViewMetadata);
    if (qword_1ECF6BB68 != -1)
      swift_once();
    v85 = sub_190A465A0();
    __swift_project_value_buffer(v85, (uint64_t)qword_1ECF6D820);
    v86 = sub_190A46588();
    v87 = sub_190A47F44();
    if (os_log_type_enabled(v86, v87))
    {
      v6 = 12;
      v88 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v88 = 134349056;
      *(_QWORD *)(v10 - 160) = *(_QWORD *)(v10 - 312);
      sub_190A48178();
      _os_log_impl(&dword_1908A7000, v86, v87, "Archiving entry %{public}ld", v88, 0xCu);
      MEMORY[0x194014398](v88, -1, -1);
    }

    v1 = v7 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_includeSelectableRegions;
    swift_beginAccess();
    if (*(_BYTE *)v1 == 1)
    {
      v89 = sub_190A46588();
      v90 = sub_190A47F44();
      if (os_log_type_enabled(v89, v90))
      {
        v91 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v91 = 0;
        _os_log_impl(&dword_1908A7000, v89, v90, "Asked to include selectable regions.", v91, 2u);
        MEMORY[0x194014398](v91, -1, -1);
      }

      *(_QWORD *)(v10 - 176) = MEMORY[0x1E0DEE9D8];
      v92 = sub_190A46588();
      v93 = sub_190A47F44();
      if (os_log_type_enabled(v92, v93))
      {
        v94 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v94 = 134217984;
        v7 = *(_QWORD *)(v10 - 288);
        *(_QWORD *)(v10 - 224) = *(_QWORD *)(v10 - 312);
        sub_190A48178();
        _os_log_impl(&dword_1908A7000, v92, v93, "%ld BEGIN", v94, 0xCu);
        MEMORY[0x194014398](v94, -1, -1);
      }

      MEMORY[0x1E0C80A78](v95);
      sub_190A46D44();
      v96 = sub_190A46588();
      v97 = sub_190A47F44();
      if (os_log_type_enabled(v96, v97))
      {
        v98 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v98 = 134217984;
        *(_QWORD *)(v10 - 224) = *(_QWORD *)(v10 - 312);
        sub_190A48178();
        _os_log_impl(&dword_1908A7000, v96, v97, "%ld END", v98, 0xCu);
        MEMORY[0x194014398](v98, -1, -1);
      }

      v99 = *(_QWORD *)(v10 - 448);
      v5 = *(_QWORD *)(v10 - 456);
      v100 = *(_QWORD *)(v10 - 440);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v99 + 16))(v5, *(_QWORD *)(v10 - 232), v100);
      v101 = *(_QWORD *)(v10 - 352);
      v102 = *(_QWORD *)(v10 - 240);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 - 360))(v101, v82, v102);
      type metadata accessor for UnfairLock();
      v103 = swift_allocObject();
      v104 = (_DWORD *)swift_slowAlloc();
      *v104 = 0;
      *(_QWORD *)(v103 + 16) = v104;
      v105 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WidgetEnvironment.Storage()), sel_init);
      *(_QWORD *)(v10 - 224) = v103;
      *(_QWORD *)(v10 - 216) = v105;
      WidgetEnvironment.apply(environmentValues:)();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 248) + 8))(v101, v102);
      v106 = *(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 32);
      *(_OWORD *)(v10 - 288) = *(_OWORD *)(v10 - 224);
      v107 = *(_QWORD *)(v10 - 424);
      v106(v107, v5, v100);
      *(_OWORD *)(v107 + *(int *)(*(_QWORD *)(v10 - 464) + 20)) = *(_OWORD *)(v10 - 288);
      v1 = (unint64_t)type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey;
      v6 = *(_QWORD *)(v10 - 432);
      sub_1908AF5D8(v107, v6, type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey);
      v108 = *(_QWORD *)(v10 - 176);
      v109 = (_QWORD *)(v7 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_computedSelectableRegions);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v110 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v10 - 184) = *v109;
      *v109 = 0x8000000000000000;
      sub_1908FC678(v108, v6, v110);
      *v109 = *(_QWORD *)(v10 - 184);
      swift_bridgeObjectRelease();
      sub_1908B5150(v6, type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey);
      swift_endAccess();
      sub_1908B5150(v107, type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey);
      swift_bridgeObjectRelease();
      v9 = *(ValueMetadata **)(v10 - 296);
    }
    if ((v111 = COERCE_DOUBLE(sub_19099CEF0()), (v113 & 1) != 0)
      || (v114 = v111, v115 = v112, v111 == 0.0) && v112 == 0.0
      || (v1 = *(_QWORD *)(v10 - 320) + SLODWORD(v9[2].Kind),
          v116 = *(_QWORD *)(v10 - 344),
          (*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 - 400))(v1, 1, v116)))
    {
      v20 = 0;
      v19 = *(_QWORD **)(v10 - 328);
    }
    else
    {
      v5 = *(_QWORD *)(v10 - 376);
      v123 = *(_QWORD *)(v10 - 520);
      (*(void (**)(void))(v5 + 16))();
      v20 = 0;
      sub_19099F6A4(v114, v115);
      v19 = *(_QWORD **)(v10 - 328);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v123, v116);
    }
    v117 = *(_QWORD *)(v10 - 408);
    v118 = *(_QWORD *)(v10 - 416);
    v119 = v117 * v118;
    if ((unsigned __int128)(v117 * (__int128)v118) >> 64 == (v117 * v118) >> 63)
      break;
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    swift_once();
  }
  v120 = *(_QWORD *)(v10 - 312);
  if (v120 < 0 || v119 <= v120)
    goto LABEL_72;
  if (v120 + 1 == v119)
  {
    v121 = *v12;
    swift_bridgeObjectRetain();
    sub_1909A24D8(v19, v7, v121);
    swift_bridgeObjectRelease();
    sub_190A46DA4();
  }
  sub_1908AA544(*(_QWORD *)(v10 - 336), (uint64_t *)&unk_1ECF6C858);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v10 - 248) + 8))(*(_QWORD *)(v10 - 264), *(_QWORD *)(v10 - 240));
  sub_1908B5150(*(_QWORD *)(v10 - 232), (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
  sub_1908AA544(*(_QWORD *)(v10 - 304), &qword_1ECF6BC08);
  return sub_1908B5150(*(_QWORD *)(v10 - 320), (uint64_t (*)(_QWORD))type metadata accessor for WidgetViewMetadata);
}

void sub_19099EFF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD **v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[6];

  v68 = a3;
  v66 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE020);
  MEMORY[0x1E0C80A78](v4);
  v67 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190A47020();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v63 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v63 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE028);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A46FFC();
  sub_190A48250();
  sub_1909A2880((uint64_t)v70);
  v19 = sub_190A472CC();
  v20 = swift_dynamicCast();
  v21 = *(_QWORD *)(v19 - 8);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  if ((v20 & 1) != 0)
  {
    v22(v18, 0, 1, v19);
    v64 = sub_190A472C0();
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v19);
    if (qword_1ECF6BB68 != -1)
      swift_once();
    v25 = sub_190A465A0();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ECF6D820);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v13, a1, v6);
    swift_bridgeObjectRetain_n();
    v26 = sub_190A46588();
    v27 = sub_190A47F44();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v65 = v24;
      v29 = v28;
      v63 = swift_slowAlloc();
      v70[0] = v63;
      *(_DWORD *)v29 = 134218498;
      v69 = v66;
      sub_190A48178();
      *(_WORD *)(v29 + 12) = 2080;
      swift_bridgeObjectRetain();
      v69 = sub_1908B35C4(v64, v65, v70);
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v29 + 22) = 2080;
      sub_190A47008();
      v30 = sub_190A48070();
      v69 = sub_1908B35C4(v30, v31, v70);
      sub_190A48178();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      _os_log_impl(&dword_1908A7000, v26, v27, "%ld Found region: %s with rect: %s", (uint8_t *)v29, 0x20u);
      v32 = v63;
      swift_arrayDestroy();
      MEMORY[0x194014398](v32, -1, -1);
      v33 = v29;
      v24 = v65;
      MEMORY[0x194014398](v33, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    }

    v43 = (_QWORD **)v68;
    sub_190A47008();
    v45 = v44;
    v47 = v46;
    v49 = v48;
    v51 = v50;
    v52 = (uint64_t)v67;
    sub_190A47014();
    v53 = sub_190A470BC();
    v54 = *(_QWORD *)(v53 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53) == 1)
    {
      sub_1908AA544(v52, &qword_1EE1EE020);
      v55 = 0;
      v56 = 0xF000000000000000;
    }
    else
    {
      v55 = sub_190A470B0();
      v56 = v57;
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v52, v53);
    }
    v58 = *v43;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v43 = v58;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v58 = sub_1908F3488(0, v58[2] + 1, 1, v58);
      *v43 = v58;
    }
    v61 = v58[2];
    v60 = v58[3];
    if (v61 >= v60 >> 1)
    {
      v58 = sub_1908F3488((_QWORD *)(v60 > 1), v61 + 1, 1, v58);
      *v43 = v58;
    }
    v58[2] = v61 + 1;
    v62 = &v58[8 * v61];
    v62[4] = v64;
    v62[5] = v24;
    v62[6] = v45;
    v62[7] = v47;
    v62[8] = v49;
    v62[9] = v51;
    v62[10] = v55;
    v62[11] = v56;
  }
  else
  {
    v22(v18, 1, 1, v19);
    sub_1908AA544((uint64_t)v18, &qword_1EE1EE028);
    if (qword_1ECF6BB68 != -1)
      swift_once();
    v34 = sub_190A465A0();
    __swift_project_value_buffer(v34, (uint64_t)qword_1ECF6D820);
    v35 = v7;
    v36 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v36(v15, a1, v6);
    v37 = sub_190A46588();
    v38 = sub_190A47F44();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v70[0] = v40;
      *(_DWORD *)v39 = 134218242;
      v68 = v35;
      v69 = v66;
      sub_190A48178();
      *(_WORD *)(v39 + 12) = 2080;
      v36(v10, (uint64_t)v15, v6);
      v41 = sub_190A47B00();
      v69 = sub_1908B35C4(v41, v42, v70);
      sub_190A48178();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v15, v6);
      _os_log_impl(&dword_1908A7000, v37, v38, "%ld View proxy does not have a selection identifier: %s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194014398](v40, -1, -1);
      MEMORY[0x194014398](v39, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    }

  }
}

uint64_t sub_19099F6A4(double a1, double a2)
{
  void (*v2)(char *, unint64_t, uint64_t);
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);

  v6 = sub_190A47284();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC08);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v2;
  sub_190A4726C();
  v16 = sub_190A47260();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1908AA544((uint64_t)v15, (uint64_t *)&unk_1ECF6A3B8);
  }
  else
  {
    sub_19099F960(a1, a2);
    if (v3)
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v15, v16);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
  }
  result = sub_190A47278();
  if (result)
  {
    v19 = *(_QWORD *)(result + 16);
    if (v19)
    {
      v20 = result + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      v21 = *(_QWORD *)(v7 + 72);
      v23 = result;
      v24 = v21;
      v25 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
      while (1)
      {
        v25(v12, v20, v6);
        v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
        v22(v12, 0, 1, v6);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
        sub_19099F6A4(a1, a2);
        if (v3)
        {
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
          return swift_bridgeObjectRelease();
        }
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        v20 += v24;
        if (!--v19)
          goto LABEL_14;
      }
    }
    else
    {
      v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
LABEL_14:
      v22(v12, 1, 1, v6);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t WidgetArchiver.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t WidgetArchiver.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_19099F960(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  int v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v6 = sub_190A47248();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_190A47260();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (id *)((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t))(v11 + 16))(v13, v3, v10);
  v14 = (*(uint64_t (**)(id *, uint64_t))(v11 + 88))(v13, v10);
  if (v14 == *MEMORY[0x1E0CDCD08])
  {
    (*(void (**)(id *, uint64_t))(v11 + 96))(v13, v10);
    (*(void (**)(char *, id *, uint64_t))(v7 + 32))(v9, v13, v6);
    sub_19099FBB8(a1, a2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else if (v14 == *MEMORY[0x1E0CDCD00])
  {
    (*(void (**)(id *, uint64_t))(v11 + 96))(v13, v10);
    v15 = *v13;
    objc_msgSend(*v13, sel_size);
    v17 = v16;
    objc_msgSend(v15, sel_scale);
    v19 = v17 * v18;
    objc_msgSend(v15, sel_size);
    v21 = v20;
    objc_msgSend(v15, sel_scale);
    v23 = v21 * v22;
    if (v19 > a1 || v23 > a2)
    {
      sub_1909A14F0();
      swift_allocError();
      *(double *)v25 = v19;
      *(double *)(v25 + 8) = v23;
      *(double *)(v25 + 16) = a1;
      *(double *)(v25 + 24) = a2;
      *(_BYTE *)(v25 + 32) = 2;
      swift_willThrow();
    }

  }
  else
  {
    sub_190A48448();
    __break(1u);
  }
}

void sub_19099FBB8(double a1, double a2)
{
  id v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v29;
  uint64_t v30;

  v5 = sub_190A45FC4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_190A47230();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A4723C();
  v13 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v13 == *MEMORY[0x1E0CDCCD8])
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v12, v9);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
    v14 = (void *)objc_opt_self();
    v15 = (void *)sub_190A45F94();
    v16 = objc_msgSend(v14, sel_wk_uniqueWithURL_, v15);

    sub_190A4720C();
    v2 = v16;
    v17 = (void *)sub_190A47AC4();
    swift_bridgeObjectRelease();
    v18 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_withConfiguration_, v17, v2, 0);

    if (v18)
    {
      v19 = v18;
      objc_msgSend(v19, sel_size);
      v21 = v20;
      objc_msgSend(v19, sel_scale);
      v23 = v21 * v22;
      objc_msgSend(v19, sel_size);
      v25 = v24;
      objc_msgSend(v19, sel_scale);
      v27 = v25 * v26;
      if (v23 > a1 || v27 > a2)
      {
        sub_1909A14F0();
        swift_allocError();
        *(double *)v29 = v23;
        *(double *)(v29 + 8) = v27;
        *(double *)(v29 + 16) = a1;
        *(double *)(v29 + 24) = a2;
        *(_BYTE *)(v29 + 32) = 2;
        swift_willThrow();

        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        return;
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

      goto LABEL_12;
    }
  }
  else
  {
    if (v13 == *MEMORY[0x1E0CDCCE0])
      return;
    sub_190A48448();
    __break(1u);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v19 = v2;
LABEL_12:

}

uint64_t sub_19099FED0(uint64_t *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a7;
  v29 = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(boxed_opaque_existential_1, a4, a7);
  *(_BYTE *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_includeSelectableRegions) = 0;
  v15 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_computedSelectableRegions) = MEMORY[0x1E0DEE9E0];
  *(_BYTE *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_archiveVersion) = 2;
  *(_BYTE *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfBackgroundIsMissing) = 0;
  *(_QWORD *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_unencodeableTypes) = MEMORY[0x1E0DEE9D8];
  v16 = a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_currentEnvironment;
  v17 = sub_190A46C30();
  v18 = *a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(_QWORD *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_largestImageSizeByFamily) = v15;
  v19 = OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_allowedImageTypes;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BBE0);
  v20 = sub_190A464C8();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_190A4A380;
  sub_190A464BC();
  sub_190A46498();
  sub_190A464B0();
  sub_190A464A4();
  v23 = sub_190947570(v22);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(a6 + v19) = v23;
  v24 = a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_defaultImageType;
  sub_190A46498();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(v24, 0, 1, v20);
  sub_1908BD0B4(a2, a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_bundleStub, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  *(_QWORD *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_systemVersion) = v18;
  *(_BYTE *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfAnyTypeFailedToEncode) = a3;
  sub_1908B4BD4(a5, a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_viewCollection, &qword_1ECF6ACC0);
  sub_1908B4BBC(&v27, a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_descriptorQuerying);
  return a6;
}

uint64_t sub_1909A0134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[40];
  uint64_t v20;
  uint64_t v21[5];

  v6 = type metadata accessor for BundleStub();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[3] = a3;
  v21[4] = a4;
  __swift_allocate_boxed_opaque_existential_1(v21);
  (*(void (**)(void))(*(_QWORD *)(a3 - 8) + 32))();
  if (qword_1ECF6C5C8 != -1)
    swift_once();
  swift_beginAccess();
  v20 = qword_1ECF6C5E8;
  (*(void (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  result = sub_1908BBDC8((uint64_t)v21, (uint64_t)v19);
  v10 = xmmword_1ECF6D940;
  if ((_QWORD)xmmword_1ECF6D940)
  {
    v17 = *(_QWORD *)xmmword_1ECF6D940;
    v11 = v17;
    v18 = *(_QWORD *)(qword_1ECF6D950 + 8);
    v12 = v18;
    v16[0] = xmmword_1ECF6D940;
    type metadata accessor for WidgetArchiver.ArchivingDelegate(0);
    v13 = swift_allocObject();
    v15 = v10;
    swift_retain_n();
    v14 = sub_19099FED0(&v20, (uint64_t)v8, 0, (uint64_t)&v15, (uint64_t)v19, v13, v11, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_1909A02C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  int v24;
  uint64_t v26;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for WidgetDescriptor(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v26 - v12;
  v14 = *(_QWORD *)(a2 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_descriptorQuerying + 24);
  v15 = *(_QWORD *)(a2 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_descriptorQuerying + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_descriptorQuerying), v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 8))(a1, v14, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1908AA544((uint64_t)v6, &qword_1ECF6C788);
    return 0;
  }
  sub_1908BD0B4((uint64_t)v6, (uint64_t)v13, type metadata accessor for WidgetDescriptor);
  if (qword_1ECF6AD00 != -1)
    swift_once();
  v16 = qword_1ECF6ACF8;
  v17 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v18 = objc_msgSend(v17, sel_mainBundle);
  v19 = objc_msgSend(v18, sel_bundleIdentifier);

  if (v19)
  {
    v20 = sub_190A47ADC();
    v22 = v21;

  }
  else
  {
    v22 = 0xE300000000000000;
    v20 = 7104878;
  }
  v23 = sub_1909C71EC(v20, v22, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1908BD0B4((uint64_t)v13, (uint64_t)v11, type metadata accessor for WidgetDescriptor);
  if ((v23 & 1) == 0)
  {
    sub_1908B5150((uint64_t)v11, type metadata accessor for WidgetDescriptor);
    return 0;
  }
  v24 = v11[*(int *)(v7 + 88)];
  sub_1908B5150((uint64_t)v11, type metadata accessor for WidgetDescriptor);
  return v24 == 2 || (v24 & 1) == 0;
}

id sub_1909A0538(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = a1[3];
  v2 = a1[4];
  v3 = __swift_project_boxed_opaque_existential_1(a1, v1);
  return sub_1909A0564((uint64_t)v3, v1, v2);
}

id sub_1909A0564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *boxed_opaque_existential_1;
  id result;
  void *v11;
  unsigned int v12;
  id v13;
  id v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t (*v28)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36[3];
  uint64_t v37;
  uint64_t v38;

  v6 = type metadata accessor for BundleStub();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a2;
  v38 = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v36);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_1, a1, a2);
  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (result)
  {
    v11 = result;
    v12 = objc_msgSend(result, sel_isInternalInstall);

    if (v12)
    {
      v13 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
      v14 = objc_msgSend(v13, sel_environment);

      v15 = sub_190A47A28();
      if (*(_QWORD *)(v15 + 16))
      {
        sub_1908D2C98(0xD000000000000011, 0x8000000190A60880);
        v17 = v16;
        swift_bridgeObjectRelease();
        if ((v17 & 1) != 0)
        {
          if (qword_1ECF6C5C8 != -1)
            swift_once();
          swift_beginAccess();
          v18 = *(_QWORD *)&qword_1ECF6C5E8[0];
          (*(void (**)(uint64_t))(*(_QWORD *)(a3 + 8) + 8))(a2);
          type metadata accessor for TestingNilDescriptorQuerying();
          v19 = swift_allocObject();
          type metadata accessor for WidgetArchiver.ArchivingDelegate(0);
          v33 = 0u;
          v34 = 0u;
          v35 = 0;
          v20 = swift_allocObject();
          v21 = sub_1908C9758(v18, (uint64_t)v8, 0, v19, (uint64_t)&v33, v20);
          goto LABEL_10;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    v22 = type metadata accessor for WidgetArchiver.ArchivingDelegate(0);
    v23 = v37;
    v24 = v38;
    v25 = __swift_project_boxed_opaque_existential_1(v36, v37);
    *((_QWORD *)&v34 + 1) = v23;
    v26 = *(_QWORD *)(v24 + 8);
    v35 = v26;
    v27 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v33);
    v28 = *(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    v29 = v28(v27, v25, v23);
    MEMORY[0x1E0C80A78](v29);
    v31 = (char *)&v32 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    v28((uint64_t *)v31, v27, v23);
    v21 = sub_1909A0134((uint64_t)v31, v22, v23, v26);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    return (id)v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1909A0858()
{
  return sub_190A46D68();
}

void sub_1909A0880(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 1)
  {

  }
  else if (!a5)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1ECF6BB98);
}

int64_t sub_1909A08B0(void *a1)
{
  CGImage *v1;
  CGImage *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unsigned int (**v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  CGImage *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  id v22;
  unint64_t v23;
  char v24;
  double *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double Height;
  double v32;
  double v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  _DWORD *v37;
  _DWORD *v38;
  CGImage *v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  CGImage *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  unsigned int (**v50)(char *, uint64_t, uint64_t);
  char v51;
  uint64_t v52;
  double v53;
  char v54;
  double v55;
  double v56;
  int64_t v57;
  int64_t result;
  uint64_t v59;
  double v60;
  CGImage *v61;
  NSObject *v62;
  os_log_type_t v63;
  _BOOL4 v64;
  uint64_t v65;
  CGImage *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  CGImage *v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  double v75;
  double v76;
  uint64_t v77;
  id v78;
  char isUniquelyReferenced_nonNull_native;
  _DWORD *v80;
  CGImage *v81;
  unsigned int (**v82)(char *, uint64_t, uint64_t);
  int v83;
  CGImage *v84;
  double v85;
  uint64_t v86;
  size_t v87;
  void *v88;
  size_t Width;
  uint64_t v90;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_190A46C30();
  v8 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ECF6AE58 != -1)
    swift_once();
  v11 = sub_190A465A0();
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1ECF6D528);
  v13 = a1;
  v86 = v12;
  v14 = sub_190A46588();
  v15 = sub_190A47F44();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    *(_DWORD *)v16 = 67240704;
    v85 = *(double *)&v10;
    LODWORD(Width) = CGImageGetIdentifier();
    v84 = v2;
    sub_190A48178();
    *(_WORD *)(v16 + 8) = 2048;
    Width = CGImageGetWidth(v13);
    sub_190A48178();
    *(_WORD *)(v16 + 18) = 2048;
    Width = CGImageGetHeight(v13);
    v2 = v84;
    v10 = *(char **)&v85;
    sub_190A48178();

    _os_log_impl(&dword_1908A7000, v14, v15, "Filtered image [%{public}u: %ld-%ld]: enter", (uint8_t *)v16, 0x1Cu);
    MEMORY[0x194014398](v16, -1, -1);

  }
  else
  {

  }
  v17 = (uint64_t)v2 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_currentEnvironment;
  swift_beginAccess();
  sub_1908AAA48(v17, (uint64_t)v6, (uint64_t *)&unk_1ECF6C868);
  if (v8[6](v6, 1, v7) == 1)
  {
    sub_1908AA544((uint64_t)v6, (uint64_t *)&unk_1ECF6C868);
    goto LABEL_18;
  }
  v8[4](v10, (uint64_t)v6, v7);
  sub_19090191C();
  sub_190A46C3C();
  v83 = v87;
  sub_1908BE014();
  sub_190A46C3C();
  v18 = v88;
  v19 = (char *)v2 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_largestImageSizeByFamily;
  swift_beginAccess();
  v20 = *(_QWORD *)v19;
  if (*(_QWORD *)(*(_QWORD *)v19 + 16))
  {
    v21 = v18;
    v22 = v18;
    swift_bridgeObjectRetain();
    v23 = sub_1908D38A4(v83, v22);
    if ((v24 & 1) != 0)
    {
      v25 = (double *)(*(_QWORD *)(v20 + 56) + 16 * v23);
      v26 = *v25;
      v27 = v25[1];

      swift_bridgeObjectRelease();
      v28 = (double)(uint64_t)CGImageGetWidth(v13);
      sub_190A469E4();
      v30 = v28 / v29;
      Height = (double)(uint64_t)CGImageGetHeight(v13);
      sub_190A469E4();
      v33 = Height / v32;
      if (v26 * v27 >= v30 * v33)
      {
        ((void (*)(char *, uint64_t, double, double))v8[1])(v10, v7, v30 * v33, v26 * v27);

      }
      else
      {
        v84 = v13;
        v34 = sub_190A46588();
        v35 = sub_190A47F44();
        v36 = v35;
        if (os_log_type_enabled(v34, v35))
        {
          v37 = (_DWORD *)swift_slowAlloc();
          LODWORD(v81) = v36;
          v38 = v37;
          *v37 = 67240704;
          v85 = *(double *)&v10;
          v80 = v37 + 1;
          v39 = v84;
          LODWORD(v87) = CGImageGetIdentifier();
          v82 = v8;
          sub_190A48178();

          *((_WORD *)v38 + 4) = 2048;
          v87 = *(_QWORD *)&v30;
          v8 = v82;
          sub_190A48178();
          *((_WORD *)v38 + 9) = 2048;
          v87 = *(_QWORD *)&v33;
          v10 = *(char **)&v85;
          sub_190A48178();
          _os_log_impl(&dword_1908A7000, v34, (os_log_type_t)v81, "Filtered image [%{public}u]: new largest image: (%f, %f", (uint8_t *)v38, 0x1Cu);
          MEMORY[0x194014398](v38, -1, -1);
        }
        else
        {

          v34 = v84;
        }

        swift_beginAccess();
        v78 = v22;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v90 = *(_QWORD *)v19;
        *(_QWORD *)v19 = 0x8000000000000000;
        sub_1908FC548(v83, v78, isUniquelyReferenced_nonNull_native, v30, v33);
        *(_QWORD *)v19 = v90;

        swift_bridgeObjectRelease();
        swift_endAccess();

        ((void (*)(char *, uint64_t))v8[1])(v10, v7);
      }
      goto LABEL_18;
    }

    swift_bridgeObjectRelease();
    v18 = v21;
  }
  v82 = (unsigned int (**)(char *, uint64_t, uint64_t))v18;
  v40 = (double)(uint64_t)CGImageGetWidth(v13);
  sub_190A469E4();
  v42 = v40 / v41;
  v43 = (double)(uint64_t)CGImageGetHeight(v13);
  v85 = *(double *)&v10;
  sub_190A469E4();
  v45 = v43 / v44;
  v46 = v13;
  v47 = sub_190A46588();
  v48 = sub_190A47F44();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = swift_slowAlloc();
    *(_DWORD *)v49 = 67240704;
    v81 = v13;
    v84 = v2;
    LODWORD(v87) = CGImageGetIdentifier();
    sub_190A48178();

    *(_WORD *)(v49 + 8) = 2048;
    v87 = *(_QWORD *)&v42;
    sub_190A48178();
    *(_WORD *)(v49 + 18) = 2048;
    v13 = v81;
    v87 = *(_QWORD *)&v45;
    sub_190A48178();
    _os_log_impl(&dword_1908A7000, v47, v48, "Filtered image [%{public}u]: new largest image: (%f, %f", (uint8_t *)v49, 0x1Cu);
    MEMORY[0x194014398](v49, -1, -1);
  }
  else
  {

    v47 = v46;
  }

  swift_beginAccess();
  v50 = v82;
  v51 = swift_isUniquelyReferenced_nonNull_native();
  v90 = *(_QWORD *)v19;
  *(_QWORD *)v19 = 0x8000000000000000;
  sub_1908FC548(v83, v50, v51, v42, v45);
  *(_QWORD *)v19 = v90;

  swift_bridgeObjectRelease();
  swift_endAccess();

  ((void (*)(double, uint64_t))v8[1])(COERCE_DOUBLE(*(_QWORD *)&v85), v7);
LABEL_18:
  *(double *)&v52 = COERCE_DOUBLE(sub_19099CEF0());
  if ((v54 & 1) != 0)
  {
    v66 = v13;
    v62 = sub_190A46588();
    v67 = sub_190A47F68();
    if (!os_log_type_enabled(v62, v67))
    {

      v62 = v66;
LABEL_33:

      return (int64_t)v13;
    }
    v68 = swift_slowAlloc();
    *(_DWORD *)v68 = 67240704;
    LODWORD(v87) = CGImageGetIdentifier();
    sub_190A48178();
    *(_WORD *)(v68 + 8) = 2048;
    v87 = CGImageGetWidth(v66);
    sub_190A48178();
    *(_WORD *)(v68 + 18) = 2048;
    v87 = CGImageGetHeight(v66);
    sub_190A48178();

    _os_log_impl(&dword_1908A7000, v62, v67, "Filtered image [%{public}u: %ld-%ld]: exit (no size constraints configured)", (uint8_t *)v68, 0x1Cu);
    v69 = v68;
LABEL_28:
    MEMORY[0x194014398](v69, -1, -1);
    goto LABEL_33;
  }
  v55 = *(double *)&v52;
  v56 = v53;
  v57 = CGImageGetWidth(v13);
  result = CGImageGetHeight(v13);
  v59 = v57 * result;
  if ((unsigned __int128)(v57 * (__int128)result) >> 64 == (v57 * result) >> 63)
  {
    v60 = v55 * v56;
    v61 = v13;
    v62 = sub_190A46588();
    v63 = sub_190A47F44();
    v64 = os_log_type_enabled(v62, v63);
    if (v55 * v56 < (double)v59)
    {
      v85 = v55;
      if (v64)
      {
        v65 = swift_slowAlloc();
        *(_DWORD *)v65 = 67240704;
        LODWORD(v87) = CGImageGetIdentifier();
        sub_190A48178();
        *(_WORD *)(v65 + 8) = 2048;
        v87 = CGImageGetWidth(v61);
        sub_190A48178();
        *(_WORD *)(v65 + 18) = 2048;
        v87 = CGImageGetHeight(v61);
        sub_190A48178();

        _os_log_impl(&dword_1908A7000, v62, v63, "Filtered image [%{public}u: %ld-%ld]: exit (too large)", (uint8_t *)v65, 0x1Cu);
        MEMORY[0x194014398](v65, -1, -1);
      }
      else
      {

        v62 = v61;
      }

      v71 = v61;
      v72 = sub_190A46588();
      v73 = sub_190A47F5C();
      if (os_log_type_enabled(v72, v73))
      {
        v74 = swift_slowAlloc();
        *(_DWORD *)v74 = 67241216;
        LODWORD(v87) = CGImageGetIdentifier();
        sub_190A48178();
        *(_WORD *)(v74 + 8) = 2048;
        v87 = CGImageGetWidth(v71);
        sub_190A48178();
        *(_WORD *)(v74 + 18) = 2048;
        v87 = CGImageGetHeight(v71);
        sub_190A48178();

        *(_WORD *)(v74 + 28) = 2048;
        v87 = v59;
        sub_190A48178();
        *(_WORD *)(v74 + 38) = 2048;
        v87 = *(_QWORD *)&v60;
        sub_190A48178();
        _os_log_impl(&dword_1908A7000, v72, v73, "Widget archival failed due to image being too large [%{public}u] - (%ld, %ld), totalArea: %ld > max[%f].", (uint8_t *)v74, 0x30u);
        MEMORY[0x194014398](v74, -1, -1);
      }
      else
      {

        v72 = v71;
      }

      v75 = (double)(uint64_t)CGImageGetWidth(v71);
      v76 = (double)(uint64_t)CGImageGetHeight(v71);
      sub_1909A14F0();
      swift_allocError();
      *(double *)v77 = v75;
      *(double *)(v77 + 8) = v76;
      *(double *)(v77 + 16) = v85;
      *(double *)(v77 + 24) = v56;
      *(_BYTE *)(v77 + 32) = 2;
      swift_willThrow();
      return (int64_t)v13;
    }
    if (!v64)
    {

      v62 = v61;
      goto LABEL_33;
    }
    v70 = swift_slowAlloc();
    *(_DWORD *)v70 = 67240704;
    LODWORD(v87) = CGImageGetIdentifier();
    sub_190A48178();
    *(_WORD *)(v70 + 8) = 2048;
    v87 = CGImageGetWidth(v61);
    sub_190A48178();
    *(_WORD *)(v70 + 18) = 2048;
    v87 = CGImageGetHeight(v61);
    sub_190A48178();

    _os_log_impl(&dword_1908A7000, v62, v63, "Filtered image [%{public}u: %ld-%ld]: exit (allowed)", (uint8_t *)v70, 0x1Cu);
    v69 = v70;
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

unint64_t sub_1909A14F0()
{
  unint64_t result;

  result = qword_1EE1EB268;
  if (!qword_1EE1EB268)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetArchiver.ArchivingError, &type metadata for WidgetArchiver.ArchivingError);
    atomic_store(result, (unint64_t *)&qword_1EE1EB268);
  }
  return result;
}

uint64_t sub_1909A1534()
{
  return sub_1908AA2F4(&qword_1EE1EE010, type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey, (uint64_t)&protocol conformance descriptor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey);
}

uint64_t sub_1909A1560@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_includeSelectableRegions, a2);
}

uint64_t sub_1909A156C(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_includeSelectableRegions);
}

uint64_t sub_1909A1578@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_computedSelectableRegions);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1909A15D0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_archiveVersion);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1909A1620(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_archiveVersion);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_1909A166C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfBackgroundIsMissing, a2);
}

uint64_t sub_1909A1678(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfBackgroundIsMissing);
}

uint64_t sub_1909A1684@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfAnyTypeFailedToEncode, a2);
}

uint64_t keypath_getTm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _BYTE *a3@<X8>)
{
  _BYTE *v4;
  uint64_t result;

  v4 = (_BYTE *)(*a1 + *a2);
  result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t sub_1909A16DC(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfAnyTypeFailedToEncode);
}

uint64_t keypath_setTm(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  char v5;
  _BYTE *v6;
  uint64_t result;

  v5 = *a1;
  v6 = (_BYTE *)(*a2 + *a5);
  result = swift_beginAccess();
  *v6 = v5;
  return result;
}

uint64_t type metadata accessor for TestingNilDescriptorQuerying()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for WidgetArchiver()
{
  return objc_opt_self();
}

uint64_t method lookup function for WidgetArchiver()
{
  return swift_lookUpClassMethod();
}

id sub_1909A177C(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 1)
    return result;
  if (!a5)
    return (id)swift_bridgeObjectRetain();
  return result;
}

void destroy for WidgetArchiver.ArchivingError(uint64_t a1)
{
  sub_1909A0880(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for WidgetArchiver.ArchivingError(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1909A177C(*(id *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for WidgetArchiver.ArchivingError(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1909A177C(*(id *)a2, v4, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1909A0880(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for WidgetArchiver.ArchivingError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1909A0880(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetArchiver.ArchivingError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetArchiver.ArchivingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1909A1968(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 2u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_1909A1980(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for WidgetArchiver.ArchivingError()
{
  return &type metadata for WidgetArchiver.ArchivingError;
}

uint64_t sub_1909A19AC()
{
  return type metadata accessor for WidgetArchiver.ArchivingDelegate(0);
}

uint64_t type metadata accessor for WidgetArchiver.ArchivingDelegate(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1ECF6BBB0);
}

void sub_1909A19C8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for BundleStub();
  if (v0 <= 0x3F)
  {
    sub_1908BBFB0(319, (unint64_t *)&qword_1ECF6BCE8, (void (*)(uint64_t))MEMORY[0x1E0CDAA30]);
    if (v1 <= 0x3F)
    {
      sub_1908BBFB0(319, (unint64_t *)&qword_1ECF6BBC8, (void (*)(uint64_t))MEMORY[0x1E0DF0340]);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for WidgetArchiver.ArchivingDelegate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.includeSelectableRegions.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.includeSelectableRegions.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.includeSelectableRegions.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.computedSelectableRegions.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.computedSelectableRegions.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.computedSelectableRegions.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.archiveVersion.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.archiveVersion.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.archiveVersion.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.failIfBackgroundIsMissing.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.failIfBackgroundIsMissing.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.failIfBackgroundIsMissing.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.failIfAnyTypeFailedToEncode.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.failIfAnyTypeFailedToEncode.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.failIfAnyTypeFailedToEncode.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.maximumAllowedImagePixelSize.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.viewDataNeedsUpdate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.failedToEncodeView(type:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of WidgetArchiver.ArchivingDelegate.filteredImage(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t *initializeBufferWithCopyOfBuffer for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_190A46084();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = (void *)v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_retain();
    v12 = v11;
  }
  return a1;
}

void destroy for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  swift_release();

}

uint64_t initializeWithCopy for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  void *v10;
  id v11;

  v6 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = (void *)v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  v11 = v10;
  return a1;
}

uint64_t assignWithCopy for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  void *v11;
  id v12;

  v6 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = *v9;
  swift_retain();
  swift_release();
  v10 = (void *)v9[1];
  v11 = *(void **)(v8 + 8);
  *(_QWORD *)(v8 + 8) = v10;
  v12 = v10;

  return a1;
}

uint64_t initializeWithTake for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;

  v6 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = *v9;
  swift_release();
  v10 = *(void **)(v8 + 8);
  *(_QWORD *)(v8 + 8) = v9[1];

  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetArchiver.ArchivingDelegate.SelectableRegionKey()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909A1EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_190A46084();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetArchiver.ArchivingDelegate.SelectableRegionKey()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909A1F34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_190A46084();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1909A1FAC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190A46084();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for WidgetArchiver.ArchivingDelegate.SelectableRegion(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(a1 + 56);
  if (v3 >> 60 != 15)
    return sub_1908B53FC(*(_QWORD *)(a1 + 48), v3);
  return result;
}

uint64_t initializeWithCopy for WidgetArchiver.ArchivingDelegate.SelectableRegion(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  _OWORD *v5;
  unint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = (_OWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 48) = *v5;
  }
  else
  {
    v7 = *(_QWORD *)v5;
    sub_1908B53B8(v7, v6);
    *(_QWORD *)(a1 + 48) = v7;
    *(_QWORD *)(a1 + 56) = v6;
  }
  return a1;
}

_QWORD *assignWithCopy for WidgetArchiver.ArchivingDelegate.SelectableRegion(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  v4 = a2 + 6;
  v5 = a2[7];
  if (a1[7] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_1908B53B8(*v4, v5);
      v8 = a1[6];
      v9 = a1[7];
      a1[6] = v7;
      a1[7] = v5;
      sub_1908B53FC(v8, v9);
      return a1;
    }
    sub_19091C458((uint64_t)(a1 + 6));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 3) = *(_OWORD *)v4;
    return a1;
  }
  v6 = *v4;
  sub_1908B53B8(*v4, v5);
  a1[6] = v6;
  a1[7] = v5;
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for WidgetArchiver.ArchivingDelegate.SelectableRegion(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  v6 = (_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  if (v7 >> 60 != 15)
  {
    v8 = *(_QWORD *)(a2 + 56);
    if (v8 >> 60 != 15)
    {
      v9 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 48) = *v6;
      *(_QWORD *)(a1 + 56) = v8;
      sub_1908B53FC(v9, v7);
      return a1;
    }
    sub_19091C458(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for TimelineViewSource(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TimelineViewSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegion()
{
  return &type metadata for WidgetArchiver.ArchivingDelegate.SelectableRegion;
}

uint64_t initializeBufferWithCopyOfBuffer for WidgetArchiver._LargestImageSizeKey(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = v3;
  return a1;
}

void destroy for WidgetArchiver._LargestImageSizeKey(uint64_t a1)
{

}

uint64_t assignWithCopy for WidgetArchiver._LargestImageSizeKey(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v5 = v3;

  return a1;
}

uint64_t assignWithTake for WidgetArchiver._LargestImageSizeKey(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for WidgetArchiver._LargestImageSizeKey()
{
  return &type metadata for WidgetArchiver._LargestImageSizeKey;
}

unint64_t sub_1909A23CC()
{
  unint64_t result;

  result = qword_1ECF6A4B0;
  if (!qword_1ECF6A4B0)
  {
    result = MEMORY[0x19401429C](&unk_190A56148, &type metadata for WidgetArchiver._LargestImageSizeKey);
    atomic_store(result, (unint64_t *)&qword_1ECF6A4B0);
  }
  return result;
}

uint64_t sub_1909A2434()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1909A2464()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909A2488()
{
  uint64_t v0;

  return sub_1908C9738(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1909A2490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1909A24D8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v33 = a3;
  v5 = sub_190A46084();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TimelineReloadPolicy();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for BundleStub();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for WidgetArchivableMetadata(0);
  MEMORY[0x1E0C80A78](v32);
  v15 = (void **)((char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v31 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v16 + 8) + 16))(v17);
  v19 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  (*(void (**)(__int128 *__return_ptr, uint64_t))(*(_QWORD *)(v18 + 8) + 32))(&v35, v19);
  v34 = v35;
  v20 = a2;
  sub_1908AF5D8(a2 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_bundleStub, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  v22 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v21 + 8) + 56))(v22);
  v25 = a1[3];
  v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  (*(void (**)(uint64_t))(*(_QWORD *)(v24 + 8) + 64))(v25);
  v27 = a1[3];
  v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v27);
  (*(void (**)(uint64_t))(*(_QWORD *)(v26 + 8) + 40))(v27);
  v36 = *(_QWORD *)(v20 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_systemVersion);
  v28 = v33;
  swift_bridgeObjectRetain();
  sub_19091B60C(v31, &v34, (uint64_t)v13, v23, (uint64_t)v10, (uint64_t)v7, &v36, v28, v15);
  sub_190A45F40();
  swift_allocObject();
  sub_190A45F34();
  sub_1908AA2F4(&qword_1ECF6BAC0, type metadata accessor for WidgetArchivableMetadata, (uint64_t)&unk_190A4D6C0);
  v29 = sub_190A45F28();
  sub_1908B5150((uint64_t)v15, type metadata accessor for WidgetArchivableMetadata);
  swift_release();
  return v29;
}

void sub_1909A27AC(uint64_t a1)
{
  uint64_t v1;

  sub_19099EFF8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1909A27B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

unint64_t sub_1909A27F8()
{
  unint64_t result;

  result = qword_1ECF6AC58;
  if (!qword_1ECF6AC58)
  {
    result = MEMORY[0x19401429C](&unk_190A587F4, &_s18WidgetSpecifiedKeyVN);
    atomic_store(result, (unint64_t *)&qword_1ECF6AC58);
  }
  return result;
}

unint64_t sub_1909A283C()
{
  unint64_t result;

  result = qword_1EE1EE018;
  if (!qword_1EE1EE018)
  {
    result = MEMORY[0x19401429C](&unk_190A5515C, &type metadata for WidgetBackgroundAbsent.View);
    atomic_store(result, (unint64_t *)&qword_1EE1EE018);
  }
  return result;
}

uint64_t sub_1909A2880(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

void sub_1909A28B4(uint64_t a1)
{
  uint64_t *v1;

  sub_19099D914(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_1909A28F0()
{
  uint64_t v0;

  return sub_19092FA30(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(void **)(v0 + 40));
}

void destroy for WidgetLayoutInsetsModifier(uint64_t a1)
{
  sub_1908D1BB0(*(id *)a1, *(_BYTE *)(a1 + 8));
  sub_1908D1BB0(*(id *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for WidgetLayoutInsetsModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  char v5;
  void *v6;

  v2 = a2;
  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B68(*(id *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(void **)(v2 + 16);
  LOBYTE(v2) = *(_BYTE *)(v2 + 24);
  sub_1908D1B68(v6, v2);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v2;
  return a1;
}

uint64_t assignWithCopy for WidgetLayoutInsetsModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  char v5;
  void *v6;
  char v7;
  void *v8;
  void *v9;
  char v10;

  v2 = a2;
  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B68(*(id *)a2, v5);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1908D1BB0(v6, v7);
  v8 = *(void **)(v2 + 16);
  LOBYTE(v2) = *(_BYTE *)(v2 + 24);
  sub_1908D1B68(v8, v2);
  v9 = *(void **)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v2;
  sub_1908D1BB0(v9, v10);
  return a1;
}

uint64_t assignWithTake for WidgetLayoutInsetsModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  char v7;
  char v8;
  void *v9;
  char v10;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1908D1BB0(v6, v7);
  v8 = *((_BYTE *)a2 + 24);
  v9 = *(void **)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v8;
  sub_1908D1BB0(v9, v10);
  return a1;
}

ValueMetadata *type metadata accessor for WidgetLayoutInsetsModifier()
{
  return &type metadata for WidgetLayoutInsetsModifier;
}

uint64_t sub_1909A2AAC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1909A2ABC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  char *v28;
  __int128 v29;
  char *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  v35 = a1;
  v37 = a4;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6ABD8);
  MEMORY[0x1E0C80A78](v36);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AB60);
  MEMORY[0x1E0C80A78](v33);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6ABA0);
  MEMORY[0x1E0C80A78](v34);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6ABC0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v32 - v16;
  a3 &= 1u;
  sub_1908D1B68(a2, a3);
  v18 = sub_19096E4E8(a2, a3);
  sub_1908D1BB0(a2, a3);
  objc_msgSend(v18, sel_layoutInsets);
  v20 = v19;
  v22 = v21;
  v24 = v23;

  sub_1908D1B68(a2, a3);
  v25 = sub_19096E4E8(a2, a3);
  sub_1908D1BB0(a2, a3);
  objc_msgSend(v25, sel_size);

  sub_1908D1B68(a2, a3);
  v26 = sub_19096E4E8(a2, a3);
  sub_1908D1BB0(a2, a3);
  objc_msgSend(v26, sel_size);

  sub_190A478CC();
  sub_190A46738();
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AC40);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v9, v35, v27);
  v28 = &v9[*(int *)(v33 + 36)];
  v29 = v39;
  *(_OWORD *)v28 = v38;
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v40;
  LOBYTE(v26) = sub_190A47308();
  sub_1908AAA48((uint64_t)v9, (uint64_t)v11, &qword_1ECF6AB60);
  v30 = &v11[*(int *)(v34 + 36)];
  *v30 = (char)v26;
  *((_QWORD *)v30 + 1) = v20;
  *((_QWORD *)v30 + 2) = v22;
  *((_QWORD *)v30 + 3) = v22;
  *((_QWORD *)v30 + 4) = v24;
  v30[40] = 0;
  sub_1908AA544((uint64_t)v9, &qword_1ECF6AB60);
  sub_1908AAA48((uint64_t)v11, (uint64_t)v15, &qword_1ECF6ABA0);
  *(_WORD *)&v15[*(int *)(v12 + 36)] = 0;
  sub_1908AA544((uint64_t)v11, &qword_1ECF6ABA0);
  sub_1909A2E94((uint64_t)v15, (uint64_t)v17);
  sub_1908AAA48((uint64_t)v17, (uint64_t)v7, &qword_1ECF6ABC0);
  swift_storeEnumTagMultiPayload();
  sub_1909A2EDC();
  sub_1908AF598(&qword_1ECF6AC38, &qword_1ECF6AC40, MEMORY[0x1E0CDBF10]);
  sub_190A46F90();
  return sub_1908AA544((uint64_t)v17, &qword_1ECF6ABC0);
}

uint64_t sub_1909A2E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1909A2ABC(a1, *(void **)v2, *(_BYTE *)(v2 + 8), a2);
}

uint64_t sub_1909A2E94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6ABC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1909A2EDC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6ABB8;
  if (!qword_1ECF6ABB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6ABC0);
    v2[0] = sub_1909A2F60();
    v2[1] = sub_1908AF598(&qword_1ECF6AB18, (uint64_t *)&unk_1ECF6AB20, MEMORY[0x1E0CD89F0]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6ABB8);
  }
  return result;
}

unint64_t sub_1909A2F60()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6AB98;
  if (!qword_1ECF6AB98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6ABA0);
    v2[0] = sub_1909A2FCC();
    v2[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6AB98);
  }
  return result;
}

unint64_t sub_1909A2FCC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6AB58;
  if (!qword_1ECF6AB58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6AB60);
    v2[0] = sub_1908AF598(&qword_1ECF6AC38, &qword_1ECF6AC40, MEMORY[0x1E0CDBF10]);
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6AB58);
  }
  return result;
}

unint64_t sub_1909A3054()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6ABF8;
  if (!qword_1ECF6ABF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6AC00);
    v2[0] = sub_1909A2EDC();
    v2[1] = sub_1908AF598(&qword_1ECF6AC38, &qword_1ECF6AC40, MEMORY[0x1E0CDBF10]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6ABF8);
  }
  return result;
}

uint64_t sub_1909A30D8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    v7 = (void *)a2[1];
    v6 = a2[2];
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_WORD *)(a1 + 40) = *((_WORD *)a2 + 20);
    v8 = *(int *)(a3 + 28);
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = sub_190A45FC4();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_retain();
    v14 = v7;
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return v5;
}

uint64_t sub_1909A31F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_release();

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_190A45FC4();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_1909A3284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  id v11;
  uint64_t v12;

  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v5 = *(int *)(a3 + 28);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_190A45FC4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_retain();
  v11 = v4;
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1909A337C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v6 = *(void **)(a2 + 8);
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  v8 = v6;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v9;
  v10 = *(int *)(a3 + 28);
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = sub_190A45FC4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t sub_1909A34D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v4 = *(int *)(a3 + 28);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_190A45FC4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1909A35AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v6 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v7 = *(int *)(a3 + 28);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_190A45FC4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1909A36F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909A3700(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_1909A3780()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1909A378C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for JindoViewStates.Metadata(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1EE1EABA0);
}

void sub_1909A3818()
{
  unint64_t v0;

  sub_1908BBFB0(319, (unint64_t *)&qword_1ECF6D220, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1909A38B4(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  void *v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(char *, uint64_t, uint64_t);
  id v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(const void *, uint64_t, uint64_t);
  uint64_t v77;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)a1 = *a2;
    v19 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    v7 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 8, (uint64_t)(a2 + 1));
    v8 = a3[6];
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    *(_OWORD *)v9 = *(_OWORD *)((char *)a2 + v8);
    *(_BYTE *)(v9 + 16) = *((_BYTE *)a2 + v8 + 16);
    *(_OWORD *)(v9 + 24) = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_BYTE *)(v9 + 40) = *((_BYTE *)a2 + v8 + 40);
    *(_QWORD *)(v9 + 48) = *(uint64_t *)((char *)a2 + v8 + 48);
    *(_OWORD *)(v9 + 56) = *(_OWORD *)((char *)a2 + v8 + 56);
    *(_OWORD *)(v9 + 72) = *(_OWORD *)((char *)a2 + v8 + 72);
    *(_BYTE *)(v9 + 88) = *((_BYTE *)a2 + v8 + 88);
    *(_OWORD *)(v9 + 96) = *(_OWORD *)((char *)a2 + v8 + 96);
    v11 = type metadata accessor for MetricsRequest(0);
    v12 = *(int *)(v11 + 40);
    v13 = (void *)(v9 + v12);
    v14 = (const void *)(v10 + v12);
    v15 = sub_190A46EE8();
    v16 = *(_QWORD *)(v15 - 8);
    v76 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
    if (v76(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v20 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
    v21 = (_OWORD *)(v9 + v20);
    v22 = (_OWORD *)(v10 + v20);
    v23 = (int *)type metadata accessor for JindoMetricsDefinition(0);
    v24 = *((_QWORD *)v23 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v74 = v24;
      v75 = v16;
      *v21 = *v22;
      v26 = v23[5];
      v27 = (char *)v21 + v26;
      v28 = (char *)v22 + v26;
      v27[16] = v28[16];
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *(_OWORD *)(v27 + 24) = *(_OWORD *)(v28 + 24);
      v27[40] = v28[40];
      *((_QWORD *)v27 + 6) = *((_QWORD *)v28 + 6);
      *(_OWORD *)(v27 + 56) = *(_OWORD *)(v28 + 56);
      *(_OWORD *)(v27 + 72) = *(_OWORD *)(v28 + 72);
      v27[88] = v28[88];
      *((_OWORD *)v27 + 6) = *((_OWORD *)v28 + 6);
      v29 = *(int *)(v11 + 40);
      v30 = &v27[v29];
      v31 = &v28[v29];
      if (v76(&v28[v29], 1, v15))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v30, v31, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v30, 0, 1, v15);
      }
      v33 = v23[6];
      v34 = (char *)v21 + v33;
      v35 = (char *)v22 + v33;
      *(_OWORD *)v34 = *(_OWORD *)v35;
      v34[16] = v35[16];
      *(_OWORD *)(v34 + 24) = *(_OWORD *)(v35 + 24);
      v34[40] = v35[40];
      *((_QWORD *)v34 + 6) = *((_QWORD *)v35 + 6);
      *(_OWORD *)(v34 + 56) = *(_OWORD *)(v35 + 56);
      *(_OWORD *)(v34 + 72) = *(_OWORD *)(v35 + 72);
      v34[88] = v35[88];
      *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
      v36 = *(int *)(v11 + 40);
      v37 = &v34[v36];
      v38 = &v35[v36];
      if (v76(&v35[v36], 1, v15))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v37, v38, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v37, 0, 1, v15);
      }
      v40 = v23[7];
      v41 = (char *)v21 + v40;
      v42 = (char *)v22 + v40;
      *(_OWORD *)v41 = *(_OWORD *)v42;
      v41[16] = v42[16];
      *(_OWORD *)(v41 + 24) = *(_OWORD *)(v42 + 24);
      v41[40] = v42[40];
      *((_QWORD *)v41 + 6) = *((_QWORD *)v42 + 6);
      *(_OWORD *)(v41 + 56) = *(_OWORD *)(v42 + 56);
      *(_OWORD *)(v41 + 72) = *(_OWORD *)(v42 + 72);
      v41[88] = v42[88];
      *((_OWORD *)v41 + 6) = *((_OWORD *)v42 + 6);
      v43 = *(int *)(v11 + 40);
      v44 = &v41[v43];
      v45 = &v42[v43];
      if (v76(&v42[v43], 1, v15))
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        v47 = v75;
      }
      else
      {
        v48 = v45;
        v47 = v75;
        (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v44, v48, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v44, 0, 1, v15);
      }
      v49 = v23[8];
      v50 = (char *)v21 + v49;
      v51 = (char *)v22 + v49;
      *(_OWORD *)v50 = *(_OWORD *)v51;
      v50[16] = v51[16];
      *(_OWORD *)(v50 + 24) = *(_OWORD *)(v51 + 24);
      v50[40] = v51[40];
      *((_QWORD *)v50 + 6) = *((_QWORD *)v51 + 6);
      *(_OWORD *)(v50 + 56) = *(_OWORD *)(v51 + 56);
      *(_OWORD *)(v50 + 72) = *(_OWORD *)(v51 + 72);
      v50[88] = v51[88];
      *((_OWORD *)v50 + 6) = *((_OWORD *)v51 + 6);
      v52 = *(int *)(v11 + 40);
      v53 = &v50[v52];
      v54 = &v51[v52];
      if (v76(&v51[v52], 1, v15))
      {
        v55 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v53, v54, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v53, 0, 1, v15);
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v74 + 56))(v21, 0, 1, v23);
    }
    v56 = a3[7];
    v57 = a3[8];
    v58 = (_QWORD *)(a1 + v56);
    v59 = (uint64_t *)((char *)a2 + v56);
    v60 = (void *)v59[1];
    *v58 = *v59;
    v58[1] = v60;
    v61 = (_QWORD *)(a1 + v57);
    v62 = (uint64_t *)((char *)a2 + v57);
    v63 = v62[1];
    *v61 = *v62;
    v61[1] = v63;
    v64 = a3[10];
    *(_QWORD *)(a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(_BYTE *)(a1 + v64) = *((_BYTE *)a2 + v64);
    v65 = a3[11];
    v77 = a1;
    v66 = (void *)(a1 + v65);
    v67 = (char *)a2 + v65;
    v68 = sub_190A46C30();
    v69 = *(_QWORD *)(v68 - 8);
    v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
    swift_retain();
    v71 = v60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v70(v67, 1, v68))
    {
      v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v69 + 16))(v66, v67, v68);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
    }
    return v77;
  }
  return v19;
}

uint64_t sub_1909A3EF4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  v4 = a1 + a2[6];
  v5 = type metadata accessor for MetricsRequest(0);
  v6 = v4 + *(int *)(v5 + 40);
  v7 = sub_190A46EE8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v10 = v4 + *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v11 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11))
  {
    v12 = *(int *)(v5 + 40);
    v13 = v10 + v11[5] + v12;
    if (!v9(v13, 1, v7))
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
      v12 = *(int *)(v5 + 40);
    }
    v14 = v10 + v11[6] + v12;
    if (!v9(v14, 1, v7))
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v14, v7);
      v12 = *(int *)(v5 + 40);
    }
    v15 = v10 + v11[7] + v12;
    if (!v9(v15, 1, v7))
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v15, v7);
      v12 = *(int *)(v5 + 40);
    }
    v16 = v10 + v11[8] + v12;
    if (!v9(v16, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v16, v7);
  }
  v17 = a1 + a2[7];
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = a1 + a2[11];
  v19 = sub_190A46C30();
  v20 = *(_QWORD *)(v19 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  return result;
}

uint64_t sub_1909A412C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  void *v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  const void *v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int (*v67)(const void *, uint64_t, uint64_t);
  id v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(const void *, uint64_t, uint64_t);
  uint64_t v74;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, a2 + 8);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(a2 + v7 + 16);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(_BYTE *)(v8 + 40) = *(_BYTE *)(a2 + v7 + 40);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(a2 + v7 + 48);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(a2 + v7 + 56);
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(a2 + v7 + 72);
  *(_BYTE *)(v8 + 88) = *(_BYTE *)(a2 + v7 + 88);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(a2 + v7 + 96);
  v10 = type metadata accessor for MetricsRequest(0);
  v11 = *(int *)(v10 + 40);
  v12 = (void *)(v8 + v11);
  v13 = (const void *)(v9 + v11);
  v14 = sub_190A46EE8();
  v15 = *(_QWORD *)(v14 - 8);
  v73 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  if (v73(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v18 = (_OWORD *)(v8 + v17);
  v19 = (_OWORD *)(v9 + v17);
  v20 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v21 = *((_QWORD *)v20 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v71 = v21;
    v72 = v15;
    *v18 = *v19;
    v23 = v20[5];
    v24 = (char *)v18 + v23;
    v25 = (char *)v19 + v23;
    v24[16] = v25[16];
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 24) = *(_OWORD *)(v25 + 24);
    v24[40] = v25[40];
    *((_QWORD *)v24 + 6) = *((_QWORD *)v25 + 6);
    *(_OWORD *)(v24 + 56) = *(_OWORD *)(v25 + 56);
    *(_OWORD *)(v24 + 72) = *(_OWORD *)(v25 + 72);
    v24[88] = v25[88];
    *((_OWORD *)v24 + 6) = *((_OWORD *)v25 + 6);
    v26 = *(int *)(v10 + 40);
    v27 = &v24[v26];
    v28 = &v25[v26];
    if (v73(&v25[v26], 1, v14))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v27, v28, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v27, 0, 1, v14);
    }
    v30 = v20[6];
    v31 = (char *)v18 + v30;
    v32 = (char *)v19 + v30;
    *(_OWORD *)v31 = *(_OWORD *)v32;
    v31[16] = v32[16];
    *(_OWORD *)(v31 + 24) = *(_OWORD *)(v32 + 24);
    v31[40] = v32[40];
    *((_QWORD *)v31 + 6) = *((_QWORD *)v32 + 6);
    *(_OWORD *)(v31 + 56) = *(_OWORD *)(v32 + 56);
    *(_OWORD *)(v31 + 72) = *(_OWORD *)(v32 + 72);
    v31[88] = v32[88];
    *((_OWORD *)v31 + 6) = *((_OWORD *)v32 + 6);
    v33 = *(int *)(v10 + 40);
    v34 = &v31[v33];
    v35 = &v32[v33];
    if (v73(&v32[v33], 1, v14))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v34, v35, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v34, 0, 1, v14);
    }
    v37 = v20[7];
    v38 = (char *)v18 + v37;
    v39 = (char *)v19 + v37;
    *(_OWORD *)v38 = *(_OWORD *)v39;
    v38[16] = v39[16];
    *(_OWORD *)(v38 + 24) = *(_OWORD *)(v39 + 24);
    v38[40] = v39[40];
    *((_QWORD *)v38 + 6) = *((_QWORD *)v39 + 6);
    *(_OWORD *)(v38 + 56) = *(_OWORD *)(v39 + 56);
    *(_OWORD *)(v38 + 72) = *(_OWORD *)(v39 + 72);
    v38[88] = v39[88];
    *((_OWORD *)v38 + 6) = *((_OWORD *)v39 + 6);
    v40 = *(int *)(v10 + 40);
    v41 = &v38[v40];
    v42 = &v39[v40];
    if (v73(&v39[v40], 1, v14))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      v44 = v72;
    }
    else
    {
      v45 = v42;
      v44 = v72;
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v41, v45, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v41, 0, 1, v14);
    }
    v46 = v20[8];
    v47 = (char *)v18 + v46;
    v48 = (char *)v19 + v46;
    *(_OWORD *)v47 = *(_OWORD *)v48;
    v47[16] = v48[16];
    *(_OWORD *)(v47 + 24) = *(_OWORD *)(v48 + 24);
    v47[40] = v48[40];
    *((_QWORD *)v47 + 6) = *((_QWORD *)v48 + 6);
    *(_OWORD *)(v47 + 56) = *(_OWORD *)(v48 + 56);
    *(_OWORD *)(v47 + 72) = *(_OWORD *)(v48 + 72);
    v47[88] = v48[88];
    *((_OWORD *)v47 + 6) = *((_OWORD *)v48 + 6);
    v49 = *(int *)(v10 + 40);
    v50 = &v47[v49];
    v51 = &v48[v49];
    if (v73(&v48[v49], 1, v14))
    {
      v52 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v50, v51, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v50, 0, 1, v14);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v71 + 56))(v18, 0, 1, v20);
  }
  v53 = a3[7];
  v54 = a3[8];
  v55 = (_QWORD *)(a1 + v53);
  v56 = (_QWORD *)(a2 + v53);
  v57 = (void *)v56[1];
  *v55 = *v56;
  v55[1] = v57;
  v58 = (_QWORD *)(a1 + v54);
  v59 = (_QWORD *)(a2 + v54);
  v60 = v59[1];
  *v58 = *v59;
  v58[1] = v60;
  v61 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v61) = *(_BYTE *)(a2 + v61);
  v62 = a3[11];
  v74 = a1;
  v63 = (void *)(a1 + v62);
  v64 = (const void *)(a2 + v62);
  v65 = sub_190A46C30();
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v66 + 48);
  swift_retain();
  v68 = v57;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v67(v64, 1, v65))
  {
    v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v66 + 16))(v63, v64, v65);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
  }
  return v74;
}

_QWORD *sub_1909A4734(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int *v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, int *);
  int v28;
  int v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  size_t v41;
  char *v42;
  char *v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int v55;
  int v56;
  uint64_t v57;
  char *v58;
  char *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  void *v93;
  void *v94;
  id v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t (*v104)(char *, uint64_t, uint64_t);
  int v105;
  uint64_t v106;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;
  char *v117;
  char *v118;
  int v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  char *v130;
  char *v131;
  int v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  uint64_t v142;
  char *v143;
  char *v144;
  int v145;
  int v146;
  int *v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;

  *a1 = *a2;
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v149 = a2;
  v8 = (char *)a2 + v6;
  v9 = *(_OWORD *)((char *)a2 + v6);
  v7[16] = *((_BYTE *)a2 + v6 + 16);
  *(_OWORD *)v7 = v9;
  v10 = *(_OWORD *)((char *)a2 + v6 + 24);
  v7[40] = *((_BYTE *)a2 + v6 + 40);
  *(_OWORD *)(v7 + 24) = v10;
  *((_QWORD *)v7 + 6) = *(_QWORD *)((char *)a2 + v6 + 48);
  v11 = *(_OWORD *)((char *)a2 + v6 + 56);
  v12 = *(_OWORD *)((char *)a2 + v6 + 72);
  v7[88] = *((_BYTE *)a2 + v6 + 88);
  *(_OWORD *)(v7 + 72) = v12;
  *(_OWORD *)(v7 + 56) = v11;
  *((_QWORD *)v7 + 12) = *(_QWORD *)((char *)a2 + v6 + 96);
  *((_QWORD *)v7 + 13) = *(_QWORD *)((char *)a2 + v6 + 104);
  v150 = type metadata accessor for MetricsRequest(0);
  v13 = *(int *)(v150 + 40);
  v14 = &v7[v13];
  v15 = &v8[v13];
  v16 = sub_190A46EE8();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  v148 = v17;
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
LABEL_7:
  v22 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v23 = &v7[v22];
  v24 = &v8[v22];
  v25 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v26 = *((_QWORD *)v25 - 1);
  v27 = *(uint64_t (**)(char *, uint64_t, int *))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (v29)
    {
      sub_1908B5150((uint64_t)v23, type metadata accessor for JindoMetricsDefinition);
      goto LABEL_13;
    }
    v44 = a3;
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
    v45 = v25[5];
    v46 = &v23[v45];
    v47 = &v24[v45];
    v48 = *(_OWORD *)v47;
    v46[16] = v47[16];
    *(_OWORD *)v46 = v48;
    v49 = *(_OWORD *)(v47 + 24);
    v46[40] = v47[40];
    *(_OWORD *)(v46 + 24) = v49;
    *((_QWORD *)v46 + 6) = *((_QWORD *)v47 + 6);
    v50 = *(_OWORD *)(v47 + 56);
    v51 = *(_OWORD *)(v47 + 72);
    v46[88] = v47[88];
    *(_OWORD *)(v46 + 72) = v51;
    *(_OWORD *)(v46 + 56) = v50;
    *((_QWORD *)v46 + 12) = *((_QWORD *)v47 + 12);
    *((_QWORD *)v46 + 13) = *((_QWORD *)v47 + 13);
    v52 = *(int *)(v150 + 40);
    v53 = &v46[v52];
    v54 = &v47[v52];
    v55 = v18(&v46[v52], 1, v16);
    v56 = v18(v54, 1, v16);
    if (v55)
    {
      if (!v56)
      {
        (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v53, v54, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v53, 0, 1, v16);
        goto LABEL_41;
      }
    }
    else
    {
      if (!v56)
      {
        (*(void (**)(char *, char *, uint64_t))(v148 + 24))(v53, v54, v16);
LABEL_41:
        v109 = v25[6];
        v110 = &v23[v109];
        v111 = &v24[v109];
        v112 = *(_OWORD *)v111;
        v110[16] = v111[16];
        *(_OWORD *)v110 = v112;
        v113 = *(_OWORD *)(v111 + 24);
        v110[40] = v111[40];
        *(_OWORD *)(v110 + 24) = v113;
        *((_QWORD *)v110 + 6) = *((_QWORD *)v111 + 6);
        v114 = *(_OWORD *)(v111 + 56);
        v115 = *(_OWORD *)(v111 + 72);
        v110[88] = v111[88];
        *(_OWORD *)(v110 + 72) = v115;
        *(_OWORD *)(v110 + 56) = v114;
        *((_QWORD *)v110 + 12) = *((_QWORD *)v111 + 12);
        *((_QWORD *)v110 + 13) = *((_QWORD *)v111 + 13);
        v116 = *(int *)(v150 + 40);
        v117 = &v110[v116];
        v118 = &v111[v116];
        v119 = v18(&v110[v116], 1, v16);
        v120 = v18(v118, 1, v16);
        if (v119)
        {
          if (!v120)
          {
            (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v117, v118, v16);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v117, 0, 1, v16);
            goto LABEL_47;
          }
        }
        else
        {
          if (!v120)
          {
            (*(void (**)(char *, char *, uint64_t))(v148 + 24))(v117, v118, v16);
LABEL_47:
            v122 = v25[7];
            v123 = &v23[v122];
            v124 = &v24[v122];
            v125 = *(_OWORD *)v124;
            v123[16] = v124[16];
            *(_OWORD *)v123 = v125;
            v126 = *(_OWORD *)(v124 + 24);
            v123[40] = v124[40];
            *(_OWORD *)(v123 + 24) = v126;
            *((_QWORD *)v123 + 6) = *((_QWORD *)v124 + 6);
            v127 = *(_OWORD *)(v124 + 56);
            v128 = *(_OWORD *)(v124 + 72);
            v123[88] = v124[88];
            *(_OWORD *)(v123 + 72) = v128;
            *(_OWORD *)(v123 + 56) = v127;
            *((_QWORD *)v123 + 12) = *((_QWORD *)v124 + 12);
            *((_QWORD *)v123 + 13) = *((_QWORD *)v124 + 13);
            v129 = *(int *)(v150 + 40);
            v130 = &v123[v129];
            v131 = &v124[v129];
            v132 = v18(&v123[v129], 1, v16);
            v133 = v18(v131, 1, v16);
            if (v132)
            {
              if (!v133)
              {
                (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v130, v131, v16);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v130, 0, 1, v16);
LABEL_53:
                v135 = v25[8];
                v136 = &v23[v135];
                v137 = &v24[v135];
                v138 = *(_OWORD *)v137;
                v136[16] = v137[16];
                *(_OWORD *)v136 = v138;
                v139 = *(_OWORD *)(v137 + 24);
                v136[40] = v137[40];
                *(_OWORD *)(v136 + 24) = v139;
                *((_QWORD *)v136 + 6) = *((_QWORD *)v137 + 6);
                v140 = *(_OWORD *)(v137 + 56);
                v141 = *(_OWORD *)(v137 + 72);
                v136[88] = v137[88];
                *(_OWORD *)(v136 + 72) = v141;
                *(_OWORD *)(v136 + 56) = v140;
                *((_QWORD *)v136 + 12) = *((_QWORD *)v137 + 12);
                *((_QWORD *)v136 + 13) = *((_QWORD *)v137 + 13);
                v142 = *(int *)(v150 + 40);
                v143 = &v136[v142];
                v144 = &v137[v142];
                v145 = v18(&v136[v142], 1, v16);
                v146 = v18(v144, 1, v16);
                a3 = v44;
                if (v145)
                {
                  if (!v146)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v143, v144, v16);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v143, 0, 1, v16);
                    goto LABEL_30;
                  }
                }
                else
                {
                  if (!v146)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v148 + 24))(v143, v144, v16);
                    goto LABEL_30;
                  }
                  (*(void (**)(char *, uint64_t))(v148 + 8))(v143, v16);
                }
                v41 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0) - 8) + 64);
                v42 = v143;
                v43 = v144;
LABEL_14:
                memcpy(v42, v43, v41);
                goto LABEL_30;
              }
            }
            else
            {
              if (!v133)
              {
                (*(void (**)(char *, char *, uint64_t))(v148 + 24))(v130, v131, v16);
                goto LABEL_53;
              }
              (*(void (**)(char *, uint64_t))(v148 + 8))(v130, v16);
            }
            v134 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
            memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
            goto LABEL_53;
          }
          (*(void (**)(char *, uint64_t))(v148 + 8))(v117, v16);
        }
        v121 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
        goto LABEL_47;
      }
      (*(void (**)(char *, uint64_t))(v148 + 8))(v53, v16);
    }
    v108 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    goto LABEL_41;
  }
  if (v29)
  {
LABEL_13:
    v41 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0) - 8) + 64);
    v42 = v23;
    v43 = v24;
    goto LABEL_14;
  }
  v147 = a3;
  *(_OWORD *)v23 = *(_OWORD *)v24;
  v30 = v25[5];
  v31 = &v23[v30];
  v32 = &v24[v30];
  v33 = *(_OWORD *)v32;
  v31[16] = v32[16];
  *(_OWORD *)v31 = v33;
  v34 = *(_OWORD *)(v32 + 24);
  v31[40] = v32[40];
  *(_OWORD *)(v31 + 24) = v34;
  *((_QWORD *)v31 + 6) = *((_QWORD *)v32 + 6);
  v35 = *(_OWORD *)(v32 + 56);
  v36 = *(_OWORD *)(v32 + 72);
  v31[88] = v32[88];
  *(_OWORD *)(v31 + 72) = v36;
  *(_OWORD *)(v31 + 56) = v35;
  *((_QWORD *)v31 + 12) = *((_QWORD *)v32 + 12);
  *((_QWORD *)v31 + 13) = *((_QWORD *)v32 + 13);
  v37 = *(int *)(v150 + 40);
  v38 = &v31[v37];
  v39 = &v32[v37];
  if (v18(&v32[v37], 1, v16))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v38, v39, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v38, 0, 1, v16);
  }
  v57 = v25[6];
  v58 = &v23[v57];
  v59 = &v24[v57];
  v60 = *(_OWORD *)v59;
  v58[16] = v59[16];
  *(_OWORD *)v58 = v60;
  v61 = *(_OWORD *)(v59 + 24);
  v58[40] = v59[40];
  *(_OWORD *)(v58 + 24) = v61;
  *((_QWORD *)v58 + 6) = *((_QWORD *)v59 + 6);
  v62 = *(_OWORD *)(v59 + 56);
  v63 = *(_OWORD *)(v59 + 72);
  v58[88] = v59[88];
  *(_OWORD *)(v58 + 72) = v63;
  *(_OWORD *)(v58 + 56) = v62;
  *((_QWORD *)v58 + 12) = *((_QWORD *)v59 + 12);
  *((_QWORD *)v58 + 13) = *((_QWORD *)v59 + 13);
  v64 = *(int *)(v150 + 40);
  v65 = &v58[v64];
  v66 = &v59[v64];
  if (v18(&v59[v64], 1, v16))
  {
    v67 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v65, v66, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v65, 0, 1, v16);
  }
  v68 = v25[7];
  v69 = &v23[v68];
  v70 = &v24[v68];
  v71 = *(_OWORD *)v70;
  v69[16] = v70[16];
  *(_OWORD *)v69 = v71;
  v72 = *(_OWORD *)(v70 + 24);
  v69[40] = v70[40];
  *(_OWORD *)(v69 + 24) = v72;
  *((_QWORD *)v69 + 6) = *((_QWORD *)v70 + 6);
  v73 = *(_OWORD *)(v70 + 56);
  v74 = *(_OWORD *)(v70 + 72);
  v69[88] = v70[88];
  *(_OWORD *)(v69 + 72) = v74;
  *(_OWORD *)(v69 + 56) = v73;
  *((_QWORD *)v69 + 12) = *((_QWORD *)v70 + 12);
  *((_QWORD *)v69 + 13) = *((_QWORD *)v70 + 13);
  v75 = *(int *)(v150 + 40);
  v76 = &v69[v75];
  v77 = &v70[v75];
  if (v18(&v70[v75], 1, v16))
  {
    v78 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v76, v77, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v76, 0, 1, v16);
  }
  v79 = v25[8];
  v80 = &v23[v79];
  v81 = &v24[v79];
  v82 = *(_OWORD *)v81;
  v80[16] = v81[16];
  *(_OWORD *)v80 = v82;
  v83 = *(_OWORD *)(v81 + 24);
  v80[40] = v81[40];
  *(_OWORD *)(v80 + 24) = v83;
  *((_QWORD *)v80 + 6) = *((_QWORD *)v81 + 6);
  v84 = *(_OWORD *)(v81 + 56);
  v85 = *(_OWORD *)(v81 + 72);
  v80[88] = v81[88];
  *(_OWORD *)(v80 + 72) = v85;
  *(_OWORD *)(v80 + 56) = v84;
  *((_QWORD *)v80 + 12) = *((_QWORD *)v81 + 12);
  *((_QWORD *)v80 + 13) = *((_QWORD *)v81 + 13);
  v86 = *(int *)(v150 + 40);
  v87 = &v80[v86];
  v88 = &v81[v86];
  a3 = v147;
  if (v18(&v81[v86], 1, v16))
  {
    v89 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v87, v88, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v87, 0, 1, v16);
  }
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v26 + 56))(v23, 0, 1, v25);
LABEL_30:
  v90 = a3[7];
  v91 = (char *)a1 + v90;
  v92 = (char *)v149 + v90;
  *(_QWORD *)((char *)a1 + v90) = *(_QWORD *)((char *)v149 + v90);
  swift_retain();
  swift_release();
  v93 = (void *)*((_QWORD *)v92 + 1);
  v94 = (void *)*((_QWORD *)v91 + 1);
  *((_QWORD *)v91 + 1) = v93;
  v95 = v93;

  v96 = a3[8];
  v97 = (char *)a1 + v96;
  v98 = (char *)v149 + v96;
  *(_QWORD *)((char *)a1 + v96) = *(_QWORD *)((char *)v149 + v96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v97 + 1) = *((_QWORD *)v98 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)v149 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)v149 + a3[10]);
  v99 = a3[11];
  v100 = (char *)a1 + v99;
  v101 = (char *)v149 + v99;
  v102 = sub_190A46C30();
  v103 = *(_QWORD *)(v102 - 8);
  v104 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v103 + 48);
  LODWORD(v98) = v104(v100, 1, v102);
  v105 = v104(v101, 1, v102);
  if (!(_DWORD)v98)
  {
    if (!v105)
    {
      (*(void (**)(char *, char *, uint64_t))(v103 + 24))(v100, v101, v102);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v103 + 8))(v100, v102);
    goto LABEL_35;
  }
  if (v105)
  {
LABEL_35:
    v106 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
    memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v100, v101, v102);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
  return a1;
}

uint64_t sub_1909A52D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  const void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(const void *, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_OWORD *)v7 = *(_OWORD *)(a2 + v6);
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(a2 + v6 + 16);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)(a2 + v6 + 24);
  *(_BYTE *)(v7 + 40) = *(_BYTE *)(a2 + v6 + 40);
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(a2 + v6 + 48);
  v9 = *(_OWORD *)(a2 + v6 + 56);
  v10 = *(_OWORD *)(a2 + v6 + 72);
  *(_BYTE *)(v7 + 88) = *(_BYTE *)(a2 + v6 + 88);
  *(_OWORD *)(v7 + 72) = v10;
  *(_OWORD *)(v7 + 56) = v9;
  *(_OWORD *)(v7 + 96) = *(_OWORD *)(a2 + v6 + 96);
  v11 = type metadata accessor for MetricsRequest(0);
  v12 = *(int *)(v11 + 40);
  v13 = (void *)(v7 + v12);
  v14 = (const void *)(v8 + v12);
  v15 = sub_190A46EE8();
  v16 = *(_QWORD *)(v15 - 8);
  v65 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  if (v65(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v19 = (_OWORD *)(v7 + v18);
  v20 = (_OWORD *)(v8 + v18);
  v21 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v22 = *((_QWORD *)v21 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v63 = v22;
    v64 = v16;
    *v19 = *v20;
    v24 = v21[5];
    v25 = (char *)v19 + v24;
    v26 = (char *)v20 + v24;
    v25[16] = v26[16];
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 24) = *(_OWORD *)(v26 + 24);
    v25[40] = v26[40];
    *((_QWORD *)v25 + 6) = *((_QWORD *)v26 + 6);
    *(_OWORD *)(v25 + 56) = *(_OWORD *)(v26 + 56);
    *(_OWORD *)(v25 + 72) = *(_OWORD *)(v26 + 72);
    v25[88] = v26[88];
    *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
    v27 = *(int *)(v11 + 40);
    v28 = &v25[v27];
    v29 = &v26[v27];
    if (v65(&v26[v27], 1, v15))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v28, v29, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v28, 0, 1, v15);
    }
    v31 = v21[6];
    v32 = (char *)v19 + v31;
    v33 = (char *)v20 + v31;
    *(_OWORD *)v32 = *(_OWORD *)v33;
    v32[16] = v33[16];
    *(_OWORD *)(v32 + 24) = *(_OWORD *)(v33 + 24);
    v32[40] = v33[40];
    *((_QWORD *)v32 + 6) = *((_QWORD *)v33 + 6);
    *(_OWORD *)(v32 + 56) = *(_OWORD *)(v33 + 56);
    *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
    v32[88] = v33[88];
    *((_OWORD *)v32 + 6) = *((_OWORD *)v33 + 6);
    v34 = *(int *)(v11 + 40);
    v35 = &v32[v34];
    v36 = &v33[v34];
    if (v65(&v33[v34], 1, v15))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v35, v36, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v35, 0, 1, v15);
    }
    v38 = v21[7];
    v39 = (char *)v19 + v38;
    v40 = (char *)v20 + v38;
    *(_OWORD *)v39 = *(_OWORD *)v40;
    v39[16] = v40[16];
    *(_OWORD *)(v39 + 24) = *(_OWORD *)(v40 + 24);
    v39[40] = v40[40];
    *((_QWORD *)v39 + 6) = *((_QWORD *)v40 + 6);
    *(_OWORD *)(v39 + 56) = *(_OWORD *)(v40 + 56);
    *(_OWORD *)(v39 + 72) = *(_OWORD *)(v40 + 72);
    v39[88] = v40[88];
    *((_OWORD *)v39 + 6) = *((_OWORD *)v40 + 6);
    v41 = *(int *)(v11 + 40);
    v42 = &v39[v41];
    v43 = &v40[v41];
    if (v65(&v40[v41], 1, v15))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      v45 = v64;
    }
    else
    {
      v46 = v43;
      v45 = v64;
      (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v42, v46, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v42, 0, 1, v15);
    }
    v47 = v21[8];
    v48 = (char *)v19 + v47;
    v49 = (char *)v20 + v47;
    *(_OWORD *)v48 = *(_OWORD *)v49;
    v48[16] = v49[16];
    *(_OWORD *)(v48 + 24) = *(_OWORD *)(v49 + 24);
    v48[40] = v49[40];
    *((_QWORD *)v48 + 6) = *((_QWORD *)v49 + 6);
    *(_OWORD *)(v48 + 56) = *(_OWORD *)(v49 + 56);
    *(_OWORD *)(v48 + 72) = *(_OWORD *)(v49 + 72);
    v48[88] = v49[88];
    *((_OWORD *)v48 + 6) = *((_OWORD *)v49 + 6);
    v50 = *(int *)(v11 + 40);
    v51 = &v48[v50];
    v52 = &v49[v50];
    if (v65(&v49[v50], 1, v15))
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v51, v52, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v51, 0, 1, v15);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v63 + 56))(v19, 0, 1, v21);
  }
  v54 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v54) = *(_OWORD *)(a2 + v54);
  v55 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v55) = *(_BYTE *)(a2 + v55);
  v56 = a3[11];
  v57 = (void *)(a1 + v56);
  v58 = (const void *)(a2 + v56);
  v59 = sub_190A46C30();
  v60 = *(_QWORD *)(v59 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
  {
    v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v60 + 32))(v57, v58, v59);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
  }
  return a1;
}

uint64_t sub_1909A58A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, int *);
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  size_t v36;
  char *v37;
  char *v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(void *, uint64_t, uint64_t);
  int v83;
  int v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  int v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  int v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int *v119;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = a3[6];
  v7 = a1 + v6;
  v117 = a2;
  v8 = a2 + v6;
  *(_OWORD *)v7 = *(_OWORD *)(a2 + v6);
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(a2 + v6 + 16);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)(a2 + v6 + 24);
  *(_BYTE *)(v7 + 40) = *(_BYTE *)(a2 + v6 + 40);
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(a2 + v6 + 48);
  v9 = *(_OWORD *)(a2 + v6 + 56);
  v10 = *(_OWORD *)(a2 + v6 + 72);
  *(_BYTE *)(v7 + 88) = *(_BYTE *)(a2 + v6 + 88);
  *(_OWORD *)(v7 + 72) = v10;
  *(_OWORD *)(v7 + 56) = v9;
  *(_OWORD *)(v7 + 96) = *(_OWORD *)(a2 + v6 + 96);
  v118 = type metadata accessor for MetricsRequest(0);
  v11 = *(int *)(v118 + 40);
  v12 = (void *)(v7 + v11);
  v13 = (void *)(v8 + v11);
  v14 = sub_190A46EE8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  v116 = v15;
  if (v17)
  {
    if (v18)
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  else if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    v20 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
  }
  v21 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v22 = (char *)(v7 + v21);
  v23 = (char *)(v8 + v21);
  v24 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(uint64_t (**)(char *, uint64_t, int *))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      v39 = a3;
      *(_OWORD *)v22 = *(_OWORD *)v23;
      v40 = v24[5];
      v41 = &v22[v40];
      v42 = &v23[v40];
      *(_OWORD *)v41 = *(_OWORD *)v42;
      v41[16] = v42[16];
      *(_OWORD *)(v41 + 24) = *(_OWORD *)(v42 + 24);
      v41[40] = v42[40];
      *((_QWORD *)v41 + 6) = *((_QWORD *)v42 + 6);
      *(_OWORD *)(v41 + 56) = *(_OWORD *)(v42 + 56);
      *(_OWORD *)(v41 + 72) = *(_OWORD *)(v42 + 72);
      v41[88] = v42[88];
      *((_OWORD *)v41 + 6) = *((_OWORD *)v42 + 6);
      v43 = *(int *)(v118 + 40);
      v44 = &v41[v43];
      v45 = &v42[v43];
      v46 = v16(&v41[v43], 1, v14);
      v47 = v16(v45, 1, v14);
      if (v46)
      {
        if (v47)
        {
          v48 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v44, v45, v14);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v44, 0, 1, v14);
        }
      }
      else if (v47)
      {
        (*(void (**)(char *, uint64_t))(v116 + 8))(v44, v14);
        v87 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v116 + 40))(v44, v45, v14);
      }
      v88 = v24[6];
      v89 = &v22[v88];
      v90 = &v23[v88];
      *(_OWORD *)v89 = *(_OWORD *)v90;
      v89[16] = v90[16];
      *(_OWORD *)(v89 + 24) = *(_OWORD *)(v90 + 24);
      v89[40] = v90[40];
      *((_QWORD *)v89 + 6) = *((_QWORD *)v90 + 6);
      *(_OWORD *)(v89 + 56) = *(_OWORD *)(v90 + 56);
      *(_OWORD *)(v89 + 72) = *(_OWORD *)(v90 + 72);
      v89[88] = v90[88];
      *((_OWORD *)v89 + 6) = *((_OWORD *)v90 + 6);
      v91 = *(int *)(v118 + 40);
      v92 = &v89[v91];
      v93 = &v90[v91];
      v94 = v16(&v89[v91], 1, v14);
      v95 = v16(v93, 1, v14);
      if (v94)
      {
        if (v95)
        {
          v96 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
          memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v92, v93, v14);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v92, 0, 1, v14);
        }
      }
      else if (v95)
      {
        (*(void (**)(char *, uint64_t))(v116 + 8))(v92, v14);
        v97 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v116 + 40))(v92, v93, v14);
      }
      v98 = v24[7];
      v99 = &v22[v98];
      v100 = &v23[v98];
      *(_OWORD *)v99 = *(_OWORD *)v100;
      v99[16] = v100[16];
      *(_OWORD *)(v99 + 24) = *(_OWORD *)(v100 + 24);
      v99[40] = v100[40];
      *((_QWORD *)v99 + 6) = *((_QWORD *)v100 + 6);
      *(_OWORD *)(v99 + 56) = *(_OWORD *)(v100 + 56);
      *(_OWORD *)(v99 + 72) = *(_OWORD *)(v100 + 72);
      v99[88] = v100[88];
      *((_OWORD *)v99 + 6) = *((_OWORD *)v100 + 6);
      v101 = *(int *)(v118 + 40);
      v102 = &v99[v101];
      v103 = &v100[v101];
      v104 = v16(&v99[v101], 1, v14);
      v105 = v16(v103, 1, v14);
      if (v104)
      {
        if (v105)
        {
          v106 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
          memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v102, v103, v14);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v102, 0, 1, v14);
        }
      }
      else if (v105)
      {
        (*(void (**)(char *, uint64_t))(v116 + 8))(v102, v14);
        v107 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v116 + 40))(v102, v103, v14);
      }
      v108 = v24[8];
      v109 = &v22[v108];
      v110 = &v23[v108];
      *(_OWORD *)v109 = *(_OWORD *)v110;
      v109[16] = v110[16];
      *(_OWORD *)(v109 + 24) = *(_OWORD *)(v110 + 24);
      v109[40] = v110[40];
      *((_QWORD *)v109 + 6) = *((_QWORD *)v110 + 6);
      *(_OWORD *)(v109 + 56) = *(_OWORD *)(v110 + 56);
      *(_OWORD *)(v109 + 72) = *(_OWORD *)(v110 + 72);
      v109[88] = v110[88];
      *((_OWORD *)v109 + 6) = *((_OWORD *)v110 + 6);
      v111 = *(int *)(v118 + 40);
      v112 = &v109[v111];
      v113 = &v110[v111];
      v114 = v16(&v109[v111], 1, v14);
      v115 = v16(v113, 1, v14);
      a3 = v39;
      if (v114)
      {
        if (!v115)
        {
          (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v112, v113, v14);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v112, 0, 1, v14);
          goto LABEL_30;
        }
      }
      else
      {
        if (!v115)
        {
          (*(void (**)(char *, char *, uint64_t))(v116 + 40))(v112, v113, v14);
          goto LABEL_30;
        }
        (*(void (**)(char *, uint64_t))(v116 + 8))(v112, v14);
      }
      v36 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0) - 8) + 64);
      v37 = v112;
      v38 = v113;
LABEL_15:
      memcpy(v37, v38, v36);
      goto LABEL_30;
    }
    sub_1908B5150((uint64_t)v22, type metadata accessor for JindoMetricsDefinition);
LABEL_14:
    v36 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0) - 8) + 64);
    v37 = v22;
    v38 = v23;
    goto LABEL_15;
  }
  if (v28)
    goto LABEL_14;
  v119 = a3;
  *(_OWORD *)v22 = *(_OWORD *)v23;
  v29 = v24[5];
  v30 = &v22[v29];
  v31 = &v23[v29];
  v30[16] = v31[16];
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 24) = *(_OWORD *)(v31 + 24);
  v30[40] = v31[40];
  *((_QWORD *)v30 + 6) = *((_QWORD *)v31 + 6);
  *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
  *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
  v30[88] = v31[88];
  *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
  v32 = *(int *)(v118 + 40);
  v33 = &v30[v32];
  v34 = &v31[v32];
  if (v16(&v31[v32], 1, v14))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v33, v34, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v33, 0, 1, v14);
  }
  v49 = v24[6];
  v50 = &v22[v49];
  v51 = &v23[v49];
  *(_OWORD *)v50 = *(_OWORD *)v51;
  v50[16] = v51[16];
  *(_OWORD *)(v50 + 24) = *(_OWORD *)(v51 + 24);
  v50[40] = v51[40];
  *((_QWORD *)v50 + 6) = *((_QWORD *)v51 + 6);
  *(_OWORD *)(v50 + 56) = *(_OWORD *)(v51 + 56);
  *(_OWORD *)(v50 + 72) = *(_OWORD *)(v51 + 72);
  v50[88] = v51[88];
  *((_OWORD *)v50 + 6) = *((_OWORD *)v51 + 6);
  v52 = *(int *)(v118 + 40);
  v53 = &v50[v52];
  v54 = &v51[v52];
  if (v16(&v51[v52], 1, v14))
  {
    v55 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v53, v54, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v53, 0, 1, v14);
  }
  v56 = v24[7];
  v57 = &v22[v56];
  v58 = &v23[v56];
  *(_OWORD *)v57 = *(_OWORD *)v58;
  v57[16] = v58[16];
  *(_OWORD *)(v57 + 24) = *(_OWORD *)(v58 + 24);
  v57[40] = v58[40];
  *((_QWORD *)v57 + 6) = *((_QWORD *)v58 + 6);
  *(_OWORD *)(v57 + 56) = *(_OWORD *)(v58 + 56);
  *(_OWORD *)(v57 + 72) = *(_OWORD *)(v58 + 72);
  v57[88] = v58[88];
  *((_OWORD *)v57 + 6) = *((_OWORD *)v58 + 6);
  v59 = *(int *)(v118 + 40);
  v60 = &v57[v59];
  v61 = &v58[v59];
  if (v16(&v58[v59], 1, v14))
  {
    v62 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v60, v61, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v60, 0, 1, v14);
  }
  v63 = v24[8];
  v64 = &v22[v63];
  v65 = &v23[v63];
  *(_OWORD *)v64 = *(_OWORD *)v65;
  v64[16] = v65[16];
  *(_OWORD *)(v64 + 24) = *(_OWORD *)(v65 + 24);
  v64[40] = v65[40];
  *((_QWORD *)v64 + 6) = *((_QWORD *)v65 + 6);
  *(_OWORD *)(v64 + 56) = *(_OWORD *)(v65 + 56);
  *(_OWORD *)(v64 + 72) = *(_OWORD *)(v65 + 72);
  v64[88] = v65[88];
  *((_OWORD *)v64 + 6) = *((_OWORD *)v65 + 6);
  v66 = *(int *)(v118 + 40);
  v67 = &v64[v66];
  v68 = &v65[v66];
  a3 = v119;
  if (v16(&v65[v66], 1, v14))
  {
    v69 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v67, v68, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v67, 0, 1, v14);
  }
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
LABEL_30:
  v70 = a3[7];
  v71 = a1 + v70;
  v72 = v117 + v70;
  *(_QWORD *)(a1 + v70) = *(_QWORD *)(v117 + v70);
  swift_release();
  v73 = *(void **)(v71 + 8);
  *(_QWORD *)(v71 + 8) = *(_QWORD *)(v72 + 8);

  v74 = a3[8];
  v75 = a1 + v74;
  v76 = v117 + v74;
  *(_QWORD *)(a1 + v74) = *(_QWORD *)(v117 + v74);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v75 + 8) = *(_QWORD *)(v76 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(v117 + a3[9]);
  swift_bridgeObjectRelease();
  v77 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(v117 + a3[10]);
  v78 = (void *)(a1 + v77);
  v79 = (void *)(v117 + v77);
  v80 = sub_190A46C30();
  v81 = *(_QWORD *)(v80 - 8);
  v82 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v81 + 48);
  v83 = v82(v78, 1, v80);
  v84 = v82(v79, 1, v80);
  if (!v83)
  {
    if (!v84)
    {
      (*(void (**)(void *, void *, uint64_t))(v81 + 40))(v78, v79, v80);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v81 + 8))(v78, v80);
    goto LABEL_35;
  }
  if (v84)
  {
LABEL_35:
    v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v81 + 32))(v78, v79, v80);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
  return a1;
}

uint64_t sub_1909A64C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909A64CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ActivityMetricsDefinition(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1909A6570()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909A657C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 32) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for ActivityMetricsDefinition(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for JindoViewStates(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1EE1EABB0);
}

void sub_1909A6630()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for ActivityMetricsDefinition(319);
  if (v0 <= 0x3F)
  {
    sub_1908BBFB0(319, (unint64_t *)&qword_1ECF6BCE8, (void (*)(uint64_t))MEMORY[0x1E0CDAA30]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1909A6700(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  __int128 v12;
  char v13;
  char v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6750);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909A9F54();
  sub_190A48850();
  v12 = *v3;
  v15 = 0;
  sub_19091BFBC();
  sub_190A48640();
  if (!v2)
  {
    *(_QWORD *)&v12 = *((_QWORD *)v3 + 2);
    v15 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EACF0);
    sub_1909AA024(&qword_1EE1E66F0, (uint64_t (*)(void))sub_1909AA098, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEA0B8]);
    sub_190A48640();
    v9 = *((_BYTE *)v3 + 40);
    v10 = *((_BYTE *)v3 + 41);
    v12 = *(__int128 *)((char *)v3 + 24);
    v13 = v9;
    v14 = v10;
    v15 = 2;
    sub_19097BEC8();
    sub_190A485EC();
    type metadata accessor for JindoViewStates.Metadata(0);
    LOBYTE(v12) = 3;
    sub_190A45FC4();
    sub_1908AA2F4(&qword_1ECF6C648, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_190A485EC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1909A6928@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  char v33;
  char v34;
  char v35;

  v27 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6AB8);
  v6 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for JindoViewStates.Metadata(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0DEE9E0];
  *((_QWORD *)v12 + 3) = 0;
  *((_QWORD *)v12 + 4) = 0;
  *((_QWORD *)v12 + 2) = v13;
  *((_WORD *)v12 + 20) = 256;
  v14 = (uint64_t)&v12[*(int *)(v10 + 28)];
  v15 = sub_190A45FC4();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v30 = v14;
  v16(v14, 1, 1, v15);
  v17 = a1[3];
  v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_1909A9F54();
  v18 = v31;
  sub_190A48838();
  if (v18)
  {
    v21 = v30;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    swift_bridgeObjectRelease();
    return sub_1908AA544(v21, (uint64_t *)&unk_1ECF6C858);
  }
  else
  {
    v19 = (uint64_t)v5;
    v35 = 0;
    sub_19091BE58();
    v20 = v28;
    sub_190A48580();
    *(_OWORD *)v12 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EACF0);
    v35 = 1;
    sub_1909AA024(&qword_1EE1E6A60, (uint64_t (*)(void))sub_1909A9F98, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEA0D8]);
    sub_190A48580();
    *((_QWORD *)v12 + 2) = v32;
    v35 = 2;
    sub_19097BF94();
    sub_190A4852C();
    v22 = v33;
    v23 = v34;
    *(_OWORD *)(v12 + 24) = v32;
    v12[40] = v22;
    v12[41] = v23;
    LOBYTE(v32) = 3;
    sub_1908AA2F4(&qword_1ECF69D80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    sub_190A4852C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v20);
    v24 = (uint64_t)v29;
    sub_1909A9FDC(v19, v30);
    sub_1908AF5D8((uint64_t)v12, v27, type metadata accessor for JindoViewStates.Metadata);
    __swift_destroy_boxed_opaque_existential_1(v24);
    return sub_1908B5150((uint64_t)v12, type metadata accessor for JindoViewStates.Metadata);
  }
}

uint64_t sub_1909A6CC4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1909A6CFC + 4 * byte_190A562C0[*v0]))(0x6D6E6F7269766E65, 0xEB00000000746E65);
}

unint64_t sub_1909A6CFC()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1909A6D18()
{
  return 0x726F6C6F4379656BLL;
}

uint64_t sub_1909A6D30()
{
  return 0x5255746567646977;
}

uint64_t sub_1909A6D4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1909AA694(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1909A6D70()
{
  sub_1909A9F54();
  return sub_190A48868();
}

uint64_t sub_1909A6D98()
{
  sub_1909A9F54();
  return sub_190A48874();
}

uint64_t sub_1909A6DC0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1909A6928(a1, a2);
}

uint64_t sub_1909A6DD4(_QWORD *a1)
{
  return sub_1909A6700(a1);
}

uint64_t sub_1909A6DE8()
{
  return MEMORY[0x1E0CDFD08];
}

uint64_t sub_1909A6DF4()
{
  return sub_1908AA2F4(&qword_1EE1E69B0, type metadata accessor for JindoViewStates.Metadata, (uint64_t)&unk_190A56380);
}

uint64_t sub_1909A6E20()
{
  return sub_1908AA2F4(&qword_1EE1E62E0, type metadata accessor for JindoViewStates.Metadata, (uint64_t)&unk_190A56358);
}

uint64_t sub_1909A6E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  uint64_t result;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a2;
  v7 = sub_190A46C30();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a3;
  v14 = (void *)a3[1];
  v16 = (int *)type metadata accessor for JindoViewStates(0);
  *(uint64_t *)((char *)a4 + v16[9]) = MEMORY[0x1E0DEE9E0];
  *((_BYTE *)a4 + v16[10]) = 4;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))((char *)a4 + v16[11], 1, 1, v7);
  v26 = a1;
  v17 = a1;
  v18 = v27;
  sub_1908BBDC8(v17, (uint64_t)(a4 + 1));
  sub_1908AF5D8(v18, (uint64_t)a4 + v16[6], type metadata accessor for ActivityMetricsDefinition);
  v19 = (uint64_t *)((char *)a4 + v16[7]);
  *v19 = v15;
  v19[1] = v14;
  swift_retain();
  v20 = v14;
  sub_190A46C24();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(&v13[*(int *)(v11 + 20)], v10, v7);
  *(_QWORD *)v13 = v15;
  *((_QWORD *)v13 + 1) = v20;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v21 = sub_1908BAE48((uint64_t)v13);
  result = sub_1908B5150((uint64_t)v13, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  v23 = (uint64_t *)((char *)a4 + v16[8]);
  *v23 = &unk_1E2CC4820;
  v23[1] = v21;
  v24 = *(_QWORD *)(v21 + 16);
  v25 = 4 * v24;
  if ((unsigned __int128)(4 * (__int128)v24) >> 64 == (4 * v24) >> 63)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1908B5150(v18, type metadata accessor for ActivityMetricsDefinition);
    __swift_destroy_boxed_opaque_existential_1(v26);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *a4 = v25;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1909A7060@<X0>(_OWORD *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  void *v13;
  id v14;
  int v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unint64_t v29;
  BOOL v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  _OWORD *v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  char *v46;
  __int128 v47;
  uint64_t v48;
  char *v49;
  __int128 v50;

  v2 = v1;
  v45 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v3);
  v49 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_190A46C30();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for JindoViewStates(0);
  v12 = (_QWORD *)((char *)v1 + *(int *)(v44 + 28));
  v13 = (void *)v12[1];
  *(_QWORD *)&v50 = *v12;
  *((_QWORD *)&v50 + 1) = v13;
  swift_retain();
  v14 = v13;
  WidgetEnvironment.environmentValues(where:)((uint64_t (*)(char *))sub_1909A734C, 0, v7);

  swift_release();
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  v46 = v11;
  if (v15 == 1)
  {
    sub_190A46C24();
    sub_1908AA544((uint64_t)v7, (uint64_t *)&unk_1ECF6C868);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  }
  *(_QWORD *)&v47 = v9;
  v16 = v1 + 1;
  v17 = v1[4];
  v18 = v1[5];
  __swift_project_boxed_opaque_existential_1(v1 + 1, v17);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
  v48 = v8;
  if (v19)
  {
    v20 = v46;
    sub_190A47674();
    v22 = v21;
    v24 = v23;
    v26 = v25;
    v28 = v27;
    swift_release();
    v43 = v22 | ((unint64_t)v24 << 32);
    v29 = v26 | ((unint64_t)v28 << 32);
  }
  else
  {
    v43 = 0;
    v29 = 0;
    v20 = v46;
  }
  v30 = v19 == 0;
  v31 = (void *)v12[1];
  *(_QWORD *)&v50 = *v12;
  *((_QWORD *)&v50 + 1) = v31;
  swift_retain();
  v32 = v31;
  WidgetEnvironment.filterForArchiving()();
  v33 = *(_QWORD *)((char *)v2 + *(int *)(v44 + 36));
  v34 = v2[4];
  v35 = v2[5];
  __swift_project_boxed_opaque_existential_1(v16, v34);
  v36 = *(void (**)(uint64_t, uint64_t))(v35 + 32);
  swift_bridgeObjectRetain();
  v37 = (uint64_t)v49;
  v36(v34, v35);
  v38 = *(void (**)(char *, uint64_t))(v47 + 8);
  v47 = v50;
  v38(v20, v48);
  v39 = v45;
  *v45 = v47;
  v40 = v43;
  *((_QWORD *)v39 + 2) = v33;
  *((_QWORD *)v39 + 3) = v40;
  *((_QWORD *)v39 + 4) = v29;
  *((_BYTE *)v39 + 40) = v30;
  *((_BYTE *)v39 + 41) = 0;
  v41 = type metadata accessor for JindoViewStates.Metadata(0);
  return sub_190964C40(v37, (uint64_t)v39 + *(int *)(v41 + 28));
}

uint64_t sub_1909A734C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  char v7;
  void (*v8)(char *, uint64_t);
  uint64_t v10;

  v0 = sub_190A4669C();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10 - v5;
  sub_190A469B4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x1E0CD86D0], v0);
  v7 = sub_190A46690();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  return v7 & 1;
}

void sub_1909A7424(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, unint64_t, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  void (*v57)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  double v66;
  double v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[4];
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  void (*v93)(char *, unint64_t, uint64_t);
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  __int128 v105;
  __int128 v106;
  _QWORD *v107;

  v97 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB968);
  MEMORY[0x1E0C80A78](v4);
  v77 = (char *)v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190A4669C();
  v78 = *(_QWORD *)(v6 - 8);
  v79 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v71[1] = (char *)v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v71 - v9;
  v11 = sub_190A46990();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6110);
  MEMORY[0x1E0C80A78](v72);
  v71[3] = (char *)v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
  MEMORY[0x1E0C80A78](v15);
  v83 = (char *)v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for CommonActivityArchivingModifiers();
  MEMORY[0x1E0C80A78](v84);
  v95 = (char *)v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E60F0);
  v18 = MEMORY[0x1E0C80A78](v76);
  v71[2] = (char *)v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v102 = (char *)v71 - v20;
  v82 = type metadata accessor for MetricsRequest(0);
  v21 = MEMORY[0x1E0C80A78](v82);
  v80 = (char *)v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v85 = (char *)v71 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v81 = (char *)v71 - v26;
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)v71 - v27;
  v29 = sub_190A46EAC();
  v90 = *(_QWORD *)(v29 - 8);
  v91 = (_QWORD *)v29;
  MEMORY[0x1E0C80A78](v29);
  v87 = (char *)v71 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
  MEMORY[0x1E0C80A78](v31);
  v89 = (uint64_t)v71 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for JindoMetricsDefinition(0);
  v86 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v101 = (uint64_t)v71 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_190A46C30();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = MEMORY[0x1E0C80A78](v34);
  v38 = (char *)v71 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x1E0C80A78](v36);
  v96 = (char *)v71 - v40;
  MEMORY[0x1E0C80A78](v39);
  v103 = (char *)v71 - v41;
  v98 = type metadata accessor for JindoViewStates(0);
  v42 = *(int *)(v98 + 32);
  v107 = v2;
  v43 = (_QWORD *)((char *)v2 + v42);
  v44 = *(_QWORD *)((char *)v2 + v42 + 8);
  v45 = *(_QWORD *)(v44 + 16);
  if (v45)
  {
    v46 = a1 / v45;
    if (((a1 / v45) & 0x8000000000000000) == 0)
    {
      v47 = *v43;
      if (v46 < *(_QWORD *)(v47 + 16))
      {
        v48 = a1 % v45;
        if ((v48 & 0x8000000000000000) == 0)
        {
          v75 = v13;
          v73 = v10;
          v92 = a1;
          v94 = v38;
          v104 = v28;
          v49 = *(char *)(v47 + v46 + 32);
          v50 = *(unsigned __int8 *)(v47 + v46 + 32);
          v51 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
          v52 = v103;
          v51(v103, v44+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v48, v34);
          v53 = v98;
          v54 = *(int *)(v98 + 40);
          v55 = v107;
          v100 = v50;
          *((_BYTE *)v107 + v54) = v50;
          v56 = (uint64_t)v55 + *(int *)(v53 + 44);
          sub_1908AA544(v56, (uint64_t *)&unk_1ECF6C868);
          v93 = v51;
          v51((char *)v56, (unint64_t)v52, v34);
          v74 = v35;
          v57 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56);
          v99 = v34;
          v57(v56, 0, 1, v34);
          v58 = (uint64_t)v87;
          sub_190A469FC();
          v59 = v89;
          ActivityMetricsDefinition.jindoMetrics(for:)(v58, v89);
          (*(void (**)(uint64_t, _QWORD *))(v90 + 8))(v58, v91);
          v60 = v88;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v59, 1, v88) == 1)
          {
            __break(1u);
            JUMPOUT(0x1909A89F8);
          }
          v61 = v101;
          sub_1908BD0B4(v59, v101, type metadata accessor for JindoMetricsDefinition);
          v62 = (uint64_t)v104;
          sub_1908AF5D8(v61 + *(int *)(v60 + 4 * qword_190A56790[v49]), (uint64_t)v104, type metadata accessor for MetricsRequest);
          v63 = *(_QWORD *)(v62 + 96);
          v106 = 0u;
          v105 = 0u;
          v64 = v100;
          if ((*(_BYTE *)(v62 + 88) & 1) != 0)
            goto LABEL_12;
          v65 = *(double *)(v62 + 72);
          v66 = *(double *)(v62 + 80);
          v67 = *(double *)(v62 + 56);
          v68 = *(double *)(v62 + 64);
          *(double *)&v105 = v67;
          *((double *)&v105 + 1) = v68;
          *(double *)&v106 = v65;
          *((double *)&v106 + 1) = v66;
          if (v68 > 0.0)
          {
            *((_QWORD *)&v105 + 1) = v63;
            if (v66 <= 0.0)
            {
LABEL_9:
              if (v67 <= 0.0)
                goto LABEL_10;
LABEL_15:
              *(_QWORD *)&v105 = v63;
              if (v65 > 0.0)
LABEL_11:
                *(_QWORD *)&v106 = v63;
LABEL_12:
              v69 = v107[4];
              v70 = v107[5];
              v91 = v107 + 1;
              __swift_project_boxed_opaque_existential_1(v107 + 1, v69);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 8))(v64, v61, v69, v70);
              __asm { BR              X9 }
            }
          }
          else if (v66 <= 0.0)
          {
            goto LABEL_9;
          }
          *((_QWORD *)&v106 + 1) = v63;
          if (v67 <= 0.0)
          {
LABEL_10:
            if (v65 <= 0.0)
              goto LABEL_12;
            goto LABEL_11;
          }
          goto LABEL_15;
        }
LABEL_20:
        __break(1u);
        JUMPOUT(0x1909A89C4);
      }
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  goto LABEL_19;
}

CGImageRef sub_1909A8A38(CGImage *a1)
{
  int64_t v1;
  int64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  double v46;
  CGImage *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double Height;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  CGImageRef v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  size_t Width;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA528);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MetricsRequest(0);
  v74 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v68 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_190A46EAC();
  v71 = *(_QWORD *)(v9 - 8);
  v72 = v9;
  MEMORY[0x1E0C80A78](v9);
  v70 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v73 = (uint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v76 = (uint64_t)&v65 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
  MEMORY[0x1E0C80A78](v15);
  v78 = (uint64_t)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_190A46C30();
  v18 = *(_QWORD *)(v17 - 8);
  v79 = v17;
  v80 = v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = 91;
  v82 = 0xE100000000000000;
  LODWORD(Width) = CGImageGetIdentifier();
  sub_190A4867C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  Width = CGImageGetWidth(a1);
  sub_190A4867C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  Width = CGImageGetHeight(a1);
  sub_190A4867C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v21 = v82;
  v77 = v81;
  if (qword_1ECF6AE58 != -1)
    swift_once();
  v22 = sub_190A465A0();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ECF6D528);
  swift_bridgeObjectRetain_n();
  v67 = v23;
  v24 = sub_190A46588();
  v25 = sub_190A47F68();
  v26 = os_log_type_enabled(v24, v25);
  v75 = a1;
  if (v26)
  {
    v69 = v20;
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v81 = v28;
    v66 = v2;
    *(_DWORD *)v27 = 136446210;
    swift_bridgeObjectRetain();
    Width = sub_1908B35C4(v77, v21, &v81);
    v20 = v69;
    v2 = v66;
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1908A7000, v24, v25, "%{public}s Filtering image", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v28, -1, -1);
    MEMORY[0x194014398](v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v29 = type metadata accessor for JindoViewStates(0);
  v30 = v78;
  sub_1908AAA48(v2 + *(int *)(v29 + 44), v78, (uint64_t *)&unk_1ECF6C868);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v30, 1, v79) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1908AA544(v30, (uint64_t *)&unk_1ECF6C868);
    sub_1909A9D34();
    swift_allocError();
    *(_OWORD *)v31 = xmmword_190A567D0;
    *(_QWORD *)(v31 + 16) = 0;
    *(_QWORD *)(v31 + 24) = 0;
    *(_BYTE *)(v31 + 32) = 0;
    swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v20, v30, v79);
    v32 = *(char *)(v2 + *(int *)(v29 + 40));
    if (v32 == 4)
    {
      swift_bridgeObjectRelease();
      sub_1909A9D34();
      swift_allocError();
      *(_QWORD *)v33 = 0xD000000000000013;
      *(_QWORD *)(v33 + 8) = 0x8000000190A63AE0;
      *(_QWORD *)(v33 + 16) = 0;
      *(_QWORD *)(v33 + 24) = 0;
      *(_BYTE *)(v33 + 32) = 0;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v20, v79);
    }
    else
    {
      v35 = (uint64_t)v70;
      sub_190A469FC();
      v36 = v76;
      ActivityMetricsDefinition.jindoMetrics(for:)(v35, v76);
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v35, v72);
      v37 = v73;
      sub_1908AAA48(v36, v73, &qword_1EE1EA8F0);
      v38 = type metadata accessor for JindoMetricsDefinition(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38) == 1)
      {
        sub_1908AA544(v37, &qword_1EE1EA8F0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v6, 1, 1, v7);
        swift_bridgeObjectRelease();
        sub_1908AA544(v76, &qword_1EE1EA8F0);
        (*(void (**)(char *, uint64_t))(v80 + 8))(v20, v79);
        sub_1908AA544((uint64_t)v6, &qword_1EE1EA528);
        return v75;
      }
      else
      {
        sub_1908AF5D8(v37 + *(int *)(v38 + 4 * qword_190A56790[v32]), (uint64_t)v6, type metadata accessor for MetricsRequest);
        sub_1908B5150(v37, type metadata accessor for JindoMetricsDefinition);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v6, 0, 1, v7);
        v39 = v68;
        sub_1908BD0B4((uint64_t)v6, v68, type metadata accessor for MetricsRequest);
        if ((_DWORD)v32)
          v40 = 1.5;
        else
          v40 = 1.2;
        if ((_DWORD)v32)
          v41 = 2.0;
        else
          v41 = 1.2;
        v69 = v20;
        sub_190A469E4();
        v43 = 8;
        if (!*(_BYTE *)(v39 + 16))
          v43 = 0;
        v44 = fmax(v40 * (v42 * *(double *)(v39 + v43)), 80.0);
        v45 = 24;
        if (*(_BYTE *)(v39 + 40))
          v45 = 32;
        v46 = fmax(v41 * (v42 * *(double *)(v39 + v45)), 80.0);
        v47 = v75;
        if (v44 <= (double)(uint64_t)CGImageGetWidth(v75) || v46 <= (double)(uint64_t)CGImageGetHeight(v47))
        {
          v53 = sub_190A11188(v44, v46);
          if (v53)
          {
            v2 = v53;
            swift_bridgeObjectRetain();
            v54 = sub_190A46588();
            v55 = sub_190A47F5C();
            if (os_log_type_enabled(v54, v55))
            {
              v56 = swift_slowAlloc();
              v57 = swift_slowAlloc();
              v81 = v57;
              *(_DWORD *)v56 = 136446722;
              swift_bridgeObjectRetain();
              Width = sub_1908B35C4(v77, v21, &v81);
              sub_190A48178();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v56 + 12) = 2050;
              Width = *(_QWORD *)&v44;
              sub_190A48178();
              *(_WORD *)(v56 + 22) = 2050;
              Width = *(_QWORD *)&v46;
              sub_190A48178();
              _os_log_impl(&dword_1908A7000, v54, v55, "%{public}s Max size exceeded: %{public}fx%{public}f; using placeholder image",
                (uint8_t *)v56,
                0x20u);
              swift_arrayDestroy();
              MEMORY[0x194014398](v57, -1, -1);
              MEMORY[0x194014398](v56, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n();
            }

            sub_1908B5150(v68, type metadata accessor for MetricsRequest);
            sub_1908AA544(v76, &qword_1EE1EA8F0);
            (*(void (**)(char *, uint64_t))(v80 + 8))(v69, v79);
          }
          else
          {
            swift_bridgeObjectRetain();
            v58 = sub_190A46588();
            v59 = sub_190A47F5C();
            if (os_log_type_enabled(v58, v59))
            {
              v60 = swift_slowAlloc();
              v61 = swift_slowAlloc();
              v81 = v61;
              *(_DWORD *)v60 = 136446722;
              swift_bridgeObjectRetain();
              Width = sub_1908B35C4(v77, v21, &v81);
              sub_190A48178();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v60 + 12) = 2050;
              Width = *(_QWORD *)&v44;
              sub_190A48178();
              *(_WORD *)(v60 + 22) = 2050;
              Width = *(_QWORD *)&v46;
              sub_190A48178();
              _os_log_impl(&dword_1908A7000, v58, v59, "%{public}s Max size exceeded: %{public}fx%{public}f; unable to create placeholder image",
                (uint8_t *)v60,
                0x20u);
              swift_arrayDestroy();
              v62 = v61;
              v47 = v75;
              MEMORY[0x194014398](v62, -1, -1);
              MEMORY[0x194014398](v60, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            v2 = CGImageGetWidth(v47);
            Height = (double)(uint64_t)CGImageGetHeight(v47);
            sub_1909A9D34();
            swift_allocError();
            *(double *)v64 = (double)v2;
            *(double *)(v64 + 8) = Height;
            *(double *)(v64 + 16) = v44;
            *(double *)(v64 + 24) = v46;
            *(_BYTE *)(v64 + 32) = 1;
            swift_willThrow();
            sub_1908B5150(v68, type metadata accessor for MetricsRequest);
            sub_1908AA544(v76, &qword_1EE1EA8F0);
            (*(void (**)(char *, uint64_t))(v80 + 8))(v69, v79);
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          v48 = sub_190A46588();
          v49 = sub_190A47F68();
          if (os_log_type_enabled(v48, v49))
          {
            v50 = (uint8_t *)swift_slowAlloc();
            v51 = swift_slowAlloc();
            v81 = v51;
            *(_DWORD *)v50 = 136446210;
            swift_bridgeObjectRetain();
            Width = sub_1908B35C4(v77, v21, &v81);
            sub_190A48178();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1908A7000, v48, v49, "%{public}s Image permitted", v50, 0xCu);
            swift_arrayDestroy();
            v52 = v51;
            v47 = v75;
            MEMORY[0x194014398](v52, -1, -1);
            MEMORY[0x194014398](v50, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          sub_1908B5150(v68, type metadata accessor for MetricsRequest);
          sub_1908AA544(v76, &qword_1EE1EA8F0);
          (*(void (**)(char *, uint64_t))(v80 + 8))(v69, v79);
          return v47;
        }
      }
    }
  }
  return (CGImageRef)v2;
}

uint64_t sub_1909A96A0()
{
  __int128 *v0;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_1909AA868(v0, (uint64_t)&v3);
  if ((v4 & 1) != 0)
  {
    v2 = 0;
    sub_190A48298();
    sub_190A47B3C();
    type metadata accessor for CGSize(0);
    sub_190A483DC();
    sub_190A47B3C();
    sub_190A483DC();
  }
  else
  {
    sub_190A48298();
    swift_bridgeObjectRelease();
    v2 = 0x69666E6F6373694DLL;
    sub_190A47B3C();
  }
  return v2;
}

uint64_t sub_1909A9804()
{
  __int128 *v0;
  _BYTE v2[40];

  sub_1909AA868(v0, (uint64_t)v2);
  return sub_1909A96A0();
}

uint64_t sub_1909A9838@<X0>(_OWORD *a1@<X8>)
{
  return sub_1909A7060(a1);
}

void sub_1909A984C(uint64_t a1, uint64_t a2)
{
  sub_1909A7424(a1, a2);
}

CGImageRef sub_1909A9860(CGImage *a1)
{
  return sub_1909A8A38(a1);
}

double sub_1909A9874@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  double result;
  __int128 v11;
  __int128 v12;
  char v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;

  sub_190A47470();
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  CGRectGetMidY(v14);
  sub_190A47458();
  v15.origin.x = a2;
  v15.origin.y = a3;
  v15.size.width = a4;
  v15.size.height = a5;
  CGRectGetMaxX(v15);
  v16.origin.x = a2;
  v16.origin.y = a3;
  v16.size.width = a4;
  v16.size.height = a5;
  CGRectGetMinY(v16);
  sub_190A47464();
  v17.origin.x = a2;
  v17.origin.y = a3;
  v17.size.width = a4;
  v17.size.height = a5;
  CGRectGetMaxX(v17);
  v18.origin.x = a2;
  v18.origin.y = a3;
  v18.size.width = a4;
  v18.size.height = a5;
  CGRectGetMaxY(v18);
  sub_190A47464();
  sub_190A4744C();
  result = *(double *)&v11;
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v12;
  *(_BYTE *)(a1 + 32) = v13;
  return result;
}

void (*sub_1909A99B8(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_190A4663C();
  return sub_1909A9A14;
}

uint64_t sub_1909A9A1C()
{
  sub_1909A9F10();
  return sub_190A477DC();
}

uint64_t sub_1909A9A6C()
{
  sub_1909A9F10();
  return sub_190A477AC();
}

uint64_t sub_1909A9ABC()
{
  sub_1909A9F10();
  return sub_190A477C4();
}

double sub_1909A9AF4@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  double result;
  __int128 v11;
  __int128 v12;
  char v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  sub_190A47470();
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  CGRectGetMaxX(v14);
  v15.origin.x = a2;
  v15.origin.y = a3;
  v15.size.width = a4;
  v15.size.height = a5;
  CGRectGetMidY(v15);
  sub_190A47458();
  v16.origin.x = a2;
  v16.origin.y = a3;
  v16.size.width = a4;
  v16.size.height = a5;
  CGRectGetMinX(v16);
  v17.origin.x = a2;
  v17.origin.y = a3;
  v17.size.width = a4;
  v17.size.height = a5;
  CGRectGetMinY(v17);
  sub_190A47464();
  v18.origin.x = a2;
  v18.origin.y = a3;
  v18.size.width = a4;
  v18.size.height = a5;
  CGRectGetMinX(v18);
  v19.origin.x = a2;
  v19.origin.y = a3;
  v19.size.width = a4;
  v19.size.height = a5;
  CGRectGetMaxY(v19);
  sub_190A47464();
  sub_190A4744C();
  result = *(double *)&v11;
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v12;
  *(_BYTE *)(a1 + 32) = v13;
  return result;
}

uint64_t sub_1909A9C44()
{
  return sub_190A477A0();
}

uint64_t sub_1909A9C5C()
{
  sub_1909A9ECC();
  return sub_190A477DC();
}

uint64_t sub_1909A9CAC()
{
  sub_1909A9ECC();
  return sub_190A477AC();
}

uint64_t sub_1909A9CFC()
{
  sub_1909A9ECC();
  return sub_190A477C4();
}

unint64_t sub_1909A9D34()
{
  unint64_t result;

  result = qword_1EE1EE030;
  if (!qword_1EE1EE030)
  {
    result = MEMORY[0x19401429C](&unk_190A56748, &type metadata for JindoViewStates.ArchivingError);
    atomic_store(result, (unint64_t *)&qword_1EE1EE030);
  }
  return result;
}

unint64_t sub_1909A9D78()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E60E8;
  if (!qword_1EE1E60E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E60F0);
    v2[0] = sub_1909A9DFC();
    v2[1] = sub_1908AA2F4(&qword_1EE1E66C8, (uint64_t (*)(uint64_t))type metadata accessor for CommonActivityArchivingModifiers, (uint64_t)&unk_190A4F998);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E60E8);
  }
  return result;
}

unint64_t sub_1909A9DFC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E60C8;
  if (!qword_1EE1E60C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E60D0);
    v2[0] = MEMORY[0x1E0CDFD08];
    v2[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E60C8);
  }
  return result;
}

unint64_t sub_1909A9E60()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E6108;
  if (!qword_1EE1E6108)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6110);
    v2[0] = sub_1909A9D78();
    v2[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E6108);
  }
  return result;
}

unint64_t sub_1909A9ECC()
{
  unint64_t result;

  result = qword_1EE1E6580;
  if (!qword_1EE1E6580)
  {
    result = MEMORY[0x19401429C](&unk_190A566F8, &type metadata for TrailingConcentricClip);
    atomic_store(result, (unint64_t *)&qword_1EE1E6580);
  }
  return result;
}

unint64_t sub_1909A9F10()
{
  unint64_t result;

  result = qword_1EE1E64D0[0];
  if (!qword_1EE1E64D0[0])
  {
    result = MEMORY[0x19401429C](&unk_190A566A8, &type metadata for LeadingConcentricClip);
    atomic_store(result, qword_1EE1E64D0);
  }
  return result;
}

unint64_t sub_1909A9F54()
{
  unint64_t result;

  result = qword_1EE1EAB88;
  if (!qword_1EE1EAB88)
  {
    result = MEMORY[0x19401429C](&unk_190A56658, &type metadata for JindoViewStates.Metadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EAB88);
  }
  return result;
}

unint64_t sub_1909A9F98()
{
  unint64_t result;

  result = qword_1EE1E6A18;
  if (!qword_1EE1E6A18)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ActivityViewEntryMetadata, &type metadata for ActivityViewEntryMetadata);
    atomic_store(result, (unint64_t *)&qword_1EE1E6A18);
  }
  return result;
}

uint64_t sub_1909A9FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1909AA024(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EACF0);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x19401429C](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1909AA098()
{
  unint64_t result;

  result = qword_1EE1E6590;
  if (!qword_1EE1E6590)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for ActivityViewEntryMetadata, &type metadata for ActivityViewEntryMetadata);
    atomic_store(result, (unint64_t *)&qword_1EE1E6590);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JindoViewStates.Metadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1909AA128 + 4 * byte_190A562C9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1909AA15C + 4 * byte_190A562C4[v4]))();
}

uint64_t sub_1909AA15C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909AA164(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909AA16CLL);
  return result;
}

uint64_t sub_1909AA178(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909AA180);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1909AA184(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909AA18C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JindoViewStates.Metadata.CodingKeys()
{
  return &type metadata for JindoViewStates.Metadata.CodingKeys;
}

ValueMetadata *type metadata accessor for LeadingConcentricClip()
{
  return &type metadata for LeadingConcentricClip;
}

ValueMetadata *type metadata accessor for TrailingConcentricClip()
{
  return &type metadata for TrailingConcentricClip;
}

uint64_t sub_1909AA1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for JindoViewStates.ArchivingError(uint64_t a1)
{
  return sub_1909AA1EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_1909AA1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for JindoViewStates.ArchivingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1909AA1C8(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for JindoViewStates.ArchivingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1909AA1C8(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_1909AA1EC(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for JindoViewStates.ArchivingError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v3;
  sub_1909AA1EC(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for JindoViewStates.ArchivingError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JindoViewStates.ArchivingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1909AA3A4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1909AA3AC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for JindoViewStates.ArchivingError()
{
  return &type metadata for JindoViewStates.ArchivingError;
}

uint64_t sub_1909AA3CC()
{
  return sub_1909AA45C(&qword_1EE1EE038, &qword_1EE1EE040);
}

unint64_t sub_1909AA3F4()
{
  unint64_t result;

  result = qword_1EE1EE048;
  if (!qword_1EE1EE048)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB3D0], MEMORY[0x1E0CDB3F0]);
    atomic_store(result, (unint64_t *)&qword_1EE1EE048);
  }
  return result;
}

uint64_t sub_1909AA438()
{
  return sub_1909AA45C(&qword_1EE1EE050, &qword_1EE1EE058);
}

uint64_t sub_1909AA45C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD8668], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1909AA4A0()
{
  unint64_t result;

  result = qword_1EE1EE060;
  if (!qword_1EE1EE060)
  {
    result = MEMORY[0x19401429C](&unk_190A56630, &type metadata for JindoViewStates.Metadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE060);
  }
  return result;
}

unint64_t sub_1909AA4E8()
{
  unint64_t result;

  result = qword_1EE1EAB98;
  if (!qword_1EE1EAB98)
  {
    result = MEMORY[0x19401429C](&unk_190A565A0, &type metadata for JindoViewStates.Metadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EAB98);
  }
  return result;
}

unint64_t sub_1909AA530()
{
  unint64_t result;

  result = qword_1EE1EAB90;
  if (!qword_1EE1EAB90)
  {
    result = MEMORY[0x19401429C](&unk_190A565C8, &type metadata for JindoViewStates.Metadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EAB90);
  }
  return result;
}

unint64_t sub_1909AA578()
{
  unint64_t result;

  result = qword_1EE1E64C0;
  if (!qword_1EE1E64C0)
  {
    result = MEMORY[0x19401429C](&unk_190A56550, &type metadata for LeadingConcentricClip);
    atomic_store(result, (unint64_t *)&qword_1EE1E64C0);
  }
  return result;
}

unint64_t sub_1909AA5C0()
{
  unint64_t result;

  result = qword_1EE1E64C8;
  if (!qword_1EE1E64C8)
  {
    result = MEMORY[0x19401429C](&unk_190A56500, &type metadata for LeadingConcentricClip);
    atomic_store(result, (unint64_t *)&qword_1EE1E64C8);
  }
  return result;
}

unint64_t sub_1909AA608()
{
  unint64_t result;

  result = qword_1EE1E6570;
  if (!qword_1EE1E6570)
  {
    result = MEMORY[0x19401429C](&unk_190A564B0, &type metadata for TrailingConcentricClip);
    atomic_store(result, (unint64_t *)&qword_1EE1E6570);
  }
  return result;
}

unint64_t sub_1909AA650()
{
  unint64_t result;

  result = qword_1EE1E6578;
  if (!qword_1EE1E6578)
  {
    result = MEMORY[0x19401429C](&unk_190A56460, &type metadata for TrailingConcentricClip);
    atomic_store(result, (unint64_t *)&qword_1EE1E6578);
  }
  return result;
}

uint64_t sub_1909AA694(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000190A63B00 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F6C6F4379656BLL && a2 == 0xE800000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5255746567646977 && a2 == 0xE90000000000004CLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1909AA868(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void BundleStub.init(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;

  v4 = type metadata accessor for BundleStub();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  sub_190A46300();
  swift_endAccess();
  v10 = (void *)sub_190A47AC4();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend((id)objc_opt_self(), sel_bundleWithIdentifier_, v10);

  if (v11)
  {
    v12 = v11;
    v13 = sub_1909995B4();
    v15 = v14;

    if (!v15)
    {
      v13 = 0x6E776F6E6B6E55;
      swift_bridgeObjectRelease();
      v15 = 0xE700000000000000;
    }
    v16 = objc_msgSend(v12, sel_bundleURL);
    sub_190A45FA0();

    v17 = sub_190A45FC4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 0, 1, v17);
  }
  else
  {
    v13 = 0x6E776F6E6B6E55;
    swift_bridgeObjectRelease();
    v17 = sub_190A45FC4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 1, 1, v17);
    v15 = 0xE700000000000000;
  }
  sub_190A45FC4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
  *(_QWORD *)&v6[*(int *)(v4 + 20)] = a1;
  sub_1909A9FDC((uint64_t)v9, (uint64_t)v6);
  v18 = (uint64_t *)&v6[*(int *)(v4 + 24)];
  *v18 = v13;
  v18[1] = v15;
  sub_1909AAD08((uint64_t)v6, a2);

}

uint64_t BundleStub.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19093FE6C(v1, a1);
}

uint64_t BundleStub.url.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1909A9FDC(a1, v1);
}

uint64_t (*BundleStub.url.modify())()
{
  return nullsub_1;
}

id BundleStub.identifier.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for BundleStub() + 20));
}

void BundleStub.identifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for BundleStub() + 20);

  *(_QWORD *)(v1 + v3) = a1;
}

uint64_t (*BundleStub.identifier.modify())()
{
  type metadata accessor for BundleStub();
  return nullsub_1;
}

uint64_t BundleStub.version.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for BundleStub() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BundleStub.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for BundleStub() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*BundleStub.version.modify())()
{
  type metadata accessor for BundleStub();
  return nullsub_1;
}

uint64_t BundleStub.init(identifier:version:url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;

  v10 = sub_190A45FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a5, 1, 1, v10);
  v11 = type metadata accessor for BundleStub();
  *(_QWORD *)(a5 + *(int *)(v11 + 20)) = a1;
  result = sub_1909A9FDC(a4, a5);
  v13 = (_QWORD *)(a5 + *(int *)(v11 + 24));
  *v13 = a2;
  v13[1] = a3;
  return result;
}

uint64_t type metadata accessor for BundleStub()
{
  uint64_t result;

  result = qword_1ECF6C848;
  if (!qword_1ECF6C848)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1909AAD08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BundleStub();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1909AAD4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB230);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  v10 = type metadata accessor for BundleStub();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v21 - v15;
  sub_1909AAEF0(a1, (uint64_t)v9);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v17(v9, 1, v10) != 1)
  {
    sub_1909AAD08((uint64_t)v9, (uint64_t)v16);
    v19 = (uint64_t)v16;
LABEL_6:
    sub_1909AAD08(v19, a2);
    v18 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, v18, 1, v10);
  }
  sub_1908AA544((uint64_t)v9, &qword_1EE1EB230);
  sub_1909AB268(a1, (uint64_t)v7);
  if (v17(v7, 1, v10) != 1)
  {
    sub_1909AAD08((uint64_t)v7, (uint64_t)v14);
    v19 = (uint64_t)v14;
    goto LABEL_6;
  }
  sub_1908AA544((uint64_t)v7, &qword_1EE1EB230);
  v18 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, v18, 1, v10);
}

uint64_t sub_1909AAEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a2;
  v3 = type metadata accessor for BundleStub();
  v38 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  v7 = MEMORY[0x1E0C80A78](v6);
  v37 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v36 - v9;
  v11 = sub_190A45FC4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v36 - v16;
  sub_19093FE6C(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1908AA544((uint64_t)v10, (uint64_t *)&unk_1ECF6C858);
    goto LABEL_4;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  v18 = objc_allocWithZone(MEMORY[0x1E0CA5848]);
  v23 = sub_1909AC3E4((uint64_t)v15);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  if (!v23)
  {
LABEL_4:
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
    sub_190A46300();
    swift_endAccess();
    v19 = objc_allocWithZone(MEMORY[0x1E0CA5848]);
    v20 = sub_1908AB77C();
    v23 = v20;
    if (!v20)
      goto LABEL_5;
  }
  v24 = v23;
  v25 = objc_msgSend(v24, sel_bundleIdentifier);
  if (v25)
  {

    v26 = *(id *)(a1 + *(int *)(v3 + 20));
    v27 = v24;
    v28 = LSBundleRecord.safeBundleVersion.getter();
    v30 = v29;

    v31 = objc_msgSend(v27, sel_URL);
    v32 = (uint64_t)v37;
    sub_190A45FA0();

    v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v33(v32, 0, 1, v11);
    v33((uint64_t)v5, 1, 1, v11);
    *(_QWORD *)&v5[*(int *)(v3 + 20)] = v26;
    sub_1909A9FDC(v32, (uint64_t)v5);
    v34 = (uint64_t *)&v5[*(int *)(v3 + 24)];
    *v34 = v28;
    v34[1] = v30;
    v22 = v39;
    sub_1909AAD08((uint64_t)v5, v39);

    v21 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v22, v21, 1, v3);
  }

LABEL_5:
  v21 = 1;
  v22 = v39;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v22, v21, 1, v3);
}

uint64_t sub_1909AB268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  id v39;
  char *v40;
  uint64_t v41;

  v4 = type metadata accessor for BundleStub();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v39 - v12;
  v14 = sub_190A45FC4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = a1;
  sub_19093FE6C(a1, (uint64_t)v13);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  v40 = v11;
  if (v18 == 1)
  {
    sub_1908AA544((uint64_t)v13, (uint64_t *)&unk_1ECF6C858);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    v19 = objc_allocWithZone(MEMORY[0x1E0CB34D0]);
    v20 = v5;
    v21 = a2;
    v22 = (void *)sub_190A45F94();
    v23 = objc_msgSend(v19, sel_initWithURL_, v22);

    a2 = v21;
    v5 = v20;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if (v23)
      goto LABEL_5;
  }
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  sub_190A46300();
  swift_endAccess();
  v24 = (void *)sub_190A47AC4();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend((id)objc_opt_self(), sel_bundleWithIdentifier_, v24);

  if (!v23)
  {
    v37 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v37, 1, v4);
  }
LABEL_5:
  v25 = v23;
  v26 = objc_msgSend(v25, sel_bundleIdentifier);
  if (v26)
  {
    v27 = a2;

    v28 = sub_1909995B4();
    if (v29)
    {
      v30 = v29;
      v31 = *(void **)(v41 + *(int *)(v4 + 20));
      v41 = v28;
      v39 = v31;
      v32 = v5;
      v33 = objc_msgSend(v25, sel_bundleURL);
      v34 = (uint64_t)v40;
      sub_190A45FA0();

      v5 = v32;
      v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
      v35(v34, 0, 1, v14);
      v35((uint64_t)v7, 1, 1, v14);
      *(_QWORD *)&v7[*(int *)(v4 + 20)] = v39;
      sub_1909A9FDC(v34, (uint64_t)v7);
      v36 = &v7[*(int *)(v4 + 24)];
      *(_QWORD *)v36 = v41;
      *((_QWORD *)v36 + 1) = v30;
      a2 = v27;
      sub_1909AAD08((uint64_t)v7, v27);
      v37 = 0;
    }
    else
    {
      v37 = 1;
    }
  }
  else
  {
    v37 = 1;
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v37, 1, v4);
}

uint64_t LSBundleRecord.safeBundleVersion.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v1 = objc_msgSend(v0, sel_infoDictionary);
  v2 = (void *)sub_190A47AC4();
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6C7D0);
  v3 = objc_msgSend(v1, sel_objectForKey_ofClass_, v2, swift_getObjCClassFromMetadata());

  if (v3)
  {
    sub_190A481B4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_19095AD58((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    if ((swift_dynamicCast() & 1) != 0)
      return v5;
  }
  else
  {
    sub_1908AA544((uint64_t)v7, (uint64_t *)&unk_1ECF6C8A0);
  }
  return 0x6E776F6E6B6E55;
}

uint64_t BundleStub.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_190A45FC4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19093FE6C(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_190A487D8();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_190A487D8();
    sub_1908AA2F4(&qword_1EE1EDEA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    sub_190A47A4C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v9 = *(id *)(v1 + *(int *)(type metadata accessor for BundleStub() + 20));
  sub_190A48100();

  swift_bridgeObjectRetain();
  sub_190A47B18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1909AB8AC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x696669746E656469;
  if (*v0 != 1)
    v1 = 0x6E6F6973726576;
  if (*v0)
    return v1;
  else
    return 7107189;
}

uint64_t sub_1909AB904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1909AD1E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1909AB928()
{
  sub_1909AC83C();
  return sub_190A48868();
}

uint64_t sub_1909AB950()
{
  sub_1909AC83C();
  return sub_190A48874();
}

uint64_t BundleStub.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B3E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909AC83C();
  sub_190A48850();
  v12 = 0;
  sub_190A45FC4();
  sub_1908AA2F4(&qword_1ECF6C648, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
  sub_190A485EC();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for BundleStub() + 20));
    v10[15] = 1;
    sub_190A48058();
    sub_1908AA2F4(qword_1ECF6AE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0FE48], MEMORY[0x1E0D0FE58]);
    sub_190A48640();
    v10[14] = 2;
    sub_190A485F8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t BundleStub.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_190A45FC4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A487C0();
  sub_19093FE6C(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_190A487D8();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_190A487D8();
    sub_1908AA2F4(&qword_1EE1EDEA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    sub_190A47A4C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  type metadata accessor for BundleStub();
  sub_190A48100();
  sub_190A47B18();
  return sub_190A48808();
}

void BundleStub.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v20 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69E38);
  v7 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for BundleStub();
  MEMORY[0x1E0C80A78](v23);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_190A45FC4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = a1[3];
  v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1909AC83C();
  sub_190A48838();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    sub_1908AA544((uint64_t)v11, (uint64_t *)&unk_1ECF6C858);
  }
  else
  {
    v27 = 0;
    sub_1908AA2F4(&qword_1ECF69D80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    sub_190A4852C();
    sub_1909A9FDC((uint64_t)v6, (uint64_t)v11);
    sub_190A48058();
    v26 = 1;
    sub_1908AA2F4(&qword_1ECF69E30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0FE48], MEMORY[0x1E0D0FE60]);
    sub_190A48580();
    v14 = v23;
    *(_QWORD *)&v11[*(int *)(v23 + 20)] = v24;
    v25 = 2;
    v15 = sub_190A48538();
    v17 = v16;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v21);
    v18 = (uint64_t *)&v11[*(int *)(v14 + 24)];
    *v18 = v15;
    v18[1] = v17;
    sub_1909AC880((uint64_t)v11, v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    sub_1909AC8C4((uint64_t)v11);
  }
}

void sub_1909ABFA4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  BundleStub.init(from:)(a1, a2);
}

uint64_t sub_1909ABFB8(_QWORD *a1)
{
  return BundleStub.encode(to:)(a1);
}

uint64_t sub_1909ABFD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_190A45FC4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19093FE6C(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_190A487D8();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_190A487D8();
    sub_1908AA2F4(&qword_1EE1EDEA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    sub_190A47A4C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_190A48100();
  return sub_190A47B18();
}

uint64_t sub_1909AC13C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_190A45FC4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A487C0();
  sub_19093FE6C(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_190A487D8();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_190A487D8();
    sub_1908AA2F4(&qword_1EE1EDEA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    sub_190A47A4C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_190A48100();
  sub_190A47B18();
  return sub_190A48808();
}

uint64_t LSBundleProxy.safeBundleVersion.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v1 = (void *)sub_190A47AC4();
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6C7D0);
  v2 = objc_msgSend(v0, sel_objectForInfoDictionaryKey_ofClass_, v1, swift_getObjCClassFromMetadata());

  if (v2)
  {
    sub_190A481B4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_19095AD58((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if ((swift_dynamicCast() & 1) != 0)
      return v4;
  }
  else
  {
    sub_1908AA544((uint64_t)v6, (uint64_t *)&unk_1ECF6C8A0);
  }
  return 0x6E776F6E6B6E55;
}

id sub_1909AC3E4(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  id v9;
  id v10;
  uint64_t v11;
  id v13[2];

  v2 = v1;
  v13[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (void *)sub_190A45F94();
  v13[0] = 0;
  v5 = objc_msgSend(v2, sel_initWithURL_error_, v4, v13);

  v6 = v13[0];
  if (v5)
  {
    v7 = sub_190A45FC4();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v9 = v6;
    v8(a1, v7);
  }
  else
  {
    v10 = v13[0];
    sub_190A45F58();

    swift_willThrow();
    v11 = sub_190A45FC4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

uint64_t _s9WidgetKit10BundleStubV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  char v22;
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v33;

  v4 = sub_190A45FC4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA438);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v32 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v32 - v18;
  sub_19093FE6C(a1, (uint64_t)&v32 - v18);
  v33 = a2;
  sub_19093FE6C(a2, (uint64_t)v17);
  v20 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_19093FE6C((uint64_t)v19, (uint64_t)v10);
  sub_19093FE6C((uint64_t)v17, v20);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) == 1)
  {
    sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6C858);
    sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6C858);
    if (v21(v20, 1, v4) == 1)
    {
      sub_1908AA544((uint64_t)v10, (uint64_t *)&unk_1ECF6C858);
      goto LABEL_8;
    }
LABEL_6:
    sub_1908AA544((uint64_t)v10, &qword_1EE1EA438);
    v22 = 0;
    return v22 & 1;
  }
  sub_19093FE6C((uint64_t)v10, (uint64_t)v14);
  if (v21(v20, 1, v4) == 1)
  {
    sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6C858);
    sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6C858);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v20, v4);
  sub_1908AA2F4(&qword_1EE1ECEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
  v23 = sub_190A47AAC();
  v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v7, v4);
  sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6C858);
  sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6C858);
  v24(v14, v4);
  sub_1908AA544((uint64_t)v10, (uint64_t *)&unk_1ECF6C858);
  if ((v23 & 1) == 0)
  {
LABEL_12:
    v22 = 0;
    return v22 & 1;
  }
LABEL_8:
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6C5E0);
  v25 = type metadata accessor for BundleStub();
  v26 = v33;
  if ((sub_190A480F4() & 1) == 0)
    goto LABEL_12;
  v27 = *(int *)(v25 + 24);
  v28 = *(_QWORD *)(a1 + v27);
  v29 = *(_QWORD *)(a1 + v27 + 8);
  v30 = (_QWORD *)(v26 + v27);
  if (v28 == *v30 && v29 == v30[1])
    v22 = 1;
  else
    v22 = sub_190A486DC();
  return v22 & 1;
}

unint64_t sub_1909AC83C()
{
  unint64_t result;

  result = qword_1ECF6B4A8;
  if (!qword_1ECF6B4A8)
  {
    result = MEMORY[0x19401429C](&unk_190A569B4, &type metadata for BundleStub.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B4A8);
  }
  return result;
}

uint64_t sub_1909AC880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BundleStub();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1909AC8C4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BundleStub();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1909AC900()
{
  return sub_1908AA2F4(&qword_1EE1EE068, (uint64_t (*)(uint64_t))type metadata accessor for BundleStub, (uint64_t)&protocol conformance descriptor for BundleStub);
}

uint64_t *initializeBufferWithCopyOfBuffer for BundleStub(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  id v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_190A45FC4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = *(int *)(a3 + 24);
    v13 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v13;
    v14 = (uint64_t *)((char *)a1 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = v13;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for BundleStub(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_190A45FC4();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);

  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for BundleStub(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  id v15;

  v6 = sub_190A45FC4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = *(int *)(a3 + 24);
  v11 = *(void **)&a2[v9];
  *(_QWORD *)&a1[v9] = v11;
  v12 = &a1[v10];
  v13 = &a2[v10];
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = v14;
  v15 = v11;
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for BundleStub(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  char *v17;
  char *v18;

  v6 = sub_190A45FC4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = *(void **)&a2[v12];
  v14 = *(void **)&a1[v12];
  *(_QWORD *)&a1[v12] = v13;
  v15 = v13;

  v16 = *(int *)(a3 + 24);
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for BundleStub(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_190A45FC4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  return a1;
}

char *assignWithTake for BundleStub(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_190A45FC4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = *(void **)&a1[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];

  v14 = *(int *)(a3 + 24);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v18 = *(_QWORD *)v16;
  v17 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = v18;
  *((_QWORD *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BundleStub()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909ACEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for BundleStub()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909ACF48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_1909ACFC4()
{
  unint64_t v0;

  sub_19093FE18();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for BundleStub.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1909AD090 + 4 * byte_190A567E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1909AD0C4 + 4 * byte_190A567E0[v4]))();
}

uint64_t sub_1909AD0C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909AD0CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909AD0D4);
  return result;
}

uint64_t sub_1909AD0E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909AD0E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1909AD0EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909AD0F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BundleStub.CodingKeys()
{
  return &type metadata for BundleStub.CodingKeys;
}

unint64_t sub_1909AD114()
{
  unint64_t result;

  result = qword_1EE1EE070;
  if (!qword_1EE1EE070)
  {
    result = MEMORY[0x19401429C](&unk_190A5698C, &type metadata for BundleStub.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EE070);
  }
  return result;
}

unint64_t sub_1909AD15C()
{
  unint64_t result;

  result = qword_1ECF6B4B8;
  if (!qword_1ECF6B4B8)
  {
    result = MEMORY[0x19401429C](&unk_190A568FC, &type metadata for BundleStub.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B4B8);
  }
  return result;
}

unint64_t sub_1909AD1A4()
{
  unint64_t result;

  result = qword_1ECF6B4B0;
  if (!qword_1ECF6B4B0)
  {
    result = MEMORY[0x19401429C](&unk_190A56924, &type metadata for BundleStub.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B4B0);
  }
  return result;
}

uint64_t sub_1909AD1E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1909AD338(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  void *v14;
  void *v15;
  _BYTE v16[16];
  _QWORD aBlock[6];

  v4 = sub_190A47980();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_190A479C8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
    v12 = sub_190A47D64();
    MEMORY[0x1E0C80A78](v12);
    *(_QWORD *)&v16[-16] = a1;
    *(_QWORD *)&v16[-8] = a2;
    return sub_1909AD61C((void (*)(void))sub_1909AD5F4, (uint64_t)&v16[-32]);
  }
  else
  {
    sub_1908B45BC();
    v14 = (void *)sub_190A48004();
    aBlock[4] = a1;
    aBlock[5] = a2;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1908A9D98;
    aBlock[3] = &block_descriptor_4;
    v15 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_190A47998();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1909AD560();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
    sub_1909AD5A8();
    sub_190A481E4();
    MEMORY[0x194013234](0, v11, v7, v15);
    _Block_release(v15);

    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  }
}

unint64_t sub_1909AD560()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECF6D318;
  if (!qword_1ECF6D318)
  {
    v1 = sub_190A47980();
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ECF6D318);
  }
  return result;
}

unint64_t sub_1909AD5A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECF6D328;
  if (!qword_1ECF6D328)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6D320);
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ECF6D328);
  }
  return result;
}

uint64_t sub_1909AD5F4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1909AD61C(void (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  char isEscapingClosureAtFileLocation;

  sub_190A47D58();
  swift_release();
  swift_task_getMainExecutor();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    goto LABEL_6;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  a1();
  if (v2)
    return swift_release();
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_6:
    sub_190A48298();
    sub_190A47B3C();
    sub_190A48880();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    result = sub_190A48448();
    __break(1u);
  }
  return result;
}

uint64_t sub_1909AD7A8()
{
  return swift_deallocObject();
}

id sub_1909AD890(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  objc_class *v13;
  id v14;
  id v15;
  objc_super v17;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C750);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v9 = (void *)sub_190A47C50();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  sub_1909ADD50(a2, (uint64_t)v8);
  v10 = sub_190A460CC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
  {
    v12 = (void *)sub_190A4609C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  v13 = (objc_class *)type metadata accessor for WidgetHostContext();
  v17.receiver = v3;
  v17.super_class = v13;
  v14 = objc_msgSendSuper2(&v17, sel_initWithInputItems_contextUUID_, v9, v12);

  v15 = v14;
  sub_1909ADD98(a2);
  if (v15)

  return v15;
}

id sub_1909ADAB8(uint64_t a1, void *a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  objc_class *v15;
  id v16;
  id v17;
  objc_super v19;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C750);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v11 = (void *)sub_190A47C50();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  sub_1909ADD50(a3, (uint64_t)v10);
  v12 = sub_190A460CC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    v14 = (void *)sub_190A4609C();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  v15 = (objc_class *)type metadata accessor for WidgetHostContext();
  v19.receiver = v4;
  v19.super_class = v15;
  v16 = objc_msgSendSuper2(&v19, sel_initWithInputItems_listenerEndpoint_contextUUID_, v11, a2, v14);

  v17 = v16;
  sub_1909ADD98(a3);
  if (v17)

  return v17;
}

id sub_1909ADD00()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WidgetHostContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for WidgetHostContext()
{
  return objc_opt_self();
}

uint64_t sub_1909ADD50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1909ADD98(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C750);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id static WidgetRelevanceFetchResult.defaultImplementationResult.getter()
{
  objc_class *v0;
  _BYTE *v1;
  _BYTE *v2;
  objc_super v4;

  v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 1;
  v2 = v1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = sub_1909AE1FC(MEMORY[0x1E0DEE9D8]);

  v4.receiver = v2;
  v4.super_class = v0;
  return objc_msgSendSuper2(&v4, sel_init);
}

id WidgetRelevanceFetchResult.__allocating_init(widgetRelevances:)(unint64_t a1)
{
  objc_class *v1;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  objc_super v7;

  v3 = objc_allocWithZone(v1);
  v3[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 0;
  v4 = v3;
  v5 = sub_1909AE1FC(a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v4[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = v5;

  v7.receiver = v4;
  v7.super_class = v1;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t WidgetRelevanceFetchResult.isDefaultImplementation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation);
}

uint64_t WidgetRelevanceFetchResult.widgetRelevances.getter()
{
  return swift_bridgeObjectRetain();
}

id WidgetRelevanceFetchResult.init(widgetRelevances:)(unint64_t a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  char *v4;
  uint64_t v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v1[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 0;
  v4 = v1;
  v5 = sub_1909AE1FC(a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v4[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = v5;

  v7.receiver = v4;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t static WidgetRelevanceFetchResult.supportsSecureCoding.getter()
{
  return 1;
}

id WidgetRelevanceFetchResult.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1909AE55C(a1);

  return v4;
}

id WidgetRelevanceFetchResult.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_1909AE55C(a1);

  return v2;
}

Swift::Void __swiftcall WidgetRelevanceFetchResult.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation);
  v4 = (void *)sub_190A47AC4();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v3, v4);

  sub_1908AB890(0, (unint64_t *)&qword_1ECF6B860);
  v5 = (void *)sub_190A47C50();
  v6 = (id)sub_190A47AC4();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v5, v6);

}

id WidgetRelevanceFetchResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1909AE1FC(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = a1;
  v3 = a1 >> 62;
  if (!(a1 >> 62))
  {
    if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) >= 101)
      goto LABEL_3;
LABEL_39:
    swift_bridgeObjectRetain();
    return v2;
  }
  swift_bridgeObjectRetain();
  v19 = sub_190A48484();
  swift_bridgeObjectRelease();
  if (v19 < 101)
    goto LABEL_39;
LABEL_3:
  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v4 = sub_190A465A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ECF6D988);
  v5 = sub_190A46588();
  v6 = sub_190A47F50();
  if (os_log_type_enabled(v5, v6))
  {
    v1 = 12;
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134217984;
    sub_190A48178();
    _os_log_impl(&dword_1908A7000, v5, v6, "Too many widget relevances. Truncating to %ld.", v7, 0xCu);
    MEMORY[0x194014398](v7, -1, -1);
  }

  if (!v3)
  {
    if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) >= 100)
      v1 = 100;
    else
      v1 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  if (v2 < 0)
    v8 = v2;
  else
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v9 = sub_190A48484();
  swift_bridgeObjectRetain();
  v10 = sub_190A48484();
  swift_bridgeObjectRelease();
  if (v10 < 0)
  {
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v9 >= 100)
    v11 = 100;
  else
    v11 = v9;
  if (v9 >= 0)
    v1 = v11;
  else
    v1 = 100;
  swift_bridgeObjectRetain();
  v8 = sub_190A48484();
  swift_bridgeObjectRelease();
  if (v8 < (uint64_t)v1)
    goto LABEL_42;
LABEL_23:
  if ((v2 & 0xC000000000000001) != 0 && v1)
  {
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6B860);
    v12 = 0;
    do
    {
      v13 = v12 + 1;
      sub_190A482D4();
      v12 = v13;
    }
    while (v1 != v13);
  }
  if (v3)
  {
    swift_bridgeObjectRetain();
    v8 = sub_190A48490();
    v10 = v14;
    v9 = v15;
    v1 = v16;
    swift_bridgeObjectRelease_n();
    if ((v1 & 1) != 0)
      goto LABEL_32;
LABEL_31:
    v2 = sub_1908B8AA4(v8, v10, v9, v1);
    swift_unknownObjectRelease();
    return v2;
  }
  v9 = 0;
  v8 = v2 & 0xFFFFFFFFFFFFFF8;
  v10 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v1 = (2 * v1) | 1;
  if ((v1 & 1) == 0)
    goto LABEL_31;
LABEL_32:
  sub_190A48700();
  swift_unknownObjectRetain_n();
  v17 = swift_dynamicCastClass();
  if (!v17)
  {
    swift_unknownObjectRelease();
    v17 = MEMORY[0x1E0DEE9D8];
  }
  v18 = *(_QWORD *)(v17 + 16);
  swift_release();
  if (__OFSUB__(v1 >> 1, v9))
    goto LABEL_43;
  if (v18 != (v1 >> 1) - v9)
  {
LABEL_44:
    swift_unknownObjectRelease();
    goto LABEL_31;
  }
  v2 = swift_dynamicCastClass();
  swift_unknownObjectRelease();
  if (!v2)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v2;
}

id sub_1909AE55C(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  _BYTE *v5;
  void *v6;
  unsigned __int8 v7;
  uint64_t v8;
  id result;
  unint64_t v10;
  uint64_t v11;
  objc_super v12;
  unint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = v2;
  v6 = (void *)sub_190A47AC4();
  v7 = objc_msgSend(a1, sel_decodeBoolForKey_, v6);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BCE0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_190A4A360;
  *(_QWORD *)(v8 + 32) = sub_1908AB890(0, (unint64_t *)&unk_1ECF6D3B0);
  *(_QWORD *)(v8 + 40) = sub_1908AB890(0, (unint64_t *)&qword_1ECF6B860);
  sub_190A48094();
  result = (id)swift_bridgeObjectRelease();
  if (v15)
  {
    sub_190901E94(&v14, &v16);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EE1E6BF0);
    swift_dynamicCast();
    v10 = v13;
    v5[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = v7;
    v11 = sub_1909AE1FC(v10);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v5[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = v11;

    v12.receiver = v5;
    v12.super_class = ObjectType;
    return objc_msgSendSuper2(&v12, sel_init);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for WidgetRelevanceFetchResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for WidgetRelevanceFetchResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetRelevanceFetchResult.__allocating_init(widgetRelevances:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of WidgetRelevanceFetchResult.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1909AE73C()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D718 = result;
  return result;
}

uint64_t sub_1909AE760()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B528);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D700 = v0;
  *(_QWORD *)algn_1ECF6D708 = 0xD000000000000010;
  qword_1ECF6D710 = 0x8000000190A60DC0;
  return result;
}

ValueMetadata *type metadata accessor for RedactionReasonsKey()
{
  return &type metadata for RedactionReasonsKey;
}

uint64_t sub_1909AE7E4()
{
  if (qword_1ECF6B4F0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1909AE824()
{
  return sub_190A4690C();
}

uint64_t sub_1909AE84C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46918();
  *a1 = result;
  return result;
}

uint64_t sub_1909AE884()
{
  uint64_t v0;

  if (qword_1ECF6B648 != -1)
    swift_once();
  v0 = qword_1ECF6D700;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1909AE900(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t);

  *(_QWORD *)(v3 + 160) = a2;
  *(_QWORD *)(v3 + 168) = v2;
  *(_QWORD *)(v3 + 152) = a1;
  *(_QWORD *)(v3 + 176) = type metadata accessor for ControlTemplateButton(0);
  *(_QWORD *)(v3 + 184) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  *(_QWORD *)(v3 + 192) = swift_task_alloc();
  type metadata accessor for ControlTemplateButton.Option(0);
  *(_QWORD *)(v3 + 200) = swift_task_alloc();
  *(_QWORD *)(v3 + 208) = swift_task_alloc();
  *(_QWORD *)(v3 + 216) = swift_task_alloc();
  *(_QWORD *)(v3 + 224) = swift_task_alloc();
  v4 = sub_190A47284();
  *(_QWORD *)(v3 + 232) = v4;
  *(_QWORD *)(v3 + 240) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 248) = swift_task_alloc();
  *(_QWORD *)(v3 + 256) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB690);
  *(_QWORD *)(v3 + 264) = swift_task_alloc();
  *(_QWORD *)(v3 + 272) = swift_task_alloc();
  v5 = sub_190A46C30();
  *(_QWORD *)(v3 + 280) = v5;
  *(_QWORD *)(v3 + 288) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 296) = swift_task_alloc();
  *(_QWORD *)(v3 + 304) = sub_190A47D64();
  *(_QWORD *)(v3 + 312) = sub_190A47D58();
  *(_BYTE *)(v3 + 624) = *(_BYTE *)(v2 + 32);
  v6 = *(_OWORD *)(v2 + 72);
  *(_OWORD *)(v3 + 320) = *(_OWORD *)(v2 + 40);
  *(_OWORD *)(v3 + 336) = v6;
  *(_OWORD *)(v3 + 352) = *(_OWORD *)(v2 + 88);
  v7 = *(int **)(v2 + 104);
  v8 = *(_QWORD *)(v2 + 120);
  *(_QWORD *)(v3 + 368) = v8;
  v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)v7 + *v7);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 376) = v9;
  *v9 = v3;
  v9[1] = sub_1909AEAD8;
  return v11(v3 + 16, v8);
}

uint64_t sub_1909AEAD8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  *(_QWORD *)(*v1 + 384) = v0;
  swift_task_dealloc();
  v3 = sub_190A47D28();
  if (!v0)
  {
    *(_QWORD *)(v2 + 392) = v3;
    *(_QWORD *)(v2 + 400) = v4;
  }
  return swift_task_switch();
}

uint64_t sub_1909AEB60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  int *v46;
  _QWORD *v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t);
  void (*v55)(uint64_t, uint64_t);
  void (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 408) = v1;
  *(_QWORD *)(v0 + 416) = v2;
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 424) = v3;
  *(_QWORD *)(v0 + 432) = v4;
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 440) = v5;
  *(_QWORD *)(v0 + 448) = v6;
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 456) = v7;
  *(_QWORD *)(v0 + 464) = v8;
  v9 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 472) = v9;
  v74 = v3;
  if (v1)
  {
    if (v1 == 1)
    {
      v10 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v16 = 1;
      goto LABEL_13;
    }
    v17 = *(_QWORD *)(v0 + 296);
    v70 = *(_QWORD *)(v0 + 288);
    v75 = *(_QWORD *)(v0 + 280);
    swift_retain();
    sub_190953E94(v2, v74, v4, v5);
    v66 = v7;
    v67 = v6;
    v65 = v8;
    v62 = v9;
    sub_190953E94(v6, v7, v8, v9);
    sub_190A46C24();
    v73 = v1;
    sub_190A47674();
    v19 = v18;
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v26 = v17;
    v3 = v74;
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v26, v75);
    v64 = 0;
    v63 = v19 | ((unint64_t)v21 << 32);
    v61 = v23 | ((unint64_t)v25 << 32);
  }
  else
  {
    v73 = 0;
    sub_190953E94(v2, v3, v4, v5);
    v66 = v7;
    v67 = v6;
    v65 = v8;
    v62 = v9;
    sub_190953E94(v6, v7, v8, v9);
    v61 = 0;
    v63 = 0;
    v64 = 1;
  }
  v27 = *(_QWORD *)(v0 + 296);
  v68 = *(_QWORD *)(v0 + 288);
  v71 = *(_QWORD *)(v0 + 280);
  v53 = *(_QWORD *)(v0 + 272);
  v28 = *(_QWORD *)(v0 + 256);
  v57 = *(_QWORD *)(v0 + 240);
  v59 = *(_QWORD *)(v0 + 232);
  v29 = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 88) = v2;
  *(_QWORD *)(v0 + 96) = v3;
  *(_QWORD *)(v0 + 104) = v4;
  *(_QWORD *)(v0 + 112) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA3F0);
  swift_allocObject();
  sub_190953E94(v2, v3, v4, v5);
  sub_190953E94(v2, v3, v4, v5);
  sub_190A46FF0();
  v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16);
  v56(v27, v29, v71);
  sub_190A46FA8();
  sub_190A46FCC();
  swift_release();
  v72 = v2;
  v69 = v5;
  sub_190953EC4(v2, v3, v4, v5);
  v30 = v53;
  sub_190A47194();
  v55 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
  v55(v28, v59);
  v31 = sub_190A471D0();
  v32 = *(_QWORD *)(v31 - 8);
  v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  v33 = v54(v30, 1, v31);
  v34 = *(_QWORD *)(v0 + 272);
  v49 = v32;
  if (v33 == 1)
  {
    sub_1908AA544(v34, &qword_1EE1EB690);
    v58 = 0;
    v60 = 0;
  }
  else
  {
    v35 = (void *)sub_190A471C4();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v31);
    v36 = objc_msgSend(v35, sel_string);

    v58 = sub_190A47ADC();
    v60 = v37;

  }
  v38 = *(_QWORD *)(v0 + 296);
  v50 = *(_QWORD *)(v0 + 280);
  v51 = *(_QWORD *)(v0 + 264);
  v39 = *(_QWORD *)(v0 + 248);
  v52 = *(_QWORD *)(v0 + 232);
  v40 = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 120) = v67;
  *(_QWORD *)(v0 + 128) = v66;
  *(_QWORD *)(v0 + 136) = v65;
  *(_QWORD *)(v0 + 144) = v62;
  swift_allocObject();
  sub_190953E94(v67, v66, v65, v62);
  sub_190953E94(v67, v66, v65, v62);
  sub_190A46FF0();
  v56(v38, v40, v50);
  sub_190A46FA8();
  sub_190A46FCC();
  swift_release();
  sub_190953EC4(v67, v66, v65, v62);
  sub_190A47194();
  v55(v39, v52);
  v41 = v54(v51, 1, v31);
  v42 = *(_QWORD *)(v0 + 264);
  if (v41 == 1)
  {
    sub_1909B02DC(v73, v72, v74, v4, v69, v67, v66, v65, v62);
    sub_1908AA544(v42, &qword_1EE1EB690);
    v14 = 0;
    v15 = 0;
  }
  else
  {
    v43 = (void *)sub_190A471C4();
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v42, v31);
    v44 = objc_msgSend(v43, sel_string);

    v14 = sub_190A47ADC();
    v15 = v45;

    sub_1909B02DC(v73, v72, v74, v4, v69, v67, v66, v65, v62);
  }
  v16 = v64;
  v13 = v63;
  v10 = v60;
  v12 = v61;
  v11 = v58;
LABEL_13:
  *(_QWORD *)(v0 + 520) = v15;
  *(_QWORD *)(v0 + 504) = v13;
  *(_QWORD *)(v0 + 512) = v14;
  *(_QWORD *)(v0 + 488) = v11;
  *(_QWORD *)(v0 + 496) = v12;
  *(_QWORD *)(v0 + 480) = v10;
  v46 = *(int **)(v0 + 336);
  *(_BYTE *)(v0 + 625) = v16;
  v76 = (int *)((char *)v46 + *v46);
  v47 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 528) = v47;
  *v47 = v0;
  v47[1] = sub_1909AF0BC;
  return ((uint64_t (*)(_QWORD, _QWORD))v76)(*(_QWORD *)(v0 + 368), 0);
}

uint64_t sub_1909AF0BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 536) = a1;
  *(_QWORD *)(v3 + 544) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1909AF140()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t, uint64_t);

  v1 = *(int **)(v0 + 352);
  if (v1)
  {
    v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 552) = v2;
    *v2 = v0;
    v2[1] = sub_1909AF32C;
    v3 = *(_QWORD *)(v0 + 368);
    v4 = 0;
    return v9(v3, v4);
  }
  v6 = *(_QWORD *)(v0 + 544);
  sub_1909B0360(*(_QWORD *)(v0 + 536), 0, *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 504), *(_QWORD *)(v0 + 496), *(unsigned __int8 *)(v0 + 625), *(_QWORD *)(v0 + 488), *(uint64_t **)(v0 + 224), *(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 520));
  if (!v6)
  {
    v7 = *(int **)(v0 + 336);
    swift_release();
    v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v7 + *v7);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 576) = v8;
    *v8 = v0;
    v8[1] = sub_1909AF57C;
    v3 = *(_QWORD *)(v0 + 368);
    v4 = 1;
    return v9(v3, v4);
  }
  sub_1909B02DC(*(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 472));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909AF32C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 560) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v4 + 568) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1909AF3C0()
{
  uint64_t v0;
  uint64_t v1;
  int *v3;
  _QWORD *v4;
  int *v5;

  v1 = *(_QWORD *)(v0 + 560);
  sub_1909B0360(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 568), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 504), *(_QWORD *)(v0 + 496), *(unsigned __int8 *)(v0 + 625), *(_QWORD *)(v0 + 488), *(uint64_t **)(v0 + 224), *(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 520));
  if (v1)
  {
    sub_1909B02DC(*(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 472));
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = *(int **)(v0 + 336);
    swift_release();
    swift_release();
    v5 = (int *)((char *)v3 + *v3);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 576) = v4;
    *v4 = v0;
    v4[1] = sub_1909AF57C;
    return ((uint64_t (*)(_QWORD, uint64_t))v5)(*(_QWORD *)(v0 + 368), 1);
  }
}

uint64_t sub_1909AF57C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 584) = a1;
  *(_QWORD *)(v3 + 592) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1909AF600()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  void (*v22)(_QWORD *__return_ptr, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  _QWORD v37[3];

  v1 = *(int **)(v0 + 352);
  if (v1)
  {
    v35 = (int *)((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 600) = v2;
    *v2 = v0;
    v2[1] = sub_1909AF9E8;
    return ((uint64_t (*)(_QWORD, uint64_t))v35)(*(_QWORD *)(v0 + 368), 1);
  }
  else
  {
    swift_release();
    v4 = *(_QWORD *)(v0 + 592);
    sub_1909B0360(*(_QWORD *)(v0 + 584), 0, *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 504), *(_QWORD *)(v0 + 496), *(unsigned __int8 *)(v0 + 625), *(_QWORD *)(v0 + 488), *(uint64_t **)(v0 + 216), *(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 520));
    v5 = *(_QWORD *)(v0 + 472);
    v6 = *(_QWORD *)(v0 + 456);
    v7 = *(_QWORD *)(v0 + 464);
    v9 = *(_QWORD *)(v0 + 440);
    v8 = *(_QWORD *)(v0 + 448);
    v36 = *(_QWORD *)(v0 + 432);
    v34 = *(_QWORD *)(v0 + 424);
    v10 = *(_QWORD *)(v0 + 408);
    v33 = *(_QWORD *)(v0 + 416);
    if (v4)
    {
      sub_1909B09A0(*(_QWORD *)(v0 + 224));
      sub_1909B02DC(v10, v33, v34, v36, v9, v8, v6, v7, v5);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 464);
      v22 = *(void (**)(_QWORD *__return_ptr, uint64_t))(v0 + 320);
      v25 = *(_BYTE *)(v0 + 624);
      v28 = *(_QWORD *)(v0 + 408);
      v29 = *(_QWORD *)(v0 + 456);
      v12 = *(_QWORD *)(v0 + 216);
      v11 = *(_QWORD *)(v0 + 224);
      v26 = *(_QWORD *)(v0 + 472);
      v30 = *(_QWORD *)(v0 + 448);
      v14 = *(_QWORD *)(v0 + 200);
      v13 = *(_QWORD *)(v0 + 208);
      v15 = *(_QWORD *)(v0 + 184);
      v27 = *(_QWORD *)(v0 + 440);
      v16 = *(int **)(v0 + 176);
      v23 = *(_QWORD *)(v0 + 192);
      v24 = *(_QWORD *)(v0 + 152);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1909B09DC(v11, v13);
      v17 = sub_1909B09DC(v12, v14);
      v22(v37, v17);
      v32 = v37[0];
      v18 = sub_190A45FC4();
      v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
      v19(v23, 1, 1, v18);
      v20 = v15 + v16[7];
      v19(v20, 1, 1, v18);
      v21 = (_QWORD *)(v15 + v16[10]);
      *v21 = 0;
      v21[1] = 0;
      sub_1908BD0B4(v13, v15, type metadata accessor for ControlTemplateButton.Option);
      sub_1908BD0B4(v14, v15 + v16[5], type metadata accessor for ControlTemplateButton.Option);
      *(_QWORD *)(v15 + v16[6]) = v32;
      sub_1908DCA84(v23, v20, (uint64_t *)&unk_1ECF6C858);
      *(_BYTE *)(v15 + v16[8]) = 0;
      *(_BYTE *)(v15 + v16[9]) = v25;
      swift_bridgeObjectRelease();
      *v21 = 0;
      v21[1] = 0;
      *(_BYTE *)(v15 + v16[11]) = 0;
      sub_1908BD0B4(v15, v24, type metadata accessor for ControlTemplateButton);
      sub_1909B02DC(v28, v33, v34, v36, v27, v30, v29, v31, v26);
      sub_1909B09A0(v12);
      sub_1909B09A0(v11);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
    }
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1909AF9E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 608) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v4 + 616) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1909AFA7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  void (*v21)(_QWORD *__return_ptr, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];

  v1 = *(_QWORD *)(v0 + 616);
  swift_release();
  v2 = *(_QWORD *)(v0 + 608);
  sub_1909B0360(*(_QWORD *)(v0 + 584), v1, *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 504), *(_QWORD *)(v0 + 496), *(unsigned __int8 *)(v0 + 625), *(_QWORD *)(v0 + 488), *(uint64_t **)(v0 + 216), *(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 520));
  v3 = *(_QWORD *)(v0 + 472);
  v4 = *(_QWORD *)(v0 + 456);
  v5 = *(_QWORD *)(v0 + 464);
  v6 = *(_QWORD *)(v0 + 440);
  v7 = *(_QWORD *)(v0 + 448);
  v34 = *(_QWORD *)(v0 + 432);
  v33 = *(_QWORD *)(v0 + 424);
  v32 = *(_QWORD *)(v0 + 416);
  v31 = *(_QWORD *)(v0 + 408);
  if (v2)
  {
    sub_1909B09A0(*(_QWORD *)(v0 + 224));
    sub_1909B02DC(v31, v32, v33, v34, v6, v7, v4, v5, v3);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  else
  {
    v21 = *(void (**)(_QWORD *__return_ptr, uint64_t))(v0 + 320);
    v25 = *(_BYTE *)(v0 + 624);
    v30 = *(_QWORD *)(v0 + 464);
    v8 = *(_QWORD *)(v0 + 224);
    v26 = *(_QWORD *)(v0 + 472);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 216);
    v28 = *(_QWORD *)(v0 + 456);
    v29 = *(_QWORD *)(v0 + 448);
    v27 = *(_QWORD *)(v0 + 440);
    v11 = *(_QWORD *)(v0 + 200);
    v22 = *(_QWORD *)(v0 + 192);
    v13 = *(int **)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 184);
    v23 = v10;
    v24 = *(_QWORD *)(v0 + 152);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1909B09DC(v8, v9);
    v14 = sub_1909B09DC(v10, v11);
    v21(v35, v14);
    v15 = v35[0];
    v16 = sub_190A45FC4();
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
    v17(v22, 1, 1, v16);
    v18 = v12 + v13[7];
    v17(v18, 1, 1, v16);
    v19 = (_QWORD *)(v12 + v13[10]);
    *v19 = 0;
    v19[1] = 0;
    sub_1908BD0B4(v9, v12, type metadata accessor for ControlTemplateButton.Option);
    sub_1908BD0B4(v11, v12 + v13[5], type metadata accessor for ControlTemplateButton.Option);
    *(_QWORD *)(v12 + v13[6]) = v15;
    sub_1908DCA84(v22, v18, (uint64_t *)&unk_1ECF6C858);
    *(_BYTE *)(v12 + v13[8]) = 0;
    *(_BYTE *)(v12 + v13[9]) = v25;
    swift_bridgeObjectRelease();
    *v19 = 0;
    v19[1] = 0;
    *(_BYTE *)(v12 + v13[11]) = 0;
    sub_1908BD0B4(v12, v24, type metadata accessor for ControlTemplateButton);
    sub_1909B02DC(v31, v32, v33, v34, v27, v29, v28, v30, v26);
    sub_1909B09A0(v23);
    sub_1909B09A0(v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909AFE1C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909AFEE4()
{
  uint64_t v0;

  sub_1909B02DC(*(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 472));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909AFFCC()
{
  uint64_t v0;

  sub_1909B02DC(*(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 472));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909B00B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 472);
  v11 = *(_QWORD *)(v0 + 464);
  v3 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v0 + 456);
  v5 = *(_QWORD *)(v0 + 432);
  v4 = *(_QWORD *)(v0 + 440);
  v7 = *(_QWORD *)(v0 + 416);
  v6 = *(_QWORD *)(v0 + 424);
  v8 = *(_QWORD *)(v0 + 408);
  v9 = *(_QWORD *)(v0 + 224);
  swift_release();
  sub_1909B02DC(v8, v7, v6, v5, v4, v3, v2, v11, v1);
  sub_1909B09A0(v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909B01C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 472);
  v11 = *(_QWORD *)(v0 + 464);
  v3 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v0 + 456);
  v5 = *(_QWORD *)(v0 + 432);
  v4 = *(_QWORD *)(v0 + 440);
  v7 = *(_QWORD *)(v0 + 416);
  v6 = *(_QWORD *)(v0 + 424);
  v8 = *(_QWORD *)(v0 + 408);
  v9 = *(_QWORD *)(v0 + 224);
  swift_release();
  sub_1909B02DC(v8, v7, v6, v5, v4, v3, v2, v11, v1);
  sub_1909B09A0(v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909B02DC(uint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  if (result != 1)
  {
    swift_release();
    sub_190953EC4(a2, a3, a4, a5);
    return sub_190953EC4(a6, a7, a8, a9);
  }
  return result;
}

uint64_t sub_1909B0360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, uint64_t a7@<X7>, uint64_t *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t KeyPath;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  int v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  char *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t *v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(char *, uint64_t, uint64_t);
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  char *v98;

  v88 = a7;
  v87 = a6;
  v85 = a4;
  v86 = a5;
  v91 = a3;
  v82 = a2;
  v84 = a8;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v83 = (uint64_t)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v70 - v16;
  MEMORY[0x1E0C80A78](v15);
  v94 = (uint64_t)&v70 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB690);
  v20 = MEMORY[0x1E0C80A78](v19);
  v75 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v70 - v22;
  v24 = sub_190A46C30();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_190A47284();
  v29 = *(_QWORD *)(v28 - 8);
  v92 = v28;
  v93 = v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v90 = (char *)&v70 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v70 - v32;
  KeyPath = swift_getKeyPath();
  v95 = a1;
  v96 = KeyPath;
  v97 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA3E8);
  swift_allocObject();
  v89 = a1;
  swift_retain_n();
  v81 = KeyPath;
  swift_retain();
  sub_190A46FF0();
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v74 = v24;
  v73 = v35;
  v35(v27, v91, v24);
  sub_190A46FA8();
  sub_190A46FCC();
  swift_release();
  v98 = v33;
  sub_190A47194();
  v36 = sub_190A471D0();
  v37 = *(_QWORD *)(v36 - 8);
  v72 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  v38 = v72(v23, 1, v36);
  v71 = v37;
  if (v38 == 1)
  {
    sub_1908AA544((uint64_t)v23, &qword_1EE1EB690);
    v79 = 0;
    v80 = 0;
  }
  else
  {
    v39 = (void *)sub_190A471C4();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v36);
    v40 = objc_msgSend(v39, sel_string);

    v41 = sub_190A47ADC();
    v79 = v42;
    v80 = v41;

  }
  sub_190A4726C();
  v43 = sub_190A47260();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48))(v17, 1, v43);
  v46 = v82;
  v47 = v90;
  if (v45 == 1)
  {
    sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6A3B8);
  }
  else
  {
    v48 = sub_190A47254();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v17, v43);
    if ((v48 & 1) != 0)
    {
      sub_190A4726C();
      goto LABEL_9;
    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v94, 1, 1, v43);
LABEL_9:
  v49 = v92;
  v78 = a11;
  v77 = a10;
  v76 = a9;
  v50 = v93;
  if (v46)
  {
    v95 = v46;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB688);
    swift_allocObject();
    swift_retain_n();
    sub_190A46FF0();
    v73(v27, v91, v74);
    sub_190A46FA8();
    sub_190A46FCC();
    swift_release();
    v51 = (uint64_t)v75;
    sub_190A47194();
    if (v72((char *)v51, 1, v36) != 1)
    {
      v54 = (void *)sub_190A471C4();
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v51, v36);
      v55 = objc_msgSend(v54, sel_string);

      v52 = sub_190A47ADC();
      v53 = v56;

      swift_release();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v90, v49);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v47, v49);
    swift_release();
    sub_1908AA544(v51, &qword_1EE1EB690);
  }
  v52 = 0;
  v53 = 0;
LABEL_14:
  v57 = v94;
  v58 = v83;
  sub_19093AF58(v94, v83);
  v59 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  v60 = v84;
  v61 = (uint64_t)v84 + v59[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v61, 1, 1, v43);
  v62 = (char *)v60 + v59[7];
  *(_QWORD *)v62 = 0;
  *((_QWORD *)v62 + 1) = 0;
  v62[16] = 1;
  v63 = (uint64_t *)((char *)v60 + v59[8]);
  *v63 = 0;
  v63[1] = 0;
  v64 = (uint64_t *)((char *)v60 + v59[9]);
  *v64 = 0;
  v64[1] = 0;
  v65 = v79;
  *v60 = v80;
  v60[1] = v65;
  v60[2] = v52;
  v60[3] = v53;
  v66 = v78;
  swift_bridgeObjectRetain();
  v67 = v76;
  swift_bridgeObjectRetain();
  sub_1908DCA84(v58, v61, (uint64_t *)&unk_1ECF6A3B8);
  v68 = v86;
  *(_QWORD *)v62 = v85;
  *((_QWORD *)v62 + 1) = v68;
  v62[16] = v87 & 1;
  swift_bridgeObjectRelease();
  *v63 = v88;
  v63[1] = v67;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  *v64 = v77;
  v64[1] = v66;
  sub_1908AA544(v57, (uint64_t *)&unk_1ECF6A3B8);
  return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v98, v92);
}

uint64_t sub_1909B09A0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ControlTemplateButton.Option(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1909B09DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ControlTemplateButton.Option(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for FeatureFlags.Widgets(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FeatureFlags.Widgets(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1909B0B04 + 4 * byte_190A56B1D[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1909B0B38 + 4 * byte_190A56B18[v4]))();
}

uint64_t sub_1909B0B38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909B0B40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909B0B48);
  return result;
}

uint64_t sub_1909B0B54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909B0B5CLL);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1909B0B60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909B0B68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlags.Widgets()
{
  return &type metadata for FeatureFlags.Widgets;
}

unint64_t sub_1909B0B88()
{
  unint64_t result;

  result = qword_1EE1EE098;
  if (!qword_1EE1EE098)
  {
    result = MEMORY[0x19401429C](&unk_190A56B8C, &type metadata for FeatureFlags.Widgets);
    atomic_store(result, (unint64_t *)&qword_1EE1EE098);
  }
  return result;
}

uint64_t sub_1909B0BCC(unsigned __int8 a1)
{
  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1909B0BF8 + 4 * byte_190A56B22[a1]))("BackgroundAbsentCheck", 21);
}

const char *sub_1909B0BF8()
{
  return "AnimatedTransition";
}

const char *sub_1909B0C58()
{
  return "AnimatedTransitionWatchOS";
}

const char *sub_1909B0C6C()
{
  return "ContextualWidgets";
}

const char *sub_1909B0C80()
{
  return "ControlsBuildAndRunHack";
}

const char *sub_1909B0C94()
{
  return "RelevanceDuringTimelineReload";
}

const char *sub_1909B0CA8()
{
  return "Widgets";
}

uint64_t sub_1909B0CBC()
{
  unsigned __int8 *v0;

  return sub_1909B0BCC(*v0);
}

void DynamicIslandExpandedRegion._viewRepresentation.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[13];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v32 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v25[7] = a1;
  v34 = v4;
  v35 = v3;
  v5 = MEMORY[0x19401423C](255, &v34, MEMORY[0x1E0CDE300], 0);
  v25[5] = v4;
  v34 = v4;
  v35 = v3;
  v25[6] = v3;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v34 = v5;
  v35 = OpaqueTypeConformance2;
  v7 = MEMORY[0x19401423C](255, &v34, MEMORY[0x1E0CDE310], 0);
  v34 = v5;
  v35 = OpaqueTypeConformance2;
  v8 = swift_getOpaqueTypeConformance2();
  v34 = v7;
  v35 = v8;
  v29 = v8;
  v9 = MEMORY[0x19401423C](255, &v34, MEMORY[0x1E0CDE9F0], 0);
  v10 = sub_190A46F9C();
  v25[2] = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v25[1] = (char *)v25 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6138);
  MEMORY[0x1E0C80A78](v12);
  v13 = swift_checkMetadataState();
  v25[4] = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v26 = swift_checkMetadataState();
  v25[8] = *(_QWORD *)(v26 - 8);
  v14 = MEMORY[0x1E0C80A78](v26);
  v33 = (char *)v25 - v15;
  v25[9] = *(_QWORD *)(v9 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v16);
  v25[10] = (char *)v25 - v17;
  v28 = v10;
  v27 = sub_190A46F9C();
  v25[12] = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v25[11] = (char *)v25 - v18;
  v19 = sub_190A46D14();
  v20 = MEMORY[0x1E0C80A78](v19);
  v21 = MEMORY[0x1E0C80A78](v20);
  v22 = (char *)sub_1909B0FD8 + 4 * byte_190A56BF0[*v2];
  v30 = (char *)v25 - v23;
  v31 = v24;
  v25[3] = v21;
  __asm { BR              X10 }
}

uint64_t sub_1909B0FD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t OpaqueTypeConformance2;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)(v9 - 352) = v6;
  v11 = v7;
  v12 = v1;
  sub_190A46CFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v11, v8, a1);
  sub_190A47518();
  v13 = *(_QWORD *)(v9 - 192);
  sub_190A47524();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 320) + 8))(v2, v4);
  v14 = *(_QWORD *)(v9 - 352);
  sub_190A46C90();
  v15 = sub_190A46C9C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
  v16 = *(_QWORD *)(v9 - 248);
  v17 = *(_QWORD *)(v9 - 224);
  sub_190A4759C();
  sub_1908AA544(v14, &qword_1EE1E6138);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 288) + 8))(v13, v16);
  *(_QWORD *)(v9 - 104) = v16;
  *(_QWORD *)(v9 - 96) = v17;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v19 = *(_QWORD *)(v9 - 272);
  sub_1909DA920(v3, v5, v19);
  v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 280) + 8);
  v20(v3, v5);
  sub_1909D989C(v19, v5, v3);
  v21 = *(_QWORD *)(v9 - 344);
  sub_1909D98B4(v3, v5);
  v20(v3, v5);
  *(_QWORD *)(v9 - 184) = OpaqueTypeConformance2;
  *(_QWORD *)(v9 - 176) = OpaqueTypeConformance2;
  v22 = *(_QWORD *)(v9 - 232);
  MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v22, v9 - 184);
  v23 = *(_QWORD *)(v9 - 264);
  v24 = *(_QWORD *)(v9 - 328);
  sub_1909D98B4(v21, v22);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 336) + 8))(v21, v22);
  v25 = *(_QWORD *)(v9 - 240);
  v26 = *(_QWORD *)(v9 - 256);
  v20(v19, v5);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v9 - 208) + 8))(*(_QWORD *)(v9 - 216), v24);
  *(_QWORD *)(v9 - 104) = v16;
  *(_QWORD *)(v9 - 96) = v17;
  v27 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v9 - 136) = v27;
  *(_QWORD *)(v9 - 128) = v27;
  v28 = MEMORY[0x1E0CDB8A0];
  *(_QWORD *)(v9 - 152) = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v22, v9 - 136);
  *(_QWORD *)(v9 - 144) = v27;
  MEMORY[0x19401429C](v28, v25, v9 - 152);
  sub_1909D989C(v23, v25, *(_QWORD *)(v9 - 200));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v23, v25);
}

void static DynamicIslandExpandedRegionVerticalPlacement.default.getter(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

void static DynamicIslandExpandedRegionVerticalPlacement.belowIfTooWide.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

BOOL static DynamicIslandExpandedRegionVerticalPlacement.== infix(_:_:)(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

BOOL sub_1909B16E8(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void static DynamicIslandExpandedRegionPosition.leading.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void static DynamicIslandExpandedRegionPosition.trailing.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static DynamicIslandExpandedRegionPosition.center.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void static DynamicIslandExpandedRegionPosition.bottom.getter(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t DynamicIslandExpandedRegion.init(_:priority:content:)@<X0>(char *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>, double a6@<D0>)
{
  char v9;
  uint64_t v10;

  v9 = *a1;
  v10 = a5 + *(int *)(type metadata accessor for DynamicIslandExpandedRegion(0, a3, a4, a3) + 44);
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  *(_QWORD *)(v10 + 16) = 0;
  *(_BYTE *)(v10 + 24) = 1;
  *(_QWORD *)(v10 + 32) = 0;
  *(_BYTE *)(v10 + 40) = 1;
  *(_QWORD *)(v10 + 48) = 0;
  *(_BYTE *)(v10 + 56) = 1;
  *(_BYTE *)a5 = v9;
  *(double *)(a5 + 8) = a6;
  return a2();
}

uint64_t type metadata accessor for DynamicIslandExpandedRegion(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DynamicIslandExpandedRegion);
}

uint64_t DynamicIslandExpandedRegion.contentMargins(_:_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  char v9;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  _BYTE v18[16];
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v3, a1);
  result = sub_1909712A0((uint64_t)v18, a3);
  v8 = a2 + *(int *)(a1 + 44);
  v9 = *(_BYTE *)(v8 + 8);
  v10 = v18[8];
  if (v9)
    v11 = v18;
  else
    v11 = (_QWORD *)(a2 + *(int *)(a1 + 44));
  *(_QWORD *)v8 = *v11;
  *(_BYTE *)(v8 + 8) = v9 & v10;
  if ((*(_BYTE *)(v8 + 24) & 1) != 0)
  {
    v12 = v19;
    v13 = v20;
  }
  else
  {
    v13 = 0;
    v12 = *(_QWORD *)(v8 + 16);
  }
  *(_QWORD *)(v8 + 16) = v12;
  *(_BYTE *)(v8 + 24) = v13;
  if ((*(_BYTE *)(v8 + 40) & 1) != 0)
  {
    v14 = v21;
    v15 = v22;
  }
  else
  {
    v15 = 0;
    v14 = *(_QWORD *)(v8 + 32);
  }
  *(_QWORD *)(v8 + 32) = v14;
  *(_BYTE *)(v8 + 40) = v15;
  if ((*(_BYTE *)(v8 + 56) & 1) != 0)
  {
    v16 = v23;
    v17 = v24;
  }
  else
  {
    v17 = 0;
    v16 = *(_QWORD *)(v8 + 48);
  }
  *(_QWORD *)(v8 + 48) = v16;
  *(_BYTE *)(v8 + 56) = v17;
  return result;
}

uint64_t View.dynamicIsland(verticalPlacement:)(_DWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE0A0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_190A46CD8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_5;
  }
  sub_190A46CC0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_5:
    sub_190A46CA8();
    sub_1908AA544((uint64_t)v4, &qword_1EE1EE0A0);
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
LABEL_6:
  sub_190A475B4();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

ValueMetadata *type metadata accessor for DynamicIslandExpandedRegionVerticalPlacement()
{
  return &type metadata for DynamicIslandExpandedRegionVerticalPlacement;
}

ValueMetadata *type metadata accessor for DynamicIslandExpandedRegionPosition()
{
  return &type metadata for DynamicIslandExpandedRegionPosition;
}

uint64_t sub_1909B1A58()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1909B1AE4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v3 = (_QWORD *)a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64) + 7;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v6 + ((v5 + 16) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 57 > 0x18)
  {
    v9 = *(_QWORD *)a2;
    *v3 = *(_QWORD *)a2;
    v3 = (_QWORD *)(v9 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
    v10 = ((a1 & 0xFFFFFFFFFFFFFFF8) + v5 + 16) & ~v5;
    v11 = ((a2 & 0xFFFFFFFFFFFFFFF8) + v5 + 16) & ~v5;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(v10, v11);
    v12 = (_OWORD *)((v6 + v10) & 0xFFFFFFFFFFFFFFF8);
    v13 = (__int128 *)((v6 + v11) & 0xFFFFFFFFFFFFFFF8);
    v15 = v13[1];
    v14 = v13[2];
    v16 = *v13;
    *(_OWORD *)((char *)v12 + 41) = *(__int128 *)((char *)v13 + 41);
    v12[1] = v15;
    v12[2] = v14;
    *v12 = v16;
  }
  return v3;
}

uint64_t sub_1909B1BD8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((a1 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

unint64_t sub_1909B1BFC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 16 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v5;
  v7 = (v5 + 16 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v5;
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (_OWORD *)((v8 + v6) & 0xFFFFFFFFFFFFFFF8);
  v10 = (__int128 *)((v8 + v7) & 0xFFFFFFFFFFFFFFF8);
  v12 = v10[1];
  v11 = v10[2];
  v13 = *v10;
  *(_OWORD *)((char *)v9 + 41) = *(__int128 *)((char *)v10 + 41);
  v9[1] = v12;
  v9[2] = v11;
  *v9 = v13;
  return a1;
}

unint64_t sub_1909B1C9C(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 16 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v5;
  v7 = (v5 + 16 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v5;
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (v8 + v6) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + v7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = v11;
  LOBYTE(v11) = *(_BYTE *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_BYTE *)(v9 + 24) = v11;
  LOBYTE(v11) = *(_BYTE *)(v10 + 40);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 40) = v11;
  LOBYTE(v11) = *(_BYTE *)(v10 + 56);
  *(_QWORD *)(v9 + 48) = *(_QWORD *)(v10 + 48);
  *(_BYTE *)(v9 + 56) = v11;
  return a1;
}

unint64_t sub_1909B1D64(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 16 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v5;
  v7 = (v5 + 16 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v5;
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (_OWORD *)((v8 + v6) & 0xFFFFFFFFFFFFFFF8);
  v10 = (__int128 *)((v8 + v7) & 0xFFFFFFFFFFFFFFF8);
  v12 = v10[1];
  v11 = v10[2];
  v13 = *v10;
  *(_OWORD *)((char *)v9 + 41) = *(__int128 *)((char *)v10 + 41);
  v9[1] = v12;
  v9[2] = v11;
  *v9 = v13;
  return a1;
}

unint64_t sub_1909B1E04(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 16 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v5;
  v7 = (v5 + 16 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v5;
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (v8 + v6) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + v7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = v11;
  LOBYTE(v11) = *(_BYTE *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_BYTE *)(v9 + 24) = v11;
  LOBYTE(v11) = *(_BYTE *)(v10 + 40);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 40) = v11;
  LOBYTE(v11) = *(_BYTE *)(v10 + 56);
  *(_QWORD *)(v9 + 48) = *(_QWORD *)(v10 + 48);
  *(_BYTE *)(v9 + 56) = v11;
  return a1;
}

uint64_t sub_1909B1ECC(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFC)
    v6 = 252;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 >= a2)
  {
    if (v5 > 0xFC)
    {
      return (*(uint64_t (**)(unint64_t))(v4 + 48))(((a1 & 0xFFFFFFFFFFFFFFF8) + v7 + 16) & ~v7);
    }
    else
    {
      v14 = *(unsigned __int8 *)a1;
      if (v14 >= 4)
        return v14 - 3;
      else
        return 0;
    }
  }
  else
  {
    v8 = ((*(_QWORD *)(v4 + 64) + ((v7 + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 57;
    v9 = (a2 - v6 + 255) >> (8 * v8);
    if (v8 < 4)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1909B1F64 + 4 * byte_190A56BF4[v12]))();
  }
}

void sub_1909B1FF8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFCu)
    v6 = 252;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(_QWORD *)(v5 + 64)
       + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8)
     + 57;
  if (v6 >= a3)
  {
    v10 = 0u;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X13 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_1909B2128()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1909B2130(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1909B2138);
}

void sub_1909B2174()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1909B217C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_1909B2184@<X0>(int a1@<W1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a1)
LABEL_2:
    JUMPOUT(0x1909B218CLL);
  if (a2 <= 0xFC)
  {
    *(_BYTE *)v6 = a1 + 3;
    goto LABEL_2;
  }
  return (*(uint64_t (**)(unint64_t))(v4 + 56))(((v6 & 0xFFFFFFFFFFFFFFF8) + v5 + 16) & a3);
}

uint64_t sub_1909B21A4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;

  v2 = a1[1];
  v14 = *a1;
  v1 = v14;
  v15 = v2;
  v3 = MEMORY[0x19401423C](255, &v14, MEMORY[0x1E0CDE300], 0);
  v14 = v1;
  v15 = v2;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v14 = v3;
  v15 = OpaqueTypeConformance2;
  v5 = MEMORY[0x19401423C](255, &v14, MEMORY[0x1E0CDE310], 0);
  v14 = v3;
  v15 = OpaqueTypeConformance2;
  v6 = swift_getOpaqueTypeConformance2();
  v14 = v5;
  v15 = v6;
  MEMORY[0x19401423C](255, &v14, MEMORY[0x1E0CDE9F0], 0);
  v7 = sub_190A46F9C();
  v8 = sub_190A46F9C();
  v14 = v5;
  v15 = v6;
  v9 = swift_getOpaqueTypeConformance2();
  v13[0] = v9;
  v13[1] = v9;
  v10 = MEMORY[0x1E0CDB8A0];
  v12[0] = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v7, v13);
  v12[1] = v9;
  return MEMORY[0x19401429C](v10, v8, v12);
}

uint64_t sub_1909B22E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s9WidgetKit35DynamicIslandExpandedRegionPositionV6RegionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1909B2364 + 4 * byte_190A56C08[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1909B2398 + 4 * byte_190A56C03[v4]))();
}

uint64_t sub_1909B2398(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909B23A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909B23A8);
  return result;
}

uint64_t sub_1909B23B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909B23BCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1909B23C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909B23C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DynamicIslandExpandedRegionPosition.Region()
{
  return &type metadata for DynamicIslandExpandedRegionPosition.Region;
}

unint64_t sub_1909B23E8()
{
  unint64_t result;

  result = qword_1EE1EE0A8;
  if (!qword_1EE1EE0A8)
  {
    result = MEMORY[0x19401429C](&unk_190A56D58, &type metadata for DynamicIslandExpandedRegionPosition.Region);
    atomic_store(result, (unint64_t *)&qword_1EE1EE0A8);
  }
  return result;
}

uint64_t WidgetContainerShapeModifier.init(cornerRadius:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t KeyPath;
  uint64_t result;

  KeyPath = swift_getKeyPath();
  result = swift_getKeyPath();
  *(_QWORD *)a3 = KeyPath;
  *(_BYTE *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = result;
  *(_BYTE *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = a1;
  *(_BYTE *)(a3 + 40) = a2 & 1;
  return result;
}

uint64_t WidgetContainerShapeModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;

  v49 = a1;
  v51 = a2;
  v48 = sub_190A46930();
  MEMORY[0x1E0C80A78](v48);
  v4 = (uint64_t *)((char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6ADA8);
  v47 = *(_QWORD *)(v50 - 8);
  v5 = MEMORY[0x1E0C80A78](v50);
  v45 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v46 = (char *)&v42 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AD70);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AD68);
  v44 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)v2;
  v15 = *(unsigned __int8 *)(v2 + 8);
  v16 = *(void **)(v2 + 16);
  v17 = *(_BYTE *)(v2 + 24);
  v18 = *(_QWORD *)(v2 + 32);
  v19 = *(unsigned __int8 *)(v2 + 40);
  sub_1908D1B74(v14, v15);
  sub_1908D1B68(v16, v17);
  sub_1908D1B74(v14, v15);
  sub_19096FB1C(v14, v15, &v52);
  sub_1909701CC(v14, v15);
  sub_1909701CC(v14, v15);
  sub_1908D1BB0(v16, v17);
  if (v52 == 7)
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AD90);
    v21 = sub_1909B2920();
    v22 = sub_1909B29F0();
    v23 = MEMORY[0x1E0CDFAD0];
    sub_190A47548();
    v24 = v44;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v10, v13, v11);
    swift_storeEnumTagMultiPayload();
    v52 = v20;
    v53 = v23;
    v54 = v21;
    v55 = v22;
    swift_getOpaqueTypeConformance2();
    v25 = sub_1909B296C();
    v52 = v20;
    v53 = v48;
    v54 = v21;
    v55 = v25;
    swift_getOpaqueTypeConformance2();
    sub_190A46F90();
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v13, v11);
  }
  else
  {
    v42 = v8;
    v43 = v10;
    v44 = v11;
    v27 = v48;
    if (v19)
    {
      sub_1908D1B74(v14, v15);
      sub_1908D1B68(v16, v17);
      sub_1908D1B68(v16, v17);
      v28 = sub_19096E4E8(v16, v17);
      sub_1908D1BB0(v16, v17);
      sub_1909701CC(v14, v15);
      sub_1908D1BB0(v16, v17);
      objc_msgSend(v28, sel_cornerRadius, v42);
      v18 = v29;

    }
    v30 = v27;
    v31 = (char *)v4 + *(int *)(v27 + 20);
    v32 = *MEMORY[0x1E0CDB0C0];
    v33 = sub_190A46E7C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v31, v32, v33);
    *v4 = v18;
    v4[1] = v18;
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AD90);
    v35 = sub_1909B2920();
    v36 = sub_1909B296C();
    v37 = v45;
    sub_190A47548();
    sub_1909B29B4((uint64_t)v4);
    v39 = v46;
    v38 = v47;
    v40 = v50;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v46, v37, v50);
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v43, v39, v40);
    swift_storeEnumTagMultiPayload();
    v41 = sub_1909B29F0();
    v52 = v34;
    v53 = MEMORY[0x1E0CDFAD0];
    v54 = v35;
    v55 = v41;
    swift_getOpaqueTypeConformance2();
    v52 = v34;
    v53 = v30;
    v54 = v35;
    v55 = v36;
    swift_getOpaqueTypeConformance2();
    sub_190A46F90();
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  }
}

unint64_t sub_1909B2920()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECF6AD88;
  if (!qword_1ECF6AD88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6AD90);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDBF10], v1);
    atomic_store(result, (unint64_t *)&qword_1ECF6AD88);
  }
  return result;
}

unint64_t sub_1909B296C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECF6C500;
  if (!qword_1ECF6C500)
  {
    v1 = sub_190A46930();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDA060], v1);
    atomic_store(result, (unint64_t *)&qword_1ECF6C500);
  }
  return result;
}

uint64_t sub_1909B29B4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_190A46930();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1909B29F0()
{
  unint64_t result;

  result = qword_1ECF6ADB0;
  if (!qword_1ECF6ADB0)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDFAA0], MEMORY[0x1E0CDFAD0]);
    atomic_store(result, (unint64_t *)&qword_1ECF6ADB0);
  }
  return result;
}

uint64_t sub_1909B2A34()
{
  return swift_getOpaqueTypeConformance2();
}

void destroy for WidgetContainerShapeModifier(uint64_t a1)
{
  sub_1909701CC(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
  sub_1908D1BB0(*(id *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for WidgetContainerShapeModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  char v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B74(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(void **)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1908D1B68(v6, v7);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for WidgetContainerShapeModifier(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  void *v10;
  char v11;
  uint64_t v12;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B74(*(_QWORD *)a2, v5);
  v6 = *a1;
  v7 = *((unsigned __int8 *)a1 + 8);
  *a1 = v4;
  *((_BYTE *)a1 + 8) = v5;
  sub_1909701CC(v6, v7);
  v8 = *(void **)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_1908D1B68(v8, v9);
  v10 = (void *)a1[2];
  v11 = *((_BYTE *)a1 + 24);
  a1[2] = (uint64_t)v8;
  *((_BYTE *)a1 + 24) = v9;
  sub_1908D1BB0(v10, v11);
  v12 = *(_QWORD *)(a2 + 32);
  *((_BYTE *)a1 + 40) = *(_BYTE *)(a2 + 40);
  a1[4] = v12;
  return a1;
}

uint64_t *assignWithTake for WidgetContainerShapeModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  char v10;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *a1;
  v7 = *((unsigned __int8 *)a1 + 8);
  *a1 = v4;
  *((_BYTE *)a1 + 8) = v5;
  sub_1909701CC(v6, v7);
  v8 = *((_BYTE *)a2 + 24);
  v9 = (void *)a1[2];
  v10 = *((_BYTE *)a1 + 24);
  a1[2] = a2[2];
  *((_BYTE *)a1 + 24) = v8;
  sub_1908D1BB0(v9, v10);
  a1[4] = a2[4];
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for WidgetContainerShapeModifier()
{
  return &type metadata for WidgetContainerShapeModifier;
}

unint64_t sub_1909B2BF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t OpaqueTypeConformance2;
  _QWORD v5[6];

  result = qword_1ECF6AD78;
  if (!qword_1ECF6AD78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6AD80);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6AD90);
    v3 = sub_1909B2920();
    sub_1909B29F0();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v5[2] = v2;
    v5[3] = sub_190A46930();
    v5[4] = v3;
    v5[5] = sub_1909B296C();
    v5[0] = OpaqueTypeConformance2;
    v5[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1ECF6AD78);
  }
  return result;
}

uint64_t sub_1909B2CD4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  void *v8;
  uint64_t *v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t *, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(const void *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v60;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v8 = (void *)a2[1];
    *(_QWORD *)(a1 + 8) = v8;
    v9 = a2 + 2;
    v10 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v10;
    v11 = v10;
    v12 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v10 - 8);
    swift_retain();
    v13 = v8;
    v12(a1 + 16, v9, v11);
    v14 = *(int *)(a3 + 24);
    v15 = a1 + v14;
    v16 = (uint64_t)a2 + v14;
    *(_OWORD *)v15 = *(_OWORD *)((char *)a2 + v14);
    *(_BYTE *)(v15 + 16) = *((_BYTE *)a2 + v14 + 16);
    *(_OWORD *)(v15 + 24) = *(_OWORD *)((char *)a2 + v14 + 24);
    *(_BYTE *)(v15 + 40) = *((_BYTE *)a2 + v14 + 40);
    *(_QWORD *)(v15 + 48) = *(uint64_t *)((char *)a2 + v14 + 48);
    *(_OWORD *)(v15 + 56) = *(_OWORD *)((char *)a2 + v14 + 56);
    *(_OWORD *)(v15 + 72) = *(_OWORD *)((char *)a2 + v14 + 72);
    *(_BYTE *)(v15 + 88) = *((_BYTE *)a2 + v14 + 88);
    *(_OWORD *)(v15 + 96) = *(_OWORD *)((char *)a2 + v14 + 96);
    v17 = type metadata accessor for MetricsRequest(0);
    v18 = *(int *)(v17 + 40);
    v19 = (void *)(v15 + v18);
    v20 = (const void *)(v16 + v18);
    v21 = sub_190A46EE8();
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
    if (v23(v20, 1, v21))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    v25 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
    v26 = (_OWORD *)(v15 + v25);
    v27 = (_OWORD *)(v16 + v25);
    v28 = (int *)type metadata accessor for JindoMetricsDefinition(0);
    v29 = *((_QWORD *)v28 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v29 + 48))(v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v60 = v29;
      *v26 = *v27;
      v31 = v28[5];
      v32 = (char *)v26 + v31;
      v33 = (char *)v27 + v31;
      v32[16] = v33[16];
      *(_OWORD *)v32 = *(_OWORD *)v33;
      *(_OWORD *)(v32 + 24) = *(_OWORD *)(v33 + 24);
      v32[40] = v33[40];
      *((_QWORD *)v32 + 6) = *((_QWORD *)v33 + 6);
      *(_OWORD *)(v32 + 56) = *(_OWORD *)(v33 + 56);
      *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
      v32[88] = v33[88];
      *((_OWORD *)v32 + 6) = *((_OWORD *)v33 + 6);
      v34 = *(int *)(v17 + 40);
      v35 = &v32[v34];
      v36 = &v33[v34];
      if (v23(&v33[v34], 1, v21))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v35, v36, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v35, 0, 1, v21);
      }
      v38 = v28[6];
      v39 = (char *)v26 + v38;
      v40 = (char *)v27 + v38;
      *(_OWORD *)v39 = *(_OWORD *)v40;
      v39[16] = v40[16];
      *(_OWORD *)(v39 + 24) = *(_OWORD *)(v40 + 24);
      v39[40] = v40[40];
      *((_QWORD *)v39 + 6) = *((_QWORD *)v40 + 6);
      *(_OWORD *)(v39 + 56) = *(_OWORD *)(v40 + 56);
      *(_OWORD *)(v39 + 72) = *(_OWORD *)(v40 + 72);
      v39[88] = v40[88];
      *((_OWORD *)v39 + 6) = *((_OWORD *)v40 + 6);
      v41 = *(int *)(v17 + 40);
      v42 = &v39[v41];
      v43 = &v40[v41];
      if (v23(&v40[v41], 1, v21))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v42, v43, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v42, 0, 1, v21);
      }
      v45 = v28[7];
      v46 = (char *)v26 + v45;
      v47 = (char *)v27 + v45;
      *(_OWORD *)v46 = *(_OWORD *)v47;
      v46[16] = v47[16];
      *(_OWORD *)(v46 + 24) = *(_OWORD *)(v47 + 24);
      v46[40] = v47[40];
      *((_QWORD *)v46 + 6) = *((_QWORD *)v47 + 6);
      *(_OWORD *)(v46 + 56) = *(_OWORD *)(v47 + 56);
      *(_OWORD *)(v46 + 72) = *(_OWORD *)(v47 + 72);
      v46[88] = v47[88];
      *((_OWORD *)v46 + 6) = *((_OWORD *)v47 + 6);
      v48 = *(int *)(v17 + 40);
      v49 = &v46[v48];
      v50 = &v47[v48];
      if (v23(&v47[v48], 1, v21))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v49, v50, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v49, 0, 1, v21);
      }
      v52 = v28[8];
      v53 = (char *)v26 + v52;
      v54 = (char *)v27 + v52;
      *(_OWORD *)v53 = *(_OWORD *)v54;
      v53[16] = v54[16];
      *(_OWORD *)(v53 + 24) = *(_OWORD *)(v54 + 24);
      v53[40] = v54[40];
      *((_QWORD *)v53 + 6) = *((_QWORD *)v54 + 6);
      *(_OWORD *)(v53 + 56) = *(_OWORD *)(v54 + 56);
      *(_OWORD *)(v53 + 72) = *(_OWORD *)(v54 + 72);
      v53[88] = v54[88];
      *((_OWORD *)v53 + 6) = *((_OWORD *)v54 + 6);
      v55 = *(int *)(v17 + 40);
      v56 = &v53[v55];
      v57 = &v54[v55];
      if (v23(&v54[v55], 1, v21))
      {
        v58 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v56, v57, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v56, 0, 1, v21);
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v60 + 56))(v26, 0, 1, v28);
    }
  }
  return a1;
}

uint64_t sub_1909B3208(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  int *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_release();

  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for MetricsRequest(0);
  v6 = v4 + *(int *)(v5 + 40);
  v7 = sub_190A46EE8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v10 = v4 + *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v11 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11);
  if (!(_DWORD)result)
  {
    v13 = *(int *)(v5 + 40);
    v14 = v10 + v11[5] + v13;
    if (!v9(v14, 1, v7))
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v14, v7);
      v13 = *(int *)(v5 + 40);
    }
    v15 = v10 + v11[6] + v13;
    if (!v9(v15, 1, v7))
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v15, v7);
      v13 = *(int *)(v5 + 40);
    }
    v16 = v10 + v11[7] + v13;
    if (!v9(v16, 1, v7))
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v16, v7);
      v13 = *(int *)(v5 + 40);
    }
    v17 = v10 + v11[8] + v13;
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v17, 1, v7);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v17, v7);
  }
  return result;
}

uint64_t sub_1909B33C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(const void *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v58;

  v6 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2 + 16;
  v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_retain();
  v11 = v6;
  v10(a1 + 16, v7, v9);
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_OWORD *)v13 = *(_OWORD *)(a2 + v12);
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(a2 + v12 + 16);
  *(_OWORD *)(v13 + 24) = *(_OWORD *)(a2 + v12 + 24);
  *(_BYTE *)(v13 + 40) = *(_BYTE *)(a2 + v12 + 40);
  *(_QWORD *)(v13 + 48) = *(_QWORD *)(a2 + v12 + 48);
  *(_OWORD *)(v13 + 56) = *(_OWORD *)(a2 + v12 + 56);
  *(_OWORD *)(v13 + 72) = *(_OWORD *)(a2 + v12 + 72);
  *(_BYTE *)(v13 + 88) = *(_BYTE *)(a2 + v12 + 88);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(a2 + v12 + 96);
  v15 = type metadata accessor for MetricsRequest(0);
  v16 = *(int *)(v15 + 40);
  v17 = (void *)(v13 + v16);
  v18 = (const void *)(v14 + v16);
  v19 = sub_190A46EE8();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
  if (v21(v18, 1, v19))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v23 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v24 = (_OWORD *)(v13 + v23);
  v25 = (_OWORD *)(v14 + v23);
  v26 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v27 = *((_QWORD *)v26 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v58 = v27;
    *v24 = *v25;
    v29 = v26[5];
    v30 = (char *)v24 + v29;
    v31 = (char *)v25 + v29;
    v30[16] = v31[16];
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *(_OWORD *)(v30 + 24) = *(_OWORD *)(v31 + 24);
    v30[40] = v31[40];
    *((_QWORD *)v30 + 6) = *((_QWORD *)v31 + 6);
    *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
    *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
    v30[88] = v31[88];
    *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
    v32 = *(int *)(v15 + 40);
    v33 = &v30[v32];
    v34 = &v31[v32];
    if (v21(&v31[v32], 1, v19))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v33, v34, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v33, 0, 1, v19);
    }
    v36 = v26[6];
    v37 = (char *)v24 + v36;
    v38 = (char *)v25 + v36;
    *(_OWORD *)v37 = *(_OWORD *)v38;
    v37[16] = v38[16];
    *(_OWORD *)(v37 + 24) = *(_OWORD *)(v38 + 24);
    v37[40] = v38[40];
    *((_QWORD *)v37 + 6) = *((_QWORD *)v38 + 6);
    *(_OWORD *)(v37 + 56) = *(_OWORD *)(v38 + 56);
    *(_OWORD *)(v37 + 72) = *(_OWORD *)(v38 + 72);
    v37[88] = v38[88];
    *((_OWORD *)v37 + 6) = *((_OWORD *)v38 + 6);
    v39 = *(int *)(v15 + 40);
    v40 = &v37[v39];
    v41 = &v38[v39];
    if (v21(&v38[v39], 1, v19))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v40, v41, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v40, 0, 1, v19);
    }
    v43 = v26[7];
    v44 = (char *)v24 + v43;
    v45 = (char *)v25 + v43;
    *(_OWORD *)v44 = *(_OWORD *)v45;
    v44[16] = v45[16];
    *(_OWORD *)(v44 + 24) = *(_OWORD *)(v45 + 24);
    v44[40] = v45[40];
    *((_QWORD *)v44 + 6) = *((_QWORD *)v45 + 6);
    *(_OWORD *)(v44 + 56) = *(_OWORD *)(v45 + 56);
    *(_OWORD *)(v44 + 72) = *(_OWORD *)(v45 + 72);
    v44[88] = v45[88];
    *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
    v46 = *(int *)(v15 + 40);
    v47 = &v44[v46];
    v48 = &v45[v46];
    if (v21(&v45[v46], 1, v19))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v47, v48, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v47, 0, 1, v19);
    }
    v50 = v26[8];
    v51 = (char *)v24 + v50;
    v52 = (char *)v25 + v50;
    *(_OWORD *)v51 = *(_OWORD *)v52;
    v51[16] = v52[16];
    *(_OWORD *)(v51 + 24) = *(_OWORD *)(v52 + 24);
    v51[40] = v52[40];
    *((_QWORD *)v51 + 6) = *((_QWORD *)v52 + 6);
    *(_OWORD *)(v51 + 56) = *(_OWORD *)(v52 + 56);
    *(_OWORD *)(v51 + 72) = *(_OWORD *)(v52 + 72);
    v51[88] = v52[88];
    *((_OWORD *)v51 + 6) = *((_OWORD *)v52 + 6);
    v53 = *(int *)(v15 + 40);
    v54 = &v51[v53];
    v55 = &v52[v53];
    if (v21(&v52[v53], 1, v19))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v54, v55, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v54, 0, 1, v19);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v58 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

_QWORD *sub_1909B38D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int *v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, int *);
  int v32;
  int v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  size_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  int v58;
  int v59;
  uint64_t v60;
  char *v61;
  char *v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  char *v103;
  char *v104;
  int v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  char *v116;
  char *v117;
  int v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  uint64_t v130;
  char *v131;
  char *v132;
  int v133;
  int v134;
  uint64_t v135;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = (void *)a2[1];
  v7 = (void *)a1[1];
  a1[1] = v6;
  v8 = v6;

  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = *(_OWORD *)((char *)a2 + v9);
  v10[16] = *((_BYTE *)a2 + v9 + 16);
  *(_OWORD *)v10 = v12;
  v13 = *(_OWORD *)((char *)a2 + v9 + 24);
  v10[40] = *((_BYTE *)a2 + v9 + 40);
  *(_OWORD *)(v10 + 24) = v13;
  *((_QWORD *)v10 + 6) = *(_QWORD *)((char *)a2 + v9 + 48);
  v14 = *(_OWORD *)((char *)a2 + v9 + 56);
  v15 = *(_OWORD *)((char *)a2 + v9 + 72);
  v10[88] = *((_BYTE *)a2 + v9 + 88);
  *(_OWORD *)(v10 + 72) = v15;
  *(_OWORD *)(v10 + 56) = v14;
  *((_QWORD *)v10 + 12) = *(_QWORD *)((char *)a2 + v9 + 96);
  *((_QWORD *)v10 + 13) = *(_QWORD *)((char *)a2 + v9 + 104);
  v16 = type metadata accessor for MetricsRequest(0);
  v17 = *(int *)(v16 + 40);
  v18 = &v10[v17];
  v19 = &v11[v17];
  v20 = sub_190A46EE8();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  v135 = v21;
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    v25 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_7:
  v26 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v27 = &v10[v26];
  v28 = &v11[v26];
  v29 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v30 = *((_QWORD *)v29 - 1);
  v31 = *(uint64_t (**)(char *, uint64_t, int *))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  if (!v32)
  {
    if (v33)
    {
      sub_1909B4318((uint64_t)v27);
      goto LABEL_13;
    }
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
    v48 = v29[5];
    v49 = &v27[v48];
    v50 = &v28[v48];
    v51 = *(_OWORD *)v50;
    v49[16] = v50[16];
    *(_OWORD *)v49 = v51;
    v52 = *(_OWORD *)(v50 + 24);
    v49[40] = v50[40];
    *(_OWORD *)(v49 + 24) = v52;
    *((_QWORD *)v49 + 6) = *((_QWORD *)v50 + 6);
    v53 = *(_OWORD *)(v50 + 56);
    v54 = *(_OWORD *)(v50 + 72);
    v49[88] = v50[88];
    *(_OWORD *)(v49 + 72) = v54;
    *(_OWORD *)(v49 + 56) = v53;
    *((_QWORD *)v49 + 12) = *((_QWORD *)v50 + 12);
    *((_QWORD *)v49 + 13) = *((_QWORD *)v50 + 13);
    v55 = *(int *)(v16 + 40);
    v56 = &v49[v55];
    v57 = &v50[v55];
    v58 = v22(&v49[v55], 1, v20);
    v59 = v22(v57, 1, v20);
    if (v58)
    {
      if (!v59)
      {
        (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v56, v57, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v56, 0, 1, v20);
        goto LABEL_34;
      }
    }
    else
    {
      if (!v59)
      {
        (*(void (**)(char *, char *, uint64_t))(v135 + 24))(v56, v57, v20);
LABEL_34:
        v95 = v29[6];
        v96 = &v27[v95];
        v97 = &v28[v95];
        v98 = *(_OWORD *)v97;
        v96[16] = v97[16];
        *(_OWORD *)v96 = v98;
        v99 = *(_OWORD *)(v97 + 24);
        v96[40] = v97[40];
        *(_OWORD *)(v96 + 24) = v99;
        *((_QWORD *)v96 + 6) = *((_QWORD *)v97 + 6);
        v100 = *(_OWORD *)(v97 + 56);
        v101 = *(_OWORD *)(v97 + 72);
        v96[88] = v97[88];
        *(_OWORD *)(v96 + 72) = v101;
        *(_OWORD *)(v96 + 56) = v100;
        *((_QWORD *)v96 + 12) = *((_QWORD *)v97 + 12);
        *((_QWORD *)v96 + 13) = *((_QWORD *)v97 + 13);
        v102 = *(int *)(v16 + 40);
        v103 = &v96[v102];
        v104 = &v97[v102];
        v105 = v22(&v96[v102], 1, v20);
        v106 = v22(v104, 1, v20);
        if (v105)
        {
          if (!v106)
          {
            (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v103, v104, v20);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v103, 0, 1, v20);
LABEL_40:
            v108 = v29[7];
            v109 = &v27[v108];
            v110 = &v28[v108];
            v111 = *(_OWORD *)v110;
            v109[16] = v110[16];
            *(_OWORD *)v109 = v111;
            v112 = *(_OWORD *)(v110 + 24);
            v109[40] = v110[40];
            *(_OWORD *)(v109 + 24) = v112;
            *((_QWORD *)v109 + 6) = *((_QWORD *)v110 + 6);
            v113 = *(_OWORD *)(v110 + 56);
            v114 = *(_OWORD *)(v110 + 72);
            v109[88] = v110[88];
            *(_OWORD *)(v109 + 72) = v114;
            *(_OWORD *)(v109 + 56) = v113;
            *((_QWORD *)v109 + 12) = *((_QWORD *)v110 + 12);
            *((_QWORD *)v109 + 13) = *((_QWORD *)v110 + 13);
            v115 = *(int *)(v16 + 40);
            v116 = &v109[v115];
            v117 = &v110[v115];
            v118 = v22(&v109[v115], 1, v20);
            v119 = v22(v117, 1, v20);
            if (v118)
            {
              if (v119)
              {
                v120 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
                memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
                v121 = v135;
              }
              else
              {
                v121 = v135;
                (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v116, v117, v20);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v116, 0, 1, v20);
              }
            }
            else
            {
              v121 = v135;
              if (v119)
              {
                (*(void (**)(char *, uint64_t))(v135 + 8))(v116, v20);
                v122 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
                memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v135 + 24))(v116, v117, v20);
              }
            }
            v123 = v29[8];
            v124 = &v27[v123];
            v125 = &v28[v123];
            v126 = *(_OWORD *)v125;
            v124[16] = v125[16];
            *(_OWORD *)v124 = v126;
            v127 = *(_OWORD *)(v125 + 24);
            v124[40] = v125[40];
            *(_OWORD *)(v124 + 24) = v127;
            *((_QWORD *)v124 + 6) = *((_QWORD *)v125 + 6);
            v128 = *(_OWORD *)(v125 + 56);
            v129 = *(_OWORD *)(v125 + 72);
            v124[88] = v125[88];
            *(_OWORD *)(v124 + 72) = v129;
            *(_OWORD *)(v124 + 56) = v128;
            *((_QWORD *)v124 + 12) = *((_QWORD *)v125 + 12);
            *((_QWORD *)v124 + 13) = *((_QWORD *)v125 + 13);
            v130 = *(int *)(v16 + 40);
            v131 = &v124[v130];
            v132 = &v125[v130];
            v133 = v22(&v124[v130], 1, v20);
            v134 = v22(v132, 1, v20);
            if (v133)
            {
              if (!v134)
              {
                (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v131, v132, v20);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v131, 0, 1, v20);
                return a1;
              }
            }
            else
            {
              if (!v134)
              {
                (*(void (**)(char *, char *, uint64_t))(v121 + 24))(v131, v132, v20);
                return a1;
              }
              (*(void (**)(char *, uint64_t))(v121 + 8))(v131, v20);
            }
            v45 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0) - 8) + 64);
            v46 = v131;
            v47 = v132;
            goto LABEL_14;
          }
        }
        else
        {
          if (!v106)
          {
            (*(void (**)(char *, char *, uint64_t))(v135 + 24))(v103, v104, v20);
            goto LABEL_40;
          }
          (*(void (**)(char *, uint64_t))(v135 + 8))(v103, v20);
        }
        v107 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t))(v135 + 8))(v56, v20);
    }
    v94 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
    goto LABEL_34;
  }
  if (v33)
  {
LABEL_13:
    v45 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0) - 8) + 64);
    v46 = v27;
    v47 = v28;
LABEL_14:
    memcpy(v46, v47, v45);
    return a1;
  }
  *(_OWORD *)v27 = *(_OWORD *)v28;
  v34 = v29[5];
  v35 = &v27[v34];
  v36 = &v28[v34];
  v37 = *(_OWORD *)v36;
  v35[16] = v36[16];
  *(_OWORD *)v35 = v37;
  v38 = *(_OWORD *)(v36 + 24);
  v35[40] = v36[40];
  *(_OWORD *)(v35 + 24) = v38;
  *((_QWORD *)v35 + 6) = *((_QWORD *)v36 + 6);
  v39 = *(_OWORD *)(v36 + 56);
  v40 = *(_OWORD *)(v36 + 72);
  v35[88] = v36[88];
  *(_OWORD *)(v35 + 72) = v40;
  *(_OWORD *)(v35 + 56) = v39;
  *((_QWORD *)v35 + 12) = *((_QWORD *)v36 + 12);
  *((_QWORD *)v35 + 13) = *((_QWORD *)v36 + 13);
  v41 = *(int *)(v16 + 40);
  v42 = &v35[v41];
  v43 = &v36[v41];
  if (v22(&v36[v41], 1, v20))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v42, v43, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v42, 0, 1, v20);
  }
  v60 = v29[6];
  v61 = &v27[v60];
  v62 = &v28[v60];
  v63 = *(_OWORD *)v62;
  v61[16] = v62[16];
  *(_OWORD *)v61 = v63;
  v64 = *(_OWORD *)(v62 + 24);
  v61[40] = v62[40];
  *(_OWORD *)(v61 + 24) = v64;
  *((_QWORD *)v61 + 6) = *((_QWORD *)v62 + 6);
  v65 = *(_OWORD *)(v62 + 56);
  v66 = *(_OWORD *)(v62 + 72);
  v61[88] = v62[88];
  *(_OWORD *)(v61 + 72) = v66;
  *(_OWORD *)(v61 + 56) = v65;
  *((_QWORD *)v61 + 12) = *((_QWORD *)v62 + 12);
  *((_QWORD *)v61 + 13) = *((_QWORD *)v62 + 13);
  v67 = *(int *)(v16 + 40);
  v68 = &v61[v67];
  v69 = &v62[v67];
  if (v22(&v62[v67], 1, v20))
  {
    v70 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v68, v69, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v68, 0, 1, v20);
  }
  v71 = v29[7];
  v72 = &v27[v71];
  v73 = &v28[v71];
  v74 = *(_OWORD *)v73;
  v72[16] = v73[16];
  *(_OWORD *)v72 = v74;
  v75 = *(_OWORD *)(v73 + 24);
  v72[40] = v73[40];
  *(_OWORD *)(v72 + 24) = v75;
  *((_QWORD *)v72 + 6) = *((_QWORD *)v73 + 6);
  v76 = *(_OWORD *)(v73 + 56);
  v77 = *(_OWORD *)(v73 + 72);
  v72[88] = v73[88];
  *(_OWORD *)(v72 + 72) = v77;
  *(_OWORD *)(v72 + 56) = v76;
  *((_QWORD *)v72 + 12) = *((_QWORD *)v73 + 12);
  *((_QWORD *)v72 + 13) = *((_QWORD *)v73 + 13);
  v78 = *(int *)(v16 + 40);
  v79 = &v72[v78];
  v80 = &v73[v78];
  if (v22(&v73[v78], 1, v20))
  {
    v81 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v79, v80, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v79, 0, 1, v20);
  }
  v82 = v29[8];
  v83 = &v27[v82];
  v84 = &v28[v82];
  v85 = *(_OWORD *)v84;
  v83[16] = v84[16];
  *(_OWORD *)v83 = v85;
  v86 = *(_OWORD *)(v84 + 24);
  v83[40] = v84[40];
  *(_OWORD *)(v83 + 24) = v86;
  *((_QWORD *)v83 + 6) = *((_QWORD *)v84 + 6);
  v87 = *(_OWORD *)(v84 + 56);
  v88 = *(_OWORD *)(v84 + 72);
  v83[88] = v84[88];
  *(_OWORD *)(v83 + 72) = v88;
  *(_OWORD *)(v83 + 56) = v87;
  *((_QWORD *)v83 + 12) = *((_QWORD *)v84 + 12);
  *((_QWORD *)v83 + 13) = *((_QWORD *)v84 + 13);
  v89 = *(int *)(v16 + 40);
  v90 = &v83[v89];
  v91 = &v84[v89];
  if (v22(&v84[v89], 1, v20))
  {
    v92 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v90, v91, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v90, 0, 1, v20);
  }
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v30 + 56))(v27, 0, 1, v29);
  return a1;
}

uint64_t sub_1909B4318(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for JindoMetricsDefinition(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1909B4354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v53;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  *(_OWORD *)v6 = *(_OWORD *)(a2 + v5);
  *(_BYTE *)(v6 + 16) = *(_BYTE *)(a2 + v5 + 16);
  *(_OWORD *)(v6 + 24) = *(_OWORD *)(a2 + v5 + 24);
  *(_BYTE *)(v6 + 40) = *(_BYTE *)(a2 + v5 + 40);
  *(_QWORD *)(v6 + 48) = *(_QWORD *)(a2 + v5 + 48);
  v8 = *(_OWORD *)(a2 + v5 + 56);
  v9 = *(_OWORD *)(a2 + v5 + 72);
  *(_BYTE *)(v6 + 88) = *(_BYTE *)(a2 + v5 + 88);
  *(_OWORD *)(v6 + 72) = v9;
  *(_OWORD *)(v6 + 56) = v8;
  *(_OWORD *)(v6 + 96) = *(_OWORD *)(a2 + v5 + 96);
  v10 = type metadata accessor for MetricsRequest(0);
  v11 = *(int *)(v10 + 40);
  v12 = (void *)(v6 + v11);
  v13 = (const void *)(v7 + v11);
  v14 = sub_190A46EE8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v19 = (_OWORD *)(v6 + v18);
  v20 = (_OWORD *)(v7 + v18);
  v21 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v22 = *((_QWORD *)v21 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v53 = v22;
    *v19 = *v20;
    v24 = v21[5];
    v25 = (char *)v19 + v24;
    v26 = (char *)v20 + v24;
    v25[16] = v26[16];
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 24) = *(_OWORD *)(v26 + 24);
    v25[40] = v26[40];
    *((_QWORD *)v25 + 6) = *((_QWORD *)v26 + 6);
    *(_OWORD *)(v25 + 56) = *(_OWORD *)(v26 + 56);
    *(_OWORD *)(v25 + 72) = *(_OWORD *)(v26 + 72);
    v25[88] = v26[88];
    *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
    v27 = *(int *)(v10 + 40);
    v28 = &v25[v27];
    v29 = &v26[v27];
    if (v16(&v26[v27], 1, v14))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v28, v29, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v28, 0, 1, v14);
    }
    v31 = v21[6];
    v32 = (char *)v19 + v31;
    v33 = (char *)v20 + v31;
    *(_OWORD *)v32 = *(_OWORD *)v33;
    v32[16] = v33[16];
    *(_OWORD *)(v32 + 24) = *(_OWORD *)(v33 + 24);
    v32[40] = v33[40];
    *((_QWORD *)v32 + 6) = *((_QWORD *)v33 + 6);
    *(_OWORD *)(v32 + 56) = *(_OWORD *)(v33 + 56);
    *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
    v32[88] = v33[88];
    *((_OWORD *)v32 + 6) = *((_OWORD *)v33 + 6);
    v34 = *(int *)(v10 + 40);
    v35 = &v32[v34];
    v36 = &v33[v34];
    if (v16(&v33[v34], 1, v14))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v35, v36, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v35, 0, 1, v14);
    }
    v38 = v21[7];
    v39 = (char *)v19 + v38;
    v40 = (char *)v20 + v38;
    *(_OWORD *)v39 = *(_OWORD *)v40;
    v39[16] = v40[16];
    *(_OWORD *)(v39 + 24) = *(_OWORD *)(v40 + 24);
    v39[40] = v40[40];
    *((_QWORD *)v39 + 6) = *((_QWORD *)v40 + 6);
    *(_OWORD *)(v39 + 56) = *(_OWORD *)(v40 + 56);
    *(_OWORD *)(v39 + 72) = *(_OWORD *)(v40 + 72);
    v39[88] = v40[88];
    *((_OWORD *)v39 + 6) = *((_OWORD *)v40 + 6);
    v41 = *(int *)(v10 + 40);
    v42 = &v39[v41];
    v43 = &v40[v41];
    if (v16(&v40[v41], 1, v14))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v42, v43, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v42, 0, 1, v14);
    }
    v45 = v21[8];
    v46 = (char *)v19 + v45;
    v47 = (char *)v20 + v45;
    *(_OWORD *)v46 = *(_OWORD *)v47;
    v46[16] = v47[16];
    *(_OWORD *)(v46 + 24) = *(_OWORD *)(v47 + 24);
    v46[40] = v47[40];
    *((_QWORD *)v46 + 6) = *((_QWORD *)v47 + 6);
    *(_OWORD *)(v46 + 56) = *(_OWORD *)(v47 + 56);
    *(_OWORD *)(v46 + 72) = *(_OWORD *)(v47 + 72);
    v46[88] = v47[88];
    *((_OWORD *)v46 + 6) = *((_OWORD *)v47 + 6);
    v48 = *(int *)(v10 + 40);
    v49 = &v46[v48];
    v50 = &v47[v48];
    if (v16(&v47[v48], 1, v14))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v49, v50, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v49, 0, 1, v14);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v53 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

uint64_t sub_1909B4830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, int *);
  int v29;
  int v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  size_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int v47;
  int v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  int v98;
  int v99;
  uint64_t v100;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v6 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)v9 = *(_OWORD *)(a2 + v8);
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(a2 + v8 + 16);
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(a2 + v8 + 24);
  *(_BYTE *)(v9 + 40) = *(_BYTE *)(a2 + v8 + 40);
  *(_QWORD *)(v9 + 48) = *(_QWORD *)(a2 + v8 + 48);
  v11 = *(_OWORD *)(a2 + v8 + 56);
  v12 = *(_OWORD *)(a2 + v8 + 72);
  *(_BYTE *)(v9 + 88) = *(_BYTE *)(a2 + v8 + 88);
  *(_OWORD *)(v9 + 72) = v12;
  *(_OWORD *)(v9 + 56) = v11;
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(a2 + v8 + 96);
  v13 = type metadata accessor for MetricsRequest(0);
  v14 = *(int *)(v13 + 40);
  v15 = (void *)(v9 + v14);
  v16 = (void *)(v10 + v14);
  v17 = sub_190A46EE8();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  v100 = v18;
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v15, v16, v17);
LABEL_7:
  v23 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v24 = (char *)(v9 + v23);
  v25 = (char *)(v10 + v23);
  v26 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v27 = *((_QWORD *)v26 - 1);
  v28 = *(uint64_t (**)(char *, uint64_t, int *))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (v30)
    {
      sub_1909B4318((uint64_t)v24);
      goto LABEL_13;
    }
    *(_OWORD *)v24 = *(_OWORD *)v25;
    v41 = v26[5];
    v42 = &v24[v41];
    v43 = &v25[v41];
    *(_OWORD *)v42 = *(_OWORD *)v43;
    v42[16] = v43[16];
    *(_OWORD *)(v42 + 24) = *(_OWORD *)(v43 + 24);
    v42[40] = v43[40];
    *((_QWORD *)v42 + 6) = *((_QWORD *)v43 + 6);
    *(_OWORD *)(v42 + 56) = *(_OWORD *)(v43 + 56);
    *(_OWORD *)(v42 + 72) = *(_OWORD *)(v43 + 72);
    v42[88] = v43[88];
    *((_OWORD *)v42 + 6) = *((_OWORD *)v43 + 6);
    v44 = *(int *)(v13 + 40);
    v45 = &v42[v44];
    v46 = &v43[v44];
    v47 = v19(&v42[v44], 1, v17);
    v48 = v19(v46, 1, v17);
    if (v47)
    {
      if (!v48)
      {
        (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v45, v46, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v45, 0, 1, v17);
        goto LABEL_34;
      }
    }
    else
    {
      if (!v48)
      {
        (*(void (**)(char *, char *, uint64_t))(v100 + 40))(v45, v46, v17);
LABEL_34:
        v72 = v26[6];
        v73 = &v24[v72];
        v74 = &v25[v72];
        *(_OWORD *)v73 = *(_OWORD *)v74;
        v73[16] = v74[16];
        *(_OWORD *)(v73 + 24) = *(_OWORD *)(v74 + 24);
        v73[40] = v74[40];
        *((_QWORD *)v73 + 6) = *((_QWORD *)v74 + 6);
        *(_OWORD *)(v73 + 56) = *(_OWORD *)(v74 + 56);
        *(_OWORD *)(v73 + 72) = *(_OWORD *)(v74 + 72);
        v73[88] = v74[88];
        *((_OWORD *)v73 + 6) = *((_OWORD *)v74 + 6);
        v75 = *(int *)(v13 + 40);
        v76 = &v73[v75];
        v77 = &v74[v75];
        v78 = v19(&v73[v75], 1, v17);
        v79 = v19(v77, 1, v17);
        if (v78)
        {
          if (!v79)
          {
            (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v76, v77, v17);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v76, 0, 1, v17);
LABEL_40:
            v81 = v26[7];
            v82 = &v24[v81];
            v83 = &v25[v81];
            *(_OWORD *)v82 = *(_OWORD *)v83;
            v82[16] = v83[16];
            *(_OWORD *)(v82 + 24) = *(_OWORD *)(v83 + 24);
            v82[40] = v83[40];
            *((_QWORD *)v82 + 6) = *((_QWORD *)v83 + 6);
            *(_OWORD *)(v82 + 56) = *(_OWORD *)(v83 + 56);
            *(_OWORD *)(v82 + 72) = *(_OWORD *)(v83 + 72);
            v82[88] = v83[88];
            *((_OWORD *)v82 + 6) = *((_OWORD *)v83 + 6);
            v84 = *(int *)(v13 + 40);
            v85 = &v82[v84];
            v86 = &v83[v84];
            v87 = v19(&v82[v84], 1, v17);
            v88 = v19(v86, 1, v17);
            if (v87)
            {
              if (v88)
              {
                v89 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
                memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
                v90 = v100;
              }
              else
              {
                v90 = v100;
                (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v85, v86, v17);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v85, 0, 1, v17);
              }
            }
            else
            {
              v90 = v100;
              if (v88)
              {
                (*(void (**)(char *, uint64_t))(v100 + 8))(v85, v17);
                v91 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
                memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v100 + 40))(v85, v86, v17);
              }
            }
            v92 = v26[8];
            v93 = &v24[v92];
            v94 = &v25[v92];
            *(_OWORD *)v93 = *(_OWORD *)v94;
            v93[16] = v94[16];
            *(_OWORD *)(v93 + 24) = *(_OWORD *)(v94 + 24);
            v93[40] = v94[40];
            *((_QWORD *)v93 + 6) = *((_QWORD *)v94 + 6);
            *(_OWORD *)(v93 + 56) = *(_OWORD *)(v94 + 56);
            *(_OWORD *)(v93 + 72) = *(_OWORD *)(v94 + 72);
            v93[88] = v94[88];
            *((_OWORD *)v93 + 6) = *((_OWORD *)v94 + 6);
            v95 = *(int *)(v13 + 40);
            v96 = &v93[v95];
            v97 = &v94[v95];
            v98 = v19(&v93[v95], 1, v17);
            v99 = v19(v97, 1, v17);
            if (v98)
            {
              if (!v99)
              {
                (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v96, v97, v17);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v96, 0, 1, v17);
                return a1;
              }
            }
            else
            {
              if (!v99)
              {
                (*(void (**)(char *, char *, uint64_t))(v90 + 40))(v96, v97, v17);
                return a1;
              }
              (*(void (**)(char *, uint64_t))(v90 + 8))(v96, v17);
            }
            v38 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0) - 8) + 64);
            v39 = v96;
            v40 = v97;
            goto LABEL_14;
          }
        }
        else
        {
          if (!v79)
          {
            (*(void (**)(char *, char *, uint64_t))(v100 + 40))(v76, v77, v17);
            goto LABEL_40;
          }
          (*(void (**)(char *, uint64_t))(v100 + 8))(v76, v17);
        }
        v80 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t))(v100 + 8))(v45, v17);
    }
    v71 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    goto LABEL_34;
  }
  if (v30)
  {
LABEL_13:
    v38 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0) - 8) + 64);
    v39 = v24;
    v40 = v25;
LABEL_14:
    memcpy(v39, v40, v38);
    return a1;
  }
  *(_OWORD *)v24 = *(_OWORD *)v25;
  v31 = v26[5];
  v32 = &v24[v31];
  v33 = &v25[v31];
  v32[16] = v33[16];
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 24) = *(_OWORD *)(v33 + 24);
  v32[40] = v33[40];
  *((_QWORD *)v32 + 6) = *((_QWORD *)v33 + 6);
  *(_OWORD *)(v32 + 56) = *(_OWORD *)(v33 + 56);
  *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
  v32[88] = v33[88];
  *((_OWORD *)v32 + 6) = *((_OWORD *)v33 + 6);
  v34 = *(int *)(v13 + 40);
  v35 = &v32[v34];
  v36 = &v33[v34];
  if (v19(&v33[v34], 1, v17))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v35, v36, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v35, 0, 1, v17);
  }
  v49 = v26[6];
  v50 = &v24[v49];
  v51 = &v25[v49];
  *(_OWORD *)v50 = *(_OWORD *)v51;
  v50[16] = v51[16];
  *(_OWORD *)(v50 + 24) = *(_OWORD *)(v51 + 24);
  v50[40] = v51[40];
  *((_QWORD *)v50 + 6) = *((_QWORD *)v51 + 6);
  *(_OWORD *)(v50 + 56) = *(_OWORD *)(v51 + 56);
  *(_OWORD *)(v50 + 72) = *(_OWORD *)(v51 + 72);
  v50[88] = v51[88];
  *((_OWORD *)v50 + 6) = *((_OWORD *)v51 + 6);
  v52 = *(int *)(v13 + 40);
  v53 = &v50[v52];
  v54 = &v51[v52];
  if (v19(&v51[v52], 1, v17))
  {
    v55 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v53, v54, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v53, 0, 1, v17);
  }
  v56 = v26[7];
  v57 = &v24[v56];
  v58 = &v25[v56];
  *(_OWORD *)v57 = *(_OWORD *)v58;
  v57[16] = v58[16];
  *(_OWORD *)(v57 + 24) = *(_OWORD *)(v58 + 24);
  v57[40] = v58[40];
  *((_QWORD *)v57 + 6) = *((_QWORD *)v58 + 6);
  *(_OWORD *)(v57 + 56) = *(_OWORD *)(v58 + 56);
  *(_OWORD *)(v57 + 72) = *(_OWORD *)(v58 + 72);
  v57[88] = v58[88];
  *((_OWORD *)v57 + 6) = *((_OWORD *)v58 + 6);
  v59 = *(int *)(v13 + 40);
  v60 = &v57[v59];
  v61 = &v58[v59];
  if (v19(&v58[v59], 1, v17))
  {
    v62 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v60, v61, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v60, 0, 1, v17);
  }
  v63 = v26[8];
  v64 = &v24[v63];
  v65 = &v25[v63];
  *(_OWORD *)v64 = *(_OWORD *)v65;
  v64[16] = v65[16];
  *(_OWORD *)(v64 + 24) = *(_OWORD *)(v65 + 24);
  v64[40] = v65[40];
  *((_QWORD *)v64 + 6) = *((_QWORD *)v65 + 6);
  *(_OWORD *)(v64 + 56) = *(_OWORD *)(v65 + 56);
  *(_OWORD *)(v64 + 72) = *(_OWORD *)(v65 + 72);
  v64[88] = v65[88];
  *((_OWORD *)v64 + 6) = *((_OWORD *)v65 + 6);
  v66 = *(int *)(v13 + 40);
  v67 = &v64[v66];
  v68 = &v65[v66];
  if (v19(&v65[v66], 1, v17))
  {
    v69 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v67, v68, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v67, 0, 1, v17);
  }
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
  return a1;
}

uint64_t sub_1909B5228()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909B5234(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ActivityMetricsDefinition(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1909B52B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1909B52BC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ActivityMetricsDefinition(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for JindoViewCollection()
{
  uint64_t result;

  result = qword_1EE1EA530;
  if (!qword_1EE1EA530)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1909B536C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ActivityMetricsDefinition(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1909B53EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1E69B8;
  if (!qword_1EE1E69B8)
  {
    v1 = type metadata accessor for JindoViewStates(255);
    result = MEMORY[0x19401429C](&unk_190A563A8, v1);
    atomic_store(result, (unint64_t *)&qword_1EE1E69B8);
  }
  return result;
}

uint64_t View.widgetCurvesContent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = sub_190A4729C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A47290();
  MEMORY[0x194012838](v8, a2, v5, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1909B54E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  sub_190A4729C();
  v2 = sub_190A46894();
  v4[0] = v1;
  v4[1] = sub_1909B5540();
  return MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v2, v4);
}

unint64_t sub_1909B5540()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EE0B0;
  if (!qword_1EE1EE0B0)
  {
    v1 = sub_190A4729C();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDCD78], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EE0B0);
  }
  return result;
}

uint64_t sub_1909B5588()
{
  uint64_t v1;

  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E67B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6790);
  sub_1909B5BC0();
  sub_1909B5B50();
  sub_190A46F90();
  return v1;
}

uint64_t _AccessoryWidgetBackground.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t result;

  KeyPath = swift_getKeyPath();
  v3 = swift_getKeyPath();
  result = swift_getKeyPath();
  *(_QWORD *)a1 = KeyPath;
  *(_BYTE *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = result;
  *(_BYTE *)(a1 + 40) = 0;
  return result;
}

uint64_t _AccessoryWidgetBackground.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  KeyPath = swift_getKeyPath();
  v5 = swift_getKeyPath();
  v6 = swift_getKeyPath();
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  *(_QWORD *)a2 = KeyPath;
  *(_BYTE *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = v6;
  *(_BYTE *)(a2 + 40) = 0;
  return result;
}

uint64_t _AccessoryWidgetBackground.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  int v10;
  char v11;
  uint64_t v12;
  unsigned __int16 v13;
  unsigned __int8 v14;
  char v15;

  v3 = *(_QWORD *)v1;
  v4 = *(_BYTE *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_BYTE *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v8 = *(_BYTE *)(v1 + 40);
  sub_1908D1B74(*(_QWORD *)v1, v4);
  sub_1908D1B74(v5, v6);
  sub_1908D1B74(v7, v8);
  sub_1908D1B74(v3, v4);
  sub_19096F94C(v3, v4, &v12);
  sub_1908CE654(v3, v4);
  sub_1908CE654(v3, v4);
  sub_1908CE654(v5, v6);
  sub_1908CE654(v7, v8);
  if (v12 == 2)
  {
    sub_190A47644();
  }
  else
  {
    sub_190A4765C();
    sub_190A47668();
    swift_release();
    sub_1908D1B74(v3, v4);
    sub_1908D1B74(v5, v6);
    sub_1908D1B74(v7, v8);
    sub_1908D1B74(v7, v8);
    sub_19096EA60(v7, v8);
    sub_1908CE654(v7, v8);
    sub_1908CE654(v3, v4);
    sub_1908CE654(v5, v6);
    sub_1908CE654(v7, v8);
    sub_1908D1B74(v3, v4);
    sub_1908D1B74(v5, v6);
    sub_1908D1B74(v7, v8);
    sub_1908D1B74(v5, v6);
    sub_19096EA60(v5, v6);
    sub_1908CE654(v5, v6);
    sub_1908CE654(v3, v4);
    sub_1908CE654(v5, v6);
    sub_1908CE654(v7, v8);
    sub_1909B5588();
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6790);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E68C0);
  sub_1909B5B50();
  sub_1909B5B9C();
  result = sub_190A46F90();
  v10 = v13 | (v14 << 16);
  v11 = v15;
  *(_QWORD *)a1 = v12;
  *(_WORD *)(a1 + 8) = v10;
  *(_BYTE *)(a1 + 10) = BYTE2(v10);
  *(_BYTE *)(a1 + 11) = v11;
  return result;
}

uint64_t sub_1909B59DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  KeyPath = swift_getKeyPath();
  v5 = swift_getKeyPath();
  v6 = swift_getKeyPath();
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  *(_QWORD *)a2 = KeyPath;
  *(_BYTE *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = v6;
  *(_BYTE *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1909B5A64()
{
  sub_1909B5F5C();
  return sub_190A468AC();
}

uint64_t sub_1909B5AB4()
{
  sub_1909B5F5C();
  return sub_190A468B8();
}

uint64_t sub_1909B5B04()
{
  sub_1909B5F5C();
  return sub_190A468D0();
}

unint64_t sub_1909B5B50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1E6788;
  if (!qword_1EE1E6788)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6790);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD8668], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1E6788);
  }
  return result;
}

uint64_t sub_1909B5B9C()
{
  return sub_1909B5EEC(&qword_1EE1E68B8, &qword_1EE1E68C0, (uint64_t (*)(void))sub_1909B5BC0, (uint64_t (*)(void))sub_1909B5B50);
}

unint64_t sub_1909B5BC0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1E67A8;
  if (!qword_1EE1E67A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E67B0);
    v2[0] = sub_1909B5B50();
    v2[1] = MEMORY[0x1E0CDCE08];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1E67A8);
  }
  return result;
}

unint64_t sub_1909B5C30()
{
  unint64_t result;

  result = qword_1ECF6A040;
  if (!qword_1ECF6A040)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for _AccessoryWidgetBackground, &type metadata for _AccessoryWidgetBackground);
    atomic_store(result, (unint64_t *)&qword_1ECF6A040);
  }
  return result;
}

unint64_t sub_1909B5C78()
{
  unint64_t result;

  result = qword_1ECF6A038;
  if (!qword_1ECF6A038)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for _AccessoryWidgetBackground, &type metadata for _AccessoryWidgetBackground);
    atomic_store(result, (unint64_t *)&qword_1ECF6A038);
  }
  return result;
}

uint64_t sub_1909B5CC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for _AccessoryWidgetBackground(uint64_t a1)
{
  sub_1908CE654(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  sub_1908CE654(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  return sub_1908CE654(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for _AccessoryWidgetBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B74(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_BYTE *)(v2 + 24);
  sub_1908D1B74(v6, v7);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(v2 + 32);
  LOBYTE(v2) = *(_BYTE *)(v2 + 40);
  sub_1908D1B74(v8, v2);
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v2;
  return a1;
}

uint64_t assignWithCopy for _AccessoryWidgetBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B74(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1908CE654(v6, v7);
  v8 = *(_QWORD *)(v2 + 16);
  v9 = *(_BYTE *)(v2 + 24);
  sub_1908D1B74(v8, v9);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  sub_1908CE654(v10, v11);
  v12 = *(_QWORD *)(v2 + 32);
  LOBYTE(v2) = *(_BYTE *)(v2 + 40);
  sub_1908D1B74(v12, v2);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v12;
  *(_BYTE *)(a1 + 40) = v2;
  sub_1908CE654(v13, v14);
  return a1;
}

uint64_t assignWithTake for _AccessoryWidgetBackground(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1908CE654(v6, v7);
  v8 = *((_BYTE *)a2 + 24);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v8;
  sub_1908CE654(v9, v10);
  v11 = *((_BYTE *)a2 + 40);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_BYTE *)(a1 + 40) = v11;
  sub_1908CE654(v12, v13);
  return a1;
}

ValueMetadata *type metadata accessor for _AccessoryWidgetBackground()
{
  return &type metadata for _AccessoryWidgetBackground;
}

uint64_t sub_1909B5EB8()
{
  return sub_1909B5EEC(&qword_1EE1E68D8, (uint64_t *)&unk_1EE1E5F00, (uint64_t (*)(void))sub_1909B5B50, sub_1909B5B9C);
}

uint64_t sub_1909B5EEC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1909B5F5C()
{
  unint64_t result;

  result = qword_1ECF6A028;
  if (!qword_1ECF6A028)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for _AccessoryWidgetBackground, &type metadata for _AccessoryWidgetBackground);
    atomic_store(result, (unint64_t *)&qword_1ECF6A028);
  }
  return result;
}

uint64_t MetadataGraphicView.init(_:alwaysTemplate:allowsCustomColors:colors:resizable:tint:symbolRenderingMode:allowSymbolEffects:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t *a9@<X8>)
{
  int *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  char *v24;
  uint64_t result;
  uint64_t v29;

  *a9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
  swift_storeEnumTagMultiPayload();
  v15 = (int *)type metadata accessor for MetadataGraphicView();
  v16 = (char *)a9 + v15[5];
  v17 = sub_190A47260();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, a1, v17);
  *((_BYTE *)a9 + v15[6]) = a2;
  v19 = a3;
  if ((a3 & 1) != 0)
  {
    v21 = a5;
    v20 = a8;
    if (!a6)
    {
LABEL_7:
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, v17);
      goto LABEL_8;
    }
  }
  else
  {
    v21 = a5;
    v20 = a8;
    if (!a6)
    {
      if (!a4)
      {
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, v17);
        v23 = 0;
        a4 = 1;
        goto LABEL_9;
      }
      goto LABEL_7;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EE0B8);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_190A4A350;
  *(_QWORD *)(v22 + 32) = a6;
  v29 = v22;
  sub_190A47C74();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, v17);
  swift_bridgeObjectRelease();
  a4 = v29;
LABEL_8:
  v23 = v19 & 1;
LABEL_9:
  v24 = (char *)a9 + v15[7];
  *(_QWORD *)v24 = a4;
  v24[8] = v23;
  *((_BYTE *)a9 + v15[8]) = v21 & 1;
  result = sub_1908B4BD4(a7, (uint64_t)a9 + v15[9], &qword_1EE1EB5B8);
  *((_BYTE *)a9 + v15[10]) = v20 & 1;
  return result;
}

uint64_t type metadata accessor for MetadataGraphicView()
{
  uint64_t result;

  result = qword_1EE1EB660;
  if (!qword_1EE1EB660)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MetadataGraphicView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  int v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v40)(char *, uint64_t, uint64_t);
  void (*v41)(char *, uint64_t);
  int v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t KeyPath;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB5C8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB648);
  MEMORY[0x1E0C80A78](v72);
  v69 = (uint64_t *)((char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = sub_190A469A8();
  v74 = *(_QWORD *)(v68 - 8);
  v7 = MEMORY[0x1E0C80A78](v68);
  v76 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v73 = (char *)&v59 - v9;
  v67 = sub_190A47248();
  v70 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v66 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_190A47260();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v59 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1EB588);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (uint64_t *)((char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v19);
  v71 = (uint64_t)&v59 - v22;
  v23 = sub_1909B6700();
  if (v23)
  {
    v61 = v23;
    v62 = v5;
    v75 = v18;
    v64 = v3;
    v24 = sub_1909B6974();
    v25 = type metadata accessor for MetadataGraphicView();
    v26 = v25;
    v27 = *(unsigned __int8 *)(v1 + *(int *)(v25 + 40));
    v28 = v1;
    v65 = a1;
    v63 = v24;
    if (v27 == 1)
    {
      v29 = v1 + *(int *)(v25 + 20);
      v60 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
      v60(v17, v29, v11);
      v30 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v17, v11);
      v31 = *MEMORY[0x1E0CDCD08];
      v32 = v61;
      if (v30 == *MEMORY[0x1E0CDCD08])
      {
        v33 = v30;
        (*(void (**)(char *, uint64_t))(v12 + 96))(v17, v11);
        v34 = *(void (**)(char *, char *, uint64_t))(v70 + 32);
        v35 = v66;
        v59 = v28;
        v36 = v67;
        v34(v66, v17, v67);
        swift_retain();
        v37 = sub_190A471E8();
        v38 = v36;
        v28 = v59;
        (*(void (**)(char *, uint64_t))(v70 + 8))(v35, v38);
      }
      else
      {
        v41 = *(void (**)(char *, uint64_t))(v12 + 8);
        swift_retain();
        v41(v17, v11);
        v37 = MEMORY[0x1E0DEE9D8];
        v33 = v31;
      }
      v40 = v60;
    }
    else
    {
      v40 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
      v33 = *MEMORY[0x1E0CDCD08];
      v32 = v61;
      swift_retain();
      v37 = MEMORY[0x1E0DEE9D8];
    }
    v40(v15, v28 + *(int *)(v26 + 20), v11);
    v42 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v15, v11);
    v43 = v76;
    v44 = v32;
    v45 = v37;
    if (v42 == v33)
    {
      (*(void (**)(char *, uint64_t))(v12 + 96))(v15, v11);
      v46 = v70;
      v47 = v66;
      v48 = v15;
      v49 = v67;
      (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v66, v48, v67);
      sub_190A471F4();
      v43 = v76;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v49);
    }
    else
    {
      sub_190A4699C();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }
    v50 = (uint64_t)v62;
    v52 = v68;
    v51 = v69;
    v53 = v74;
    v54 = v75;
    v55 = v73;
    (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v73, v43, v68);
    KeyPath = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))((char *)v51 + *(int *)(v72 + 28), v55, v52);
    *v51 = KeyPath;
    sub_1908AAA48((uint64_t)v51, (uint64_t)v21 + *(int *)(v54 + 36), &qword_1EE1EB648);
    v57 = v63;
    *v21 = v44;
    v21[1] = v57;
    v21[2] = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1908AA544((uint64_t)v51, &qword_1EE1EB648);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v58 = v71;
    sub_1908B4BD4((uint64_t)v21, v71, (uint64_t *)&unk_1EE1EB588);
    sub_1908AAA48(v58, v50, (uint64_t *)&unk_1EE1EB588);
    swift_storeEnumTagMultiPayload();
    sub_1909B6D74();
    sub_190A46F90();
    swift_release();
    return sub_1908AA544(v58, (uint64_t *)&unk_1EE1EB588);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_1909B6D74();
    return sub_190A46F90();
  }
}

uint64_t sub_1909B6700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v1 = v0;
  v2 = sub_190A47704();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EB298);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MetadataGraphicView();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!WidgetAuxiliaryViewMetadata.Graphic.image(symbolRenderingMode:)(v0 + *(int *)(v10 + 36)))
    return 0;
  v13 = *(unsigned __int8 *)(v0 + *(int *)(v9 + 24));
  sub_1909B94E8(v1, (uint64_t)v12);
  swift_retain();
  if (v13 == 1)
  {
    sub_1909B952C((uint64_t)v12);
LABEL_4:
    v14 = *MEMORY[0x1E0CDF770];
    v15 = sub_190A47740();
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 104))(v8, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
    goto LABEL_11;
  }
  v18 = sub_1909B6974();
  if (v18)
  {
    v19 = *(_QWORD *)(v18 + 16);
    swift_bridgeObjectRelease();
    sub_1909B952C((uint64_t)v12);
    if (!v19)
      goto LABEL_4;
  }
  else
  {
    sub_1909B952C((uint64_t)v12);
  }
  v20 = sub_190A47740();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v8, 1, 1, v20);
LABEL_11:
  v17 = sub_190A47710();
  swift_release_n();
  sub_1908AA544((uint64_t)v8, qword_1EE1EB298);
  if (*(_BYTE *)(v1 + *(int *)(v9 + 32)) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CDF6F8], v2);
    swift_retain();
    v21 = sub_190A47758();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return v21;
  }
  return v17;
}

uint64_t sub_1909B6974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = sub_190A47260();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_190A47248();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MetadataGraphicView();
  v10 = (uint64_t *)(v0 + *(int *)(v9 + 28));
  v11 = *v10;
  if (*v10)
  {
    v12 = 0;
    if (v11 != 1)
    {
      swift_bridgeObjectRetain();
      return v11;
    }
  }
  else
  {
    v12 = MEMORY[0x1E0DEE9D8];
    if ((v10[1] & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + *(int *)(v9 + 20), v1);
      if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v4, v1) == *MEMORY[0x1E0CDCD08])
      {
        (*(void (**)(char *, uint64_t))(v2 + 96))(v4, v1);
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
        v13 = sub_190A47224();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        if (v13)
          return v13;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      }
    }
  }
  return v12;
}

uint64_t WidgetAuxiliaryViewMetadata.Graphic.symbolEffects.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = sub_190A47248();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190A47260();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) == *MEMORY[0x1E0CDCD08])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    v10 = sub_190A471E8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return MEMORY[0x1E0DEE9D8];
  }
  return v10;
}

uint64_t WidgetAuxiliaryViewMetadata.Graphic.contentTransition.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_190A47248();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190A47260();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) == *MEMORY[0x1E0CDCD08])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    sub_190A471F4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    sub_190A4699C();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

unint64_t sub_1909B6D74()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EB580;
  if (!qword_1EE1EB580)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE1EB588);
    v2[0] = sub_1909B6DF8();
    v2[1] = sub_1908AF598(&qword_1EE1EB640, &qword_1EE1EB648, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EB580);
  }
  return result;
}

unint64_t sub_1909B6DF8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EB570;
  if (!qword_1EE1EB570)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EB578);
    v2[0] = sub_1909B6E64();
    v2[1] = sub_1909B6F14();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EB570);
  }
  return result;
}

unint64_t sub_1909B6E64()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1EE1EB560;
  if (!qword_1EE1EB560)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EB568);
    v2 = sub_1909B6ED0();
    v3[0] = MEMORY[0x1E0CDF820];
    v3[1] = v2;
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EE1EB560);
  }
  return result;
}

unint64_t sub_1909B6ED0()
{
  unint64_t result;

  result = qword_1EE1EB670;
  if (!qword_1EE1EB670)
  {
    result = MEMORY[0x19401429C](&unk_190A571A4, &type metadata for MetadataForegroundColorsModifier);
    atomic_store(result, (unint64_t *)&qword_1EE1EB670);
  }
  return result;
}

unint64_t sub_1909B6F14()
{
  unint64_t result;

  result = qword_1EE1EB618;
  if (!qword_1EE1EB618)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDC260], MEMORY[0x1E0CDC270]);
    atomic_store(result, (unint64_t *)&qword_1EE1EB618);
  }
  return result;
}

uint64_t WidgetAuxiliaryViewMetadata.Graphic.image(symbolRenderingMode:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char *v28;
  uint64_t v29;

  v2 = v1;
  v29 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EB298);
  MEMORY[0x1E0C80A78](v3);
  v28 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_190A47248();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_190A47704();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_190A47260();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (id *)((char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t))(v14 + 16))(v16, v2, v13);
  v17 = (*(uint64_t (**)(id *, uint64_t))(v14 + 88))(v16, v13);
  if (v17 == *MEMORY[0x1E0CDCD08])
  {
    (*(void (**)(id *, uint64_t))(v14 + 96))(v16, v13);
    (*(void (**)(char *, id *, uint64_t))(v6 + 32))(v8, v16, v5);
    v18 = sub_190A47224();
    swift_bridgeObjectRelease();
    v19 = sub_1909B7250(v29);
    v20 = v19;
    if (v18 && v19)
    {
      v21 = *MEMORY[0x1E0CDF770];
      v22 = sub_190A47740();
      v23 = *(_QWORD *)(v22 - 8);
      v24 = (uint64_t)v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 104))(v28, v21, v22);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v24, 0, 1, v22);
      v25 = sub_190A47710();
      swift_release();
      sub_1908AA544(v24, qword_1EE1EB298);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return v25;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  else if (v17 == *MEMORY[0x1E0CDCD00])
  {
    (*(void (**)(id *, uint64_t))(v14 + 96))(v16, v13);
    v26 = *v16;
    sub_190A476E0();
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0CDF6F8], v9);
    v20 = sub_190A47758();

    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    (*(void (**)(id *, uint64_t))(v14 + 8))(v16, v13);
    return 0;
  }
  return v20;
}

uint64_t sub_1909B7250(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;

  v2 = v1;
  v62 = a1;
  v3 = sub_190A47248();
  v58 = *(_QWORD *)(v3 - 8);
  v59 = v3;
  MEMORY[0x1E0C80A78](v3);
  v65 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB5B8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v53 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v63 = (uint64_t)&v52 - v9;
  MEMORY[0x1E0C80A78](v8);
  v60 = (char *)&v52 - v10;
  v64 = sub_190A46ED0();
  v61 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v56 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_190A45FC4();
  v54 = *(_QWORD *)(v12 - 8);
  v55 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_190A47230();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v52 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v52 - v23;
  v25 = sub_190A47218();
  if ((v25 & 0x100000000) != 0)
    v26 = 0.0;
  else
    v26 = *(float *)&v25;
  sub_190A4723C();
  v27 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v24, v15);
  v28 = *MEMORY[0x1E0CDCCD8];
  v57 = v26;
  if (v27 == v28)
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v22, v24, v15);
    (*(void (**)(char *, uint64_t))(v16 + 96))(v22, v15);
    v29 = v54;
    v30 = v22;
    v31 = v55;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v14, v30, v55);
    v32 = (void *)objc_opt_self();
    v33 = (void *)sub_190A45F94();
    v34 = objc_msgSend(v32, sel_wk_uniqueWithURL_, v33);

    sub_190A4720C();
    v35 = sub_190A47764();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v31);
LABEL_10:
    v38 = (uint64_t)v60;
    v37 = v61;
    v40 = v58;
    v39 = v59;
    goto LABEL_13;
  }
  if (v27 != *MEMORY[0x1E0CDCCE0])
  {
    v35 = 0;
    goto LABEL_10;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v24, v15);
  (*(void (**)(char *, uint64_t))(v16 + 96))(v19, v15);
  v36 = *v19;
  sub_190A4720C();
  v38 = (uint64_t)v60;
  v37 = v61;
  v40 = v58;
  v39 = v59;
  if ((v36 & 1) != 0)
    v41 = sub_190A4771C();
  else
    v41 = sub_190A476EC();
  v35 = v41;
LABEL_13:
  v42 = v62;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v24, v15);
  v43 = v63;
  sub_1908AAA48(v42, v63, &qword_1EE1EB5B8);
  v44 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v65, v2, v39);
  v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  v46 = v64;
  if (v45(v43, 1, v64) == 1)
  {
    sub_190A47200();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v39);
    sub_1908AA544(v43, &qword_1EE1EB5B8);
    if (v45(v38, 1, v46) != 1)
    {
      v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32);
      goto LABEL_18;
    }
LABEL_17:
    sub_1908AA544(v38, &qword_1EE1EB5B8);
    return v35;
  }
  (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v39);
  v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32);
  v47(v38, v43, v46);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v46);
  if (v45(v38, 1, v46) == 1)
    goto LABEL_17;
LABEL_18:
  v48 = v56;
  v47((uint64_t)v56, v38, v46);
  if (v35)
  {
    v49 = (uint64_t)v53;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v53, v48, v46);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v49, 0, 1, v46);
    swift_retain();
    v50 = sub_190A47734();
    swift_release();
    sub_1908AA544(v49, &qword_1EE1EB5B8);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v48, v46);
    swift_release();
    return v50;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v48, v46);
  }
  return v35;
}

BOOL WidgetAuxiliaryViewMetadata.Graphic.isSystemSymbol.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _BOOL8 v14;
  uint64_t v16;

  v1 = v0;
  v2 = sub_190A47230();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190A47248();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_190A47260();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v1, v10);
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v13, v10) == *MEMORY[0x1E0CDCD08])
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    sub_190A4723C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v14 = (*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) != *MEMORY[0x1E0CDCCD8];
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return 0;
  }
  return v14;
}

uint64_t sub_1909B7914@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  _QWORD v48[3];
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v58 = a3;
  v59 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB610);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v49 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB198);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB548);
  MEMORY[0x1E0C80A78](v57);
  v11 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB538);
  MEMORY[0x1E0C80A78](v51);
  v48[0] = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB5D0);
  MEMORY[0x1E0C80A78](v53);
  v55 = (uint64_t)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB5C0);
  MEMORY[0x1E0C80A78](v50);
  v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB5E0);
  MEMORY[0x1E0C80A78](v54);
  v52 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB558);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v48 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB600);
  v24 = MEMORY[0x1E0C80A78](v23);
  v56 = (char *)v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v31 = (uint64_t)v49;
    v30(v49, v59, v4);
    v30(v9, v31, v4);
    swift_storeEnumTagMultiPayload();
    sub_1909B919C();
    sub_1908AF598(&qword_1EE1EB608, &qword_1EE1EB610, MEMORY[0x1E0CDBF10]);
    sub_190A46F90();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v31, v4);
  }
  v26 = v5;
  v48[1] = v7;
  v48[2] = v24;
  v49 = v9;
  v27 = a2[2];
  if (v27)
  {
    v28 = v26;
    v29 = v59;
    if (v27 == 2)
    {
      v40 = a2[4];
      v39 = a2[5];
      v41 = v48[0];
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v26 + 16))(v48[0], v59, v4);
      v42 = (_QWORD *)(v41 + *(int *)(v51 + 36));
      *v42 = v40;
      v42[1] = v39;
      sub_1908AAA48(v41, (uint64_t)v15, &qword_1EE1EB538);
      swift_storeEnumTagMultiPayload();
      sub_1909B9274();
      sub_1909B9310();
      swift_retain();
      swift_retain();
      v43 = (uint64_t)v52;
      sub_190A46F90();
      sub_1908AAA48(v43, v55, &qword_1EE1EB5E0);
      swift_storeEnumTagMultiPayload();
      sub_1909B9208();
      sub_1909B93AC();
      v36 = (uint64_t)v56;
      sub_190A46F90();
      sub_1908AA544(v43, &qword_1EE1EB5E0);
      v37 = v41;
      v38 = &qword_1EE1EB538;
      goto LABEL_11;
    }
    if (v27 != 1)
    {
      v44 = a2[4];
      v45 = a2[5];
      v46 = a2[6];
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v11, v59, v4);
      v47 = &v11[*(int *)(v57 + 36)];
      *(_QWORD *)v47 = v44;
      *((_QWORD *)v47 + 1) = v45;
      *((_QWORD *)v47 + 2) = v46;
      sub_1908AAA48((uint64_t)v11, v55, &qword_1EE1EB548);
      swift_storeEnumTagMultiPayload();
      sub_1909B9208();
      sub_1909B93AC();
      swift_retain();
      swift_retain();
      swift_retain();
      v36 = (uint64_t)v56;
      sub_190A46F90();
      v37 = (uint64_t)v11;
      v38 = &qword_1EE1EB548;
      goto LABEL_11;
    }
    v27 = a2[4];
    swift_retain();
  }
  else
  {
    v28 = v26;
    v29 = v59;
  }
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v20, v29, v4);
  v34 = (uint64_t *)&v20[*(int *)(v17 + 36)];
  *v34 = KeyPath;
  v34[1] = v27;
  sub_1908B4BD4((uint64_t)v20, (uint64_t)v22, &qword_1EE1EB558);
  sub_1908AAA48((uint64_t)v22, (uint64_t)v15, &qword_1EE1EB558);
  swift_storeEnumTagMultiPayload();
  sub_1909B9274();
  sub_1909B9310();
  v35 = (uint64_t)v52;
  sub_190A46F90();
  sub_1908AAA48(v35, v55, &qword_1EE1EB5E0);
  swift_storeEnumTagMultiPayload();
  sub_1909B9208();
  sub_1909B93AC();
  v36 = (uint64_t)v56;
  sub_190A46F90();
  sub_1908AA544(v35, &qword_1EE1EB5E0);
  v37 = (uint64_t)v22;
  v38 = &qword_1EE1EB558;
LABEL_11:
  sub_1908AA544(v37, v38);
  sub_1908AAA48(v36, (uint64_t)v49, &qword_1EE1EB600);
  swift_storeEnumTagMultiPayload();
  sub_1909B919C();
  sub_1908AF598(&qword_1EE1EB608, &qword_1EE1EB610, MEMORY[0x1E0CDBF10]);
  sub_190A46F90();
  return sub_1908AA544(v36, &qword_1EE1EB600);
}

uint64_t sub_1909B7FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD **v2;

  return sub_1909B7914(a1, *v2, a2);
}

uint64_t sub_1909B7FC0()
{
  return sub_190A46A98();
}

uint64_t sub_1909B7FE0()
{
  return sub_190A46A98();
}

uint64_t sub_1909B8000(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_190A469A8();
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_190A46AA4();
}

uint64_t sub_1909B8080()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for MetadataGraphicView(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_190A46C30();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_190A47260();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    if (*(_QWORD *)v15 == 1)
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      v14[8] = v15[8];
    }
    else
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      v14[8] = v15[8];
      swift_bridgeObjectRetain();
    }
    v16 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_190A46ED0();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB5B8);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  }
  return a1;
}

uint64_t destroy for MetadataGraphicView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_190A46C30();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + a2[5];
  v6 = sub_190A47260();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(a1 + a2[7]) != 1)
    swift_bridgeObjectRelease();
  v7 = a1 + a2[9];
  v8 = sub_190A46ED0();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return result;
}

_QWORD *initializeWithCopy for MetadataGraphicView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_190A46C30();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_190A47260();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  if (*(_QWORD *)v13 == 1)
  {
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
  }
  else
  {
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
    swift_bridgeObjectRetain();
  }
  v14 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_190A46ED0();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB5B8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  return a1;
}

_QWORD *assignWithCopy for MetadataGraphicView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;

  if (a1 != a2)
  {
    sub_1908AA544((uint64_t)a1, &qword_1EE1EB960);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_190A46C30();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_190A47260();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v11 = a3[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)((char *)a2 + v11);
  if (*(_QWORD *)((char *)a1 + v11) == 1)
  {
    if (v14 == 1)
    {
      v15 = *(_QWORD *)v13;
      v12[8] = v13[8];
      *(_QWORD *)v12 = v15;
    }
    else
    {
      *(_QWORD *)v12 = v14;
      v12[8] = v13[8];
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    if (v14 == 1)
    {
      sub_1908AA544((uint64_t)a1 + v11, &qword_1EE1EE0C0);
      v16 = v13[8];
      *(_QWORD *)v12 = *(_QWORD *)v13;
    }
    else
    {
      *(_QWORD *)v12 = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v16 = v13[8];
    }
    v12[8] = v16;
  }
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v17 = a3[9];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_190A46ED0();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_19;
  }
  if (v24)
  {
LABEL_19:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB5B8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_20:
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  return a1;
}

char *initializeWithTake for MetadataGraphicView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_190A46C30();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_190A47260();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  v15 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_190A46ED0();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB5B8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

char *assignWithTake for MetadataGraphicView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;

  if (a1 != a2)
  {
    sub_1908AA544((uint64_t)a1, &qword_1EE1EB960);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_190A46C30();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_190A47260();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v13 = &a1[v12];
  v14 = &a2[v12];
  if (*(_QWORD *)&a1[v12] == 1)
    goto LABEL_8;
  if (*(_QWORD *)v14 == 1)
  {
    sub_1908AA544((uint64_t)&a1[v12], &qword_1EE1EE0C0);
LABEL_8:
    *(_QWORD *)v13 = *(_QWORD *)v14;
    goto LABEL_10;
  }
  *(_QWORD *)v13 = *(_QWORD *)v14;
  swift_bridgeObjectRelease();
LABEL_10:
  v13[8] = v14[8];
  v15 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_190A46ED0();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
      goto LABEL_16;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_15;
  }
  if (v22)
  {
LABEL_15:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB5B8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_16;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_16:
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

uint64_t getEnumTagSinglePayload for MetadataGraphicView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909B8B60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED6F8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_190A47260();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_10:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 2147483645)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB5B8);
    v12 = *(_QWORD *)(v8 - 8);
    v13 = a3[9];
    goto LABEL_10;
  }
  v14 = *(_QWORD *)(a1 + a3[7]);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return ((_DWORD)v14 - 1) & ~(((int)v14 - 1) >> 31);
}

uint64_t storeEnumTagSinglePayload for MetadataGraphicView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909B8C48(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED6F8);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = sub_190A47260();
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 2147483645)
      {
        *(_QWORD *)(a1 + a4[7]) = (a2 + 1);
        return result;
      }
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB5B8);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[9];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1909B8D1C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1909B8E00(319, qword_1EE1EBA40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDAA30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CD87D0]);
  if (v0 <= 0x3F)
  {
    sub_190A47260();
    if (v1 <= 0x3F)
    {
      sub_1909B8E00(319, &qword_1EE1EB728, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDB558], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_1909B8E00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

unint64_t sub_1909B8E5C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE1EB5E8;
  if (!qword_1EE1EB5E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1EB5F0);
    v2[0] = sub_1909B6D74();
    v2[1] = MEMORY[0x1E0CE0400];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE1EB5E8);
  }
  return result;
}

unint64_t destroy for MetadataGraphicView.ColorMode(unint64_t *a1)
{
  unint64_t result;
  int v2;

  result = *a1;
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if (v2 - 1 < 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s9WidgetKit19MetadataGraphicViewV9ColorModeOwCP_0(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;

  LODWORD(v3) = -1;
  if (*a2 < 0xFFFFFFFF)
    v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  if ((int)v3 - 1 < 0)
    swift_bridgeObjectRetain();
  return a1;
}

unint64_t *assignWithCopy for MetadataGraphicView.ColorMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  int v8;
  unint64_t v9;

  LODWORD(v4) = -1;
  if (*a1 >= 0xFFFFFFFF)
    LODWORD(v5) = -1;
  else
    v5 = *a1;
  v6 = v5 - 1;
  v7 = *a2;
  if (*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = v4 - 1;
  if (v6 < 0)
  {
    if (v8 < 0)
    {
      *a1 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v8 & 0x80000000) == 0)
  {
LABEL_11:
    v9 = *a2;
    *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
    *a1 = v9;
    return a1;
  }
  *a1 = v7;
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for MetadataGraphicView.ColorMode(uint64_t a1, unint64_t *a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;

  v4 = *(_QWORD *)a1;
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if (v5 - 1 < 0)
  {
    LODWORD(v6) = -1;
    if (*a2 < 0xFFFFFFFF)
      v6 = *a2;
    if ((int)v6 - 1 < 0)
    {
      *(_QWORD *)a1 = *a2;
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)a1 = *a2;
LABEL_9:
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetadataGraphicView.ColorMode(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 9))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  if ((v4 + 1) >= 2)
    return v4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MetadataGraphicView.ColorMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_1909B911C(uint64_t *a1)
{
  uint64_t v1;
  int v2;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

