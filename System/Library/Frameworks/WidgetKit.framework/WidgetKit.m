ValueMetadata *type metadata accessor for DataProtectionLevel()
{
  return &type metadata for DataProtectionLevel;
}

uint64_t getEnumTagSinglePayload for DataProtectionLevel(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DataProtectionLevel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1908A9B68 + 4 * byte_190A59405[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1908A9B9C + 4 * byte_190A59400[v4]))();
}

uint64_t sub_1908A9B9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1908A9BA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1908A9BACLL);
  return result;
}

uint64_t sub_1908A9BB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1908A9BC0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1908A9BC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1908A9BCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t DescriptorFetchResult.widgetDescriptors.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1908A9CB8()
{
  unsigned __int8 *v0;

  return ((unint64_t)*v0 << 40) + 0x417373616C43;
}

uint64_t dispatch thunk of WidgetCenter.reloadTimelines(ofKind:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t sub_1908A9CE0(uint64_t a1, uint64_t a2)
{
  return sub_1908B166C(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_1908B16E0);
}

uint64_t sub_1908A9CEC(char *a1, uint64_t a2)
{
  initializeWithCopy for ExtensionSessionOptions(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for ExtensionSessionOptions(uint64_t a1, char *a2)
{
  char *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v5 = *a2;
  v4 = a2 + 8;
  *(_BYTE *)a1 = v5;
  v6 = a1 + 8;
  v7 = *((_QWORD *)a2 + 4);
  if (v7)
  {
    v8 = *((_QWORD *)a2 + 5);
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(v6, (uint64_t)v4);
  }
  else
  {
    v9 = *((_OWORD *)v4 + 1);
    *(_OWORD *)v6 = *(_OWORD *)v4;
    *(_OWORD *)(v6 + 16) = v9;
    *(_QWORD *)(v6 + 32) = *((_QWORD *)v4 + 4);
  }
  *(_BYTE *)(a1 + 48) = a2[48];
  *(_BYTE *)(a1 + 49) = a2[49];
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1908A9D98(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t type metadata accessor for _RunningBoardInterface()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for WidgetExtensionXPCServer.ExportedObject()
{
  return objc_opt_self();
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_190A46438();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t type metadata accessor for UnfairLock()
{
  return objc_opt_self();
}

uint64_t *sub_1908A9EDC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 120));
  swift_release();
  return v0;
}

uint64_t static DataProtectionLevel.systemDefault.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_beginAccess();
  *a1 = byte_1ECF6C560;
  return result;
}

uint64_t sub_1908A9F90()
{
  uint64_t v0;

  MEMORY[0x194014398](*(_QWORD *)(v0 + 16), -1, -1);
  return swift_deallocClassInstance();
}

uint64_t sub_1908A9FBC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E5E20);
  v2 = sub_190A48274();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_35:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v24 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v25 = (unint64_t)(v4 + 63) >> 6;
  v7 = v2 + 56;
  result = swift_retain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v13 >= v25)
      goto LABEL_33;
    v14 = *(_QWORD *)(v24 + 8 * v13);
    ++v9;
    if (!v14)
    {
      v9 = v13 + 1;
      if (v13 + 1 >= v25)
        goto LABEL_33;
      v14 = *(_QWORD *)(v24 + 8 * v9);
      if (!v14)
      {
        v9 = v13 + 2;
        if (v13 + 2 >= v25)
          goto LABEL_33;
        v14 = *(_QWORD *)(v24 + 8 * v9);
        if (!v14)
          break;
      }
    }
LABEL_23:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v12);
    sub_190A465D0();
    sub_1908AED38(&qword_1EE1E5DD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
    swift_retain();
    result = sub_190A47A40();
    v17 = -1 << *(_BYTE *)(v3 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6))) != 0)
    {
      v10 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v20 = 0;
      v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v22 = v19 == v21;
        if (v19 == v21)
          v19 = 0;
        v20 |= v22;
        v23 = *(_QWORD *)(v7 + 8 * v19);
      }
      while (v23 == -1);
      v10 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10) = v16;
    ++*(_QWORD *)(v3 + 16);
  }
  v15 = v13 + 3;
  if (v15 >= v25)
  {
LABEL_33:
    result = swift_release_n();
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v24 + 8 * v15);
  if (v14)
  {
    v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v25)
      goto LABEL_33;
    v14 = *(_QWORD *)(v24 + 8 * v9);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1908AA2A4(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_1908AA2F4(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x19401429C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for _WidgetExtensionBaseContext()
{
  return objc_opt_self();
}

uint64_t sub_1908AA354(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1908F68EC();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1908F7BD4(&qword_1EE1E5E20);
      goto LABEL_12;
    }
    sub_1908A9FBC();
  }
  v8 = *v3;
  sub_190A465D0();
  sub_1908AED38(&qword_1EE1E5DD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
  result = sub_190A47A40();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = ~v9;
    sub_1908AED38(&qword_1EE1E5DD8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E20]);
    do
    {
      result = sub_190A47AAC();
      if ((result & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v10;
    }
    while (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v11 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * a2) = v5;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (!v13)
  {
    *(_QWORD *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_190A48748();
  __break(1u);
  return result;
}

uint64_t destroy for ExtensionSessionOptions(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 32))
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1908AA544(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t static WidgetCenter.shared.getter()
{
  if (qword_1ECF6AD48 != -1)
    swift_once();
  return swift_retain();
}

void sub_1908AA5C0(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  type metadata accessor for IntentTimelineEntryProvider();
}

uint64_t sub_1908AA644(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v9, v5, v8);
  v12 = (char *)swift_allocObject();
  v13 = *(_QWORD *)v12;
  *((_QWORD *)v12 + 2) = v7;
  *((_QWORD *)v12 + 3) = v2;
  *((_QWORD *)v12 + 4) = v6;
  *((_QWORD *)v12 + 5) = v3;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v13 + 80) - 8) + 32))(&v12[*(_QWORD *)(v13 + 120)], v9);
  v14 = &v12[*(_QWORD *)(*(_QWORD *)v12 + 128)];
  v15 = *(_QWORD *)(v10 - 120);
  *(_QWORD *)v14 = *(_QWORD *)(v10 - 128);
  *((_QWORD *)v14 + 1) = v15;
  v4[3] = a1;
  v4[4] = (char *)MEMORY[0x19401429C](&unk_190A5BCF0, a1);
  v4[5] = (char *)&off_1E2CC83E8;
  *v4 = v12;
  swift_bridgeObjectRetain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

void sub_1908AA750(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6BF60);
  v5 = sub_190A47C5C();
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();

}

uint64_t sub_1908AA7E8(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  void *v9;
  uint64_t v10;
  id v11;

  v9 = _Block_copy(aBlock);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  v11 = a1;
  a6(a5, v10);

  return swift_release();
}

uint64_t sub_1908AA860()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[8];

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 96);
  v3 = *(_QWORD *)(*v0 + 80);
  v15[7] = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v3, v2);
  v4 = *(_QWORD *)(v1 + 88);
  v15[2] = v3;
  v15[3] = v4;
  v5 = *(_QWORD *)(v1 + 104);
  v15[4] = v2;
  v15[5] = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for IntentRecommendation(255, AssociatedTypeWitness, v7, v8);
  v9 = sub_190A47D04();
  v10 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A048);
  v11 = MEMORY[0x19401429C](MEMORY[0x1E0DEAF50], v9);
  v13 = sub_190907290((void (*)(char *, char *))sub_190A09E5C, (uint64_t)v15, v9, v10, MEMORY[0x1E0DEDCE8], v11, MEMORY[0x1E0DEDD18], v12);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1908AA96C()
{
  uint64_t v0;

  sub_19095735C();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1908AAA08(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1908AAA48(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1908AAA8C()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;

  v1 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v2 = sub_190A48238();
    swift_release();
    if ((v2 & 1) != 0)
    {
      v3 = sub_1909DFF1C();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_190A465D0();
  sub_1908AA2F4(&qword_1EE1E5DD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
  swift_bridgeObjectRetain();
  v4 = sub_190A47A40();
  v5 = -1 << *(_BYTE *)(v1 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    goto LABEL_8;
  v7 = ~v5;
  sub_1908AA2F4(&qword_1EE1E5DD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E20]);
  while ((sub_190A47AAC() & 1) == 0)
  {
    v6 = (v6 + 1) & v7;
    if (((*(_QWORD *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *v0;
  v11 = *v0;
  *v0 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1908F7BC8();
    v10 = v11;
  }
  v3 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v6);
  sub_1908B439C(v6);
  *v0 = v11;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1908AAC78(int a1, int a2, void *aBlock, void (*a4)(uint64_t, void *))
{
  void *v5;
  uint64_t v6;

  v5 = _Block_copy(aBlock);
  _Block_copy(v5);
  v6 = swift_retain();
  a4(v6, v5);
  _Block_release(v5);
  _Block_release(v5);
  return swift_release();
}

uint64_t sub_1908AACD4(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v8 = sub_190A48220();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_190A465D0();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v18;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_190A48214();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v16 = sub_1908F5B98(v7, result + 1);
    v20 = v16;
    if (*(_QWORD *)(v16 + 24) <= *(_QWORD *)(v16 + 16))
    {
      swift_retain();
      sub_1908F68EC();
      v17 = v20;
    }
    else
    {
      v17 = v16;
      swift_retain();
    }
    sub_1908F6FFC(a2, v17);
    *v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  sub_190A465D0();
  sub_1908AED38(&qword_1EE1E5DD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
  swift_bridgeObjectRetain();
  v10 = sub_190A47A40();
  v11 = -1 << *(_BYTE *)(v6 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v2;
    *v2 = 0x8000000000000000;
    v15 = swift_retain();
    sub_1908AA354(v15, v12, isUniquelyReferenced_nonNull_native);
    *v2 = v19;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  v13 = ~v11;
  sub_1908AED38(&qword_1EE1E5DD8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E20]);
  while ((sub_190A47AAC() & 1) == 0)
  {
    v12 = (v12 + 1) & v13;
    if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      goto LABEL_11;
  }
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v12);
  swift_retain();
  return 0;
}

uint64_t sub_1908AAFA4(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v10 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v10;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    v11 = *(_QWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = v11;
    v12 = *(_BYTE *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v13;
      swift_retain();
    }
    else
    {
      v18 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 72) = v18;
      (**(void (***)(uint64_t, uint64_t))(v18 - 8))(a1 + 48, a2 + 48);
    }
    *(_BYTE *)(a1 + 88) = v12;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = sub_190A46240();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0) + 48);
    v7 = a1 + v6;
    v8 = a2 + v6;
    *(_QWORD *)v7 = *(_QWORD *)v8;
    v9 = *(_QWORD *)(v8 + 24);
    *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
    *(_QWORD *)(v7 + 24) = v9;
    swift_retain();
    swift_retain();
  }
  else
  {
    v14 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v14;
    v15 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v15;
    v16 = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16)
    {
      v17 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v16;
      *(_QWORD *)(a1 + 40) = v17;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    }
    v19 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t _s9WidgetKit22IntentTimelineProviderPAAE15recommendationsSayAA0C14RecommendationVy0C0QzGGyF_0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;

  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v0 = sub_190A465A0();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECF6D988);
  v1 = sub_190A46588();
  v2 = sub_190A47F68();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1908A7000, v1, v2, "DEFAULT IMPL FOR RECOMMENDATIONS!!!", v3, 2u);
    MEMORY[0x194014398](v3, -1, -1);
  }

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for IntentRecommendation(0, AssociatedTypeWitness, v5, v6);
  return sub_190A47CB0();
}

void sub_1908AB260(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  _QWORD v18[6];

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a4;
  v14[3] = a5;
  v14[4] = a2;
  v14[5] = a3;
  v14[6] = a6;
  v14[7] = a7;
  v18[4] = sub_1908B5378;
  v18[5] = v14;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 1107296256;
  v18[2] = sub_1908B4904;
  v18[3] = &block_descriptor_291;
  v15 = _Block_copy(v18);
  v16 = a4;
  v17 = a5;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_getAllCurrentDescriptorsWithCompletion_, v15);
  _Block_release(v15);
}

uint64_t sub_1908AB358(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_190A465A0();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_190A46594();
}

id sub_1908AB3CC(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  char *v7;
  id v8;
  objc_class *v9;
  uint64_t v11;
  objc_super v12;
  uint64_t v13;

  v11 = sub_190A47FF8();
  v3 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A47FE0();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78]();
  sub_190A479C8();
  MEMORY[0x1E0C80A78]();
  *(_QWORD *)&v1[OBJC_IVAR____TtCC9WidgetKit24WidgetExtensionXPCServer14ExportedObject_previewAgent] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtCC9WidgetKit24WidgetExtensionXPCServer14ExportedObject_urlHandlers] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v1[OBJC_IVAR____TtCC9WidgetKit24WidgetExtensionXPCServer14ExportedObject_xpcConnection] = a1;
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3A0);
  v7 = v1;
  v8 = a1;
  sub_190A479BC();
  v13 = MEMORY[0x1E0DEE9D8];
  sub_1908AED38((unint64_t *)&unk_1ECF6D238, 255, v6, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D228);
  sub_1908AAA08(&qword_1ECF6D230, &qword_1ECF6D228);
  sub_190A481E4();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D8], v11);
  *(_QWORD *)&v7[OBJC_IVAR____TtCC9WidgetKit24WidgetExtensionXPCServer14ExportedObject__queue] = sub_190A4801C();

  v9 = (objc_class *)type metadata accessor for WidgetExtensionXPCServer.ExportedObject();
  v12.receiver = v7;
  v12.super_class = v9;
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t type metadata accessor for WidgetCenter()
{
  return objc_opt_self();
}

uint64_t sub_1908AB61C(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;

  type metadata accessor for ViewSource(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(_BYTE *)(a1 + 88) & 1) == 0)
      {
        __swift_destroy_boxed_opaque_existential_1(a1 + 48);
        break;
      }
      goto LABEL_8;
    case 1:
      v3 = sub_190A46240();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
      swift_release();
      swift_release();
      break;
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 32))
        swift_release();
LABEL_8:
      swift_release();
      break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_1908AB77C()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_190A47AC4();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initWithBundleIdentifier_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_190A45F58();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1908AB844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D3C0);
  if (swift_isClassType())
    v1 = v0;
  else
    v1 = 0;
  if (v1)
    v2 = (uint64_t *)&unk_1ECF6BDD0;
  else
    v2 = (uint64_t *)&unk_1ECF6D3C8;
  return __swift_instantiateConcreteTypeFromMangledName(v2);
}

uint64_t sub_1908AB890(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for WidgetDescriptor(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1ECF6D0D8);
}

void sub_1908AB8DC(uint64_t a1, const char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_190A46438();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE1E5E28 != -1)
    swift_once();
  v8 = sub_190A465A0();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EE1FD688);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v9 = sub_190A46588();
  v10 = sub_190A47F68();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v17 = a2;
    v12 = (uint8_t *)v11;
    v13 = swift_slowAlloc();
    v19 = v13;
    *(_DWORD *)v12 = 136446210;
    v14 = sub_190A4642C();
    v18 = sub_1908B35C4(v14, v15, &v19);
    sub_190A48178();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_1908A7000, v9, v10, v17, v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v13, -1, -1);
    MEMORY[0x194014398](v12, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

}

uint64_t sub_1908ABACC(uint64_t a1, uint64_t a2, int *a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;

  type metadata accessor for ViewSource(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v12 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v12;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    v13 = *(_QWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = v13;
    v14 = *(_BYTE *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((v14 & 1) != 0)
    {
      v15 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v15;
      swift_retain();
    }
    else
    {
      v20 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 72) = v20;
      (**(void (***)(uint64_t, uint64_t))(v20 - 8))(a1 + 48, a2 + 48);
    }
    *(_BYTE *)(a1 + 88) = v14;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_190A46240();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0) + 48);
    v9 = a1 + v8;
    v10 = a2 + v8;
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v11 = *(_QWORD *)(v10 + 24);
    *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
    *(_QWORD *)(v9 + 24) = v11;
    swift_retain();
    swift_retain();
  }
  else
  {
    v16 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v16;
    v17 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v17;
    v18 = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18)
    {
      v19 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v18;
      *(_QWORD *)(a1 + 40) = v19;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    }
    v21 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v21;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v22 = a3[5];
  v23 = a3[6];
  v24 = (_QWORD *)(a1 + v22);
  v25 = (_QWORD *)(a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = (_QWORD *)(a1 + v23);
  v28 = (_QWORD *)(a2 + v23);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v30) = *(_QWORD *)(a2 + v30);
  v31 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v31) = *(_QWORD *)(a2 + v31);
  v32 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v36) = *(_BYTE *)(a2 + v36);
  v37 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v37) = *(_BYTE *)(a2 + v37);
  v38 = a3[18];
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  *(_QWORD *)(a1 + v38) = *(_QWORD *)(a2 + v38);
  v39 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  *(_BYTE *)(a1 + v39) = *(_BYTE *)(a2 + v39);
  v40 = a3[22];
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  *(_BYTE *)(a1 + v40) = *(_BYTE *)(a2 + v40);
  v41 = a3[23];
  v42 = a3[24];
  v43 = (_QWORD *)(a1 + v41);
  v44 = (_QWORD *)(a2 + v41);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  *(_BYTE *)(a1 + v42) = *(_BYTE *)(a2 + v42);
  v46 = a3[26];
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  *(_BYTE *)(a1 + v46) = *(_BYTE *)(a2 + v46);
  v47 = a3[28];
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  *(_BYTE *)(a1 + v47) = *(_BYTE *)(a2 + v47);
  v48 = a3[30];
  *(_BYTE *)(a1 + a3[29]) = *(_BYTE *)(a2 + a3[29]);
  *(_BYTE *)(a1 + v48) = *(_BYTE *)(a2 + v48);
  v49 = a3[32];
  *(_BYTE *)(a1 + a3[31]) = *(_BYTE *)(a2 + a3[31]);
  *(_OWORD *)(a1 + v49) = *(_OWORD *)(a2 + v49);
  v50 = a3[34];
  *(_QWORD *)(a1 + a3[33]) = *(_QWORD *)(a2 + a3[33]);
  v51 = (_QWORD *)(a1 + v50);
  v52 = (_QWORD *)(a2 + v50);
  v53 = v52[1];
  *v51 = *v52;
  v51[1] = v53;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1908ABEEC(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  _Block_copy(a2);
  sub_190A4642C();
  sub_190A462F4();
  if (qword_1EE1E5F60 != -1)
    swift_once();
  swift_beginAccess();
  sub_1908BBDC8((uint64_t)&qword_1EE1E5F30, (uint64_t)&v22);
  v8 = v24;
  v9 = v25;
  __swift_project_boxed_opaque_existential_1(&v22, v24);
  v10 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 8))(v6, v8, v9);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  if (v10)
  {
    swift_beginAccess();
    sub_190A46300();
    swift_endAccess();
    v11 = objc_allocWithZone(MEMORY[0x1E0CA5848]);
    v16 = sub_1908AB77C();
    v22 = 1;
    v23 = 4;
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v10;
    v17[3] = v16;
    v17[4] = sub_1908B48DC;
    v17[5] = v7;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_1908B48DC;
    *(_QWORD *)(v18 + 24) = v7;
    swift_retain_n();
    v19 = v10;
    v20 = v16;
    sub_1908AF080((uint64_t)&v22, (uint64_t)sub_1908B5384, (uint64_t)v17, (uint64_t)sub_1909E453C, v18);
    swift_release();
    swift_release();
    swift_release();

  }
  else
  {
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
    v12 = sub_190A47ADC();
    v14 = sub_19096BFDC(v12, v13, 1300, 0, 0xD000000000000011, 0x8000000190A62A30);
    v15 = (void *)sub_190A45F4C();
    ((void (**)(_QWORD, _QWORD, void *))a2)[2](a2, 0, v15);
    swift_release();

  }
}

uint64_t sub_1908AC238(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t v11;
  _QWORD aBlock[6];

  v5 = *(void **)(v2 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_connection);
  v6 = swift_allocObject();
  swift_weakInit();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v6;
  v7[3] = a1;
  v7[4] = a2;
  aBlock[4] = sub_1909E3D5C;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1908B4904;
  aBlock[3] = &block_descriptor_66_0;
  v8 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v9 = objc_msgSend(v5, sel_remoteObjectProxyWithErrorHandler_, v8);
  _Block_release(v8);
  sub_190A481B4();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E5E10);
  swift_dynamicCast();
  return v11;
}

void sub_1908AC380(uint64_t a1, void *a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8, uint64_t a9, void *a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (**v18)(char *, void **, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  _QWORD *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  id v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  id v95[3];
  uint64_t v96[9];

  v84 = a8;
  v88 = a4;
  v89 = a7;
  v91 = a3;
  v92 = a5;
  v85 = a2;
  v83 = sub_190A46438();
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v81 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_190A463F0();
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v78 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_190A460CC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v93 = (uint64_t *)((char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_190A46420();
  v18 = *(void (***)(char *, void **, uint64_t))(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v77 - v22;
  v90 = sub_190A465A0();
  v87 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v86 = (char *)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1E5F88);
  MEMORY[0x1E0C80A78](v25);
  v27 = (void **)((char *)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1908AAA48(a1, (uint64_t)v27, qword_1EE1E5F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v28 = *v27;
    if (qword_1EE1E5E28 != -1)
      swift_once();
    v29 = v90;
    v30 = __swift_project_value_buffer(v90, (uint64_t)qword_1EE1FD688);
    v31 = v86;
    v32 = v87;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v86, v30, v29);
    v33 = v85;
    v34 = v28;
    v35 = v33;
    v36 = v34;
    v37 = sub_190A46588();
    v38 = sub_190A47F68();
    if (!os_log_type_enabled(v37, v38))
    {

      (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v29);
      goto LABEL_14;
    }
    v39 = swift_slowAlloc();
    v93 = (_QWORD *)swift_slowAlloc();
    v40 = swift_slowAlloc();
    v96[0] = v40;
    *(_DWORD *)v39 = 136446466;
    v41 = objc_msgSend(v35, sel_identifier);
    if (v41)
    {
      v42 = v41;
      v43 = sub_190A47ADC();
      v45 = v44;

      v95[0] = (id)sub_1908B35C4(v43, v45, v96);
      sub_190A48178();

      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2112;
      v95[0] = v36;
      v46 = v36;
      sub_190A48178();
      v47 = v93;
      *v93 = v36;

      _os_log_impl(&dword_1908A7000, v37, v38, "[%{public}s] Failed to launch extension with error: %@.", (uint8_t *)v39, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
      swift_arrayDestroy();
      MEMORY[0x194014398](v47, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x194014398](v40, -1, -1);
      MEMORY[0x194014398](v39, -1, -1);

      (*(void (**)(char *, uint64_t))(v87 + 8))(v86, v90);
LABEL_14:
      v66 = v91;
      v65 = v92;
      v67 = v88;
      swift_retain();
      sub_1909573EC(v66, v67, v65);

      swift_release();
      return;
    }

    __break(1u);
  }
  else
  {
    v18[4](v23, v27, v17);
    v86 = (char *)v18;
    v87 = v17;
    v18[2](v21, (void **)v23, v17);
    sub_1908A9CEC(v84, (uint64_t)v96);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v15 + 16))(v93, a11, v14);
    swift_retain();
    swift_retain();
    swift_retain();
    v48 = v91;
    v49 = sub_19095735C();
    v50 = v14;
    v51 = v15;
    v52 = v23;
    v77 = v50;
    if (v49)
    {
      v85 = a10;
      v88 = v21;
      if (qword_1EE1E5E28 != -1)
        swift_once();
      __swift_project_value_buffer(v90, (uint64_t)qword_1EE1FD688);
      swift_retain();
      v53 = sub_190A46588();
      v54 = sub_190A47F68();
      if (os_log_type_enabled(v53, v54))
      {
        v55 = (uint8_t *)swift_slowAlloc();
        v56 = swift_slowAlloc();
        v90 = v51;
        v57 = v56;
        v95[0] = (id)v56;
        v84 = v23;
        *(_DWORD *)v55 = 136446210;
        v58 = *(_QWORD *)(v48 + 16);
        v59 = *(_QWORD *)(v48 + 24);
        swift_bridgeObjectRetain();
        v94 = sub_1908B35C4(v58, v59, (uint64_t *)v95);
        v52 = v84;
        sub_190A48178();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1908A7000, v53, v54, "[%{public}s] Original request finally completed, but it had already watchdogged. Skipping session creation.", v55, 0xCu);
        swift_arrayDestroy();
        v60 = v57;
        v51 = v90;
        MEMORY[0x194014398](v60, -1, -1);
        MEMORY[0x194014398](v55, -1, -1);
        swift_release();

      }
      else
      {
        swift_release();

        swift_release();
      }
      v61 = v93;
      v62 = v87;
      v63 = v88;
      v64 = v86;
    }
    else
    {
      v90 = v15;
      v68 = swift_projectBox();
      swift_beginAccess();
      v69 = v52;
      v70 = v79;
      v71 = v78;
      v72 = v80;
      (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v78, v68, v80);
      v73 = (uint64_t)v81;
      sub_190A463A8();
      v74 = *(void (**)(char *, uint64_t))(v70 + 8);
      v52 = v69;
      v74(v71, v72);
      v51 = v90;
      v61 = v93;
      v75 = sub_1908AD65C(v73, (uint64_t)v21, v96, a9, (uint64_t)a10, (uint64_t)v93);
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v73, v83);
      ((void (*)(uint64_t))v88)(v75);
      swift_release();
      swift_unknownObjectRelease();
      v64 = v86;
      v62 = v87;
      v63 = v21;
    }
    v76 = (void (*)(char *, uint64_t))*((_QWORD *)v64 + 1);
    v76(v52, v62);
    swift_release();
    v76(v63, v62);
    sub_1908B47EC((uint64_t)v96);
    swift_release();
    (*(void (**)(_QWORD *, uint64_t))(v51 + 8))(v61, v77);
  }
}

uint64_t static WidgetExtensionSession.makeLoggingIdentifier(sessionIdentifier:extensionBundleIdentifier:deviceIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  if (a4)
  {
    sub_1908B46D0();
    sub_190A47E24();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6A98);
    sub_1908B4570();
    sub_1908B468C();
    sub_190A47BFC();
    v6 = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  sub_190A46300();
  sub_1908B46D0();
  sub_190A47E24();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6A98);
  sub_1908B4570();
  sub_1908B468C();
  sub_190A47BFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_190A46090();
  sub_190A47E24();
  sub_190A47BFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6)
    sub_190A47B3C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  return 91;
}

uint64_t sub_1908ACED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t), uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unsigned int v28;
  unint64_t v29;
  unsigned int v30;
  unint64_t v31;
  unsigned int v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(uint64_t *);
  uint64_t v48;
  uint64_t v49;
  char v50;
  id *v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  char *v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t aBlock;
  unint64_t v81;
  uint64_t (*v82)();
  void *v83;
  id (*v84)(void *);
  uint64_t v85;
  uint64_t v86[4];

  v75 = a8;
  v76 = a7;
  v72 = a6;
  v78 = a5;
  v77 = a4;
  v71 = sub_190A46084();
  v70 = *(_QWORD *)(v71 - 8);
  v11 = MEMORY[0x1E0C80A78](v71);
  v68 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v69 = (char *)&v67 - v13;
  if (qword_1EE1E5E28 != -1)
    swift_once();
  v14 = sub_190A465A0();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EE1FD688);
  swift_retain_n();
  v15 = sub_190A46588();
  v16 = sub_190A47F68();
  v17 = os_log_type_enabled(v15, v16);
  v79 = a1;
  if (v17)
  {
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v86[0] = v19;
    *(_DWORD *)v18 = 136446466;
    v20 = sub_1908B3C54();
    aBlock = sub_1908B35C4(v20, v21, v86);
    sub_190A48178();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    aBlock = v77;
    LOBYTE(v81) = v78;
    WidgetExtensionSessionOperation.description.getter();
    aBlock = sub_1908B35C4(v22, v23, v86);
    sub_190A48178();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    a1 = v79;
    MEMORY[0x194014398](v19, -1, -1);
    MEMORY[0x194014398](v18, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a1;
  *(_QWORD *)(v24 + 24) = a2;
  v74 = a2;
  swift_retain();
  v73 = sub_1908AC238((uint64_t)sub_1909E3CE8, v24);
  v25 = swift_release();
  v26 = MEMORY[0x1940115A8](v25);
  LODWORD(v24) = v26;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v33 = HIDWORD(v26);
  v34 = HIDWORD(v27);
  v35 = HIDWORD(v29);
  v36 = HIDWORD(v31);
  v37 = objc_allocWithZone(MEMORY[0x1E0D016E0]);
  aBlock = __PAIR64__(v33, v24);
  v81 = __PAIR64__(v34, v28);
  v82 = (uint64_t (*)())__PAIR64__(v35, v30);
  v83 = (void *)__PAIR64__(v36, v32);
  v38 = objc_msgSend(v37, sel_initWithAuditToken_, &aBlock);
  objc_msgSend(v38, sel_pid);

  if (BSPIDIsBeingDebugged())
  {
    swift_retain_n();
    v39 = sub_190A46588();
    v40 = sub_190A47F68();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v86[0] = v42;
      *(_DWORD *)v41 = 136446466;
      v43 = sub_1908B3C54();
      aBlock = sub_1908B35C4(v43, v44, v86);
      sub_190A48178();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2082;
      aBlock = v77;
      LOBYTE(v81) = v78;
      WidgetExtensionSessionOperation.description.getter();
      aBlock = sub_1908B35C4(v45, v46, v86);
      sub_190A48178();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      MEMORY[0x194014398](v42, -1, -1);
      MEMORY[0x194014398](v41, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v48 = v74;
    v49 = v79;
  }
  else
  {
    v47 = *(void (**)(uint64_t *))(a3
                                           + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_watchdogTimeoutProvider);
    aBlock = v77;
    LOBYTE(v81) = v78;
    v47(&aBlock);
    v48 = v74;
    v49 = v79;
    if ((v50 & 1) == 0)
    {
      v51 = (id *)(v72 + 16);
      aBlock = 0;
      v81 = 0xE000000000000000;
      sub_190A48298();
      swift_bridgeObjectRelease();
      aBlock = 0x5B6E6F6973736553;
      v81 = 0xE800000000000000;
      sub_190A460CC();
      sub_1908AA2F4(&qword_1EE1E5D88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      sub_190A4867C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      v52 = objc_allocWithZone(MEMORY[0x1E0D01890]);
      v53 = (void *)sub_190A47AC4();
      swift_bridgeObjectRelease();
      v54 = objc_msgSend(v52, sel_initWithIdentifier_, v53);

      swift_beginAccess();
      v55 = *v51;
      *v51 = v54;

      swift_beginAccess();
      if (*v51)
      {
        v56 = *v51;
        v57 = v68;
        sub_190A46078();
        v58 = v69;
        sub_190A46048();
        v59 = *(void (**)(char *, uint64_t))(v70 + 8);
        v60 = v71;
        v59(v57, v71);
        v61 = (void *)sub_190A46054();
        v59(v58, v60);
        v62 = *(_QWORD *)(a3 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_watchdogTimeoutQueue);
        v63 = swift_allocObject();
        v64 = v77;
        *(_QWORD *)(v63 + 16) = a3;
        *(_QWORD *)(v63 + 24) = v64;
        *(_BYTE *)(v63 + 32) = v78;
        *(_QWORD *)(v63 + 40) = v49;
        *(_QWORD *)(v63 + 48) = v48;
        v84 = sub_1909E3D40;
        v85 = v63;
        aBlock = MEMORY[0x1E0C809B0];
        v81 = 1107296256;
        v82 = sub_1908B4904;
        v83 = &block_descriptor_59;
        v65 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        objc_msgSend(v56, sel_scheduleForDate_leewayInterval_queue_handler_, v61, v62, v65, 1.0);
        _Block_release(v65);

      }
    }
  }
  v76(v73, v49, v48);
  return swift_unknownObjectRelease();
}

uint64_t sub_1908AD65C(uint64_t a1, uint64_t a2, _BYTE *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  void (*v23)(char *, uint64_t, uint64_t);
  unint64_t v24;
  uint64_t v25;
  void (*v26)(unint64_t, char *, uint64_t);
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  os_log_t v67;
  uint64_t v68;
  int v69;
  char *v70;
  char *v71;
  uint64_t v72;
  id v73;
  void (*v74)(char *, uint64_t, uint64_t);
  void *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[5];
  uint64_t aBlock;
  uint64_t v91;
  uint64_t (*v92)(uint64_t);
  void *v93;
  void (*v94)();
  uint64_t v95;

  v86 = a6;
  v81 = a5;
  v80 = a4;
  v85 = a3;
  v88 = a1;
  v7 = sub_190A46420();
  v83 = *(_QWORD *)(v7 - 8);
  v84 = v7;
  MEMORY[0x1E0C80A78](v7);
  v87 = (uint64_t)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_190A460CC();
  v82 = *(_QWORD *)(v78 - 8);
  v9 = MEMORY[0x1E0C80A78](v78);
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v66 - v12;
  v14 = sub_190A46438();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v66 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v66 - v20;
  v79 = a2;
  v22 = (void *)sub_190A46408();
  v70 = v19;
  v71 = v13;
  v77 = v11;
  v73 = objc_msgSend((id)type metadata accessor for _WidgetExtensionBaseContext(), sel__extensionAuxiliaryVendorProtocol);
  objc_msgSend(v22, sel_setRemoteObjectInterface_);
  objc_msgSend(v22, sel_resume);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v23(v21, v88, v14);
  v24 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v75 = v22;
  v25 = swift_allocObject();
  v72 = v15;
  v26 = *(void (**)(unint64_t, char *, uint64_t))(v15 + 32);
  v26(v25 + v24, v21, v14);
  v94 = sub_1909E14C0;
  v95 = v25;
  aBlock = MEMORY[0x1E0C809B0];
  v91 = 1107296256;
  v92 = sub_1908A9D98;
  v93 = &block_descriptor_332;
  v27 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v22, sel_setInterruptionHandler_, v27);
  _Block_release(v27);
  v28 = v88;
  v74 = v23;
  v23(v21, v88, v14);
  v29 = swift_allocObject();
  v76 = v21;
  v26(v29 + v24, v21, v14);
  v94 = sub_1908B4FF8;
  v95 = v29;
  aBlock = MEMORY[0x1E0C809B0];
  v91 = 1107296256;
  v92 = sub_1908A9D98;
  v93 = &block_descriptor_338;
  v30 = v87;
  v31 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v75, sel_setInvalidationHandler_, v31);
  _Block_release(v31);
  v32 = v86;
  v33 = v85;
  v34 = v28;
  v35 = v79;
  v37 = v83;
  v36 = v84;
  v38 = v78;
  v39 = v82;
  if (*v85 == 1)
  {
    if (qword_1EE1E5E28 != -1)
      swift_once();
    v40 = sub_190A465A0();
    __swift_project_value_buffer(v40, (uint64_t)qword_1EE1FD688);
    v41 = v70;
    v74(v70, v34, v14);
    v42 = v71;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v71, v86, v38);
    v43 = sub_190A46588();
    v44 = sub_190A47F68();
    v69 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      v45 = swift_slowAlloc();
      v68 = swift_slowAlloc();
      aBlock = v68;
      *(_DWORD *)v45 = 136446466;
      v67 = v43;
      v46 = sub_190A4642C();
      v89[0] = sub_1908B35C4(v46, v47, &aBlock);
      sub_190A48178();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v41, v14);
      *(_WORD *)(v45 + 12) = 2082;
      sub_1908AA2F4(&qword_1EE1E5D88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v48 = sub_190A4867C();
      v89[0] = sub_1908B35C4(v48, v49, &aBlock);
      v36 = v84;
      v39 = v82;
      sub_190A48178();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v38);
      v43 = v67;
      _os_log_impl(&dword_1908A7000, v67, (os_log_type_t)v69, "[%{public}s-%{public}s] Created a new WidgetExtensionSession at user interactive priority.", (uint8_t *)v45, 0x16u);
      v50 = v68;
      swift_arrayDestroy();
      MEMORY[0x194014398](v50, -1, -1);
      v51 = v45;
      v37 = v83;
      MEMORY[0x194014398](v51, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v72 + 8))(v41, v14);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v38);
    }

    v33 = v85;
    v32 = v86;
    v30 = v87;
  }
  v74(v76, v34, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v30, v35, v36);
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v77, v32, v38);
  v52 = v81;
  if (qword_1EE1E5E48 != -1)
    swift_once();
  v53 = qword_1EE1E5E58;
  v54 = (id)qword_1EE1E5DA8;
  swift_retain();
  if (v53 != -1)
    swift_once();
  v55 = qword_1EE1FD6C8;
  sub_1908AAA48((uint64_t)(v33 + 8), (uint64_t)&aBlock, &qword_1EE1E5DB0);
  v56 = v33[49];
  v57 = type metadata accessor for _RunningBoardInterface();
  v89[3] = v57;
  v89[4] = &off_1E2CC76F0;
  v89[0] = v55;
  type metadata accessor for _WidgetExtensionSession();
  v58 = swift_allocObject();
  v59 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v89, v57);
  MEMORY[0x1E0C80A78](v59);
  v61 = (uint64_t *)((char *)&v66 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v62 + 16))(v61);
  v63 = *v61;
  swift_retain_n();
  v64 = sub_1908AE1BC((uint64_t)v76, v87, (uint64_t)v77, v75, v54, v80, v52, v63, (uint64_t)&aBlock, v56, v58);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v89);

  swift_release();
  return v64;
}

uint64_t sub_1908ADFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  _DWORD *v8;
  _QWORD v10[2];

  v1 = v0;
  v2 = sub_190A47FF8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A47FE0();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78]();
  sub_190A479C8();
  MEMORY[0x1E0C80A78]();
  v10[0] = sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3A0);
  sub_190A479B0();
  v10[1] = MEMORY[0x1E0DEE9D8];
  sub_1908AA2F4((unint64_t *)&unk_1ECF6D238, v6, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D228);
  sub_1908AAA08(&qword_1ECF6D230, &qword_1ECF6D228);
  sub_190A481E4();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D8], v2);
  *(_QWORD *)(v0 + 16) = sub_190A4801C();
  type metadata accessor for UnfairLock();
  v7 = swift_allocObject();
  v8 = (_DWORD *)swift_slowAlloc();
  *v8 = 0;
  *(_QWORD *)(v7 + 16) = v8;
  *(_QWORD *)(v1 + 24) = v7;
  *(_QWORD *)(v1 + 32) = 0;
  return v1;
}

uint64_t sub_1908AE1BC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11)
{
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[6];

  v50[3] = type metadata accessor for _RunningBoardInterface();
  v50[4] = &off_1E2CC76F0;
  v50[0] = a8;
  v18 = (_QWORD *)(a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession____lazy_storage___loggingIdentifier);
  *v18 = 0;
  v18[1] = 0;
  v19 = OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock;
  type metadata accessor for UnfairLock();
  v20 = swift_allocObject();
  v21 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(a11 + v19) = v20;
  *(_QWORD *)(a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_subscriptions) = MEMORY[0x1E0DEE9E8];
  *v21 = 0;
  *(_QWORD *)(v20 + 16) = v21;
  *(_QWORD *)(a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_widgetExtensionAssertion) = 0;
  *(_BYTE *)(a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock_invalidated) = 0;
  v22 = a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession__exExtensionIdentity;
  v23 = sub_190A46438();
  v43 = *(_QWORD *)(v23 - 8);
  v44 = v23;
  v46 = a1;
  (*(void (**)(uint64_t, uint64_t))(v43 + 16))(v22, a1);
  v24 = a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession__exExtensionProcess;
  v25 = sub_190A46420();
  v42 = *(_QWORD *)(v25 - 8);
  v48 = a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v24, a2, v25);
  v26 = a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_sessionUUID;
  v27 = sub_190A460CC();
  v41 = *(_QWORD *)(v27 - 8);
  v47 = a3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v26, a3, v27);
  *(_QWORD *)(a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_connection) = a4;
  *(_QWORD *)(a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_watchdogTimeoutQueue) = a5;
  v28 = (_QWORD *)(a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_watchdogTimeoutProvider);
  *v28 = a6;
  v28[1] = a7;
  sub_1908BBDC8((uint64_t)v50, a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_rbsInterface);
  sub_1908AAA48(a9, a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_suspensionObserver, &qword_1EE1E5DB0);
  *(_BYTE *)(a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_shouldTakeExtensionAssertion) = a10;
  v29 = a4;
  v30 = a5;
  swift_retain();
  if ((a10 & 1) != 0)
  {
    v31 = sub_1908B2DEC(0xD000000000000012, 0x8000000190A64B90);
    if (v31)
    {
      *(_QWORD *)(a11 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_widgetExtensionAssertion) = v31;
      swift_unknownObjectRelease();
    }
  }
  if (qword_1EE1E5E28 != -1)
    swift_once();
  v32 = sub_190A465A0();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EE1FD688);
  swift_retain_n();
  v33 = sub_190A46588();
  v34 = sub_190A47F68();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v40 = v30;
    v36 = swift_slowAlloc();
    v49 = v36;
    *(_DWORD *)v35 = 136446210;
    v37 = sub_1908B3C54();
    sub_1908B35C4(v37, v38, &v49);
    sub_190A48178();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v33, v34, "%{public}s Session initialized", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v36, -1, -1);
    MEMORY[0x194014398](v35, -1, -1);

  }
  else
  {
    swift_release_n();

  }
  swift_release();
  sub_1908AA544(a9, &qword_1EE1E5DB0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v47, v27);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v48, v25);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v46, v44);
  return a11;
}

uint64_t sub_1908AE618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v1 = v0;
  if (qword_1EE1E5E28 != -1)
    swift_once();
  v2 = sub_190A465A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EE1FD688);
  swift_retain_n();
  v3 = sub_190A46588();
  v4 = sub_190A47F68();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v18 = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = sub_1908B3C54();
    sub_1908B35C4(v7, v8, &v18);
    sub_190A48178();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v3, v4, "%{public}s Session deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v6, -1, -1);
    MEMORY[0x194014398](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock);
  v10 = *(os_unfair_lock_s **)(v9 + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  swift_release();
  v11 = v1 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession__exExtensionIdentity;
  v12 = sub_190A46438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = v1 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession__exExtensionProcess;
  v14 = sub_190A46420();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = v1 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_sessionUUID;
  v16 = sub_190A460CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v1 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_rbsInterface);
  sub_1908AA544(v1 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_suspensionObserver, &qword_1EE1E5DB0);
  swift_unknownObjectRelease();

  return v1;
}

uint64_t sub_1908AE8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  char *v30;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t aBlock[6];

  v4 = sub_190A47980();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_190A479C8();
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  MEMORY[0x1E0C80A78](v7);
  v36 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_190A46180();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v13 = sub_190A465A0();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ECF6D988);
  v14 = sub_190A46588();
  v15 = sub_190A47F68();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v35 = v5;
    v17 = v16;
    v33 = swift_slowAlloc();
    aBlock[0] = v33;
    *(_DWORD *)v17 = 136446466;
    v40 = sub_1908B35C4(0xD000000000000025, 0x8000000190A60A50, aBlock);
    v34 = a1;
    sub_190A48178();
    *(_WORD *)(v17 + 12) = 2082;
    v32[1] = v17 + 14;
    sub_190A46138();
    sub_1908AED38((unint64_t *)&unk_1ECF6D258, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E70]);
    v18 = sub_190A4867C();
    v19 = v10;
    v20 = a2;
    v21 = v4;
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v9);
    v40 = sub_1908B35C4(v18, v23, aBlock);
    a1 = v34;
    sub_190A48178();
    v4 = v21;
    a2 = v20;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v14, v15, "=+= %{public}s - locale: %{public}s", (uint8_t *)v17, 0x16u);
    v24 = v33;
    swift_arrayDestroy();
    MEMORY[0x194014398](v24, -1, -1);
    v25 = v17;
    v5 = v35;
    MEMORY[0x194014398](v25, -1, -1);
  }

  sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3A0);
  v26 = (void *)sub_190A48004();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a1;
  *(_QWORD *)(v27 + 24) = a2;
  aBlock[4] = (uint64_t)sub_1908B50A8;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1908A9D98;
  aBlock[3] = (uint64_t)&block_descriptor_174;
  v28 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v29 = v36;
  sub_190A47998();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1908AED38((unint64_t *)&qword_1ECF6D318, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
  sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
  v30 = v39;
  sub_190A481E4();
  MEMORY[0x194013234](0, v29, v30, v28);
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v30, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v29, v38);
}

uint64_t sub_1908AED38(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x19401429C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1908AED78(void (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  a1(v1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  return swift_release();
}

uint64_t sub_1908AEDD4()
{
  id v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)();
  void *v15;
  void (*v16)(void *);
  uint64_t v17;
  _BYTE v18[32];
  uint64_t v19;

  v0 = sub_1908B3D9C();
  v16 = sub_19095EAD8;
  v17 = 0;
  v1 = MEMORY[0x1E0C809B0];
  v12 = MEMORY[0x1E0C809B0];
  v13 = 1107296256;
  v14 = sub_1908B4904;
  v15 = &block_descriptor_39;
  v2 = _Block_copy(&v12);
  v3 = objc_msgSend(v0, sel_remoteObjectProxyWithErrorHandler_, v2);
  _Block_release(v2);

  sub_190A481B4();
  swift_unknownObjectRelease();
  sub_1908B3694((uint64_t)v18, (uint64_t)&v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AA98);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v4 = (void *)v19;
    v16 = sub_1908B19F0;
    v17 = 0;
    v12 = v1;
    v13 = 1107296256;
    v14 = sub_1908B19EC;
    v15 = &block_descriptor_42;
    v5 = _Block_copy(&v12);
    objc_msgSend(v4, sel__reloadAllTimelines_, v5);
    _Block_release(v5);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v6 = sub_190A465A0();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ECF6D988);
    v7 = sub_190A46588();
    v8 = sub_190A47F50();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v12 = v10;
      *(_DWORD *)v9 = 136446210;
      v19 = sub_1908B35C4(0xD000000000000014, 0x8000000190A62640, &v12);
      sub_190A48178();
      swift_arrayDestroy();
      MEMORY[0x194014398](v10, -1, -1);
      MEMORY[0x194014398](v9, -1, -1);
    }

  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
}

uint64_t sub_1908AF080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  os_unfair_lock_s *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48[3];
  uint64_t v49;
  uint64_t v50;
  char v51;

  v6 = v5;
  v42 = a4;
  v43 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E5D98);
  v44 = *(_QWORD *)(v10 - 8);
  v45 = v10;
  MEMORY[0x1E0C80A78](v10);
  v47 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = *(_QWORD *)a1;
  v12 = *(_BYTE *)(a1 + 8);
  if (qword_1EE1E5E28 != -1)
    swift_once();
  v13 = sub_190A465A0();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EE1FD688);
  swift_retain_n();
  v14 = sub_190A46588();
  v15 = sub_190A47F68();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v40 = a2;
    v18 = v17;
    v48[0] = v17;
    *(_DWORD *)v16 = 136446466;
    v41 = a3;
    v19 = sub_1908B3C54();
    v50 = sub_1908B35C4(v19, v20, v48);
    sub_190A48178();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    v50 = v46;
    v51 = v12;
    WidgetExtensionSessionOperation.description.getter();
    v50 = sub_1908B35C4(v21, v22, v48);
    a3 = v41;
    sub_190A48178();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    v23 = v18;
    a2 = v40;
    MEMORY[0x194014398](v23, -1, -1);
    MEMORY[0x194014398](v16, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = 0;
  v25 = swift_allocObject();
  v26 = v46;
  *(_QWORD *)(v25 + 16) = v6;
  *(_QWORD *)(v25 + 24) = v26;
  *(_BYTE *)(v25 + 32) = v12;
  *(_QWORD *)(v25 + 40) = v24;
  *(_QWORD *)(v25 + 48) = a2;
  *(_QWORD *)(v25 + 56) = a3;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = sub_1908B531C;
  *(_QWORD *)(v27 + 24) = v25;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E5DE8);
  sub_1908AF598(&qword_1EE1E5DE0, &qword_1EE1E5DE8, MEMORY[0x1E0C96108]);
  sub_190A465F4();
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = 0;
  v29 = swift_allocObject();
  swift_weakInit();
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v29;
  *(_QWORD *)(v30 + 24) = v24;
  *(_QWORD *)(v30 + 32) = v26;
  LOBYTE(v29) = v12;
  *(_BYTE *)(v30 + 40) = v12;
  v31 = v43;
  *(_QWORD *)(v30 + 48) = v42;
  *(_QWORD *)(v30 + 56) = v31;
  *(_QWORD *)(v30 + 64) = v28;
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v6;
  *(_QWORD *)(v32 + 24) = v26;
  *(_BYTE *)(v32 + 32) = v29;
  sub_1908AF598(&qword_1EE1E5D90, &qword_1EE1E5D98, MEMORY[0x1E0C96148]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v33 = v45;
  v34 = sub_190A46630();
  swift_release();
  swift_release();
  swift_beginAccess();
  *(_QWORD *)(v28 + 16) = v34;
  swift_release();
  v35 = *(_QWORD *)(v6 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock);
  v36 = *(os_unfair_lock_s **)(v35 + 16);
  swift_retain();
  os_unfair_lock_lock(v36);
  v37 = *(_QWORD *)(v28 + 16);
  if (v37)
  {
    swift_beginAccess();
    swift_retain_n();
    sub_1908AACD4(&v49, v37);
    swift_endAccess();
    swift_release();
    swift_release();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v35 + 16));
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v47, v33);
  swift_release();
  return swift_release();
}

uint64_t sub_1908AF598(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x19401429C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1908AF5D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1908AF61C(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, unint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  int *v27;
  id v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t i;
  int64_t v67;
  unint64_t v68;
  int64_t v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t result;
  _QWORD v83[2];
  id v84;
  _QWORD *v85;
  unint64_t v86;
  int *v87;
  _QWORD *v88;
  id v89;
  __int128 v90[2];
  uint64_t v91;
  unint64_t v92[5];
  __int128 v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v86 = a5;
  v85 = a4;
  v6 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t)v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for WidgetDescriptor(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t (*)(uint64_t))((char *)v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v87 = (int *)v10;
  v88 = a1;
  v13 = swift_bridgeObjectRetain();
  v14 = sub_1909C6D98(v13);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v16 = 0;
    v17 = v14 + 32;
    do
    {
      v17 += 8;
      v16 |= CHSWidgetFamilyMaskFromWidgetFamily();
      --v15;
    }
    while (v15);
  }
  else
  {
    v16 = 0;
  }
  swift_bridgeObjectRelease();
  v18 = v88;
  sub_1909F3014((uint64_t)&v93);
  if (v94)
  {
    sub_1908B4BBC(&v93, (uint64_t)&v95);
    v19 = (void *)sub_190A47AC4();
    swift_bridgeObjectRelease();
    v20 = v97;
    v21 = v98;
    __swift_project_boxed_opaque_existential_1(&v95, v97);
    (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
    v22 = (void *)sub_190A47AC4();
    swift_bridgeObjectRelease();
    v23 = v97;
    v24 = v98;
    __swift_project_boxed_opaque_existential_1(&v95, v97);
    (*(void (**)(uint64_t, uint64_t))(v24 + 40))(v23, v24);
    if (v25)
    {
      v26 = (void *)sub_190A47AC4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v26 = 0;
    }
    v27 = v87;
    v28 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithExtensionBundleIdentifier_containerBundleIdentifier_kind_supportedFamilies_intentType_, v19, 0, v22, v16, v26);

    sub_1908BBDC8((uint64_t)&v95, (uint64_t)v92);
    v8 = (uint64_t)v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A720);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A728);
    v29 = swift_dynamicCast();
    v89 = (id)v8;
    if ((v29 & 1) == 0)
    {
      v91 = 0;
      memset(v90, 0, sizeof(v90));
      sub_1908AA544((uint64_t)v90, &qword_1EE1EB980);
LABEL_36:
      objc_msgSend((id)v8, sel_setEnablement_, *(_QWORD *)((char *)v18 + v27[10]));
      if (*(_QWORD *)((char *)v18 + v27[5] + 8))
      {
        swift_bridgeObjectRetain();
        v54 = (void *)sub_190A47AC4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v54 = 0;
      }
      objc_msgSend((id)v8, sel_setDisplayName_, v54);

      if (*(_QWORD *)((char *)v18 + v27[6] + 8))
      {
        swift_bridgeObjectRetain();
        v55 = (void *)sub_190A47AC4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v55 = 0;
      }
      objc_msgSend((id)v8, sel_setWidgetDescription_, v55);

      objc_msgSend((id)v8, sel_setWidgetVisibility_, *(_QWORD *)((char *)v18 + v27[11]));
      if (!objc_msgSend((id)v8, sel_widgetVisibility))
      {
        v56 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
        v57 = objc_msgSend(v56, sel_bundlePath);

        sub_190A47ADC();
        LOBYTE(v56) = sub_190A47B60();
        swift_bridgeObjectRelease();
        objc_msgSend((id)v8, sel_setWidgetVisibility_, v56 & 1);
      }
      v58 = *(_QWORD *)((char *)v18 + v27[9]);
      v59 = (int *)(v58 + 64);
      v60 = 1 << *(_BYTE *)(v58 + 32);
      v61 = -1;
      if (v60 < 64)
        v61 = ~(-1 << v60);
      v62 = v61 & *(_QWORD *)(v58 + 64);
      v63 = (unint64_t)(v60 + 63) >> 6;
      swift_bridgeObjectRetain();
      v64 = 0;
      v18 = qword_190A57840;
      if (!v62)
        goto LABEL_48;
LABEL_47:
      v65 = __clz(__rbit64(v62));
      v62 &= v62 - 1;
      for (i = v65 | (v64 << 6); ; i = __clz(__rbit64(v68)) + (v64 << 6))
      {
        v8 = *(unsigned __int8 *)(*(_QWORD *)(v58 + 48) + i);
        v12 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(v58 + 56) + 8 * i);
        v70 = sub_1909C7100(0, (uint64_t)v12);
        if (sub_1909C7100(1u, (uint64_t)v12))
          v71 = v70 | 2;
        else
          v71 = v70;
        if (sub_1909C7100(2u, (uint64_t)v12))
          v71 |= 4uLL;
        if (sub_1909C7100(3u, (uint64_t)v12))
          v72 = v71 | 8;
        else
          v72 = v71;
        if (v8 >= 0xD || ((0x13BFu >> v8) & 1) == 0)
          goto LABEL_89;
        v73 = qword_190A57840[(char)v8];
        v8 = (uint64_t)v89;
        objc_msgSend(v89, sel_setDisfavoredLocations_on_, v72, v73);
        if (v62)
          goto LABEL_47;
LABEL_48:
        v67 = v64 + 1;
        if (__OFADD__(v64, 1))
        {
          __break(1u);
          goto LABEL_86;
        }
        if (v67 >= v63)
          goto LABEL_74;
        v68 = *(_QWORD *)&v59[2 * v67];
        ++v64;
        if (!v68)
        {
          v64 = v67 + 1;
          if (v67 + 1 >= v63)
            goto LABEL_74;
          v68 = *(_QWORD *)&v59[2 * v64];
          if (!v68)
          {
            v64 = v67 + 2;
            if (v67 + 2 >= v63)
              goto LABEL_74;
            v68 = *(_QWORD *)&v59[2 * v64];
            if (!v68)
            {
              v69 = v67 + 3;
              if (v69 >= v63)
              {
LABEL_74:
                swift_release();
                v59 = v87;
                v64 = (uint64_t)v88;
                if (*(_QWORD *)((char *)v88 + v87[12] + 8))
                {
                  swift_bridgeObjectRetain();
                  v74 = (void *)sub_190A47AC4();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  v74 = 0;
                }
                v62 = v86;
                v18 = v85;
                objc_msgSend((id)v8, sel_setEventMachServiceName_, v74);

                v75 = (void *)sub_190A45FE8();
                objc_msgSend((id)v8, sel_setLocaleToken_, v75);

                v76 = (void *)sub_190A47AC4();
                objc_msgSend((id)v8, sel_setSdkVersion_, v76);

                objc_msgSend((id)v8, sel_setPreferredBackgroundStyle_, *(unsigned __int8 *)(v64 + v59[13]));
                objc_msgSend((id)v8, sel_setSupportsVibrantContent_, *(unsigned __int8 *)(v64 + v59[14]));
                if (*(_BYTE *)(v64 + v59[15]) == 1)
                {
                  if (qword_1ECF6A718 != -1)
                    goto LABEL_87;
                  goto LABEL_79;
                }
LABEL_81:
                objc_msgSend((id)v8, sel_setEnablesMultipleTapTargets_, *(unsigned __int8 *)(v64 + v59[17]));
                v77 = v97;
                v78 = v98;
                __swift_project_boxed_opaque_existential_1(&v95, v97);
                (*(void (**)(uint64_t, uint64_t))(v78 + 40))(v77, v78);
                v80 = v79;
                swift_bridgeObjectRelease();
                if (v80)
                  v81 = *(unsigned __int8 *)(v64 + v59[20]);
                else
                  v81 = 0;
                objc_msgSend((id)v8, sel_setPromptsForUserConfiguration_, v81);
                objc_msgSend((id)v8, sel_setBackgroundRemovable_, *(unsigned __int8 *)(v64 + v59[19]));
                objc_msgSend((id)v8, sel_setSupportsInteraction_, *(unsigned __int8 *)(v64 + v59[16]));
                objc_msgSend((id)v8, sel_setHiddenBySensitiveUI_, *(unsigned __int8 *)(v64 + v59[24]));
                sub_1908B53FC((uint64_t)v18, v62);

                sub_1908B5150(v64, type metadata accessor for WidgetDescriptor);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v95);
                return v8;
              }
              v68 = *(_QWORD *)&v59[2 * v69];
              if (!v68)
              {
                while (1)
                {
                  v64 = v69 + 1;
                  if (__OFADD__(v69, 1))
                    break;
                  if (v64 >= v63)
                    goto LABEL_74;
                  v68 = *(_QWORD *)&v59[2 * v64];
                  ++v69;
                  if (v68)
                    goto LABEL_61;
                }
LABEL_86:
                __break(1u);
LABEL_87:
                swift_once();
LABEL_79:
                if (dyld_program_sdk_at_least())
                  objc_msgSend((id)v8, sel_setSupportsAccentedContent_, 1);
                goto LABEL_81;
              }
              v64 = v69;
            }
          }
        }
LABEL_61:
        v62 = (v68 - 1) & v68;
      }
    }
    sub_1908B4BBC(v90, (uint64_t)&v93);
    v12 = (uint64_t (*)(uint64_t))__swift_project_boxed_opaque_existential_1(&v93, v94)[4];
    if (!v12)
    {
LABEL_35:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
      goto LABEL_36;
    }
    v30 = swift_retain();
    v31 = v12(v30);
    sub_1908B467C((uint64_t)v12);
    if (*(_QWORD *)(v31 + 16))
      v32 = *(id *)(v31 + 32);
    else
      v32 = 0;
    if ((*MEMORY[0x1E0D0FEE0] & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_32;
    }
    v33 = sub_1908B45F8(*MEMORY[0x1E0D0FEE0], v31);
    v37 = MEMORY[0x1E0DEE9D8];
    v92[0] = MEMORY[0x1E0DEE9D8];
    v18 = (_QWORD *)((v36 >> 1) - v35);
    if (v36 >> 1 == v35)
    {
LABEL_28:
      swift_unknownObjectRelease();
      if (!(v37 >> 62))
      {
        v18 = v88;
        if (*(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_30:
          v49 = objc_allocWithZone(MEMORY[0x1E0D10068]);
          sub_1908AB890(0, &qword_1EE1EB7F8);
          v50 = v32;
          v51 = (void *)sub_190A47C50();
          swift_bridgeObjectRelease();
          v52 = objc_msgSend(v49, sel_initWithSchemaIntent_recommendations_, v50, v51);

          objc_msgSend((id)v8, sel_setIntentRecommendationsContainer_, v52);
LABEL_34:

          goto LABEL_35;
        }
LABEL_33:
        swift_bridgeObjectRelease();
        goto LABEL_34;
      }
LABEL_32:
      swift_bridgeObjectRetain();
      v53 = sub_190A48484();
      swift_bridgeObjectRelease();
      v18 = v88;
      if (v53)
        goto LABEL_30;
      goto LABEL_33;
    }
    v84 = v32;
    if ((uint64_t)(v36 >> 1) > v35)
    {
      v38 = v34;
      v39 = v35;
      v83[1] = v33;
      swift_unknownObjectRetain();
      v40 = v38 + 24 * v39 + 8;
      do
      {
        v41 = *(void **)(v40 - 8);
        v42 = objc_allocWithZone(MEMORY[0x1E0D10070]);
        v43 = v41;
        swift_bridgeObjectRetain();
        v44 = objc_msgSend(v42, sel_initWithIntent_, v43);
        if (v44)
        {
          v45 = v44;
          v46 = objc_allocWithZone(MEMORY[0x1E0D10060]);
          swift_bridgeObjectRetain();
          v47 = (void *)sub_190A47AC4();
          swift_bridgeObjectRelease();
          v48 = objc_msgSend(v46, sel_initWithIntentReference_localizedDescription_, v45, v47);
          swift_bridgeObjectRelease();

          if (v48)
          {
            MEMORY[0x194012E68]();
            if (*(_QWORD *)((v92[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v92[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_190A47C98();
            sub_190A47CD4();
            sub_190A47C74();
          }
        }
        else
        {
          swift_bridgeObjectRelease();

        }
        v40 += 24;
        v18 = (_QWORD *)((char *)v18 - 1);
      }
      while (v18);
      swift_unknownObjectRelease();
      v37 = v92[0];
      v27 = v87;
      v8 = (uint64_t)v89;
      v32 = v84;
      goto LABEL_28;
    }
    __break(1u);
LABEL_89:
    sub_190A486D0();
    __break(1u);
  }
  sub_1908AA544((uint64_t)&v93, &qword_1EE1EE310);
  sub_1908AF5D8((uint64_t)v18, (uint64_t)v12, type metadata accessor for WidgetDescriptor);
  v95 = 0;
  v96 = 0xE000000000000000;
  sub_190A48298();
  swift_bridgeObjectRelease();
  v95 = 0xD00000000000002ALL;
  v96 = 0x8000000190A64110;
  sub_1908AF5D8((uint64_t)v12, v8, type metadata accessor for ViewSource);
  sub_190A47B00();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  result = sub_190A48448();
  __break(1u);
  return result;
}

uint64_t sub_1908B0210(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

id sub_1908B026C()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  id result;
  void *v4;
  id v5;
  id v6;
  char v7[40];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_1908B0370(v0, v7);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  result = (id)swift_release();
  if (v7[0] == 1)
  {
    v4 = *(void **)(v0 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_connection);
    v5 = objc_msgSend(v4, sel_remoteObjectProxy);
    sub_190A481B4();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E5E10);
    if (swift_dynamicCast())
    {
      objc_msgSend(v6, sel_invalidate);
      swift_unknownObjectRelease();
    }
    return objc_msgSend(v4, sel_invalidate);
  }
  return result;
}

void sub_1908B0370(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  _UNKNOWN **v37;
  uint64_t v38[3];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v4 = OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock_invalidated;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_lock_invalidated) & 1) != 0)
  {
    v5 = 0;
  }
  else
  {
    sub_1908AAA48(a1 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_suspensionObserver, (uint64_t)&v35, &qword_1EE1E5DB0);
    v41 = v2;
    if (v36)
    {
      sub_1908B4BBC(&v35, (uint64_t)v38);
      v7 = sub_1908B2DEC(0xD000000000000017, 0x8000000190A64AA0);
      if (v7)
      {
        v8 = v7;
        v9 = v39;
        v10 = v40;
        __swift_project_boxed_opaque_existential_1(v38, v39);
        v36 = sub_1908AB890(0, &qword_1EE1E5DB8);
        v37 = &protocol witness table for RBSAssertion;
        *(_QWORD *)&v35 = v8;
        v11 = v8;
        v12 = sub_190A4642C();
        (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(&v35, v12, v13, v9, v10);
        swift_bridgeObjectRelease();

        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v35);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    }
    else
    {
      sub_1908AA544((uint64_t)&v35, &qword_1EE1E5DB0);
    }
    v14 = 0x1EE1E5000uLL;
    if (*(_QWORD *)(a1 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_widgetExtensionAssertion))
    {
      swift_unknownObjectRetain();
      objc_opt_self();
      v15 = swift_dynamicCastObjCClass();
      if (v15)
      {
        v16 = (void *)v15;
        v34 = v4;
        if (qword_1EE1E5E28 != -1)
          swift_once();
        v17 = sub_190A465A0();
        __swift_project_value_buffer(v17, (uint64_t)qword_1EE1FD688);
        swift_retain_n();
        v18 = sub_190A46588();
        v19 = sub_190A47F68();
        if (os_log_type_enabled(v18, v19))
        {
          v33 = a2;
          v20 = (uint8_t *)swift_slowAlloc();
          v21 = swift_slowAlloc();
          v38[0] = v21;
          *(_DWORD *)v20 = 136446210;
          v22 = sub_1908B3C54();
          *(_QWORD *)&v35 = sub_1908B35C4(v22, v23, v38);
          sub_190A48178();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1908A7000, v18, v19, "%{public}s WidgetExtensionRun invalidated", v20, 0xCu);
          swift_arrayDestroy();
          v24 = v21;
          v14 = 0x1EE1E5000;
          MEMORY[0x194014398](v24, -1, -1);
          v25 = v20;
          a2 = v33;
          MEMORY[0x194014398](v25, -1, -1);

        }
        else
        {

          swift_release_n();
        }
        v4 = v34;
        objc_msgSend(v16, sel_invalidate);
      }
      swift_unknownObjectRelease();
    }
    if (*(_QWORD *)(v14 + 3624) != -1)
      swift_once();
    v26 = sub_190A465A0();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EE1FD688);
    swift_retain_n();
    v27 = sub_190A46588();
    v28 = sub_190A47F68();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v38[0] = v30;
      *(_DWORD *)v29 = 136446210;
      v31 = sub_1908B3C54();
      *(_QWORD *)&v35 = sub_1908B35C4(v31, v32, v38);
      sub_190A48178();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1908A7000, v27, v28, "%{public}s Session invalidated", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v30, -1, -1);
      MEMORY[0x194014398](v29, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v5 = 1;
    *(_BYTE *)(a1 + v4) = 1;
  }
  *a2 = v5;
}

void static WidgetExtensionSessionFactory.makeSessionAsync(for:options:watchdogTimeoutProvider:completion:)(uint64_t a1, char *a2, uint8_t *a3, uint64_t a4, void (*a5)(_QWORD), unint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  id v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t *v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  id v70;
  id v71;
  void *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  id v90;
  char *v91;
  void (*v92)(_QWORD);
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  void (*v99)(_QWORD);
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  id v121;

  v114 = a2;
  v111 = sub_190A463F0();
  v106 = *(_QWORD *)(v111 - 8);
  MEMORY[0x1E0C80A78](v111);
  v105 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_190A46438();
  v109 = *(_QWORD *)(v12 - 8);
  v110 = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v104 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = v14;
  MEMORY[0x1E0C80A78](v13);
  v108 = (char *)&v92 - v15;
  v16 = sub_190A460CC();
  v107 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v102 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = v18;
  MEMORY[0x1E0C80A78](v17);
  v113 = (char *)&v92 - v19;
  v116 = sub_190A465A0();
  v20 = *(_QWORD *)(v116 - 8);
  v21 = MEMORY[0x1E0C80A78](v116);
  v112 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v92 - v23;
  if (a3)
  {
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = a3;
    *(_QWORD *)(v25 + 24) = a4;
    v26 = sub_1909D96F4;
  }
  else
  {
    v25 = 0;
    v26 = sub_1908B4C5C;
  }
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v26;
  *(_QWORD *)(v27 + 24) = v25;
  v115 = v27;
  sub_1908AAA48(a1, (uint64_t)&v117, (uint64_t *)&unk_1ECF6C8A0);
  if (!*((_QWORD *)&v118 + 1))
  {
    sub_1908B4C4C((uint64_t)a3);
    sub_1908AA544((uint64_t)&v117, (uint64_t *)&unk_1ECF6C8A0);
    goto LABEL_13;
  }
  sub_1908B4C4C((uint64_t)a3);
  sub_1908AB890(0, &qword_1EE1E5E18);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    sub_1908AAA48(a1, (uint64_t)&v117, (uint64_t *)&unk_1ECF6C8A0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C8A0);
    v49 = sub_190A47B00();
    v51 = v50;
    v52 = v116;
    if (qword_1EE1E5E28 != -1)
      swift_once();
    __swift_project_value_buffer(v52, (uint64_t)qword_1EE1FD688);
    swift_bridgeObjectRetain();
    v53 = sub_190A46588();
    v54 = sub_190A47F68();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = swift_slowAlloc();
      *(_QWORD *)&v117 = v56;
      *(_DWORD *)v55 = 136446210;
      swift_bridgeObjectRetain();
      v121 = (id)sub_1908B35C4(v49, v51, (uint64_t *)&v117);
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1908A7000, v53, v54, "Unable to create new WidgetExtensionSession: extension was not an NSExtension - %{public}s", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v56, -1, -1);
      MEMORY[0x194014398](v55, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a5(0);
    goto LABEL_19;
  }
  v99 = a5;
  v28 = v121;
  v29 = objc_msgSend(v121, sel_identifier);
  if (!v29)
  {
    __break(1u);
LABEL_33:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_34;
  }
  v30 = v29;
  v31 = sub_190A47ADC();
  v33 = v32;

  v34 = *v114;
  v35 = (_QWORD *)swift_allocObject();
  v35[2] = v28;
  v35[3] = 0x402E000000000000;
  v35[4] = v99;
  v35[5] = a6;
  type metadata accessor for WidgetExtensionSessionWatchdog();
  swift_allocObject();
  v36 = v28;
  swift_retain();
  v96 = sub_190956ED4(v31, v33, v34, (uint64_t)sub_1909E14AC, (uint64_t)v35, 15.0);
  if (qword_1EE1E5E28 != -1)
    swift_once();
  v37 = v116;
  v38 = __swift_project_value_buffer(v116, (uint64_t)qword_1EE1FD688);
  v39 = *(void **)(v20 + 16);
  v94 = v38;
  v95 = v39;
  ((void (*)(char *))v39)(v24);
  a5 = (void (*)(_QWORD))v36;
  v40 = sub_190A46588();
  v41 = sub_190A47F68();
  v42 = os_log_type_enabled(v40, v41);
  v98 = v16;
  if (!v42)
  {

    a3 = *(uint8_t **)(v20 + 8);
    ((void (*)(char *, uint64_t))a3)(v24, v37);
LABEL_21:
    if ((v114[48] & 1) != 0)
    {
      v97 = 0x8000000190A64750;
      v93 = 0xD000000000000012;
      if (qword_1EE1E6980 != -1)
        swift_once();
      v57 = &qword_1EE1E6970;
    }
    else
    {
      if (qword_1EE1E5F28 != -1)
        swift_once();
      v93 = 0;
      v97 = 0;
      v57 = &qword_1EE1E6968;
    }
    v58 = (id)*v57;
    sub_190A460C0();
    v59 = objc_msgSend(a5, sel_identifier);
    if (v59)
    {
      v60 = v59;
      sub_190A47ADC();

      v61 = objc_allocWithZone(MEMORY[0x1E0CA5848]);
      v62 = sub_1908AB77C();
      v63 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CAA538]), sel_initWithApplicationExtensionRecord_, v62);

      v64 = (char *)v63;
      v65 = v108;
      v112 = v64;
      sub_190A46444();
      v66 = swift_allocBox();
      v68 = v67;
      v69 = *(void (**)(char *, char *, uint64_t))(v109 + 16);
      v69(v104, v65, v110);
      sub_190A4639C();
      v70 = v58;
      sub_190A463C0();
      v71 = objc_msgSend(a5, sel_preferredLanguages);
      v92 = a5;
      v116 = v66;
      v95 = v70;
      if (v71)
      {
        v72 = v71;
        sub_190A47C5C();

      }
      sub_190A463CC();
      sub_190A463D8();
      v73 = v114;
      swift_bridgeObjectRetain();
      sub_190A463E4();
      v74 = v104;
      v75 = v110;
      v69(v104, v108, v110);
      v76 = v109;
      v77 = (*(unsigned __int8 *)(v109 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
      v78 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v76 + 32))(v78 + v77, v74, v75);
      sub_190A463B4();
      (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v105, v68, v111);
      sub_1908A9CEC(v73, (uint64_t)&v117);
      v79 = v107;
      v80 = v102;
      v81 = v98;
      (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v102, v113, v98);
      v82 = (*(unsigned __int8 *)(v79 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
      v83 = swift_allocObject();
      v84 = v92;
      v85 = v96;
      *(_QWORD *)(v83 + 16) = v92;
      *(_QWORD *)(v83 + 24) = v85;
      *(_QWORD *)(v83 + 32) = v99;
      *(_QWORD *)(v83 + 40) = a6;
      v87 = v115;
      v86 = v116;
      *(_QWORD *)(v83 + 48) = v103;
      *(_QWORD *)(v83 + 56) = v86;
      v88 = v118;
      *(_OWORD *)(v83 + 64) = v117;
      *(_OWORD *)(v83 + 80) = v88;
      v89 = v120;
      *(_OWORD *)(v83 + 96) = v119;
      *(_OWORD *)(v83 + 112) = v89;
      *(_QWORD *)(v83 + 128) = sub_1908B4C18;
      *(_QWORD *)(v83 + 136) = v87;
      (*(void (**)(unint64_t, char *, uint64_t))(v79 + 32))(v83 + v82, v80, v81);
      v90 = v84;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v91 = v105;
      sub_190A46414();

      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(char *, uint64_t))(v106 + 8))(v91, v111);
      (*(void (**)(char *, uint64_t))(v109 + 8))(v108, v110);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v113, v81);
LABEL_19:
      swift_release();
      return;
    }
    goto LABEL_33;
  }
  v97 = a6;
  a3 = (uint8_t *)swift_slowAlloc();
  v93 = swift_slowAlloc();
  *(_QWORD *)&v117 = v93;
  *(_DWORD *)a3 = 136446210;
  v43 = objc_msgSend(a5, sel_identifier);
  if (v43)
  {
    v44 = v43;
    v45 = sub_190A47ADC();
    v47 = v46;

    v121 = (id)sub_1908B35C4(v45, v47, (uint64_t *)&v117);
    sub_190A48178();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v40, v41, "[%{public}s] Creating session...", a3, 0xCu);
    v48 = v93;
    swift_arrayDestroy();
    MEMORY[0x194014398](v48, -1, -1);
    MEMORY[0x194014398](a3, -1, -1);

    a3 = *(uint8_t **)(v20 + 8);
    ((void (*)(char *, uint64_t))a3)(v24, v116);
    a6 = v97;
    goto LABEL_21;
  }
LABEL_34:

  __break(1u);
  __break(1u);
}

uint64_t sub_1908B166C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v7;
  os_unfair_lock_s *v8;

  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(os_unfair_lock_s **)(v7 + 16);
  swift_retain();
  os_unfair_lock_lock(v8);
  a3(v3, a1, a2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  return swift_release();
}

uint64_t sub_1908B16E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)();
  void *v22;
  void (*v23)(void *);
  uint64_t v24;
  _BYTE v25[32];
  uint64_t v26;

  v5 = sub_1908B3D9C();
  v23 = sub_19095D978;
  v24 = 0;
  v6 = MEMORY[0x1E0C809B0];
  v19 = MEMORY[0x1E0C809B0];
  v20 = 1107296256;
  v21 = sub_1908B4904;
  v22 = &block_descriptor_75;
  v7 = _Block_copy(&v19);
  v8 = objc_msgSend(v5, sel_remoteObjectProxyWithErrorHandler_, v7);
  _Block_release(v7);

  sub_190A481B4();
  swift_unknownObjectRelease();
  sub_1908B3694((uint64_t)v25, (uint64_t)&v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AA98);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v9 = (void *)v26;
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a2;
    *(_QWORD *)(v10 + 24) = a3;
    swift_bridgeObjectRetain();
    v11 = (void *)sub_190A47AC4();
    v23 = sub_1908B1D84;
    v24 = v10;
    v19 = v6;
    v20 = 1107296256;
    v21 = sub_1908B19EC;
    v22 = &block_descriptor_81;
    v12 = _Block_copy(&v19);
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel__reloadTimelinesOfKind_completion_, v11, v12);
    _Block_release(v12);

    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v13 = sub_190A465A0();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ECF6D988);
    v14 = sub_190A46588();
    v15 = sub_190A47F50();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v19 = v17;
      *(_DWORD *)v16 = 136446210;
      v26 = sub_1908B35C4(0xD000000000000018, 0x8000000190A626E0, &v19);
      sub_190A48178();
      swift_arrayDestroy();
      MEMORY[0x194014398](v17, -1, -1);
      MEMORY[0x194014398](v16, -1, -1);
    }

  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

void sub_1908B19F0(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  NSObject *oslog;
  uint64_t v16;
  uint64_t v17;

  if (a1)
  {
    v2 = a1;
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v3 = sub_190A465A0();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ECF6D988);
    v4 = a1;
    v5 = a1;
    oslog = sub_190A46588();
    v6 = sub_190A47F50();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v17 = v9;
      *(_DWORD *)v7 = 136446466;
      sub_1908B35C4(0xD000000000000014, 0x8000000190A62640, &v17);
      sub_190A48178();
      *(_WORD *)(v7 + 12) = 2114;
      v10 = a1;
      v16 = _swift_stdlib_bridgeErrorToNSError();
      sub_190A48178();
      *v8 = v16;

      _os_log_impl(&dword_1908A7000, oslog, v6, "%{public}s - error reloading all timelines: %{public}@", (uint8_t *)v7, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
      swift_arrayDestroy();
      MEMORY[0x194014398](v8, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x194014398](v9, -1, -1);
      MEMORY[0x194014398](v7, -1, -1);

      return;
    }

  }
  else
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v11 = sub_190A465A0();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ECF6D988);
    oslog = sub_190A46588();
    v12 = sub_190A47F68();
    if (os_log_type_enabled(oslog, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v17 = v14;
      *(_DWORD *)v13 = 136446210;
      sub_1908B35C4(0xD000000000000014, 0x8000000190A62640, &v17);
      sub_190A48178();
      _os_log_impl(&dword_1908A7000, oslog, v12, "%{public}s - reloaded all timelines", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v14, -1, -1);
      MEMORY[0x194014398](v13, -1, -1);

      return;
    }
  }

}

void sub_1908B1D84(void *a1)
{
  uint64_t v1;

  sub_1908B1D8C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1908B1D8C(void *a1, uint64_t a2, unint64_t a3)
{
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  os_log_type_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *oslog;
  uint64_t v21;
  uint64_t v22;

  if (a1)
  {
    v6 = a1;
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v7 = sub_190A465A0();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ECF6D988);
    swift_bridgeObjectRetain();
    v8 = a1;
    swift_bridgeObjectRetain();
    v9 = a1;
    oslog = sub_190A46588();
    v10 = sub_190A47F50();
    if (os_log_type_enabled(oslog, v10))
    {
      v11 = swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v22 = v13;
      *(_DWORD *)v11 = 136446722;
      sub_1908B35C4(0xD000000000000018, 0x8000000190A626E0, &v22);
      sub_190A48178();
      *(_WORD *)(v11 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1908B35C4(a2, a3, &v22);
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v11 + 22) = 2114;
      v14 = a1;
      v21 = _swift_stdlib_bridgeErrorToNSError();
      sub_190A48178();
      *v12 = v21;

      _os_log_impl(&dword_1908A7000, oslog, v10, "%{public}s - error reloading timelines of kind '%{public}s': %{public}@", (uint8_t *)v11, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
      swift_arrayDestroy();
      MEMORY[0x194014398](v12, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x194014398](v13, -1, -1);
      MEMORY[0x194014398](v11, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v15 = sub_190A465A0();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ECF6D988);
    swift_bridgeObjectRetain_n();
    v16 = sub_190A46588();
    v17 = sub_190A47F68();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v22 = v19;
      *(_DWORD *)v18 = 136446466;
      sub_1908B35C4(0xD000000000000018, 0x8000000190A626E0, &v22);
      sub_190A48178();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1908B35C4(a2, a3, &v22);
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1908A7000, v16, v17, "%{public}s - reloaded timelines of kind '%{public}s'", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194014398](v19, -1, -1);
      MEMORY[0x194014398](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E20]), sel_init);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = 0;
    do
    {
      ++v4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D3C0);
      objc_msgSend(v2, sel_addObject_, sub_190A4873C());
      swift_unknownObjectRelease();
    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
  }
  v5 = v2;
  sub_190A47DAC();

  sub_190A48448();
  __break(1u);
}

id DescriptorFetchResult.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  objc_class *v12;
  char *v13;
  uint64_t v14;
  id v15;
  objc_super v17;
  unint64_t v18;
  _BYTE v19[24];
  uint64_t v20;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BCE0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_190A4A360;
  v5 = sub_1908AB890(0, (unint64_t *)&unk_1ECF6D3B0);
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = sub_1908AB890(0, &qword_1ECF6D250);
  v6 = v2;
  sub_190A48094();
  swift_bridgeObjectRelease();
  if (v20)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6A70);
    if (swift_dynamicCast())
      v7 = v18;
    else
      v7 = 0;
  }
  else
  {
    sub_1908B4324((uint64_t)v19);
    v7 = 0;
  }
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_190A4A360;
  *(_QWORD *)(v8 + 32) = v5;
  *(_QWORD *)(v8 + 40) = sub_1908AB890(0, qword_1ECF6A8E8);
  sub_190A48094();
  swift_bridgeObjectRelease();
  if (v20)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6A78);
    if (swift_dynamicCast())
      v9 = v18;
    else
      v9 = 0;
  }
  else
  {
    sub_1908B4324((uint64_t)v19);
    v9 = 0;
  }
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_190A4A360;
  *(_QWORD *)(v10 + 32) = v5;
  *(_QWORD *)(v10 + 40) = sub_1908AB890(0, &qword_1ECF6B010);
  sub_190A48094();
  swift_bridgeObjectRelease();
  if (!v20)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1908B4324((uint64_t)v19);
LABEL_20:
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6A80);
  if ((swift_dynamicCast() & 1) == 0)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v11 = v18;
  if (!v9)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if (!v7)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_20;
  }

  v12 = (objc_class *)type metadata accessor for DescriptorFetchResult();
  v13 = (char *)objc_allocWithZone(v12);
  v14 = sub_190954928(v7);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v13[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_widgetDescriptors] = v14;
  *(_QWORD *)&v13[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_activityDescriptors] = v11;
  *(_QWORD *)&v13[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_controlDescriptors] = v9;

  v17.receiver = v13;
  v17.super_class = v12;
  v15 = objc_msgSendSuper2(&v17, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v15;
}

void sub_1908B2790(void *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  sub_1908AB890(0, &qword_1ECF6D250);
  v2 = (void *)sub_190A47C50();
  v3 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v2, v3);

  sub_1908AB890(0, qword_1ECF6A8E8);
  v4 = (void *)sub_190A47C50();
  v5 = (void *)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  sub_1908AB890(0, &qword_1ECF6B010);
  v6 = (void *)sub_190A47C50();
  v7 = (id)sub_190A47AC4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

}

uint64_t sub_1908B2918(uint64_t a1, void *a2, void *a3, void (*a4)(uint64_t (*)(), _QWORD *, _QWORD), uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  objc_class *v21;
  char *v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  id v26;
  objc_super v30;
  _BYTE v31[8];
  _BYTE v32[8];
  _BYTE v33[16];

  v9 = a2;
  v10 = a3;
  v11 = swift_bridgeObjectRetain();
  v12 = sub_1909E0624(v11, (uint64_t)v9, (uint64_t)v10, (uint64_t)v33, (void (*)(uint64_t, uint64_t))sub_1909DBD3C);
  swift_bridgeObjectRelease();

  v13 = v9;
  v14 = v10;
  v15 = swift_bridgeObjectRetain();
  v16 = sub_1909E0624(v15, (uint64_t)v13, (uint64_t)v14, (uint64_t)v32, (void (*)(uint64_t, uint64_t))sub_1909DF614);
  swift_bridgeObjectRelease();

  v17 = v13;
  v18 = v14;
  v19 = swift_bridgeObjectRetain();
  v20 = sub_1909E0624(v19, (uint64_t)v17, (uint64_t)v18, (uint64_t)v31, (void (*)(uint64_t, uint64_t))sub_1909DF444);
  swift_bridgeObjectRelease();

  v21 = (objc_class *)type metadata accessor for DescriptorFetchResult();
  v22 = (char *)objc_allocWithZone(v21);
  v23 = sub_190954928(v12);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v22[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_widgetDescriptors] = v23;
  *(_QWORD *)&v22[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_activityDescriptors] = v20;
  *(_QWORD *)&v22[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_controlDescriptors] = v16;

  v30.receiver = v22;
  v30.super_class = v21;
  v24 = objc_msgSendSuper2(&v30, sel_init);
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = a6;
  v25[3] = a7;
  v25[4] = v24;
  swift_retain();
  v26 = v24;
  a4(sub_1908B5338, v25, 0);

  return swift_release();
}

void sub_1908B2B2C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  objc_class *Result;
  char *v24;
  uint64_t v25;
  objc_super v26;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_mainBundle);
  v3 = objc_msgSend(v2, sel_bundleIdentifier);

  if (!v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = sub_190A47ADC();
  v6 = v5;

  v7 = sub_1908B5208();
  swift_bridgeObjectRetain();
  swift_retain();
  v8 = sub_1909CCD7C(v7, v4, v6, v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_release();
  v9 = objc_msgSend(v1, sel_mainBundle);
  v10 = objc_msgSend(v9, sel_bundleIdentifier);

  if (!v10)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v11 = sub_190A47ADC();
  v13 = v12;

  v14 = sub_1909CA0A4();
  swift_retain();
  swift_bridgeObjectRetain();
  v15 = sub_1909CCF50(v14, v11, v13, v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_release();
  v16 = objc_msgSend(v1, sel_mainBundle);
  v17 = objc_msgSend(v16, sel_bundleIdentifier);

  if (v17)
  {
    v18 = sub_190A47ADC();
    v20 = v19;

    v21 = sub_1908B51AC();
    swift_retain();
    swift_bridgeObjectRetain();
    v22 = sub_1909CD124(v21, v18, v20, v0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    Result = (objc_class *)type metadata accessor for DescriptorFetchResult();
    v24 = (char *)objc_allocWithZone(Result);
    v25 = sub_190954928(v8);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v24[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_widgetDescriptors] = v25;
    *(_QWORD *)&v24[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_activityDescriptors] = v22;
    *(_QWORD *)&v24[OBJC_IVAR____TtC9WidgetKit21DescriptorFetchResult_controlDescriptors] = v15;

    v26.receiver = v24;
    v26.super_class = Result;
    objc_msgSendSuper2(&v26, sel_init);
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t type metadata accessor for DescriptorFetchResult()
{
  return objc_opt_self();
}

id sub_1908B2DEC(uint64_t a1, unint64_t a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  id v8;
  int v9;
  unint64_t v10;
  unsigned int v11;
  unint64_t v12;
  int v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  id v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  id v53;
  _QWORD *v55;
  void *v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v62;
  id v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  uint64_t v70;

  v70 = *MEMORY[0x1E0C80C00];
  v63 = (id)MEMORY[0x1940115A8]();
  v64 = v2;
  v65 = v3;
  v66 = v4;
  v67 = v5;
  v68 = v6;
  v69 = v7;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D016E0]), sel_initWithAuditToken_, &v63);
  v9 = objc_msgSend(v8, sel_pid);

  if (v9 < 1)
    return 0;
  v10 = MEMORY[0x1940115A8]();
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = HIDWORD(v10);
  v19 = HIDWORD(v12);
  v20 = HIDWORD(v14);
  v21 = HIDWORD(v16);
  v22 = objc_allocWithZone(MEMORY[0x1E0D016E0]);
  v63 = (id)__PAIR64__(v18, v11);
  v64 = v13;
  v65 = v19;
  v66 = v15;
  v67 = v20;
  v68 = v17;
  v69 = v21;
  v23 = objc_msgSend(v22, sel_initWithAuditToken_, &v63);
  v24 = objc_msgSend(v23, sel_pid);

  v25 = objc_msgSend((id)objc_opt_self(), sel_targetWithPid_, v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = (void *)sub_190A47AC4();
  swift_bridgeObjectRelease();
  v27 = (void *)sub_190A47AC4();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend((id)objc_opt_self(), sel_attributeWithDomain_name_, v26, v27);

  sub_1908B3C54();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6BDD0);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_190A4B0F0;
  *(_QWORD *)(v29 + 32) = v28;
  v63 = (id)v29;
  sub_190A47C74();
  v30 = objc_allocWithZone(MEMORY[0x1E0D87C98]);
  v31 = v25;
  v59 = v28;
  v32 = (void *)sub_190A47AC4();
  swift_bridgeObjectRelease();
  sub_1908AB890(0, &qword_1ECF68088);
  v33 = (void *)sub_190A47C50();
  swift_bridgeObjectRelease();
  v34 = objc_msgSend(v30, sel_initWithExplanation_target_attributes_, v32, v31, v33);

  v63 = 0;
  if (!objc_msgSend(v34, sel_acquireWithError_, &v63))
  {
    v43 = v63;
    v44 = (void *)sub_190A45F58();

    swift_willThrow();
    if (qword_1EE1E5E28 != -1)
      swift_once();
    v45 = sub_190A465A0();
    __swift_project_value_buffer(v45, (uint64_t)qword_1EE1FD688);
    swift_bridgeObjectRetain();
    swift_retain();
    v46 = v44;
    swift_bridgeObjectRetain();
    swift_retain();
    v47 = v44;
    v48 = sub_190A46588();
    v49 = sub_190A47F50();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = swift_slowAlloc();
      v55 = (_QWORD *)swift_slowAlloc();
      v57 = (void *)swift_slowAlloc();
      v63 = v57;
      *(_DWORD *)v50 = 136446722;
      v51 = sub_1908B3C54();
      sub_1908B35C4(v51, v52, (uint64_t *)&v63);
      sub_190A48178();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1908B35C4(a1, a2, (uint64_t *)&v63);
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v50 + 22) = 2114;
      v53 = v44;
      v62 = _swift_stdlib_bridgeErrorToNSError();
      sub_190A48178();
      *v55 = v62;

      _os_log_impl(&dword_1908A7000, v48, v49, "%{public}s unable to acquire %{public}s error: %{public}@", (uint8_t *)v50, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
      swift_arrayDestroy();
      MEMORY[0x194014398](v55, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x194014398](v57, -1, -1);
      MEMORY[0x194014398](v50, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();

    }
    return 0;
  }
  v58 = v31;
  v35 = qword_1EE1E5E28;
  v36 = v63;
  if (v35 != -1)
    swift_once();
  v37 = sub_190A465A0();
  __swift_project_value_buffer(v37, (uint64_t)qword_1EE1FD688);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v38 = sub_190A46588();
  v39 = sub_190A47F68();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = swift_slowAlloc();
    v56 = (void *)swift_slowAlloc();
    v63 = v56;
    *(_DWORD *)v40 = 136446466;
    v41 = sub_1908B3C54();
    sub_1908B35C4(v41, v42, (uint64_t *)&v63);
    sub_190A48178();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_1908B35C4(a1, a2, (uint64_t *)&v63);
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1908A7000, v38, v39, "%{public}s acquired %{public}s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x194014398](v56, -1, -1);
    MEMORY[0x194014398](v40, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();

  }
  return v34;
}

uint64_t sub_1908B35C4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1908B36D0(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1908B3694((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1908B3694((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1908B3694(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1908B36D0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_190A48184();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1909CC9C4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_190A4834C();
  if (!v8)
  {
    sub_190A4843C();
    __break(1u);
LABEL_17:
    result = sub_190A484CC();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t objectdestroyTm(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1(0);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v4 = (v3 + 16) & ~v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB960);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_190A46C30();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v1 + v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_19090D1C4(*(_QWORD *)(v1 + v4 + *(int *)(v2 + 20)), *(_QWORD *)(v1 + v4 + *(int *)(v2 + 20) + 8), *(_BYTE *)(v1 + v4 + *(int *)(v2 + 20) + 16));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0(void (*a1)(_QWORD), void (*a2)(_QWORD), void (*a3)(_QWORD))
{
  _QWORD *v3;

  a1(v3[2]);
  a2(v3[4]);
  a3(v3[6]);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (int *)type metadata accessor for _ClockHandRotationEffect(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  sub_1908CE654(*(_QWORD *)v3, *(_BYTE *)(v3 + 8));
  sub_1908CE654(*(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24));
  v4 = v3 + v1[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69A10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_190A46084();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v7 = v3 + v1[8];
  v8 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF680E0);
  swift_release();
  swift_release();
  v9 = v3 + v1[12];
  v10 = sub_190A461BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x194014284]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x194014290](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1908B3C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78]();
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession____lazy_storage___loggingIdentifier);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession____lazy_storage___loggingIdentifier + 8))
  {
    v6 = *v5;
  }
  else
  {
    v7 = v0 + OBJC_IVAR____TtC9WidgetKit23_WidgetExtensionSession_sessionUUID;
    sub_190A4642C();
    sub_190A462F4();
    v6 = static WidgetExtensionSession.makeLoggingIdentifier(sessionIdentifier:extensionBundleIdentifier:deviceIdentifier:)(v7, (uint64_t)v4, 0, 0);
    v9 = v8;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    *v5 = v6;
    v5[1] = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1940141E8](a1, v6, a5);
}

id sub_1908B3D9C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t inited;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  void *v26;
  uint64_t (*v27)();
  uint64_t v28;

  v1 = v0;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v0 + 24) + 16));
  v2 = *(void **)(v0 + 32);
  if (v2)
  {
    v3 = *(id *)(v0 + 32);
  }
  else
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v4 = sub_190A465A0();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ECF6D988);
    v5 = sub_190A46588();
    v6 = sub_190A47F68();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1908A7000, v5, v6, "Creating WidgetCenter connection.", v7, 2u);
      MEMORY[0x194014398](v7, -1, -1);
    }

    v8 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
    v9 = (void *)sub_190A47AC4();
    v10 = objc_msgSend(v8, sel_initWithMachServiceName_options_, v9, 0);

    v11 = (void *)objc_opt_self();
    v12 = objc_msgSend(v11, sel_interfaceWithProtocol_, &unk_1EE2051D8);
    sub_1908AB844();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_190A4A360;
    *(_QWORD *)(inited + 32) = sub_1908AB890(0, (unint64_t *)&unk_1ECF6D3B0);
    *(_QWORD *)(inited + 40) = sub_1908AB890(0, (unint64_t *)&qword_1ECF6BF60);
    NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(inited);
    swift_setDeallocating();
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
    objc_msgSend(v12, sel_setClass_forSelector_argumentIndex_ofReply_, swift_getObjCClassFromMetadata(), sel__loadCurrentConfigurations_, 1, 1);
    objc_msgSend(v10, sel_setRemoteObjectInterface_, v12);

    v14 = objc_msgSend(v11, sel_interfaceWithProtocol_, &unk_1EE205238);
    objc_msgSend(v10, sel_setExportedInterface_, v14);

    v15 = swift_allocObject();
    swift_weakInit();
    v27 = sub_190960E30;
    v28 = v15;
    v16 = MEMORY[0x1E0C809B0];
    v23 = MEMORY[0x1E0C809B0];
    v24 = 1107296256;
    v25 = sub_1908A9D98;
    v26 = &block_descriptor_1;
    v17 = _Block_copy(&v23);
    swift_release();
    objc_msgSend(v10, sel_setInterruptionHandler_, v17);
    _Block_release(v17);
    v18 = swift_allocObject();
    swift_weakInit();
    v27 = sub_190960E50;
    v28 = v18;
    v23 = v16;
    v24 = 1107296256;
    v25 = sub_1908A9D98;
    v26 = &block_descriptor_11;
    v19 = _Block_copy(&v23);
    swift_release();
    objc_msgSend(v10, sel_setInvalidationHandler_, v19);
    _Block_release(v19);
    objc_msgSend(v10, sel_resume);
    v20 = *(void **)(v1 + 32);
    *(_QWORD *)(v1 + 32) = v10;
    v3 = v10;

    v2 = 0;
  }
  v21 = v2;
  return v3;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

id static WidgetCenter.configuredHostXPCInterface.getter()
{
  id v0;
  uint64_t inited;

  v0 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_1EE2051D8);
  sub_1908AB844();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190A4A360;
  *(_QWORD *)(inited + 32) = sub_1908AB890(0, (unint64_t *)&unk_1ECF6D3B0);
  *(_QWORD *)(inited + 40) = sub_1908AB890(0, (unint64_t *)&qword_1ECF6BF60);
  NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(inited);
  swift_setDeallocating();
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
  objc_msgSend(v0, sel_setClass_forSelector_argumentIndex_ofReply_, swift_getObjCClassFromMetadata(), sel__loadCurrentConfigurations_, 1, 1);
  return v0;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1908B4324(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C8A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1908B4364(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD *);
  _QWORD v6[2];
  char v7;

  v4 = *(uint64_t (**)(_QWORD *))(v3 + 16);
  v6[0] = a1;
  v6[1] = a2;
  v7 = a3 & 1;
  return v4(v6);
}

unint64_t sub_1908B439C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_190A481F0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      sub_190A465D0();
      sub_1908AA2F4(&qword_1EE1E5DD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
      do
      {
        v10 = sub_190A47A40() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 >= v9 && v2 >= v10)
          {
LABEL_16:
            v13 = *(_QWORD *)(v3 + 48);
            v14 = (_QWORD *)(v13 + 8 * v2);
            v15 = (_QWORD *)(v13 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v14 >= v15 + 1))
            {
              *v14 = *v15;
              v2 = v6;
            }
          }
        }
        else if (v10 >= v9 || v2 >= v10)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1908B4570()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1E6A90;
  if (!qword_1EE1E6A90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6A98);
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEBF78], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1E6A90);
  }
  return result;
}

unint64_t sub_1908B45BC()
{
  unint64_t result;

  result = qword_1ECF6D3A0;
  if (!qword_1ECF6D3A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECF6D3A0);
  }
  return result;
}

int64_t sub_1908B45F8(int64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v2 >= result)
      v3 = result;
    else
      v3 = *(_QWORD *)(a2 + 16);
    if (!result)
      v3 = 0;
    if (v2 >= v3)
      return a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_1908B463C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1908B467C(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

unint64_t sub_1908B468C()
{
  unint64_t result;

  result = qword_1EE1E6A58;
  if (!qword_1EE1E6A58)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEBB28], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EE1E6A58);
  }
  return result;
}

unint64_t sub_1908B46D0()
{
  unint64_t result;

  result = qword_1EE1E6A48;
  if (!qword_1EE1E6A48)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEA9A8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EE1E6A48);
  }
  return result;
}

uint64_t sub_1908B4714(uint64_t a1)
{
  return ((uint64_t (*)(void))((char *)sub_1908B4734 + 4 * byte_190A58EE7[*(unsigned __int8 *)(a1 + 8)]))();
}

double sub_1908B4734@<D0>(uint64_t a1@<X8>)
{
  return fmax((double)a1 + 5.0, 10.0);
}

uint64_t sub_1908B479C()
{
  return sub_1908AA860();
}

uint64_t sub_1908B47BC()
{
  sub_1908A9EDC();
  return swift_deallocClassInstance();
}

void type metadata accessor for IntentTimelineEntryProvider()
{
  JUMPOUT(0x1940141E8);
}

uint64_t sub_1908B47EC(uint64_t a1)
{
  destroy for ExtensionSessionOptions(a1);
  return a1;
}

ValueMetadata *type metadata accessor for ExtensionSessionOptions()
{
  return &type metadata for ExtensionSessionOptions;
}

uint64_t ExtensionSessionOptions.init(requiresUserInteractivePriority:suspensionObserver:sessionType:shouldTakeExtensionAssertion:environmentVariables:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, char *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v9;
  uint64_t result;

  v9 = *a3;
  *(_BYTE *)a6 = a1;
  result = sub_1908B4BD4(a2, a6 + 8, &qword_1EE1E5DB0);
  *(_BYTE *)(a6 + 48) = v9;
  *(_BYTE *)(a6 + 49) = a4;
  *(_QWORD *)(a6 + 56) = a5;
  return result;
}

void sub_1908B4884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_190A45F4C();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

void sub_1908B48DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1908B4884(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1908B48F4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t DescriptorFetchResult.activityDescriptors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for IntentRecommendation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IntentRecommendation);
}

_BYTE *sub_1908B492C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ExtensionSessionType()
{
  return &type metadata for ExtensionSessionType;
}

void sub_1908B4948()
{
  uint64_t v0;

  sub_1908AA5C0(*(_QWORD *)(v0 + 56));
}

uint64_t sub_1908B49AC()
{
  uint64_t v0;

  return sub_1908B49BC((void (**)(_QWORD *__return_ptr))(v0 + 40));
}

uint64_t sub_1908B49BC(void (**a1)(_QWORD *__return_ptr))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  (*a1)(v5);
  v1 = v6;
  v2 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v3;
}

_BYTE *sub_1908B4A28(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

uint64_t sub_1908B4A30(unsigned __int8 *a1)
{
  return *a1;
}

BOOL sub_1908B4A38(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return -25 * (unint64_t)*a1 + 100 < -25 * (unint64_t)*a2 + 100;
}

uint64_t type metadata accessor for ViewSource(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1ECF6D0E8);
}

uint64_t sub_1908B4A74()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetCenter();
  v0 = swift_allocObject();
  result = sub_1908ADFBC();
  qword_1ECF6AD40 = v0;
  return result;
}

uint64_t dispatch thunk of WidgetCenter.getCurrentConfigurations(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_1908B4AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_190A47D7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v2;
  v9[5] = a1;
  v9[6] = a2;
  swift_retain();
  swift_retain();
  sub_19095ADDC((uint64_t)v7, (uint64_t)&unk_1EE1ED990, (uint64_t)v9);
  return swift_release();
}

uint64_t dispatch thunk of WidgetCenter.reloadAllTimelines()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t sub_1908B4BA0()
{
  return sub_1908AED78((void (*)(uint64_t))sub_1908AEDD4);
}

ValueMetadata *type metadata accessor for WidgetInfo()
{
  return &type metadata for WidgetInfo;
}

uint64_t sub_1908B4BBC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1908B4BD4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1908B4C18()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_1908B4C4C(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_1908B4C5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_1908B4714(a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void WidgetExtensionSessionOperation.description.getter()
{
  __asm { BR              X10 }
}

unint64_t sub_1908B4CB8()
{
  sub_190A48298();
  swift_bridgeObjectRelease();
  sub_190A4867C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  return 0xD000000000000014;
}

void sub_1908B4E54()
{
  JUMPOUT(0x1908B4E44);
}

void sub_1908B4E90()
{
  JUMPOUT(0x1908B4E44);
}

void sub_1908B4EB4()
{
  JUMPOUT(0x1908B4E44);
}

void sub_1908B4ED8()
{
  JUMPOUT(0x1908B4E44);
}

void sub_1908B4EF0()
{
  JUMPOUT(0x1908B4E44);
}

void sub_1908B4F08()
{
  JUMPOUT(0x1908B4E44);
}

void sub_1908B4F28()
{
  JUMPOUT(0x1908B4E44);
}

void sub_1908B4F40()
{
  JUMPOUT(0x1908B4E44);
}

void sub_1908B4F64()
{
  JUMPOUT(0x1908B4E44);
}

void sub_1908B4F88()
{
  JUMPOUT(0x1908B4F9CLL);
}

uint64_t type metadata accessor for WidgetExtensionSessionWatchdog()
{
  return objc_opt_self();
}

uint64_t WidgetExtensionSessionFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WidgetExtensionSessionFactory()
{
  return objc_opt_self();
}

void sub_1908B4FF8()
{
  sub_1908B5004("Connection to extension process was invalidated: %{public}s");
}

void sub_1908B5004(const char *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_190A46438() - 8) + 80);
  sub_1908AB8DC(v1 + ((v3 + 16) & ~v3), a1);
}

void sub_1908B5044(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_190A460CC() - 8) + 80);
  sub_1908AC380(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(char **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), (char *)(v1 + 64), *(_QWORD *)(v1 + 128), *(void **)(v1 + 136), v1 + ((v3 + 144) & ~v3));
}

void sub_1908B50A8()
{
  uint64_t v0;

  sub_1908B50B0(*(void (**)(void))(v0 + 16));
}

void sub_1908B50B0(void (*a1)(void))
{
  void *v2;

  if ((_QWORD)xmmword_1ECF6D940)
  {
    v2 = (void *)(*(uint64_t (**)(_QWORD))(qword_1ECF6D950 + 32))(*(_QWORD *)xmmword_1ECF6D940);
    a1();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1908B5150(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1908B518C()
{
  sub_1908B2B2C();
}

uint64_t sub_1908B51AC()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 48))
  {
    v1 = *(_QWORD *)(v0 + 48);
  }
  else
  {
    v1 = sub_1909C9DD0();
    *(_QWORD *)(v0 + 48) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1908B5208()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 40))
  {
    v1 = *(_QWORD *)(v0 + 40);
  }
  else
  {
    v1 = sub_1909C9ACC();
    *(_QWORD *)(v0 + 40) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1908B5264(uint64_t a1, uint64_t a2, _QWORD *a3, id *a4)
{
  if (*a3 != -1)
    swift_once();
  return *a4;
}

uint64_t sub_1908B52BC()
{
  sub_1908AE618();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _WidgetExtensionSession()
{
  uint64_t result;

  result = qword_1EE1E5E00;
  if (!qword_1EE1E5E00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1908B531C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1908ACED0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1908B5330@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1909DE644(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1908B5338()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), 0);
}

uint64_t sub_1908B5364(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_1908B5378(uint64_t a1)
{
  return sub_1908B5364(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1908B2918);
}

void sub_1908B5384(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1908AB260(a1, a2, a3, *(void **)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_1908B539C(uint64_t a1)
{
  return sub_1908AB358(a1, qword_1ECF6D988);
}

uint64_t sub_1908B53B8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1908B53FC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t getWKSystemVersionSDK_AzulE()
{
  return 0x7E50301FFFFFFFFLL;
}

uint64_t getWKSystemVersionSDK_Sky()
{
  return 0x7E50901FFFFFFFFLL;
}

uint64_t getWKSystemVersionSDK_Sydney()
{
  return 0x7E60901FFFFFFFFLL;
}

uint64_t getWKSystemVersionSDK_SydneyC()
{
  return 0x7E62100FFFFFFFFLL;
}

uint64_t getWKSystemVersionSDK_Dawn()
{
  return 0x7E70901FFFFFFFFLL;
}

uint64_t getWKSystemVersionSDK_DawnC()
{
  return 0x7E70D01FFFFFFFFLL;
}

uint64_t getWKSystemVersionSDK_Crystal()
{
  return 0x7E80000FFFFFFFFLL;
}

id WidgetViewCollection.environment.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v3;

  v3 = *(id *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v3;
  swift_retain();
  return v3;
}

uint64_t WidgetViewCollection.originatingBundle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1908AF5D8(v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_originatingBundle, a1, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
}

id WidgetViewCollection.widget.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_widget);
}

uint64_t WidgetViewCollection.reloadPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1908AF5D8(v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_reloadPolicy, a1, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
}

uint64_t WidgetViewCollection.requiresReload.getter()
{
  return 0;
}

uint64_t WidgetViewCollection.dateRange.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C4F0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v13[-v7];
  v9 = v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection____lazy_storage___dateRange;
  swift_beginAccess();
  sub_1908AAA48(v9, (uint64_t)v8, &qword_1ECF6C4F0);
  v10 = sub_190A45E68();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_1908AA544((uint64_t)v8, &qword_1ECF6C4F0);
  sub_1908B59F8(a1);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_1908B5DE8((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_1908B57DC@<X0>(uint64_t a1@<X8>)
{
  return WidgetViewCollection.dateRange.getter(a1);
}

uint64_t sub_1908B57FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C4F0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_190A45E68();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v11 = *a2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v6, v10, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v12 = v11 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection____lazy_storage___dateRange;
  swift_beginAccess();
  sub_1908B5DE8((uint64_t)v6, v12);
  return swift_endAccess();
}

uint64_t WidgetViewCollection.dateRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C4F0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190A45E68();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v5, a1, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  v8 = v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection____lazy_storage___dateRange;
  swift_beginAccess();
  sub_1908B5DE8((uint64_t)v5, v8);
  return swift_endAccess();
}

uint64_t sub_1908B59F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  void (*v32)(char *, uint64_t);
  void (*v34)(char *, char *, uint64_t);
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v39 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v34 - v5;
  v7 = sub_190A46084();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v38 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v34 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v37 = (char *)&v34 - v15;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v34 - v16;
  v18 = swift_bridgeObjectRetain();
  v19 = sub_1908B62DC(v18, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry, (uint64_t)&protocol witness table for ViewableTimelineEntry);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v19 + 16))
  {
    v42 = 0;
    v40 = 0u;
    v41 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1908BBDC8(v19 + 32, (uint64_t)&v40);
  swift_bridgeObjectRelease();
  v20 = *((_QWORD *)&v41 + 1);
  if (!*((_QWORD *)&v41 + 1))
  {
LABEL_7:
    sub_1908AA544((uint64_t)&v40, (uint64_t *)&unk_1EE1EC7A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_14;
  }
  v36 = a1;
  v21 = v42;
  __swift_project_boxed_opaque_existential_1(&v40, *((uint64_t *)&v41 + 1));
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v22(v6, 0, 1, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v23(v6, 1, v7) != 1)
  {
    v34 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v35 = v22;
    v34(v17, v6, v7);
    v24 = swift_bridgeObjectRetain();
    v25 = sub_1908B62DC(v24, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry, (uint64_t)&protocol witness table for ViewableTimelineEntry);
    swift_bridgeObjectRelease();
    v26 = *(_QWORD *)(v25 + 16);
    if (v26)
    {
      sub_1908BBDC8(v25 + 40 * v26 - 8, (uint64_t)&v40);
    }
    else
    {
      v42 = 0;
      v40 = 0u;
      v41 = 0u;
    }
    v27 = v39;
    swift_bridgeObjectRelease();
    v28 = *((_QWORD *)&v41 + 1);
    if (*((_QWORD *)&v41 + 1))
    {
      v29 = v42;
      __swift_project_boxed_opaque_existential_1(&v40, *((uint64_t *)&v41 + 1));
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
      v35(v27, 0, 1, v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
      if (v23(v27, 1, v7) != 1)
      {
        v30 = v37;
        v34(v37, v27, v7);
        v31 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
        v31(v13, v17, v7);
        v31(v38, v30, v7);
        sub_190A45E44();
        v32 = *(void (**)(char *, uint64_t))(v8 + 8);
        v32(v30, v7);
        return ((uint64_t (*)(char *, uint64_t))v32)(v17, v7);
      }
    }
    else
    {
      sub_1908AA544((uint64_t)&v40, (uint64_t *)&unk_1EE1EC7A0);
      v35(v27, 1, 1, v7);
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
    v6 = v27;
  }
LABEL_14:
  sub_1908AA544((uint64_t)v6, &qword_1ECF6C2F8);
  sub_190A46078();
  return sub_190A45E50();
}

uint64_t sub_1908B5DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C4F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t WidgetViewCollection.entries.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_1908B62DC(v0, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry, (uint64_t)&protocol witness table for ViewableTimelineEntry);
  swift_bridgeObjectRelease();
  return v1;
}

void (*WidgetViewCollection.dateRange.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C4F0);
  v3[7] = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v5 = sub_190A45E68();
  v3[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[9] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[10] = malloc(v7);
  v8 = malloc(v7);
  v3[11] = v8;
  WidgetViewCollection.dateRange.getter((uint64_t)v8);
  return sub_1908B5F1C;
}

void sub_1908B5F1C(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD **)a1;
  v4 = *(void **)(*(_QWORD *)a1 + 80);
  v3 = *(void **)(*(_QWORD *)a1 + 88);
  if ((a2 & 1) != 0)
  {
    v5 = v2[8];
    v6 = v2[9];
    v8 = v2[6];
    v7 = (void *)v2[7];
    (*(void (**)(_QWORD, _QWORD, uint64_t))(v6 + 16))(v2[10], v2[11], v5);
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v7, v4, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v7, 0, 1, v5);
    v9 = v8 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection____lazy_storage___dateRange;
    swift_beginAccess();
    sub_1908B5DE8((uint64_t)v7, v9);
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v5);
  }
  else
  {
    v10 = v2[8];
    v11 = v2[9];
    v12 = v2[6];
    v7 = (void *)v2[7];
    (*(void (**)(void *, _QWORD, uint64_t))(v11 + 32))(v7, v2[11], v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    v13 = v12 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection____lazy_storage___dateRange;
    swift_beginAccess();
    sub_1908B5DE8((uint64_t)v7, v13);
    swift_endAccess();
  }
  free(v3);
  free(v4);
  free(v7);
  free(v2);
}

uint64_t WidgetViewCollection.metrics.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t KeyPath;
  os_unfair_lock_s *v4;
  id v5;
  unint64_t v6;
  uint64_t result;
  id v8;
  id v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(void **)(v0 + 24);
  KeyPath = swift_getKeyPath();
  v4 = *(os_unfair_lock_s **)(v2 + 16);
  swift_retain_n();
  v5 = v1;
  os_unfair_lock_lock(v4);
  v6 = sub_1908B7A84(KeyPath, (unint64_t)&qword_1ECF6CD48, 0x1E0D101F0, (uint64_t *)&unk_1EE1ECD20);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));

  swift_release();
  result = swift_release_n();
  if (!v6)
    goto LABEL_12;
  if (!(v6 >> 62))
  {
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_9:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v10 = sub_190A48484();
  result = swift_bridgeObjectRelease();
  if (!v10)
    goto LABEL_9;
LABEL_4:
  if ((v6 & 0xC000000000000001) != 0)
  {
LABEL_10:
    v8 = (id)MEMORY[0x194013510](0, v6);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = *(id *)(v6 + 32);
LABEL_7:
    v9 = v8;
    swift_bridgeObjectRelease();
    return (uint64_t)v9;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1908B6198@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1908BE014();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_1908B61E4(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  sub_1908BE014();
  v2 = v1;
  return sub_190A46C48();
}

uint64_t WidgetViewCollection.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_creationDate;
  swift_beginAccess();
  v4 = sub_190A46084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void WidgetViewCollection.protectionLevel.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_protectionLevel);
}

uint64_t sub_1908B62B4(uint64_t a1)
{
  return sub_1908B62DC(a1, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry, (uint64_t)&protocol witness table for ViewableTimelineEntry);
}

uint64_t sub_1908B62C8(uint64_t a1)
{
  return sub_1908B62DC(a1, type metadata accessor for WidgetArchivableMetadata.EntryMetadata, (uint64_t)&off_1E2CC1970);
}

uint64_t sub_1908B62DC(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a2(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - v8;
  v10 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1908B8C50(0, v10, 0);
    v11 = v21;
    v12 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v13 = *(_QWORD *)(v7 + 72);
    do
    {
      sub_1908AF5D8(v12, (uint64_t)v9, a2);
      v21 = v11;
      v15 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1908B8C50(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      v19 = v6;
      v20 = a3;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v18);
      sub_1908AF5D8((uint64_t)v9, (uint64_t)boxed_opaque_existential_1, a2);
      *(_QWORD *)(v11 + 16) = v15 + 1;
      sub_1908B4BBC(&v18, v11 + 40 * v15 + 32);
      sub_1908B5150((uint64_t)v9, a2);
      v12 += v13;
      --v10;
    }
    while (v10);
  }
  return v11;
}

uint64_t WidgetViewCollection.copyWithoutRenderData()@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  a1[3] = *v1;
  a1[4] = &protocol witness table for WidgetViewCollection;
  *a1 = v1;
  return swift_retain();
}

uint64_t WidgetViewCollection.__allocating_init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(void *a1, __int128 *a2, _QWORD *a3, uint64_t a4, char a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(void *a1, __int128 *a2, _QWORD *a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  __int128 v24;
  _QWORD *v25;

  v11 = sub_190A46084();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for BundleStub();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *a2;
  v18 = v5 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection____lazy_storage___dateRange;
  v19 = sub_190A45E68();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  BundleStub.init(_:)((uint64_t)objc_msgSend(a1, sel_extensionIdentity), (uint64_t)v17);
  sub_1908BD0B4((uint64_t)v17, v5 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_originatingBundle, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  sub_190A46078();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v5 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_creationDate, v14, v11);
  if ((a5 & 1) != 0)
  {
    v25 = a3;
    swift_bridgeObjectRetain();
    sub_1908B9D24(&v25);
    swift_bridgeObjectRelease();
    v20 = v25;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C478);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = 0;
    a3 = (_QWORD *)sub_1908BB8E4(v21, (uint64_t)sub_1909133EC, 0);
    swift_release();
  }
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_viewableEntries) = a3;
  *(_OWORD *)(v5 + 16) = v24;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_widget) = a1;
  sub_1908AF5D8(a4, v5 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_reloadPolicy, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  swift_beginAccess();
  v22 = byte_1ECF6C560;
  sub_1908B5150(a4, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  *(_BYTE *)(v5 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_protectionLevel) = v22;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_requiresReload) = 0;
  return v5;
}

uint64_t WidgetViewCollection.viewableEntry(for:in:ignoringEnvironmentKeys:)@<X0>(uint64_t a1@<X1>, int64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = v3;
  v9 = *(_QWORD *)(v3 + 16);
  v8 = *(void **)(v3 + 24);
  v10 = *(os_unfair_lock_s **)(v9 + 16);
  swift_retain_n();
  v11 = v8;
  os_unfair_lock_lock(v10);
  v12 = &v11[OBJC_IVAR___CHKWidgetEnvironment_tuples];
  swift_beginAccess();
  v13 = *(_QWORD *)(*(_QWORD *)v12 + 16);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  swift_release();
  if (v13)
  {
    WidgetEnvironment.findEnumeratedIndex(matching:ignoring:)(a1, a2);
    v15 = v14;

    v16 = swift_release();
    if ((v15 & 1) != 0)
    {
      v17 = type metadata accessor for ViewableTimelineEntry();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a3, 1, 1, v17);
    }
  }
  else
  {

    v16 = swift_release();
  }
  v19 = *(_QWORD *)(v4 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_viewableEntries);
  MEMORY[0x1E0C80A78](v16);
  swift_bridgeObjectRetain();
  sub_1908B688C((uint64_t (*)(uint64_t))sub_1908BBD58, v19, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1908B688C@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    v8 = type metadata accessor for ViewableTimelineEntry();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(_QWORD *)(v9 + 72);
    v11 = a2
        + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
        + v10 * (v5 - 1);
    v12 = -v10;
    while (1)
    {
      result = a1(v11);
      if (v3)
        break;
      if ((result & 1) != 0)
      {
        sub_1908AF5D8(v11, a3, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a3, 0, 1, v8);
      }
      v11 += v12;
      if (!--v5)
        goto LABEL_6;
    }
  }
  else
  {
LABEL_6:
    v14 = type metadata accessor for ViewableTimelineEntry();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a3, 1, 1, v14);
  }
  return result;
}

uint64_t WidgetViewCollection.drop(before:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  v2 = OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_viewableEntries;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_viewableEntries);
  v15[2] = a1;
  swift_bridgeObjectRetain();
  v4 = sub_1908B6AB4((uint64_t (*)(char *))sub_1908BE164, (uint64_t)v15, v3);
  v6 = v5;
  v8 = v7;
  v10 = v9;
  if ((v9 & 1) == 0)
    goto LABEL_2;
  sub_190A48700();
  swift_unknownObjectRetain_n();
  v12 = swift_dynamicCastClass();
  if (!v12)
  {
    swift_unknownObjectRelease();
    v12 = MEMORY[0x1E0DEE9D8];
  }
  v13 = *(_QWORD *)(v12 + 16);
  swift_release();
  if (__OFSUB__(v10 >> 1, v8))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v13 != (v10 >> 1) - v8)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    v11 = sub_1908B86E4(v4, v6, v8, v10);
    goto LABEL_9;
  }
  v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
  }
LABEL_9:
  swift_unknownObjectRelease();
  *(_QWORD *)(v1 + v2) = v11;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1908B6AB4(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *);

  v19 = a1;
  v5 = type metadata accessor for ViewableTimelineEntry();
  result = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  if (v10)
  {
    v11 = 0;
    v12 = *(unsigned __int8 *)(v7 + 80);
    v17 = v7;
    v18 = a3;
    v13 = a3 + ((v12 + 32) & ~v12);
    a3 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_1908AF5D8(v13, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
      v14 = v19(v9);
      if (v3)
      {
        swift_bridgeObjectRelease();
        sub_1908B5150((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
        return a3;
      }
      v15 = v14;
      result = sub_1908B5150((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
      if ((v15 & 1) == 0)
        break;
      ++v11;
      v13 += a3;
      if (v10 == v11)
      {
        v11 = v10;
LABEL_10:
        a3 = v18;
        v16 = *(_QWORD *)(v18 + 16);
        goto LABEL_11;
      }
    }
    if (v10 >= v11)
      goto LABEL_10;
    __break(1u);
  }
  else
  {
    v16 = 0;
    v11 = 0;
LABEL_11:
    if (v16 >= v11 && v16 >= v10)
      return a3;
  }
  __break(1u);
  return result;
}

uint64_t WidgetViewCollection.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  sub_1908B5150(v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_originatingBundle, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);

  sub_1908B5150(v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_reloadPolicy, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  sub_1908AA544(v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection____lazy_storage___dateRange, &qword_1ECF6C4F0);
  v1 = v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_creationDate;
  v2 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WidgetViewCollection.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  sub_1908B5150(v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_originatingBundle, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);

  sub_1908B5150(v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_reloadPolicy, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  sub_1908AA544(v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection____lazy_storage___dateRange, &qword_1ECF6C4F0);
  v1 = v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_creationDate;
  v2 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1908B6DB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_190A465DC();
  *a1 = result;
  return result;
}

uint64_t sub_1908B6DD8@<X0>(_QWORD *a1@<X8>)
{
  return WidgetViewCollection.enumeratedViewableEntriesAndEnvironments()(a1);
}

uint64_t WidgetViewCollection.enumeratedViewableEntriesAndEnvironments()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v3 = sub_190A46C30();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_viewableEntries);
  v12 = *(_QWORD *)(v1 + 16);
  v11 = *(void **)(v1 + 24);
  swift_bridgeObjectRetain_n();
  swift_retain();
  v13 = v11;
  sub_190A46C24();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(&v9[*(int *)(v7 + 20)], v6, v3);
  *(_QWORD *)v9 = v12;
  *((_QWORD *)v9 + 1) = v13;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v14 = sub_1908BAE48((uint64_t)v9);
  sub_1908B5150((uint64_t)v9, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  result = swift_bridgeObjectRelease();
  *a1 = v10;
  a1[1] = v14;
  return result;
}

uint64_t sub_1908B6F34@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1908AF5D8(*v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_originatingBundle, a1, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
}

id sub_1908B6F64()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_widget);
}

uint64_t sub_1908B6F78()
{
  return WidgetViewCollection.metrics.getter();
}

id sub_1908B6F98@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v3;

  v3 = *(id *)(*(_QWORD *)v1 + 24);
  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  a1[1] = v3;
  swift_retain();
  return v3;
}

uint64_t sub_1908B6FC8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_creationDate;
  swift_beginAccess();
  v4 = sub_190A46084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1908B7030@<X0>(uint64_t a1@<X8>)
{
  return WidgetViewCollection.dateRange.getter(a1);
}

uint64_t sub_1908B7050()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_1908B62DC(v0, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry, (uint64_t)&protocol witness table for ViewableTimelineEntry);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1908B70A4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1908AF5D8(*v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_reloadPolicy, a1, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
}

void sub_1908B70D4(_BYTE *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *(_BYTE *)(*v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_protectionLevel);
}

uint64_t sub_1908B70EC()
{
  return 0;
}

uint64_t sub_1908B70F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;

  v4 = *v3;
  a3[3] = a1;
  a3[4] = a2;
  *a3 = v4;
  return swift_retain();
}

uint64_t sub_1908B7108@<X0>(uint64_t a1@<X1>, int64_t a2@<X2>, uint64_t a3@<X8>)
{
  return WidgetViewCollection.viewableEntry(for:in:ignoringEnvironmentKeys:)(a1, a2, a3);
}

uint64_t WidgetViewCollection.description.getter()
{
  uint64_t v1;

  v1 = sub_190A48880();
  sub_190A47B3C();
  sub_1908BBD84();
  sub_190A47B78();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  return v1;
}

uint64_t sub_1908B71BC()
{
  return WidgetViewCollection.description.getter();
}

uint64_t WidgetViewCollection.debugDescription.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  os_unfair_lock_s *v27;
  id v28;
  _QWORD v30[2];
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v2 = *v0;
  v3 = sub_190A46084();
  v32 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1908B62DC(v6, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry, (uint64_t)&protocol witness table for ViewableTimelineEntry);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v30[1] = v2;
    v31 = v0;
    v34 = MEMORY[0x1E0DEE9D8];
    sub_1908B8C6C(0, v8, 0);
    v30[0] = v7;
    v9 = v7 + 32;
    do
    {
      sub_1908BBDC8(v9, (uint64_t)v36);
      v10 = v37;
      v11 = v38;
      __swift_project_boxed_opaque_existential_1(v36, v37);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
      if (qword_1EE1EC4D0 != -1)
        swift_once();
      v12 = (id)qword_1EE1ED260;
      v13 = (void *)sub_190A46054();
      v14 = objc_msgSend(v12, sel_stringFromDate_, v13, v30[0]);

      v15 = sub_190A47ADC();
      v17 = v16;

      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
      v18 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1908B8C6C(0, *(_QWORD *)(v18 + 16) + 1, 1);
        v18 = v34;
      }
      v20 = *(_QWORD *)(v18 + 16);
      v19 = *(_QWORD *)(v18 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1908B8C6C(v19 > 1, v20 + 1, 1);
        v18 = v34;
      }
      *(_QWORD *)(v18 + 16) = v20 + 1;
      v21 = v18 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v15;
      *(_QWORD *)(v21 + 40) = v17;
      v9 += 40;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    v1 = v31;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x1E0DEE9D8];
  }
  v36[0] = v18;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
  sub_1908AF598((unint64_t *)&qword_1EE1EAE30, (uint64_t *)&unk_1ECF6CD08, MEMORY[0x1E0DEAF20]);
  sub_190A47A58();
  swift_bridgeObjectRelease();
  v36[0] = 0;
  v36[1] = 0xE000000000000000;
  sub_190A48298();
  v34 = sub_190A48880();
  v35 = v22;
  sub_190A47B3C();
  v33 = v1;
  sub_1908BBD84();
  sub_190A47B78();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v23 = *(id *)((char *)v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_widget);
  v24 = objc_msgSend(v23, sel_description);
  sub_190A47ADC();

  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v26 = v1[2];
  v25 = (void *)v1[3];
  v27 = *(os_unfair_lock_s **)(v26 + 16);
  swift_retain_n();
  v28 = v25;
  os_unfair_lock_lock(v27);
  v34 = 0xD000000000000012;
  v35 = 0x8000000190A5FFB0;
  WidgetEnvironment.Storage.debugDescription.getter();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v26 + 16));
  swift_release();
  sub_190A47B3C();

  swift_release();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  return v36[0];
}

uint64_t sub_1908B7698()
{
  return WidgetViewCollection.debugDescription.getter();
}

uint64_t WidgetViewCollection.makeIterator()()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1908B76DC@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_viewableEntries);
  swift_bridgeObjectRetain();
  result = swift_release();
  *a1 = v3;
  a1[1] = 0;
  return result;
}

uint64_t sub_1908B7724()
{
  return 0;
}

uint64_t sub_1908B772C()
{
  return 2;
}

size_t sub_1908B7734()
{
  uint64_t *v0;
  size_t v1;

  v1 = sub_1908BB678(*v0);
  swift_release();
  return v1;
}

uint64_t sub_1908B7768(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1908B7788(a1, a2, a3);
}

uint64_t sub_1908B7788(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = v3;
  v8 = *(_QWORD *)(v4 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_viewableEntries);
  swift_bridgeObjectRetain();
  result = swift_release();
  if (!a2)
  {
    a3 = 0;
    goto LABEL_11;
  }
  if (!a3)
  {
LABEL_11:
    *a1 = v8;
    a1[1] = a3;
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v10 = *(_QWORD *)(v8 + 16);
    if (v10)
    {
      v11 = 0;
      while (v11 < *(_QWORD *)(v8 + 16))
      {
        v12 = *(_QWORD *)(type metadata accessor for ViewableTimelineEntry() - 8);
        v13 = *(_QWORD *)(v12 + 72);
        result = sub_1908AF5D8(v8+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ v13 * v11, a2, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
        if (a3 - 1 == v11)
          goto LABEL_11;
        a2 += v13;
        if (v10 == ++v11)
          goto LABEL_9;
      }
      __break(1u);
      goto LABEL_13;
    }
LABEL_9:
    a3 = v10;
    goto LABEL_11;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1908B7880()
{
  return sub_190A47BD8();
}

uint64_t sub_1908B78A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v8;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v5 = sub_1908D2C2C(a1);
      if ((v6 & 1) != 0)
      {
        v4 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v5);
        swift_retain();
        return v4;
      }
    }
    return 0;
  }
  swift_retain();
  v3 = sub_190A48424();
  swift_release();
  if (!v3)
    return 0;
  type metadata accessor for WidgetEnvironment.AnyKey();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v4 = v8;
  swift_unknownObjectRelease();
  return v4;
}

void *sub_1908B7978(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  char v7;
  id v8;
  void *v10;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v6 = sub_1908D3A08((uint64_t)a1);
      if ((v7 & 1) != 0)
      {
        v5 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v6);
        v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  v3 = a1;
  v4 = sub_190A48424();

  if (!v4)
    return 0;
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6CD48);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_1908B7A4C(uint64_t a1)
{
  return sub_1908B7A84(a1, (unint64_t)&qword_1ECF6CD48, 0x1E0D101F0, (uint64_t *)&unk_1EE1ECD20);
}

uint64_t sub_1908B7A68(uint64_t a1)
{
  return sub_1908B7A84(a1, (unint64_t)&unk_1ECF6A9A8, 0x1E0D10188, (uint64_t *)&unk_1EE1EC780);
}

uint64_t sub_1908B7A84(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;

  if (qword_1ECF6C8D8 != -1)
    swift_once();
  swift_beginAccess();
  v6 = off_1ECF6CA28;
  v7 = swift_retain();
  v8 = sub_1908B78A0(v7, (uint64_t)v6);
  swift_endAccess();
  v9 = swift_release();
  if (v8)
  {
    v10 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v8 + 16) + 80))(v9);
    v13 = sub_1908EB628(v10, v11, v12);
    swift_bridgeObjectRelease();
    swift_release();
    if (v13)
    {
      swift_retain();
      v14 = sub_1908BC4C0(v13, v8, a2);
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    else
    {
      swift_release();
      return 0;
    }
    return v14;
  }
  else
  {
    sub_190A48298();
    sub_190A47B3C();
    __swift_instantiateConcreteTypeFromMangledName(a4);
    sub_190A483DC();
    result = sub_190A48448();
    __break(1u);
  }
  return result;
}

uint64_t sub_1908B7C64(uint64_t a1)
{
  return sub_1908B7D74(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1908BC8F4, (uint64_t *)&unk_1EE1EC790);
}

uint64_t sub_1908B7C78(uint64_t a1)
{
  return sub_1908B7D74(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1908BCAD0, &qword_1EE1EC748);
}

uint64_t sub_1908B7C8C(uint64_t a1)
{
  return sub_1908B7D74(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1908BCCB8, &qword_1EE1ECD40);
}

uint64_t sub_1908B7CA0(uint64_t a1)
{
  return sub_1908B7D74(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1908BC6E8, (uint64_t *)&unk_1EE1EC710);
}

uint64_t sub_1908B7CB4(uint64_t a1)
{
  return sub_1908B7D74(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1908BCEA4, &qword_1EE1EC6D8);
}

uint64_t sub_1908B7CC8(uint64_t a1)
{
  return sub_1908B7D74(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1908BD13C, (uint64_t *)&unk_1EE1EC6F0);
}

uint64_t sub_1908B7CDC(uint64_t a1)
{
  return sub_1908B7D74(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1908BD34C, (uint64_t *)&unk_1EE1ECD30);
}

uint64_t sub_1908B7CF0(uint64_t a1)
{
  return sub_1908B7D74(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1908BD558, (uint64_t *)&unk_1EE1EC700);
}

uint64_t sub_1908B7D04(uint64_t a1)
{
  return sub_1908B7D74(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1908BD774, (uint64_t *)&unk_1EE1ECD10);
}

uint64_t sub_1908B7D18(uint64_t a1)
{
  return sub_1908B7FAC(a1, &qword_1EE1EB5A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA008], (uint64_t)sub_1908F2DA0, (uint64_t *)&unk_1EE1EC720);
}

uint64_t sub_1908B7D3C(uint64_t a1)
{
  return sub_1908B7FAC(a1, &qword_1ECF6ADD8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDB388], (uint64_t)sub_1908F2DB4, (uint64_t *)&unk_1EE1EC730);
}

uint64_t sub_1908B7D60(uint64_t a1)
{
  return sub_1908B7D74(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1908BDCB4, &qword_1EE1EC740);
}

uint64_t sub_1908B7D74(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t *a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  if (qword_1ECF6C8D8 != -1)
    swift_once();
  swift_beginAccess();
  v5 = off_1ECF6CA28;
  v6 = swift_retain();
  v7 = sub_1908B78A0(v6, (uint64_t)v5);
  swift_endAccess();
  v8 = swift_release();
  if (v7)
  {
    v9 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v7 + 16) + 80))(v8);
    v12 = sub_1908EB628(v9, v10, v11);
    swift_bridgeObjectRelease();
    swift_release();
    if (v12)
    {
      swift_retain();
      v13 = a2(v12, v7);
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    else
    {
      swift_release();
      return 0;
    }
    return v13;
  }
  else
  {
    sub_190A48298();
    sub_190A47B3C();
    __swift_instantiateConcreteTypeFromMangledName(a3);
    sub_190A483DC();
    result = sub_190A48448();
    __break(1u);
  }
  return result;
}

uint64_t sub_1908B7F40(uint64_t a1)
{
  return sub_1908B7FAC(a1, qword_1EE1E6C38, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD8AA8], (uint64_t)sub_1908F2FD8, (uint64_t *)&unk_1EE1EC750);
}

uint64_t sub_1908B7F64(uint64_t a1)
{
  return sub_1908B7FAC(a1, &qword_1EE1EB248, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDB2E0], (uint64_t)sub_1908F2FEC, (uint64_t *)&unk_1EE1EC760);
}

uint64_t sub_1908B7F88(uint64_t a1)
{
  return sub_1908B7FAC(a1, &qword_1EE1EB968, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD86F8], (uint64_t)sub_1908F3000, (uint64_t *)&unk_1EE1EC770);
}

uint64_t sub_1908B7FAC(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD), uint64_t a4, uint64_t *a5)
{
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;

  if (qword_1ECF6C8D8 != -1)
    swift_once();
  swift_beginAccess();
  v9 = off_1ECF6CA28;
  v10 = swift_retain();
  v11 = sub_1908B78A0(v10, (uint64_t)v9);
  swift_endAccess();
  v12 = swift_release();
  if (v11)
  {
    v13 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v11 + 16) + 80))(v12);
    v16 = sub_1908EB628(v13, v14, v15);
    swift_bridgeObjectRelease();
    swift_release();
    if (v16)
    {
      swift_retain();
      v17 = sub_1908BD98C(v16, v11, a2, a3, a4);
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    else
    {
      swift_release();
      return 0;
    }
    return v17;
  }
  else
  {
    sub_190A48298();
    sub_190A47B3C();
    __swift_instantiateConcreteTypeFromMangledName(a5);
    sub_190A483DC();
    result = sub_190A48448();
    __break(1u);
  }
  return result;
}

uint64_t default argument 3 of ControlTemplatePicker.init(options:title:subtitle:renderAsSlider:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

uint64_t default argument 5 of ControlTemplatePicker.init(options:title:subtitle:renderAsSlider:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

uint64_t default argument 6 of ControlTemplatePicker.init(options:title:subtitle:renderAsSlider:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

uint64_t default argument 8 of ControlTemplatePicker.init(options:title:subtitle:renderAsSlider:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

uint64_t default argument 4 of ControlTemplateButton.init(inactive:active:action:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

uint64_t default argument 5 of ControlTemplateButton.init(inactive:active:action:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

uint64_t default argument 7 of ControlTemplateButton.init(inactive:active:action:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

uint64_t default argument 5 of ControlTemplateToggle.init(title:subtitle:on:off:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

uint64_t default argument 8 of ActivityWidgetRequest.init(descriptor:metrics:defaultPayload:fileHandle:environment:isStale:payloadID:archiveVersion:isAlerting:)()
{
  return 0;
}

uint64_t default argument 3 of ExtensionSessionOptions.init(requiresUserInteractivePriority:suspensionObserver:sessionType:shouldTakeExtensionAssertion:environmentVariables:)()
{
  return 1;
}

unint64_t default argument 4 of ExtensionSessionOptions.init(requiresUserInteractivePriority:suspensionObserver:sessionType:shouldTakeExtensionAssertion:environmentVariables:)()
{
  return sub_1908E034C(MEMORY[0x1E0DEE9D8]);
}

uint64_t default argument 1 of static WidgetExtensionSessionFactory.makeSession(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:)()
{
  return 0;
}

uint64_t default argument 1 of static WidgetExtensionSessionFactory.makeSessionAsync(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:completion:)()
{
  return 0;
}

uint64_t default argument 1 of static WidgetExtensionSessionFactory.makeSession(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:shouldTakeExtensionAssertion:)()
{
  return 0;
}

uint64_t default argument 4 of static WidgetExtensionSessionFactory.makeSession(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:shouldTakeExtensionAssertion:)()
{
  return 1;
}

uint64_t default argument 1 of static WidgetExtensionSessionFactory.makeSessionAsync(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:shouldTakeExtensionAssertion:completion:)()
{
  return 0;
}

uint64_t default argument 4 of static WidgetExtensionSessionFactory.makeSessionAsync(for:requiresUserInteractivePriority:watchdogTimeoutProvider:suspensionObserver:shouldTakeExtensionAssertion:completion:)()
{
  return 1;
}

uint64_t default argument 6 of ControlTemplateToggle.init(title:subtitle:on:off:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

uint64_t default argument 8 of ControlTemplateToggle.init(title:subtitle:on:off:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)()
{
  return 0;
}

void sub_1908B8234(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1908B823C(uint64_t a1)
{
  MEMORY[0x19401429C](&unk_190A4A29C, a1);
  return sub_190A46354();
}

uint64_t sub_1908B8278()
{
  MEMORY[0x19401429C](&unk_190A4A29C);
  return sub_190A46348();
}

uint64_t sub_1908B82C0(uint64_t a1, uint64_t a2)
{
  sub_190A487C0();
  MEMORY[0x19401429C](&unk_190A4A29C, a2);
  sub_190A46348();
  return sub_190A48808();
}

uint64_t sub_1908B831C()
{
  return sub_190A487CC();
}

_QWORD *sub_1908B8348@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1908B835C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_1908B8370@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1908B8384(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1908B83B4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1908B83E0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1908B8404(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1908B8418(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_1908B842C(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1908B8440@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1908B8454(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1908B8468(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1908B847C(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1908B8490()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1908B84A0()
{
  return sub_190A481D8();
}

_QWORD *sub_1908B84B8(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_1908B84CC()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t sub_1908B8510()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

_QWORD *sub_1908B8550@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL sub_1908B855C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1908B8570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_190A47ADC();
  v2 = v1;
  if (v0 == sub_190A47ADC() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1908B85F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x19401429C](&unk_190A4A29C, a3);
  return sub_190A4633C();
}

_QWORD *sub_1908B8644@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1908B8654(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_1908B8660(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1908B8674@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_1908BC6B0(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void sub_1908B86B0(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_1908B86BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_190A47ADC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1908B86E4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  size_t v12;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_21;
  if (!v5)
    return MEMORY[0x1E0DEE9D8];
  if (v5 <= 0)
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0)
        goto LABEL_24;
      v14 = *(_QWORD *)(type metadata accessor for ViewableTimelineEntry() - 8);
      v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      v16 = *(_QWORD *)(v14 + 72);
      v17 = a2 + v16 * a3;
      v18 = v16 * v5;
      v19 = &v15[v18];
      v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20)
        goto LABEL_24;
      swift_arrayInitWithCopy();
      return (uint64_t)v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C488);
  v8 = *(_QWORD *)(type metadata accessor for ViewableTimelineEntry() - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = (_QWORD *)swift_allocObject();
  v12 = _swift_stdlib_malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1)
      goto LABEL_23;
    v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_190A484CC();
  __break(1u);
  return result;
}

_QWORD *sub_1908B88AC(uint64_t a1)
{
  return sub_1908B89AC(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1908F4CEC);
}

_QWORD *sub_1908B88B8(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6BDD0);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1908BC2B4((unint64_t)(v3 + 4), v2, v1);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_190A48484();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1908B89AC(uint64_t a1, uint64_t (*a2)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v2;
  _QWORD *v5;
  size_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CD88);
  v5 = (_QWORD *)swift_allocObject();
  v6 = _swift_stdlib_malloc_size(v5);
  v5[2] = v2;
  v5[3] = 2 * ((uint64_t)(v6 - 32) / 24);
  v7 = a2(&v9, v5 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_1908BD134();
  if (v7 != v2)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

uint64_t sub_1908B8AA4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    v8 = v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        sub_1908AB890(0, (unint64_t *)&qword_1ECF6B860);
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6BDD0);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 25;
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1908B8C34(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1908B8E64(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1908B8C50(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1908B8FEC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1908B8C6C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1908B91A0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1908B8C88(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1908B9B44(a1, a2, a3, (_QWORD *)*v3, &qword_1ECF6D300, type metadata accessor for WidgetDescriptor);
  *v3 = result;
  return result;
}

uint64_t sub_1908B8CB4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1908B9B44(a1, a2, a3, (_QWORD *)*v3, qword_1EE1E5E78, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD8AA8]);
  *v3 = result;
  return result;
}

uint64_t sub_1908B8CE0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1908B9308(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1908B8CFC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1908B9B44(a1, a2, a3, (_QWORD *)*v3, &qword_1ECF6C488, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
  *v3 = result;
  return result;
}

uint64_t sub_1908B8D28(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1908B9B44(a1, a2, a3, (_QWORD *)*v3, &qword_1EE1EC6E8, type metadata accessor for ControlTemplatePicker.Option);
  *v3 = result;
  return result;
}

uint64_t sub_1908B8D54(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1908B9464(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1908B8D70(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1908B95D0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1908B8D8C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1908B9B44(a1, a2, a3, (_QWORD *)*v3, &qword_1ECF6BAF0, type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
  *v3 = result;
  return result;
}

uint64_t sub_1908B8DB8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1908B9754(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1908B8DD4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1908B98A0(a1, a2, a3, *v3, &qword_1ECF6A840);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1908B8DF8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1908B98A0(a1, a2, a3, *v3, (uint64_t *)&unk_1ECF6D2F0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1908B8E1C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1908B99E8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1908B8E38(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1908B9B44(a1, a2, a3, (_QWORD *)*v3, &qword_1EE1EC660, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD8FE0]);
  *v3 = result;
  return result;
}

uint64_t sub_1908B8E64(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C890);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CD00);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1908B8FEC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5B0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C530);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1908B918C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1908B9B44(a1, a2, a3, a4, &qword_1ECF6C488, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
}

uint64_t sub_1908B91A0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6ADD0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1908B9308(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B990);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1908B9464(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD90);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1908B95D0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CD88);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1908B9754(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6780);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1908B98A0(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v9])
      memmove(v13, v14, v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1908B99E8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC668);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1908B9B44(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1908B9D24(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];

  v2 = *(_QWORD *)(type metadata accessor for ViewableTimelineEntry() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1908FE5D0(v3);
  v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_1908B9DA4(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1908B9DA4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  uint64_t v85;
  char v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;

  v2 = v1;
  v4 = type metadata accessor for ViewableTimelineEntry();
  v125 = *(_QWORD *)(v4 - 8);
  v126 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v122 = (uint64_t)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v132 = (uint64_t)&v117 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v129 = (uint64_t)&v117 - v10;
  MEMORY[0x1E0C80A78](v9);
  v128 = (uint64_t)&v117 - v11;
  v12 = a1[1];
  result = sub_190A48670();
  if (result >= v12)
  {
    if (v12 < 0)
      goto LABEL_140;
    if (v12)
      return sub_1908BA774(0, v12, 1, a1);
    return result;
  }
  if (v12 >= 0)
    v14 = v12;
  else
    v14 = v12 + 1;
  if (v12 < -1)
    goto LABEL_148;
  v119 = result;
  if (v12 < 2)
  {
    v18 = (char *)MEMORY[0x1E0DEE9D8];
    v124 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
    v118 = MEMORY[0x1E0DEE9D8];
    if (v12 != 1)
    {
      v20 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_106:
      if (v20 >= 2)
      {
        v110 = *a1;
        do
        {
          v111 = v20 - 2;
          if (v20 < 2)
            goto LABEL_135;
          if (!v110)
            goto LABEL_147;
          v112 = v18;
          v113 = *(_QWORD *)&v18[16 * v111 + 32];
          v114 = *(_QWORD *)&v18[16 * v20 + 24];
          sub_1908BA9A8(v110 + *(_QWORD *)(v125 + 72) * v113, v110 + *(_QWORD *)(v125 + 72) * *(_QWORD *)&v18[16 * v20 + 16], v110 + *(_QWORD *)(v125 + 72) * v114, v124);
          if (v2)
            break;
          if (v114 < v113)
            goto LABEL_136;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v112 = sub_1908F46B8((uint64_t)v18);
          if (v111 >= *((_QWORD *)v112 + 2))
            goto LABEL_137;
          v115 = &v112[16 * v111 + 32];
          *(_QWORD *)v115 = v113;
          *((_QWORD *)v115 + 1) = v114;
          v116 = *((_QWORD *)v112 + 2);
          if (v20 > v116)
            goto LABEL_138;
          memmove(&v112[16 * v20 + 16], &v112[16 * v20 + 32], 16 * (v116 - v20));
          *((_QWORD *)v112 + 2) = v116 - 1;
          v20 = v116 - 1;
          v18 = v112;
        }
        while (v116 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v118 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v15 = v14 >> 1;
    v16 = sub_190A47CBC();
    *(_QWORD *)(v16 + 16) = v15;
    v17 = *(unsigned __int8 *)(v125 + 80);
    v118 = v16;
    v124 = v16 + ((v17 + 32) & ~v17);
  }
  v19 = 0;
  v18 = (char *)MEMORY[0x1E0DEE9D8];
  v131 = a1;
  while (1)
  {
    v21 = v19 + 1;
    v123 = v19;
    if (v19 + 1 >= v12)
    {
      v37 = v19 + 1;
      goto LABEL_58;
    }
    v120 = v2;
    v22 = *a1;
    v23 = *(_QWORD *)(v125 + 72);
    v24 = v128;
    sub_1908AF5D8(*a1 + v23 * v21, v128, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
    v127 = v22;
    v130 = v12;
    v25 = v129;
    sub_1908AF5D8(v22 + v23 * v19, v129, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
    v26 = sub_190A46060();
    v27 = v25;
    v28 = v130;
    sub_1908B5150(v27, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
    sub_1908B5150(v24, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
    v133 = v23;
    if (v19 + 2 >= v28)
    {
      v32 = v19 + 2;
      if ((v26 & 1) == 0)
        goto LABEL_37;
    }
    else
    {
      v29 = v23;
      v30 = v23 * v21;
      v31 = v127;
      v32 = v19 + 2;
      v33 = v29 * (v19 + 2);
      do
      {
        v34 = v128;
        sub_1908AF5D8(v31 + v33, v128, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
        v35 = v129;
        sub_1908AF5D8(v31 + v30, v129, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
        v36 = sub_190A46060();
        sub_1908B5150(v35, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
        sub_1908B5150(v34, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
        if (((v26 ^ v36) & 1) != 0)
        {
          v28 = v130;
          a1 = v131;
          v19 = v123;
          if ((v26 & 1) == 0)
            goto LABEL_37;
          goto LABEL_24;
        }
        v31 += v133;
        ++v32;
      }
      while (v130 != v32);
      v28 = v130;
      a1 = v131;
      v32 = v130;
      v19 = v123;
      if ((v26 & 1) == 0)
      {
LABEL_37:
        v37 = v32;
        break;
      }
    }
LABEL_24:
    v38 = v133;
    if (v32 < v19)
      goto LABEL_141;
    v37 = v32;
    if (v19 >= v32)
      break;
    v117 = v18;
    v39 = 0;
    v40 = v133 * (v32 - 1);
    v41 = v32 * v133;
    v42 = v19 * v133;
    v43 = v127;
    do
    {
      if (v19 != v37 + v39 - 1)
      {
        if (!v43)
          goto LABEL_146;
        sub_1908BD0B4(v43 + v42, v122, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
        if (v42 < v40 || v43 + v42 >= (unint64_t)(v43 + v41))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v42 != v40)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        sub_1908BD0B4(v122, v43 + v40, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
        a1 = v131;
        v37 = v32;
        v38 = v133;
      }
      ++v19;
      --v39;
      v40 -= v38;
      v41 -= v38;
      v42 += v38;
    }
    while (v19 < v37 + v39);
    v18 = v117;
    v2 = v120;
    v19 = v123;
    v28 = v130;
    if (v37 < v130)
      goto LABEL_41;
LABEL_58:
    if (v37 < v19)
      goto LABEL_134;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v130 = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v18 = sub_1908F43F8(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v59 = *((_QWORD *)v18 + 2);
    v58 = *((_QWORD *)v18 + 3);
    v20 = v59 + 1;
    if (v59 >= v58 >> 1)
      v18 = sub_1908F43F8((char *)(v58 > 1), v59 + 1, 1, v18);
    *((_QWORD *)v18 + 2) = v20;
    v60 = v18 + 32;
    v61 = &v18[16 * v59 + 32];
    v62 = v130;
    *(_QWORD *)v61 = v19;
    *((_QWORD *)v61 + 1) = v62;
    if (v59)
    {
      while (1)
      {
        v63 = v20 - 1;
        if (v20 >= 4)
        {
          v68 = &v60[16 * v20];
          v69 = *((_QWORD *)v68 - 8);
          v70 = *((_QWORD *)v68 - 7);
          v74 = __OFSUB__(v70, v69);
          v71 = v70 - v69;
          if (v74)
            goto LABEL_123;
          v73 = *((_QWORD *)v68 - 6);
          v72 = *((_QWORD *)v68 - 5);
          v74 = __OFSUB__(v72, v73);
          v66 = v72 - v73;
          v67 = v74;
          if (v74)
            goto LABEL_124;
          v75 = v20 - 2;
          v76 = &v60[16 * v20 - 32];
          v78 = *(_QWORD *)v76;
          v77 = *((_QWORD *)v76 + 1);
          v74 = __OFSUB__(v77, v78);
          v79 = v77 - v78;
          if (v74)
            goto LABEL_126;
          v74 = __OFADD__(v66, v79);
          v80 = v66 + v79;
          if (v74)
            goto LABEL_129;
          if (v80 >= v71)
          {
            v98 = &v60[16 * v63];
            v100 = *(_QWORD *)v98;
            v99 = *((_QWORD *)v98 + 1);
            v74 = __OFSUB__(v99, v100);
            v101 = v99 - v100;
            if (v74)
              goto LABEL_133;
            v91 = v66 < v101;
            goto LABEL_95;
          }
        }
        else
        {
          if (v20 != 3)
          {
            v92 = *((_QWORD *)v18 + 4);
            v93 = *((_QWORD *)v18 + 5);
            v74 = __OFSUB__(v93, v92);
            v85 = v93 - v92;
            v86 = v74;
            goto LABEL_89;
          }
          v65 = *((_QWORD *)v18 + 4);
          v64 = *((_QWORD *)v18 + 5);
          v74 = __OFSUB__(v64, v65);
          v66 = v64 - v65;
          v67 = v74;
        }
        if ((v67 & 1) != 0)
          goto LABEL_125;
        v75 = v20 - 2;
        v81 = &v60[16 * v20 - 32];
        v83 = *(_QWORD *)v81;
        v82 = *((_QWORD *)v81 + 1);
        v84 = __OFSUB__(v82, v83);
        v85 = v82 - v83;
        v86 = v84;
        if (v84)
          goto LABEL_128;
        v87 = &v60[16 * v63];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v74 = __OFSUB__(v88, v89);
        v90 = v88 - v89;
        if (v74)
          goto LABEL_131;
        if (__OFADD__(v85, v90))
          goto LABEL_132;
        if (v85 + v90 >= v66)
        {
          v91 = v66 < v90;
LABEL_95:
          if (v91)
            v63 = v75;
          goto LABEL_97;
        }
LABEL_89:
        if ((v86 & 1) != 0)
          goto LABEL_127;
        v94 = &v60[16 * v63];
        v96 = *(_QWORD *)v94;
        v95 = *((_QWORD *)v94 + 1);
        v74 = __OFSUB__(v95, v96);
        v97 = v95 - v96;
        if (v74)
          goto LABEL_130;
        if (v97 < v85)
          goto LABEL_14;
LABEL_97:
        v102 = v63 - 1;
        if (v63 - 1 >= v20)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        v103 = *a1;
        if (!*a1)
          goto LABEL_145;
        v104 = v18;
        v105 = &v60[16 * v102];
        v106 = *(_QWORD *)v105;
        v107 = &v60[16 * v63];
        v108 = *((_QWORD *)v107 + 1);
        sub_1908BA9A8(v103 + *(_QWORD *)(v125 + 72) * *(_QWORD *)v105, v103 + *(_QWORD *)(v125 + 72) * *(_QWORD *)v107, v103 + *(_QWORD *)(v125 + 72) * v108, v124);
        if (v2)
          goto LABEL_117;
        if (v108 < v106)
          goto LABEL_120;
        if (v63 > *((_QWORD *)v104 + 2))
          goto LABEL_121;
        *(_QWORD *)v105 = v106;
        *(_QWORD *)&v60[16 * v102 + 8] = v108;
        v109 = *((_QWORD *)v104 + 2);
        if (v63 >= v109)
          goto LABEL_122;
        v18 = v104;
        v20 = v109 - 1;
        memmove(&v60[16 * v63], v107 + 16, 16 * (v109 - 1 - v63));
        *((_QWORD *)v104 + 2) = v109 - 1;
        a1 = v131;
        if (v109 <= 2)
          goto LABEL_14;
      }
    }
    v20 = 1;
LABEL_14:
    v12 = a1[1];
    v19 = v130;
    if (v130 >= v12)
      goto LABEL_106;
  }
  v2 = v120;
  if (v37 >= v28)
    goto LABEL_58;
LABEL_41:
  if (__OFSUB__(v37, v19))
    goto LABEL_139;
  if (v37 - v19 >= v119)
    goto LABEL_58;
  if (__OFADD__(v19, v119))
    goto LABEL_142;
  if (v19 + v119 >= v28)
    v44 = v28;
  else
    v44 = v19 + v119;
  if (v44 >= v19)
  {
    if (v37 != v44)
    {
      v117 = v18;
      v120 = v2;
      v121 = v44;
      v45 = *(_QWORD *)(v125 + 72);
      v133 = v45 * (v37 - 1);
      v127 = v45;
      v46 = v37 * v45;
      do
      {
        v48 = 0;
        v130 = v37;
        while (1)
        {
          v49 = *a1;
          v50 = v46;
          v51 = v46 + v48 + *a1;
          v52 = a1;
          v53 = v128;
          sub_1908AF5D8(v51, v128, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
          v54 = v129;
          sub_1908AF5D8(v133 + v48 + v49, v129, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
          LOBYTE(v49) = sub_190A46060();
          sub_1908B5150(v54, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
          sub_1908B5150(v53, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
          if ((v49 & 1) == 0)
            break;
          v55 = *v52;
          if (!*v52)
            goto LABEL_144;
          v46 = v50;
          v56 = v55 + v133 + v48;
          sub_1908BD0B4(v55 + v50 + v48, v132, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
          swift_arrayInitWithTakeFrontToBack();
          sub_1908BD0B4(v132, v56, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
          v48 -= v127;
          ++v19;
          v47 = v130;
          a1 = v131;
          if (v130 == v19)
            goto LABEL_51;
        }
        v47 = v130;
        a1 = v52;
        v46 = v50;
LABEL_51:
        v37 = v47 + 1;
        v133 += v127;
        v46 += v127;
        v19 = v123;
      }
      while (v37 != v121);
      v37 = v121;
      v2 = v120;
      v18 = v117;
    }
    goto LABEL_58;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  result = sub_190A4843C();
  __break(1u);
  return result;
}

uint64_t sub_1908BA774(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v25 = a1;
  v26 = type metadata accessor for ViewableTimelineEntry();
  v7 = MEMORY[0x1E0C80A78](v26);
  v30 = (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v27 = (uint64_t)&v23 - v10;
  result = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v23 - v13;
  v29 = a3;
  v24 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v32 = v15 * (v29 - 1);
    v28 = v15;
    v31 = v15 * v29;
LABEL_5:
    v16 = 0;
    v17 = v25;
    while (1)
    {
      v18 = *a4;
      sub_1908AF5D8(v31 + v16 + *a4, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
      v19 = v27;
      sub_1908AF5D8(v32 + v16 + v18, v27, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
      LOBYTE(v18) = sub_190A46060();
      sub_1908B5150(v19, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
      result = sub_1908B5150((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
      if ((v18 & 1) == 0)
      {
LABEL_4:
        v32 += v28;
        v31 += v28;
        if (++v29 == v24)
          return result;
        goto LABEL_5;
      }
      v20 = *a4;
      if (!*a4)
        break;
      v21 = a4;
      v22 = v20 + v32 + v16;
      sub_1908BD0B4(v20 + v31 + v16, v30, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_1908BD0B4(v30, v22, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
      v16 -= v28;
      ++v17;
      a4 = v21;
      if (v29 == v17)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1908BA9A8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t result;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;

  v43 = type metadata accessor for ViewableTimelineEntry();
  v8 = MEMORY[0x1E0C80A78](v43);
  v44 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v40 - v10;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_62;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_63;
  v15 = (uint64_t)(a2 - a1) / v13;
  v47 = a1;
  v46 = a4;
  v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v25 = a4 + v18;
      v45 = a4 + v18;
      v47 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        v27 = -v13;
        v41 = a4;
        v42 = a1;
        do
        {
          v28 = a3 + v27;
          sub_1908AF5D8(v25 + v27, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
          v29 = a2 + v27;
          v30 = a3;
          v31 = (uint64_t)v11;
          v32 = v44;
          sub_1908AF5D8(a2 + v27, v44, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
          v33 = sub_190A46060();
          v34 = v32;
          v11 = (char *)v31;
          sub_1908B5150(v34, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
          sub_1908B5150(v31, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
          if ((v33 & 1) != 0)
          {
            if (v30 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v37 = v41;
              v36 = v42;
            }
            else
            {
              v35 = v30 == a2;
              v37 = v41;
              v36 = v42;
              if (!v35)
                swift_arrayInitWithTakeBackToFront();
            }
            v47 += v27;
          }
          else
          {
            v38 = v45;
            v45 += v27;
            if (v30 < v38 || v28 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack();
              v29 = a2;
              v37 = v41;
              v36 = v42;
            }
            else
            {
              v35 = v30 == v38;
              v37 = v41;
              v36 = v42;
              if (!v35)
                swift_arrayInitWithTakeBackToFront();
              v29 = a2;
            }
          }
          v25 = v45;
          if (v45 <= v37)
            break;
          a2 = v29;
          a3 = v28;
        }
        while (v29 > v36);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v42 = a4 + v17;
    v45 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      v20 = v44;
      do
      {
        sub_1908AF5D8(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
        sub_1908AF5D8(a4, v20, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
        v21 = sub_190A46060();
        sub_1908B5150(v20, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
        sub_1908B5150((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
        v22 = v47;
        if ((v21 & 1) != 0)
        {
          v23 = a2 + v13;
          if (v47 < a2 || v47 >= v23)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 == a2)
          {
            v22 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v24 = v46 + v13;
          if (v47 < v46 || v47 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 != v46)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v46 = v24;
          v23 = a2;
        }
        v47 = v22 + v13;
        a4 = v46;
        if (v46 >= v42)
          break;
        a2 = v23;
      }
      while (v23 < a3);
    }
LABEL_60:
    sub_1908F44F0(&v47, &v46, (uint64_t *)&v45);
    return 1;
  }
LABEL_64:
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1908BAE48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t i;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  BOOL v42;
  unint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD v60[2];
  uint64_t v61;
  void (*v62)(void);
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
  MEMORY[0x1E0C80A78](v2);
  v64 = (char *)v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_190A46C30();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v66 = (char *)v60 - v9;
  v10 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (_QWORD *)((char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (_QWORD *)((char *)v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = *(unsigned __int8 *)(v5 + 80);
  v16 = MEMORY[0x1E0DEE9D8];
  v61 = (v68 + 32) & ~v68;
  v65 = MEMORY[0x1E0DEE9D8] + v61;
  sub_1908AF5D8(a1, (uint64_t)v12, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  v18 = *v12;
  v17 = (void *)v12[1];
  v19 = (char *)v15 + *(int *)(v13 + 20);
  v67 = v5;
  v62 = *(void (**)(void))(v5 + 16);
  v63 = v19;
  v62();
  swift_retain();
  v20 = v17;
  v21 = sub_1908FF740(v16);
  v69[0] = v18;
  v69[1] = (uint64_t)v20;
  swift_retain();
  v22 = v20;
  swift_bridgeObjectRetain();
  v23 = sub_1908FFDE4(v69, v21);
  v25 = v24;
  v27 = v26;
  swift_bridgeObjectRelease();

  swift_release();
  *v15 = v23;
  v15[1] = v25;
  v15[2] = v27;
  sub_1908B5150((uint64_t)v12, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  v28 = 0;
  v60[1] = v68 | 7;
  v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v68 = (unint64_t)v29;
    v30 = v15[1];
    if (v30 >> 62)
      break;
    v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v32 = v31 - 1;
    if (v31 < 1)
      goto LABEL_41;
LABEL_4:
    if ((sub_1908EF6EC(v32) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v33 = MEMORY[0x1E0DEE9D8];
      *v15 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      v15[1] = v33;
      swift_bridgeObjectRelease();
      v15[2] = v33;
    }
    result = ((uint64_t (*)(char *, char *, uint64_t))v62)(v8, v63, v4);
    if (v30 >> 62)
    {
      swift_bridgeObjectRetain();
      v35 = sub_190A48484();
      result = swift_bridgeObjectRelease();
      if (!v35)
        goto LABEL_16;
    }
    else
    {
      v35 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v35)
        goto LABEL_16;
    }
    if (v35 < 1)
      goto LABEL_47;
    for (i = 0; i != v35; ++i)
    {
      if ((v30 & 0xC000000000000001) != 0)
      {
        v37 = MEMORY[0x194013510](i, v30);
      }
      else
      {
        v37 = *(_QWORD *)(v30 + 8 * i + 32);
        swift_retain();
      }
      (*(void (**)(char *))(**(_QWORD **)(v37 + 16) + 112))(v8);
      swift_release();
    }
LABEL_16:
    swift_bridgeObjectRelease();
    v38 = v67;
    v39 = *(void (**)(char *, char *, uint64_t))(v67 + 32);
    v40 = (uint64_t)v64;
    v39(v64, v8, v4);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v40, 0, 1, v4);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v40, 1, v4) == 1)
      goto LABEL_42;
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))v39)(v66, v40, v4);
    if (v28)
    {
      v29 = (_QWORD *)v68;
      v41 = (char *)v65;
      v42 = __OFSUB__(v28--, 1);
      if (v42)
        goto LABEL_46;
      goto LABEL_39;
    }
    v43 = *(_QWORD *)(v68 + 24);
    if ((uint64_t)((v43 >> 1) + 0x4000000000000000) < 0)
      goto LABEL_48;
    v44 = v43 & 0xFFFFFFFFFFFFFFFELL;
    if (v44 <= 1)
      v45 = 1;
    else
      v45 = v44;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C4C0);
    v46 = *(_QWORD *)(v67 + 72);
    v47 = v61;
    v29 = (_QWORD *)swift_allocObject();
    result = _swift_stdlib_malloc_size(v29);
    if (!v46)
      goto LABEL_49;
    v48 = result - v47;
    if (result - v47 == 0x8000000000000000 && v46 == -1)
      goto LABEL_50;
    v50 = v48 / v46;
    v29[2] = v45;
    v29[3] = 2 * (v48 / v46);
    v51 = (char *)v29 + v47;
    v52 = v68;
    v53 = *(_QWORD *)(v68 + 24) >> 1;
    v54 = v53 * v46;
    if (*(_QWORD *)(v68 + 16))
    {
      if ((unint64_t)v29 < v68 || (unint64_t)v51 >= v68 + v47 + v54)
      {
        swift_arrayInitWithTakeFrontToBack();
LABEL_36:
        v52 = v68;
      }
      else if (v29 != (_QWORD *)v68)
      {
        swift_arrayInitWithTakeBackToFront();
        goto LABEL_36;
      }
      *(_QWORD *)(v52 + 16) = 0;
    }
    v41 = &v51[v54];
    v55 = (v50 & 0x7FFFFFFFFFFFFFFFLL) - v53;
    result = swift_release();
    v42 = __OFSUB__(v55, 1);
    v28 = v55 - 1;
    if (v42)
    {
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
LABEL_39:
    v39(v41, v66, v4);
    v65 = (uint64_t)&v41[*(_QWORD *)(v67 + 72)];
  }
  swift_bridgeObjectRetain_n();
  v56 = sub_190A48484();
  swift_bridgeObjectRelease();
  v32 = v56 - 1;
  if (v56 >= 1)
    goto LABEL_4;
LABEL_41:
  swift_bridgeObjectRelease();
  v40 = (uint64_t)v64;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56))(v64, 1, 1, v4);
LABEL_42:
  sub_1908B5150((uint64_t)v15, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
  sub_1908AA544(v40, (uint64_t *)&unk_1ECF6C868);
  result = v68;
  v57 = *(_QWORD *)(v68 + 24);
  if (v57 < 2)
    return result;
  v58 = v57 >> 1;
  v42 = __OFSUB__(v58, v28);
  v59 = v58 - v28;
  if (!v42)
  {
    *(_QWORD *)(v68 + 16) = v59;
    return result;
  }
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_1908BB3DC(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  _QWORD *v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  const void *v24;
  BOOL v25;
  uint64_t result;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v30 = a1;
  v31 = (unint64_t)a2;
  swift_retain();
  v5 = a2;
  swift_bridgeObjectRetain();
  v6 = sub_1908FFDE4(&v30, a3);
  v8 = v7;
  v30 = v6;
  v31 = v7;
  v32 = v9;
  if (v7 >> 62)
    goto LABEL_27;
  v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v10 >= 1)
  {
    v11 = 0;
    v12 = MEMORY[0x1E0DEE9D8];
    v13 = (unint64_t *)(MEMORY[0x1E0DEE9D8] + 32);
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      if ((sub_1908EF6EC(v10 - 1) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v30 = v12;
        swift_bridgeObjectRelease();
        v31 = v12;
        swift_bridgeObjectRelease();
        v32 = v12;
      }
      if (!v11)
      {
        v15 = v14[3];
        if ((uint64_t)((v15 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_26;
        v16 = v15 & 0xFFFFFFFFFFFFFFFELL;
        if (v16 <= 1)
          v17 = 1;
        else
          v17 = v16;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C890);
        v18 = (_QWORD *)swift_allocObject();
        v19 = _swift_stdlib_malloc_size(v18);
        v20 = v19 - 32;
        if (v19 < 32)
          v20 = v19 - 25;
        v21 = v20 >> 3;
        v18[2] = v17;
        v18[3] = 2 * (v20 >> 3);
        v22 = (unint64_t)(v18 + 4);
        v23 = v14[3] >> 1;
        if (v14[2])
        {
          v24 = v14 + 4;
          if (v18 != v14 || v22 >= (unint64_t)v24 + 8 * v23)
            memmove(v18 + 4, v24, 8 * v23);
          v14[2] = 0;
        }
        v13 = (unint64_t *)(v22 + 8 * v23);
        v11 = (v21 & 0x7FFFFFFFFFFFFFFFLL) - v23;
        swift_release();
        v14 = v18;
      }
      v25 = __OFSUB__(v11--, 1);
      if (v25)
        break;
      *v13 = v8;
      v8 = v31;
      if (v31 >> 62)
      {
        swift_bridgeObjectRetain_n();
        v10 = sub_190A48484();
        swift_bridgeObjectRelease();
      }
      else
      {
        v10 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      ++v13;
      if (v10 <= 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain_n();
    v10 = sub_190A48484();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v11 = 0;
  v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_29:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v27 = v14[3];
  if (v27 < 2)
    return (uint64_t)v14;
  v28 = v27 >> 1;
  v25 = __OFSUB__(v28, v11);
  v29 = v28 - v11;
  if (!v25)
  {
    v14[2] = v29;
    return (uint64_t)v14;
  }
  __break(1u);
  return result;
}

size_t sub_1908BB678(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t result;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v33 = type metadata accessor for ViewableTimelineEntry();
  v2 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v36 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(unsigned __int8 *)(v2 + 80);
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_viewableEntries);
  v6 = *(_QWORD *)(v5 + 16);
  result = swift_bridgeObjectRetain();
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v9 = 0;
    v10 = 0;
    v11 = (v4 + 32) & ~v4;
    v12 = MEMORY[0x1E0DEE9D8] + v11;
    v37 = v11;
    v38 = v5 + v11;
    v34 = v5;
    v35 = v4 | 7;
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v14 = (uint64_t)v36;
    while (v9 < *(_QWORD *)(v5 + 16))
    {
      v16 = *(_QWORD *)(v2 + 72);
      result = sub_1908AF5D8(v38 + v16 * v9, v14, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
      if (v10)
      {
        v8 = v13;
        v15 = __OFSUB__(v10--, 1);
        if (v15)
          goto LABEL_28;
      }
      else
      {
        v17 = v13[3];
        if ((uint64_t)((v17 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_35;
        v18 = v17 & 0xFFFFFFFFFFFFFFFELL;
        if (v18 <= 1)
          v19 = 1;
        else
          v19 = v18;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C488);
        v20 = v37;
        v8 = (_QWORD *)swift_allocObject();
        result = _swift_stdlib_malloc_size(v8);
        if (!v16)
          goto LABEL_36;
        v21 = result - v20;
        if (result - v20 == 0x8000000000000000 && v16 == -1)
          goto LABEL_37;
        v23 = v2;
        v24 = v21 / v16;
        v8[2] = v19;
        v8[3] = 2 * (v21 / v16);
        v25 = (char *)v8 + v20;
        v26 = v13[3] >> 1;
        v27 = v26 * v16;
        if (v13[2])
        {
          if (v8 < v13 || v25 >= (char *)v13 + v37 + v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v8 != v13)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v13[2] = 0;
        }
        v12 = (uint64_t)&v25[v27];
        v29 = (v24 & 0x7FFFFFFFFFFFFFFFLL) - v26;
        swift_release();
        v2 = v23;
        v5 = v34;
        v14 = (uint64_t)v36;
        v15 = __OFSUB__(v29, 1);
        v10 = v29 - 1;
        if (v15)
        {
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
      }
      ++v9;
      result = sub_1908BD0B4(v14, v12, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
      v12 += v16;
      v13 = v8;
      if (v6 == v9)
        goto LABEL_30;
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
LABEL_29:
  v10 = 0;
LABEL_30:
  result = swift_bridgeObjectRelease();
  v30 = v8[3];
  if (v30 < 2)
    return (size_t)v8;
  v31 = v30 >> 1;
  v15 = __OFSUB__(v31, v10);
  v32 = v31 - v10;
  if (!v15)
  {
    v8[2] = v32;
    return (size_t)v8;
  }
LABEL_38:
  __break(1u);
  return result;
}

size_t sub_1908BB8E4(uint64_t a1, uint64_t a2, int64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  size_t result;
  char *v29;
  char *v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  BOOL v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  int64_t v59;

  v59 = a3;
  v52 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C458);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v50 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v50 - v12;
  MEMORY[0x1E0C80A78](v11);
  v55 = (uint64_t)&v50 - v14;
  v15 = type metadata accessor for ViewableTimelineEntry();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v57 = (uint64_t)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C440);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (uint64_t *)((char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = *(unsigned __int8 *)(v16 + 80);
  v53 = (v22 + 32) & ~v22;
  v58 = (char *)MEMORY[0x1E0DEE9D8];
  v56 = (char *)(MEMORY[0x1E0DEE9D8] + v53);
  v23 = (uint64_t)v21 + *(int *)(v19 + 32);
  v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v54(v23, 1, 1, v15);
  v24 = v52;
  *v21 = a1;
  v21[1] = v24;
  v52 = v22 | 7;
  v21[2] = v59;
  swift_retain();
  swift_retain();
  v59 = 0;
  while (1)
  {
    v54((uint64_t)v13, 1, 1, v15);
    do
    {
      sub_190A484D8();
      sub_1908AA544((uint64_t)v13, &qword_1ECF6C458);
      sub_1908B4BD4((uint64_t)v10, (uint64_t)v13, &qword_1ECF6C458);
      sub_1908AAA48((uint64_t)v13, (uint64_t)v7, &qword_1ECF6C458);
      v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
      v26 = v25(v7, 1, v15);
      sub_1908AA544((uint64_t)v7, &qword_1ECF6C458);
    }
    while (v26 != 1 && (((uint64_t (*)(char *, uint64_t))v21[1])(v13, v23) & 1) != 0);
    sub_1908BDFCC((uint64_t)v13, v23);
    v27 = v55;
    sub_1908B4BD4((uint64_t)v13, v55, &qword_1ECF6C458);
    if (v25((char *)v27, 1, v15) == 1)
      break;
    result = sub_1908BD0B4(v27, v57, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
    v29 = v56;
    if (v59)
    {
      v30 = v58;
      v31 = v59 - 1;
      if (__OFSUB__(v59, 1))
        goto LABEL_32;
      goto LABEL_27;
    }
    v32 = *((_QWORD *)v58 + 3);
    if ((uint64_t)((v32 >> 1) + 0x4000000000000000) < 0)
      goto LABEL_33;
    v33 = v32 & 0xFFFFFFFFFFFFFFFELL;
    if (v33 <= 1)
      v33 = 1;
    v59 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C488);
    v34 = *(_QWORD *)(v16 + 72);
    v35 = v53;
    v56 = (char *)swift_allocObject();
    result = _swift_stdlib_malloc_size(v56);
    if (!v34)
      goto LABEL_34;
    v36 = result - v35;
    if (result - v35 == 0x8000000000000000 && v34 == -1)
      goto LABEL_35;
    v38 = v35;
    v39 = v36 / v34;
    v40 = v56;
    *((_QWORD *)v56 + 2) = v59;
    v40[3] = 2 * (v36 / v34);
    v41 = (char *)v40 + v35;
    v42 = v58;
    v43 = *((_QWORD *)v58 + 3) >> 1;
    v44 = v43 * v34;
    if (*((_QWORD *)v58 + 2))
    {
      if (v56 < v58 || v41 >= &v58[v38 + v44])
      {
        v59 = (int64_t)v41;
        v45 = v43;
        v50 = v44;
        v51 = v39;
        swift_arrayInitWithTakeFrontToBack();
LABEL_24:
        v44 = v50;
        v39 = v51;
        v43 = v45;
        v41 = (char *)v59;
      }
      else if (v56 != v58)
      {
        v59 = (int64_t)v41;
        v45 = v43;
        v50 = v44;
        v51 = v39;
        swift_arrayInitWithTakeBackToFront();
        goto LABEL_24;
      }
      *((_QWORD *)v42 + 2) = 0;
    }
    v29 = &v41[v44];
    v59 = (v39 & 0x7FFFFFFFFFFFFFFFLL) - v43;
    result = swift_release();
    v30 = v56;
    v31 = v59 - 1;
    if (__OFSUB__(v59, 1))
    {
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
LABEL_27:
    v59 = v31;
    sub_1908BD0B4(v57, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
    v56 = &v29[*(_QWORD *)(v16 + 72)];
    v58 = v30;
  }
  sub_1908AA544((uint64_t)v21, &qword_1ECF6C440);
  sub_1908AA544(v27, &qword_1ECF6C458);
  result = (size_t)v58;
  v46 = *((_QWORD *)v58 + 3);
  if (v46 < 2)
    return result;
  v47 = v46 >> 1;
  v48 = __OFSUB__(v47, v59);
  v49 = v47 - v59;
  if (!v48)
  {
    *((_QWORD *)v58 + 2) = v49;
    return result;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1908BBD58()
{
  return sub_190A46060() & 1;
}

unint64_t sub_1908BBD84()
{
  unint64_t result;

  result = qword_1EE1E5E50;
  if (!qword_1EE1E5E50)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEB460], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EE1E5E50);
  }
  return result;
}

uint64_t sub_1908BBDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1908BBE0C()
{
  return MEMORY[0x1E0C96020];
}

uint64_t sub_1908BBE18()
{
  return sub_1908AF598(&qword_1EE1EC608, (uint64_t *)&unk_1EE1EC610, MEMORY[0x1E0DEC908]);
}

uint64_t sub_1908BBE44()
{
  return type metadata accessor for WidgetViewCollection();
}

uint64_t type metadata accessor for WidgetViewCollection()
{
  uint64_t result;

  result = qword_1ECF6C3B0;
  if (!qword_1ECF6C3B0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1908BBE88()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  type metadata accessor for BundleStub();
  if (v0 <= 0x3F)
  {
    sub_1908BBFB0(319, (unint64_t *)&qword_1ECF6C620, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v1 <= 0x3F)
    {
      sub_1908BBFB0(319, &qword_1ECF6C4F8, (void (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
      if (v2 <= 0x3F)
      {
        sub_190A46084();
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for WidgetViewCollection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetViewCollection.__allocating_init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

void sub_1908BBFB0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_190A48148();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void type metadata accessor for CHSWidgetBackgroundViewPolicy(uint64_t a1)
{
  sub_1908BE094(a1, (unint64_t *)&unk_1ECF6AAD8);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1908BE094(a1, &qword_1ECF6BE70);
}

void type metadata accessor for CHSWidgetVisibility(uint64_t a1)
{
  sub_1908BE094(a1, &qword_1EE1EBAE8);
}

void type metadata accessor for CHSControlSize(uint64_t a1)
{
  sub_1908BE094(a1, &qword_1EE1EA620);
}

void type metadata accessor for CHSEnablement(uint64_t a1)
{
  sub_1908BE094(a1, qword_1EE1EB8B8);
}

uint64_t initializeBufferWithCopyOfBuffer for ControlViewSource.ProviderType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityMetrics(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ActivityMetrics(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for audit_token_t(uint64_t a1)
{
  sub_1908BE094(a1, &qword_1EE1EC620);
}

void type metadata accessor for CHSWidgetFamilyMask(uint64_t a1)
{
  sub_1908BE094(a1, &qword_1EE1EC628);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1908BE094(a1, &qword_1ECF6AA80);
}

void type metadata accessor for CHSTintAccentedDesaturatedMode(uint64_t a1)
{
  sub_1908BE094(a1, &qword_1EE1EB958);
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1908BE094(a1, &qword_1ECF6B9C0);
}

uint64_t getEnumTagSinglePayload for TimelineEntryRelevance(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TimelineEntryRelevance(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1908BE094(a1, (unint64_t *)&unk_1ECF6C468);
}

void type metadata accessor for CHSDisplayGamut(uint64_t a1)
{
  sub_1908BE094(a1, &qword_1EE1EC630);
}

uint64_t sub_1908BC1D4()
{
  return sub_1908AA2F4(&qword_1EE1EC638, (uint64_t (*)(uint64_t))type metadata accessor for CHSWidgetFamilyMask, (uint64_t)&unk_190A49E98);
}

uint64_t sub_1908BC200()
{
  return sub_1908AA2F4(&qword_1EE1EC640, (uint64_t (*)(uint64_t))type metadata accessor for CHSWidgetFamilyMask, (uint64_t)&unk_190A49E64);
}

uint64_t sub_1908BC22C()
{
  return sub_1908AA2F4(&qword_1EE1EC648, (uint64_t (*)(uint64_t))type metadata accessor for CHSWidgetFamilyMask, (uint64_t)&unk_190A49EC4);
}

uint64_t sub_1908BC258()
{
  return sub_1908AA2F4(&qword_1EE1EC650, (uint64_t (*)(uint64_t))type metadata accessor for CHSWidgetFamilyMask, (uint64_t)&unk_190A49F00);
}

uint64_t sub_1908BC284()
{
  return sub_1908AA2F4(&qword_1EE1EC658, (uint64_t (*)(uint64_t))type metadata accessor for CHSWidgetBackgroundViewPolicy, (uint64_t)&unk_190A4A0C4);
}

uint64_t sub_1908BC2B4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_190A48484();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_190A48484();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1908AF598(&qword_1EE1EC6E0, &qword_1ECF6CD00, MEMORY[0x1E0DEAF50]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CD00);
          v12 = sub_1908FE4DC(v16, i, a3);
          v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1908BC4C0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  void *v3;
  void *v5;
  uint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v16)(uint64_t *__return_ptr, _QWORD, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  v5 = v3;
  v18 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    v8 = sub_190A48484();
    if (v8)
      goto LABEL_3;
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      v9 = (unint64_t *)a3;
      a3 = a1 & 0xC000000000000001;
      v10 = sub_1908AB890(0, v9);
      v16 = *(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t, uint64_t))(**(_QWORD **)(a2 + 16) + 120);
      for (i = 4; ; ++i)
      {
        a2 = i - 4;
        if (a3)
        {
          v12 = MEMORY[0x194013510](i - 4, a1);
          v13 = i - 3;
          if (__OFADD__(a2, 1))
            goto LABEL_16;
        }
        else
        {
          v12 = *(_QWORD *)(a1 + 8 * i);
          swift_retain();
          v13 = i - 3;
          if (__OFADD__(a2, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        v16(&v17, *(_QWORD *)(v12 + 24), v10, v10);
        if (v5)
        {

          swift_release();
          v5 = 0;
        }
        else
        {
          v14 = swift_release();
          MEMORY[0x194012E68](v14);
          if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_190A47C98();
          sub_190A47CD4();
          sub_190A47C74();
          a3 = a1 & 0xC000000000000001;
        }
        if (v13 == v8)
        {
          swift_bridgeObjectRelease();
          return v18;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1908BC6B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

char *sub_1908BC6E8(unint64_t a1, _QWORD *a2)
{
  void *v2;
  void *v3;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  char *v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;

  v3 = v2;
  v5 = a1;
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    v6 = sub_190A48484();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      v7 = v5 & 0xC000000000000001;
      v24 = (_QWORD *)a2[2];
      v8 = *(_QWORD **)(*v24 + 120);
      v22 = v6;
      v23 = (char *)MEMORY[0x1E0DEE9D8];
      for (i = 4; ; ++i)
      {
        v10 = i - 4;
        if (v7)
        {
          v11 = MEMORY[0x194013510](i - 4, v5);
          v12 = __OFADD__(v10, 1);
          v13 = i - 3;
          if (v12)
            goto LABEL_20;
        }
        else
        {
          v11 = *(_QWORD *)(v5 + 8 * i);
          swift_retain();
          v12 = __OFADD__(v10, 1);
          v13 = i - 3;
          if (v12)
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        a2 = v24;
        ((void (*)(uint64_t *__return_ptr, _QWORD, ValueMetadata *, ValueMetadata *))v8)(&v25, *(_QWORD *)(v11 + 24), &type metadata for InternalWidgetFamily, &type metadata for InternalWidgetFamily);
        if (v3)
        {

          swift_release();
          v3 = 0;
        }
        else
        {
          a2 = v8;
          v14 = v5;
          v15 = v7;
          swift_release();
          v16 = v25;
          if (v25 != 13)
          {
            v17 = v23;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v17 = sub_1908F270C(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
            v18 = v17;
            v19 = *((_QWORD *)v17 + 2);
            v23 = v18;
            v20 = *((_QWORD *)v18 + 3);
            if (v19 >= v20 >> 1)
              v23 = sub_1908F270C((char *)(v20 > 1), v19 + 1, 1, v23);
            *((_QWORD *)v23 + 2) = v19 + 1;
            v23[v19 + 32] = v16;
            v6 = v22;
          }
          v7 = v15;
          v5 = v14;
          v8 = a2;
        }
        if (v13 == v6)
        {
          swift_bridgeObjectRelease();
          return v23;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (char *)MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1908BC8F4(unint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v14)(uint64_t *__return_ptr, _QWORD, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v16 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    v6 = sub_190A48484();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      v7 = a1 & 0xC000000000000001;
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C650);
      v14 = *(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t, uint64_t))(**(_QWORD **)(a2 + 16) + 120);
      for (i = 4; ; ++i)
      {
        a2 = i - 4;
        if (v7)
        {
          v10 = MEMORY[0x194013510](i - 4, a1);
          v11 = i - 3;
          if (__OFADD__(a2, 1))
            goto LABEL_16;
        }
        else
        {
          v10 = *(_QWORD *)(a1 + 8 * i);
          swift_retain();
          v11 = i - 3;
          if (__OFADD__(a2, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        v14(&v15, *(_QWORD *)(v10 + 24), v8, v8);
        if (v3)
        {

          swift_release();
          v3 = 0;
        }
        else
        {
          v12 = swift_release();
          MEMORY[0x194012E68](v12);
          if (*(_QWORD *)(v16 + 16) >= *(_QWORD *)(v16 + 24) >> 1)
            sub_190A47C98();
          sub_190A47CD4();
          sub_190A47C74();
          v7 = a1 & 0xC000000000000001;
        }
        if (v11 == v6)
        {
          swift_bridgeObjectRelease();
          return v16;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

_QWORD *sub_1908BCAD0(unint64_t a1, _QWORD *a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  void (*v19)(uint64_t *__return_ptr, _QWORD, uint64_t, uint64_t);
  uint64_t v20;

  v3 = v2;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    v6 = sub_190A48484();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      a2 = (_QWORD *)a2[2];
      v19 = *(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t, uint64_t))(*a2 + 120);
      v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v8 = 4;
      v9 = MEMORY[0x1E0DEF040];
      v18 = v6;
      while (1)
      {
        v10 = v8 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v11 = MEMORY[0x194013510](v8 - 4, a1);
          v12 = __OFADD__(v10, 1);
          v13 = v8 - 3;
          if (v12)
            goto LABEL_18;
        }
        else
        {
          v11 = *(_QWORD *)(a1 + 8 * v8);
          swift_retain();
          v12 = __OFADD__(v10, 1);
          v13 = v8 - 3;
          if (v12)
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        v19(&v20, *(_QWORD *)(v11 + 24), v9, v9);
        if (v3)
        {

          swift_release();
          v3 = 0;
        }
        else
        {
          swift_release();
          v14 = v20;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v7 = sub_1908F25F4(0, v7[2] + 1, 1, v7);
          v16 = v7[2];
          v15 = v7[3];
          if (v16 >= v15 >> 1)
            v7 = sub_1908F25F4((_QWORD *)(v15 > 1), v16 + 1, 1, v7);
          v7[2] = v16 + 1;
          v7[v16 + 4] = v14;
          v6 = v18;
        }
        ++v8;
        if (v13 == v6)
        {
          swift_bridgeObjectRelease();
          return v7;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

char *sub_1908BCCB8(unint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v19;
  void (*v20)(uint64_t *__return_ptr, _QWORD, _QWORD, _QWORD);
  unint64_t v21;
  uint64_t v22;

  v3 = v2;
  v5 = a1;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    v6 = sub_190A48484();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      v7 = v5 & 0xC000000000000001;
      v21 = *(_QWORD *)(a2 + 16);
      v20 = *(void (**)(uint64_t *__return_ptr, _QWORD, _QWORD, _QWORD))(*(_QWORD *)v21 + 120);
      v8 = (char *)MEMORY[0x1E0DEE9D8];
      v9 = 4;
      v19 = v5;
      while (1)
      {
        v10 = v9 - 4;
        if (v7)
        {
          v11 = MEMORY[0x194013510](v9 - 4, v5);
          v12 = __OFADD__(v10, 1);
          v13 = v9 - 3;
          if (v12)
            goto LABEL_18;
        }
        else
        {
          v11 = *(_QWORD *)(v5 + 8 * v9);
          swift_retain();
          v12 = __OFADD__(v10, 1);
          v13 = v9 - 3;
          if (v12)
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        a2 = v21;
        v20(&v22, *(_QWORD *)(v11 + 24), MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DEAFA0]);
        if (v3)
        {

          swift_release();
          v3 = 0;
        }
        else
        {
          a2 = v7;
          v14 = v6;
          swift_release();
          v15 = v22;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_1908F2700(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v17 = *((_QWORD *)v8 + 2);
          v16 = *((_QWORD *)v8 + 3);
          if (v17 >= v16 >> 1)
            v8 = sub_1908F2700((char *)(v16 > 1), v17 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v17 + 1;
          v8[v17 + 32] = v15;
          v5 = v19;
          v6 = v14;
          v7 = a2;
        }
        ++v9;
        if (v13 == v6)
        {
          swift_bridgeObjectRelease();
          return v8;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (char *)MEMORY[0x1E0DEE9D8];
}

char *sub_1908BCEA4(unint64_t a1, _QWORD *a2)
{
  void *v2;
  void *v3;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  char *v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;

  v3 = v2;
  v5 = a1;
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    v6 = sub_190A48484();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      v7 = v5 & 0xC000000000000001;
      v24 = (_QWORD *)a2[2];
      v8 = *(_QWORD **)(*v24 + 120);
      v22 = v6;
      v23 = (char *)MEMORY[0x1E0DEE9D8];
      for (i = 4; ; ++i)
      {
        v10 = i - 4;
        if (v7)
        {
          v11 = MEMORY[0x194013510](i - 4, v5);
          v12 = __OFADD__(v10, 1);
          v13 = i - 3;
          if (v12)
            goto LABEL_20;
        }
        else
        {
          v11 = *(_QWORD *)(v5 + 8 * i);
          swift_retain();
          v12 = __OFADD__(v10, 1);
          v13 = i - 3;
          if (v12)
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        a2 = v24;
        ((void (*)(uint64_t *__return_ptr, _QWORD, ValueMetadata *, ValueMetadata *))v8)(&v25, *(_QWORD *)(v11 + 24), &type metadata for ActivityFamily, &type metadata for ActivityFamily);
        if (v3)
        {

          swift_release();
          v3 = 0;
        }
        else
        {
          a2 = v8;
          v14 = v5;
          v15 = v7;
          swift_release();
          v16 = v25;
          if (v25 != 2)
          {
            v17 = v23;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v17 = sub_1908F2A58(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
            v18 = v17;
            v19 = *((_QWORD *)v17 + 2);
            v23 = v18;
            v20 = *((_QWORD *)v18 + 3);
            if (v19 >= v20 >> 1)
              v23 = sub_1908F2A58((char *)(v20 > 1), v19 + 1, 1, v23);
            *((_QWORD *)v23 + 2) = v19 + 1;
            v23[v19 + 32] = v16 & 1;
            v6 = v22;
          }
          v7 = v15;
          v5 = v14;
          v8 = a2;
        }
        if (v13 == v6)
        {
          swift_bridgeObjectRelease();
          return v23;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (char *)MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1908BD0B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1908BD134()
{
  return swift_release();
}

char *sub_1908BD13C(unint64_t a1, _QWORD *a2)
{
  void *v2;
  void *v3;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  char *v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;

  v3 = v2;
  v5 = a1;
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    v6 = sub_190A48484();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      v7 = v5 & 0xC000000000000001;
      v24 = (_QWORD *)a2[2];
      v8 = *(_QWORD **)(*v24 + 120);
      v22 = v6;
      v23 = (char *)MEMORY[0x1E0DEE9D8];
      for (i = 4; ; ++i)
      {
        v10 = i - 4;
        if (v7)
        {
          v11 = MEMORY[0x194013510](i - 4, v5);
          v12 = __OFADD__(v10, 1);
          v13 = i - 3;
          if (v12)
            goto LABEL_20;
        }
        else
        {
          v11 = *(_QWORD *)(v5 + 8 * i);
          swift_retain();
          v12 = __OFADD__(v10, 1);
          v13 = i - 3;
          if (v12)
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        a2 = v24;
        ((void (*)(uint64_t *__return_ptr, _QWORD, ValueMetadata *, ValueMetadata *))v8)(&v25, *(_QWORD *)(v11 + 24), &type metadata for ActivityUpdateAvailability, &type metadata for ActivityUpdateAvailability);
        if (v3)
        {

          swift_release();
          v3 = 0;
        }
        else
        {
          a2 = v8;
          v14 = v5;
          v15 = v7;
          swift_release();
          v16 = v25;
          if (v25 != 2)
          {
            v17 = v23;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v17 = sub_1908F2B70(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
            v18 = v17;
            v19 = *((_QWORD *)v17 + 2);
            v23 = v18;
            v20 = *((_QWORD *)v18 + 3);
            if (v19 >= v20 >> 1)
              v23 = sub_1908F2B70((char *)(v20 > 1), v19 + 1, 1, v23);
            *((_QWORD *)v23 + 2) = v19 + 1;
            v23[v19 + 32] = v16 & 1;
            v6 = v22;
          }
          v7 = v15;
          v5 = v14;
          v8 = a2;
        }
        if (v13 == v6)
        {
          swift_bridgeObjectRelease();
          return v23;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (char *)MEMORY[0x1E0DEE9D8];
}

char *sub_1908BD34C(unint64_t a1, _QWORD *a2)
{
  void *v2;
  void *v3;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  char *v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;

  v3 = v2;
  v5 = a1;
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    v6 = sub_190A48484();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      v7 = v5 & 0xC000000000000001;
      v24 = (_QWORD *)a2[2];
      v8 = *(_QWORD **)(*v24 + 120);
      v22 = v6;
      v23 = (char *)MEMORY[0x1E0DEE9D8];
      for (i = 4; ; ++i)
      {
        v10 = i - 4;
        if (v7)
        {
          v11 = MEMORY[0x194013510](i - 4, v5);
          v12 = __OFADD__(v10, 1);
          v13 = i - 3;
          if (v12)
            goto LABEL_20;
        }
        else
        {
          v11 = *(_QWORD *)(v5 + 8 * i);
          swift_retain();
          v12 = __OFADD__(v10, 1);
          v13 = i - 3;
          if (v12)
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        a2 = v24;
        ((void (*)(uint64_t *__return_ptr, _QWORD, ValueMetadata *, ValueMetadata *))v8)(&v25, *(_QWORD *)(v11 + 24), &type metadata for WidgetBackgroundStyle, &type metadata for WidgetBackgroundStyle);
        if (v3)
        {

          swift_release();
          v3 = 0;
        }
        else
        {
          a2 = v8;
          v14 = v5;
          v15 = v7;
          swift_release();
          v16 = v25;
          if (v25 != 3)
          {
            v17 = v23;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v17 = sub_1908F2B7C(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
            v18 = v17;
            v19 = *((_QWORD *)v17 + 2);
            v23 = v18;
            v20 = *((_QWORD *)v18 + 3);
            if (v19 >= v20 >> 1)
              v23 = sub_1908F2B7C((char *)(v20 > 1), v19 + 1, 1, v23);
            *((_QWORD *)v23 + 2) = v19 + 1;
            v23[v19 + 32] = v16;
            v6 = v22;
          }
          v7 = v15;
          v5 = v14;
          v8 = a2;
        }
        if (v13 == v6)
        {
          swift_bridgeObjectRelease();
          return v23;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (char *)MEMORY[0x1E0DEE9D8];
}

_QWORD *sub_1908BD558(unint64_t a1, _QWORD *a2)
{
  void *v2;
  void *v3;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD v26[2];
  _QWORD *v27;

  v3 = v2;
  v5 = a1;
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    v6 = sub_190A48484();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      v7 = v5 & 0xC000000000000001;
      v27 = (_QWORD *)a2[2];
      v8 = *(_QWORD **)(*v27 + 120);
      v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v9 = 4;
      v23 = v6;
      while (1)
      {
        v10 = v9 - 4;
        if (v7)
        {
          v11 = MEMORY[0x194013510](v9 - 4, v5);
          v12 = __OFADD__(v10, 1);
          v13 = v9 - 3;
          if (v12)
            goto LABEL_20;
        }
        else
        {
          v11 = *(_QWORD *)(v5 + 8 * v9);
          swift_retain();
          v12 = __OFADD__(v10, 1);
          v13 = v9 - 3;
          if (v12)
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        a2 = v27;
        ((void (*)(_QWORD *__return_ptr, _QWORD, ValueMetadata *, ValueMetadata *))v8)(v26, *(_QWORD *)(v11 + 24), &type metadata for WidgetRenderScheme, &type metadata for WidgetRenderScheme);
        if (v3)
        {

          swift_release();
          v3 = 0;
        }
        else
        {
          a2 = v8;
          v14 = v5;
          v15 = v7;
          swift_release();
          v16 = v26[0];
          if (LOBYTE(v26[0]) != 3)
          {
            v24 = v26[1];
            v17 = v25;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v17 = sub_1908F2B88(0, v25[2] + 1, 1, v25);
            v18 = v17;
            v19 = v17[2];
            v25 = v18;
            v20 = v18[3];
            if (v19 >= v20 >> 1)
              v25 = sub_1908F2B88((_QWORD *)(v20 > 1), v19 + 1, 1, v25);
            v25[2] = v19 + 1;
            v21 = &v25[2 * v19];
            *((_BYTE *)v21 + 32) = v16;
            v21[5] = v24;
            v6 = v23;
          }
          v7 = v15;
          v5 = v14;
          v8 = a2;
        }
        ++v9;
        if (v13 == v6)
        {
          swift_bridgeObjectRelease();
          return v25;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

_QWORD *sub_1908BD774(unint64_t a1, _QWORD *a2)
{
  void *v2;
  void *v3;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;

  v3 = v2;
  v5 = a1;
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    v6 = sub_190A48484();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      v7 = v5 & 0xC000000000000001;
      v28 = (_QWORD *)a2[2];
      v8 = *(_QWORD **)(*v28 + 120);
      v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v9 = 4;
      v23 = v6;
      while (1)
      {
        v10 = v9 - 4;
        if (v7)
        {
          v11 = MEMORY[0x194013510](v9 - 4, v5);
          v12 = __OFADD__(v10, 1);
          v13 = v9 - 3;
          if (v12)
            goto LABEL_20;
        }
        else
        {
          v11 = *(_QWORD *)(v5 + 8 * v9);
          swift_retain();
          v12 = __OFADD__(v10, 1);
          v13 = v9 - 3;
          if (v12)
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        a2 = v28;
        ((void (*)(uint64_t *__return_ptr, _QWORD, _QWORD, _QWORD))v8)(&v26, *(_QWORD *)(v11 + 24), MEMORY[0x1E0CB0338], MEMORY[0x1E0CB0338]);
        if (v3)
        {

          swift_release();
          v3 = 0;
        }
        else
        {
          a2 = v8;
          v14 = v5;
          v15 = v7;
          swift_release();
          v16 = v27;
          if (v27 >> 60 != 15)
          {
            v17 = v25;
            v24 = v26;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v17 = sub_1908F2C94(0, v25[2] + 1, 1, v25);
            v18 = v17;
            v19 = v17[2];
            v25 = v18;
            v20 = v18[3];
            if (v19 >= v20 >> 1)
              v25 = sub_1908F2C94((_QWORD *)(v20 > 1), v19 + 1, 1, v25);
            v25[2] = v19 + 1;
            v21 = &v25[2 * v19];
            v21[4] = v24;
            v21[5] = v16;
            v6 = v23;
          }
          v7 = v15;
          v5 = v14;
          v8 = a2;
        }
        ++v9;
        if (v13 == v6)
        {
          swift_bridgeObjectRelease();
          return v25;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1908BD98C(unint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD), uint64_t a5)
{
  void *v5;
  void *v8;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v33;
  uint64_t (*v34)(BOOL, uint64_t, uint64_t);
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  void (*v38)(_QWORD, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;

  v8 = v5;
  v36 = a3;
  v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a4(0);
  v37 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v35 = (char *)&v33 - v17;
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    v18 = sub_190A48484();
    if (v18)
      goto LABEL_3;
  }
  else
  {
    v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v18)
    {
LABEL_3:
      v34 = (uint64_t (*)(BOOL, uint64_t, uint64_t))a5;
      v41 = a1 & 0xC000000000000001;
      v39 = *(_QWORD *)(a2 + 16);
      v38 = *(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)v39 + 120);
      v43 = MEMORY[0x1E0DEE9D8];
      v19 = 4;
      a5 = v37;
      v40 = v18;
      while (1)
      {
        v20 = v19 - 4;
        if (v41)
        {
          v21 = MEMORY[0x194013510](v19 - 4, a1);
          v22 = __OFADD__(v20, 1);
          v23 = v19 - 3;
          if (v22)
            goto LABEL_22;
        }
        else
        {
          v21 = *(_QWORD *)(a1 + 8 * v19);
          swift_retain();
          v22 = __OFADD__(v20, 1);
          v23 = v19 - 3;
          if (v22)
          {
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
        }
        a2 = v39;
        v38(*(_QWORD *)(v21 + 24), v14, v14);
        if (v8)
        {

          v8 = 0;
          v24 = 1;
        }
        else
        {
          v24 = 0;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(a5 + 56))(v13, v24, 1, v14);
        swift_release();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(a5 + 48))(v13, 1, v14) == 1)
        {
          sub_1908AA544((uint64_t)v13, v36);
        }
        else
        {
          a2 = a1;
          v25 = *(void (**)(char *, char *, uint64_t))(a5 + 32);
          v26 = v35;
          v25(v35, v13, v14);
          v25(v42, v26, v14);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v27 = v43;
          else
            v27 = v34(0, *(_QWORD *)(v43 + 16) + 1, 1);
          v29 = *(_QWORD *)(v27 + 16);
          v28 = *(_QWORD *)(v27 + 24);
          if (v29 >= v28 >> 1)
            v27 = v34(v28 > 1, v29 + 1, 1);
          *(_QWORD *)(v27 + 16) = v29 + 1;
          v30 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
          v43 = v27;
          v31 = v27 + v30 + *(_QWORD *)(v37 + 72) * v29;
          a5 = v37;
          v25((char *)v31, v42, v14);
          a1 = a2;
        }
        ++v19;
        if (v23 == v40)
        {
          swift_bridgeObjectRelease();
          return v43;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

unint64_t sub_1908BDCB4(unint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD, uint64_t, uint64_t);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1EB238);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40);
  v33 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v32 = (uint64_t)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v28 = (uint64_t)&v26 - v10;
  if (a1 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    v11 = sub_190A48484();
    if (v11)
      goto LABEL_3;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
    {
LABEL_3:
      v31 = a1 & 0xC000000000000001;
      a2 = (_QWORD *)a2[2];
      v12 = MEMORY[0x1E0DEE9D8];
      v29 = *(void (**)(_QWORD, uint64_t, uint64_t))(*a2 + 120);
      v30 = v11;
      v13 = 4;
      v27 = a1;
      while (1)
      {
        v14 = v13 - 4;
        if (v31)
        {
          v15 = MEMORY[0x194013510](v13 - 4, a1);
          v16 = __OFADD__(v14, 1);
          v17 = v13 - 3;
          if (v16)
            goto LABEL_21;
        }
        else
        {
          v15 = *(_QWORD *)(a1 + 8 * v13);
          swift_retain();
          v16 = __OFADD__(v14, 1);
          v17 = v13 - 3;
          if (v16)
          {
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
        }
        v18 = v34;
        v29(*(_QWORD *)(v15 + 24), v7, v7);
        if (v18)
        {
          v19 = a1;

          v34 = 0;
          v20 = 1;
        }
        else
        {
          v34 = 0;
          v19 = a1;
          v20 = 0;
        }
        v21 = v33;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v6, v20, 1, v7);
        swift_release();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v6, 1, v7) == 1)
        {
          sub_1908AA544((uint64_t)v6, (uint64_t *)&unk_1EE1EB238);
          a1 = v19;
        }
        else
        {
          v22 = v28;
          sub_1908B4BD4((uint64_t)v6, v28, &qword_1ECF6AE40);
          sub_1908B4BD4(v22, v32, &qword_1ECF6AE40);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v12 = sub_1908F2DC8(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
          v24 = *(_QWORD *)(v12 + 16);
          v23 = *(_QWORD *)(v12 + 24);
          if (v24 >= v23 >> 1)
            v12 = sub_1908F2DC8(v23 > 1, v24 + 1, 1, v12);
          *(_QWORD *)(v12 + 16) = v24 + 1;
          sub_1908B4BD4(v32, v12+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v24, &qword_1ECF6AE40);
          a1 = v27;
        }
        ++v13;
        if (v17 == v30)
        {
          swift_bridgeObjectRelease();
          return v12;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1908BDFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C458);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_1908BE014()
{
  unint64_t result;

  result = qword_1ECF6C810;
  if (!qword_1ECF6C810)
  {
    result = MEMORY[0x19401429C](&unk_190A58428, &type metadata for WidgetMetricsKey);
    atomic_store(result, (unint64_t *)&qword_1ECF6C810);
  }
  return result;
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_1908BE094(a1, (unint64_t *)&unk_1ECF6CD38);
}

void type metadata accessor for CHSControlContentType(uint64_t a1)
{
  sub_1908BE094(a1, (unint64_t *)&unk_1EE1EC7B0);
}

void type metadata accessor for CHSWidgetFamily(uint64_t a1)
{
  sub_1908BE094(a1, &qword_1ECF6AE68);
}

void sub_1908BE094(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1908BE0D8()
{
  return sub_1908AA2F4((unint64_t *)&unk_1ECF6A6E0, (uint64_t (*)(uint64_t))type metadata accessor for CHSWidgetFamily, (uint64_t)&unk_190A4A1BC);
}

uint64_t sub_1908BE104()
{
  return sub_1908AA2F4((unint64_t *)&qword_1ECF6C598, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_190A4A2C8);
}

uint64_t sub_1908BE130()
{
  return sub_1908AA2F4(qword_1ECF6CD20, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_190A4A270);
}

uint64_t sub_1908BE164()
{
  return sub_1908BBD58() & 1;
}

id sub_1908BE1AC()
{
  uint64_t v0;
  uint64_t v1;
  id result;

  sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
  v0 = sub_190A47ADC();
  result = sub_19096BFDC(v0, v1, 1103, 0, 0xD000000000000036, 0x8000000190A60840);
  qword_1EE1FD738 = (uint64_t)result;
  return result;
}

id sub_1908BE21C()
{
  uint64_t v0;
  uint64_t v1;
  id result;

  sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
  v0 = sub_190A47ADC();
  result = sub_19096BFDC(v0, v1, 1100, 0, 0xD000000000000043, 0x8000000190A608A0);
  qword_1ECF6D428 = (uint64_t)result;
  return result;
}

uint64_t sub_1908BE28C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t (*v21)(uint64_t, uint64_t);
  void (*v22)(uint64_t, uint64_t, void (*)(), _QWORD *);
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD aBlock[7];

  v1 = sub_190A47980();
  v39 = *(_QWORD *)(v1 - 8);
  v40 = v1;
  MEMORY[0x1E0C80A78](v1);
  v38 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_190A479C8();
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x1E0C80A78](v3);
  v35 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WidgetDescriptor(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v46 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = v0;
  v9 = *(_QWORD *)(v0 + 32);
  v45 = *(_QWORD *)(v9 + 16);
  if (v45)
  {
    v10 = *(int *)(v7 + 72);
    v41 = v9 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v42 = v10;
    result = swift_bridgeObjectRetain();
    v12 = 0;
    v43 = v9;
    v44 = v6;
    while (v12 < *(_QWORD *)(v9 + 16))
    {
      v13 = *(_QWORD *)(v6 + 72);
      v47 = v12;
      v14 = v46;
      sub_1908AF5D8(v41 + v13 * v12, v46, type metadata accessor for WidgetDescriptor);
      v15 = *(_QWORD *)(v14 + v42);
      swift_bridgeObjectRetain();
      sub_1908B5150(v14, type metadata accessor for WidgetDescriptor);
      v48 = v15;
      v16 = *(_QWORD *)(v15 + 16);
      if (v16)
      {
        v17 = *(_QWORD *)(v49 + 16);
        v18 = *(_QWORD *)(v49 + 24);
        v19 = v16 - 1;
        for (i = v48 + 56; ; i += 32)
        {
          v21 = *(uint64_t (**)(uint64_t, uint64_t))(i - 24);
          v22 = *(void (**)(uint64_t, uint64_t, void (*)(), _QWORD *))(i - 8);
          swift_retain();
          swift_retain();
          if ((v21(v17, v18) & 1) != 0)
          {
            v23 = v49;
            dispatch_group_enter(*(dispatch_group_t *)(v49 + 64));
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A5C0);
            v24 = swift_allocObject();
            *(_DWORD *)(v24 + 20) = 0;
            *(_BYTE *)(v24 + 16) = 0;
            v25 = (_QWORD *)swift_allocObject();
            v25[2] = v24;
            v25[3] = v17;
            v25[4] = v18;
            v25[5] = v23;
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            v22(v17, v18, sub_1908CE6E8, v25);
            swift_release();
            v26 = (void *)objc_opt_self();
            v27 = (void *)sub_190A47AC4();
            objc_msgSend(v26, sel__sendPendingCallbacksForSessionIdentifier_, v27);
            swift_release();
            swift_release();
            swift_release();

            if (!v19)
              break;
          }
          else
          {
            swift_release();
            swift_release();
            if (!v19)
              break;
          }
          --v19;
        }
      }
      v12 = v47 + 1;
      result = swift_bridgeObjectRelease();
      v6 = v44;
      v9 = v43;
      if (v12 == v45)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3A0);
    v28 = (void *)sub_190A48004();
    v29 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_1908CE6AC;
    aBlock[5] = v29;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1908A9D98;
    aBlock[3] = &block_descriptor_187;
    v30 = _Block_copy(aBlock);
    swift_retain();
    v31 = v35;
    sub_190A47998();
    v50 = MEMORY[0x1E0DEE9D8];
    sub_1908AED38((unint64_t *)&qword_1ECF6D318, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
    sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
    v32 = v38;
    v33 = v40;
    sub_190A481E4();
    sub_190A47FD4();
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v32, v33);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v31, v37);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1908BE70C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  os_unfair_lock_s *v8;
  char v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;

  v8 = (os_unfair_lock_s *)(a1 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 20));
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = 1;
  os_unfair_lock_unlock(v8);
  if ((v9 & 1) != 0)
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v10 = sub_190A465A0();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ECF6D988);
    swift_bridgeObjectRetain_n();
    v11 = sub_190A46588();
    v12 = sub_190A47F5C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v24 = v14;
      *(_DWORD *)v13 = 136315138;
      swift_bridgeObjectRetain();
      sub_1908B35C4(a2, a3, &v24);
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1908A7000, v11, v12, "BUG IN CLIENT OF WIDGETKIT. Completion handler called multiple times by %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v14, -1, -1);
      MEMORY[0x194014398](v13, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v15 = sub_190A465A0();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ECF6D988);
    swift_retain_n();
    v16 = sub_190A46588();
    v17 = sub_190A47F44();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v24 = v19;
      *(_DWORD *)v18 = 136446466;
      sub_1908B35C4(0x6E657645646E6573, 0xEC00000029287374, &v24);
      sub_190A48178();
      *(_WORD *)(v18 + 12) = 2082;
      type metadata accessor for WidgetURLHandler();
      swift_retain();
      v20 = sub_190A47B00();
      sub_1908B35C4(v20, v21, &v24);
      sub_190A48178();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1908A7000, v16, v17, "%{public}s - %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194014398](v19, -1, -1);
      MEMORY[0x194014398](v18, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v22 = (void *)objc_opt_self();
    v23 = (void *)sub_190A47AC4();
    objc_msgSend(v22, sel__releaseProcessAssertionForSessionIdentifier_, v23);

    dispatch_group_leave(*(dispatch_group_t *)(a4 + 64));
  }
}

uint64_t sub_1908BEAD0()
{
  uint64_t result;
  void (*v1)(uint64_t);

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(void (**)(uint64_t))(result + 40);
    sub_1908B4C4C((uint64_t)v1);
    result = swift_release();
    if (v1)
    {
      v1(result);
      return sub_1908B467C((uint64_t)v1);
    }
  }
  return result;
}

uint64_t sub_1908BEB4C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1908B467C(*(_QWORD *)(v0 + 40));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WidgetURLHandler()
{
  return objc_opt_self();
}

uint64_t sub_1908BEBB0()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_190A487C0();
  v2 = *(id *)(v1 + 56);
  sub_190A48100();

  return sub_190A48808();
}

void sub_1908BEC00()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 56);
  sub_190A48100();

}

uint64_t sub_1908BEC48()
{
  uint64_t v0;
  id v1;

  sub_190A487C0();
  v1 = *(id *)(*(_QWORD *)v0 + 56);
  sub_190A48100();

  return sub_190A48808();
}

uint64_t sub_1908BEC94()
{
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6C5E0);
  return sub_190A480F4() & 1;
}

uint64_t sub_1908BECE8()
{
  uint64_t v0;

  v0 = sub_190A478B4();
  __swift_allocate_value_buffer(v0, qword_1ECF6D410);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ECF6D410);
  return sub_190A478A8();
}

uint64_t sub_1908BED48(uint64_t result)
{
  void (*v1)(uint64_t);
  unint64_t v2;
  uint64_t v3;

  if ((_QWORD)xmmword_1ECF6D940)
  {
    v1 = (void (*)(uint64_t))result;
    v2 = (*(uint64_t (**)(_QWORD))(qword_1ECF6D950 + 16))(*(_QWORD *)xmmword_1ECF6D940);
    v3 = sub_190954928(v2);
    swift_bridgeObjectRelease();
    v1(v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1908BEDE8(uint64_t a1, uint64_t a2)
{
  id v3;

  sub_1908AB890(0, &qword_1ECF6D250);
  v3 = (id)sub_190A47C50();
  (*(void (**)(uint64_t, id))(a2 + 16))(a2, v3);

}

uint64_t sub_1908BEE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t aBlock[6];

  v30 = a4;
  v7 = sub_190A47980();
  v33 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_190A479C8();
  v31 = *(_QWORD *)(v10 - 8);
  v32 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v13 = sub_190A465A0();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ECF6D988);
  v14 = sub_190A46588();
  v15 = sub_190A47F68();
  if (os_log_type_enabled(v14, v15))
  {
    v28 = v7;
    v16 = swift_slowAlloc();
    v27 = a3;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    aBlock[0] = v18;
    *(_DWORD *)v17 = 136446210;
    v34 = sub_1908B35C4(0xD000000000000027, 0x8000000190A608F0, aBlock);
    v7 = v28;
    sub_190A48178();
    _os_log_impl(&dword_1908A7000, v14, v15, "%{public}s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v18, -1, -1);
    v19 = v17;
    a3 = v27;
    MEMORY[0x194014398](v19, -1, -1);
  }

  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = MEMORY[0x1E0DEE9D8];
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3A0);
  v21 = (void *)sub_190A48004();
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v20;
  v22[3] = a3;
  v23 = v29;
  v22[4] = v30;
  v22[5] = a1;
  v22[6] = a2;
  v22[7] = v23;
  aBlock[4] = (uint64_t)sub_1908CE34C;
  aBlock[5] = (uint64_t)v22;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1908A9D98;
  aBlock[3] = (uint64_t)&block_descriptor_107;
  v24 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v25 = v23;
  swift_release();
  sub_190A47998();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1908AED38((unint64_t *)&qword_1ECF6D318, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
  sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
  sub_190A481E4();
  MEMORY[0x194013234](0, v12, v9, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v32);
  return swift_release();
}

uint64_t sub_1908BF21C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  char *v33;
  char *v34;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[6];
  uint64_t v44;

  v37 = a4;
  v11 = sub_190A47980();
  v41 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  MEMORY[0x1E0C80A78](v11);
  v38 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_190A479C8();
  v39 = *(_QWORD *)(v13 - 8);
  v40 = v13;
  result = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((_QWORD)xmmword_1ECF6D940)
  {
    v17 = *(_QWORD *)xmmword_1ECF6D940;
    aBlock[0] = xmmword_1ECF6D940;
    v18 = (*(uint64_t (**)(uint64_t))(qword_1ECF6D950 + 24))(v17);
    swift_beginAccess();
    *(_QWORD *)(a1 + 16) = v18;
    swift_bridgeObjectRelease();
    type metadata accessor for UnfairLock();
    v19 = swift_allocObject();
    v20 = (_DWORD *)swift_slowAlloc();
    *v20 = 0;
    *(_QWORD *)(v19 + 16) = v20;
    v21 = swift_allocObject();
    *(_BYTE *)(v21 + 16) = 0;
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = v19;
    v22[3] = v21;
    v36[0] = v19;
    v36[1] = v21;
    v22[4] = a2;
    v22[5] = a3;
    swift_beginAccess();
    v23 = *(_QWORD *)(a1 + 16);
    type metadata accessor for WidgetURLHandler();
    v24 = (_QWORD *)swift_allocObject();
    v24[5] = 0;
    v24[6] = 0;
    v25 = objc_allocWithZone(MEMORY[0x1E0CB3A28]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24[7] = objc_msgSend(v25, sel_init);
    v24[8] = dispatch_group_create();
    v24[2] = v37;
    v24[3] = a5;
    v24[4] = v23;
    swift_beginAccess();
    swift_retain();
    sub_1908F51A0(&v44, (uint64_t)v24);
    swift_endAccess();
    swift_release();
    v26 = swift_allocObject();
    swift_weakInit();
    v27 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v28 = (_QWORD *)swift_allocObject();
    v28[2] = v27;
    v28[3] = v26;
    v28[4] = sub_1908CE370;
    v28[5] = v22;
    v29 = v24[5];
    v24[5] = sub_1908CE3D8;
    v24[6] = v28;
    swift_retain();
    swift_retain();
    sub_1908B467C(v29);
    v30 = *(void **)(a6 + OBJC_IVAR____TtCC9WidgetKit24WidgetExtensionXPCServer14ExportedObject__queue);
    aBlock[4] = sub_1908CE3E4;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1908A9D98;
    aBlock[3] = &block_descriptor_123;
    v31 = _Block_copy(aBlock);
    swift_retain();
    v32 = v30;
    sub_190A47998();
    v44 = MEMORY[0x1E0DEE9D8];
    sub_1908AED38((unint64_t *)&qword_1ECF6D318, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
    v33 = v16;
    sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
    v34 = v38;
    v35 = v42;
    sub_190A481E4();
    MEMORY[0x194013234](0, v33, v34, v31);
    _Block_release(v31);
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v41 + 8))(v34, v35);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v33, v40);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1908BF67C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  _BYTE *v6;
  uint64_t result;

  v6 = (_BYTE *)(a2 + 16);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 16));
  swift_beginAccess();
  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
  {
    result = sub_190A48448();
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    *v6 = 1;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 16));
    return a3();
  }
  return result;
}

uint64_t sub_1908BF758(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t Strong;
  uint64_t v8;

  v4 = a1 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x19401444C](v4);
  if (v5)
  {
    v6 = (void *)v5;
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v8 = Strong;
      swift_beginAccess();
      sub_1909DF9F0(v8);
      swift_endAccess();
      swift_release();

      swift_release();
    }
    else
    {

    }
  }
  return a3();
}

uint64_t sub_1908BF8D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t (*a7)(_QWORD))
{
  _BYTE *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t result;
  uint64_t (*v35)(_QWORD);
  void *v36;
  uint64_t v37;

  v13 = (_BYTE *)(a3 + 16);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a2 + 16));
  swift_beginAccess();
  if ((*(_BYTE *)(a3 + 16) & 1) != 0)
  {
    result = sub_190A48448();
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    *v13 = 1;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(a2 + 16));
    if (a1)
    {
      v14 = qword_1ECF6BA00;
      v36 = a1;
      v15 = a1;
      if (v14 != -1)
        swift_once();
      v16 = sub_190A465A0();
      __swift_project_value_buffer(v16, (uint64_t)qword_1ECF6D800);
      swift_bridgeObjectRetain_n();
      v17 = v15;
      v18 = sub_190A46588();
      v19 = sub_190A47F68();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = swift_slowAlloc();
        v21 = (_QWORD *)swift_slowAlloc();
        v35 = a7;
        v22 = swift_slowAlloc();
        v37 = v22;
        *(_DWORD *)v20 = 136446466;
        swift_bridgeObjectRetain();
        sub_1908B35C4(a4, a5, &v37);
        sub_190A48178();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v20 + 12) = 2114;
        v23 = v17;
        sub_190A48178();
        a1 = v36;
        *v21 = v36;

        _os_log_impl(&dword_1908A7000, v18, v19, "Batch ended (%{public}s) - failure: %{public}@", (uint8_t *)v20, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
        swift_arrayDestroy();
        MEMORY[0x194014398](v21, -1, -1);
        swift_arrayDestroy();
        v24 = v22;
        a7 = v35;
        MEMORY[0x194014398](v24, -1, -1);
        MEMORY[0x194014398](v20, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        a1 = v36;
      }
    }
    else
    {
      if (qword_1ECF6BA00 != -1)
        swift_once();
      v25 = sub_190A465A0();
      __swift_project_value_buffer(v25, (uint64_t)qword_1ECF6D800);
      swift_bridgeObjectRetain_n();
      v26 = sub_190A46588();
      v27 = sub_190A47F68();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        v29 = swift_slowAlloc();
        v37 = v29;
        *(_DWORD *)v28 = 136446210;
        swift_bridgeObjectRetain();
        sub_1908B35C4(a4, a5, &v37);
        sub_190A48178();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1908A7000, v26, v27, "Batch ended (%{public}s) - success", v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x194014398](v29, -1, -1);
        MEMORY[0x194014398](v28, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    sub_190A48034();
    if (qword_1ECF6C4D0 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5C0);
    v30 = swift_allocObject();
    v31 = v30;
    *(_OWORD *)(v30 + 16) = xmmword_190A4A350;
    if (a1)
      v32 = 1702195828;
    else
      v32 = 0x65736C6166;
    if (a1)
      v33 = 0xE400000000000000;
    else
      v33 = 0xE500000000000000;
    *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v30 + 64) = sub_1908CDCD0();
    *(_QWORD *)(v31 + 32) = v32;
    *(_QWORD *)(v31 + 40) = v33;
    sub_190A464E0();
    swift_bridgeObjectRelease();
    return a7(a1);
  }
  return result;
}

void sub_1908BFE48(unint64_t a1, void (*a2)(void *))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;

  v13 = 0;
  if (a1 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_190A48484())
  {
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0
         ? (char *)MEMORY[0x194013510](v5 - 4, a1)
         : (char *)*(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = (void *)MEMORY[0x194013CB4]();
      sub_1908BFFB4(v7, &v13);
      objc_autoreleasePoolPop(v9);
      v10 = v13;
      if (v13)
      {
        v11 = v13;
        swift_bridgeObjectRelease();
        v12 = v11;
        a2(v10);

        return;
      }

      ++v5;
      if (v8 == v4)
        goto LABEL_10;
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  a2(0);
}

void sub_1908BFFB4(char *a1, void **a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  os_unfair_lock_t *v11;
  uint64_t KeyPath;
  os_unfair_lock_s *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  id v18;
  unint64_t v19;
  _QWORD *v20;
  id v21;
  unsigned int v22;
  id v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  os_log_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(__int128 *__return_ptr, id, uint64_t, uint64_t);
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  _UNKNOWN **v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  size_t v62;
  id v63;
  char *v64;
  void *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  os_log_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  id v74;
  uint64_t v75;
  void *v76;
  id v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  void *v82;
  unint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  uint8_t *v87;
  uint64_t v88;
  uint64_t v89;
  os_log_t v90;
  id v91;
  void *v92;
  id v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  os_log_t v98;
  uint64_t v99;
  void **v100;
  id v101;
  unint64_t v102;
  id v103;
  uint64_t v104;
  char *v105;
  id v106;
  unint64_t v107;
  uint8_t *v108;
  os_log_t v109;
  id v110;
  __int128 v111[2];
  uint64_t v112;
  _OWORD v113[2];
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  _UNKNOWN **v118;
  unsigned __int16 v119;
  unsigned __int8 v120;
  uint64_t v121;
  uint64_t v122;
  unsigned __int8 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  char v128;
  char v129;

  v108 = (uint8_t *)type metadata accessor for TimelineReloadPolicy();
  MEMORY[0x1E0C80A78](v108);
  v109 = (os_log_t)((char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(id *)&a1[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_kind + 8];
  v110 = *(id *)&a1[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_kind];
  v11 = *(os_unfair_lock_t **)&a1[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_environment];
  v10 = *(void **)&a1[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_environment + 8];
  KeyPath = swift_getKeyPath();
  v13 = v11[2];
  swift_bridgeObjectRetain();
  swift_retain_n();
  v14 = v10;
  os_unfair_lock_lock(v13);
  v15 = sub_1908B7CA0(KeyPath);
  os_unfair_lock_unlock(v11[2]);

  swift_release();
  swift_release_n();
  if (!v15)
    goto LABEL_18;
  if (!*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_18:
    swift_bridgeObjectRelease();
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
    v35 = sub_190A47ADC();
    v37 = 0x8000000190A609D0;
    v38 = 0xD000000000000010;
LABEL_43:
    v91 = sub_19096BFDC(v35, v36, 1102, 0, v38, v37);
    v92 = *a2;
    *a2 = v91;

    return;
  }
  v107 = *(unsigned __int8 *)(v15 + 32);
  swift_bridgeObjectRelease();
  v16 = swift_getKeyPath();
  v17 = v11[2];
  swift_retain_n();
  v18 = v14;
  os_unfair_lock_lock(v17);
  v19 = sub_1908B7A4C(v16);
  os_unfair_lock_unlock(v11[2]);
  v106 = v18;

  swift_release();
  swift_release_n();
  if (!v19)
    goto LABEL_42;
  if (!(v19 >> 62))
  {
    v20 = *(_QWORD **)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v20)
      goto LABEL_6;
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v20 = (_QWORD *)sub_190A48484();
  swift_bridgeObjectRelease();
  if (!v20)
  {
LABEL_41:
    swift_bridgeObjectRelease();
LABEL_42:
    swift_bridgeObjectRelease();
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
    v35 = sub_190A47ADC();
    v38 = 0xD000000000000011;
    v37 = 0x8000000190A609F0;
    goto LABEL_43;
  }
LABEL_6:
  if ((v19 & 0xC000000000000001) != 0)
  {
    v21 = (id)MEMORY[0x194013510](0, v19);
  }
  else
  {
    if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_46:
      swift_once();
LABEL_29:
      v68 = __swift_project_value_buffer((uint64_t)v108, (uint64_t)qword_1ECF6BE78);
      v69 = v109;
      sub_1908AF5D8(v68, (uint64_t)v109, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
      v70 = type metadata accessor for WidgetViewCollection();
      swift_allocObject();
      v71 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v11, &v115, v20, (uint64_t)v69, 1);
      v72 = type metadata accessor for WidgetArchiver();
      v117 = v70;
      v118 = &protocol witness table for WidgetViewCollection;
      *(_QWORD *)&v115 = v71;
      v73 = (uint64_t *)swift_retain();
      v74 = sub_1908CAA04(v73);
      sub_190999714(&v115, (uint64_t)v74, v72, v103);
      if (a1)
      {
        swift_bridgeObjectRelease();
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v115);
        v75 = sub_190A45F4C();

        swift_release();
        swift_release();
        swift_release();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v76 = *v100;
        *v100 = (void *)v75;

      }
      else
      {
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v115);
        v83 = v102;
        swift_bridgeObjectRetain();
        v84 = sub_190A46588();
        v85 = sub_190A47F68();
        if (os_log_type_enabled(v84, v85))
        {
          v86 = swift_slowAlloc();
          v109 = v84;
          v87 = (uint8_t *)v86;
          v88 = swift_slowAlloc();
          v105 = 0;
          v89 = v88;
          *(_QWORD *)&v115 = v88;
          *(_DWORD *)v87 = 136446210;
          v108 = v87 + 4;
          swift_bridgeObjectRetain();
          *(_QWORD *)&v113[0] = sub_1908B35C4(v95, v83, (uint64_t *)&v115);
          sub_190A48178();
          swift_bridgeObjectRelease_n();
          v90 = v109;
          _os_log_impl(&dword_1908A7000, v109, v85, "Request ended for %{public}s - success.", v87, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x194014398](v89, -1, -1);
          MEMORY[0x194014398](v87, -1, -1);
          swift_release();

          swift_release();
          swift_release();

        }
        else
        {

          swift_release();
          swift_bridgeObjectRelease_n();
          swift_release();
          swift_release();

        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
      return;
    }
    v21 = *(id *)(v19 + 32);
  }
  v101 = v21;
  v22 = v107;
  v100 = a2;
  v105 = v2;
  swift_bridgeObjectRelease();
  v103 = *(id *)&a1[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_fileHandle];
  *(_QWORD *)&v115 = v110;
  *((_QWORD *)&v115 + 1) = v9;
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  if (v22 >= 0xD || ((0x13BFu >> v22) & 1) == 0)
  {
LABEL_49:
    sub_190A486D0();
    __break(1u);
    return;
  }
  v104 = (char)v22;
  v23 = (id)NSStringFromWidgetFamily();
  sub_190A47ADC();

  sub_190A47B3C();
  swift_bridgeObjectRelease();
  v24 = v115;
  if (qword_1ECF6BA00 != -1)
    swift_once();
  v25 = sub_190A465A0();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ECF6D800);
  swift_bridgeObjectRetain_n();
  v27 = v103;
  v28 = sub_190A46588();
  LODWORD(v99) = sub_190A47F68();
  v29 = os_log_type_enabled(v28, (os_log_type_t)v99);
  v103 = v27;
  v102 = *((_QWORD *)&v24 + 1);
  v95 = v24;
  v96 = v26;
  if (v29)
  {
    v98 = v28;
    v30 = swift_slowAlloc();
    v97 = swift_slowAlloc();
    *(_QWORD *)&v115 = v97;
    *(_DWORD *)v30 = 136446466;
    swift_bridgeObjectRetain();
    v124 = sub_1908B35C4(v24, *((unint64_t *)&v24 + 1), (uint64_t *)&v115);
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 12) = 2082;
    sub_190957744((uint64_t)v8);
    v31 = sub_190A45FC4();
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v8, 1, v31) == 1)
    {
      sub_1908AA544((uint64_t)v8, (uint64_t *)&unk_1ECF6C858);
      v33 = 0xE700000000000000;
      v34 = 0x6E776F6E6B6E75;
    }
    else
    {
      v34 = sub_190A45FAC();
      v33 = v39;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v31);
    }
    v124 = sub_1908B35C4(v34, v33, (uint64_t *)&v115);
    sub_190A48178();
    v40 = v103;

    swift_bridgeObjectRelease();
    v41 = v98;
    _os_log_impl(&dword_1908A7000, v98, (os_log_type_t)v99, "Request began for %{public}s - to archive: %{public}s", (uint8_t *)v30, 0x16u);
    v42 = v97;
    swift_arrayDestroy();
    MEMORY[0x194014398](v42, -1, -1);
    MEMORY[0x194014398](v30, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v43 = *(id *)&a1[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_extensionIdentity];
  if (v104 >= 0xD || ((0x13BFu >> v104) & 1) == 0)
  {
LABEL_48:
    v93 = v43;
    goto LABEL_49;
  }
  v44 = qword_190A4A580[(char)v107];
  v45 = objc_allocWithZone(MEMORY[0x1E0D10148]);
  v43 = v43;
  v46 = (void *)sub_190A47AC4();
  swift_bridgeObjectRelease();
  v47 = objc_msgSend(v45, sel_initWithExtensionIdentity_kind_family_intent_activityIdentifier_, v43, v46, v44, 0, 0);

  if (!(_QWORD)xmmword_1ECF6D940)
  {
    __break(1u);
    goto LABEL_48;
  }
  v48 = qword_1ECF6D950;
  v49 = *(_QWORD *)xmmword_1ECF6D940;
  *(_QWORD *)&v113[0] = xmmword_1ECF6D940;
  v50 = *(void (**)(__int128 *__return_ptr, id, uint64_t, uint64_t))(qword_1ECF6D950 + 40);
  swift_retain();
  v50(&v115, v47, v49, v48);
  swift_release();
  if (v117)
  {
    sub_1908B4BBC(&v115, (uint64_t)&v124);
    v51 = v106;
    *(_QWORD *)&v115 = v11;
    *((_QWORD *)&v115 + 1) = v106;
    swift_retain();
    v94 = v51;
    TimelineProviderContext.EnvironmentVariants.init(_:)((uint64_t *)&v115, v113);
    v111[0] = v113[0];
    v111[1] = v113[1];
    v112 = v114;
    InternalWidgetFamily.init(_:)((uint64_t)objc_msgSend(v47, sel_family), &v129);
    v128 = a1[OBJC_IVAR____TtC9WidgetKit18PlaceholderRequest_archiveVersion];
    TimelineProviderContext.init(environmentVariants:family:isPreview:archiveVersion:)(v111, &v129, 0, &v128, (uint64_t)&v115);
    v110 = (id)*((_QWORD *)&v115 + 1);
    v52 = v115;
    v54 = v116;
    v53 = (void *)v117;
    v55 = v118;
    LODWORD(v98) = v119;
    LODWORD(v97) = v120;
    v56 = v121;
    v57 = v122;
    v127 = v123;
    v58 = v125;
    v59 = v126;
    __swift_project_boxed_opaque_existential_1(&v124, v125);
    v99 = v52;
    *(_QWORD *)&v115 = v52;
    v60 = v110;
    *((_QWORD *)&v115 + 1) = v110;
    v116 = v54;
    v104 = v54;
    v106 = v53;
    v117 = (uint64_t)v53;
    v118 = v55;
    v107 = (unint64_t)v55;
    v119 = (unsigned __int16)v98;
    v120 = v97;
    v121 = v56;
    v122 = v57;
    v123 = v127;
    v61 = (*(uint64_t (**)(id, __int128 *, uint64_t, uint64_t))(v59 + 24))(v47, &v115, v58, v59);
    if (!v61)
    {
      swift_bridgeObjectRelease();
      sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
      v79 = sub_190A47ADC();
      v81 = sub_19096BFDC(v79, v80, 1101, 0, 0xD00000000000001BLL, 0x8000000190A60A10);

      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v82 = *v100;
      *v100 = v81;

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
      return;
    }
    v62 = sub_1908BB678(v61);
    v63 = v47;
    v9 = v101;
    v64 = v105;
    v20 = (_QWORD *)sub_1908C99CC(v62, v63, v9);
    a1 = v64;
    swift_release();

    v65 = v94;
    *(_QWORD *)&v115 = v11;
    *((_QWORD *)&v115 + 1) = v94;
    v66 = qword_1ECF6BE60;
    swift_retain();
    v67 = v65;
    v11 = (os_unfair_lock_t *)v63;
    if (v66 == -1)
      goto LABEL_29;
    goto LABEL_46;
  }
  swift_bridgeObjectRelease();
  sub_1908AA544((uint64_t)&v115, &qword_1EE1EC8F8);
  if (qword_1ECF6A5C8 != -1)
    swift_once();
  v77 = (id)qword_1ECF6D428;

  v78 = *v100;
  *v100 = v77;

}

uint64_t sub_1908C0DFC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  char **v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  id v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  int *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;

  v54 = a2;
  v55 = (char *)a1;
  v65 = a4;
  v6 = sub_190A46084();
  v63 = *(_QWORD *)(v6 - 8);
  v64 = v6;
  MEMORY[0x1E0C80A78](v6);
  v62 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ViewableTimelineEntry();
  v60 = (int *)v8;
  MEMORY[0x1E0C80A78](v8);
  v61 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_190A46924();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A848);
  v57 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v59 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v56 = (char *)&v51 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v51 - v19;
  v21 = *(_QWORD *)(a1 + *(int *)(v8 + 20));
  KeyPath = swift_getKeyPath();
  v23 = swift_getKeyPath();
  swift_retain();
  v24 = v54;
  v25 = a3;
  v26 = objc_msgSend(v24, sel_family);
  v66 = v21;
  v67 = v24;
  v68 = v25;
  v69 = v26;
  v70 = KeyPath;
  v71 = 0;
  v72 = v23;
  v73 = 0;
  v74 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F0);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_190A4A360;
  sub_190A468F4();
  sub_190A46900();
  v75 = v27;
  sub_1908AED38(&qword_1ECF6B978, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDA008], MEMORY[0x1E0CDA028]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B980);
  sub_1908AAA08(&qword_1ECF6B988, &qword_1ECF6B980);
  sub_190A481E4();
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B020);
  v54 = (id)sub_1908CE004();
  v28 = v20;
  v53 = v20;
  sub_190A47620();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v29 = v67;
  v30 = v70;
  LOBYTE(v13) = v71;
  v31 = v72;
  v32 = v73;
  LOBYTE(v11) = v74;

  swift_release();
  sub_1908CE654(v30, (char)v13);
  sub_1908CE660(v31, v32, v11);
  v33 = v61;
  sub_1908AF5D8((uint64_t)v55, v61, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
  v34 = v56;
  v35 = v57;
  v36 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  v37 = v58;
  v36(v56, v28, v58);
  v39 = v62;
  v38 = v63;
  v40 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v33, v64);
  v36(v59, v34, v37);
  v66 = v52;
  v67 = v54;
  swift_getOpaqueTypeConformance2();
  v41 = sub_190A47884();
  v42 = v60;
  v43 = (char **)(v33 + v60[6]);
  v59 = *v43;
  v55 = v43[1];
  LODWORD(v54) = *((unsigned __int8 *)v43 + 16);
  v44 = *(void (**)(char *, uint64_t))(v35 + 8);
  v44(v34, v37);
  sub_1908B5150(v33, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
  v45 = v65;
  v46 = v65 + v42[7];
  v47 = type metadata accessor for WidgetViewMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v45, v39, v40);
  *(_QWORD *)(v45 + v42[5]) = v41;
  v48 = v45 + v42[6];
  v49 = (uint64_t)v55;
  *(_QWORD *)v48 = v59;
  *(_QWORD *)(v48 + 8) = v49;
  *(_BYTE *)(v48 + 16) = (_BYTE)v54;
  *(_OWORD *)(v45 + v42[8]) = xmmword_190A4A370;
  return ((uint64_t (*)(char *, uint64_t))v44)(v53, v37);
}

uint64_t sub_1908C1404(unint64_t a1, int a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  _QWORD v48[3];
  os_log_t v49;
  int v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;

  v6 = v5;
  v58 = a4;
  v57 = a2;
  v10 = sub_190A46180();
  v55 = *(_QWORD *)(v10 - 8);
  v56 = v10;
  MEMORY[0x1E0C80A78](v10);
  v54 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_190A460CC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v16 = sub_190A48484();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  sub_190A460C0();
  v17 = sub_190A46090();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1908CA1DC(6uLL, v17, v19);
  swift_bridgeObjectRelease();
  sub_190A48160();
  swift_bridgeObjectRelease();
  v60 = 2976116;
  v61 = 0xE300000000000000;
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  v21 = v60;
  v20 = v61;
  if (v16 < 1)
    goto LABEL_8;
  if (qword_1ECF6AAC0 != -1)
    goto LABEL_17;
  while (1)
  {
    v22 = sub_190A465A0();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ECF6D4A0);
    swift_bridgeObjectRetain_n();
    v23 = sub_190A46588();
    v24 = sub_190A47F68();
    v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v26 = swift_slowAlloc();
      v53 = v16;
      v50 = v25;
      v27 = v26;
      v51 = swift_slowAlloc();
      v60 = v51;
      *(_DWORD *)v27 = 136446466;
      v49 = v23;
      swift_bridgeObjectRetain();
      v59 = sub_1908B35C4(v21, v20, &v60);
      v48[2] = &v60;
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 2082;
      v48[1] = v27 + 14;
      v28 = v54;
      sub_190A46138();
      sub_1908AED38((unint64_t *)&unk_1ECF6D258, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E70]);
      v29 = v21;
      v30 = v56;
      v31 = sub_190A4867C();
      v52 = a3;
      v32 = a5;
      v33 = v6;
      v35 = v34;
      v36 = v30;
      v21 = v29;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v28, v36);
      v59 = sub_1908B35C4(v31, v35, &v60);
      sub_190A48178();
      v6 = v33;
      a5 = v32;
      a3 = v52;
      swift_bridgeObjectRelease();
      v37 = v49;
      _os_log_impl(&dword_1908A7000, v49, (os_log_type_t)v50, "Batch begin (%{public}s) - locale: %{public}s", (uint8_t *)v27, 0x16u);
      v38 = v51;
      swift_arrayDestroy();
      MEMORY[0x194014398](v38, -1, -1);
      v16 = v53;
      MEMORY[0x194014398](v27, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
LABEL_8:
    v39 = swift_allocObject();
    *(_BYTE *)(v39 + 16) = v16 > 0;
    *(_QWORD *)(v39 + 24) = v21;
    *(_QWORD *)(v39 + 32) = v20;
    v40 = v58;
    *(_QWORD *)(v39 + 40) = v58;
    *(_QWORD *)(v39 + 48) = a5;
    if ((a1 & 0xC000000000000001) != 0)
      break;
    if ((a3 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) > a3)
    {
      v41 = *(void **)(a1 + 8 * a3 + 32);
      swift_retain();
      v42 = v41;
      goto LABEL_12;
    }
    __break(1u);
LABEL_17:
    swift_once();
  }
  swift_retain();
  v42 = (char *)MEMORY[0x194013510](a3, a1);
LABEL_12:
  v43 = v42;
  v44 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = v44;
  *(_QWORD *)(v45 + 24) = v40;
  *(_QWORD *)(v45 + 32) = a5;
  *(_QWORD *)(v45 + 40) = a3;
  *(_QWORD *)(v45 + 48) = a1;
  v46 = v57 & 1;
  *(_BYTE *)(v45 + 56) = v46;
  *(_QWORD *)(v45 + 64) = sub_1908CE228;
  *(_QWORD *)(v45 + 72) = v39;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1908C1B30(v43, v46, (uint64_t)sub_1908CE2B8, v45);
  swift_release();

  swift_release();
  return swift_release();
}

void sub_1908C1910(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, unint64_t a6, char a7, void (*a8)(uint64_t))
{
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v15 = a2 + 16;
  swift_beginAccess();
  v16 = MEMORY[0x19401444C](v15);
  if (!v16)
  {
    if (qword_1ECF6AAC0 != -1)
      swift_once();
    v19 = sub_190A465A0();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ECF6D4A0);
    v20 = sub_190A46588();
    v21 = sub_190A47F68();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1908A7000, v20, v21, "WidgetExtensionXPCServer disappeared", v22, 2u);
      MEMORY[0x194014398](v22, -1, -1);
    }

    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
    v23 = sub_190A47ADC();
    v17 = sub_19096BFDC(v23, v24, 1050, 0, 0xD000000000000024, 0x8000000190A60710);
    a3();
    goto LABEL_15;
  }
  v17 = (id)v16;
  if (a1)
  {
    v18 = a1;
    goto LABEL_14;
  }
  if (a6 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = sub_190A48484();
    swift_bridgeObjectRelease();
    v26 = v27 - 1;
    if (!__OFSUB__(v27, 1))
      goto LABEL_11;
  }
  else
  {
    v25 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v26 = v25 - 1;
    if (!__OFSUB__(v25, 1))
    {
LABEL_11:
      if (v26 > a5)
      {
        sub_1908C1404(a6, a7 & 1, a5 + 1, a3, a4);
LABEL_15:

        return;
      }
      v18 = 0;
LABEL_14:
      a8(v18);
      goto LABEL_15;
    }
  }
  __break(1u);
}

uint64_t sub_1908C1B30(char *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  unint64_t v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint8_t *v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  NSObject *v48;
  os_log_type_t v49;
  _BOOL4 v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  id v63;
  char *v64;
  uint64_t v65;
  id v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  BOOL v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  unint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  char *v95;
  id v96;
  char *v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;

  v104 = a3;
  v105 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F8);
  MEMORY[0x1E0C80A78](v6);
  v113 = (uint64_t)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_190A4651C();
  v103 = *(_QWORD *)(v114 - 8);
  v8 = MEMORY[0x1E0C80A78](v114);
  v110 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = v9;
  MEMORY[0x1E0C80A78](v8);
  v112 = (char *)&v95 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_190A465A0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v109 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v95 - v19;
  v98 = a2;
  v111 = v18;
  v102 = v15;
  if ((a2 & 1) != 0)
  {
    if (qword_1ECF6A748 != -1)
      swift_once();
    v21 = qword_1ECF6D448;
  }
  else
  {
    if (qword_1ECF6AAC0 != -1)
      swift_once();
    v21 = qword_1ECF6D4A0;
  }
  v22 = __swift_project_value_buffer(v14, (uint64_t)v21);
  v97 = *(char **)(v15 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v97)(v20, v22, v14);
  v23 = *(void **)&a1[OBJC_IVAR____TtC9WidgetKit15TimelineRequest_widget];
  v24 = objc_msgSend(v23, sel_kind);
  v25 = sub_190A47ADC();
  v27 = v26;

  v116 = v25;
  v117 = v27;
  sub_190A47B3C();
  objc_msgSend(v23, sel_family);
  v28 = (id)NSStringFromWidgetFamily();
  sub_190A47ADC();

  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v29 = objc_msgSend(v23, sel_intentReference);
  if (v29)
  {
    v30 = v29;
    v31 = objc_msgSend(v29, sel_stableHash);

    v115 = (uint64_t)v31;
    sub_1908CDF2C();
    sub_190A4819C();
  }
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  v32 = v117;
  v108 = v116;
  v33 = objc_msgSend(v23, sel_intentReference);
  v95 = v13;
  if (v33)
  {
    v34 = v33;
    v35 = objc_msgSend(v33, sel_intent);

  }
  else
  {
    v35 = 0;
  }
  v36 = v35;
  v37 = sub_190A46588();
  v38 = sub_190A47F68();
  v39 = os_log_type_enabled(v37, v38);
  v107 = v32;
  if (v39)
  {
    v106 = a1;
    v40 = (uint8_t *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v116 = v41;
    *(_DWORD *)v40 = 136315138;
    if (v35)
    {
      v42 = v36;
      v43 = objc_msgSend(v36, sel_description);
      v44 = sub_190A47ADC();
      v46 = v45;

    }
    else
    {
      v46 = 0xE300000000000000;
      v44 = 7104878;
      v42 = v36;
    }
    v115 = sub_1908B35C4(v44, v46, &v116);
    sub_190A48178();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v37, v38, "intent = %s", v40, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v41, -1, -1);
    MEMORY[0x194014398](v40, -1, -1);

    a1 = v106;
    v32 = v107;
    v36 = v42;
  }
  else
  {

  }
  swift_bridgeObjectRetain_n();
  v47 = a1;
  v48 = sub_190A46588();
  v49 = sub_190A47F68();
  v50 = os_log_type_enabled(v48, v49);
  v106 = v47;
  v96 = v36;
  if (v50)
  {
    v51 = v20;
    v52 = swift_slowAlloc();
    v53 = swift_slowAlloc();
    v116 = v53;
    *(_DWORD *)v52 = 136446466;
    swift_bridgeObjectRetain();
    v115 = sub_1908B35C4(v108, v32, &v116);
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v52 + 12) = 2082;
    v54 = (uint64_t)v95;
    sub_190957744((uint64_t)v95);
    v55 = sub_190A45FC4();
    v56 = *(_QWORD *)(v55 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55) == 1)
    {
      sub_1908AA544(v54, (uint64_t *)&unk_1ECF6C858);
      v57 = 0xE700000000000000;
      v58 = 0x6E776F6E6B6E75;
    }
    else
    {
      v59 = sub_190A45FAC();
      v60 = v54;
      v58 = v59;
      v57 = v61;
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v60, v55);
    }
    v115 = sub_1908B35C4(v58, v57, &v116);
    sub_190A48178();
    v62 = v106;

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v48, v49, "Request began for %{public}s - to archive: %{public}s", (uint8_t *)v52, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x194014398](v53, -1, -1);
    MEMORY[0x194014398](v52, -1, -1);

    v20 = v51;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (qword_1ECF6C4D0 != -1)
    swift_once();
  v63 = (id)qword_1ECF6D8A0;
  v64 = v112;
  sub_190A46504();
  sub_190A48040();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5C0);
  v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_190A4A360;
  v116 = 91;
  v117 = 0xE100000000000000;
  v66 = objc_msgSend(v23, sel_extensionBundleIdentifier);
  sub_190A47ADC();

  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v67 = objc_msgSend(v23, sel_kind);
  sub_190A47ADC();

  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v68 = v116;
  v69 = v117;
  v70 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v65 + 56) = MEMORY[0x1E0DEA968];
  v71 = sub_1908CDCD0();
  *(_QWORD *)(v65 + 32) = v68;
  *(_QWORD *)(v65 + 40) = v69;
  v72 = (v98 & 1) == 0;
  v98 &= 1u;
  v73 = 1702195828;
  if (v72)
    v73 = 0x65736C6166;
  v74 = 0xE500000000000000;
  *(_QWORD *)(v65 + 96) = v70;
  *(_QWORD *)(v65 + 104) = v71;
  if (!v72)
    v74 = 0xE400000000000000;
  *(_QWORD *)(v65 + 64) = v71;
  *(_QWORD *)(v65 + 72) = v73;
  *(_QWORD *)(v65 + 80) = v74;
  v75 = v64;
  sub_190A464E0();
  swift_bridgeObjectRelease();
  v76 = sub_190A47D7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v113, 1, 1, v76);
  ((void (*)(char *, char *, uint64_t))v97)(v109, v20, v111);
  v77 = v103;
  (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v110, v75, v114);
  sub_190A47D64();
  v97 = v106;
  v78 = v101;
  v79 = v105;
  swift_retain();
  v80 = sub_190A47D58();
  v81 = v102;
  v82 = (*(unsigned __int8 *)(v102 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
  v83 = (v99 + v82 + 7) & 0xFFFFFFFFFFFFFFF8;
  v84 = (*(unsigned __int8 *)(v77 + 80) + v83 + 16) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
  v106 = v20;
  v85 = (v100 + v84 + 7) & 0xFFFFFFFFFFFFFFF8;
  v86 = swift_allocObject();
  v87 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v86 + 16) = v80;
  *(_QWORD *)(v86 + 24) = v87;
  v88 = v97;
  *(_QWORD *)(v86 + 32) = v78;
  *(_QWORD *)(v86 + 40) = v88;
  *(_BYTE *)(v86 + 48) = v98;
  v89 = v111;
  (*(void (**)(unint64_t, char *, uint64_t))(v81 + 32))(v86 + v82, v109, v111);
  v90 = (_QWORD *)(v86 + v83);
  v91 = v107;
  *v90 = v108;
  v90[1] = v91;
  v92 = v114;
  (*(void (**)(unint64_t, char *, uint64_t))(v77 + 32))(v86 + v84, v110, v114);
  v93 = (_QWORD *)(v86 + v85);
  *v93 = v104;
  v93[1] = v79;
  sub_19095ADDC(v113, (uint64_t)&unk_1EE1EC8D8, v86);

  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v112, v92);
  return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v106, v89);
}

uint64_t sub_1908C25B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 72) = v14;
  *(_QWORD *)(v8 + 80) = v15;
  *(_OWORD *)(v8 + 56) = v13;
  *(_QWORD *)(v8 + 40) = a7;
  *(_QWORD *)(v8 + 48) = a8;
  *(_BYTE *)(v8 + 120) = a6;
  *(_QWORD *)(v8 + 88) = sub_190A47D64();
  *(_QWORD *)(v8 + 96) = sub_190A47D58();
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 104) = v11;
  *v11 = v8;
  v11[1] = sub_1908C2640;
  return sub_1908CACF0(a5, a6);
}

uint64_t sub_1908C2640()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_1908C26C8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  unint64_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  void (*v7)(_QWORD);
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  swift_release();
  swift_bridgeObjectRetain_n();
  v1 = sub_190A46588();
  v2 = sub_190A47F68();
  if (os_log_type_enabled(v1, v2))
  {
    v4 = *(_QWORD *)(v0 + 48);
    v3 = *(_QWORD *)(v0 + 56);
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v15 = v6;
    *(_DWORD *)v5 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 32) = sub_1908B35C4(v4, v3, &v15);
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1908A7000, v1, v2, "Request ended for %{public}s - success", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v6, -1, -1);
    MEMORY[0x194014398](v5, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_190A48034();
  if (qword_1ECF6C4D0 != -1)
    swift_once();
  v7 = *(void (**)(_QWORD))(v0 + 72);
  v8 = *(unsigned __int8 *)(v0 + 120);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5C0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_190A4A360;
  v10 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  v11 = sub_1908CDCD0();
  v12 = 0x65736C6166;
  v13 = 0xE500000000000000;
  *(_QWORD *)(v9 + 32) = 0x65736C6166;
  *(_QWORD *)(v9 + 40) = 0xE500000000000000;
  if (v8)
    v12 = 1702195828;
  *(_QWORD *)(v9 + 96) = v10;
  *(_QWORD *)(v9 + 104) = v11;
  if (v8)
    v13 = 0xE400000000000000;
  *(_QWORD *)(v9 + 64) = v11;
  *(_QWORD *)(v9 + 72) = v12;
  *(_QWORD *)(v9 + 80) = v13;
  sub_190A464E0();
  swift_bridgeObjectRelease();
  v7(0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1908C2950()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v23;
  void (*v24)(void *);
  uint64_t v25;
  void *v26;
  uint64_t v27;

  v1 = *(void **)(v0 + 112);
  swift_release();
  v26 = (void *)sub_190A45F4C();
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_190A46588();
  v5 = sub_190A47F68();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 112);
    v8 = *(_QWORD *)(v0 + 48);
    v7 = *(_QWORD *)(v0 + 56);
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v27 = v25;
    *(_DWORD *)v9 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_1908B35C4(v8, v7, &v27);
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2112;
    v11 = v6;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v12;
    sub_190A48178();
    *v10 = v12;

    _os_log_impl(&dword_1908A7000, v4, v5, "Request ended for %{public}s - error: %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
    swift_arrayDestroy();
    MEMORY[0x194014398](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x194014398](v25, -1, -1);
    MEMORY[0x194014398](v9, -1, -1);

  }
  else
  {
    v13 = *(void **)(v0 + 112);

    swift_bridgeObjectRelease_n();
  }
  sub_190A48034();
  if (qword_1ECF6C4D0 != -1)
    swift_once();
  v24 = *(void (**)(void *))(v0 + 72);
  v23 = *(unsigned __int8 *)(v0 + 120);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5C0);
  v14 = swift_allocObject();
  v15 = (_QWORD *)v14;
  *(_OWORD *)(v14 + 16) = xmmword_190A4A360;
  if (v26)
    v16 = 1702195828;
  else
    v16 = 0x65736C6166;
  if (v26)
    v17 = 0xE400000000000000;
  else
    v17 = 0xE500000000000000;
  v18 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  v19 = sub_1908CDCD0();
  v15[4] = v16;
  v15[5] = v17;
  if (v23)
    v20 = 1702195828;
  else
    v20 = 0x65736C6166;
  if (v23)
    v21 = 0xE400000000000000;
  else
    v21 = 0xE500000000000000;
  v15[12] = v18;
  v15[13] = v19;
  v15[8] = v19;
  v15[9] = v20;
  v15[10] = v21;
  sub_190A464E0();
  swift_bridgeObjectRelease();
  v24(v26);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1908C2CCC(uint64_t a1, uint64_t a2, char a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[4];
  char v23;

  v12 = sub_190A479EC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3A0);
  *v15 = sub_190A48004();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF740], v12);
  v16 = sub_190A47A04();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) != 0)
  {
    v18 = a4[3];
    v19 = a4[4];
    __swift_project_boxed_opaque_existential_1(a4, v18);
    v20 = *(_OWORD *)(a6 + 48);
    v22[2] = *(_OWORD *)(a6 + 32);
    v22[3] = v20;
    v23 = *(_BYTE *)(a6 + 64);
    v21 = *(_OWORD *)(a6 + 16);
    v22[0] = *(_OWORD *)a6;
    v22[1] = v21;
    if ((a3 & 1) != 0)
      return (*(uint64_t (**)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 32))(a5, v22, a1, a2, v18, v19);
    else
      return (*(uint64_t (**)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 40))(a5, v22, a1, a2, v18, v19);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1908C2E30(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void (*)(uint64_t a1), uint64_t), uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void (*)(uint64_t), uint64_t);

  v20 = a5;
  v21 = a4;
  v19 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A588);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = sub_190A465A0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = (v12 + *(unsigned __int8 *)(v8 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v16 + v14, v13, v10);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_retain();
  v21(sub_1908CE188, v16);
  return swift_release();
}

void sub_1908C2FA8(uint64_t a1, os_unfair_lock_s *a2)
{
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  char v5[16];

  v3 = a2 + 4;
  v4 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  sub_1908C3040(v3, v5);
  os_unfair_lock_unlock(v4);
  if (v5[0] == 1)
  {
    *(_QWORD *)v5 = a1;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A588);
    sub_190A47D40();
  }
}

void sub_1908C3040(_BYTE *a1@<X0>, char *a2@<X8>)
{
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  char v6;

  if ((*a1 & 1) != 0)
  {
    v3 = sub_190A46588();
    v4 = sub_190A47F5C();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1908A7000, v3, v4, "Completion handler can only be called once. Subsequent calls in the same session are ignored.", v5, 2u);
      MEMORY[0x194014398](v5, -1, -1);
    }

    v6 = 0;
  }
  else
  {
    v6 = 1;
    *a1 = 1;
  }
  *a2 = v6;
}

uint64_t sub_1908C3158(char *a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(__int128 *__return_ptr, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  void (*v46)(uint64_t (*)(void *), _QWORD *, uint64_t, uint64_t);
  id v47;
  uint64_t (*v48)(_QWORD);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  __int128 v59[2];
  _QWORD v60[3];
  uint64_t v61;
  uint64_t v62;

  v52 = a1;
  v5 = type metadata accessor for ViewSource(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v50 = (uint64_t)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v48 - v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  MEMORY[0x1E0C80A78](v10);
  v54 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for WidgetDescriptor(0);
  v56 = *(_QWORD *)(v53 - 8);
  v12 = MEMORY[0x1E0C80A78](v53);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v12);
  v55 = (uint64_t)&v48 - v16;
  if (!(_QWORD)xmmword_1ECF6D940)
  {
    __break(1u);
    return result;
  }
  v17 = *(_QWORD *)xmmword_1ECF6D940;
  v60[0] = xmmword_1ECF6D940;
  v18 = (*(uint64_t (**)(uint64_t))(qword_1ECF6D950 + 24))(v17);
  v19 = *(_QWORD *)(v18 + 16);
  if (!v19)
  {
    v28 = 1;
    v30 = v53;
    v29 = v54;
    goto LABEL_17;
  }
  v48 = a2;
  v49 = a3;
  v20 = v18 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
  v58 = &v52[OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_kind];
  v21 = *(_QWORD *)(v56 + 72);
  v51 = v18;
  swift_bridgeObjectRetain();
  v57 = v5;
  while (1)
  {
    sub_1908AF5D8(v20, (uint64_t)v14, type metadata accessor for WidgetDescriptor);
    sub_1908AF5D8((uint64_t)v14, (uint64_t)v9, type metadata accessor for ViewSource);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
        swift_release();
        swift_release();
        v23 = sub_190A46240();
        (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v9, v23);
      }
      else
      {
        sub_1908B5150((uint64_t)v9, type metadata accessor for ViewSource);
      }
      goto LABEL_5;
    }
    v25 = *v9;
    v24 = v9[1];
    v26 = v9[4];
    swift_bridgeObjectRelease();
    sub_1908B467C(v26);
    swift_release();
    if (v25 == *(_QWORD *)v58 && v24 == *((_QWORD *)v58 + 1))
      break;
    v27 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v27 & 1) != 0)
      goto LABEL_16;
LABEL_5:
    sub_1908B5150((uint64_t)v14, type metadata accessor for WidgetDescriptor);
    v20 += v21;
    if (!--v19)
    {
      swift_bridgeObjectRelease();
      v28 = 1;
      a2 = v48;
      a3 = v49;
      v30 = v53;
      v29 = v54;
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease();
LABEL_16:
  swift_bridgeObjectRelease();
  v29 = v54;
  sub_1908BD0B4((uint64_t)v14, v54, type metadata accessor for WidgetDescriptor);
  v28 = 0;
  a2 = v48;
  a3 = v49;
  v30 = v53;
LABEL_17:
  v31 = v56;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56))(v29, v28, 1, v30);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
  {
    sub_1908AA544(v29, &qword_1ECF6C788);
    goto LABEL_25;
  }
  v32 = v29;
  v33 = v55;
  sub_1908BD0B4(v32, v55, type metadata accessor for WidgetDescriptor);
  v34 = v50;
  sub_1908AF5D8(v33, v50, type metadata accessor for ViewSource);
  v35 = swift_getEnumCaseMultiPayload();
  if (v35)
  {
    if (v35 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
      swift_release();
      swift_release();
      v36 = sub_190A46240();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v34, v36);
    }
    else
    {
      sub_1908B5150(v34, type metadata accessor for ViewSource);
    }
    sub_1908B5150(v55, type metadata accessor for WidgetDescriptor);
LABEL_25:
    if (qword_1ECF6A5C8 != -1)
      swift_once();
    return a2(qword_1ECF6D428);
  }
  else
  {
    v37 = a2;
    v38 = v34;
    v39 = *(_QWORD *)(v34 + 32);
    v40 = *(void (**)(__int128 *__return_ptr, uint64_t))(v38 + 48);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1908B467C(v39);
    v41 = swift_release();
    v40(v59, v41);
    swift_release();
    sub_1908B4BBC(v59, (uint64_t)v60);
    v42 = v61;
    v43 = v62;
    __swift_project_boxed_opaque_existential_1(v60, v61);
    v44 = (_QWORD *)swift_allocObject();
    v45 = v52;
    v44[2] = v52;
    v44[3] = v37;
    v44[4] = a3;
    v46 = *(void (**)(uint64_t (*)(void *), _QWORD *, uint64_t, uint64_t))(v43 + 56);
    v47 = v45;
    swift_retain();
    v46(sub_1908CE428, v44, v42, v43);
    swift_release();
    sub_1908B5150(v55, type metadata accessor for WidgetDescriptor);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  }
}

uint64_t sub_1908C36D0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_190A47D7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_190A47D64();
  v12 = a1;
  v13 = a2;
  swift_retain();
  v14 = sub_190A47D58();
  v15 = (_QWORD *)swift_allocObject();
  v16 = MEMORY[0x1E0DF06E8];
  v15[2] = v14;
  v15[3] = v16;
  v15[4] = v12;
  v15[5] = v13;
  v15[6] = a3;
  v15[7] = a4;
  sub_19095ADDC((uint64_t)v10, (uint64_t)&unk_1EE1EC8F0, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_1908C37E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  sub_190A47D64();
  v7[6] = sub_190A47D58();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_1908C3850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  sub_19098C9BC(v2, *(void **)(v1 + OBJC_IVAR____TtC9WidgetKit22WidgetRelevanceRequest_archiveFileHandle));
  (*(void (**)(_QWORD))(v0 + 32))(0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1908C3A28()
{
  return sub_1908C3A7C(type metadata accessor for WidgetExtensionXPCServer.ExportedObject);
}

id sub_1908C3A70()
{
  return sub_1908C3A7C(type metadata accessor for WidgetExtensionXPCServer);
}

id sub_1908C3A7C(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for WidgetExtensionXPCServer()
{
  return objc_opt_self();
}

uint64_t sub_1908C3ACC(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  void *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _BYTE v50[4];
  int v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;

  v58 = a2;
  v59 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F8);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v50[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_190A46180();
  v10 = *(_QWORD *)(v9 - 8);
  v56 = (_BYTE *)v9;
  v57 = v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = &v50[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_190A460CC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = &v50[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v60 = a4;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_190A48484();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  sub_190A460C0();
  v18 = sub_190A46090();
  v20 = v19;
  (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v16, v13);
  sub_1908CA1DC(6uLL, v18, v20);
  swift_bridgeObjectRelease();
  sub_190A48160();
  swift_bridgeObjectRelease();
  v62 = 2978915;
  v63 = 0xE300000000000000;
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  v21 = v62;
  v22 = v63;
  if (v17 < 1)
    goto LABEL_8;
  if (qword_1EE1EB680 != -1)
    goto LABEL_17;
  while (1)
  {
    v23 = sub_190A465A0();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE1FD748);
    swift_bridgeObjectRetain_n();
    v24 = sub_190A46588();
    v25 = sub_190A47F68();
    v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      v27 = swift_slowAlloc();
      v55 = v8;
      v28 = v27;
      v54 = swift_slowAlloc();
      v62 = v54;
      *(_DWORD *)v28 = 136446466;
      swift_bridgeObjectRetain();
      v61 = sub_1908B35C4(v21, v22, &v62);
      v53 = &v62;
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 12) = 2082;
      v52 = v28 + 14;
      v29 = v12;
      sub_190A46138();
      sub_1908AED38((unint64_t *)&unk_1ECF6D258, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E70]);
      v12 = v56;
      v30 = sub_190A4867C();
      v51 = v26;
      v31 = v30;
      v32 = v21;
      v34 = v33;
      (*(void (**)(_BYTE *, _BYTE *))(v57 + 8))(v29, v12);
      v61 = sub_1908B35C4(v31, v34, &v62);
      sub_190A48178();
      v21 = v32;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1908A7000, v24, (os_log_type_t)v51, "Batch begin (%{public}s) - locale: %{public}s", (uint8_t *)v28, 0x16u);
      v35 = v54;
      swift_arrayDestroy();
      MEMORY[0x194014398](v35, -1, -1);
      v36 = v28;
      v8 = v55;
      MEMORY[0x194014398](v36, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
LABEL_8:
    v37 = swift_allocObject();
    *(_BYTE *)(v37 + 16) = v17 > 0;
    *(_QWORD *)(v37 + 24) = v21;
    *(_QWORD *)(v37 + 32) = v22;
    v21 = v59;
    v38 = v60;
    *(_QWORD *)(v37 + 40) = v59;
    *(_QWORD *)(v37 + 48) = v38;
    if ((a1 & 0xC000000000000001) != 0)
      break;
    v17 = v58;
    if ((v58 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) > v58)
    {
      v39 = *(void **)(a1 + 8 * v58 + 32);
      swift_retain();
      v40 = v39;
      goto LABEL_12;
    }
    __break(1u);
LABEL_17:
    swift_once();
  }
  swift_retain();
  v17 = v58;
  v40 = (id)MEMORY[0x194013510](v58, a1);
LABEL_12:
  v41 = v40;
  v42 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v43 = (_QWORD *)swift_allocObject();
  v43[2] = v42;
  v43[3] = sub_1908CDA68;
  v43[4] = v37;
  v43[5] = v17;
  v43[6] = a1;
  v43[7] = v21;
  v43[8] = v38;
  v44 = sub_190A47D7C();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v8, 1, 1, v44);
  sub_190A47D64();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  v45 = v41;
  swift_retain();
  v46 = sub_190A47D58();
  v47 = (_QWORD *)swift_allocObject();
  v48 = MEMORY[0x1E0DF06E8];
  v47[2] = v46;
  v47[3] = v48;
  v47[4] = v45;
  v47[5] = sub_1908CDAB8;
  v47[6] = v43;
  sub_1908C5D18((uint64_t)v8, (uint64_t)&unk_1EE1EC890, (uint64_t)v47);
  swift_release();
  sub_1908AA544((uint64_t)v8, &qword_1ECF6B9F8);
  swift_release();

  swift_release();
  return swift_release();
}

uint64_t sub_1908C4108(id a1, char a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(_QWORD))
{
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;

  if ((a2 & 1) != 0)
  {
    if (a1)
    {
      v9 = a1;
      if (qword_1EE1EB680 != -1)
        swift_once();
      v10 = sub_190A465A0();
      __swift_project_value_buffer(v10, (uint64_t)qword_1EE1FD748);
      swift_bridgeObjectRetain();
      v11 = a1;
      swift_bridgeObjectRetain();
      v12 = a1;
      v13 = sub_190A46588();
      v14 = sub_190A47F68();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = swift_slowAlloc();
        v16 = (_QWORD *)swift_slowAlloc();
        v17 = swift_slowAlloc();
        v28 = v17;
        *(_DWORD *)v15 = 136446466;
        swift_bridgeObjectRetain();
        sub_1908B35C4(a3, a4, &v28);
        sub_190A48178();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v15 + 12) = 2114;
        v18 = a1;
        v27 = _swift_stdlib_bridgeErrorToNSError();
        sub_190A48178();
        *v16 = v27;

        _os_log_impl(&dword_1908A7000, v13, v14, "Batch end (%{public}s) - failure: %{public}@", (uint8_t *)v15, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
        swift_arrayDestroy();
        MEMORY[0x194014398](v16, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x194014398](v17, -1, -1);
        MEMORY[0x194014398](v15, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      if (qword_1EE1EB680 != -1)
        swift_once();
      v19 = sub_190A465A0();
      __swift_project_value_buffer(v19, (uint64_t)qword_1EE1FD748);
      swift_bridgeObjectRetain_n();
      v20 = sub_190A46588();
      v21 = sub_190A47F68();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        v26 = a5;
        v23 = swift_slowAlloc();
        v28 = v23;
        *(_DWORD *)v22 = 136446210;
        swift_bridgeObjectRetain();
        sub_1908B35C4(a3, a4, &v28);
        sub_190A48178();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1908A7000, v20, v21, "Batch end (%{public}s) - success", v22, 0xCu);
        swift_arrayDestroy();
        v24 = v23;
        a5 = v26;
        MEMORY[0x194014398](v24, -1, -1);
        MEMORY[0x194014398](v22, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
  return a5(a1);
}

void sub_1908C44FC(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v14 = a2 + 16;
  swift_beginAccess();
  v15 = MEMORY[0x19401444C](v14);
  if (!v15)
  {
    if (qword_1EE1EB680 != -1)
      swift_once();
    v19 = sub_190A465A0();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EE1FD748);
    v20 = sub_190A46588();
    v21 = sub_190A47F68();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1908A7000, v20, v21, "WidgetExtensionXPCServer disappeared", v22, 2u);
      MEMORY[0x194014398](v22, -1, -1);
    }

    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
    v23 = sub_190A47ADC();
    v16 = sub_19096BFDC(v23, v24, 1500, 0, 0xD000000000000024, 0x8000000190A60710);
    goto LABEL_13;
  }
  v16 = (id)v15;
  if (a1)
  {
    v17 = a1;
    v18 = a1;
    ((void (*)(void *))a3)(a1);

    return;
  }
  if (a6 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = sub_190A48484();
    swift_bridgeObjectRelease();
    v26 = v27 - 1;
    if (!__OFSUB__(v27, 1))
    {
LABEL_11:
      if (v26 > a5)
      {
        sub_1908C3ACC(a6, a5 + 1, a7, a8);
LABEL_14:

        return;
      }
LABEL_13:
      a3();
      goto LABEL_14;
    }
  }
  else
  {
    v25 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v26 = v25 - 1;
    if (!__OFSUB__(v25, 1))
      goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_1908C4734()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[18] = v0;
  sub_190A47D64();
  v1[19] = sub_190A47D58();
  v1[20] = sub_190A47D28();
  v1[21] = v2;
  return swift_task_switch();
}

uint64_t sub_1908C47A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 144);
  if (*v1 == 1)
  {
    swift_release();
    sub_190A462E8();
    v2 = sub_190A462D0();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
  }
  else
  {
    sub_1908CDB94((uint64_t)(v1 + 1), v0 + 16);
    if ((*(_BYTE *)(v0 + 56) & 1) != 0)
    {
      sub_1908B4BBC((__int128 *)(v0 + 16), v0 + 64);
      v4 = *(_QWORD *)(v0 + 88);
      v5 = *(_QWORD *)(v0 + 96);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 64), v4);
      v13 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v5 + 48) + *(_QWORD *)(v5 + 48));
      v6 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v6;
      *v6 = v0;
      v6[1] = sub_1908C4A1C;
      return v13(v4, v5);
    }
    else
    {
      sub_1908B4BBC((__int128 *)(v0 + 16), v0 + 104);
      v7 = *(_QWORD *)(v0 + 128);
      v8 = *(_QWORD *)(v0 + 136);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 104), v7);
      v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
      *(_QWORD *)(v0 + 176) = v9;
      v10 = *(_QWORD *)(v0 + 128);
      v11 = *(_QWORD *)(v0 + 136);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 104), v10);
      v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v11 + 24) + *(_QWORD *)(v11 + 24));
      v12 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 184) = v12;
      *v12 = v0;
      v12[1] = sub_1908C4934;
      return v14(v9, v10, v11);
    }
  }
}

uint64_t sub_1908C4934(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 192) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 200) = a1;
  return swift_task_switch();
}

uint64_t sub_1908C49A8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 176);
  swift_release();
  sub_190A462E8();
  v2 = sub_190A462D0();

  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1908C4A1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 216) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 224) = a1;
  return swift_task_switch();
}

uint64_t sub_1908C4A90()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  sub_190A462E8();
  v1 = sub_190A462D0();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1908C4AF4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 176);
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1908C4B3C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1908C4B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  sub_190A47D64();
  v3[21] = sub_190A47D58();
  v3[22] = sub_190A47D28();
  v3[23] = v4;
  return swift_task_switch();
}

uint64_t sub_1908C4BEC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v6;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int *v16;
  uint64_t (*v17)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t);

  sub_1908CDB94(*(_QWORD *)(v0 + 160) + 8, v0 + 16);
  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    v1 = *(uint64_t **)(v0 + 144);
    sub_1908B4BBC((__int128 *)(v0 + 16), v0 + 64);
    v2 = *(_QWORD *)(v0 + 88);
    v3 = *(_QWORD *)(v0 + 96);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 64), v2);
    v4 = *(int **)(v3 + 56);
    v1[3] = swift_getAssociatedTypeWitness();
    v1[4] = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v1);
    v16 = (int *)((char *)v4 + *v4);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v6;
    *v6 = v0;
    v6[1] = sub_1908C4E64;
    return ((uint64_t (*)(uint64_t *, _QWORD, uint64_t, uint64_t))v16)(boxed_opaque_existential_1, *(_QWORD *)(v0 + 152), v2, v3);
  }
  else
  {
    v8 = *(uint64_t **)(v0 + 160);
    sub_1908B4BBC((__int128 *)(v0 + 16), v0 + 104);
    v9 = *(_QWORD *)(v0 + 128);
    v10 = *(_QWORD *)(v0 + 136);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 104), v9);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
    *(_QWORD *)(v0 + 192) = v11;
    v12 = *(_QWORD *)(v0 + 128);
    v13 = *(_QWORD *)(v0 + 136);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 104), v12);
    v14 = *v8;
    v17 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v13 + 16)
                                                                                     + *(_QWORD *)(v13 + 16));
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v15;
    *v15 = v0;
    v15[1] = sub_1908C4DBC;
    return v17(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), v11, v14, v12, v13);
  }
}

uint64_t sub_1908C4DBC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1908C4E1C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 192);
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1908C4E64()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1908C4EC4()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1908C4F04()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 192);
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1908C4F4C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  swift_release();
  __swift_deallocate_boxed_opaque_existential_1(v1);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1908C4F98()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1908C4FDC;
  return sub_1908C4734();
}

uint64_t sub_1908C4FDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_1908C5030(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1908C5090;
  return sub_1908C4B7C(a1, a2);
}

uint64_t sub_1908C5090()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1908C50D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[47] = a5;
  v6[48] = a6;
  v6[46] = a4;
  sub_190A47D64();
  v6[49] = sub_190A47D58();
  v6[50] = sub_190A47D28();
  v6[51] = v7;
  return swift_task_switch();
}

void sub_1908C5148()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  unsigned __int8 *v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  int *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  _QWORD *v24;
  _QWORD *v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v27)(uint64_t, id, uint64_t);

  if (qword_1EE1EB680 != -1)
    swift_once();
  v1 = *(void **)(v0 + 368);
  v2 = sub_190A465A0();
  *(_QWORD *)(v0 + 416) = __swift_project_value_buffer(v2, (uint64_t)qword_1EE1FD748);
  v3 = v1;
  v4 = sub_190A46588();
  v5 = sub_190A47F68();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(unsigned __int8 **)(v0 + 368);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v8 = 67240192;
    *(_DWORD *)(v0 + 108) = v7[OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_isPreview];
    sub_190A48178();

    _os_log_impl(&dword_1908A7000, v4, v5, "Generating control template [isPreview=%{BOOL,public}d]...", v8, 8u);
    MEMORY[0x194014398](v8, -1, -1);
  }
  else
  {

  }
  v9 = *(_QWORD *)(v0 + 368);
  v10 = *(unsigned __int8 *)(v9 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_isPreview);
  *(_BYTE *)(v0 + 105) = v10;
  if ((_QWORD)xmmword_1ECF6D940)
  {
    v11 = *((_QWORD *)&xmmword_1ECF6D940 + 1);
    v12 = *(_QWORD *)xmmword_1ECF6D940;
    *(_QWORD *)(v0 + 360) = xmmword_1ECF6D940;
    v13 = *(void **)(v9 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_control);
    *(_QWORD *)(v0 + 424) = v13;
    swift_retain();
    sub_1909FBD98(v13, v12, v11, (_OWORD *)(v0 + 16));
    swift_release();
    sub_1908CD8F8(v0 + 64, v0 + 216);
    if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    {
      v14 = *(int **)(v0 + 216);
      *(_QWORD *)(v0 + 432) = *(_QWORD *)(v0 + 224);
      v15 = objc_msgSend(v13, sel_intentReference);
      if (v15)
      {
        v16 = v15;
        v17 = objc_msgSend(v15, sel_intent);

      }
      else
      {
        v17 = 0;
      }
      *(_QWORD *)(v0 + 440) = v17;
      v27 = (void (*)(uint64_t, id, uint64_t))((char *)v14 + *v14);
      v25 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 448) = v25;
      *v25 = v0;
      v25[1] = sub_1908C5634;
      v27(v0 + 264, v17, v10);
    }
    else
    {
      sub_1908B4BBC((__int128 *)(v0 + 216), v0 + 168);
      *(_BYTE *)(v0 + 208) = 0;
      v18 = *(unsigned __int8 *)(v0 + 105);
      v19 = *(_QWORD *)(v0 + 368);
      sub_1908CDB94(v0 + 168, v0 + 120);
      *(_QWORD *)(v0 + 112) = v18;
      v20 = v19 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_environment;
      v21 = *(_QWORD *)(v19 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_environment);
      *(_QWORD *)(v0 + 464) = v21;
      v22 = *(void **)(v20 + 8);
      *(_QWORD *)(v0 + 472) = v22;
      *(_QWORD *)(v0 + 480) = *(_QWORD *)(v19 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_fileHandle);
      v26 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE1EC898 + dword_1EE1EC898);
      swift_retain();
      v23 = v22;
      v24 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 488) = v24;
      *v24 = v0;
      v24[1] = sub_1908C579C;
      v26(*(_QWORD *)(v0 + 424), v21, (uint64_t)v23, v0 + 112);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1908C5634()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 456) = v0;
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_1908C569C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD *v7;
  char *v9;

  swift_release();
  sub_1908B4BBC((__int128 *)(v0 + 264), v0 + 168);
  *(_BYTE *)(v0 + 208) = 1;
  v1 = *(unsigned __int8 *)(v0 + 105);
  v2 = *(_QWORD *)(v0 + 368);
  sub_1908CDB94(v0 + 168, v0 + 120);
  *(_QWORD *)(v0 + 112) = v1;
  v3 = v2 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_environment;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_environment);
  *(_QWORD *)(v0 + 464) = v4;
  v5 = *(void **)(v3 + 8);
  *(_QWORD *)(v0 + 472) = v5;
  *(_QWORD *)(v0 + 480) = *(_QWORD *)(v2 + OBJC_IVAR____TtC9WidgetKit22ControlTemplateRequest_fileHandle);
  v9 = (char *)&dword_1EE1EC898 + dword_1EE1EC898;
  swift_retain();
  v6 = v5;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 488) = v7;
  *v7 = v0;
  v7[1] = sub_1908C579C;
  return ((uint64_t (*)(_QWORD, uint64_t, id, uint64_t))v9)(*(_QWORD *)(v0 + 424), v4, v6, v0 + 112);
}

uint64_t sub_1908C579C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[62] = a1;
  v4[63] = a2;
  v4[64] = v2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1908C580C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 512);
  *(_OWORD *)(v0 + 328) = *(_OWORD *)(v0 + 496);
  sub_1908CDC14();
  sub_190A47F14();
  v2 = *(void **)(v0 + 472);
  sub_1908B53FC(*(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 504));
  swift_release();

  if (v1)
    *(_QWORD *)(v0 + 520) = v1;
  return swift_task_switch();
}

uint64_t sub_1908C58A0()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[59];
  swift_release();

  v0[65] = v0[64];
  return swift_task_switch();
}

uint64_t sub_1908C58E4()
{
  uint64_t v0;
  void (*v1)(_QWORD);

  v1 = *(void (**)(_QWORD))(v0 + 376);
  swift_release();
  v1(0);
  sub_1908CDBC8(v0 + 112);
  sub_1908CDBF0(v0 + 168);
  sub_1908CD934(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1908C5954()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(void *);
  id v11;
  uint64_t v13;

  swift_release();
  sub_1908CDBC8(v0 + 112);
  sub_1908CDBF0(v0 + 168);
  sub_1908CD934(v0 + 16);
  v1 = *(void **)(v0 + 520);
  v2 = v1;
  v3 = v1;
  v4 = sub_190A46588();
  v5 = sub_190A47F50();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v13 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue();
    v8 = sub_1909E4DD8(*(_QWORD *)(v0 + 312));
    *(_QWORD *)(v0 + 344) = sub_1908B35C4(v8, v9, &v13);
    sub_190A48178();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1908A7000, v4, v5, "Template request failed: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v7, -1, -1);
    MEMORY[0x194014398](v6, -1, -1);
  }
  else
  {

  }
  v10 = *(void (**)(void *))(v0 + 376);
  v11 = v1;
  v10(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1908C5B3C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(void *);
  id v11;
  uint64_t v13;

  swift_release();
  swift_release();
  sub_1908CD934(v0 + 16);
  v1 = *(void **)(v0 + 456);
  v2 = v1;
  v3 = v1;
  v4 = sub_190A46588();
  v5 = sub_190A47F50();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v13 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue();
    v8 = sub_1909E4DD8(*(_QWORD *)(v0 + 312));
    *(_QWORD *)(v0 + 344) = sub_1908B35C4(v8, v9, &v13);
    sub_190A48178();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1908A7000, v4, v5, "Template request failed: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194014398](v7, -1, -1);
    MEMORY[0x194014398](v6, -1, -1);
  }
  else
  {

  }
  v10 = *(void (**)(void *))(v0 + 376);
  v11 = v1;
  v10(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1908C5D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1908AAA48(a1, (uint64_t)v8, &qword_1ECF6B9F8);
  v9 = sub_190A47D7C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1908AA544((uint64_t)v8, &qword_1ECF6B9F8);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_190A47D28();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_190A47D70();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_1908C5EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[54] = a5;
  v6[55] = a6;
  v6[53] = a4;
  sub_190A47D64();
  v6[56] = sub_190A47D58();
  v6[57] = sub_190A47D28();
  v6[58] = v7;
  return swift_task_switch();
}

uint64_t sub_1908C5F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_QWORD, _QWORD);
  void (*v40)(uint64_t, _QWORD, _QWORD);
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  __int128 v49;

  v1 = *(_QWORD *)(v0 + 424);
  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 392) = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_controls);
  *(_QWORD *)(v0 + 472) = v3;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_190A48484();
    v4 = result;
    *(_QWORD *)(v0 + 480) = result;
    if (result)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 480) = v4;
    if (v4)
    {
LABEL_3:
      *(_QWORD *)(v0 + 488) = *(_QWORD *)(*(_QWORD *)(v0 + 424)
                                        + OBJC_IVAR____TtC9WidgetKit33ControlsConfigurationXPCContainer_tokens);
      if (v4 >= 1)
      {
        v6 = 0;
        while (1)
        {
          *(_QWORD *)(v0 + 496) = v6;
          v7 = *(_QWORD *)(v0 + 472);
          if ((v7 & 0xC000000000000001) != 0)
            v8 = (id)MEMORY[0x194013510]();
          else
            v8 = *(id *)(v7 + 8 * v6 + 32);
          v9 = v8;
          *(_QWORD *)(v0 + 504) = v8;
          if (*(_QWORD *)(*(_QWORD *)(v0 + 488) + 16))
          {
            v10 = v8;
            v11 = sub_1908D2CFC((uint64_t)v10);
            if ((v12 & 1) != 0)
            {
              v42 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v0 + 488) + 56) + 16 * v11);
              v43 = *v42;
              *(_QWORD *)(v0 + 512) = *v42;
              v44 = v42[1];
              *(_QWORD *)(v0 + 520) = v44;
              sub_1908B53B8(v43, v44);

              v45 = v10;
              sub_1908B53B8(v43, v44);
              return swift_task_switch();
            }

          }
          v6 = *(_QWORD *)(v0 + 496) + 1;
          if (v6 == *(_QWORD *)(v0 + 480))
            goto LABEL_12;
        }
      }
      __break(1u);
      goto LABEL_39;
    }
  }
LABEL_12:
  swift_bridgeObjectRelease();
  result = swift_release();
  *(_QWORD *)(v0 + 408) = v2;
  if (!(_QWORD)xmmword_1ECF6D940)
  {
LABEL_39:
    __break(1u);
    return result;
  }
  v48 = (uint64_t *)(v0 + 408);
  v13 = *((_QWORD *)&xmmword_1ECF6D940 + 1);
  v14 = *(_QWORD *)xmmword_1ECF6D940;
  *(_QWORD *)(v0 + 400) = xmmword_1ECF6D940;
  v15 = (*(uint64_t (**)(uint64_t))(v13 + 8))(v14);
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v17 = type metadata accessor for WidgetDescriptor(0);
    v18 = 0;
    v19 = *(_QWORD *)(v17 - 8);
    v20 = v15 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v21 = *(_QWORD *)(v19 + 72);
    v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v46 = v16;
    do
    {
      v24 = (uint64_t *)(v20 + v18 * v21 + *(int *)(v17 + 128));
      v25 = *v24;
      if (*v24)
      {
        v26 = v24[1];
        v27 = v22[2];
        if (v27)
        {
          v28 = 4;
          v29 = v22[2];
          while (v22[v28] != v25)
          {
            v28 += 2;
            if (!--v29)
              goto LABEL_22;
          }
        }
        else
        {
LABEL_22:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v22 = sub_1908F294C(0, v27 + 1, 1, v22);
          v31 = v22[2];
          v30 = v22[3];
          if (v31 >= v30 >> 1)
            v22 = sub_1908F294C((_QWORD *)(v30 > 1), v31 + 1, 1, v22);
          v22[2] = v31 + 1;
          v23 = &v22[2 * v31];
          v23[4] = v25;
          v23[5] = v26;
          v16 = v46;
          *v48 = (uint64_t)v22;
        }
      }
      ++v18;
    }
    while (v18 != v16);
  }
  swift_bridgeObjectRelease();
  if (qword_1EE1EB680 != -1)
    swift_once();
  v32 = sub_190A465A0();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EE1FD748);
  v33 = sub_190A46588();
  v34 = sub_190A47F68();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = swift_slowAlloc();
    *(_DWORD *)v35 = 134349312;
    swift_beginAccess();
    *(_QWORD *)(v0 + 416) = *(_QWORD *)(*(_QWORD *)(v0 + 392) + 16);
    sub_190A48178();
    *(_WORD *)(v35 + 12) = 2050;
    swift_beginAccess();
    *(_QWORD *)(v0 + 384) = *(_QWORD *)(*v48 + 16);
    sub_190A48178();
    _os_log_impl(&dword_1908A7000, v33, v34, "Sending %{public}ld ControlInfo instance(s) to %{public}ld PushHandler instances.", (uint8_t *)v35, 0x16u);
    MEMORY[0x194014398](v35, -1, -1);
  }

  swift_beginAccess();
  v47 = *v48;
  v36 = *(_QWORD *)(*v48 + 16);
  if (v36)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v37 = 0;
    do
    {
      v38 = v47 + 16 * v37++;
      v49 = *(_OWORD *)(v38 + 32);
      v39 = *(void (**)(_QWORD, _QWORD))(*((_QWORD *)&v49 + 1) + 8);
      *(_OWORD *)(v0 + 240) = v49;
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 216));
      v39(v49, *((_QWORD *)&v49 + 1));
      v40 = *(void (**)(uint64_t, _QWORD, _QWORD))(*((_QWORD *)&v49 + 1) + 16);
      v41 = swift_bridgeObjectRetain();
      v40(v41, v49, *((_QWORD *)&v49 + 1));
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v0 + 216);
    }
    while (v36 != v37);
    swift_bridgeObjectRelease();
  }
  (*(void (**)(_QWORD))(v0 + 432))(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1908C6480()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  _QWORD *v16;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(void **)(v0 + 504);
  v3 = *(_QWORD *)(v0 + 512);
  *(_QWORD *)(v0 + 128) = v2;
  v4 = v2;
  v5 = objc_msgSend(v4, sel_kind);
  v6 = sub_190A47ADC();
  v8 = v7;

  *(_QWORD *)(v0 + 96) = v6;
  *(_QWORD *)(v0 + 104) = v8;
  *(_QWORD *)(v0 + 112) = v3;
  *(_QWORD *)(v0 + 120) = v1;
  v9 = objc_msgSend(v4, sel_intentReference);
  if (!v9)
    goto LABEL_7;
  v10 = v9;
  v11 = objc_msgSend(v9, sel_intent);
  *(_QWORD *)(v0 + 528) = v11;

  if (!v11)
    goto LABEL_7;
  objc_opt_self();
  v12 = (void *)swift_dynamicCastObjCClass();
  if (!v12)
  {

LABEL_7:
    *(_QWORD *)(v0 + 168) = 0;
    *(_OWORD *)(v0 + 152) = 0u;
    *(_OWORD *)(v0 + 136) = 0u;
    return swift_task_switch();
  }
  v13 = objc_msgSend(v12, sel_linkAction);
  if (v13)
  {
    v14 = v13;
    *(_QWORD *)(v0 + 280) = sub_1908AB890(0, (unint64_t *)&qword_1EE1EB978);
    *(_QWORD *)(v0 + 256) = v14;
  }
  else
  {
    *(_OWORD *)(v0 + 256) = 0u;
    *(_OWORD *)(v0 + 272) = 0u;
  }
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 536) = v16;
  *v16 = v0;
  v16[1] = sub_1908C6618;
  return sub_190A45C4C();
}

uint64_t sub_1908C6618()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)

  else
    sub_1908AA544(v2 + 256, (uint64_t *)&unk_1ECF6C8A0);
  return swift_task_switch();
}

uint64_t sub_1908C6690()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 528);

  sub_1908B4BD4(v0 + 176, v0 + 136, &qword_1EE1EA700);
  return swift_task_switch();
}

uint64_t sub_1908C66E8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 528);

  sub_1908AA544(v0 + 256, (uint64_t *)&unk_1ECF6C8A0);
  *(_OWORD *)(v0 + 192) = 0u;
  *(_QWORD *)(v0 + 208) = 0;
  *(_OWORD *)(v0 + 176) = 0u;
  sub_1908B4BD4(v0 + 176, v0 + 136, &qword_1EE1EA700);
  return swift_task_switch();
}

uint64_t sub_1908C6760()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  unint64_t v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(_QWORD, _QWORD);
  void (*v48)(uint64_t, _QWORD, _QWORD);
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  unint64_t v52;
  id v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  __int128 v57;

  sub_1908CD9EC((uint64_t)(v0 + 12), (uint64_t)(v0 + 2));
  v1 = (_QWORD *)v0[49];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v1 = sub_1908F282C(0, v1[2] + 1, 1, v1);
  v3 = v1[2];
  v2 = v1[3];
  if (v3 >= v2 >> 1)
    v1 = sub_1908F282C((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
  v4 = v0[65];
  v6 = (void *)v0[63];
  v5 = v0[64];
  v1[2] = v3 + 1;
  v7 = &v1[10 * v3];
  v7[2] = *((_OWORD *)v0 + 1);
  v8 = *((_OWORD *)v0 + 2);
  v9 = *((_OWORD *)v0 + 3);
  v10 = *((_OWORD *)v0 + 5);
  v7[5] = *((_OWORD *)v0 + 4);
  v7[6] = v10;
  v7[3] = v8;
  v7[4] = v9;
  sub_1908B53FC(v5, v4);

  v0[49] = v1;
  sub_1908CDA28((uint64_t)(v0 + 12));
  while (1)
  {
    v11 = v0[62] + 1;
    if (v11 == v0[60])
      break;
    v0[62] = v11;
    v12 = v0[59];
    if ((v12 & 0xC000000000000001) != 0)
      v13 = (id)MEMORY[0x194013510]();
    else
      v13 = *(id *)(v12 + 8 * v11 + 32);
    v14 = v13;
    v0[63] = v13;
    if (*(_QWORD *)(v0[61] + 16))
    {
      v15 = v13;
      v16 = sub_1908D2CFC((uint64_t)v15);
      if ((v17 & 1) != 0)
      {
        v50 = (uint64_t *)(*(_QWORD *)(v0[61] + 56) + 16 * v16);
        v51 = *v50;
        v0[64] = *v50;
        v52 = v50[1];
        v0[65] = v52;
        sub_1908B53B8(v51, v52);

        v53 = v15;
        sub_1908B53B8(v51, v52);
        return swift_task_switch();
      }

    }
  }
  swift_bridgeObjectRelease();
  result = swift_release();
  v0[51] = MEMORY[0x1E0DEE9D8];
  if ((_QWORD)xmmword_1ECF6D940)
  {
    v56 = v0 + 51;
    v19 = *((_QWORD *)&xmmword_1ECF6D940 + 1);
    v20 = *(_QWORD *)xmmword_1ECF6D940;
    v0[50] = xmmword_1ECF6D940;
    v21 = (*(uint64_t (**)(uint64_t))(v19 + 8))(v20);
    v22 = *(_QWORD *)(v21 + 16);
    v55 = v0;
    if (v22)
    {
      v23 = type metadata accessor for WidgetDescriptor(0);
      v24 = 0;
      v25 = *(_QWORD *)(v23 - 8);
      v26 = v21 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
      v27 = *(_QWORD *)(v25 + 72);
      v28 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v29 = v22;
      do
      {
        v31 = (uint64_t *)(v26 + v24 * v27 + *(int *)(v23 + 128));
        v32 = *v31;
        if (*v31)
        {
          v33 = v31[1];
          v34 = v28[2];
          if (v34)
          {
            v35 = 4;
            v36 = v28[2];
            while (v28[v35] != v32)
            {
              v35 += 2;
              if (!--v36)
                goto LABEL_24;
            }
          }
          else
          {
LABEL_24:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v28 = sub_1908F294C(0, v34 + 1, 1, v28);
            v38 = v28[2];
            v37 = v28[3];
            if (v38 >= v37 >> 1)
              v28 = sub_1908F294C((_QWORD *)(v37 > 1), v38 + 1, 1, v28);
            v28[2] = v38 + 1;
            v30 = &v28[2 * v38];
            v30[4] = v32;
            v30[5] = v33;
            *v56 = v28;
            v22 = v29;
          }
        }
        ++v24;
      }
      while (v24 != v22);
      swift_bridgeObjectRelease();
      v0 = v55;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (qword_1EE1EB680 != -1)
      swift_once();
    v39 = sub_190A465A0();
    __swift_project_value_buffer(v39, (uint64_t)qword_1EE1FD748);
    v40 = sub_190A46588();
    v41 = sub_190A47F68();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = swift_slowAlloc();
      *(_DWORD *)v42 = 134349312;
      swift_beginAccess();
      v55[52] = *(_QWORD *)(v55[49] + 16);
      sub_190A48178();
      *(_WORD *)(v42 + 12) = 2050;
      v0 = v55;
      swift_beginAccess();
      v55[48] = *(_QWORD *)(v55[51] + 16);
      sub_190A48178();
      _os_log_impl(&dword_1908A7000, v40, v41, "Sending %{public}ld ControlInfo instance(s) to %{public}ld PushHandler instances.", (uint8_t *)v42, 0x16u);
      MEMORY[0x194014398](v42, -1, -1);
    }

    swift_beginAccess();
    v54 = *v56;
    v43 = *(_QWORD *)(*v56 + 16);
    if (v43)
    {
      v44 = v0 + 27;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      v45 = 0;
      do
      {
        v46 = v54 + 16 * v45++;
        v57 = *(_OWORD *)(v46 + 32);
        v47 = *(void (**)(_QWORD, _QWORD))(*((_QWORD *)&v57 + 1) + 8);
        *((_OWORD *)v0 + 15) = v57;
        __swift_allocate_boxed_opaque_existential_1(v44);
        v47(v57, *((_QWORD *)&v57 + 1));
        v48 = *(void (**)(uint64_t, _QWORD, _QWORD))(*((_QWORD *)&v57 + 1) + 16);
        v49 = swift_bridgeObjectRetain();
        v48(v49, v57, *((_QWORD *)&v57 + 1));
        v0 = v55;
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
      }
      while (v43 != v45);
      swift_bridgeObjectRelease();
    }
    ((void (*)(_QWORD))v0[54])(0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(void))v0[1])();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1908C6E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v9;

  v7[12] = a6;
  v7[13] = a7;
  v7[11] = a5;
  v7[14] = sub_190A47D64();
  v7[15] = sub_190A47D58();
  v9 = (_QWORD *)swift_task_alloc();
  v7[16] = v9;
  *v9 = v7;
  v9[1] = sub_1908C6ECC;
  return sub_1908CCE7C(a5);
}

uint64_t sub_1908C6ECC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_1908C6F54()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  os_log_type_t type;
  uint64_t v17;
  uint64_t v18;

  swift_release();
  if (qword_1EE1EB680 != -1)
    swift_once();
  v1 = *(void **)(v0 + 88);
  v2 = sub_190A465A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EE1FD748);
  v3 = v1;
  v4 = sub_190A46588();
  v5 = sub_190A47F68();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(char **)(v0 + 88);
  if (v6)
  {
    v8 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v18 = v17;
    *(_DWORD *)v8 = 136315394;
    v9 = objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_control], sel_kind);
    v10 = sub_190A47ADC();
    type = v5;
    v12 = v11;

    *(_QWORD *)(v0 + 64) = sub_1908B35C4(v10, v12, &v18);
    sub_190A48178();
    swift_bridgeObjectRelease();

    *(_WORD *)(v8 + 12) = 2080;
    *(_QWORD *)(v0 + 72) = *(_QWORD *)&v7[OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_state];
    sub_190A462E8();
    sub_1908AED38(&qword_1EE1EC870, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0F858], MEMORY[0x1E0D0F888]);
    v13 = sub_190A4867C();
    *(_QWORD *)(v0 + 80) = sub_1908B35C4(v13, v14, &v18);
    sub_190A48178();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1908A7000, v4, type, "State for %s updated to %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x194014398](v17, -1, -1);
    MEMORY[0x194014398](v8, -1, -1);
  }
  else
  {

  }
  (*(void (**)(_QWORD))(v0 + 96))(0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1908C71F4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  void *v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  void (*v21)(void);
  void *v22;
  uint64_t v24;
  uint64_t v25;

  swift_release();
  if (qword_1EE1EB680 != -1)
    swift_once();
  v1 = *(void **)(v0 + 136);
  v2 = *(void **)(v0 + 88);
  v3 = sub_190A465A0();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EE1FD748);
  v4 = v2;
  v5 = v1;
  v6 = v4;
  v7 = v1;
  v8 = sub_190A46588();
  v9 = sub_190A47F50();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(void **)(v0 + 136);
  v12 = *(char **)(v0 + 88);
  if (v10)
  {
    v13 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v25 = v24;
    *(_DWORD *)v13 = 136315394;
    v14 = objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_control], sel_kind);
    v15 = sub_190A47ADC();
    v17 = v16;

    *(_QWORD *)(v0 + 48) = sub_1908B35C4(v15, v17, &v25);
    sub_190A48178();
    swift_bridgeObjectRelease();

    *(_WORD *)(v13 + 12) = 2080;
    swift_getErrorValue();
    v18 = sub_1909E4DD8(*(_QWORD *)(v0 + 24));
    *(_QWORD *)(v0 + 56) = sub_1908B35C4(v18, v19, &v25);
    sub_190A48178();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1908A7000, v8, v9, "Error setting state for %s: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x194014398](v24, -1, -1);
    MEMORY[0x194014398](v13, -1, -1);
  }
  else
  {

  }
  v20 = *(void **)(v0 + 136);
  v21 = *(void (**)(void))(v0 + 96);
  v22 = (void *)sub_190A45F4C();
  v21();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1908C75F8(unint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  _QWORD *v42;
  _BYTE v44[12];
  int v45;
  uint64_t v46;
  uint64_t *v47;
  os_log_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;

  v53 = (unint64_t)a2;
  v7 = sub_190A46180();
  v8 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  v52 = v8;
  MEMORY[0x1E0C80A78](v7);
  v10 = &v44[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_190A460CC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v44[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_190A48484();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  sub_190A460C0();
  v16 = sub_190A46090();
  v18 = v17;
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  sub_1908CA1DC(6uLL, v16, v18);
  swift_bridgeObjectRelease();
  sub_190A48160();
  swift_bridgeObjectRelease();
  v55 = 2977907;
  v56 = 0xE300000000000000;
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  v20 = v55;
  v19 = v56;
  v21 = v15;
  if (v15 < 1)
    goto LABEL_8;
  if (qword_1EE1E6038 != -1)
    goto LABEL_17;
  while (1)
  {
    v22 = sub_190A465A0();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EE1FD6E8);
    swift_bridgeObjectRetain_n();
    v23 = sub_190A46588();
    v24 = sub_190A47F68();
    v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v26 = swift_slowAlloc();
      v49 = swift_slowAlloc();
      v55 = v49;
      *(_DWORD *)v26 = 136446466;
      v48 = v23;
      swift_bridgeObjectRetain();
      v54 = sub_1908B35C4(v20, v19, &v55);
      v50 = v21;
      v47 = &v55;
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2082;
      v46 = v26 + 14;
      v27 = v10;
      sub_190A46138();
      sub_1908AED38((unint64_t *)&unk_1ECF6D258, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E70]);
      v28 = v51;
      v29 = sub_190A4867C();
      v45 = v25;
      v30 = v20;
      v31 = a4;
      v32 = a3;
      v34 = v33;
      (*(void (**)(_BYTE *, uint64_t))(v52 + 8))(v27, v28);
      v54 = sub_1908B35C4(v29, v34, &v55);
      v21 = v50;
      sub_190A48178();
      a3 = v32;
      a4 = v31;
      v20 = v30;
      swift_bridgeObjectRelease();
      v35 = v48;
      _os_log_impl(&dword_1908A7000, v48, (os_log_type_t)v45, "Batch begin (%{public}s) - locale: %{public}s", (uint8_t *)v26, 0x16u);
      v36 = v49;
      swift_arrayDestroy();
      MEMORY[0x194014398](v36, -1, -1);
      MEMORY[0x194014398](v26, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
LABEL_8:
    v37 = swift_allocObject();
    *(_BYTE *)(v37 + 16) = v21 > 0;
    *(_QWORD *)(v37 + 24) = v20;
    *(_QWORD *)(v37 + 32) = v19;
    *(_QWORD *)(v37 + 40) = a3;
    *(_QWORD *)(v37 + 48) = a4;
    if ((a1 & 0xC000000000000001) != 0)
      break;
    v10 = (_BYTE *)v53;
    if ((v53 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) > v53)
    {
      v38 = *(void **)(a1 + 8 * v53 + 32);
      swift_retain();
      v39 = v38;
      goto LABEL_12;
    }
    __break(1u);
LABEL_17:
    swift_once();
  }
  swift_retain();
  v10 = (_BYTE *)v53;
  v39 = (id)MEMORY[0x194013510](v53, a1);
LABEL_12:
  v40 = v39;
  v41 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v42 = (_QWORD *)swift_allocObject();
  v42[2] = v41;
  v42[3] = a3;
  v42[4] = a4;
  v42[5] = v10;
  v42[6] = a1;
  v42[7] = sub_1908CA288;
  v42[8] = v37;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1908CD27C(v40, (uint64_t)sub_1908CA2CC, (uint64_t)v42);
  swift_release();

  swift_release();
  return swift_release();
}

uint64_t sub_1908C7B80(uint64_t a1, uint64_t a2)
{
  return sub_1908AED38(&qword_1EE1EC840, a2, (uint64_t (*)(uint64_t))type metadata accessor for WidgetURLHandler, (uint64_t)&unk_190A4A418);
}

uint64_t sub_1908C7BAC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1908C7BD0(void *a1, char a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(void *), uint64_t a6, uint64_t *a7, uint64_t a8)
{
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  if ((a2 & 1) != 0)
  {
    if (a1)
    {
      v13 = *a7;
      v14 = a1;
      if (v13 != -1)
        swift_once();
      v15 = sub_190A465A0();
      __swift_project_value_buffer(v15, a8);
      swift_bridgeObjectRetain_n();
      v16 = v14;
      v17 = sub_190A46588();
      v18 = sub_190A47F68();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = swift_slowAlloc();
        v27 = (_QWORD *)swift_slowAlloc();
        v28 = swift_slowAlloc();
        v29 = v28;
        *(_DWORD *)v19 = 136446466;
        swift_bridgeObjectRetain();
        sub_1908B35C4(a3, a4, &v29);
        sub_190A48178();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v19 + 12) = 2114;
        v20 = v16;
        sub_190A48178();
        *v27 = a1;

        _os_log_impl(&dword_1908A7000, v17, v18, "Batch end (%{public}s) - failure: %{public}@", (uint8_t *)v19, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
        swift_arrayDestroy();
        MEMORY[0x194014398](v27, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x194014398](v28, -1, -1);
        MEMORY[0x194014398](v19, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      if (*a7 != -1)
        swift_once();
      v21 = sub_190A465A0();
      __swift_project_value_buffer(v21, a8);
      swift_bridgeObjectRetain_n();
      v22 = sub_190A46588();
      v23 = sub_190A47F68();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        v25 = swift_slowAlloc();
        v29 = v25;
        *(_DWORD *)v24 = 136446210;
        swift_bridgeObjectRetain();
        sub_1908B35C4(a3, a4, &v29);
        sub_190A48178();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1908A7000, v22, v23, "Batch end (%{public}s) - success", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x194014398](v25, -1, -1);
        MEMORY[0x194014398](v24, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
  return a5(a1);
}

void sub_1908C7FA4(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, unint64_t a6, void (*a7)(uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v13 = a2 + 16;
  swift_beginAccess();
  v14 = MEMORY[0x19401444C](v13);
  if (!v14)
  {
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
    v17 = sub_190A47ADC();
    v15 = sub_19096BFDC(v17, v18, 1050, 0, 0xD000000000000024, 0x8000000190A60710);
    a3();
    goto LABEL_11;
  }
  v15 = (id)v14;
  if (a1)
  {
    v16 = a1;
LABEL_10:
    a7(v16);
    goto LABEL_11;
  }
  if (a6 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_190A48484();
    swift_bridgeObjectRelease();
    v20 = v21 - 1;
    if (!__OFSUB__(v21, 1))
      goto LABEL_7;
  }
  else
  {
    v19 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v20 = v19 - 1;
    if (!__OFSUB__(v19, 1))
    {
LABEL_7:
      if (v20 <= a5)
      {
        v16 = 0;
        goto LABEL_10;
      }
      sub_1908C75F8(a6, a5 + 1, a3, a4);
LABEL_11:

      return;
    }
  }
  __break(1u);
}

uint64_t sub_1908C8104(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  sub_190966FE0();
  return a2(0);
}

uint64_t sub_1908C818C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = type metadata accessor for ControlArchiveStorage(0);
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1908C81EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;

  if (WidgetEnvironment.enumeratedCount()() < 1)
  {
    sub_1908CDC58();
    swift_allocError();
    *(_QWORD *)v3 = 0;
    *(_QWORD *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 16) = 3;
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v1;
    *v1 = v0;
    v1[1] = sub_1908C82B4;
    return sub_1908C8424(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  }
}

uint64_t sub_1908C82B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1908C8318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 72);
  sub_1908AED38(&qword_1EE1EB6B8, 255, type metadata accessor for ControlArchiveStorage, (uint64_t)&unk_190A546B0);
  v2 = sub_190A47A34();
  if (v1)
  {
    sub_1908B5150(*(_QWORD *)(v0 + 56), type metadata accessor for ControlArchiveStorage);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = v2;
    v6 = v3;
    sub_1908B5150(*(_QWORD *)(v0 + 56), type metadata accessor for ControlArchiveStorage);
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v5, v6);
  }
}

uint64_t sub_1908C83F0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1908C8424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5[29] = a4;
  v5[30] = a5;
  v5[27] = a2;
  v5[28] = a3;
  v5[26] = a1;
  v5[31] = *(_QWORD *)(type metadata accessor for ControlTemplateType() - 8);
  v5[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
  v5[33] = swift_task_alloc();
  v5[34] = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0);
  v5[35] = swift_task_alloc();
  v6 = sub_190A46C30();
  v5[36] = v6;
  v5[37] = *(_QWORD *)(v6 - 8);
  v5[38] = swift_task_alloc();
  v5[39] = swift_task_alloc();
  v5[40] = swift_task_alloc();
  v5[41] = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  v5[42] = swift_task_alloc();
  type metadata accessor for BundleStub();
  v5[43] = swift_task_alloc();
  v7 = sub_190A46084();
  v5[44] = v7;
  v5[45] = *(_QWORD *)(v7 - 8);
  v5[46] = swift_task_alloc();
  v5[47] = type metadata accessor for ControlArchiveStorageMetadata(0);
  v5[48] = swift_task_alloc();
  v8 = (_QWORD *)swift_task_alloc();
  v5[49] = v8;
  *v8 = v5;
  v8[1] = sub_1908C85B8;
  return sub_1908C4734();
}

uint64_t sub_1908C85B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 400) = a1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1908C86C8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t *v15;
  id v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(uint64_t, uint64_t);
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t result;
  uint64_t v36;
  uint64_t i;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  void (*v46)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  id v63;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(void **)(v0 + 240);
  v3 = *(id *)(v0 + 224);
  swift_retain();
  v4 = v2;
  swift_retain();
  sub_190A46078();
  BundleStub.init(_:)((uint64_t)objc_msgSend(v3, sel_extensionIdentity), v1);
  if (qword_1ECF6C5C8 != -1)
    swift_once();
  v5 = *(int **)(v0 + 376);
  v6 = *(_QWORD *)(v0 + 384);
  v7 = *(_QWORD *)(v0 + 360);
  v8 = *(_QWORD *)(v0 + 344);
  v9 = *(_QWORD *)(v0 + 352);
  v53 = *(_QWORD *)(v0 + 368);
  v54 = *(uint64_t **)(v0 + 336);
  v55 = *(_QWORD *)(v0 + 400);
  v56 = *(_QWORD *)(v0 + 320);
  v57 = *(_QWORD *)(v0 + 296);
  v58 = *(_QWORD *)(v0 + 328);
  v61 = *(uint64_t **)(v0 + 280);
  v59 = *(_QWORD *)(v0 + 288);
  v60 = *(_QWORD *)(v0 + 272);
  v11 = *(_QWORD *)(v0 + 232);
  v10 = *(void **)(v0 + 240);
  v12 = *(_QWORD *)(v0 + 224);
  swift_beginAccess();
  v13 = qword_1ECF6C5E8;
  *(_QWORD *)(v6 + v5[6]) = v12;
  sub_1908AF5D8(v8, v6, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6 + v5[8], v53, v9);
  *(_QWORD *)(v6 + v5[5]) = v13;
  v62 = v11;
  v63 = v10;
  swift_retain();
  v14 = v10;
  WidgetEnvironment.filterForControlArchiving()();
  sub_1908B5150(v8, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v53, v9);
  swift_release();

  v15 = (uint64_t *)(v6 + v5[7]);
  *v15 = v11;
  v15[1] = (uint64_t)v10;
  *(_QWORD *)(v6 + v5[9]) = v55;
  swift_retain();
  v16 = v10;
  sub_190A46C24();
  v17 = (char *)v54 + *(int *)(v58 + 20);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
  *(_QWORD *)(v0 + 408) = v18;
  v18(v17, v56, v59);
  *v54 = v11;
  v54[1] = (uint64_t)v16;
  v19 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
  *(_QWORD *)(v0 + 416) = v19;
  v19(v56, v59);
  v21 = *v54;
  v20 = (void *)v54[1];
  v22 = *(int *)(v60 + 20);
  *(_DWORD *)(v0 + 60) = v22;
  v18((char *)v61 + v22, (uint64_t)v17, v59);
  swift_retain();
  v23 = v20;
  v24 = MEMORY[0x1E0DEE9D8];
  v25 = sub_1908FF740(MEMORY[0x1E0DEE9D8]);
  v62 = v21;
  v63 = v23;
  swift_retain();
  v26 = v23;
  swift_bridgeObjectRetain();
  v27 = sub_1908FFDE4(&v62, v25);
  v29 = v28;
  v31 = v30;
  swift_release();

  swift_bridgeObjectRelease();
  *v61 = v27;
  v61[1] = v29;
  v61[2] = v31;
  if (!(v29 >> 62))
  {
    v32 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v33 = v32 - 1;
    if (v32 >= 1)
      goto LABEL_5;
LABEL_16:
    v40 = *(_QWORD *)(v0 + 296);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v40 + 56))(*(_QWORD *)(v0 + 264), 1, 1, *(_QWORD *)(v0 + 288));
LABEL_19:
    v47 = *(_QWORD *)(v0 + 384);
    v48 = *(_QWORD *)(v0 + 336);
    v49 = *(_QWORD *)(v0 + 280);
    v50 = *(_QWORD *)(v0 + 208);
    swift_release();
    sub_1908B5150(v49, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
    sub_1908B5150(v48, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
    sub_1908BD0B4(v47, v50, type metadata accessor for ControlArchiveStorageMetadata);
    v51 = type metadata accessor for ControlArchiveStorage(0);
    *(_QWORD *)(v50 + *(int *)(v51 + 20)) = MEMORY[0x1E0DEE9D8];
    *(_DWORD *)(v50 + *(int *)(v51 + 24)) = 2;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_bridgeObjectRetain_n();
  v39 = sub_190A48484();
  swift_bridgeObjectRelease();
  v33 = v39 - 1;
  if (v39 < 1)
    goto LABEL_16;
LABEL_5:
  *(_QWORD *)(v0 + 424) = v24;
  if ((sub_1908EF6EC(v33) & 1) == 0)
  {
    v34 = *(_QWORD **)(v0 + 280);
    swift_bridgeObjectRelease();
    *v34 = v24;
    swift_bridgeObjectRelease();
    v34[1] = v24;
    swift_bridgeObjectRelease();
    v34[2] = v24;
  }
  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 408))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 280) + *(int *)(v0 + 60), *(_QWORD *)(v0 + 288));
  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    v36 = sub_190A48484();
    result = swift_bridgeObjectRelease();
    if (!v36)
      goto LABEL_18;
  }
  else
  {
    v36 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v36)
      goto LABEL_18;
  }
  if (v36 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v36; ++i)
  {
    if ((v29 & 0xC000000000000001) != 0)
    {
      v38 = MEMORY[0x194013510](i, v29);
    }
    else
    {
      v38 = *(_QWORD *)(v29 + 8 * i + 32);
      swift_retain();
    }
    (*(void (**)(_QWORD))(**(_QWORD **)(v38 + 16) + 112))(*(_QWORD *)(v0 + 312));
    swift_release();
  }
LABEL_18:
  v41 = *(_QWORD *)(v0 + 312);
  v42 = *(_QWORD *)(v0 + 288);
  v43 = *(_QWORD *)(v0 + 296);
  v44 = *(_QWORD *)(v0 + 264);
  swift_bridgeObjectRelease();
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32);
  v45(v44, v41, v42);
  v46 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56);
  *(_QWORD *)(v0 + 432) = v46;
  v46(v44, 0, 1, v42);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v44, 1, v42) == 1)
    goto LABEL_19;
  v45(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 288));
  sub_190A47D64();
  *(_QWORD *)(v0 + 440) = sub_190A47D58();
  *(_QWORD *)(v0 + 448) = sub_190A47D28();
  *(_QWORD *)(v0 + 456) = v52;
  return swift_task_switch();
}

uint64_t sub_1908C8CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int *v15;
  uint64_t (*v16)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t);

  sub_1908CDB94(*(_QWORD *)(v0 + 216) + 8, v0 + 16);
  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    sub_1908B4BBC((__int128 *)(v0 + 16), v0 + 104);
    v1 = *(_QWORD *)(v0 + 128);
    v2 = *(_QWORD *)(v0 + 136);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 104), v1);
    v3 = *(int **)(v2 + 56);
    *(_QWORD *)(v0 + 88) = swift_getAssociatedTypeWitness();
    *(_QWORD *)(v0 + 96) = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 64));
    v15 = (int *)((char *)v3 + *v3);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 488) = v5;
    *v5 = v0;
    v5[1] = sub_1908C8EFC;
    return ((uint64_t (*)(uint64_t *, _QWORD, uint64_t, uint64_t))v15)(boxed_opaque_existential_1, *(_QWORD *)(v0 + 304), v1, v2);
  }
  else
  {
    v7 = *(uint64_t **)(v0 + 216);
    sub_1908B4BBC((__int128 *)(v0 + 16), v0 + 144);
    v8 = *(_QWORD *)(v0 + 168);
    v9 = *(_QWORD *)(v0 + 176);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 144), v8);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    *(_QWORD *)(v0 + 464) = v10;
    v11 = *(_QWORD *)(v0 + 168);
    v12 = *(_QWORD *)(v0 + 176);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 144), v11);
    v13 = *v7;
    v16 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v12 + 16)
                                                                                      + *(_QWORD *)(v12 + 16));
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 472) = v14;
    *v14 = v0;
    v14[1] = sub_1908C8E9C;
    return v16(v0 + 64, *(_QWORD *)(v0 + 304), v10, v13, v11, v12);
  }
}

uint64_t sub_1908C8E9C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 480) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1908C8EFC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 496) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1908C8F5C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 464);
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  return swift_task_switch();
}

uint64_t sub_1908C8FAC()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[58];
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 18));
  swift_bridgeObjectRelease();
  v0[63] = v0[60];
  return swift_task_switch();
}

uint64_t sub_1908C9018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t i;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  void (*v29)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 64), v2);
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (char *)swift_task_alloc();
  (*(void (**)(char *, _QWORD *, uint64_t))(v4 + 16))(v5, v3, v2);
  ControlTemplateType.init<A>(_:)(v5, v2, v1);
  swift_task_dealloc();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *(_QWORD *)(v0 + 424);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v7 = sub_1908F2818(0, *(_QWORD *)(v7 + 16) + 1, 1, *(_QWORD *)(v0 + 424));
  v9 = *(_QWORD *)(v7 + 16);
  v8 = *(_QWORD *)(v7 + 24);
  if (v9 >= v8 >> 1)
    v7 = sub_1908F2818(v8 > 1, v9 + 1, 1, v7);
  v10 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
  v11 = *(_QWORD *)(v0 + 304);
  v13 = *(_QWORD *)(v0 + 280);
  v12 = *(_QWORD *)(v0 + 288);
  v15 = *(_QWORD *)(v0 + 248);
  v14 = *(_QWORD *)(v0 + 256);
  *(_QWORD *)(v7 + 16) = v9 + 1;
  sub_1908BD0B4(v14, v7+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v9, (uint64_t (*)(_QWORD))type metadata accessor for ControlTemplateType);
  v10(v11, v12);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  v16 = *(_QWORD *)(v13 + 8);
  if (!(v16 >> 62))
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17 > 0)
      goto LABEL_7;
LABEL_18:
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 432))(*(_QWORD *)(v0 + 264), 1, 1, *(_QWORD *)(v0 + 288));
LABEL_21:
    v30 = *(_QWORD *)(v0 + 384);
    v31 = *(_QWORD *)(v0 + 336);
    v32 = *(_QWORD *)(v0 + 280);
    v33 = *(_QWORD *)(v0 + 208);
    swift_release();
    sub_1908B5150(v32, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
    sub_1908B5150(v31, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
    sub_1908BD0B4(v30, v33, type metadata accessor for ControlArchiveStorageMetadata);
    v34 = type metadata accessor for ControlArchiveStorage(0);
    *(_QWORD *)(v33 + *(int *)(v34 + 20)) = v7;
    *(_DWORD *)(v33 + *(int *)(v34 + 24)) = 2;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_bridgeObjectRetain_n();
  v17 = sub_190A48484();
  swift_bridgeObjectRelease();
  if (v17 <= 0)
    goto LABEL_18;
LABEL_7:
  *(_QWORD *)(v0 + 424) = v7;
  if ((sub_1908EF6EC(v17 - 1) & 1) == 0)
  {
    v18 = *(_QWORD **)(v0 + 280);
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x1E0DEE9D8];
    *v18 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    v18[1] = v19;
    swift_bridgeObjectRelease();
    v18[2] = v19;
  }
  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 408))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 280) + *(int *)(v0 + 60), *(_QWORD *)(v0 + 288));
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_190A48484();
    result = swift_bridgeObjectRelease();
    if (!v21)
      goto LABEL_20;
  }
  else
  {
    v21 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v21)
      goto LABEL_20;
  }
  if (v21 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v21; ++i)
  {
    if ((v16 & 0xC000000000000001) != 0)
    {
      v23 = MEMORY[0x194013510](i, v16);
    }
    else
    {
      v23 = *(_QWORD *)(v16 + 8 * i + 32);
      swift_retain();
    }
    (*(void (**)(_QWORD))(**(_QWORD **)(v23 + 16) + 112))(*(_QWORD *)(v0 + 312));
    swift_release();
  }
LABEL_20:
  v24 = *(_QWORD *)(v0 + 312);
  v25 = *(_QWORD *)(v0 + 288);
  v26 = *(_QWORD *)(v0 + 296);
  v27 = *(_QWORD *)(v0 + 264);
  swift_bridgeObjectRelease();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32);
  v28(v27, v24, v25);
  v29 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56);
  *(_QWORD *)(v0 + 432) = v29;
  v29(v27, 0, 1, v25);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v27, 1, v25) == 1)
    goto LABEL_21;
  v28(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 288));
  sub_190A47D64();
  *(_QWORD *)(v0 + 440) = sub_190A47D58();
  *(_QWORD *)(v0 + 448) = sub_190A47D28();
  *(_QWORD *)(v0 + 456) = v35;
  return swift_task_switch();
}

uint64_t sub_1908C9498()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
  v2 = *(_QWORD *)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 280);
  v5 = *(_QWORD *)(v0 + 288);
  swift_release();
  v1(v4, v5);
  sub_1908B5150(v6, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
  sub_1908B5150(v3, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  sub_1908B5150(v2, type metadata accessor for ControlArchiveStorageMetadata);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1908C95AC()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  return swift_task_switch();
}

uint64_t sub_1908C95F4()
{
  uint64_t v0;

  swift_release();
  __swift_deallocate_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 504) = *(_QWORD *)(v0 + 496);
  return swift_task_switch();
}

uint64_t sub_1908C9664(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1908C96C8;
  return v6(a1);
}

uint64_t sub_1908C96C8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1908C9714(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1908C9738(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1908C9758(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;

  v23 = type metadata accessor for TestingNilDescriptorQuerying();
  v24 = &off_1E2CC8710;
  *(_QWORD *)&v22 = a4;
  *(_BYTE *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_includeSelectableRegions) = 0;
  v10 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_computedSelectableRegions) = MEMORY[0x1E0DEE9E0];
  *(_BYTE *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_archiveVersion) = 2;
  *(_BYTE *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfBackgroundIsMissing) = 0;
  *(_QWORD *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_unencodeableTypes) = MEMORY[0x1E0DEE9D8];
  v11 = a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_currentEnvironment;
  v12 = sub_190A46C30();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_largestImageSizeByFamily) = v10;
  v13 = OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_allowedImageTypes;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BBE0);
  v14 = sub_190A464C8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_190A4A380;
  sub_190A464BC();
  sub_190A46498();
  sub_190A464B0();
  sub_190A464A4();
  v17 = sub_190947570(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(a6 + v13) = v17;
  v18 = a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_defaultImageType;
  sub_190A46498();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  sub_1908BD0B4(a2, a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_bundleStub, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  *(_QWORD *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_systemVersion) = a1;
  *(_BYTE *)(a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_failIfAnyTypeFailedToEncode) = a3;
  sub_1908B4BD4(a5, a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_viewCollection, &qword_1ECF6ACC0);
  sub_1908B4BBC(&v22, a6 + OBJC_IVAR____TtCC9WidgetKit14WidgetArchiver17ArchivingDelegate_descriptorQuerying);
  return a6;
}

uint64_t sub_1908C99CC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v18;
  void *v19;
  uint64_t v20;

  v4 = v3;
  v18 = a2;
  v19 = a3;
  v6 = type metadata accessor for ViewableTimelineEntry();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1908B8CFC(0, v10, 0);
    v11 = v20;
    v12 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v13 = a1 + v12;
    v14 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_1908C0DFC(v13, v18, v19, (uint64_t)v9);
      if (v4)
        break;
      v4 = 0;
      v20 = v11;
      v16 = *(_QWORD *)(v11 + 16);
      v15 = *(_QWORD *)(v11 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1908B8CFC(v15 > 1, v16 + 1, 1);
        v11 = v20;
      }
      *(_QWORD *)(v11 + 16) = v16 + 1;
      sub_1908BD0B4((uint64_t)v9, v11 + v12 + v16 * v14, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
      v13 += v14;
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1908C9B1C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  _QWORD v33[2];
  uint64_t v34;
  unint64_t v35;
  id v36;
  id v37;
  int64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;

  v36 = a2;
  v37 = a3;
  v5 = (int *)type metadata accessor for ViewableTimelineEntry();
  v6 = *((_QWORD *)v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v33[1] = v3;
    v48 = MEMORY[0x1E0DEE9D8];
    sub_1908B8CFC(0, v9, 0);
    v35 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v11 = a1 + v35;
    v34 = *(_QWORD *)(v6 + 72);
    do
    {
      v38 = v9;
      v12 = *(_QWORD *)(v11 + v5[5]);
      KeyPath = swift_getKeyPath();
      v14 = swift_getKeyPath();
      swift_retain();
      v15 = v36;
      v16 = v37;
      v17 = objc_msgSend(v15, sel_family);
      v18 = sub_190A46084();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v8, v11, v18);
      v39 = v12;
      v40 = v15;
      v41 = v16;
      v42 = v17;
      v43 = KeyPath;
      v44 = 0;
      v45 = v14;
      v46 = 0;
      v47 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B020);
      sub_1908CE004();
      v19 = sub_190A47884();
      v20 = (uint64_t *)(v11 + v5[6]);
      v21 = *v20;
      v22 = v20[1];
      LOBYTE(v16) = *((_BYTE *)v20 + 16);
      sub_1908AAA48(v11 + v5[7], (uint64_t)&v8[v5[7]], &qword_1ECF6AE20);
      v23 = (uint64_t *)(v11 + v5[8]);
      v24 = *v23;
      v25 = v23[1];
      *(_QWORD *)&v8[v5[5]] = v19;
      v26 = &v8[v5[6]];
      *(_QWORD *)v26 = v21;
      *((_QWORD *)v26 + 1) = v22;
      v26[16] = (char)v16;
      v27 = (uint64_t *)&v8[v5[8]];
      *v27 = v24;
      v27[1] = v25;
      v10 = v48;
      sub_1908CE0B4(v24, v25);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1908B8CFC(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v10 = v48;
      }
      v29 = *(_QWORD *)(v10 + 16);
      v28 = *(_QWORD *)(v10 + 24);
      v30 = v38;
      if (v29 >= v28 >> 1)
      {
        sub_1908B8CFC(v28 > 1, v29 + 1, 1);
        v10 = v48;
      }
      *(_QWORD *)(v10 + 16) = v29 + 1;
      v31 = v34;
      sub_1908BD0B4((uint64_t)v8, v10 + v35 + v29 * v34, (uint64_t (*)(_QWORD))type metadata accessor for ViewableTimelineEntry);
      v11 += v31;
      v9 = v30 - 1;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1908C9D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  char *v30;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t aBlock[6];

  v4 = sub_190A47980();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_190A479C8();
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  MEMORY[0x1E0C80A78](v7);
  v36 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_190A46180();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v13 = sub_190A465A0();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ECF6D988);
  v14 = sub_190A46588();
  v15 = sub_190A47F68();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v35 = v5;
    v17 = v16;
    v33 = swift_slowAlloc();
    aBlock[0] = v33;
    *(_DWORD *)v17 = 136446466;
    v40 = sub_1908B35C4(0xD000000000000022, 0x8000000190A60A80, aBlock);
    v34 = a1;
    sub_190A48178();
    *(_WORD *)(v17 + 12) = 2082;
    v32[1] = v17 + 14;
    sub_190A46138();
    sub_1908AED38((unint64_t *)&unk_1ECF6D258, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E70]);
    v18 = sub_190A4867C();
    v19 = v10;
    v20 = a2;
    v21 = v4;
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v9);
    v40 = sub_1908B35C4(v18, v23, aBlock);
    a1 = v34;
    sub_190A48178();
    v4 = v21;
    a2 = v20;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v14, v15, "=+= %{public}s - locale: %{public}s", (uint8_t *)v17, 0x16u);
    v24 = v33;
    swift_arrayDestroy();
    MEMORY[0x194014398](v24, -1, -1);
    v25 = v17;
    v5 = v35;
    MEMORY[0x194014398](v25, -1, -1);
  }

  sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3A0);
  v26 = (void *)sub_190A48004();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a1;
  *(_QWORD *)(v27 + 24) = a2;
  aBlock[4] = (uint64_t)sub_1908CE6A4;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1908A9D98;
  aBlock[3] = (uint64_t)&block_descriptor_183;
  v28 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v29 = v36;
  sub_190A47998();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1908AED38((unint64_t *)&qword_1ECF6D318, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
  sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
  v30 = v39;
  sub_190A481E4();
  MEMORY[0x194013234](0, v29, v30, v28);
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v30, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v29, v38);
}

unint64_t sub_1908CA1DC(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  char v4;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    result = sub_190A47B30();
    if ((v4 & 1) != 0)
      result = 15;
    if (4 * v3 >= result >> 14)
      return sub_190A47B90();
  }
  __break(1u);
  return result;
}

uint64_t sub_1908CA288(void *a1)
{
  return sub_1908CE244(a1, &qword_1EE1E6038, (uint64_t)qword_1EE1FD6E8);
}

uint64_t sub_1908CA2A4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1908CA2CC(uint64_t a1)
{
  return sub_1908CDAC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1908C7FA4);
}

uint64_t sub_1908CA2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  char *v36;
  uint64_t v37;
  _DWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void *v49;
  _QWORD *v50;
  void *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t aBlock;
  unint64_t v74;
  uint64_t (*v75)(uint64_t);
  void *v76;
  void (*v77)();
  _QWORD *v78;

  v61 = a2;
  v62 = a3;
  v4 = sub_190A47980();
  v68 = *(_QWORD *)(v4 - 8);
  v69 = v4;
  MEMORY[0x1E0C80A78](v4);
  v67 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190A479C8();
  v65 = *(_QWORD *)(v6 - 8);
  v66 = v6;
  MEMORY[0x1E0C80A78](v6);
  v64 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_190A4651C();
  v63 = *(_QWORD *)(v71 - 8);
  v8 = MEMORY[0x1E0C80A78](v71);
  v59 = v9;
  v60 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v70 = (char *)&v56 - v10;
  v11 = sub_190A46180();
  v57 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_190A460CC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190A460C0();
  v18 = sub_190A46090();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_1908CA1DC(6uLL, v18, v20);
  swift_bridgeObjectRelease();
  sub_190A48160();
  swift_bridgeObjectRelease();
  aBlock = 2976880;
  v74 = 0xE300000000000000;
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  v21 = aBlock;
  v22 = v74;
  if (qword_1ECF6BA00 != -1)
    swift_once();
  v23 = sub_190A465A0();
  __swift_project_value_buffer(v23, (uint64_t)qword_1ECF6D800);
  swift_bridgeObjectRetain_n();
  v24 = sub_190A46588();
  v25 = sub_190A47F68();
  v26 = os_log_type_enabled(v24, v25);
  v58 = v21;
  if (v26)
  {
    v27 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v56 = a1;
    v29 = v28;
    aBlock = v28;
    *(_DWORD *)v27 = 136446466;
    swift_bridgeObjectRetain();
    v72 = sub_1908B35C4(v21, v22, &aBlock);
    sub_190A48178();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 12) = 2082;
    sub_190A46138();
    sub_1908AED38((unint64_t *)&unk_1ECF6D258, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E70]);
    v30 = sub_190A4867C();
    v31 = v11;
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v13, v31);
    v72 = sub_1908B35C4(v30, v33, &aBlock);
    sub_190A48178();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v24, v25, "Batch begin (%{public}s) - locale: %{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    v34 = v29;
    a1 = v56;
    MEMORY[0x194014398](v34, -1, -1);
    MEMORY[0x194014398](v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (qword_1ECF6C4D0 != -1)
    swift_once();
  v35 = (id)qword_1ECF6D8A0;
  v36 = v70;
  sub_190A46504();
  sub_190A48040();
  sub_190A464EC();
  type metadata accessor for UnfairLock();
  v37 = swift_allocObject();
  v38 = (_DWORD *)swift_slowAlloc();
  *v38 = 0;
  *(_QWORD *)(v37 + 16) = v38;
  v39 = swift_allocObject();
  *(_BYTE *)(v39 + 16) = 0;
  v40 = v39;
  v41 = v63;
  v42 = v60;
  v43 = v71;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v36, v71);
  v44 = (*(unsigned __int8 *)(v41 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  v45 = (v59 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
  v46 = (char *)swift_allocObject();
  *((_QWORD *)v46 + 2) = v37;
  *((_QWORD *)v46 + 3) = v40;
  v57 = v40;
  *((_QWORD *)v46 + 4) = v58;
  *((_QWORD *)v46 + 5) = v22;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v46[v44], v42, v43);
  v47 = &v46[v45];
  v48 = v62;
  *(_QWORD *)v47 = v61;
  *((_QWORD *)v47 + 1) = v48;
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3A0);
  swift_retain();
  swift_retain();
  swift_retain();
  v49 = (void *)sub_190A48004();
  v50 = (_QWORD *)swift_allocObject();
  v50[2] = a1;
  v50[3] = sub_1908CE5B8;
  v50[4] = v46;
  v77 = sub_1908CE640;
  v78 = v50;
  aBlock = MEMORY[0x1E0C809B0];
  v74 = 1107296256;
  v75 = sub_1908A9D98;
  v76 = &block_descriptor_158;
  v51 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  v52 = v64;
  sub_190A47998();
  aBlock = MEMORY[0x1E0DEE9D8];
  sub_1908AED38((unint64_t *)&qword_1ECF6D318, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
  sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
  v53 = v67;
  v54 = v69;
  sub_190A481E4();
  MEMORY[0x194013234](0, v52, v53, v51);
  _Block_release(v51);
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v68 + 8))(v53, v54);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v52, v66);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v70, v71);
  return swift_release();
}

id sub_1908CAA04(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id result;
  void *v8;
  unsigned int v9;
  id v10;
  id v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *boxed_opaque_existential_1;
  uint64_t (*v22)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  _UNKNOWN **v29;
  _QWORD v30[5];

  v2 = *a1;
  v3 = type metadata accessor for BundleStub();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[3] = v2;
  v30[4] = &protocol witness table for WidgetViewCollection;
  v30[0] = a1;
  v6 = (void *)objc_opt_self();
  swift_retain();
  result = objc_msgSend(v6, sel_sharedInstance);
  if (result)
  {
    v8 = result;
    v9 = objc_msgSend(result, sel_isInternalInstall);

    if (v9)
    {
      v10 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
      v11 = objc_msgSend(v10, sel_environment);

      v12 = sub_190A47A28();
      if (*(_QWORD *)(v12 + 16))
      {
        sub_1908D2C98(0xD000000000000011, 0x8000000190A60880);
        v14 = v13;
        swift_bridgeObjectRelease();
        if ((v14 & 1) != 0)
        {
          if (qword_1ECF6C5C8 != -1)
            swift_once();
          swift_beginAccess();
          v15 = qword_1ECF6C5E8;
          sub_1908AF5D8((uint64_t)a1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_originatingBundle, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
          type metadata accessor for TestingNilDescriptorQuerying();
          v16 = swift_allocObject();
          type metadata accessor for WidgetArchiver.ArchivingDelegate(0);
          v27 = 0u;
          v28 = 0u;
          v29 = 0;
          v17 = swift_allocObject();
          v18 = sub_1908C9758(v15, (uint64_t)v5, 0, v16, (uint64_t)&v27, v17);
          goto LABEL_10;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    v19 = type metadata accessor for WidgetArchiver.ArchivingDelegate(0);
    v20 = __swift_project_boxed_opaque_existential_1(v30, v2);
    *((_QWORD *)&v28 + 1) = v2;
    v29 = &protocol witness table for WidgetViewCollection;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v27);
    v22 = *(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v2 - 8) + 16);
    v23 = v22(boxed_opaque_existential_1, v20, v2);
    MEMORY[0x1E0C80A78](v23);
    v25 = (char *)&v26 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    v22((uint64_t *)v25, boxed_opaque_existential_1, v2);
    v18 = sub_1909A0134((uint64_t)v25, v19, v2, (uint64_t)&protocol witness table for WidgetViewCollection);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    return (id)v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1908CACF0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 + 81) = a2;
  *(_QWORD *)(v2 + 576) = a1;
  type metadata accessor for TimelineReloadPolicy();
  *(_QWORD *)(v2 + 584) = swift_task_alloc();
  *(_QWORD *)(v2 + 592) = type metadata accessor for ViewSource(0);
  *(_QWORD *)(v2 + 600) = swift_task_alloc();
  *(_QWORD *)(v2 + 608) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  *(_QWORD *)(v2 + 616) = swift_task_alloc();
  v3 = type metadata accessor for WidgetDescriptor(0);
  *(_QWORD *)(v2 + 624) = v3;
  *(_QWORD *)(v2 + 632) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 640) = swift_task_alloc();
  v4 = sub_190A465A0();
  *(_QWORD *)(v2 + 648) = v4;
  *(_QWORD *)(v2 + 656) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 664) = swift_task_alloc();
  sub_190A47D64();
  *(_QWORD *)(v2 + 672) = sub_190A47D58();
  *(_QWORD *)(v2 + 680) = sub_190A47D28();
  *(_QWORD *)(v2 + 688) = v5;
  return swift_task_switch();
}

uint64_t sub_1908CAE2C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t KeyPath;
  os_unfair_lock_s *v15;
  id v16;
  unint64_t v17;
  void *v18;
  id v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int EnumCaseMultiPayload;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t);
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  id v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t (*v72)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  void *v87;
  void *v88;
  uint64_t v89;
  void *v90;
  id v91;
  uint64_t (*v92)(void *, uint64_t, uint64_t, uint64_t);
  _OWORD v93[2];
  uint64_t v94;
  __int128 v95[2];
  uint64_t v96;
  char v97;
  char v98[17];

  v1 = *(void **)(*(_QWORD *)(v0 + 576) + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_widget);
  *(_QWORD *)(v0 + 696) = v1;
  v2 = objc_msgSend(v1, sel_intentReference);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_intent);

  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)(v0 + 704) = v4;
  if (*(_BYTE *)(v0 + 81) == 1)
  {
    if (qword_1ECF6A748 != -1)
      swift_once();
    v5 = qword_1ECF6D448;
  }
  else
  {
    if (qword_1ECF6AAC0 != -1)
      swift_once();
    v5 = qword_1ECF6D4A0;
  }
  v6 = *(_QWORD *)(v0 + 664);
  v7 = *(_QWORD *)(v0 + 656);
  v8 = *(_QWORD *)(v0 + 648);
  v9 = *(_QWORD *)(v0 + 576);
  v10 = __swift_project_value_buffer(v8, (uint64_t)v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v10, v8);
  v11 = v9 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_environment;
  v12 = *(_QWORD *)(v9 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_environment);
  *(_QWORD *)(v0 + 712) = v12;
  v13 = *(void **)(v11 + 8);
  *(_QWORD *)(v0 + 720) = v13;
  KeyPath = swift_getKeyPath();
  v15 = *(os_unfair_lock_s **)(v12 + 16);
  swift_retain_n();
  v16 = v13;
  os_unfair_lock_lock(v15);
  v17 = sub_1908B7A4C(KeyPath);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  swift_release_n();
  swift_release();

  if (!v17)
    goto LABEL_50;
  if (!(v17 >> 62))
  {
    v18 = *(void **)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v18)
      goto LABEL_14;
    goto LABEL_49;
  }
  swift_bridgeObjectRetain();
  v18 = (void *)sub_190A48484();
  swift_bridgeObjectRelease();
  if (!v18)
  {
LABEL_49:
    swift_bridgeObjectRelease();
LABEL_50:
    swift_release();
    v45 = *(_QWORD *)(v0 + 664);
    v46 = *(_QWORD *)(v0 + 656);
    v47 = *(_QWORD *)(v0 + 648);
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
    v82 = sub_190A47ADC();
    sub_19096BFDC(v82, v83, 1002, 0, 0xD000000000000019, 0x8000000190A607B0);
    swift_willThrow();

    goto LABEL_51;
  }
LABEL_14:
  if ((v17 & 0xC000000000000001) != 0)
  {
    v19 = (id)MEMORY[0x194013510](0, v17);
  }
  else
  {
    if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_55;
    }
    v19 = *(id *)(v17 + 32);
  }
  v88 = v16;
  v89 = v12;
  v90 = v19;
  v91 = v4;
  *(_QWORD *)(v0 + 728) = v19;
  swift_bridgeObjectRelease();
  result = InternalWidgetFamily.init(_:)((uint64_t)objc_msgSend(v1, sel_family), v95);
  if ((_QWORD)xmmword_1ECF6D940)
  {
    v86 = v95[0];
    v21 = *(_QWORD *)(v0 + 632);
    v22 = *(_QWORD *)(v0 + 624);
    v23 = *(_QWORD *)(v0 + 616);
    v24 = qword_1ECF6D950;
    v25 = *(_QWORD *)xmmword_1ECF6D940;
    *(_QWORD *)(v0 + 560) = xmmword_1ECF6D940;
    v26 = *(_QWORD *)(v24 + 8);
    v27 = *(void (**)(void *, uint64_t, uint64_t))(v26 + 8);
    swift_retain();
    v87 = v1;
    v27(v1, v25, v26);
    swift_release();
    v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v23, 1, v22);
    v29 = *(_QWORD *)(v0 + 616);
    if (v28 == 1)
    {
      swift_release();
      sub_1908AA544(v29, &qword_1ECF6C788);
      v4 = v90;
      v18 = v91;
      goto LABEL_29;
    }
    v30 = *(_QWORD *)(v0 + 640);
    v31 = *(_QWORD *)(v0 + 608);
    sub_1908BD0B4(*(_QWORD *)(v0 + 616), v30, type metadata accessor for WidgetDescriptor);
    sub_1908AF5D8(v30, v31, type metadata accessor for ViewSource);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        v33 = *(_QWORD *)(v0 + 608);
        __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
        swift_release();
        swift_release();
        v34 = sub_190A46240();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
      }
      else
      {
        sub_1908B5150(*(_QWORD *)(v0 + 608), type metadata accessor for ViewSource);
      }
      v4 = v90;
      v18 = v91;
      v44 = *(_QWORD *)(v0 + 640);
      swift_release();
      sub_1908B5150(v44, type metadata accessor for WidgetDescriptor);
LABEL_29:
      if (qword_1ECF6A5C8 == -1)
      {
LABEL_30:
        v45 = *(_QWORD *)(v0 + 664);
        v46 = *(_QWORD *)(v0 + 656);
        v47 = *(_QWORD *)(v0 + 648);
        (id)qword_1ECF6D428;
        swift_willThrow();

LABEL_51:
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
LABEL_52:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
LABEL_55:
      swift_once();
      goto LABEL_30;
    }
    v35 = v0 + 432;
    v36 = *(_QWORD *)(v0 + 608);
    v37 = *(_QWORD *)(v0 + 600);
    v84 = *(_QWORD *)(v0 + 640);
    v38 = *(_QWORD *)(v36 + 32);
    v39 = *(void (**)(uint64_t))(v36 + 48);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1908B467C(v38);
    v40 = swift_release();
    v39(v40);
    swift_release();
    sub_1908B4BBC((__int128 *)(v0 + 232), v0 + 432);
    sub_1908AF5D8(v84, v37, type metadata accessor for ViewSource);
    v41 = swift_getEnumCaseMultiPayload();
    if (v41)
    {
      if (v41 == 1)
      {
        v42 = *(_QWORD *)(v0 + 600);
        __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69FA0);
        swift_release();
        swift_release();
        v43 = sub_190A46240();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
      }
      else
      {
        sub_1908B5150(*(_QWORD *)(v0 + 600), type metadata accessor for ViewSource);
      }
    }
    else
    {
      v48 = *(_QWORD *)(v0 + 600);
      v50 = *(_QWORD *)(v48 + 24);
      v49 = *(_QWORD *)(v48 + 32);
      swift_bridgeObjectRelease();
      sub_1908B467C(v49);
      swift_release();
      if (v50)
      {
        swift_bridgeObjectRelease();
        if (!v91)
        {
          swift_release();
          if (qword_1EE1EAD00 != -1)
            swift_once();
          v51 = *(_QWORD *)(v0 + 664);
          v52 = *(_QWORD *)(v0 + 656);
          v53 = *(_QWORD *)(v0 + 648);
          v54 = *(_QWORD *)(v0 + 640);
          (id)qword_1EE1FD738;
          swift_willThrow();

          sub_1908B5150(v54, type metadata accessor for WidgetDescriptor);
          (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
          __swift_destroy_boxed_opaque_existential_1(v0 + 432);
          goto LABEL_52;
        }
      }
    }
    v55 = v0 + 16;
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v56 = v0 + 392;
    __swift_project_value_buffer(*(_QWORD *)(v0 + 648), (uint64_t)qword_1ECF6D988);
    sub_1908BBDC8(v0 + 432, v0 + 272);
    v57 = sub_190A46588();
    v58 = sub_190A47F44();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc();
      v85 = swift_slowAlloc();
      *(_QWORD *)&v95[0] = v85;
      *(_DWORD *)v59 = 136446210;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 296));
      v55 = v0 + 16;
      v60 = sub_190A4867C();
      *(_QWORD *)(v0 + 568) = sub_1908B35C4(v60, v61, (uint64_t *)v95);
      v56 = v0 + 392;
      v35 = v0 + 432;
      sub_190A48178();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v0 + 272);
      _os_log_impl(&dword_1908A7000, v57, v58, "reload: %{public}s", v59, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v85, -1, -1);
      MEMORY[0x194014398](v59, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1(v0 + 272);
    }

    v62 = *(_BYTE *)(v0 + 81);
    v63 = *(_QWORD *)(v0 + 576);
    *(_QWORD *)&v95[0] = v89;
    *((_QWORD *)&v95[0] + 1) = v88;
    swift_retain();
    v64 = v88;
    TimelineProviderContext.EnvironmentVariants.init(_:)((uint64_t *)v95, v93);
    v95[0] = v93[0];
    v95[1] = v93[1];
    v96 = v94;
    v97 = v86;
    v98[0] = *(_BYTE *)(v63 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_archiveVersion);
    TimelineProviderContext.init(environmentVariants:family:isPreview:archiveVersion:)(v95, &v97, v62, v98, v55);
    sub_1908BBDC8(v35, v0 + 352);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BAC8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AA88);
    if (swift_dynamicCast())
    {
      v65 = *(unsigned __int8 *)(v0 + 81);
      sub_1908B4BBC((__int128 *)v56, v0 + 312);
      v66 = *(_QWORD *)(v0 + 336);
      v67 = *(_QWORD *)(v0 + 344);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 312), v66);
      if (v65 == 1)
      {
        v68 = *(_OWORD *)v55;
        *(_OWORD *)(v0 + 104) = *(_OWORD *)(v55 + 16);
        v69 = *(_OWORD *)(v55 + 48);
        *(_OWORD *)(v0 + 120) = *(_OWORD *)(v55 + 32);
        *(_OWORD *)(v0 + 136) = v69;
        *(_BYTE *)(v0 + 152) = *(_BYTE *)(v55 + 64);
        *(_OWORD *)(v0 + 88) = v68;
        v92 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(**(int **)(v67 + 16) + *(_QWORD *)(v67 + 16));
        v70 = v0 + 88;
        v71 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 736) = v71;
        v72 = sub_1908CB950;
      }
      else
      {
        v80 = *(_OWORD *)(v55 + 48);
        *(_OWORD *)(v0 + 192) = *(_OWORD *)(v55 + 32);
        *(_OWORD *)(v0 + 208) = v80;
        *(_BYTE *)(v0 + 224) = *(_BYTE *)(v55 + 64);
        v81 = *(_OWORD *)(v55 + 16);
        *(_OWORD *)(v0 + 160) = *(_OWORD *)v55;
        *(_OWORD *)(v0 + 176) = v81;
        v92 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(**(int **)(v67 + 24) + *(_QWORD *)(v67 + 24));
        v70 = v0 + 160;
        v71 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 744) = v71;
        v72 = sub_1908CBDC0;
      }
      *v71 = v0;
      v71[1] = v72;
      return v92(v87, v70, v66, v67);
    }
    else
    {
      v73 = v35;
      v74 = *(_QWORD *)(v0 + 664);
      v75 = *(_BYTE *)(v0 + 81);
      *(_OWORD *)v56 = 0u;
      *(_OWORD *)(v56 + 16) = 0u;
      *(_QWORD *)(v56 + 32) = 0;
      sub_1908AA544(v56, &qword_1ECF6AA90);
      v76 = swift_task_alloc();
      *(_QWORD *)(v0 + 752) = v76;
      *(_BYTE *)(v76 + 16) = v75;
      *(_QWORD *)(v76 + 24) = v73;
      *(_QWORD *)(v76 + 32) = v87;
      *(_QWORD *)(v76 + 40) = v55;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A5C0);
      v77 = swift_allocObject();
      *(_QWORD *)(v0 + 760) = v77;
      *(_DWORD *)(v77 + 20) = 0;
      *(_BYTE *)(v77 + 16) = 0;
      v78 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 768) = v78;
      v78[2] = v77;
      v78[3] = v74;
      v78[4] = sub_1908CDF78;
      v78[5] = v76;
      v79 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 776) = v79;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A5B8);
      *v79 = v0;
      v79[1] = sub_1908CC230;
      return sub_190A48694();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1908CB950(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 512) = v1;
  *(_QWORD *)(v2 + 520) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1908CB9A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  id v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t *v20;
  id v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;

  v39 = (uint64_t)(v0 + 2);
  v40 = (uint64_t)(v0 + 54);
  v1 = v0[65];
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 39));
  if (!v1)
    goto LABEL_5;
  swift_retain();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1908B62B4(v2);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRelease();
  if (!v4)
  {
    swift_release();
LABEL_5:
    v27 = (void *)v0[91];
    v28 = (void *)v0[88];
    v29 = v0[83];
    v30 = v0[82];
    v31 = v0[81];
    v32 = v0[80];
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
    v33 = sub_190A47ADC();
    sub_19096BFDC(v33, v34, 1101, 0, 0xD000000000000031, 0x8000000190A60800);
    swift_willThrow();

    sub_1908CDF94(v39);
    swift_release();
    sub_1908B5150(v32, type metadata accessor for WidgetDescriptor);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    __swift_destroy_boxed_opaque_existential_1(v40);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v36 = (uint64_t (*)(void))v0[1];
    return v36();
  }
  v5 = (void *)v0[91];
  v6 = (void *)v0[90];
  v7 = v0[89];
  v8 = (void *)v0[87];
  v9 = v0[73];
  v37 = v0[72];
  v10 = swift_retain();
  v11 = sub_1908BB678(v10);
  swift_release();
  v12 = v8;
  v13 = v5;
  v14 = (_QWORD *)sub_1908C9B1C(v11, v12, v13);

  swift_release();
  *(_QWORD *)&v41 = v7;
  *((_QWORD *)&v41 + 1) = v6;
  sub_1908AF5D8(v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_reloadPolicy, v9, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  v15 = type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  swift_retain();
  v16 = v6;
  v17 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v12, &v41, v14, v9, 1);
  v18 = type metadata accessor for WidgetArchiver();
  v0[62] = v15;
  v0[63] = &protocol witness table for WidgetViewCollection;
  v0[59] = v17;
  v19 = *(void **)(v37 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle);
  v20 = (uint64_t *)swift_retain();
  v21 = sub_1908CAA04(v20);
  sub_190999714(v0 + 59, (uint64_t)v21, v18, v19);
  v22 = (void *)v0[91];
  v23 = (void *)v0[88];
  v24 = v0[83];
  v25 = v0[82];
  v38 = v0[81];
  v26 = v0[80];
  swift_release();

  sub_1908CDF94(v39);
  swift_release();
  swift_release_n();
  sub_1908B5150(v26, type metadata accessor for WidgetDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v38);
  __swift_destroy_boxed_opaque_existential_1(v40);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 59));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v36 = (uint64_t (*)(void))v0[1];
  return v36();
}

uint64_t sub_1908CBDC0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 528) = v1;
  *(_QWORD *)(v2 + 536) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1908CBE18()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  id v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t *v20;
  id v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;

  v39 = (uint64_t)(v0 + 2);
  v40 = (uint64_t)(v0 + 54);
  v1 = v0[67];
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 39));
  if (!v1)
    goto LABEL_5;
  swift_retain();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1908B62B4(v2);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRelease();
  if (!v4)
  {
    swift_release();
LABEL_5:
    v27 = (void *)v0[91];
    v28 = (void *)v0[88];
    v29 = v0[83];
    v30 = v0[82];
    v31 = v0[81];
    v32 = v0[80];
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
    v33 = sub_190A47ADC();
    sub_19096BFDC(v33, v34, 1101, 0, 0xD000000000000031, 0x8000000190A60800);
    swift_willThrow();

    sub_1908CDF94(v39);
    swift_release();
    sub_1908B5150(v32, type metadata accessor for WidgetDescriptor);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    __swift_destroy_boxed_opaque_existential_1(v40);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v36 = (uint64_t (*)(void))v0[1];
    return v36();
  }
  v5 = (void *)v0[91];
  v6 = (void *)v0[90];
  v7 = v0[89];
  v8 = (void *)v0[87];
  v9 = v0[73];
  v37 = v0[72];
  v10 = swift_retain();
  v11 = sub_1908BB678(v10);
  swift_release();
  v12 = v8;
  v13 = v5;
  v14 = (_QWORD *)sub_1908C9B1C(v11, v12, v13);

  swift_release();
  *(_QWORD *)&v41 = v7;
  *((_QWORD *)&v41 + 1) = v6;
  sub_1908AF5D8(v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_reloadPolicy, v9, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  v15 = type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  swift_retain();
  v16 = v6;
  v17 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v12, &v41, v14, v9, 1);
  v18 = type metadata accessor for WidgetArchiver();
  v0[62] = v15;
  v0[63] = &protocol witness table for WidgetViewCollection;
  v0[59] = v17;
  v19 = *(void **)(v37 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle);
  v20 = (uint64_t *)swift_retain();
  v21 = sub_1908CAA04(v20);
  sub_190999714(v0 + 59, (uint64_t)v21, v18, v19);
  v22 = (void *)v0[91];
  v23 = (void *)v0[88];
  v24 = v0[83];
  v25 = v0[82];
  v38 = v0[81];
  v26 = v0[80];
  swift_release();

  sub_1908CDF94(v39);
  swift_release();
  swift_release_n();
  sub_1908B5150(v26, type metadata accessor for WidgetDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v38);
  __swift_destroy_boxed_opaque_existential_1(v40);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 59));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v36 = (uint64_t (*)(void))v0[1];
  return v36();
}

uint64_t sub_1908CC230()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(_QWORD *)(v1 + 784) = *(_QWORD *)(v1 + 552);
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1908CC2B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  id v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t *v20;
  id v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;

  v39 = (uint64_t)(v0 + 2);
  v40 = (uint64_t)(v0 + 54);
  swift_release();
  v1 = v0[98];
  if (!v1)
    goto LABEL_5;
  swift_retain();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1908B62B4(v2);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRelease();
  if (!v4)
  {
    swift_release();
LABEL_5:
    v27 = (void *)v0[91];
    v28 = (void *)v0[88];
    v29 = v0[83];
    v30 = v0[82];
    v31 = v0[81];
    v32 = v0[80];
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3D0);
    v33 = sub_190A47ADC();
    sub_19096BFDC(v33, v34, 1101, 0, 0xD000000000000031, 0x8000000190A60800);
    swift_willThrow();

    sub_1908CDF94(v39);
    swift_release();
    sub_1908B5150(v32, type metadata accessor for WidgetDescriptor);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    __swift_destroy_boxed_opaque_existential_1(v40);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v36 = (uint64_t (*)(void))v0[1];
    return v36();
  }
  v5 = (void *)v0[91];
  v6 = (void *)v0[90];
  v7 = v0[89];
  v8 = (void *)v0[87];
  v9 = v0[73];
  v37 = v0[72];
  v10 = swift_retain();
  v11 = sub_1908BB678(v10);
  swift_release();
  v12 = v8;
  v13 = v5;
  v14 = (_QWORD *)sub_1908C9B1C(v11, v12, v13);

  swift_release();
  *(_QWORD *)&v41 = v7;
  *((_QWORD *)&v41 + 1) = v6;
  sub_1908AF5D8(v1 + OBJC_IVAR____TtC9WidgetKit20WidgetViewCollection_reloadPolicy, v9, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  v15 = type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  swift_retain();
  v16 = v6;
  v17 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v12, &v41, v14, v9, 1);
  v18 = type metadata accessor for WidgetArchiver();
  v0[62] = v15;
  v0[63] = &protocol witness table for WidgetViewCollection;
  v0[59] = v17;
  v19 = *(void **)(v37 + OBJC_IVAR____TtC9WidgetKit15TimelineRequest_fileHandle);
  v20 = (uint64_t *)swift_retain();
  v21 = sub_1908CAA04(v20);
  sub_190999714(v0 + 59, (uint64_t)v21, v18, v19);
  v22 = (void *)v0[91];
  v23 = (void *)v0[88];
  v24 = v0[83];
  v25 = v0[82];
  v38 = v0[81];
  v26 = v0[80];
  swift_release();

  sub_1908CDF94(v39);
  swift_release();
  swift_release_n();
  sub_1908B5150(v26, type metadata accessor for WidgetDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v38);
  __swift_destroy_boxed_opaque_existential_1(v40);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 59));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v36 = (uint64_t (*)(void))v0[1];
  return v36();
}

void sub_1908CC6C0(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedListener);
  v3 = objc_msgSend(v2, sel_listenerEndpoint);

  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend((id)objc_opt_self(), sel_tokenForCurrentProcess);
  objc_msgSend(v5, sel_realToken);
  v10 = v13;
  v11 = v12;

  v12 = v11;
  v13 = v10;
  v6 = objc_msgSend(v4, sel_if_dataWithAuditToken_, &v12);
  if (v6)
  {
    v7 = sub_190A46000();
    v9 = v8;

    v6 = (id)sub_190A45FE8();
  }
  else
  {
    v7 = 0;
    v9 = 0xF000000000000000;
  }
  (*(void (**)(uint64_t, id, id, _QWORD))(a1 + 16))(a1, v3, v6, 0);

  sub_1908CE500(v7, v9);
}

uint64_t sub_1908CC810(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v6 = sub_190A47980();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_190A479C8();
  v10 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3A0);
  v13 = (void *)sub_190A48004();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  aBlock[4] = sub_1908CE3EC;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1908A9D98;
  aBlock[3] = &block_descriptor_133;
  v15 = _Block_copy(aBlock);
  v16 = a1;
  swift_retain();
  swift_release();
  sub_190A47998();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1908AED38((unint64_t *)&qword_1ECF6D318, 255, v7, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
  sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
  sub_190A481E4();
  MEMORY[0x194013234](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v18);
}

uint64_t sub_1908CCA34(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  void *v15;
  uint64_t (*v16)(void *);
  uint64_t (*v17)(void *);
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  id v26;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v10 = sub_190A465A0();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ECF6D988);
  v11 = sub_190A46588();
  v12 = sub_190A47F68();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_1908A7000, v11, v12, "Attaching to preview agent.", v13, 2u);
    MEMORY[0x194014398](v13, -1, -1);
  }

  v14 = sub_190A47B0C();
  v15 = dlopen((const char *)(v14 + 32), 2);
  swift_release();
  if (v15)
  {
    v16 = (uint64_t (*)(void *))dlsym(v15, "_initializePreviewAgent");
    if (v16)
    {
      v17 = v16;
      if (a3)
      {
        swift_unknownObjectRetain();
        objc_opt_self();
        v18 = (void *)swift_dynamicCastObjCClass();
        if (!v18)
          swift_unknownObjectRelease();
      }
      else
      {
        v18 = 0;
      }
      v25 = v17(v18);

      *(_QWORD *)(a4 + OBJC_IVAR____TtCC9WidgetKit24WidgetExtensionXPCServer14ExportedObject_previewAgent) = v25;
      swift_retain();
      swift_release();
      v26 = objc_msgSend((id)objc_opt_self(), sel_tokenForCurrentProcess);
      (*(void (**)(uint64_t, id))(a5 + 16))(a5, v26);

    }
    else
    {
      v22 = sub_190A46588();
      v23 = sub_190A47F44();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_1908A7000, v22, v23, "Failed to find Preview Agent initialization function symbol", v24, 2u);
        MEMORY[0x194014398](v24, -1, -1);
      }

      (*(void (**)(uint64_t, _QWORD))(a5 + 16))(a5, 0);
    }
    return dlclose(v15);
  }
  else
  {
    if (dlerror())
    {
      v19 = sub_190A47B48();
      v21 = v20;
    }
    else
    {
      v21 = 0xED0000726F727265;
      v19 = 0x206E776F6E6B6E75;
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v28 = sub_190A46588();
    v29 = sub_190A47F44();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v32 = v31;
      *(_DWORD *)v30 = 136446466;
      swift_bridgeObjectRetain();
      sub_1908B35C4(a1, a2, &v32);
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1908B35C4(v19, v21, &v32);
      sub_190A48178();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1908A7000, v28, v29, "Failed to open Preview Agent framework: %{public}s, %{public}s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194014398](v31, -1, -1);
      MEMORY[0x194014398](v30, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(uint64_t, _QWORD))(a5 + 16))(a5, 0);
  }
}

uint64_t sub_1908CCE7C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[26] = a1;
  sub_190A47D64();
  v1[27] = sub_190A47D58();
  v1[28] = sub_190A47D28();
  v1[29] = v2;
  return swift_task_switch();
}

void sub_1908CCEE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);

  if ((_QWORD)xmmword_1ECF6D940)
  {
    v1 = *(_QWORD *)(v0 + 208);
    v2 = *((_QWORD *)&xmmword_1ECF6D940 + 1);
    v3 = *(_QWORD *)xmmword_1ECF6D940;
    *(_QWORD *)(v0 + 200) = xmmword_1ECF6D940;
    v4 = *(void **)(v1 + OBJC_IVAR____TtC9WidgetKit25ModifyControlStateRequest_control);
    swift_retain();
    sub_1909FBD98(v4, v3, v2, (_OWORD *)(v0 + 16));
    swift_release();
    v5 = sub_190A462DC();
    sub_1908CD8F8(v0 + 64, v0 + 112);
    if ((*(_BYTE *)(v0 + 152) & 1) != 0)
    {
      swift_release();
      swift_release();
      if (qword_1EE1EB680 != -1)
        swift_once();
      v6 = sub_190A465A0();
      __swift_project_value_buffer(v6, (uint64_t)qword_1EE1FD748);
      v7 = sub_190A46588();
      v8 = sub_190A47F5C();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_1908A7000, v7, v8, "ModifyControlStateRequest is unsupported in the API", v9, 2u);
        MEMORY[0x194014398](v9, -1, -1);
      }

      sub_1908CD934(v0 + 16);
      (*(void (**)(void))(v0 + 8))();
    }
    else
    {
      sub_1908B4BBC((__int128 *)(v0 + 112), v0 + 160);
      v10 = *(_QWORD *)(v0 + 184);
      v11 = *(_QWORD *)(v0 + 192);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 160), v10);
      v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
      *(_QWORD *)(v0 + 240) = v12;
      v13 = *(_QWORD *)(v0 + 184);
      v14 = *(_QWORD *)(v0 + 192);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 160), v13);
      v16 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v14 + 32) + *(_QWORD *)(v14 + 32));
      v15 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 248) = v15;
      *v15 = v0;
      v15[1] = sub_1908CD15C;
      v16(v5, v12, v13, v14);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1908CD15C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1908CD1BC()
{
  uint64_t v0;

  swift_release();
  sub_1908CD934(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1908CD21C()
{
  uint64_t v0;

  swift_release();
  sub_1908CD934(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1908CD27C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  void *v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD aBlock[3];
  void *v48;
  uint64_t (*v49)();
  uint64_t v50;

  v40 = a3;
  v38 = a2;
  v4 = sub_190A47980();
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  MEMORY[0x1E0C80A78](v4);
  v44 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190A479C8();
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_190A4651C();
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v34 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_190A465A0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ActivityArchiver();
  v36 = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(v36 + 64);
  v15 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v15);
  v39 = (uint64_t)&v34 - v18;
  if ((_QWORD)xmmword_1ECF6D940)
  {
    v48 = *(void **)xmmword_1ECF6D940;
    v49 = (uint64_t (*)())qword_1ECF6D950;
    aBlock[0] = xmmword_1ECF6D940;
    v19 = qword_1EE1E6038;
    v20 = a1;
    swift_retain();
    if (v19 != -1)
      swift_once();
    v21 = __swift_project_value_buffer(v9, (uint64_t)qword_1EE1FD6E8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v21, v9);
    sub_190A46528();
    *(_QWORD *)v16 = v20;
    sub_1908BBDC8((uint64_t)aBlock, (uint64_t)(v16 + 8));
    v22 = v20;
    sub_190A46534();
    v23 = v34;
    sub_190A46504();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v16[*(int *)(v13 + 28)], v23, v37);
    v24 = v39;
    sub_1908BD0B4((uint64_t)v16, v39, (uint64_t (*)(_QWORD))type metadata accessor for ActivityArchiver);
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6D3A0);
    v25 = (void *)sub_190A48004();
    sub_1908AF5D8(v24, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ActivityArchiver);
    v26 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    v27 = swift_allocObject();
    sub_1908BD0B4((uint64_t)v16, v27 + v26, (uint64_t (*)(_QWORD))type metadata accessor for ActivityArchiver);
    v28 = (_QWORD *)(v27 + ((v14 + v26 + 7) & 0xFFFFFFFFFFFFFFF8));
    v29 = v40;
    *v28 = v38;
    v28[1] = v29;
    v49 = sub_1908CD7B4;
    v50 = v27;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1908A9D98;
    v48 = &block_descriptor;
    v30 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    v31 = v41;
    sub_190A47998();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1908AED38((unint64_t *)&qword_1ECF6D318, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D320);
    sub_1908AAA08((unint64_t *)&qword_1ECF6D328, &qword_1ECF6D320);
    v32 = v44;
    v33 = v46;
    sub_190A481E4();
    MEMORY[0x194013234](0, v31, v32, v30);
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v33);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v31, v43);
    return sub_1908B5150(v24, (uint64_t (*)(_QWORD))type metadata accessor for ActivityArchiver);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1908CD6D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for ActivityArchiver();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v3 + 1));
  v4 = (char *)v3 + *(int *)(v1 + 24);
  v5 = sub_190A46540();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)v3 + *(int *)(v1 + 28);
  v7 = sub_190A4651C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1908CD7B4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for ActivityArchiver() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1908C8104(v0 + v2, *(uint64_t (**)(_QWORD))(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1908CD7FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1908CEB54;
  return sub_1908C6E60(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1908CD888(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1908C5090;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE1EC858 + dword_1EE1EC858))(a1, v4);
}

uint64_t sub_1908CD8F8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ControlViewSource.ProviderType(a2, a1);
  return a2;
}

uint64_t sub_1908CD934(uint64_t a1)
{
  destroy for ControlViewSource(a1);
  return a1;
}

uint64_t sub_1908CD96C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1908CEB54;
  return sub_1908C5EB0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1908CD9EC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ControlInfo(a2, a1);
  return a2;
}

uint64_t sub_1908CDA28(uint64_t a1)
{
  destroy for ControlInfo(a1);
  return a1;
}

void sub_1908CDA5C(uint64_t a1)
{
  uint64_t v1;

  sub_1909DAF50(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1908CDA68(void *a1)
{
  uint64_t v1;

  return sub_1908C4108(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(uint64_t (**)(_QWORD))(v1 + 40));
}

uint64_t objectdestroy_9Tm()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1908CDAB8(uint64_t a1)
{
  return sub_1908CDAC4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1908C44FC);
}

uint64_t sub_1908CDAC4(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

uint64_t objectdestroy_35Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1908CDB14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1908CEB54;
  return sub_1908C50D8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1908CDB94(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for WidgetExtensionXPCServer.ExportedObject.ArchivingTemplateProvider(a2, a1);
  return a2;
}

uint64_t sub_1908CDBC8(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  return a1;
}

uint64_t sub_1908CDBF0(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return a1;
}

unint64_t sub_1908CDC14()
{
  unint64_t result;

  result = qword_1ECF6B8D8;
  if (!qword_1ECF6B8D8)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0CB0310], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ECF6B8D8);
  }
  return result;
}

unint64_t sub_1908CDC58()
{
  unint64_t result;

  result = qword_1EE1EC8A0;
  if (!qword_1EE1EC8A0)
  {
    result = MEMORY[0x19401429C](&unk_190A5E490, &type metadata for ControlArchivingError);
    atomic_store(result, &qword_1EE1EC8A0);
  }
  return result;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x194014398);
  return result;
}

unint64_t sub_1908CDCD0()
{
  unint64_t result;

  result = qword_1ECF6C490;
  if (!qword_1ECF6C490)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ECF6C490);
  }
  return result;
}

uint64_t sub_1908CDD14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_190A465A0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_190A4651C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1908CDE1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(sub_190A465A0() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_190A4651C();
  v6 = *(_QWORD *)(v1 + 32);
  v12 = *(_QWORD *)(v1 + 24);
  v13 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + v5);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1908CEB54;
  return sub_1908C25B4(a1, v13, v12, v6, v7, v8, v1 + v4, v9);
}

unint64_t sub_1908CDF2C()
{
  unint64_t result;

  result = qword_1ECF6A4A8;
  if (!qword_1ECF6A4A8)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEDCA0], MEMORY[0x1E0DEDC60]);
    atomic_store(result, (unint64_t *)&qword_1ECF6A4A8);
  }
  return result;
}

uint64_t sub_1908CDF78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1908C2CCC(a1, a2, *(_BYTE *)(v2 + 16), *(_QWORD **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1908CDF88(uint64_t a1)
{
  uint64_t v1;

  return sub_1908C2E30(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void (*)(uint64_t), uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1908CDF94(uint64_t a1)
{

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1908CE004()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1ECF6B008;
  if (!qword_1ECF6B008)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6B020);
    v2 = sub_1908CE070();
    v3[0] = MEMORY[0x1E0CDFD08];
    v3[1] = v2;
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1ECF6B008);
  }
  return result;
}

unint64_t sub_1908CE070()
{
  unint64_t result;

  result = qword_1ECF6B038;
  if (!qword_1ECF6B038)
  {
    result = MEMORY[0x19401429C](&unk_190A5255C, &type metadata for CommonArchivingWidgetEnvironmentModifier);
    atomic_store(result, (unint64_t *)&qword_1ECF6B038);
  }
  return result;
}

uint64_t sub_1908CE0B4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1908B53B8(a1, a2);
  return a1;
}

uint64_t sub_1908CE0C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_190A465A0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A588);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

void sub_1908CE188(uint64_t a1)
{
  uint64_t v1;

  sub_190A465A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A588);
  sub_1908C2FA8(a1, *(os_unfair_lock_s **)(v1 + 16));
}

uint64_t objectdestroy_3Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1908CE228(void *a1)
{
  return sub_1908CE244(a1, &qword_1ECF6AAC0, (uint64_t)qword_1ECF6D4A0);
}

uint64_t sub_1908CE244(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1908C7BD0(a1, *(_BYTE *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(uint64_t (**)(void *))(v3 + 40), *(_QWORD *)(v3 + 48), a2, a3);
}

uint64_t sub_1908CE27C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1908CE2B8(uint64_t a1)
{
  uint64_t v1;

  sub_1908C1910(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56), *(void (**)(uint64_t))(v1 + 64));
}

uint64_t sub_1908CE2EC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1908CE310()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1908CE34C()
{
  uint64_t *v0;

  return sub_1908BF21C(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_1908CE35C()
{
  return swift_deallocObject();
}

uint64_t sub_1908CE370()
{
  uint64_t v0;

  return sub_1908BF67C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(void))(v0 + 32));
}

uint64_t sub_1908CE37C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t objectdestroy_112Tm()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1908CE3D8()
{
  uint64_t v0;

  return sub_1908BF758(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(void))(v0 + 32));
}

uint64_t sub_1908CE3EC()
{
  uint64_t v0;

  return sub_1908C3158(*(char **)(v0 + 16), *(uint64_t (**)(_QWORD))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t objectdestroy_129Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1908CE428(void *a1)
{
  uint64_t v1;

  return sub_1908C36D0(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t objectdestroy_19Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1908CE474(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1908C5090;
  return sub_1908C37E0(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1908CE500(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1908B53FC(a1, a2);
  return a1;
}

uint64_t sub_1908CE514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_190A4651C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1908CE5B8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_190A4651C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1908BF8D4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), v1 + v4, *(uint64_t (**)(_QWORD))(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1908CE614()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1908CE640()
{
  uint64_t v0;

  sub_1908BFE48(*(_QWORD *)(v0 + 16), *(void (**)(void *))(v0 + 24));
}

uint64_t sub_1908CE654(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_1908CE660(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_1908CE66C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1908CE678()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1908CE69C(uint64_t a1)
{
  uint64_t v1;

  sub_1908BEDE8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1908CE6A4()
{
  uint64_t v0;

  return sub_1908BED48(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1908CE6AC()
{
  return sub_1908BEAD0();
}

uint64_t sub_1908CE6B4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1908CE6E8()
{
  uint64_t v0;

  sub_1908BE70C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t destroy for WidgetExtensionXPCServer.ExportedObject._DefaultControlArchiveDataSource(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 8);
}

uint64_t initializeWithCopy for WidgetExtensionXPCServer.ExportedObject._DefaultControlArchiveDataSource(uint64_t a1, uint64_t a2)
{
  char v3;
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  *(_BYTE *)(a1 + 48) = v3;
  return a1;
}

uint64_t assignWithCopy for WidgetExtensionXPCServer.ExportedObject._DefaultControlArchiveDataSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  if (a1 != a2)
  {
    v4 = a2 + 8;
    sub_1908CDBF0(a1 + 8);
    v5 = *(_BYTE *)(a2 + 48);
    v6 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, v4);
    *(_BYTE *)(a1 + 48) = v5;
  }
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for WidgetExtensionXPCServer.ExportedObject._DefaultControlArchiveDataSource(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if (a1 != a2)
  {
    sub_1908CDBF0(a1 + 8);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetExtensionXPCServer.ExportedObject._DefaultControlArchiveDataSource(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetExtensionXPCServer.ExportedObject._DefaultControlArchiveDataSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetExtensionXPCServer.ExportedObject._DefaultControlArchiveDataSource()
{
  return &type metadata for WidgetExtensionXPCServer.ExportedObject._DefaultControlArchiveDataSource;
}

uint64_t initializeWithCopy for WidgetExtensionXPCServer.ExportedObject.ArchivingTemplateProvider(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  __int128 v4;
  char v5;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    v5 = 1;
  }
  else
  {
    v5 = 0;
    v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
  }
  (**(void (***)(uint64_t))(v4 - 8))(a1);
  *(_BYTE *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for WidgetExtensionXPCServer.ExportedObject.ArchivingTemplateProvider(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  char v6;

  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a2 + 2;
    if (v4 == 1)
    {
      v5 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v6 = 1;
    }
    else
    {
      v6 = 0;
      v5 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    }
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(_BYTE *)(a1 + 40) = v6;
  }
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for WidgetExtensionXPCServer.ExportedObject.ArchivingTemplateProvider(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;

  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a2 + 2;
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = v4 == 1;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlViewSource.ProviderType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ControlViewSource.ProviderType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1908CEAF8(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_1908CEB18(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for WidgetExtensionXPCServer.ExportedObject.ArchivingTemplateProvider()
{
  return &type metadata for WidgetExtensionXPCServer.ExportedObject.ArchivingTemplateProvider;
}

uint64_t sub_1908CEBC0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1908CEBD8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1908CEBE0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    result = sub_190A48148();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1908CECC0(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  unsigned int v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const void *v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v6 + v9;
  if (*(_DWORD *)(v8 + 84))
    v11 = *(_QWORD *)(v8 + 64);
  else
    v11 = *(_QWORD *)(v8 + 64) + 1;
  v12 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v12 > 7
    || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || ((((v11 + (v10 & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 17 > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
    swift_retain();
  }
  else
  {
    v16 = v7;
    v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v18 = (const void *)(((unint64_t)a2 + v10) & v17);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v18, 1, v16))
    {
      memcpy((void *)(((unint64_t)a1 + v10) & v17), v18, v11);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v17, v18, v16);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(((unint64_t)a1 + v10) & v17, 0, 1, v16);
    }
    v19 = (_QWORD *)(((((unint64_t)a1 + v10) & v17) + v11 + 7) & 0xFFFFFFFFFFFFF8);
    v20 = (_QWORD *)(((unint64_t)v18 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v19 = *v20;
    v21 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
    v22 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
    *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 16);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1908CEE98(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_QWORD *)(v3 + 64) + a1;
  v5 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5))
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1908CEF88(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  size_t v13;
  size_t v14;
  size_t v15;
  _QWORD *v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7))
  {
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
    if (v12)
      v14 = v13;
    else
      v14 = v13 + 1;
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
  }
  if (v12)
    v15 = v13;
  else
    v15 = v13 + 1;
  v16 = (_QWORD *)(((unint64_t)v10 + v15 + 7) & 0xFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = ((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = ((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
  *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1908CF0F4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  size_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (void *)((v6 + v9 + a2) & ~v9);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v13 = v12(v10, 1, v7);
  v14 = v12(v11, 1, v7);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v10, v11, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v10, v11, v7);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v15);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  v17 = (_QWORD *)(((unint64_t)v10 + v16 + 7) & 0xFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = ((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v19 + 16) = *(_BYTE *)(v20 + 16);
  return a1;
}

uint64_t sub_1908CF2B8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  size_t v13;
  size_t v14;
  size_t v15;
  _QWORD *v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7))
  {
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
    if (v12)
      v14 = v13;
    else
      v14 = v13 + 1;
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
  }
  if (v12)
    v15 = v13;
  else
    v15 = v13 + 1;
  v16 = (_QWORD *)(((unint64_t)v10 + v15 + 7) & 0xFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = ((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = ((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
  return a1;
}

uint64_t sub_1908CF418(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  size_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (void *)((v6 + v9 + a2) & ~v9);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v13 = v12(v10, 1, v7);
  v14 = v12(v11, 1, v7);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v11, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v10, v11, v7);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v15);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  v17 = (_QWORD *)(((unint64_t)v10 + v16 + 7) & 0xFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = ((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v19 + 16) = *(_BYTE *)(v20 + 16);
  return a1;
}

uint64_t sub_1908CF5D4(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v20;
  unint64_t v21;
  unsigned int v22;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= v6)
    v10 = v6;
  else
    v10 = v9;
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v7 + 80);
  v13 = *(_QWORD *)(v5 + 64) + v12;
  v14 = v11 + 7;
  if (v10 < a2)
  {
    v15 = ((((v14 + (v13 & ~(_DWORD)v12)) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 17;
    if (v15 < 4)
      v16 = ((a2 - v10 + 255) >> (8 * v15)) + 1;
    else
      v16 = 2;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v18 = v17;
    else
      v18 = 0;
    __asm { BR              X0 }
  }
  if ((_DWORD)v6 == v10)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
  v20 = (v13 + a1) & ~v12;
  if (v9 == v10)
  {
    if (v8 < 2)
      return 0;
    v22 = (*(uint64_t (**)(uint64_t))(v7 + 48))(v20);
    if (v22 >= 2)
      return v22 - 1;
    else
      return 0;
  }
  else
  {
    v21 = *(_QWORD *)(((((v14 + v20) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8) + 8);
    if (v21 >= 0xFFFFFFFF)
      LODWORD(v21) = -1;
    return (v21 + 1);
  }
}

void sub_1908CF7F8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  size_t v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = 0u;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = v10 - 1;
  if (!v10)
    v11 = 0;
  if (v11 <= v7)
    v12 = v7;
  else
    v12 = v11;
  if (v12 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  v13 = *(_QWORD *)(v9 + 64);
  if (!v10)
    ++v13;
  v14 = ((((v13
          + 7
          + ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 17;
  if (v12 < a3)
  {
    if (v14 <= 3)
      v15 = ((a3 - v12 + 255) >> (8 * v14)) + 1;
    else
      v15 = 2;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v8 = v16;
    else
      v8 = 0;
  }
  if (v12 < a2)
  {
    v17 = ~v12 + a2;
    v18 = (~(_BYTE)v12 + a2);
    if (v14 >= 4)
      v19 = v17;
    else
      v19 = v18;
    bzero(a1, v14);
    if ((_DWORD)v14 == 1)
      *a1 = v19;
    else
      *(_DWORD *)a1 = v19;
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void sub_1908CF9A0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x1908CFA48);
}

void sub_1908CF9A8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x1908CF9B0);
  JUMPOUT(0x1908CFA48);
}

void sub_1908CFA04()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x1908CFA48);
}

void sub_1908CFA0C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x1908CFA48);
}

uint64_t sub_1908CFA14@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_WORD *)(v11 + v15) = 0;
  if (!(_DWORD)v12)
    JUMPOUT(0x1908CFA48);
  if ((_DWORD)v14 == v8)
  {
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v4 = v11;
    v5 = v12;
    a1 = v14;
    a2 = v13;
  }
  else
  {
    v4 = (v9 + v11) & v10;
    if (v7 != v8)
      JUMPOUT(0x1908CFA20);
    v5 = (v12 + 1);
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 56);
  }
  return v3(v4, v5, a1, a2);
}

void type metadata accessor for CompositeViewStates.Metadata()
{
  JUMPOUT(0x1940141E8);
}

uint64_t sub_1908CFA74()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_190A48148();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1908CFB24(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  unint64_t v21;
  unint64_t v22;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v4 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v5 + 64) + v8;
  if (*(_DWORD *)(v7 + 84))
    v10 = *(_QWORD *)(v7 + 64);
  else
    v10 = *(_QWORD *)(v7 + 64) + 1;
  if ((v8 | v6) > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v5 + 80)) & 0x100000) != 0
    || ((v10 + ((v9 + ((v6 + 16) & ~v6)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 26 > 0x18)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + (((v8 | v6) & 0xF8 ^ 0x1F8) & ((v8 | v6) + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v14 = ~v8;
    v15 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v16 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v15 = *v16;
    v17 = ((unint64_t)v15 + v6 + 8) & ~v6;
    v18 = ((unint64_t)v16 + v6 + 8) & ~v6;
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v17, v18);
    v19 = (void *)((v17 + v9) & v14);
    v20 = (const void *)((v18 + v9) & v14);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v20, 1, v4))
    {
      memcpy(v19, v20, v10);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v19, v20, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v4);
    }
    *((_BYTE *)v19 + v10) = *((_BYTE *)v20 + v10);
    v21 = ((unint64_t)v19 + v10) & 0xFFFFFFFFFFFFFFF8;
    v22 = ((unint64_t)v20 + v10) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
    *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
    *(_BYTE *)(v21 + 24) = *(_BYTE *)(v22 + 24);
    *(_BYTE *)(v21 + 25) = *(_BYTE *)(v22 + 25);
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_1908CFCE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v4 = (((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  (*(void (**)(unint64_t))(v3 + 8))(v4);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v8, v6);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1908CFD90(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  uint64_t v19;
  size_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)v5 + v8 + 8) & ~v8;
  v10 = ((unint64_t)v6 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(a3 + 24);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v11 + v14;
  v16 = (char *)((v15 + v9) & ~v14);
  v17 = (char *)((v15 + v10) & ~v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v17, 1, v12))
  {
    v18 = *(_DWORD *)(v13 + 84);
    v19 = *(_QWORD *)(v13 + 64);
    if (v18)
      v20 = *(_QWORD *)(v13 + 64);
    else
      v20 = v19 + 1;
    memcpy(v16, v17, v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v17, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
    v18 = *(_DWORD *)(v13 + 84);
    v19 = *(_QWORD *)(v13 + 64);
  }
  if (v18)
    v21 = v19;
  else
    v21 = v19 + 1;
  v22 = (unint64_t)&v16[v21];
  v23 = (unint64_t)&v17[v21];
  *(_BYTE *)v22 = *(_BYTE *)v23;
  v22 &= 0xFFFFFFFFFFFFFFF8;
  v23 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
  *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
  *(_BYTE *)(v22 + 24) = *(_BYTE *)(v23 + 24);
  *(_BYTE *)(v22 + 25) = *(_BYTE *)(v23 + 25);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1908CFEE4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  size_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)v5 + v8 + 8) & ~v8;
  v10 = ((unint64_t)v6 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(a3 + 24);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v11 + v14;
  v16 = (char *)((v15 + v9) & ~v14);
  v17 = (char *)((v15 + v10) & ~v14);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(v10) = v18(v16, 1, v12);
  v19 = v18(v17, 1, v12);
  if ((_DWORD)v10)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v17, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v16, v17, v12);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
  if (*(_DWORD *)(v13 + 84))
    v20 = *(_QWORD *)(v13 + 64);
  else
    v20 = *(_QWORD *)(v13 + 64) + 1;
  memcpy(v16, v17, v20);
LABEL_10:
  if (*(_DWORD *)(v13 + 84))
    v21 = *(_QWORD *)(v13 + 64);
  else
    v21 = *(_QWORD *)(v13 + 64) + 1;
  v22 = (unint64_t)&v16[v21];
  v23 = (unint64_t)&v17[v21];
  *(_BYTE *)v22 = *(_BYTE *)v23;
  v24 = v22 & 0xFFFFFFFFFFFFFFF8;
  v25 = v23 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v24 + 8) = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_QWORD *)(v24 + 16) = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFFF8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v24 + 24) = *(_BYTE *)(v25 + 24);
  *(_BYTE *)(v24 + 25) = *(_BYTE *)(v25 + 25);
  return a1;
}

_QWORD *sub_1908D0090(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  uint64_t v19;
  size_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __int128 v24;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)v5 + v8 + 8) & ~v8;
  v10 = ((unint64_t)v6 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(a3 + 24);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v11 + v14;
  v16 = (char *)((v15 + v9) & ~v14);
  v17 = (char *)((v15 + v10) & ~v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v17, 1, v12))
  {
    v18 = *(_DWORD *)(v13 + 84);
    v19 = *(_QWORD *)(v13 + 64);
    if (v18)
      v20 = *(_QWORD *)(v13 + 64);
    else
      v20 = v19 + 1;
    memcpy(v16, v17, v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v17, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
    v18 = *(_DWORD *)(v13 + 84);
    v19 = *(_QWORD *)(v13 + 64);
  }
  if (v18)
    v21 = v19;
  else
    v21 = v19 + 1;
  v22 = (unint64_t)&v16[v21];
  v23 = (unint64_t)&v17[v21];
  *(_BYTE *)v22 = *(_BYTE *)v23;
  v22 &= 0xFFFFFFFFFFFFFFF8;
  v23 &= 0xFFFFFFFFFFFFFFF8;
  v24 = *(_OWORD *)(v23 + 8);
  *(_WORD *)(v22 + 24) = *(_WORD *)(v23 + 24);
  *(_OWORD *)(v22 + 8) = v24;
  return a1;
}

_QWORD *sub_1908D01D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  size_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)v5 + v8 + 8) & ~v8;
  v10 = ((unint64_t)v6 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(a3 + 24);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v11 + v14;
  v16 = (char *)((v15 + v9) & ~v14);
  v17 = (char *)((v15 + v10) & ~v14);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(v10) = v18(v16, 1, v12);
  v19 = v18(v17, 1, v12);
  if ((_DWORD)v10)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v17, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v16, v17, v12);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
  if (*(_DWORD *)(v13 + 84))
    v20 = *(_QWORD *)(v13 + 64);
  else
    v20 = *(_QWORD *)(v13 + 64) + 1;
  memcpy(v16, v17, v20);
LABEL_10:
  if (*(_DWORD *)(v13 + 84))
    v21 = *(_QWORD *)(v13 + 64);
  else
    v21 = *(_QWORD *)(v13 + 64) + 1;
  v22 = (unint64_t)&v16[v21];
  v23 = (unint64_t)&v17[v21];
  *(_BYTE *)v22 = *(_BYTE *)v23;
  v24 = v22 & 0xFFFFFFFFFFFFFFF8;
  v25 = v23 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v24 + 8) = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_QWORD *)(v24 + 16) = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFFF8) + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v24 + 24) = *(_BYTE *)(v25 + 24);
  *(_BYTE *)(v24 + 25) = *(_BYTE *)(v25 + 25);
  return a1;
}

uint64_t sub_1908D0374(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v22;
  unint64_t v23;
  unsigned int v24;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= v6)
    v10 = *(_DWORD *)(v5 + 84);
  else
    v10 = v9;
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v5 + 80);
  v13 = *(_QWORD *)(v5 + 64);
  v14 = *(unsigned __int8 *)(v7 + 80);
  if (v10 < a2)
  {
    v15 = ((((v13 + v14 + ((v12 + 16) & ~(_DWORD)v12)) & ~(_DWORD)v14) + v11) & 0xFFFFFFF8) + 26;
    v16 = (a2 - v10 + 0xFFFF) >> (8 * v15);
    if (v15 <= 3)
      v17 = v16 + 1;
    else
      v17 = 2;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v19 = v18;
    else
      v19 = 0;
    __asm { BR              X7 }
  }
  v20 = (((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v12 + 8) & ~v12;
  if (v6 == v10)
    return (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v5 + 48))(v20, *(unsigned int *)(v5 + 84), v4);
  v22 = (v20 + v13 + v14) & ~v14;
  if (v9 == v10)
  {
    if (v8 < 2)
      return 0;
    v24 = (*(uint64_t (**)(unint64_t))(v7 + 48))(v22);
    if (v24 >= 2)
      return v24 - 1;
    else
      return 0;
  }
  else
  {
    v23 = *(_QWORD *)(((v22 + v11) & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v23 >= 0xFFFFFFFF)
      LODWORD(v23) = -1;
    return (v23 + 1);
  }
}

void sub_1908D053C(_DWORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  size_t v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  int v17;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = v9 - 1;
  if (!v9)
    v10 = 0;
  if (v10 <= *(_DWORD *)(v7 + 84))
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = v10;
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  v12 = *(_QWORD *)(v8 + 64);
  if (!v9)
    ++v12;
  v13 = ((((*(_QWORD *)(v7 + 64)
          + *(unsigned __int8 *)(v8 + 80)
          + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
        + v12) & 0xFFFFFFFFFFFFFFF8)
      + 26;
  if (v11 < a3)
  {
    v14 = (a3 - v11 + 0xFFFF) >> (8 * v13);
    if (v13 <= 3)
      v15 = v14 + 1;
    else
      v15 = 2;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v6 = v16;
    else
      v6 = 0;
  }
  if (v11 < a2)
  {
    v17 = ~v11 + a2;
    bzero(a1, v13);
    if (v13 > 3)
      *a1 = v17;
    else
      *(_WORD *)a1 = v17;
    __asm { BR              X11 }
  }
  __asm { BR              X7 }
}

void sub_1908D0690(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = a1;
  JUMPOUT(0x1908D073CLL);
}

void sub_1908D0698(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1908D06A0);
  JUMPOUT(0x1908D073CLL);
}

void sub_1908D06FC(__int16 a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = a1;
  JUMPOUT(0x1908D073CLL);
}

void sub_1908D0704(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = a1;
  JUMPOUT(0x1908D073CLL);
}

uint64_t sub_1908D070C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v6;
  uint64_t (*v7)(unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_WORD *)(v17 + v18) = 0;
  if (!(_DWORD)a2)
    JUMPOUT(0x1908D073CLL);
  v6 = (((v17 + 15) & 0xFFFFFFFFFFFFFFF8) + a1 + 8) & a5;
  if ((_DWORD)v9 == v14)
  {
    v7 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    a3 = v9;
    a4 = a6;
  }
  else
  {
    v6 = (v6 + v16 + v15) & v10;
    if (v13 != v14)
      JUMPOUT(0x1908D0718);
    a2 = (a2 + 1);
    v7 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  }
  return v7(v6, a2, a3, a4);
}

void type metadata accessor for CompositeViewStates()
{
  JUMPOUT(0x1940141E8);
}

uint64_t sub_1908D0760()
{
  return swift_getAssociatedConformanceWitness();
}

void sub_1908D0780()
{
  JUMPOUT(0x19401429CLL);
}

void sub_1908D0790()
{
  JUMPOUT(0x19401429CLL);
}

BOOL sub_1908D07A0(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1908D07B0()
{
  return sub_190A487CC();
}

uint64_t sub_1908D07D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1952867692 && a2 == 0xE400000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7468676972 && a2 == 0xE500000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000190A60AD0 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4964616F6C796170 && a2 == 0xE900000000000044 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x697472656C417369 && a2 == 0xEA0000000000676ELL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1908D09E8()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t sub_1908D0A2C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1908D0A58 + 4 * byte_190A4A65E[a1]))(1952867692, 0xE400000000000000);
}

uint64_t sub_1908D0A58()
{
  return 0x7468676972;
}

unint64_t sub_1908D0A6C()
{
  return 0xD000000000000016;
}

uint64_t sub_1908D0A88()
{
  return 0x4964616F6C796170;
}

uint64_t sub_1908D0AA4()
{
  return 0x697472656C417369;
}

BOOL sub_1908D0AC0(char *a1, char *a2)
{
  return sub_1908D07A0(*a1, *a2);
}

uint64_t sub_1908D0ACC()
{
  return sub_1908D09E8();
}

uint64_t sub_1908D0AD4()
{
  return sub_1908D07B0();
}

uint64_t sub_1908D0ADC()
{
  sub_190A487C0();
  sub_1908D07B0();
  return sub_190A48808();
}

uint64_t sub_1908D0B18()
{
  unsigned __int8 *v0;

  return sub_1908D0A2C(*v0);
}

uint64_t sub_1908D0B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1908D07D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1908D0B44()
{
  return 0;
}

uint64_t sub_1908D0B50@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1908D1B60();
  *a1 = result;
  return result;
}

uint64_t sub_1908D0B80(uint64_t a1)
{
  MEMORY[0x19401429C](&unk_190A4A850, a1);
  return sub_190A48868();
}

uint64_t sub_1908D0BB4(uint64_t a1)
{
  MEMORY[0x19401429C](&unk_190A4A850, a1);
  return sub_190A48874();
}

void sub_1908D0BE8()
{
  type metadata accessor for CompositeViewStates.Metadata();
}

uint64_t sub_1908D0C3C(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v4 = v1 + a1[13];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v4, 1, 1, AssociatedTypeWitness);
  v6 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v1, v2, v6);
  v7 = sub_190A48148();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v4, v10, v7);
  *(_QWORD *)(v1 + a1[14]) = v11;
  v9 = (_QWORD *)(v1 + a1[15]);
  *v9 = v12;
  v9[1] = v13;
  *(_BYTE *)(v1 + a1[16]) = v14;
  return result;
}

void sub_1908D0D30(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[6];
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v12[1] = a5;
  swift_getAssociatedTypeWitness();
  v9 = sub_190A48148();
  v16 = *(_QWORD *)(v9 - 8);
  v17 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12[2] = (char *)v12 - v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v15 = (char *)v12 - v11;
  v18 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  type metadata accessor for CompositeViewStates.Metadata.CodingKeys();
}

void sub_1908D0E30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x19401429C](&unk_190A4A850, a1);
  v6 = sub_190A485BC();
  *(_QWORD *)(v5 - 176) = v6;
  *(_QWORD *)(v5 - 216) = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)(v5 - 192) = v2;
  *(_QWORD *)(v5 - 184) = v1;
  *(_QWORD *)(v5 - 120) = v2;
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 224) = v4;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v3;
  *(_QWORD *)(v5 - 200) = v3;
  type metadata accessor for CompositeViewStates.Metadata();
}

uint64_t sub_1908D0EA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  void (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _BYTE v28[96];

  v6 = *(_QWORD *)(a1 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = &v28[-v8];
  v10 = &v28[*(int *)(v7 + 52) - v8];
  v11 = *(void (**)(void))(*(_QWORD *)(v1 - 8) + 56);
  *(_QWORD *)(v4 - 72) = v10;
  *(_QWORD *)(v4 - 232) = v1;
  v11();
  v12 = v3[3];
  *(_QWORD *)(v4 - 152) = v3;
  __swift_project_boxed_opaque_existential_1(v3, v12);
  v13 = *(_QWORD *)(v4 - 128);
  sub_190A48838();
  if (v13)
  {
    v17 = *(_QWORD *)(v4 - 144);
    v18 = *(_QWORD *)(v4 - 136);
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v4 - 152));
    return (*(uint64_t (**)(_QWORD, uint64_t))(v17 + 8))(*(_QWORD *)(v4 - 72), v18);
  }
  else
  {
    *(_QWORD *)(v4 - 256) = v6;
    *(_QWORD *)(v4 - 128) = a1;
    v14 = *(_QWORD *)(v4 - 168);
    *(_BYTE *)(v4 - 120) = 0;
    v15 = *(_QWORD *)(v4 - 216);
    v16 = *(_QWORD *)(v4 - 208);
    swift_getAssociatedConformanceWitness();
    sub_190A48580();
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v14 + 32))(v9, *(_QWORD *)(v4 - 160), v16);
    *(_BYTE *)(v4 - 120) = 1;
    swift_getAssociatedConformanceWitness();
    v19 = *(_QWORD *)(v4 - 240);
    sub_190A4852C();
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v4 - 144) + 40))(*(_QWORD *)(v4 - 72), v19, *(_QWORD *)(v4 - 136));
    *(_BYTE *)(v4 - 120) = 2;
    v20 = sub_190A48568();
    v21 = *(int **)(v4 - 128);
    *(_QWORD *)&v9[v21[14]] = v20;
    *(_BYTE *)(v4 - 120) = 3;
    v22 = sub_190A48538();
    v23 = (uint64_t *)&v9[v21[15]];
    *v23 = v22;
    v23[1] = v24;
    *(_BYTE *)(v4 - 120) = 4;
    v25 = sub_190A48520();
    (*(void (**)(uint64_t, _QWORD))(v15 + 8))(v2, *(_QWORD *)(v4 - 176));
    v9[v21[16]] = (v25 == 2) | v25 & 1;
    v26 = *(_QWORD *)(v4 - 256);
    (*(void (**)(_QWORD, _BYTE *, int *))(v26 + 16))(*(_QWORD *)(v4 - 248), v9, v21);
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v4 - 152));
    return (*(uint64_t (**)(_BYTE *, int *))(v26 + 8))(v9, v21);
  }
}

void sub_1908D11F8()
{
  type metadata accessor for CompositeViewStates.Metadata.CodingKeys();
}

uint64_t sub_1908D1248(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  MEMORY[0x19401429C](&unk_190A4A850, a1);
  v3 = sub_190A48664();
  *(_QWORD *)(v2 - 128) = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - v4;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_190A48850();
  *(_BYTE *)(v2 - 112) = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = *(_QWORD *)(v2 - 72);
  sub_190A48640();
  if (!v6)
  {
    *(_BYTE *)(v2 - 112) = 1;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_190A485EC();
    *(_BYTE *)(v2 - 112) = 2;
    sub_190A48628();
    *(_BYTE *)(v2 - 112) = 3;
    sub_190A485F8();
    *(_BYTE *)(v2 - 112) = 4;
    sub_190A48604();
  }
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(v5, v3);
}

void sub_1908D1498(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  sub_1908D0D30(a1[2], a1[3], a1[4], a1[5], a2);
}

void sub_1908D14B8()
{
  sub_1908D11F8();
}

uint64_t sub_1908D14CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t AssociatedTypeWitness;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v23 = a2;
  v4 = *(_QWORD *)(a1 + 24);
  v25 = *(_QWORD *)(a1 + 40);
  v26 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_190A48148();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - v6;
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v19 - v12;
  v14 = v27;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 56))(v9, v8);
  if (!v14)
  {
    v20 = v11;
    v21 = v10;
    v27 = 0;
    v16 = AssociatedTypeWitness;
    v22 = v9;
    if ((*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v2 + *(int *)(a1 + 60), 1))
    {
      v17 = 1;
      goto LABEL_4;
    }
    v18 = v27;
    (*(void (**)(uint64_t))(v25 + 56))(v26);
    if (!v18)
    {
      v27 = 0;
      v17 = 0;
LABEL_4:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, v17, 1, v16);
      swift_bridgeObjectRetain();
      sub_1908D0BE8();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v13, v21);
  }
  return result;
}

uint64_t sub_1908D16D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t result;

  v6 = *(_QWORD *)(v3 + 8);
  *(_BYTE *)(v3 + *(int *)(a3 + 64)) = v6 > a1;
  if (v6 <= a1)
  {
    result = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 48))(v3 + *(int *)(a3 + 60), 1, *(_QWORD *)(a3 + 24));
    if ((_DWORD)result)
      return result;
    result = a1 - v6;
    if (__OFSUB__(a1, v6))
    {
      __break(1u);
      return result;
    }
    v7 = *(uint64_t (**)(void))(*(_QWORD *)(a3 + 40) + 64);
  }
  else
  {
    v7 = *(uint64_t (**)(void))(*(_QWORD *)(a3 + 32) + 64);
  }
  return v7();
}

id sub_1908D17E4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  id v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = sub_190A48148();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v18 - v9;
  v11 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v2 + *(int *)(a2 + 64)) == 1)
  {
    v14 = v2 + *(int *)(a2 + 56);
    v15 = v20;
    v16 = (*(uint64_t (**)(void *, _QWORD))(*(_QWORD *)(a2 + 32) + 72))(a1, *(_QWORD *)(a2 + 16));
    if (!v15)
      return (id)v16;
  }
  else
  {
    v19 = a1;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v2 + *(int *)(a2 + 60), v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      return v19;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v10, v5);
      v14 = (*(uint64_t (**)(id, uint64_t))(*(_QWORD *)(a2 + 40) + 72))(v19, v5);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v5);
    }
  }
  return (id)v14;
}

uint64_t sub_1908D1988()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1908D1990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1908D14CC(a1, a2);
}

uint64_t sub_1908D19A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1908D16D4(a1, a2, a5);
}

id sub_1908D19BC(void *a1, uint64_t a2)
{
  return sub_1908D17E4(a1, a2);
}

void type metadata accessor for CompositeViewStates.Metadata.CodingKeys()
{
  JUMPOUT(0x1940141E8);
}

uint64_t sub_1908D19DC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t getEnumTagSinglePayload for WidgetViewMetadata.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1908D1A74(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1908D1AC0 + 4 * byte_190A4A668[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1908D1AF4 + 4 * byte_190A4A663[v4]))();
}

uint64_t sub_1908D1AF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1908D1AFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1908D1B04);
  return result;
}

uint64_t sub_1908D1B10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1908D1B18);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1908D1B1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1908D1B24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1908D1B30()
{
  JUMPOUT(0x19401429CLL);
}

void sub_1908D1B40()
{
  JUMPOUT(0x19401429CLL);
}

void sub_1908D1B50()
{
  JUMPOUT(0x19401429CLL);
}

uint64_t sub_1908D1B60()
{
  return 5;
}

id sub_1908D1B68(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_retain();
}

uint64_t sub_1908D1B74(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t destroy for WidgetScalingModifier(uint64_t a1)
{
  sub_1908D1BB0(*(id *)a1, *(_BYTE *)(a1 + 8));
  return sub_1908CE654(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

void sub_1908D1BB0(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_release();
}

uint64_t initializeWithCopy for WidgetScalingModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  char v5;
  uint64_t v6;

  v2 = a2;
  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B68(*(id *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(v2 + 16);
  LOBYTE(v2) = *(_BYTE *)(v2 + 24);
  sub_1908D1B74(v6, v2);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v2;
  return a1;
}

uint64_t assignWithCopy for WidgetScalingModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  char v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = a2;
  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B68(*(id *)a2, v5);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1908D1BB0(v6, v7);
  v8 = *(_QWORD *)(v2 + 16);
  LOBYTE(v2) = *(_BYTE *)(v2 + 24);
  sub_1908D1B74(v8, v2);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v2;
  sub_1908CE654(v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for WidgetScalingModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1908D1BB0(v6, v7);
  v8 = *((_BYTE *)a2 + 24);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v8;
  sub_1908CE654(v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetScalingModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetScalingModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetScalingModifier()
{
  return &type metadata for WidgetScalingModifier;
}

uint64_t sub_1908D1DAC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1908D1DBC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  char v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  id v20;
  unsigned int v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t);
  id v24;
  int v25;
  double v26;
  _OWORD *v27;
  __int128 v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE v34[4];
  int v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;

  v35 = a5;
  v39 = a1;
  v42 = a6;
  v8 = a3 & 1;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BA28);
  MEMORY[0x1E0C80A78](v36);
  v10 = &v34[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BA48);
  v11 = MEMORY[0x1E0C80A78](v41);
  v37 = &v34[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v38 = &v34[-v13];
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BA50);
  MEMORY[0x1E0C80A78](v40);
  v15 = &v34[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BA90);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = &v34[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1908D1B68(a2, v8);
  v20 = sub_19096E4E8(a2, v8);
  sub_1908D1BB0(a2, v8);
  v21 = objc_msgSend(v20, sel__isUnitScale);

  if (v21)
  {
    v22 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v17 + 16);
    v22(v19, v39, v16);
    v22(v15, (uint64_t)v19, v16);
    swift_storeEnumTagMultiPayload();
    sub_1908D221C();
    sub_1908D2268();
    sub_190A46F90();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v17 + 8))(v19, v16);
  }
  else
  {
    sub_1908D1B68(a2, v8);
    v24 = sub_19096E4E8(a2, v8);
    sub_1908D1BB0(a2, v8);
    v25 = v35 & 1;
    sub_1908D1B74(a4, v35 & 1);
    v26 = sub_19096E6CC(a4, v25);
    sub_1908CE654(a4, v25);
    objc_msgSend(v24, sel__rawSizePixelAlignedForDisplayScale_, v26);

    sub_190A478CC();
    sub_190A46738();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v17 + 16))(v10, v39, v16);
    v27 = &v10[*(int *)(v36 + 36)];
    v28 = v44;
    *v27 = v43;
    v27[1] = v28;
    v27[2] = v45;
    sub_1908D1B68(a2, v8);
    v29 = sub_19096E4E8(a2, v8);
    sub_1908D1BB0(a2, v8);
    objc_msgSend(v29, sel_scaleFactor);
    v31 = v30;

    v32 = v37;
    sub_1908AAA48((uint64_t)v10, (uint64_t)v37, &qword_1ECF6BA28);
    *(_QWORD *)&v32[*(int *)(v41 + 36)] = v31;
    sub_1908AA544((uint64_t)v10, &qword_1ECF6BA28);
    v33 = v38;
    sub_1908D21D4((uint64_t)v32, (uint64_t)v38);
    sub_1908AAA48((uint64_t)v33, (uint64_t)v15, &qword_1ECF6BA48);
    swift_storeEnumTagMultiPayload();
    sub_1908D221C();
    sub_1908D2268();
    sub_190A46F90();
    return sub_1908AA544((uint64_t)v33, &qword_1ECF6BA48);
  }
}

uint64_t sub_1908D219C()
{
  return sub_190A46720();
}

uint64_t sub_1908D21B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1908D1DBC(a1, *(void **)v2, *(_BYTE *)(v2 + 8), *(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), a2);
}

uint64_t sub_1908D21D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BA48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1908D221C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECF6BA88;
  if (!qword_1ECF6BA88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6BA90);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDBF10], v1);
    atomic_store(result, (unint64_t *)&qword_1ECF6BA88);
  }
  return result;
}

unint64_t sub_1908D2268()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6BA40;
  if (!qword_1ECF6BA40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6BA48);
    v2[0] = sub_1908D22D4();
    v2[1] = sub_1908D2340();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6BA40);
  }
  return result;
}

unint64_t sub_1908D22D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6BA20;
  if (!qword_1ECF6BA20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6BA28);
    v2[0] = sub_1908D221C();
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6BA20);
  }
  return result;
}

unint64_t sub_1908D2340()
{
  unint64_t result;

  result = qword_1ECF6A750;
  if (!qword_1ECF6A750)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDBBF0], MEMORY[0x1E0CDBC00]);
    atomic_store(result, (unint64_t *)&qword_1ECF6A750);
  }
  return result;
}

unint64_t sub_1908D2388()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6BA60;
  if (!qword_1ECF6BA60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6BA68);
    v2[0] = sub_1908D221C();
    v2[1] = sub_1908D2268();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6BA60);
  }
  return result;
}

uint64_t JindoArchivedViewCollection.ViewIndex.description.getter()
{
  return sub_190A4867C();
}

BOOL static JindoArchivedViewCollection.ViewIndex.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1908D2448()
{
  return sub_190A4867C();
}

id JindoArchivedViewCollection.environment.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  id v5;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for JindoArchivedViewCollection() + 20));
  v5 = (id)v3[1];
  *a1 = *v3;
  a1[1] = v5;
  swift_retain();
  return v5;
}

uint64_t type metadata accessor for JindoArchivedViewCollection()
{
  uint64_t result;

  result = qword_1EE1E6A20;
  if (!qword_1EE1E6A20)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t JindoArchivedViewCollection.metadata(viewIndex:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  __int128 v17;

  v4 = *a1;
  v5 = type metadata accessor for JindoArchivedViewCollection();
  result = v4 - *v2;
  if (__OFSUB__(v4, *v2))
  {
    __break(1u);
  }
  else
  {
    v7 = *(_QWORD *)((char *)v2 + *(int *)(v5 + 20) + 16);
    if (*(_QWORD *)(v7 + 16) && (result = sub_1908D2D48(result), (v8 & 1) != 0))
    {
      v9 = *(_QWORD *)(v7 + 56) + 88 * result;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = *(_BYTE *)(v9 + 40);
      v12 = *(_BYTE *)(v9 + 60);
      v13 = *(_BYTE *)(v9 + 61);
      v14 = *(_BYTE *)(v9 + 80);
      v15 = *(_BYTE *)(v9 + 81);
      v16 = *(_BYTE *)(v9 + 82);
      v17 = *(_OWORD *)(v9 + 16);
      *(_OWORD *)a2 = *(_OWORD *)v9;
      *(_OWORD *)(a2 + 16) = v17;
      *(_QWORD *)(a2 + 32) = v10;
      *(_BYTE *)(a2 + 40) = v11;
      *(_OWORD *)(a2 + 44) = *(_OWORD *)(v9 + 44);
      *(_BYTE *)(a2 + 60) = v12;
      *(_BYTE *)(a2 + 61) = v13;
      *(_OWORD *)(a2 + 64) = *(_OWORD *)(v9 + 64);
      *(_BYTE *)(a2 + 80) = v14;
      *(_BYTE *)(a2 + 81) = v15;
      *(_BYTE *)(a2 + 82) = v16;
    }
    else
    {
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      *(_QWORD *)(a2 + 32) = 0;
      *(_QWORD *)(a2 + 40) = 2;
      *(_OWORD *)(a2 + 48) = 0u;
      *(_OWORD *)(a2 + 64) = 0u;
      *(_DWORD *)(a2 + 79) = 0;
    }
  }
  return result;
}

uint64_t JindoArchivedViewCollection.index(for:in:)@<X0>(WidgetKit::JindoViewTag a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  void *v7;
  id v8;
  Swift::Int v9;
  char v10;
  uint64_t result;

  v7 = *(void **)(v3 + *(int *)(type metadata accessor for JindoArchivedViewCollection() + 20) + 8);
  swift_retain();
  v8 = v7;
  v9 = WidgetEnvironment.findEnumeratedIndex(matching:ignoring:)(a2, MEMORY[0x1E0DEE9D8]);
  LOBYTE(a2) = v10;

  result = swift_release();
  if ((a2 & 1) == 0)
    return (unint64_t)JindoArchivedViewCollection.index(for:environmentAtIndex:)(a1, v9);
  *(_QWORD *)a3 = 0;
  *(_BYTE *)(a3 + 8) = 1;
  return result;
}

WidgetKit::JindoArchivedViewCollection::ViewIndex_optional __swiftcall JindoArchivedViewCollection.index(for:environmentAtIndex:)(WidgetKit::JindoViewTag a1, Swift::Int environmentAtIndex)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v6;
  Swift::Int v7;
  Swift::Bool v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  WidgetKit::JindoArchivedViewCollection::ViewIndex_optional result;

  v6 = v2;
  type metadata accessor for JindoArchivedViewCollection();
  v7 = WidgetEnvironment.enumeratedCount()();
  v9 = a1 * v7;
  if (((unsigned __int128)a1 * v7) >> 64 != v9 >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  v10 = __OFADD__(*v3, v9);
  v11 = *v3 + v9;
  if (v10)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v12 = v11 + environmentAtIndex;
  if (__OFADD__(v11, environmentAtIndex))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_190A46F78();
  sub_1908AA2F4(&qword_1EE1EA708, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDB800], MEMORY[0x1E0CDB810]);
  sub_190A47E18();
  sub_190A47E60();
  v7 = sub_190A47E54();
  if (v12 < v7)
    v13 = v12;
  else
    v13 = 0;
  *(_QWORD *)v6 = v13;
  *(_BYTE *)(v6 + 8) = v12 >= v7;
LABEL_11:
  result.value.base = v7;
  result.is_nil = v8;
  return result;
}

uint64_t JindoArchivedViewCollection.view(at:)()
{
  type metadata accessor for JindoArchivedViewCollection();
  return sub_190A46F6C();
}

uint64_t JindoArchivedViewCollection.view(for:in:)@<X0>(WidgetKit::JindoViewTag a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v9;
  id v10;
  Swift::Int v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char v16;

  v5 = v4;
  v9 = *(void **)(v3 + *(int *)(type metadata accessor for JindoArchivedViewCollection() + 20) + 8);
  swift_retain();
  v10 = v9;
  v11 = WidgetEnvironment.findEnumeratedIndex(matching:ignoring:)(a2, MEMORY[0x1E0DEE9D8]);
  LOBYTE(a2) = v12;

  swift_release();
  if ((a2 & 1) != 0 || (JindoArchivedViewCollection.index(for:environmentAtIndex:)(a1, v11), (v16 & 1) != 0))
  {
    v13 = sub_190A467EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 1, 1, v13);
  }
  else
  {
    result = sub_190A46F6C();
    if (!v5)
    {
      v15 = sub_190A467EC();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 0, 1, v15);
    }
  }
  return result;
}

uint64_t JindoArchivedViewCollection.viewState(for:environmentAtIndex:)@<X0>(int a1@<W0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  int v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  int v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;

  v38 = a2;
  v33 = a1;
  v34 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6948);
  MEMORY[0x1E0C80A78](v4);
  v35 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190A467EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_190A46C30();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = *(_OWORD *)(v3 + *(int *)(type metadata accessor for JindoArchivedViewCollection() + 20));
  WidgetEnvironment.environmentValues(at:)(v38, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1908AA544((uint64_t)v12, (uint64_t *)&unk_1ECF6C868);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC900);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v34, 1, 1, v17);
  }
  else
  {
    v32 = v9;
    v38 = v6;
    v19 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v19(v16, v12, v13);
    v20 = v36;
    JindoArchivedViewCollection.view(for:in:)((WidgetKit::JindoViewTag)v33, (uint64_t)v16, v35);
    if (v20)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
    else
    {
      v21 = v38;
      v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v35, 1, v38);
      v23 = v34;
      if (v22 == 1)
      {
        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
        sub_1908AA544(v35, &qword_1EE1E6948);
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC900);
        return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
      }
      else
      {
        v25 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 32);
        v26 = v32;
        v25(v32, v35, v21);
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC900);
        v28 = v21;
        v29 = v27;
        v30 = &v23[*(int *)(v27 + 48)];
        v25(v23, (uint64_t)v26, v28);
        v19(v30, v16, v13);
        return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v23, 0, 1, v29);
      }
    }
  }
}

unint64_t sub_1908D2C2C(uint64_t a1)
{
  uint64_t v2;

  sub_190A481CC();
  v2 = sub_190A47A40();
  return sub_1908D3A54(a1, v2);
}

unint64_t sub_1908D2C98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_190A487C0();
  sub_190A47B18();
  v4 = sub_190A48808();
  return sub_1908D3B1C(a1, a2, v4);
}

unint64_t sub_1908D2CFC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_190A480E8();
  return sub_1908D4314(a1, v2, &qword_1EE1EBF40);
}

unint64_t sub_1908D2D48(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_190A487B4();
  return sub_1908D3BFC(a1, v2);
}

uint64_t *initializeBufferWithCopyOfBuffer for JindoArchivedViewCollection(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  void *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = *(void **)((char *)a2 + v7 + 8);
    *(_QWORD *)v8 = *(uint64_t *)((char *)a2 + v7);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = *(uint64_t *)((char *)a2 + v7 + 16);
    *((_WORD *)v8 + 20) = *(_WORD *)((char *)a2 + v7 + 40);
    *(_OWORD *)(v8 + 24) = *(_OWORD *)((char *)a2 + v7 + 24);
    v11 = *(int *)(type metadata accessor for JindoViewStates.Metadata(0) + 28);
    __dst = &v8[v11];
    v12 = &v9[v11];
    v13 = sub_190A45FC4();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_retain();
    v16 = v10;
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    v19 = *(int *)(a3 + 24);
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_190A46F78();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return v4;
}

uint64_t destroy for JindoArchivedViewCollection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1 + *(int *)(a2 + 20);
  swift_release();

  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for JindoViewStates.Metadata(0) + 28);
  v6 = sub_190A45FC4();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v8 = a1 + *(int *)(a2 + 24);
  v9 = sub_190A46F78();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for JindoArchivedViewCollection(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = *(void **)((char *)a2 + v5 + 8);
  *(_QWORD *)v6 = *(_QWORD *)((char *)a2 + v5);
  *((_QWORD *)v6 + 1) = v8;
  *((_QWORD *)v6 + 2) = *(_QWORD *)((char *)a2 + v5 + 16);
  *((_WORD *)v6 + 20) = *(_WORD *)((char *)a2 + v5 + 40);
  *(_OWORD *)(v6 + 24) = *(_OWORD *)((char *)a2 + v5 + 24);
  v9 = *(int *)(type metadata accessor for JindoViewStates.Metadata(0) + 28);
  v10 = &v6[v9];
  v11 = &v7[v9];
  v12 = sub_190A45FC4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_retain();
  v15 = v8;
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v17 = *(int *)(a3 + 24);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_190A46F78();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

_QWORD *assignWithCopy for JindoArchivedViewCollection(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  void *v9;
  void *v10;
  id v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  v9 = (void *)*((_QWORD *)v8 + 1);
  v10 = (void *)*((_QWORD *)v7 + 1);
  *((_QWORD *)v7 + 1) = v9;
  v11 = v9;

  *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = *(_OWORD *)(v8 + 24);
  *((_WORD *)v7 + 20) = *((_WORD *)v8 + 20);
  *(_OWORD *)(v7 + 24) = v12;
  v13 = *(int *)(type metadata accessor for JindoViewStates.Metadata(0) + 28);
  v14 = &v7[v13];
  v15 = &v8[v13];
  v16 = sub_190A45FC4();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  v22 = *(int *)(a3 + 24);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_190A46F78();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  return a1;
}

_QWORD *initializeWithTake for JindoArchivedViewCollection(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_OWORD *)v7 = *(_OWORD *)((char *)a2 + v6);
  *((_QWORD *)v7 + 2) = *(_QWORD *)((char *)a2 + v6 + 16);
  *((_WORD *)v7 + 20) = *(_WORD *)((char *)a2 + v6 + 40);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)((char *)a2 + v6 + 24);
  v9 = *(int *)(type metadata accessor for JindoViewStates.Metadata(0) + 28);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = sub_190A45FC4();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = *(int *)(a3 + 24);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_190A46F78();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

_QWORD *assignWithTake for JindoArchivedViewCollection(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_release();
  v9 = (void *)*((_QWORD *)v7 + 1);
  *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);

  *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
  *((_WORD *)v7 + 20) = *((_WORD *)v8 + 20);
  v10 = *(int *)(type metadata accessor for JindoViewStates.Metadata(0) + 28);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_190A45FC4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v19 = *(int *)(a3 + 24);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_190A46F78();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for JindoArchivedViewCollection()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1908D3584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for JindoViewStates.Metadata(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(int *)(a3 + 20);
  }
  else
  {
    v8 = sub_190A46F78();
    v7 = *(_QWORD *)(v8 - 8);
    v9 = *(int *)(a3 + 24);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for JindoArchivedViewCollection()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1908D3600(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = type metadata accessor for JindoViewStates.Metadata(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(int *)(a4 + 20);
  }
  else
  {
    v10 = sub_190A46F78();
    v9 = *(_QWORD *)(v10 - 8);
    v11 = *(int *)(a4 + 24);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

uint64_t sub_1908D3678()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for JindoViewStates.Metadata(319);
  if (v1 <= 0x3F)
  {
    result = sub_190A46F78();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JindoArchivedViewCollection.ViewIndex()
{
  return &type metadata for JindoArchivedViewCollection.ViewIndex;
}

unint64_t sub_1908D371C(uint64_t a1)
{
  uint64_t v2;

  sub_190A487C0();
  type metadata accessor for CFString(0);
  sub_1908AA2F4((unint64_t *)&unk_1ECF6C588, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_190A4A29C);
  sub_190A46348();
  v2 = sub_190A48808();
  return sub_1908D3C98(a1, v2);
}

unint64_t sub_1908D37A4(uint64_t a1)
{
  uint64_t v2;

  sub_190A487C0();
  sub_190A487CC();
  v2 = sub_190A48808();
  return sub_1908D3BFC(a1, v2);
}

unint64_t sub_1908D37FC(unsigned __int8 a1)
{
  uint64_t v2;

  sub_190A487C0();
  sub_190A487CC();
  v2 = sub_190A48808();
  return sub_1908D3DD8(a1, v2);
}

unint64_t sub_1908D3854(uint64_t a1)
{
  uint64_t v2;

  sub_190A48400();
  v2 = sub_190A47A40();
  return sub_1908D3E78(a1, v2);
}

unint64_t sub_1908D38A4(unsigned __int8 a1, void *a2)
{
  id v4;
  uint64_t v5;

  sub_190A487C0();
  sub_190A487CC();
  v4 = a2;
  sub_190A48100();

  v5 = sub_190A48808();
  return sub_1908D3FA0(a1, (uint64_t)v4, v5);
}

unint64_t sub_1908D391C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  os_unfair_lock_s *v5;
  id v6;
  uint64_t v7;

  sub_190A487C0();
  sub_190A46084();
  sub_1908AA2F4(&qword_1EE1EC910, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_190A47A4C();
  v2 = (_QWORD *)(a1
                + *(int *)(type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0) + 20));
  v3 = *v2;
  v4 = (void *)v2[1];
  v5 = *(os_unfair_lock_s **)(*v2 + 16);
  swift_retain_n();
  v6 = v4;
  os_unfair_lock_lock(v5);
  WidgetEnvironment.Storage.hash.getter();
  sub_190A487CC();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));

  swift_release_n();
  v7 = sub_190A48808();
  return sub_1908D409C(a1, v7);
}

unint64_t sub_1908D3A08(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_190A480E8();
  return sub_1908D4314(a1, v2, &qword_1EE1EC908);
}

unint64_t sub_1908D3A54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    sub_190A481CC();
    do
    {
      if ((sub_190A47AAC() & 1) != 0)
        break;
      v4 = (v4 + 1) & v5;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1908D3B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_190A486DC() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_190A486DC() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1908D3BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1908D3C98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for CFString(0);
    v6 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_1908AA2F4((unint64_t *)&unk_1ECF6C588, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_190A4A29C);
    v7 = v6;
    v8 = sub_190A4633C();

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = sub_190A4633C();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1908D3DD8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1908D3E78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_190A48400();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      v14 = sub_190A47AAC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_1908D3FA0(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  char v13;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v7 = v3;
    v8 = a1;
    v9 = ~v5;
    do
    {
      v10 = *(_QWORD *)(v7 + 48);
      if (*(unsigned __int8 *)(v10 + 16 * v6) == v8)
      {
        v11 = *(void **)(v10 + 16 * v6 + 8);
        sub_1908AB890(0, (unint64_t *)&qword_1ECF6C5E0);
        v12 = v11;
        v13 = sub_190A480F4();

        if ((v13 & 1) != 0)
          break;
      }
      v6 = (v6 + 1) & v9;
    }
    while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_1908D409C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  unint64_t *v20;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  os_unfair_lock_s *v24;
  id v25;
  unint64_t v26;
  id v27;
  id v28;
  char v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v34 = type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  MEMORY[0x1E0C80A78](v34);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v3 + 64;
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v31 = v3;
    v32 = v13;
    v33 = ~v10;
    do
    {
      sub_1908D4424(*(_QWORD *)(v3 + 48) + v13 * v11, (uint64_t)v8);
      if ((sub_190A4606C() & 1) != 0)
      {
        v17 = *(int *)(v34 + 20);
        v18 = *(_QWORD *)&v8[v17];
        v19 = *(void **)&v8[v17 + 8];
        v20 = (unint64_t *)(a1 + v17);
        v21 = *v20;
        v22 = (void *)v20[1];
        if (v18 == *v20)
        {
          v14 = *(os_unfair_lock_s **)(v18 + 16);
          swift_retain_n();
          v15 = v19;
          v16 = v22;
          os_unfair_lock_lock(v14);
          sub_1908AB890(0, (unint64_t *)&qword_1ECF6C5E0);
          LOBYTE(v14) = sub_190A480F4();
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 16));

          swift_release_n();
          v13 = v32;
          v12 = v33;
          if ((v14 & 1) != 0)
            goto LABEL_13;
        }
        else
        {
          v23 = v9;
          if (v18 >= *v20)
          {
            v24 = *(os_unfair_lock_s **)(v21 + 16);
            swift_retain();
            v27 = v19;
            swift_retain();
            v26 = v18;
          }
          else
          {
            v24 = *(os_unfair_lock_s **)(v18 + 16);
            swift_retain();
            v25 = v19;
            swift_retain();
            v26 = v21;
          }
          v28 = v22;
          os_unfair_lock_lock(v24);
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v26 + 16));
          sub_1908AB890(0, (unint64_t *)&qword_1ECF6C5E0);
          v29 = sub_190A480F4();
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 16));
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 16));

          swift_release();
          swift_release();
          v9 = v23;
          v3 = v31;
          v13 = v32;
          v12 = v33;
          if ((v29 & 1) != 0)
          {
LABEL_13:
            sub_1908D4468((uint64_t)v8);
            return v11;
          }
        }
      }
      sub_1908D4468((uint64_t)v8);
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_1908D4314(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1908AB890(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_190A480F4();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_190A480F4();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_1908D4424(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1908D4468(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1908D44A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = v9 + 24 * i;
    if ((*(_QWORD *)(v10 + 8) != a1 || *(_QWORD *)(v10 + 16) != a2) && (sub_190A486DC() & 1) == 0)
    {
      v12 = ~v5;
      for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
      {
        v13 = v9 + 24 * i;
        if (*(_QWORD *)(v13 + 8) == a1 && *(_QWORD *)(v13 + 16) == a2)
          break;
        if ((sub_190A486DC() & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1908D45AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_190A487C0();
  swift_bridgeObjectRetain();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  v4 = sub_190A48808();
  return sub_1908D44A4(a1, a2, v4);
}

double sub_1908D4620(unsigned __int8 a1, char a2, unsigned __int8 a3)
{
  uint64_t v3;

  if (a2 == 2)
  {
    if (a3 >= 3u)
    {
      if (a3 == 3)
      {
        if (a1 < 4u)
        {
          v3 += 160;
        }
        else if (a1 - 8 >= 3)
        {
          if (a1 == 4)
            v3 += 184;
          else
            v3 += 208;
        }
        else
        {
          v3 += 232;
        }
      }
      else if (a1 < 4u)
      {
        v3 += 256;
      }
      else if (a1 - 8 >= 3)
      {
        if (a1 == 4)
          v3 += 280;
        else
          v3 += 304;
      }
      else
      {
        v3 += 328;
      }
    }
    else if (a1 < 4u)
    {
      v3 += 64;
    }
    else if (a1 - 8 >= 3)
    {
      if (a1 == 4)
        v3 += 88;
      else
        v3 += 112;
    }
    else
    {
      v3 += 136;
    }
  }
  else if ((a2 & 1) != 0)
  {
    if (a1 < 4u)
    {
      v3 += 32;
    }
    else if (a1 - 8 >= 3)
    {
      if (a1 == 4)
        v3 += 40;
      else
        v3 += 48;
    }
    else
    {
      v3 += 56;
    }
  }
  else if (a1 >= 4u)
  {
    if (a1 - 8 >= 3)
    {
      if (a1 == 4)
        v3 += 8;
      else
        v3 += 16;
    }
    else
    {
      v3 += 24;
    }
  }
  return *(double *)v3;
}

uint64_t sub_1908D4814()
{
  uint64_t result;

  xmmword_1EE1EC918 = xmmword_190A4A9C0;
  unk_1EE1EC928 = xmmword_190A4A9D0;
  xmmword_1EE1EC938 = xmmword_190A4A9E0;
  unk_1EE1EC948 = xmmword_190A4A9F0;
  qword_1EE1EC958 = 0x4036000000000000;
  unk_1EE1EC960 = 0x403A000000000000;
  byte_1EE1EC968 = 0;
  qword_1EE1EC970 = 0x402A000000000000;
  unk_1EE1EC978 = 0x4030000000000000;
  byte_1EE1EC980 = 0;
  qword_1EE1EC988 = 0x402A000000000000;
  unk_1EE1EC990 = 0x4030000000000000;
  byte_1EE1EC998 = 0;
  qword_1EE1EC9A0 = 0x4026000000000000;
  unk_1EE1EC9A8 = 0x402A000000000000;
  byte_1EE1EC9B0 = 0;
  qword_1EE1EC9B8 = 0x4036000000000000;
  unk_1EE1EC9C0 = 0x403A000000000000;
  byte_1EE1EC9C8 = 0;
  qword_1EE1EC9D0 = 0x402A000000000000;
  unk_1EE1EC9D8 = 0x4033000000000000;
  byte_1EE1EC9E0 = 0;
  qword_1EE1EC9E8 = 0x402A000000000000;
  unk_1EE1EC9F0 = 0x4033000000000000;
  byte_1EE1EC9F8 = 0;
  result = 0x402C000000000000;
  qword_1EE1ECA00 = 0x4024000000000000;
  unk_1EE1ECA08 = 0x402C000000000000;
  byte_1EE1ECA10 = 0;
  qword_1EE1ECA18 = 0x4036000000000000;
  unk_1EE1ECA20 = 0x403A000000000000;
  byte_1EE1ECA28 = 0;
  qword_1EE1ECA30 = 0x402A000000000000;
  unk_1EE1ECA38 = 0x4034000000000000;
  byte_1EE1ECA40 = 0;
  qword_1EE1ECA48 = 0x402A000000000000;
  unk_1EE1ECA50 = 0x4034000000000000;
  byte_1EE1ECA58 = 0;
  qword_1EE1ECA60 = 0x4024000000000000;
  unk_1EE1ECA68 = 0x402E000000000000;
  byte_1EE1ECA70 = 0;
  return result;
}

uint64_t sub_1908D491C()
{
  uint64_t result;

  xmmword_1EE1ECA78 = xmmword_190A4AA00;
  unk_1EE1ECA88 = xmmword_190A4A9D0;
  xmmword_1EE1ECA98 = xmmword_190A4AA10;
  unk_1EE1ECAA8 = xmmword_190A4A9F0;
  qword_1EE1ECAB8 = 0x4042000000000000;
  unk_1EE1ECAC0 = 0x4040000000000000;
  byte_1EE1ECAC8 = 0;
  qword_1EE1ECAD0 = 0x402A000000000000;
  unk_1EE1ECAD8 = 0x4030000000000000;
  byte_1EE1ECAE0 = 0;
  qword_1EE1ECAE8 = 0x402A000000000000;
  unk_1EE1ECAF0 = 0x4030000000000000;
  byte_1EE1ECAF8 = 0;
  qword_1EE1ECB00 = 0x4026000000000000;
  unk_1EE1ECB08 = 0x402A000000000000;
  byte_1EE1ECB10 = 0;
  qword_1EE1ECB18 = 0x4042000000000000;
  unk_1EE1ECB20 = 0x4043000000000000;
  byte_1EE1ECB28 = 0;
  qword_1EE1ECB30 = 0x402A000000000000;
  unk_1EE1ECB38 = 0x4033000000000000;
  byte_1EE1ECB40 = 0;
  qword_1EE1ECB48 = 0x402A000000000000;
  unk_1EE1ECB50 = 0x4033000000000000;
  byte_1EE1ECB58 = 0;
  result = 0x402C000000000000;
  qword_1EE1ECB60 = 0x4024000000000000;
  unk_1EE1ECB68 = 0x402C000000000000;
  byte_1EE1ECB70 = 0;
  qword_1EE1ECB78 = 0x4042000000000000;
  unk_1EE1ECB80 = 0x4043000000000000;
  byte_1EE1ECB88 = 0;
  qword_1EE1ECB90 = 0x402A000000000000;
  unk_1EE1ECB98 = 0x4034000000000000;
  byte_1EE1ECBA0 = 0;
  qword_1EE1ECBA8 = 0x402A000000000000;
  unk_1EE1ECBB0 = 0x4034000000000000;
  byte_1EE1ECBB8 = 0;
  qword_1EE1ECBC0 = 0x4024000000000000;
  unk_1EE1ECBC8 = 0x402E000000000000;
  byte_1EE1ECBD0 = 0;
  return result;
}

uint64_t sub_1908D4A28()
{
  uint64_t result;

  xmmword_1EE1EBCB0 = xmmword_190A4AA20;
  unk_1EE1EBCC0 = xmmword_190A4AA30;
  xmmword_1EE1EBCD0 = xmmword_190A4AA40;
  unk_1EE1EBCE0 = xmmword_190A4A9D0;
  qword_1EE1EBCF0 = 0x4038000000000000;
  unk_1EE1EBCF8 = 0x403C000000000000;
  byte_1EE1EBD00 = 0;
  qword_1EE1EBD08 = 0x402E000000000000;
  unk_1EE1EBD10 = 0x4032000000000000;
  byte_1EE1EBD18 = 0;
  qword_1EE1EBD20 = 0x402E000000000000;
  unk_1EE1EBD28 = 0x4032000000000000;
  byte_1EE1EBD30 = 0;
  qword_1EE1EBD38 = 0x4026000000000000;
  unk_1EE1EBD40 = 0x402A000000000000;
  byte_1EE1EBD48 = 0;
  qword_1EE1EBD50 = 0x4038000000000000;
  unk_1EE1EBD58 = 0x403C000000000000;
  byte_1EE1EBD60 = 0;
  qword_1EE1EBD68 = 0x402C000000000000;
  unk_1EE1EBD70 = 0x4034000000000000;
  byte_1EE1EBD78 = 0;
  qword_1EE1EBD80 = 0x402C000000000000;
  unk_1EE1EBD88 = 0x4034000000000000;
  byte_1EE1EBD90 = 0;
  result = 0x4024000000000000;
  qword_1EE1EBD98 = 0x4024000000000000;
  unk_1EE1EBDA0 = 0x402C000000000000;
  byte_1EE1EBDA8 = 0;
  qword_1EE1EBDB0 = 0x4038000000000000;
  unk_1EE1EBDB8 = 0x403C000000000000;
  byte_1EE1EBDC0 = 0;
  qword_1EE1EBDC8 = 0x402C000000000000;
  unk_1EE1EBDD0 = 0x4035000000000000;
  byte_1EE1EBDD8 = 0;
  qword_1EE1EBDE0 = 0x402C000000000000;
  unk_1EE1EBDE8 = 0x4035000000000000;
  byte_1EE1EBDF0 = 0;
  qword_1EE1EBDF8 = 0x4024000000000000;
  unk_1EE1EBE00 = 0x402E000000000000;
  byte_1EE1EBE08 = 0;
  return result;
}

uint64_t sub_1908D4B30()
{
  uint64_t result;

  xmmword_1EE1EC0D8 = xmmword_190A4AA50;
  unk_1EE1EC0E8 = xmmword_190A4AA30;
  xmmword_1EE1EC0F8 = xmmword_190A4AA60;
  unk_1EE1EC108 = xmmword_190A4A9D0;
  qword_1EE1EC118 = 0x4043000000000000;
  unk_1EE1EC120 = 0x4042000000000000;
  byte_1EE1EC128 = 0;
  qword_1EE1EC130 = 0x402E000000000000;
  unk_1EE1EC138 = 0x4032000000000000;
  byte_1EE1EC140 = 0;
  qword_1EE1EC148 = 0x402E000000000000;
  unk_1EE1EC150 = 0x4032000000000000;
  byte_1EE1EC158 = 0;
  qword_1EE1EC160 = 0x4026000000000000;
  unk_1EE1EC168 = 0x402A000000000000;
  byte_1EE1EC170 = 0;
  qword_1EE1EC178 = 0x4043000000000000;
  unk_1EE1EC180 = 0x4044000000000000;
  byte_1EE1EC188 = 0;
  qword_1EE1EC190 = 0x402C000000000000;
  unk_1EE1EC198 = 0x4034000000000000;
  byte_1EE1EC1A0 = 0;
  qword_1EE1EC1A8 = 0x402C000000000000;
  unk_1EE1EC1B0 = 0x4034000000000000;
  byte_1EE1EC1B8 = 0;
  result = 0x4024000000000000;
  qword_1EE1EC1C0 = 0x4024000000000000;
  unk_1EE1EC1C8 = 0x402C000000000000;
  byte_1EE1EC1D0 = 0;
  qword_1EE1EC1D8 = 0x4043000000000000;
  unk_1EE1EC1E0 = 0x4044000000000000;
  byte_1EE1EC1E8 = 0;
  qword_1EE1EC1F0 = 0x402C000000000000;
  unk_1EE1EC1F8 = 0x4035000000000000;
  byte_1EE1EC200 = 0;
  qword_1EE1EC208 = 0x402C000000000000;
  unk_1EE1EC210 = 0x4035000000000000;
  byte_1EE1EC218 = 0;
  qword_1EE1EC220 = 0x4024000000000000;
  unk_1EE1EC228 = 0x402E000000000000;
  byte_1EE1EC230 = 0;
  return result;
}

uint64_t sub_1908D4C3C()
{
  uint64_t result;

  xmmword_1ECF6A198 = xmmword_190A4AA70;
  unk_1ECF6A1A8 = xmmword_190A4AA80;
  xmmword_1ECF6A1B8 = xmmword_190A4AA90;
  unk_1ECF6A1C8 = xmmword_190A4AAA0;
  qword_1ECF6A1D8 = 0x403A000000000000;
  unk_1ECF6A1E0 = 0x403E000000000000;
  byte_1ECF6A1E8 = 0;
  qword_1ECF6A1F0 = 0x4031000000000000;
  unk_1ECF6A1F8 = 0x4034000000000000;
  byte_1ECF6A200 = 0;
  qword_1ECF6A208 = 0x4031000000000000;
  unk_1ECF6A210 = 0x4034000000000000;
  byte_1ECF6A218 = 0;
  result = 0x402E000000000000;
  qword_1ECF6A220 = 0x402A000000000000;
  unk_1ECF6A228 = 0x402E000000000000;
  byte_1ECF6A230 = 0;
  qword_1ECF6A238 = 0x403A000000000000;
  unk_1ECF6A240 = 0x403E000000000000;
  byte_1ECF6A248 = 0;
  qword_1ECF6A250 = 0x402E000000000000;
  unk_1ECF6A258 = 0x4035000000000000;
  byte_1ECF6A260 = 0;
  qword_1ECF6A268 = 0x402E000000000000;
  unk_1ECF6A270 = 0x4035000000000000;
  byte_1ECF6A278 = 0;
  qword_1ECF6A280 = 0x4026000000000000;
  unk_1ECF6A288 = 0x4030000000000000;
  byte_1ECF6A290 = 0;
  qword_1ECF6A298 = 0x403A000000000000;
  unk_1ECF6A2A0 = 0x403E000000000000;
  byte_1ECF6A2A8 = 0;
  qword_1ECF6A2B0 = 0x402E000000000000;
  unk_1ECF6A2B8 = 0x4036800000000000;
  byte_1ECF6A2C0 = 0;
  qword_1ECF6A2C8 = 0x402E000000000000;
  unk_1ECF6A2D0 = 0x4036800000000000;
  byte_1ECF6A2D8 = 0;
  qword_1ECF6A2E0 = 0x4026000000000000;
  unk_1ECF6A2E8 = 0x4031000000000000;
  byte_1ECF6A2F0 = 0;
  return result;
}

uint64_t sub_1908D4D48()
{
  uint64_t result;

  xmmword_1EE1EBF58 = xmmword_190A4AAB0;
  unk_1EE1EBF68 = xmmword_190A4AA80;
  xmmword_1EE1EBF78 = xmmword_190A4AAC0;
  unk_1EE1EBF88 = xmmword_190A4AAA0;
  qword_1EE1EBF98 = 0x4044000000000000;
  unk_1EE1EBFA0 = 0x4043000000000000;
  byte_1EE1EBFA8 = 0;
  qword_1EE1EBFB0 = 0x4031000000000000;
  unk_1EE1EBFB8 = 0x4034000000000000;
  byte_1EE1EBFC0 = 0;
  qword_1EE1EBFC8 = 0x4031000000000000;
  unk_1EE1EBFD0 = 0x4034000000000000;
  byte_1EE1EBFD8 = 0;
  qword_1EE1EBFE0 = 0x402A000000000000;
  unk_1EE1EBFE8 = 0x402E000000000000;
  byte_1EE1EBFF0 = 0;
  qword_1EE1EBFF8 = 0x4044000000000000;
  unk_1EE1EC000 = 0x4045000000000000;
  byte_1EE1EC008 = 0;
  qword_1EE1EC010 = 0x402E000000000000;
  unk_1EE1EC018 = 0x4035000000000000;
  byte_1EE1EC020 = 0;
  qword_1EE1EC028 = 0x402E000000000000;
  unk_1EE1EC030 = 0x4035000000000000;
  byte_1EE1EC038 = 0;
  result = 0x4026000000000000;
  qword_1EE1EC040 = 0x4026000000000000;
  unk_1EE1EC048 = 0x4030000000000000;
  byte_1EE1EC050 = 0;
  qword_1EE1EC058 = 0x4044000000000000;
  unk_1EE1EC060 = 0x4045000000000000;
  byte_1EE1EC068 = 0;
  qword_1EE1EC070 = 0x402E000000000000;
  unk_1EE1EC078 = 0x4036800000000000;
  byte_1EE1EC080 = 0;
  qword_1EE1EC088 = 0x402E000000000000;
  unk_1EE1EC090 = 0x4036800000000000;
  byte_1EE1EC098 = 0;
  qword_1EE1EC0A0 = 0x4026000000000000;
  unk_1EE1EC0A8 = 0x4031000000000000;
  byte_1EE1EC0B0 = 0;
  return result;
}

uint64_t type metadata accessor for CircularFontDefinition()
{
  return objc_opt_self();
}

double sub_1908D4E7C(unsigned __int8 a1)
{
  uint64_t v1;
  char v3;
  unsigned __int8 v4;
  _QWORD v6[44];

  (*(void (**)(_QWORD *__return_ptr))(v1 + 200))(v6);
  if (qword_1ECF6AAE8 != -1)
    swift_once();
  v3 = byte_1ECF6D4E8;
  v4 = sub_1909BAD88();
  return sub_1908D4620(a1, v3, v4);
}

uint64_t sub_1908D4F0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v3 = sub_190A47440();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 == *MEMORY[0x1E0CDD788]
    || v7 == *MEMORY[0x1E0CDD7A8]
    || v7 == *MEMORY[0x1E0CDD7B0]
    || v7 == *MEMORY[0x1E0CDD7B8])
  {
    return (*(double (**)(void))(v1 + 208))();
  }
  if (v7 == *MEMORY[0x1E0CDD7E8])
  {
    sub_190A473E0();
    return v12;
  }
  else if (v7 == *MEMORY[0x1E0CDD790] || v7 == *MEMORY[0x1E0CDD7A0] || v7 == *MEMORY[0x1E0CDD7C0])
  {
    sub_190A473D4();
    return v15;
  }
  else if (v7 == *MEMORY[0x1E0CDD7E0] || v7 == *MEMORY[0x1E0CDD7C8] || v7 == *MEMORY[0x1E0CDD7D0])
  {
    sub_190A473C8();
    return v18;
  }
  else
  {
    sub_190A473D4();
    v11 = v19;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v11;
}

unint64_t sub_1908D50B4()
{
  return sub_1908D50E4(MEMORY[0x1E0CA82F8], MEMORY[0x1E0DEBB98], 7);
}

unint64_t sub_1908D50CC()
{
  return sub_1908D50E4(MEMORY[0x1E0CA8400], MEMORY[0x1E0DEB418], 0x8000);
}

unint64_t sub_1908D50E4(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t inited;
  void *v7;
  id v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190A4A350;
  v7 = *a1;
  *(_QWORD *)(inited + 64) = a2;
  *(_QWORD *)(inited + 32) = v7;
  *(_QWORD *)(inited + 40) = a3;
  v8 = v7;
  return sub_1908DFEC8(inited);
}

void sub_1908D5154()
{
  sub_190A48448();
  __break(1u);
}

uint64_t type metadata accessor for RectangularFontDefinition()
{
  return objc_opt_self();
}

void *sub_1908D51C0@<X0>(void *a1@<X8>)
{
  if (qword_1EE1EC478 != -1)
    swift_once();
  return memcpy(a1, &xmmword_1EE1EC918, 0x159uLL);
}

uint64_t type metadata accessor for CompactCircularFontDefinition()
{
  return objc_opt_self();
}

void *sub_1908D5234@<X0>(void *a1@<X8>)
{
  if (qword_1EE1EC480 != -1)
    swift_once();
  return memcpy(a1, &xmmword_1EE1ECA78, 0x159uLL);
}

uint64_t type metadata accessor for CompactRectangularFontDefinition()
{
  return objc_opt_self();
}

void *sub_1908D52A8@<X0>(void *a1@<X8>)
{
  if (qword_1EE1EBE18 != -1)
    swift_once();
  return memcpy(a1, &xmmword_1EE1EBCB0, 0x159uLL);
}

uint64_t type metadata accessor for RegularCircularFontDefinition()
{
  return objc_opt_self();
}

void *sub_1908D531C@<X0>(void *a1@<X8>)
{
  if (qword_1EE1EC240 != -1)
    swift_once();
  return memcpy(a1, &xmmword_1EE1EC0D8, 0x159uLL);
}

uint64_t type metadata accessor for RegularRectangularFontDefinition()
{
  return objc_opt_self();
}

void *sub_1908D5390@<X0>(void *a1@<X8>)
{
  if (qword_1ECF6A2F8 != -1)
    swift_once();
  return memcpy(a1, &xmmword_1ECF6A198, 0x159uLL);
}

uint64_t type metadata accessor for LargeCircularFontDefinition()
{
  return objc_opt_self();
}

void *sub_1908D5404@<X0>(void *a1@<X8>)
{
  if (qword_1EE1EC0C0 != -1)
    swift_once();
  return memcpy(a1, &xmmword_1EE1EBF58, 0x159uLL);
}

uint64_t type metadata accessor for LargeRectangularFontDefinition()
{
  return objc_opt_self();
}

void sub_1908D5478()
{
  sub_190A48448();
  __break(1u);
}

uint64_t sub_1908D54C0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DefaultAccessoryWidgetFontDefinition()
{
  return objc_opt_self();
}

_QWORD *sub_1908D54F4(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  _QWORD *v13;
  __int128 v14;
  uint64_t v15;
  void (*v16)(_QWORD *, _QWORD *, uint64_t);
  id v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  int *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v121;
  uint64_t v122;
  unsigned int (*v123)(char *, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  unsigned int (*v126)(char *, uint64_t, uint64_t);
  _QWORD *v127;
  int *v128;
  _QWORD *v129;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for JindoViewCollection();
    v8 = *(_QWORD *)(v7 - 8);
    v128 = v6;
    v129 = v3;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6430);
      memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v124 = v8;
      v12 = (void *)v3[1];
      *a1 = *v3;
      a1[1] = v12;
      v13 = v3;
      v14 = *(_OWORD *)(v3 + 5);
      *(_OWORD *)(a1 + 5) = v14;
      v15 = v14;
      v16 = **(void (***)(_QWORD *, _QWORD *, uint64_t))(v14 - 8);
      swift_retain();
      v17 = v12;
      v16(a1 + 2, v3 + 2, v15);
      v18 = *(int *)(v7 + 24);
      v19 = (char *)a1 + v18;
      v20 = (char *)v3 + v18;
      *(_OWORD *)v19 = *(_OWORD *)((char *)v13 + v18);
      v19[16] = *((_BYTE *)v13 + v18 + 16);
      *(_OWORD *)(v19 + 24) = *(_OWORD *)((char *)v13 + v18 + 24);
      v19[40] = *((_BYTE *)v13 + v18 + 40);
      *((_QWORD *)v19 + 6) = *(_QWORD *)((char *)v13 + v18 + 48);
      *(_OWORD *)(v19 + 56) = *(_OWORD *)((char *)v13 + v18 + 56);
      *(_OWORD *)(v19 + 72) = *(_OWORD *)((char *)v13 + v18 + 72);
      v19[88] = *((_BYTE *)v13 + v18 + 88);
      *((_OWORD *)v19 + 6) = *((_OWORD *)v20 + 6);
      v21 = type metadata accessor for MetricsRequest(0);
      v22 = *(int *)(v21 + 40);
      v23 = &v19[v22];
      v24 = &v20[v22];
      v25 = sub_190A46EE8();
      v26 = *(_QWORD *)(v25 - 8);
      v126 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
      if (v126(v24, 1, v25))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      v28 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
      v29 = &v19[v28];
      v30 = &v20[v28];
      v31 = (int *)type metadata accessor for JindoMetricsDefinition(0);
      v32 = *((_QWORD *)v31 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v32 + 48))(v30, 1, v31))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        v34 = v124;
        v3 = v129;
      }
      else
      {
        v122 = v32;
        *(_OWORD *)v29 = *(_OWORD *)v30;
        v35 = v31[5];
        v36 = &v29[v35];
        v37 = &v30[v35];
        v36[16] = v37[16];
        *(_OWORD *)v36 = *(_OWORD *)v37;
        *(_OWORD *)(v36 + 24) = *(_OWORD *)(v37 + 24);
        v36[40] = v37[40];
        *((_QWORD *)v36 + 6) = *((_QWORD *)v37 + 6);
        *(_OWORD *)(v36 + 56) = *(_OWORD *)(v37 + 56);
        *(_OWORD *)(v36 + 72) = *(_OWORD *)(v37 + 72);
        v36[88] = v37[88];
        *((_OWORD *)v36 + 6) = *((_OWORD *)v37 + 6);
        v38 = *(int *)(v21 + 40);
        v39 = &v36[v38];
        v40 = &v37[v38];
        if (v126(&v37[v38], 1, v25))
        {
          v41 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v39, v40, v25);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v39, 0, 1, v25);
        }
        v42 = v31[6];
        v43 = &v29[v42];
        v44 = &v30[v42];
        *(_OWORD *)v43 = *(_OWORD *)v44;
        v43[16] = v44[16];
        *(_OWORD *)(v43 + 24) = *(_OWORD *)(v44 + 24);
        v43[40] = v44[40];
        *((_QWORD *)v43 + 6) = *((_QWORD *)v44 + 6);
        *(_OWORD *)(v43 + 56) = *(_OWORD *)(v44 + 56);
        *(_OWORD *)(v43 + 72) = *(_OWORD *)(v44 + 72);
        v43[88] = v44[88];
        *((_OWORD *)v43 + 6) = *((_OWORD *)v44 + 6);
        v45 = *(int *)(v21 + 40);
        v46 = &v43[v45];
        v47 = &v44[v45];
        if (v126(&v44[v45], 1, v25))
        {
          v48 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
          memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v46, v47, v25);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v46, 0, 1, v25);
        }
        v49 = v31[7];
        v50 = &v29[v49];
        v51 = &v30[v49];
        *(_OWORD *)v50 = *(_OWORD *)v51;
        v50[16] = v51[16];
        *(_OWORD *)(v50 + 24) = *(_OWORD *)(v51 + 24);
        v50[40] = v51[40];
        *((_QWORD *)v50 + 6) = *((_QWORD *)v51 + 6);
        *(_OWORD *)(v50 + 56) = *(_OWORD *)(v51 + 56);
        *(_OWORD *)(v50 + 72) = *(_OWORD *)(v51 + 72);
        v50[88] = v51[88];
        *((_OWORD *)v50 + 6) = *((_OWORD *)v51 + 6);
        v52 = *(int *)(v21 + 40);
        v53 = &v50[v52];
        v54 = &v51[v52];
        if (v126(&v51[v52], 1, v25))
        {
          v55 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
          memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v53, v54, v25);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v53, 0, 1, v25);
        }
        v6 = v128;
        v56 = v31[8];
        v57 = &v29[v56];
        v58 = &v30[v56];
        *(_OWORD *)v57 = *(_OWORD *)v58;
        v57[16] = v58[16];
        *(_OWORD *)(v57 + 24) = *(_OWORD *)(v58 + 24);
        v57[40] = v58[40];
        *((_QWORD *)v57 + 6) = *((_QWORD *)v58 + 6);
        *(_OWORD *)(v57 + 56) = *(_OWORD *)(v58 + 56);
        *(_OWORD *)(v57 + 72) = *(_OWORD *)(v58 + 72);
        v57[88] = v58[88];
        *((_OWORD *)v57 + 6) = *((_OWORD *)v58 + 6);
        v59 = *(int *)(v21 + 40);
        v60 = &v57[v59];
        v61 = &v58[v59];
        if (v126(&v58[v59], 1, v25))
        {
          v62 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v60, v61, v25);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v60, 0, 1, v25);
        }
        v34 = v124;
        v3 = v129;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v122 + 56))(v29, 0, 1, v31);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v34 + 56))(a1, 0, 1, v7);
    }
    v63 = v6[5];
    v64 = v6[6];
    v65 = (_QWORD *)((char *)a1 + v63);
    v66 = (_QWORD *)((char *)v3 + v63);
    v67 = (void *)v66[1];
    v68 = *(_QWORD *)((char *)v3 + v64);
    *v65 = *v66;
    v65[1] = v67;
    *(_QWORD *)((char *)a1 + v64) = v68;
    v69 = v6[7];
    v127 = a1;
    v70 = (char *)a1 + v69;
    v71 = (char *)v3 + v69;
    *(_OWORD *)v70 = *(_OWORD *)((char *)v3 + v69);
    v70[16] = *((_BYTE *)v3 + v69 + 16);
    *(_OWORD *)(v70 + 24) = *(_OWORD *)((char *)v3 + v69 + 24);
    v70[40] = *((_BYTE *)v3 + v69 + 40);
    *((_QWORD *)v70 + 6) = *(_QWORD *)((char *)v3 + v69 + 48);
    *(_OWORD *)(v70 + 56) = *(_OWORD *)((char *)v3 + v69 + 56);
    *(_OWORD *)(v70 + 72) = *(_OWORD *)((char *)v3 + v69 + 72);
    v70[88] = *((_BYTE *)v3 + v69 + 88);
    *((_OWORD *)v70 + 6) = *(_OWORD *)((char *)v3 + v69 + 96);
    v125 = type metadata accessor for MetricsRequest(0);
    v72 = *(int *)(v125 + 40);
    v73 = &v70[v72];
    v74 = &v71[v72];
    v75 = sub_190A46EE8();
    v76 = *(_QWORD *)(v75 - 8);
    v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
    swift_retain();
    v78 = v67;
    swift_retain();
    v123 = v77;
    if (v77(v74, 1, v75))
    {
      v79 = v75;
      v80 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
      v79 = v75;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
    }
    v11 = v127;
    v81 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
    v82 = &v70[v81];
    v83 = &v71[v81];
    v84 = (int *)type metadata accessor for JindoMetricsDefinition(0);
    v85 = *((_QWORD *)v84 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v85 + 48))(v83, 1, v84))
    {
      v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
      memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
      v87 = v128;
    }
    else
    {
      *(_OWORD *)v82 = *(_OWORD *)v83;
      v88 = v84[5];
      v89 = &v82[v88];
      v90 = &v83[v88];
      v89[16] = v90[16];
      *(_OWORD *)v89 = *(_OWORD *)v90;
      *(_OWORD *)(v89 + 24) = *(_OWORD *)(v90 + 24);
      v89[40] = v90[40];
      *((_QWORD *)v89 + 6) = *((_QWORD *)v90 + 6);
      *(_OWORD *)(v89 + 56) = *(_OWORD *)(v90 + 56);
      *(_OWORD *)(v89 + 72) = *(_OWORD *)(v90 + 72);
      v89[88] = v90[88];
      *((_OWORD *)v89 + 6) = *((_OWORD *)v90 + 6);
      v91 = *(int *)(v125 + 40);
      v92 = &v89[v91];
      v93 = &v90[v91];
      if (v123(&v90[v91], 1, v79))
      {
        v94 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v92, v93, v79);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v92, 0, 1, v79);
      }
      v95 = v84[6];
      v96 = &v82[v95];
      v97 = &v83[v95];
      *(_OWORD *)v96 = *(_OWORD *)v97;
      v96[16] = v97[16];
      *(_OWORD *)(v96 + 24) = *(_OWORD *)(v97 + 24);
      v96[40] = v97[40];
      *((_QWORD *)v96 + 6) = *((_QWORD *)v97 + 6);
      *(_OWORD *)(v96 + 56) = *(_OWORD *)(v97 + 56);
      *(_OWORD *)(v96 + 72) = *(_OWORD *)(v97 + 72);
      v96[88] = v97[88];
      *((_OWORD *)v96 + 6) = *((_OWORD *)v97 + 6);
      v98 = *(int *)(v125 + 40);
      v99 = &v96[v98];
      v100 = &v97[v98];
      if (v123(&v97[v98], 1, v79))
      {
        v101 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v99, v100, v79);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v99, 0, 1, v79);
      }
      v102 = v84[7];
      v103 = &v82[v102];
      v104 = &v83[v102];
      *(_OWORD *)v103 = *(_OWORD *)v104;
      v103[16] = v104[16];
      *(_OWORD *)(v103 + 24) = *(_OWORD *)(v104 + 24);
      v103[40] = v104[40];
      *((_QWORD *)v103 + 6) = *((_QWORD *)v104 + 6);
      *(_OWORD *)(v103 + 56) = *(_OWORD *)(v104 + 56);
      *(_OWORD *)(v103 + 72) = *(_OWORD *)(v104 + 72);
      v103[88] = v104[88];
      *((_OWORD *)v103 + 6) = *((_OWORD *)v104 + 6);
      v105 = *(int *)(v125 + 40);
      v106 = &v103[v105];
      v107 = &v104[v105];
      v121 = v76;
      if (v123(&v104[v105], 1, v79))
      {
        v108 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v106, v107, v79);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v106, 0, 1, v79);
      }
      v109 = v84[8];
      v110 = &v82[v109];
      v111 = &v83[v109];
      *(_OWORD *)v110 = *(_OWORD *)v111;
      v110[16] = v111[16];
      *(_OWORD *)(v110 + 24) = *(_OWORD *)(v111 + 24);
      v110[40] = v111[40];
      *((_QWORD *)v110 + 6) = *((_QWORD *)v111 + 6);
      *(_OWORD *)(v110 + 56) = *(_OWORD *)(v111 + 56);
      *(_OWORD *)(v110 + 72) = *(_OWORD *)(v111 + 72);
      v110[88] = v111[88];
      *((_OWORD *)v110 + 6) = *((_OWORD *)v111 + 6);
      v112 = *(int *)(v125 + 40);
      v113 = &v110[v112];
      v114 = &v111[v112];
      v87 = v128;
      if (v123(&v111[v112], 1, v79))
      {
        v115 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v113, v114, v79);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v113, 0, 1, v79);
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v85 + 56))(v82, 0, 1, v84);
    }
    v116 = v87[9];
    *(_QWORD *)((char *)v127 + v87[8]) = *(_QWORD *)((char *)v129 + v87[8]);
    v117 = (char *)v127 + v116;
    v118 = (char *)v129 + v116;
    v119 = *((_QWORD *)v118 + 1);
    *(_QWORD *)v117 = *(_QWORD *)v118;
    *((_QWORD *)v117 + 1) = v119;
    *((_WORD *)v117 + 8) = *((_WORD *)v118 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v11;
}

uint64_t sub_1908D5FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = type metadata accessor for JindoViewCollection();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    swift_release();

    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    v5 = a1 + *(int *)(v4 + 24);
    v6 = type metadata accessor for MetricsRequest(0);
    v7 = v5 + *(int *)(v6 + 40);
    v8 = sub_190A46EE8();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v11 = v5 + *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
    v12 = (int *)type metadata accessor for JindoMetricsDefinition(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v12 - 1) + 48))(v11, 1, v12))
    {
      v13 = *(int *)(v6 + 40);
      v14 = v11 + v12[5] + v13;
      if (!v10(v14, 1, v8))
      {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v8);
        v13 = *(int *)(v6 + 40);
      }
      v15 = v11 + v12[6] + v13;
      if (!v10(v15, 1, v8))
      {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v8);
        v13 = *(int *)(v6 + 40);
      }
      v16 = v11 + v12[7] + v13;
      if (!v10(v16, 1, v8))
      {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v16, v8);
        v13 = *(int *)(v6 + 40);
      }
      v17 = v11 + v12[8] + v13;
      if (!v10(v17, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v17, v8);
    }
  }
  v18 = a1 + *(int *)(a2 + 20);
  swift_release();

  swift_release();
  v19 = a1 + *(int *)(a2 + 28);
  v20 = type metadata accessor for MetricsRequest(0);
  v21 = v19 + *(int *)(v20 + 40);
  v22 = sub_190A46EE8();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  if (!v24(v21, 1, v22))
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  v25 = v19 + *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v26 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v26 - 1) + 48))(v25, 1, v26))
  {
    v27 = *(int *)(v20 + 40);
    v28 = v25 + v26[5] + v27;
    if (!v24(v28, 1, v22))
    {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v28, v22);
      v27 = *(int *)(v20 + 40);
    }
    v29 = v25 + v26[6] + v27;
    if (!v24(v29, 1, v22))
    {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v29, v22);
      v27 = *(int *)(v20 + 40);
    }
    v30 = v25 + v26[7] + v27;
    if (!v24(v30, 1, v22))
    {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v30, v22);
      v27 = *(int *)(v20 + 40);
    }
    v31 = v25 + v26[8] + v27;
    if (!v24(v31, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v31, v22);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1908D6344(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(_QWORD *, _QWORD *, uint64_t);
  id v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int (*v72)(char *, uint64_t, uint64_t);
  id v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  int *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  int *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unsigned int (*v122)(char *, uint64_t, uint64_t);
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  _QWORD *v126;
  int *v127;

  v6 = type metadata accessor for JindoViewCollection();
  v7 = *(_QWORD *)(v6 - 8);
  v126 = a2;
  v127 = a3;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6430);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v121 = v7;
    v9 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 5) = v10;
    v11 = v10;
    v12 = **(void (***)(_QWORD *, _QWORD *, uint64_t))(v10 - 8);
    swift_retain();
    v13 = v9;
    v12(a1 + 2, a2 + 2, v11);
    v14 = *(int *)(v6 + 24);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    *(_OWORD *)v15 = *(_OWORD *)((char *)a2 + v14);
    v15[16] = *((_BYTE *)a2 + v14 + 16);
    *(_OWORD *)(v15 + 24) = *(_OWORD *)((char *)a2 + v14 + 24);
    v15[40] = *((_BYTE *)a2 + v14 + 40);
    *((_QWORD *)v15 + 6) = *(_QWORD *)((char *)a2 + v14 + 48);
    *(_OWORD *)(v15 + 56) = *(_OWORD *)((char *)a2 + v14 + 56);
    *(_OWORD *)(v15 + 72) = *(_OWORD *)((char *)a2 + v14 + 72);
    v15[88] = *((_BYTE *)a2 + v14 + 88);
    *((_OWORD *)v15 + 6) = *(_OWORD *)((char *)a2 + v14 + 96);
    v123 = type metadata accessor for MetricsRequest(0);
    v17 = *(int *)(v123 + 40);
    v18 = &v15[v17];
    v19 = &v16[v17];
    v20 = sub_190A46EE8();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    if (v22(v19, 1, v20))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v24 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
    v25 = &v15[v24];
    v26 = &v16[v24];
    v27 = (int *)type metadata accessor for JindoMetricsDefinition(0);
    v28 = *((_QWORD *)v27 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      a3 = v127;
    }
    else
    {
      v119 = v28;
      *(_OWORD *)v25 = *(_OWORD *)v26;
      v30 = v27[5];
      v31 = &v25[v30];
      v32 = &v26[v30];
      v31[16] = v32[16];
      *(_OWORD *)v31 = *(_OWORD *)v32;
      *(_OWORD *)(v31 + 24) = *(_OWORD *)(v32 + 24);
      v31[40] = v32[40];
      *((_QWORD *)v31 + 6) = *((_QWORD *)v32 + 6);
      *(_OWORD *)(v31 + 56) = *(_OWORD *)(v32 + 56);
      *(_OWORD *)(v31 + 72) = *(_OWORD *)(v32 + 72);
      v31[88] = v32[88];
      *((_OWORD *)v31 + 6) = *((_OWORD *)v32 + 6);
      v33 = *(int *)(v123 + 40);
      v34 = &v31[v33];
      v35 = &v32[v33];
      if (v22(&v32[v33], 1, v20))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v34, v35, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v34, 0, 1, v20);
      }
      v37 = v27[6];
      v38 = &v25[v37];
      v39 = &v26[v37];
      *(_OWORD *)v38 = *(_OWORD *)v39;
      v38[16] = v39[16];
      *(_OWORD *)(v38 + 24) = *(_OWORD *)(v39 + 24);
      v38[40] = v39[40];
      *((_QWORD *)v38 + 6) = *((_QWORD *)v39 + 6);
      *(_OWORD *)(v38 + 56) = *(_OWORD *)(v39 + 56);
      *(_OWORD *)(v38 + 72) = *(_OWORD *)(v39 + 72);
      v38[88] = v39[88];
      *((_OWORD *)v38 + 6) = *((_OWORD *)v39 + 6);
      v40 = *(int *)(v123 + 40);
      v41 = &v38[v40];
      v42 = &v39[v40];
      if (v22(&v39[v40], 1, v20))
      {
        v43 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v41, v42, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v41, 0, 1, v20);
      }
      v44 = v27[7];
      v45 = &v25[v44];
      v46 = &v26[v44];
      *(_OWORD *)v45 = *(_OWORD *)v46;
      v45[16] = v46[16];
      *(_OWORD *)(v45 + 24) = *(_OWORD *)(v46 + 24);
      v45[40] = v46[40];
      *((_QWORD *)v45 + 6) = *((_QWORD *)v46 + 6);
      *(_OWORD *)(v45 + 56) = *(_OWORD *)(v46 + 56);
      *(_OWORD *)(v45 + 72) = *(_OWORD *)(v46 + 72);
      v45[88] = v46[88];
      *((_OWORD *)v45 + 6) = *((_OWORD *)v46 + 6);
      v47 = *(int *)(v123 + 40);
      v48 = &v45[v47];
      v49 = &v46[v47];
      if (v22(&v46[v47], 1, v20))
      {
        v50 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v48, v49, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v48, 0, 1, v20);
      }
      v51 = v27[8];
      v52 = &v25[v51];
      v53 = &v26[v51];
      *(_OWORD *)v52 = *(_OWORD *)v53;
      v52[16] = v53[16];
      *(_OWORD *)(v52 + 24) = *(_OWORD *)(v53 + 24);
      v52[40] = v53[40];
      *((_QWORD *)v52 + 6) = *((_QWORD *)v53 + 6);
      *(_OWORD *)(v52 + 56) = *(_OWORD *)(v53 + 56);
      *(_OWORD *)(v52 + 72) = *(_OWORD *)(v53 + 72);
      v52[88] = v53[88];
      *((_OWORD *)v52 + 6) = *((_OWORD *)v53 + 6);
      v54 = *(int *)(v123 + 40);
      v55 = &v52[v54];
      v56 = &v53[v54];
      a2 = v126;
      if (v22(&v53[v54], 1, v20))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v55, v56, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v55, 0, 1, v20);
      }
      a3 = v127;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v119 + 56))(v25, 0, 1, v27);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v121 + 56))(a1, 0, 1, v6);
  }
  v58 = a3[5];
  v59 = a3[6];
  v60 = (_QWORD *)((char *)a1 + v58);
  v61 = (_QWORD *)((char *)a2 + v58);
  v62 = (void *)v61[1];
  v63 = *(_QWORD *)((char *)a2 + v59);
  *v60 = *v61;
  v60[1] = v62;
  *(_QWORD *)((char *)a1 + v59) = v63;
  v64 = a3[7];
  v124 = a1;
  v65 = (char *)a1 + v64;
  v66 = (char *)a2 + v64;
  *(_OWORD *)v65 = *(_OWORD *)v66;
  v65[16] = v66[16];
  *(_OWORD *)(v65 + 24) = *(_OWORD *)(v66 + 24);
  v65[40] = v66[40];
  *((_QWORD *)v65 + 6) = *((_QWORD *)v66 + 6);
  *(_OWORD *)(v65 + 56) = *(_OWORD *)(v66 + 56);
  *(_OWORD *)(v65 + 72) = *(_OWORD *)(v66 + 72);
  v65[88] = v66[88];
  *((_OWORD *)v65 + 6) = *((_OWORD *)v66 + 6);
  v120 = type metadata accessor for MetricsRequest(0);
  v67 = *(int *)(v120 + 40);
  v68 = &v65[v67];
  v69 = &v66[v67];
  v70 = sub_190A46EE8();
  v71 = *(_QWORD *)(v70 - 8);
  v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
  swift_retain();
  v73 = v62;
  swift_retain();
  v122 = v72;
  v118 = v71;
  if (v72(v69, 1, v70))
  {
    v74 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
  }
  v75 = v124;
  v76 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v77 = &v65[v76];
  v78 = &v66[v76];
  v79 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v80 = *((_QWORD *)v79 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v80 + 48))(v78, 1, v79))
  {
    v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    v82 = v126;
    v83 = v127;
  }
  else
  {
    *(_OWORD *)v77 = *(_OWORD *)v78;
    v84 = v79[5];
    v85 = &v77[v84];
    v86 = &v78[v84];
    v85[16] = v86[16];
    *(_OWORD *)v85 = *(_OWORD *)v86;
    *(_OWORD *)(v85 + 24) = *(_OWORD *)(v86 + 24);
    v85[40] = v86[40];
    *((_QWORD *)v85 + 6) = *((_QWORD *)v86 + 6);
    *(_OWORD *)(v85 + 56) = *(_OWORD *)(v86 + 56);
    *(_OWORD *)(v85 + 72) = *(_OWORD *)(v86 + 72);
    v85[88] = v86[88];
    *((_OWORD *)v85 + 6) = *((_OWORD *)v86 + 6);
    v87 = v120;
    v88 = *(int *)(v120 + 40);
    v89 = &v85[v88];
    v90 = &v86[v88];
    if (v122(&v86[v88], 1, v70))
    {
      v91 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v89, v90, v70);
      v87 = v120;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v89, 0, 1, v70);
    }
    v92 = v79[6];
    v93 = &v77[v92];
    v94 = &v78[v92];
    *(_OWORD *)v93 = *(_OWORD *)v94;
    v93[16] = v94[16];
    *(_OWORD *)(v93 + 24) = *(_OWORD *)(v94 + 24);
    v93[40] = v94[40];
    *((_QWORD *)v93 + 6) = *((_QWORD *)v94 + 6);
    *(_OWORD *)(v93 + 56) = *(_OWORD *)(v94 + 56);
    *(_OWORD *)(v93 + 72) = *(_OWORD *)(v94 + 72);
    v93[88] = v94[88];
    *((_OWORD *)v93 + 6) = *((_OWORD *)v94 + 6);
    v95 = *(int *)(v87 + 40);
    v96 = &v93[v95];
    v97 = &v94[v95];
    if (v122(&v94[v95], 1, v70))
    {
      v98 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v96, v97, v70);
      v87 = v120;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v96, 0, 1, v70);
    }
    v99 = v79[7];
    v100 = &v77[v99];
    v101 = &v78[v99];
    *(_OWORD *)v100 = *(_OWORD *)v101;
    v100[16] = v101[16];
    *(_OWORD *)(v100 + 24) = *(_OWORD *)(v101 + 24);
    v100[40] = v101[40];
    *((_QWORD *)v100 + 6) = *((_QWORD *)v101 + 6);
    *(_OWORD *)(v100 + 56) = *(_OWORD *)(v101 + 56);
    *(_OWORD *)(v100 + 72) = *(_OWORD *)(v101 + 72);
    v100[88] = v101[88];
    *((_OWORD *)v100 + 6) = *((_OWORD *)v101 + 6);
    v102 = *(int *)(v87 + 40);
    v103 = &v100[v102];
    v104 = &v101[v102];
    v125 = v80;
    if (v122(&v101[v102], 1, v70))
    {
      v105 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v103, v104, v70);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v103, 0, 1, v70);
    }
    v106 = v79[8];
    v107 = &v77[v106];
    v108 = &v78[v106];
    *(_OWORD *)v107 = *(_OWORD *)v108;
    v107[16] = v108[16];
    *(_OWORD *)(v107 + 24) = *(_OWORD *)(v108 + 24);
    v107[40] = v108[40];
    *((_QWORD *)v107 + 6) = *((_QWORD *)v108 + 6);
    *(_OWORD *)(v107 + 56) = *(_OWORD *)(v108 + 56);
    *(_OWORD *)(v107 + 72) = *(_OWORD *)(v108 + 72);
    v107[88] = v108[88];
    *((_OWORD *)v107 + 6) = *((_OWORD *)v108 + 6);
    v109 = *(int *)(v87 + 40);
    v110 = &v107[v109];
    v111 = &v108[v109];
    v82 = v126;
    if (v122(&v108[v109], 1, v70))
    {
      v112 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v110, v111, v70);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v110, 0, 1, v70);
    }
    v83 = v127;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v125 + 56))(v77, 0, 1, v79);
  }
  v113 = v83[9];
  *(_QWORD *)((char *)v75 + v83[8]) = *(_QWORD *)((char *)v82 + v83[8]);
  v114 = (uint64_t)v75 + v113;
  v115 = (uint64_t)v82 + v113;
  v116 = *(_QWORD *)(v115 + 8);
  *(_QWORD *)v114 = *(_QWORD *)v115;
  *(_QWORD *)(v114 + 8) = v116;
  *(_WORD *)(v114 + 16) = *(_WORD *)(v115 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v75;
}

uint64_t *sub_1908D6DF4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t *, uint64_t, uint64_t);
  int v9;
  int v10;
  void *v11;
  uint64_t v12;
  void (*v13)(uint64_t *, uint64_t *, uint64_t);
  id v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  uint64_t *v27;
  char *v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  char *v33;
  char *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int *v68;
  uint64_t v69;
  uint64_t (*v70)(char *, uint64_t, int *);
  int v71;
  int v72;
  uint64_t v73;
  char *v74;
  char *v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  void *v121;
  void *v122;
  id v123;
  uint64_t v124;
  char *v125;
  char *v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t (*v136)(char *, uint64_t, uint64_t);
  int v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  int *v142;
  uint64_t v143;
  uint64_t (*v144)(char *, uint64_t, int *);
  int v145;
  int v146;
  uint64_t v147;
  uint64_t *v148;
  size_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  uint64_t v170;
  char *v171;
  char *v172;
  int v173;
  int v174;
  uint64_t v175;
  char *v176;
  char *v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  int *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  uint64_t v217;
  char *v218;
  char *v219;
  int v220;
  int v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  uint64_t v230;
  char *v231;
  char *v232;
  int v233;
  int v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  char *v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  uint64_t v243;
  char *v244;
  char *v245;
  int v246;
  int v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  uint64_t *v252;
  uint64_t v253;
  char *v254;
  char *v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  uint64_t v260;
  char *v261;
  char *v262;
  int v263;
  int v264;
  uint64_t v265;
  char *v266;
  char *v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  uint64_t v272;
  char *v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  char *v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  __int128 v282;
  uint64_t v283;
  char *v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  char *v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  uint64_t v294;
  char *v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  char *v301;
  __int128 v302;
  __int128 v303;
  __int128 v304;
  __int128 v305;
  uint64_t v306;
  char *v307;
  char *v308;
  int v309;
  int v310;
  uint64_t v311;
  uint64_t v312;
  char *v313;
  char *v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  uint64_t v319;
  char *v320;
  char *v321;
  int v322;
  int v323;
  uint64_t v324;
  uint64_t v325;
  char *v326;
  char *v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  uint64_t v332;
  char *v333;
  char *v334;
  int v335;
  int v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  unsigned int (*v340)(char *, uint64_t, uint64_t);
  uint64_t v341;
  uint64_t *v342;
  uint64_t v343;
  uint64_t (*v344)(char *, uint64_t, uint64_t);
  uint64_t v345;
  int *v346;

  v6 = type metadata accessor for JindoViewCollection();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v342 = a2;
  v346 = a3;
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      v11 = (void *)a2[1];
      a1[1] = (uint64_t)v11;
      v12 = a2[5];
      a1[5] = v12;
      a1[6] = a2[6];
      v13 = **(void (***)(uint64_t *, uint64_t *, uint64_t))(v12 - 8);
      swift_retain();
      v14 = v11;
      v13(a1 + 2, a2 + 2, v12);
      v15 = *(int *)(v6 + 24);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      LOBYTE(v15) = *((_BYTE *)a2 + v15 + 16);
      *(_OWORD *)v16 = *(_OWORD *)v17;
      v16[16] = v15;
      LOBYTE(v15) = v17[40];
      *(_OWORD *)(v16 + 24) = *(_OWORD *)(v17 + 24);
      v16[40] = v15;
      *((_QWORD *)v16 + 6) = *((_QWORD *)v17 + 6);
      v18 = *(_OWORD *)(v17 + 56);
      v19 = *(_OWORD *)(v17 + 72);
      v16[88] = v17[88];
      *(_OWORD *)(v16 + 72) = v19;
      *(_OWORD *)(v16 + 56) = v18;
      *((_QWORD *)v16 + 12) = *((_QWORD *)v17 + 12);
      *((_QWORD *)v16 + 13) = *((_QWORD *)v17 + 13);
      v343 = type metadata accessor for MetricsRequest(0);
      v20 = *(int *)(v343 + 40);
      v21 = &v16[v20];
      v22 = &v17[v20];
      v23 = sub_190A46EE8();
      v24 = *(_QWORD *)(v23 - 8);
      v340 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      v338 = v24;
      if (v340(v22, 1, v23))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v47 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
      v48 = &v16[v47];
      v49 = &v17[v47];
      v50 = (int *)type metadata accessor for JindoMetricsDefinition(0);
      v51 = *((_QWORD *)v50 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v51 + 48))(v49, 1, v50))
      {
        v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        v337 = v51;
        *(_OWORD *)v48 = *(_OWORD *)v49;
        v53 = v50[5];
        v54 = &v48[v53];
        v55 = &v49[v53];
        v56 = *(_OWORD *)v55;
        v54[16] = v55[16];
        *(_OWORD *)v54 = v56;
        v57 = *(_OWORD *)(v55 + 24);
        v54[40] = v55[40];
        *(_OWORD *)(v54 + 24) = v57;
        *((_QWORD *)v54 + 6) = *((_QWORD *)v55 + 6);
        v58 = *(_OWORD *)(v55 + 56);
        v59 = *(_OWORD *)(v55 + 72);
        v54[88] = v55[88];
        *(_OWORD *)(v54 + 72) = v59;
        *(_OWORD *)(v54 + 56) = v58;
        *((_QWORD *)v54 + 12) = *((_QWORD *)v55 + 12);
        *((_QWORD *)v54 + 13) = *((_QWORD *)v55 + 13);
        v60 = *(int *)(v343 + 40);
        v61 = &v54[v60];
        v62 = &v55[v60];
        if (v340(&v55[v60], 1, v23))
        {
          v63 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
          memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v61, v62, v23);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v61, 0, 1, v23);
        }
        v85 = v50[6];
        v86 = &v48[v85];
        v87 = &v49[v85];
        v88 = *(_OWORD *)v87;
        v86[16] = v87[16];
        *(_OWORD *)v86 = v88;
        v89 = *(_OWORD *)(v87 + 24);
        v86[40] = v87[40];
        *(_OWORD *)(v86 + 24) = v89;
        *((_QWORD *)v86 + 6) = *((_QWORD *)v87 + 6);
        v90 = *(_OWORD *)(v87 + 56);
        v91 = *(_OWORD *)(v87 + 72);
        v86[88] = v87[88];
        *(_OWORD *)(v86 + 72) = v91;
        *(_OWORD *)(v86 + 56) = v90;
        *((_QWORD *)v86 + 12) = *((_QWORD *)v87 + 12);
        *((_QWORD *)v86 + 13) = *((_QWORD *)v87 + 13);
        v92 = *(int *)(v343 + 40);
        v93 = &v86[v92];
        v94 = &v87[v92];
        if (v340(&v87[v92], 1, v23))
        {
          v95 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
          memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v93, v94, v23);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v93, 0, 1, v23);
        }
        v96 = v50[7];
        v97 = &v48[v96];
        v98 = &v49[v96];
        v99 = *(_OWORD *)v98;
        v97[16] = v98[16];
        *(_OWORD *)v97 = v99;
        v100 = *(_OWORD *)(v98 + 24);
        v97[40] = v98[40];
        *(_OWORD *)(v97 + 24) = v100;
        *((_QWORD *)v97 + 6) = *((_QWORD *)v98 + 6);
        v101 = *(_OWORD *)(v98 + 56);
        v102 = *(_OWORD *)(v98 + 72);
        v97[88] = v98[88];
        *(_OWORD *)(v97 + 72) = v102;
        *(_OWORD *)(v97 + 56) = v101;
        *((_QWORD *)v97 + 12) = *((_QWORD *)v98 + 12);
        *((_QWORD *)v97 + 13) = *((_QWORD *)v98 + 13);
        v103 = *(int *)(v343 + 40);
        v104 = &v97[v103];
        v105 = &v98[v103];
        if (v340(&v98[v103], 1, v23))
        {
          v106 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
          memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v104, v105, v23);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v104, 0, 1, v23);
        }
        v107 = v50[8];
        v108 = &v48[v107];
        v109 = &v49[v107];
        v110 = *(_OWORD *)v109;
        v108[16] = v109[16];
        *(_OWORD *)v108 = v110;
        v111 = *(_OWORD *)(v109 + 24);
        v108[40] = v109[40];
        *(_OWORD *)(v108 + 24) = v111;
        *((_QWORD *)v108 + 6) = *((_QWORD *)v109 + 6);
        v112 = *(_OWORD *)(v109 + 56);
        v113 = *(_OWORD *)(v109 + 72);
        v108[88] = v109[88];
        *(_OWORD *)(v108 + 72) = v113;
        *(_OWORD *)(v108 + 56) = v112;
        *((_QWORD *)v108 + 12) = *((_QWORD *)v109 + 12);
        *((_QWORD *)v108 + 13) = *((_QWORD *)v109 + 13);
        v114 = *(int *)(v343 + 40);
        v115 = &v108[v114];
        v116 = &v109[v114];
        a2 = v342;
        if (v340(&v109[v114], 1, v23))
        {
          v117 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
          memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v338 + 16))(v115, v116, v23);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v338 + 56))(v115, 0, 1, v23);
        }
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v337 + 56))(v48, 0, 1, v50);
      }
      a3 = v346;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_39;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_1908B5150((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for JindoViewCollection);
LABEL_7:
    v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6430) - 8) + 64);
    v27 = a1;
    v28 = (char *)a2;
    goto LABEL_8;
  }
  *a1 = *a2;
  swift_retain();
  swift_release();
  v29 = (void *)a2[1];
  v30 = (void *)a1[1];
  a1[1] = (uint64_t)v29;
  v31 = v29;

  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  v32 = *(int *)(v6 + 24);
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *(_OWORD *)((char *)a2 + v32);
  v33[16] = *((_BYTE *)a2 + v32 + 16);
  *(_OWORD *)v33 = v35;
  v36 = *(_OWORD *)((char *)a2 + v32 + 24);
  v33[40] = *((_BYTE *)a2 + v32 + 40);
  *(_OWORD *)(v33 + 24) = v36;
  *((_QWORD *)v33 + 6) = *(uint64_t *)((char *)a2 + v32 + 48);
  v37 = *(_OWORD *)((char *)a2 + v32 + 56);
  v38 = *(_OWORD *)((char *)a2 + v32 + 72);
  v33[88] = *((_BYTE *)a2 + v32 + 88);
  *(_OWORD *)(v33 + 72) = v38;
  *(_OWORD *)(v33 + 56) = v37;
  *((_QWORD *)v33 + 12) = *(uint64_t *)((char *)a2 + v32 + 96);
  *((_QWORD *)v33 + 13) = *(uint64_t *)((char *)a2 + v32 + 104);
  v341 = type metadata accessor for MetricsRequest(0);
  v39 = *(int *)(v341 + 40);
  v40 = &v33[v39];
  v41 = &v34[v39];
  v42 = sub_190A46EE8();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
  v45 = v44(v40, 1, v42);
  v344 = v44;
  v46 = v44(v41, 1, v42);
  v339 = v43;
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v40, v42);
LABEL_19:
    v64 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v43 + 24))(v40, v41, v42);
LABEL_20:
  v65 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v66 = &v33[v65];
  v67 = &v34[v65];
  v68 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v69 = *((_QWORD *)v68 - 1);
  v70 = *(uint64_t (**)(char *, uint64_t, int *))(v69 + 48);
  v71 = v70(v66, 1, v68);
  v72 = v70(v67, 1, v68);
  if (!v71)
  {
    if (v72)
    {
      sub_1908B5150((uint64_t)v66, type metadata accessor for JindoMetricsDefinition);
      goto LABEL_26;
    }
    v252 = a2;
    *(_QWORD *)v66 = *(_QWORD *)v67;
    *((_QWORD *)v66 + 1) = *((_QWORD *)v67 + 1);
    v253 = v68[5];
    v254 = &v66[v253];
    v255 = &v67[v253];
    v256 = *(_OWORD *)v255;
    v254[16] = v255[16];
    *(_OWORD *)v254 = v256;
    v257 = *(_OWORD *)(v255 + 24);
    v254[40] = v255[40];
    *(_OWORD *)(v254 + 24) = v257;
    *((_QWORD *)v254 + 6) = *((_QWORD *)v255 + 6);
    v258 = *(_OWORD *)(v255 + 56);
    v259 = *(_OWORD *)(v255 + 72);
    v254[88] = v255[88];
    *(_OWORD *)(v254 + 72) = v259;
    *(_OWORD *)(v254 + 56) = v258;
    *((_QWORD *)v254 + 12) = *((_QWORD *)v255 + 12);
    *((_QWORD *)v254 + 13) = *((_QWORD *)v255 + 13);
    v260 = *(int *)(v341 + 40);
    v261 = &v254[v260];
    v262 = &v255[v260];
    v263 = v44(&v254[v260], 1, v42);
    v264 = v44(v262, 1, v42);
    if (v263)
    {
      if (!v264)
      {
        (*(void (**)(char *, char *, uint64_t))(v339 + 16))(v261, v262, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v339 + 56))(v261, 0, 1, v42);
        goto LABEL_113;
      }
    }
    else
    {
      if (!v264)
      {
        (*(void (**)(char *, char *, uint64_t))(v339 + 24))(v261, v262, v42);
LABEL_113:
        v299 = v68[6];
        v300 = &v66[v299];
        v301 = &v67[v299];
        v302 = *(_OWORD *)v301;
        v300[16] = v301[16];
        *(_OWORD *)v300 = v302;
        v303 = *(_OWORD *)(v301 + 24);
        v300[40] = v301[40];
        *(_OWORD *)(v300 + 24) = v303;
        *((_QWORD *)v300 + 6) = *((_QWORD *)v301 + 6);
        v304 = *(_OWORD *)(v301 + 56);
        v305 = *(_OWORD *)(v301 + 72);
        v300[88] = v301[88];
        *(_OWORD *)(v300 + 72) = v305;
        *(_OWORD *)(v300 + 56) = v304;
        *((_QWORD *)v300 + 12) = *((_QWORD *)v301 + 12);
        *((_QWORD *)v300 + 13) = *((_QWORD *)v301 + 13);
        v306 = *(int *)(v341 + 40);
        v307 = &v300[v306];
        v308 = &v301[v306];
        v309 = v44(&v300[v306], 1, v42);
        v310 = v44(v308, 1, v42);
        if (v309)
        {
          if (!v310)
          {
            (*(void (**)(char *, char *, uint64_t))(v339 + 16))(v307, v308, v42);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v339 + 56))(v307, 0, 1, v42);
            goto LABEL_119;
          }
        }
        else
        {
          if (!v310)
          {
            (*(void (**)(char *, char *, uint64_t))(v339 + 24))(v307, v308, v42);
LABEL_119:
            v312 = v68[7];
            v313 = &v66[v312];
            v314 = &v67[v312];
            v315 = *(_OWORD *)v314;
            v313[16] = v314[16];
            *(_OWORD *)v313 = v315;
            v316 = *(_OWORD *)(v314 + 24);
            v313[40] = v314[40];
            *(_OWORD *)(v313 + 24) = v316;
            *((_QWORD *)v313 + 6) = *((_QWORD *)v314 + 6);
            v317 = *(_OWORD *)(v314 + 56);
            v318 = *(_OWORD *)(v314 + 72);
            v313[88] = v314[88];
            *(_OWORD *)(v313 + 72) = v318;
            *(_OWORD *)(v313 + 56) = v317;
            *((_QWORD *)v313 + 12) = *((_QWORD *)v314 + 12);
            *((_QWORD *)v313 + 13) = *((_QWORD *)v314 + 13);
            v319 = *(int *)(v341 + 40);
            v320 = &v313[v319];
            v321 = &v314[v319];
            v322 = v44(&v313[v319], 1, v42);
            v323 = v44(v321, 1, v42);
            if (v322)
            {
              if (!v323)
              {
                (*(void (**)(char *, char *, uint64_t))(v339 + 16))(v320, v321, v42);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v339 + 56))(v320, 0, 1, v42);
LABEL_125:
                v325 = v68[8];
                v326 = &v66[v325];
                v327 = &v67[v325];
                v328 = *(_OWORD *)v327;
                v326[16] = v327[16];
                *(_OWORD *)v326 = v328;
                v329 = *(_OWORD *)(v327 + 24);
                v326[40] = v327[40];
                *(_OWORD *)(v326 + 24) = v329;
                *((_QWORD *)v326 + 6) = *((_QWORD *)v327 + 6);
                v330 = *(_OWORD *)(v327 + 56);
                v331 = *(_OWORD *)(v327 + 72);
                v326[88] = v327[88];
                *(_OWORD *)(v326 + 72) = v331;
                *(_OWORD *)(v326 + 56) = v330;
                *((_QWORD *)v326 + 12) = *((_QWORD *)v327 + 12);
                *((_QWORD *)v326 + 13) = *((_QWORD *)v327 + 13);
                v332 = *(int *)(v341 + 40);
                v333 = &v326[v332];
                v334 = &v327[v332];
                v335 = v344(&v326[v332], 1, v42);
                v336 = v344(v334, 1, v42);
                a2 = v252;
                if (v335)
                {
                  a3 = v346;
                  if (!v336)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v339 + 16))(v333, v334, v42);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v339 + 56))(v333, 0, 1, v42);
                    goto LABEL_39;
                  }
                }
                else
                {
                  a3 = v346;
                  if (!v336)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v339 + 24))(v333, v334, v42);
                    goto LABEL_39;
                  }
                  (*(void (**)(char *, uint64_t))(v339 + 8))(v333, v42);
                }
                v26 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0) - 8) + 64);
                v27 = (uint64_t *)v333;
                v28 = v334;
LABEL_8:
                memcpy(v27, v28, v26);
                goto LABEL_39;
              }
            }
            else
            {
              if (!v323)
              {
                (*(void (**)(char *, char *, uint64_t))(v339 + 24))(v320, v321, v42);
                goto LABEL_125;
              }
              (*(void (**)(char *, uint64_t))(v339 + 8))(v320, v42);
            }
            v324 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
            memcpy(v320, v321, *(_QWORD *)(*(_QWORD *)(v324 - 8) + 64));
            goto LABEL_125;
          }
          (*(void (**)(char *, uint64_t))(v339 + 8))(v307, v42);
        }
        v311 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v307, v308, *(_QWORD *)(*(_QWORD *)(v311 - 8) + 64));
        goto LABEL_119;
      }
      (*(void (**)(char *, uint64_t))(v339 + 8))(v261, v42);
    }
    v298 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v261, v262, *(_QWORD *)(*(_QWORD *)(v298 - 8) + 64));
    goto LABEL_113;
  }
  if (v72)
  {
LABEL_26:
    v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    a3 = v346;
    goto LABEL_39;
  }
  *(_OWORD *)v66 = *(_OWORD *)v67;
  v73 = v68[5];
  v74 = &v66[v73];
  v75 = &v67[v73];
  v76 = *(_OWORD *)v75;
  v74[16] = v75[16];
  *(_OWORD *)v74 = v76;
  v77 = *(_OWORD *)(v75 + 24);
  v74[40] = v75[40];
  *(_OWORD *)(v74 + 24) = v77;
  *((_QWORD *)v74 + 6) = *((_QWORD *)v75 + 6);
  v78 = *(_OWORD *)(v75 + 56);
  v79 = *(_OWORD *)(v75 + 72);
  v74[88] = v75[88];
  *(_OWORD *)(v74 + 72) = v79;
  *(_OWORD *)(v74 + 56) = v78;
  *((_QWORD *)v74 + 12) = *((_QWORD *)v75 + 12);
  *((_QWORD *)v74 + 13) = *((_QWORD *)v75 + 13);
  v80 = *(int *)(v341 + 40);
  v81 = &v74[v80];
  v82 = &v75[v80];
  if (v44(&v75[v80], 1, v42))
  {
    v83 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v339 + 16))(v81, v82, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v339 + 56))(v81, 0, 1, v42);
  }
  v265 = v68[6];
  v266 = &v66[v265];
  v267 = &v67[v265];
  v268 = *(_OWORD *)v267;
  v266[16] = v267[16];
  *(_OWORD *)v266 = v268;
  v269 = *(_OWORD *)(v267 + 24);
  v266[40] = v267[40];
  *(_OWORD *)(v266 + 24) = v269;
  *((_QWORD *)v266 + 6) = *((_QWORD *)v267 + 6);
  v270 = *(_OWORD *)(v267 + 56);
  v271 = *(_OWORD *)(v267 + 72);
  v266[88] = v267[88];
  *(_OWORD *)(v266 + 72) = v271;
  *(_OWORD *)(v266 + 56) = v270;
  *((_QWORD *)v266 + 12) = *((_QWORD *)v267 + 12);
  *((_QWORD *)v266 + 13) = *((_QWORD *)v267 + 13);
  v272 = *(int *)(v341 + 40);
  v273 = &v266[v272];
  v274 = &v267[v272];
  if (v44(&v267[v272], 1, v42))
  {
    v275 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v273, v274, *(_QWORD *)(*(_QWORD *)(v275 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v339 + 16))(v273, v274, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v339 + 56))(v273, 0, 1, v42);
  }
  v276 = v68[7];
  v277 = &v66[v276];
  v278 = &v67[v276];
  v279 = *(_OWORD *)v278;
  v277[16] = v278[16];
  *(_OWORD *)v277 = v279;
  v280 = *(_OWORD *)(v278 + 24);
  v277[40] = v278[40];
  *(_OWORD *)(v277 + 24) = v280;
  *((_QWORD *)v277 + 6) = *((_QWORD *)v278 + 6);
  v281 = *(_OWORD *)(v278 + 56);
  v282 = *(_OWORD *)(v278 + 72);
  v277[88] = v278[88];
  *(_OWORD *)(v277 + 72) = v282;
  *(_OWORD *)(v277 + 56) = v281;
  *((_QWORD *)v277 + 12) = *((_QWORD *)v278 + 12);
  *((_QWORD *)v277 + 13) = *((_QWORD *)v278 + 13);
  v283 = *(int *)(v341 + 40);
  v284 = &v277[v283];
  v285 = &v278[v283];
  if (v44(&v278[v283], 1, v42))
  {
    v286 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v284, v285, *(_QWORD *)(*(_QWORD *)(v286 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v339 + 16))(v284, v285, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v339 + 56))(v284, 0, 1, v42);
  }
  v287 = v68[8];
  v288 = &v66[v287];
  v289 = &v67[v287];
  v290 = *(_OWORD *)v289;
  v288[16] = v289[16];
  *(_OWORD *)v288 = v290;
  v291 = *(_OWORD *)(v289 + 24);
  v288[40] = v289[40];
  *(_OWORD *)(v288 + 24) = v291;
  *((_QWORD *)v288 + 6) = *((_QWORD *)v289 + 6);
  v292 = *(_OWORD *)(v289 + 56);
  v293 = *(_OWORD *)(v289 + 72);
  v288[88] = v289[88];
  *(_OWORD *)(v288 + 72) = v293;
  *(_OWORD *)(v288 + 56) = v292;
  *((_QWORD *)v288 + 12) = *((_QWORD *)v289 + 12);
  *((_QWORD *)v288 + 13) = *((_QWORD *)v289 + 13);
  v294 = *(int *)(v341 + 40);
  v295 = &v288[v294];
  v296 = &v289[v294];
  a2 = v342;
  if (v344(&v289[v294], 1, v42))
  {
    v297 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v295, v296, *(_QWORD *)(*(_QWORD *)(v297 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v339 + 16))(v295, v296, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v339 + 56))(v295, 0, 1, v42);
  }
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v69 + 56))(v66, 0, 1, v68);
  a3 = v346;
LABEL_39:
  v118 = a3[5];
  v119 = (char *)a1 + v118;
  v120 = (char *)a2 + v118;
  *(uint64_t *)((char *)a1 + v118) = *(uint64_t *)((char *)a2 + v118);
  swift_retain();
  swift_release();
  v121 = (void *)*((_QWORD *)v120 + 1);
  v122 = (void *)*((_QWORD *)v119 + 1);
  *((_QWORD *)v119 + 1) = v121;
  v123 = v121;

  *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
  swift_retain();
  swift_release();
  v124 = a3[7];
  v125 = (char *)a1 + v124;
  v126 = (char *)a2 + v124;
  v127 = *(_OWORD *)((char *)a2 + v124);
  v125[16] = *((_BYTE *)a2 + v124 + 16);
  *(_OWORD *)v125 = v127;
  v128 = *(_OWORD *)((char *)a2 + v124 + 24);
  v125[40] = *((_BYTE *)a2 + v124 + 40);
  *(_OWORD *)(v125 + 24) = v128;
  *((_QWORD *)v125 + 6) = *(uint64_t *)((char *)a2 + v124 + 48);
  v129 = *(_OWORD *)((char *)a2 + v124 + 56);
  v130 = *(_OWORD *)((char *)a2 + v124 + 72);
  v125[88] = *((_BYTE *)a2 + v124 + 88);
  *(_OWORD *)(v125 + 72) = v130;
  *(_OWORD *)(v125 + 56) = v129;
  *((_QWORD *)v125 + 12) = *(uint64_t *)((char *)a2 + v124 + 96);
  *((_QWORD *)v125 + 13) = *(uint64_t *)((char *)a2 + v124 + 104);
  v131 = type metadata accessor for MetricsRequest(0);
  v132 = *(int *)(v131 + 40);
  v133 = &v125[v132];
  v134 = &v126[v132];
  v135 = sub_190A46EE8();
  v345 = *(_QWORD *)(v135 - 8);
  v136 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v345 + 48);
  LODWORD(v122) = v136(v133, 1, v135);
  v137 = v136(v134, 1, v135);
  if ((_DWORD)v122)
  {
    if (!v137)
    {
      (*(void (**)(char *, char *, uint64_t))(v345 + 16))(v133, v134, v135);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v345 + 56))(v133, 0, 1, v135);
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  if (v137)
  {
    (*(void (**)(char *, uint64_t))(v345 + 8))(v133, v135);
LABEL_44:
    v138 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
    goto LABEL_45;
  }
  (*(void (**)(char *, char *, uint64_t))(v345 + 24))(v133, v134, v135);
LABEL_45:
  v139 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v140 = &v125[v139];
  v141 = &v126[v139];
  v142 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v143 = *((_QWORD *)v142 - 1);
  v144 = *(uint64_t (**)(char *, uint64_t, int *))(v143 + 48);
  v145 = v144(v140, 1, v142);
  v146 = v144(v141, 1, v142);
  if (!v145)
  {
    v148 = v342;
    if (v146)
    {
      sub_1908B5150((uint64_t)v140, type metadata accessor for JindoMetricsDefinition);
      v149 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0) - 8) + 64);
      v150 = v140;
      v151 = v141;
      goto LABEL_88;
    }
    *(_QWORD *)v140 = *(_QWORD *)v141;
    *((_QWORD *)v140 + 1) = *((_QWORD *)v141 + 1);
    v163 = v142[5];
    v164 = &v140[v163];
    v165 = &v141[v163];
    v166 = *(_OWORD *)v165;
    v164[16] = v165[16];
    *(_OWORD *)v164 = v166;
    v167 = *(_OWORD *)(v165 + 24);
    v164[40] = v165[40];
    *(_OWORD *)(v164 + 24) = v167;
    *((_QWORD *)v164 + 6) = *((_QWORD *)v165 + 6);
    v168 = *(_OWORD *)(v165 + 56);
    v169 = *(_OWORD *)(v165 + 72);
    v164[88] = v165[88];
    *(_OWORD *)(v164 + 72) = v169;
    *(_OWORD *)(v164 + 56) = v168;
    *((_QWORD *)v164 + 12) = *((_QWORD *)v165 + 12);
    *((_QWORD *)v164 + 13) = *((_QWORD *)v165 + 13);
    v170 = *(int *)(v131 + 40);
    v171 = &v164[v170];
    v172 = &v165[v170];
    v173 = v136(&v164[v170], 1, v135);
    v174 = v136(v172, 1, v135);
    if (v173)
    {
      if (!v174)
      {
        (*(void (**)(char *, char *, uint64_t))(v345 + 16))(v171, v172, v135);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v345 + 56))(v171, 0, 1, v135);
        goto LABEL_70;
      }
    }
    else
    {
      if (!v174)
      {
        (*(void (**)(char *, char *, uint64_t))(v345 + 24))(v171, v172, v135);
LABEL_70:
        v210 = v142[6];
        v211 = &v140[v210];
        v212 = &v141[v210];
        v213 = *(_OWORD *)v212;
        v211[16] = v212[16];
        *(_OWORD *)v211 = v213;
        v214 = *(_OWORD *)(v212 + 24);
        v211[40] = v212[40];
        *(_OWORD *)(v211 + 24) = v214;
        *((_QWORD *)v211 + 6) = *((_QWORD *)v212 + 6);
        v215 = *(_OWORD *)(v212 + 56);
        v216 = *(_OWORD *)(v212 + 72);
        v211[88] = v212[88];
        *(_OWORD *)(v211 + 72) = v216;
        *(_OWORD *)(v211 + 56) = v215;
        *((_QWORD *)v211 + 12) = *((_QWORD *)v212 + 12);
        *((_QWORD *)v211 + 13) = *((_QWORD *)v212 + 13);
        v217 = *(int *)(v131 + 40);
        v218 = &v211[v217];
        v219 = &v212[v217];
        v220 = v136(&v211[v217], 1, v135);
        v221 = v136(v219, 1, v135);
        if (v220)
        {
          if (!v221)
          {
            (*(void (**)(char *, char *, uint64_t))(v345 + 16))(v218, v219, v135);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v345 + 56))(v218, 0, 1, v135);
            goto LABEL_76;
          }
        }
        else
        {
          if (!v221)
          {
            (*(void (**)(char *, char *, uint64_t))(v345 + 24))(v218, v219, v135);
LABEL_76:
            v223 = v142[7];
            v224 = &v140[v223];
            v225 = &v141[v223];
            v226 = *(_OWORD *)v225;
            v224[16] = v225[16];
            *(_OWORD *)v224 = v226;
            v227 = *(_OWORD *)(v225 + 24);
            v224[40] = v225[40];
            *(_OWORD *)(v224 + 24) = v227;
            *((_QWORD *)v224 + 6) = *((_QWORD *)v225 + 6);
            v228 = *(_OWORD *)(v225 + 56);
            v229 = *(_OWORD *)(v225 + 72);
            v224[88] = v225[88];
            *(_OWORD *)(v224 + 72) = v229;
            *(_OWORD *)(v224 + 56) = v228;
            *((_QWORD *)v224 + 12) = *((_QWORD *)v225 + 12);
            *((_QWORD *)v224 + 13) = *((_QWORD *)v225 + 13);
            v230 = *(int *)(v131 + 40);
            v231 = &v224[v230];
            v232 = &v225[v230];
            v233 = v136(&v224[v230], 1, v135);
            v234 = v136(v232, 1, v135);
            if (v233)
            {
              if (!v234)
              {
                (*(void (**)(char *, char *, uint64_t))(v345 + 16))(v231, v232, v135);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v345 + 56))(v231, 0, 1, v135);
LABEL_82:
                v148 = v342;
                v236 = v142[8];
                v237 = &v140[v236];
                v238 = &v141[v236];
                v239 = *(_OWORD *)v238;
                v237[16] = v238[16];
                *(_OWORD *)v237 = v239;
                v240 = *(_OWORD *)(v238 + 24);
                v237[40] = v238[40];
                *(_OWORD *)(v237 + 24) = v240;
                *((_QWORD *)v237 + 6) = *((_QWORD *)v238 + 6);
                v241 = *(_OWORD *)(v238 + 56);
                v242 = *(_OWORD *)(v238 + 72);
                v237[88] = v238[88];
                *(_OWORD *)(v237 + 72) = v242;
                *(_OWORD *)(v237 + 56) = v241;
                *((_QWORD *)v237 + 12) = *((_QWORD *)v238 + 12);
                *((_QWORD *)v237 + 13) = *((_QWORD *)v238 + 13);
                v243 = *(int *)(v131 + 40);
                v244 = &v237[v243];
                v245 = &v238[v243];
                v246 = v136(&v237[v243], 1, v135);
                v247 = v136(v245, 1, v135);
                if (v246)
                {
                  if (!v247)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v345 + 16))(v244, v245, v135);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v345 + 56))(v244, 0, 1, v135);
                    goto LABEL_89;
                  }
                }
                else
                {
                  if (!v247)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v345 + 24))(v244, v245, v135);
                    goto LABEL_89;
                  }
                  (*(void (**)(char *, uint64_t))(v345 + 8))(v244, v135);
                }
                v149 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0) - 8)
                                 + 64);
                v150 = v244;
                v151 = v245;
LABEL_88:
                memcpy(v150, v151, v149);
                goto LABEL_89;
              }
            }
            else
            {
              if (!v234)
              {
                (*(void (**)(char *, char *, uint64_t))(v345 + 24))(v231, v232, v135);
                goto LABEL_82;
              }
              (*(void (**)(char *, uint64_t))(v345 + 8))(v231, v135);
            }
            v235 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
            memcpy(v231, v232, *(_QWORD *)(*(_QWORD *)(v235 - 8) + 64));
            goto LABEL_82;
          }
          (*(void (**)(char *, uint64_t))(v345 + 8))(v218, v135);
        }
        v222 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
        goto LABEL_76;
      }
      (*(void (**)(char *, uint64_t))(v345 + 8))(v171, v135);
    }
    v209 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v171, v172, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
    goto LABEL_70;
  }
  if (v146)
  {
    v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
    v148 = v342;
LABEL_89:
    v208 = v346;
    goto LABEL_90;
  }
  *(_OWORD *)v140 = *(_OWORD *)v141;
  v152 = v142[5];
  v153 = &v140[v152];
  v154 = &v141[v152];
  v155 = *(_OWORD *)v154;
  v153[16] = v154[16];
  *(_OWORD *)v153 = v155;
  v156 = *(_OWORD *)(v154 + 24);
  v153[40] = v154[40];
  *(_OWORD *)(v153 + 24) = v156;
  *((_QWORD *)v153 + 6) = *((_QWORD *)v154 + 6);
  v157 = *(_OWORD *)(v154 + 56);
  v158 = *(_OWORD *)(v154 + 72);
  v153[88] = v154[88];
  *(_OWORD *)(v153 + 72) = v158;
  *(_OWORD *)(v153 + 56) = v157;
  *((_QWORD *)v153 + 12) = *((_QWORD *)v154 + 12);
  *((_QWORD *)v153 + 13) = *((_QWORD *)v154 + 13);
  v159 = *(int *)(v131 + 40);
  v160 = &v153[v159];
  v161 = &v154[v159];
  if (v136(&v154[v159], 1, v135))
  {
    v162 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v160, v161, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v345 + 16))(v160, v161, v135);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v345 + 56))(v160, 0, 1, v135);
  }
  v175 = v142[6];
  v176 = &v140[v175];
  v177 = &v141[v175];
  v178 = *(_OWORD *)v177;
  v176[16] = v177[16];
  *(_OWORD *)v176 = v178;
  v179 = *(_OWORD *)(v177 + 24);
  v176[40] = v177[40];
  *(_OWORD *)(v176 + 24) = v179;
  *((_QWORD *)v176 + 6) = *((_QWORD *)v177 + 6);
  v180 = *(_OWORD *)(v177 + 56);
  v181 = *(_OWORD *)(v177 + 72);
  v176[88] = v177[88];
  *(_OWORD *)(v176 + 72) = v181;
  *(_OWORD *)(v176 + 56) = v180;
  *((_QWORD *)v176 + 12) = *((_QWORD *)v177 + 12);
  *((_QWORD *)v176 + 13) = *((_QWORD *)v177 + 13);
  v182 = *(int *)(v131 + 40);
  v183 = &v176[v182];
  v184 = &v177[v182];
  if (v136(&v177[v182], 1, v135))
  {
    v185 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v183, v184, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v345 + 16))(v183, v184, v135);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v345 + 56))(v183, 0, 1, v135);
  }
  v186 = v142[7];
  v187 = &v140[v186];
  v188 = &v141[v186];
  v189 = *(_OWORD *)v188;
  v187[16] = v188[16];
  *(_OWORD *)v187 = v189;
  v190 = *(_OWORD *)(v188 + 24);
  v187[40] = v188[40];
  *(_OWORD *)(v187 + 24) = v190;
  *((_QWORD *)v187 + 6) = *((_QWORD *)v188 + 6);
  v191 = *(_OWORD *)(v188 + 56);
  v192 = *(_OWORD *)(v188 + 72);
  v187[88] = v188[88];
  *(_OWORD *)(v187 + 72) = v192;
  *(_OWORD *)(v187 + 56) = v191;
  *((_QWORD *)v187 + 12) = *((_QWORD *)v188 + 12);
  *((_QWORD *)v187 + 13) = *((_QWORD *)v188 + 13);
  v193 = *(int *)(v131 + 40);
  v194 = &v187[v193];
  v195 = &v188[v193];
  if (v136(&v188[v193], 1, v135))
  {
    v196 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v345 + 16))(v194, v195, v135);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v345 + 56))(v194, 0, 1, v135);
  }
  v197 = v142[8];
  v198 = &v140[v197];
  v199 = &v141[v197];
  v200 = *(_OWORD *)v199;
  v198[16] = v199[16];
  *(_OWORD *)v198 = v200;
  v201 = *(_OWORD *)(v199 + 24);
  v198[40] = v199[40];
  *(_OWORD *)(v198 + 24) = v201;
  *((_QWORD *)v198 + 6) = *((_QWORD *)v199 + 6);
  v202 = *(_OWORD *)(v199 + 56);
  v203 = *(_OWORD *)(v199 + 72);
  v198[88] = v199[88];
  *(_OWORD *)(v198 + 72) = v203;
  *(_OWORD *)(v198 + 56) = v202;
  *((_QWORD *)v198 + 12) = *((_QWORD *)v199 + 12);
  *((_QWORD *)v198 + 13) = *((_QWORD *)v199 + 13);
  v204 = *(int *)(v131 + 40);
  v205 = &v198[v204];
  v206 = &v199[v204];
  if (v136(&v199[v204], 1, v135))
  {
    v207 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v205, v206, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v345 + 16))(v205, v206, v135);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v345 + 56))(v205, 0, 1, v135);
  }
  v208 = v346;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v143 + 56))(v140, 0, 1, v142);
  v148 = v342;
LABEL_90:
  *(uint64_t *)((char *)a1 + v208[8]) = *(uint64_t *)((char *)v148 + v208[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v248 = v208[9];
  v249 = (char *)a1 + v248;
  v250 = (uint64_t)v148 + v248;
  *(_QWORD *)v249 = *(uint64_t *)((char *)v148 + v248);
  *((_QWORD *)v249 + 1) = *(uint64_t *)((char *)v148 + v248 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v249[16] = *(_BYTE *)(v250 + 16);
  v249[17] = *(_BYTE *)(v250 + 17);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

_OWORD *sub_1908D8A54(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unsigned int (*v106)(char *, uint64_t, uint64_t);
  uint64_t v107;
  int *v108;
  int *v109;
  uint64_t v110;
  unsigned int (*v111)(char *, uint64_t, uint64_t);

  v6 = type metadata accessor for JindoViewCollection();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6430);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v105 = v7;
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    a1[2] = a2[2];
    *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
    v10 = *(int *)(v6 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    *(_OWORD *)v11 = *(_OWORD *)((char *)a2 + v10);
    v11[16] = *((_BYTE *)a2 + v10 + 16);
    *(_OWORD *)(v11 + 24) = *(_OWORD *)((char *)a2 + v10 + 24);
    v11[40] = *((_BYTE *)a2 + v10 + 40);
    *((_QWORD *)v11 + 6) = *(_QWORD *)((char *)a2 + v10 + 48);
    *(_OWORD *)(v11 + 56) = *(_OWORD *)((char *)a2 + v10 + 56);
    *(_OWORD *)(v11 + 72) = *(_OWORD *)((char *)a2 + v10 + 72);
    v11[88] = *((_BYTE *)a2 + v10 + 88);
    *((_OWORD *)v11 + 6) = *(_OWORD *)((char *)a2 + v10 + 96);
    v110 = type metadata accessor for MetricsRequest(0);
    v13 = *(int *)(v110 + 40);
    v14 = &v11[v13];
    v15 = &v12[v13];
    v16 = sub_190A46EE8();
    v17 = *(_QWORD *)(v16 - 8);
    v106 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v104 = v17;
    if (v106(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v19 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
    v20 = &v11[v19];
    v21 = &v12[v19];
    v22 = (int *)type metadata accessor for JindoMetricsDefinition(0);
    v23 = *((_QWORD *)v22 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      v25 = v105;
    }
    else
    {
      v103 = v23;
      v108 = a3;
      *(_OWORD *)v20 = *(_OWORD *)v21;
      v26 = v22[5];
      v27 = &v20[v26];
      v28 = &v21[v26];
      v27[16] = v28[16];
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *(_OWORD *)(v27 + 24) = *(_OWORD *)(v28 + 24);
      v27[40] = v28[40];
      *((_QWORD *)v27 + 6) = *((_QWORD *)v28 + 6);
      *(_OWORD *)(v27 + 56) = *(_OWORD *)(v28 + 56);
      *(_OWORD *)(v27 + 72) = *(_OWORD *)(v28 + 72);
      v27[88] = v28[88];
      *((_OWORD *)v27 + 6) = *((_OWORD *)v28 + 6);
      v29 = *(int *)(v110 + 40);
      v30 = &v27[v29];
      v31 = &v28[v29];
      if (v106(&v28[v29], 1, v16))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v30, v31, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v30, 0, 1, v16);
      }
      v33 = v22[6];
      v34 = &v20[v33];
      v35 = &v21[v33];
      *(_OWORD *)v34 = *(_OWORD *)v35;
      v34[16] = v35[16];
      *(_OWORD *)(v34 + 24) = *(_OWORD *)(v35 + 24);
      v34[40] = v35[40];
      *((_QWORD *)v34 + 6) = *((_QWORD *)v35 + 6);
      *(_OWORD *)(v34 + 56) = *(_OWORD *)(v35 + 56);
      *(_OWORD *)(v34 + 72) = *(_OWORD *)(v35 + 72);
      v34[88] = v35[88];
      *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
      v36 = *(int *)(v110 + 40);
      v37 = &v34[v36];
      v38 = &v35[v36];
      if (v106(&v35[v36], 1, v16))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v37, v38, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v37, 0, 1, v16);
      }
      v40 = v22[7];
      v41 = &v20[v40];
      v42 = &v21[v40];
      *(_OWORD *)v41 = *(_OWORD *)v42;
      v41[16] = v42[16];
      *(_OWORD *)(v41 + 24) = *(_OWORD *)(v42 + 24);
      v41[40] = v42[40];
      *((_QWORD *)v41 + 6) = *((_QWORD *)v42 + 6);
      *(_OWORD *)(v41 + 56) = *(_OWORD *)(v42 + 56);
      *(_OWORD *)(v41 + 72) = *(_OWORD *)(v42 + 72);
      v41[88] = v42[88];
      *((_OWORD *)v41 + 6) = *((_OWORD *)v42 + 6);
      v43 = *(int *)(v110 + 40);
      v44 = &v41[v43];
      v45 = &v42[v43];
      if (v106(&v42[v43], 1, v16))
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v44, v45, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v44, 0, 1, v16);
      }
      v47 = v22[8];
      v48 = &v20[v47];
      v49 = &v21[v47];
      *(_OWORD *)v48 = *(_OWORD *)v49;
      v48[16] = v49[16];
      *(_OWORD *)(v48 + 24) = *(_OWORD *)(v49 + 24);
      v48[40] = v49[40];
      *((_QWORD *)v48 + 6) = *((_QWORD *)v49 + 6);
      *(_OWORD *)(v48 + 56) = *(_OWORD *)(v49 + 56);
      *(_OWORD *)(v48 + 72) = *(_OWORD *)(v49 + 72);
      v48[88] = v49[88];
      *((_OWORD *)v48 + 6) = *((_OWORD *)v49 + 6);
      v50 = *(int *)(v110 + 40);
      v51 = &v48[v50];
      v52 = &v49[v50];
      a3 = v108;
      if (v106(&v49[v50], 1, v16))
      {
        v53 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v51, v52, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v51, 0, 1, v16);
      }
      v25 = v105;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v103 + 56))(v20, 0, 1, v22);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(a1, 0, 1, v6);
  }
  v54 = a3[6];
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  *(_QWORD *)((char *)a1 + v54) = *(_QWORD *)((char *)a2 + v54);
  v55 = a3[7];
  v56 = (char *)a1 + v55;
  v57 = (char *)a2 + v55;
  *(_OWORD *)v56 = *(_OWORD *)((char *)a2 + v55);
  v56[16] = *((_BYTE *)a2 + v55 + 16);
  *(_OWORD *)(v56 + 24) = *(_OWORD *)((char *)a2 + v55 + 24);
  v56[40] = *((_BYTE *)a2 + v55 + 40);
  *((_QWORD *)v56 + 6) = *(_QWORD *)((char *)a2 + v55 + 48);
  *(_OWORD *)(v56 + 56) = *(_OWORD *)((char *)a2 + v55 + 56);
  *(_OWORD *)(v56 + 72) = *(_OWORD *)((char *)a2 + v55 + 72);
  v56[88] = *((_BYTE *)a2 + v55 + 88);
  *((_OWORD *)v56 + 6) = *(_OWORD *)((char *)a2 + v55 + 96);
  v58 = type metadata accessor for MetricsRequest(0);
  v59 = *(int *)(v58 + 40);
  v60 = &v56[v59];
  v61 = &v57[v59];
  v62 = sub_190A46EE8();
  v63 = *(_QWORD *)(v62 - 8);
  v111 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
  if (v111(v61, 1, v62))
  {
    v64 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v60, v61, v62);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
  }
  v65 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v66 = &v56[v65];
  v67 = &v57[v65];
  v68 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v69 = *((_QWORD *)v68 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v69 + 48))(v67, 1, v68))
  {
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    v107 = v69;
    v109 = a3;
    *(_OWORD *)v66 = *(_OWORD *)v67;
    v71 = v68[5];
    v72 = &v66[v71];
    v73 = &v67[v71];
    v72[16] = v73[16];
    *(_OWORD *)v72 = *(_OWORD *)v73;
    *(_OWORD *)(v72 + 24) = *(_OWORD *)(v73 + 24);
    v72[40] = v73[40];
    *((_QWORD *)v72 + 6) = *((_QWORD *)v73 + 6);
    *(_OWORD *)(v72 + 56) = *(_OWORD *)(v73 + 56);
    *(_OWORD *)(v72 + 72) = *(_OWORD *)(v73 + 72);
    v72[88] = v73[88];
    *((_OWORD *)v72 + 6) = *((_OWORD *)v73 + 6);
    v74 = *(int *)(v58 + 40);
    v75 = &v72[v74];
    v76 = &v73[v74];
    if (v111(&v73[v74], 1, v62))
    {
      v77 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v75, v76, v62);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v75, 0, 1, v62);
    }
    v78 = v68[6];
    v79 = &v66[v78];
    v80 = &v67[v78];
    *(_OWORD *)v79 = *(_OWORD *)v80;
    v79[16] = v80[16];
    *(_OWORD *)(v79 + 24) = *(_OWORD *)(v80 + 24);
    v79[40] = v80[40];
    *((_QWORD *)v79 + 6) = *((_QWORD *)v80 + 6);
    *(_OWORD *)(v79 + 56) = *(_OWORD *)(v80 + 56);
    *(_OWORD *)(v79 + 72) = *(_OWORD *)(v80 + 72);
    v79[88] = v80[88];
    *((_OWORD *)v79 + 6) = *((_OWORD *)v80 + 6);
    v81 = *(int *)(v58 + 40);
    v82 = &v79[v81];
    v83 = &v80[v81];
    if (v111(&v80[v81], 1, v62))
    {
      v84 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v82, v83, v62);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v82, 0, 1, v62);
    }
    v85 = v68[7];
    v86 = &v66[v85];
    v87 = &v67[v85];
    *(_OWORD *)v86 = *(_OWORD *)v87;
    v86[16] = v87[16];
    *(_OWORD *)(v86 + 24) = *(_OWORD *)(v87 + 24);
    v86[40] = v87[40];
    *((_QWORD *)v86 + 6) = *((_QWORD *)v87 + 6);
    *(_OWORD *)(v86 + 56) = *(_OWORD *)(v87 + 56);
    *(_OWORD *)(v86 + 72) = *(_OWORD *)(v87 + 72);
    v86[88] = v87[88];
    *((_OWORD *)v86 + 6) = *((_OWORD *)v87 + 6);
    v88 = *(int *)(v58 + 40);
    v89 = &v86[v88];
    v90 = &v87[v88];
    if (v111(&v87[v88], 1, v62))
    {
      v91 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v89, v90, v62);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v89, 0, 1, v62);
    }
    v92 = v68[8];
    v93 = &v66[v92];
    v94 = &v67[v92];
    *(_OWORD *)v93 = *(_OWORD *)v94;
    v93[16] = v94[16];
    *(_OWORD *)(v93 + 24) = *(_OWORD *)(v94 + 24);
    v93[40] = v94[40];
    *((_QWORD *)v93 + 6) = *((_QWORD *)v94 + 6);
    *(_OWORD *)(v93 + 56) = *(_OWORD *)(v94 + 56);
    *(_OWORD *)(v93 + 72) = *(_OWORD *)(v94 + 72);
    v93[88] = v94[88];
    *((_OWORD *)v93 + 6) = *((_OWORD *)v94 + 6);
    v95 = *(int *)(v58 + 40);
    v96 = &v93[v95];
    v97 = &v94[v95];
    a3 = v109;
    if (v111(&v94[v95], 1, v62))
    {
      v98 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v96, v97, v62);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v96, 0, 1, v62);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v107 + 56))(v66, 0, 1, v68);
  }
  v99 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  v100 = (char *)a1 + v99;
  v101 = (char *)a2 + v99;
  *(_OWORD *)v100 = *(_OWORD *)v101;
  *((_WORD *)v100 + 8) = *((_WORD *)v101 + 8);
  return a1;
}

uint64_t sub_1908D94B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  size_t v21;
  void *v22;
  char *v23;
  void *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  _OWORD *v38;
  _OWORD *v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  _OWORD *v53;
  int *v54;
  uint64_t v55;
  uint64_t (*v56)(_OWORD *, uint64_t, int *);
  int v57;
  int v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  void *v98;
  uint64_t v99;
  uint64_t (*v100)(void *, uint64_t, uint64_t);
  int v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  _OWORD *v105;
  _OWORD *v106;
  int *v107;
  uint64_t v108;
  uint64_t (*v109)(_OWORD *, uint64_t, int *);
  int v110;
  int v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  int v128;
  int v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  int v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  int v172;
  int v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  char *v180;
  int v181;
  int v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  char *v189;
  char *v190;
  int v191;
  int v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  char *v219;
  char *v220;
  int v221;
  int v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  char *v228;
  char *v229;
  int v230;
  int v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  char *v237;
  char *v238;
  int v239;
  int v240;
  uint64_t v241;
  unsigned int (*v242)(const void *, uint64_t, uint64_t);
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  int *v248;

  v6 = type metadata accessor for JindoViewCollection();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v244 = a2;
  v248 = a3;
  if (v9)
  {
    if (!v10)
    {
      v11 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v11;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      v12 = *(int *)(v6 + 24);
      v13 = a1 + v12;
      v14 = a2 + v12;
      *(_OWORD *)v13 = *(_OWORD *)(a2 + v12);
      *(_BYTE *)(v13 + 16) = *(_BYTE *)(a2 + v12 + 16);
      *(_OWORD *)(v13 + 24) = *(_OWORD *)(a2 + v12 + 24);
      *(_BYTE *)(v13 + 40) = *(_BYTE *)(a2 + v12 + 40);
      *(_QWORD *)(v13 + 48) = *(_QWORD *)(a2 + v12 + 48);
      *(_OWORD *)(v13 + 56) = *(_OWORD *)(a2 + v12 + 56);
      *(_OWORD *)(v13 + 72) = *(_OWORD *)(a2 + v12 + 72);
      *(_BYTE *)(v13 + 88) = *(_BYTE *)(a2 + v12 + 88);
      *(_OWORD *)(v13 + 96) = *(_OWORD *)(a2 + v12 + 96);
      v245 = type metadata accessor for MetricsRequest(0);
      v15 = *(int *)(v245 + 40);
      v16 = (void *)(v13 + v15);
      v17 = (const void *)(v14 + v15);
      v18 = sub_190A46EE8();
      v19 = *(_QWORD *)(v18 - 8);
      v242 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
      if (v242(v17, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      v37 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
      v38 = (_OWORD *)(v13 + v37);
      v39 = (_OWORD *)(v14 + v37);
      v40 = (int *)type metadata accessor for JindoMetricsDefinition(0);
      v41 = *((_QWORD *)v40 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v41 + 48))(v39, 1, v40))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        v241 = v41;
        *v38 = *v39;
        v43 = v40[5];
        v44 = (char *)v38 + v43;
        v45 = (char *)v39 + v43;
        v44[16] = v45[16];
        *(_OWORD *)v44 = *(_OWORD *)v45;
        *(_OWORD *)(v44 + 24) = *(_OWORD *)(v45 + 24);
        v44[40] = v45[40];
        *((_QWORD *)v44 + 6) = *((_QWORD *)v45 + 6);
        *(_OWORD *)(v44 + 56) = *(_OWORD *)(v45 + 56);
        *(_OWORD *)(v44 + 72) = *(_OWORD *)(v45 + 72);
        v44[88] = v45[88];
        *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
        v46 = *(int *)(v245 + 40);
        v47 = &v44[v46];
        v48 = &v45[v46];
        if (v242(&v45[v46], 1, v18))
        {
          v49 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
          memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v47, v48, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v47, 0, 1, v18);
        }
        v67 = v40[6];
        v68 = (char *)v38 + v67;
        v69 = (char *)v39 + v67;
        *(_OWORD *)v68 = *(_OWORD *)v69;
        v68[16] = v69[16];
        *(_OWORD *)(v68 + 24) = *(_OWORD *)(v69 + 24);
        v68[40] = v69[40];
        *((_QWORD *)v68 + 6) = *((_QWORD *)v69 + 6);
        *(_OWORD *)(v68 + 56) = *(_OWORD *)(v69 + 56);
        *(_OWORD *)(v68 + 72) = *(_OWORD *)(v69 + 72);
        v68[88] = v69[88];
        *((_OWORD *)v68 + 6) = *((_OWORD *)v69 + 6);
        v70 = *(int *)(v245 + 40);
        v71 = &v68[v70];
        v72 = &v69[v70];
        if (v242(&v69[v70], 1, v18))
        {
          v73 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
          memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v71, v72, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v71, 0, 1, v18);
        }
        v74 = v40[7];
        v75 = (char *)v38 + v74;
        v76 = (char *)v39 + v74;
        *(_OWORD *)v75 = *(_OWORD *)v76;
        v75[16] = v76[16];
        *(_OWORD *)(v75 + 24) = *(_OWORD *)(v76 + 24);
        v75[40] = v76[40];
        *((_QWORD *)v75 + 6) = *((_QWORD *)v76 + 6);
        *(_OWORD *)(v75 + 56) = *(_OWORD *)(v76 + 56);
        *(_OWORD *)(v75 + 72) = *(_OWORD *)(v76 + 72);
        v75[88] = v76[88];
        *((_OWORD *)v75 + 6) = *((_OWORD *)v76 + 6);
        v77 = *(int *)(v245 + 40);
        v78 = &v75[v77];
        v79 = &v76[v77];
        if (v242(&v76[v77], 1, v18))
        {
          v80 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
          memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v78, v79, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v78, 0, 1, v18);
        }
        v81 = v40[8];
        v82 = (char *)v38 + v81;
        v83 = (char *)v39 + v81;
        *(_OWORD *)v82 = *(_OWORD *)v83;
        v82[16] = v83[16];
        *(_OWORD *)(v82 + 24) = *(_OWORD *)(v83 + 24);
        v82[40] = v83[40];
        *((_QWORD *)v82 + 6) = *((_QWORD *)v83 + 6);
        *(_OWORD *)(v82 + 56) = *(_OWORD *)(v83 + 56);
        *(_OWORD *)(v82 + 72) = *(_OWORD *)(v83 + 72);
        v82[88] = v83[88];
        *((_OWORD *)v82 + 6) = *((_OWORD *)v83 + 6);
        v84 = *(int *)(v245 + 40);
        v85 = &v82[v84];
        v86 = &v83[v84];
        a2 = v244;
        if (v242(&v83[v84], 1, v18))
        {
          v87 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
          memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v85, v86, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v85, 0, 1, v18);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v241 + 56))(v38, 0, 1, v40);
      }
      a3 = v248;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_39;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_1908B5150(a1, (uint64_t (*)(_QWORD))type metadata accessor for JindoViewCollection);
LABEL_7:
    v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6430) - 8) + 64);
    v22 = (void *)a1;
    v23 = (char *)a2;
    goto LABEL_8;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v24 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v25 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v25;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v26 = *(int *)(v6 + 24);
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_BYTE *)(v27 + 16) = *(_BYTE *)(a2 + v26 + 16);
  *(_OWORD *)v27 = *(_OWORD *)(a2 + v26);
  *(_BYTE *)(v27 + 40) = *(_BYTE *)(a2 + v26 + 40);
  *(_OWORD *)(v27 + 24) = *(_OWORD *)(a2 + v26 + 24);
  *(_QWORD *)(v27 + 48) = *(_QWORD *)(a2 + v26 + 48);
  *(_BYTE *)(v27 + 88) = *(_BYTE *)(a2 + v26 + 88);
  *(_OWORD *)(v27 + 72) = *(_OWORD *)(a2 + v26 + 72);
  *(_OWORD *)(v27 + 56) = *(_OWORD *)(a2 + v26 + 56);
  *(_OWORD *)(v27 + 96) = *(_OWORD *)(a2 + v26 + 96);
  v246 = type metadata accessor for MetricsRequest(0);
  v29 = *(int *)(v246 + 40);
  v30 = (void *)(v27 + v29);
  v31 = (void *)(v28 + v29);
  v32 = sub_190A46EE8();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  v243 = v33;
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v30, v32);
LABEL_19:
    v50 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, void *, uint64_t))(v33 + 40))(v30, v31, v32);
LABEL_20:
  v51 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v52 = (_OWORD *)(v27 + v51);
  v53 = (_OWORD *)(v28 + v51);
  v54 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v55 = *((_QWORD *)v54 - 1);
  v56 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v55 + 48);
  v57 = v56(v52, 1, v54);
  v58 = v56(v53, 1, v54);
  if (!v57)
  {
    if (v58)
    {
      sub_1908B5150((uint64_t)v52, type metadata accessor for JindoMetricsDefinition);
      goto LABEL_26;
    }
    v184 = a2;
    *v52 = *v53;
    v185 = v54[5];
    v186 = (char *)v52 + v185;
    v187 = (char *)v53 + v185;
    *(_OWORD *)v186 = *(_OWORD *)v187;
    v186[16] = v187[16];
    *(_OWORD *)(v186 + 24) = *(_OWORD *)(v187 + 24);
    v186[40] = v187[40];
    *((_QWORD *)v186 + 6) = *((_QWORD *)v187 + 6);
    *(_OWORD *)(v186 + 56) = *(_OWORD *)(v187 + 56);
    *(_OWORD *)(v186 + 72) = *(_OWORD *)(v187 + 72);
    v186[88] = v187[88];
    *((_OWORD *)v186 + 6) = *((_OWORD *)v187 + 6);
    v188 = *(int *)(v246 + 40);
    v189 = &v186[v188];
    v190 = &v187[v188];
    v191 = v34(&v186[v188], 1, v32);
    v192 = v34(v190, 1, v32);
    if (v191)
    {
      if (!v192)
      {
        (*(void (**)(char *, char *, uint64_t))(v243 + 32))(v189, v190, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v243 + 56))(v189, 0, 1, v32);
        goto LABEL_112;
      }
    }
    else
    {
      if (!v192)
      {
        (*(void (**)(char *, char *, uint64_t))(v243 + 40))(v189, v190, v32);
LABEL_112:
        v215 = v54[6];
        v216 = (char *)v52 + v215;
        v217 = (char *)v53 + v215;
        *(_OWORD *)v216 = *(_OWORD *)v217;
        v216[16] = v217[16];
        *(_OWORD *)(v216 + 24) = *(_OWORD *)(v217 + 24);
        v216[40] = v217[40];
        *((_QWORD *)v216 + 6) = *((_QWORD *)v217 + 6);
        *(_OWORD *)(v216 + 56) = *(_OWORD *)(v217 + 56);
        *(_OWORD *)(v216 + 72) = *(_OWORD *)(v217 + 72);
        v216[88] = v217[88];
        *((_OWORD *)v216 + 6) = *((_OWORD *)v217 + 6);
        v218 = *(int *)(v246 + 40);
        v219 = &v216[v218];
        v220 = &v217[v218];
        v221 = v34(&v216[v218], 1, v32);
        v222 = v34(v220, 1, v32);
        if (v221)
        {
          if (!v222)
          {
            (*(void (**)(char *, char *, uint64_t))(v243 + 32))(v219, v220, v32);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v243 + 56))(v219, 0, 1, v32);
            goto LABEL_118;
          }
        }
        else
        {
          if (!v222)
          {
            (*(void (**)(char *, char *, uint64_t))(v243 + 40))(v219, v220, v32);
LABEL_118:
            v224 = v54[7];
            v225 = (char *)v52 + v224;
            v226 = (char *)v53 + v224;
            *(_OWORD *)v225 = *(_OWORD *)v226;
            v225[16] = v226[16];
            *(_OWORD *)(v225 + 24) = *(_OWORD *)(v226 + 24);
            v225[40] = v226[40];
            *((_QWORD *)v225 + 6) = *((_QWORD *)v226 + 6);
            *(_OWORD *)(v225 + 56) = *(_OWORD *)(v226 + 56);
            *(_OWORD *)(v225 + 72) = *(_OWORD *)(v226 + 72);
            v225[88] = v226[88];
            *((_OWORD *)v225 + 6) = *((_OWORD *)v226 + 6);
            v227 = *(int *)(v246 + 40);
            v228 = &v225[v227];
            v229 = &v226[v227];
            v230 = v34(&v225[v227], 1, v32);
            v231 = v34(v229, 1, v32);
            if (v230)
            {
              if (!v231)
              {
                (*(void (**)(char *, char *, uint64_t))(v243 + 32))(v228, v229, v32);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v243 + 56))(v228, 0, 1, v32);
LABEL_124:
                v233 = v54[8];
                v234 = (char *)v52 + v233;
                v235 = (char *)v53 + v233;
                *(_OWORD *)v234 = *(_OWORD *)v235;
                v234[16] = v235[16];
                *(_OWORD *)(v234 + 24) = *(_OWORD *)(v235 + 24);
                v234[40] = v235[40];
                *((_QWORD *)v234 + 6) = *((_QWORD *)v235 + 6);
                *(_OWORD *)(v234 + 56) = *(_OWORD *)(v235 + 56);
                *(_OWORD *)(v234 + 72) = *(_OWORD *)(v235 + 72);
                v234[88] = v235[88];
                *((_OWORD *)v234 + 6) = *((_OWORD *)v235 + 6);
                v236 = *(int *)(v246 + 40);
                v237 = &v234[v236];
                v238 = &v235[v236];
                v239 = v34(&v234[v236], 1, v32);
                v240 = v34(v238, 1, v32);
                a2 = v184;
                if (v239)
                {
                  a3 = v248;
                  if (!v240)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v243 + 32))(v237, v238, v32);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v243 + 56))(v237, 0, 1, v32);
                    goto LABEL_39;
                  }
                }
                else
                {
                  a3 = v248;
                  if (!v240)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v243 + 40))(v237, v238, v32);
                    goto LABEL_39;
                  }
                  (*(void (**)(char *, uint64_t))(v243 + 8))(v237, v32);
                }
                v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0) - 8) + 64);
                v22 = v237;
                v23 = v238;
LABEL_8:
                memcpy(v22, v23, v21);
                goto LABEL_39;
              }
            }
            else
            {
              if (!v231)
              {
                (*(void (**)(char *, char *, uint64_t))(v243 + 40))(v228, v229, v32);
                goto LABEL_124;
              }
              (*(void (**)(char *, uint64_t))(v243 + 8))(v228, v32);
            }
            v232 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
            memcpy(v228, v229, *(_QWORD *)(*(_QWORD *)(v232 - 8) + 64));
            goto LABEL_124;
          }
          (*(void (**)(char *, uint64_t))(v243 + 8))(v219, v32);
        }
        v223 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v219, v220, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
        goto LABEL_118;
      }
      (*(void (**)(char *, uint64_t))(v243 + 8))(v189, v32);
    }
    v214 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v189, v190, *(_QWORD *)(*(_QWORD *)(v214 - 8) + 64));
    goto LABEL_112;
  }
  if (v58)
  {
LABEL_26:
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    a3 = v248;
    goto LABEL_39;
  }
  *v52 = *v53;
  v59 = v54[5];
  v60 = (char *)v52 + v59;
  v61 = (char *)v53 + v59;
  v60[16] = v61[16];
  *(_OWORD *)v60 = *(_OWORD *)v61;
  *(_OWORD *)(v60 + 24) = *(_OWORD *)(v61 + 24);
  v60[40] = v61[40];
  *((_QWORD *)v60 + 6) = *((_QWORD *)v61 + 6);
  *(_OWORD *)(v60 + 56) = *(_OWORD *)(v61 + 56);
  *(_OWORD *)(v60 + 72) = *(_OWORD *)(v61 + 72);
  v60[88] = v61[88];
  *((_OWORD *)v60 + 6) = *((_OWORD *)v61 + 6);
  v62 = *(int *)(v246 + 40);
  v63 = &v60[v62];
  v64 = &v61[v62];
  if (v34(&v61[v62], 1, v32))
  {
    v65 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v243 + 32))(v63, v64, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v243 + 56))(v63, 0, 1, v32);
  }
  v193 = v54[6];
  v194 = (char *)v52 + v193;
  v195 = (char *)v53 + v193;
  *(_OWORD *)v194 = *(_OWORD *)v195;
  v194[16] = v195[16];
  *(_OWORD *)(v194 + 24) = *(_OWORD *)(v195 + 24);
  v194[40] = v195[40];
  *((_QWORD *)v194 + 6) = *((_QWORD *)v195 + 6);
  *(_OWORD *)(v194 + 56) = *(_OWORD *)(v195 + 56);
  *(_OWORD *)(v194 + 72) = *(_OWORD *)(v195 + 72);
  v194[88] = v195[88];
  *((_OWORD *)v194 + 6) = *((_OWORD *)v195 + 6);
  v196 = *(int *)(v246 + 40);
  v197 = &v194[v196];
  v198 = &v195[v196];
  if (v34(&v195[v196], 1, v32))
  {
    v199 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v197, v198, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v243 + 32))(v197, v198, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v243 + 56))(v197, 0, 1, v32);
  }
  v200 = v54[7];
  v201 = (char *)v52 + v200;
  v202 = (char *)v53 + v200;
  *(_OWORD *)v201 = *(_OWORD *)v202;
  v201[16] = v202[16];
  *(_OWORD *)(v201 + 24) = *(_OWORD *)(v202 + 24);
  v201[40] = v202[40];
  *((_QWORD *)v201 + 6) = *((_QWORD *)v202 + 6);
  *(_OWORD *)(v201 + 56) = *(_OWORD *)(v202 + 56);
  *(_OWORD *)(v201 + 72) = *(_OWORD *)(v202 + 72);
  v201[88] = v202[88];
  *((_OWORD *)v201 + 6) = *((_OWORD *)v202 + 6);
  v203 = *(int *)(v246 + 40);
  v204 = &v201[v203];
  v205 = &v202[v203];
  if (v34(&v202[v203], 1, v32))
  {
    v206 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v204, v205, *(_QWORD *)(*(_QWORD *)(v206 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v243 + 32))(v204, v205, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v243 + 56))(v204, 0, 1, v32);
  }
  v207 = v54[8];
  v208 = (char *)v52 + v207;
  v209 = (char *)v53 + v207;
  *(_OWORD *)v208 = *(_OWORD *)v209;
  v208[16] = v209[16];
  *(_OWORD *)(v208 + 24) = *(_OWORD *)(v209 + 24);
  v208[40] = v209[40];
  *((_QWORD *)v208 + 6) = *((_QWORD *)v209 + 6);
  *(_OWORD *)(v208 + 56) = *(_OWORD *)(v209 + 56);
  *(_OWORD *)(v208 + 72) = *(_OWORD *)(v209 + 72);
  v208[88] = v209[88];
  *((_OWORD *)v208 + 6) = *((_OWORD *)v209 + 6);
  v210 = *(int *)(v246 + 40);
  v211 = &v208[v210];
  v212 = &v209[v210];
  a2 = v244;
  if (v34(&v209[v210], 1, v32))
  {
    v213 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v211, v212, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v243 + 32))(v211, v212, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v243 + 56))(v211, 0, 1, v32);
  }
  (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v55 + 56))(v52, 0, 1, v54);
  a3 = v248;
LABEL_39:
  v88 = a3[5];
  v89 = a1 + v88;
  v90 = a2 + v88;
  *(_QWORD *)(a1 + v88) = *(_QWORD *)(a2 + v88);
  swift_release();
  v91 = *(void **)(v89 + 8);
  *(_QWORD *)(v89 + 8) = *(_QWORD *)(v90 + 8);

  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_release();
  v92 = a3[7];
  v93 = a1 + v92;
  v94 = a2 + v92;
  *(_OWORD *)v93 = *(_OWORD *)(a2 + v92);
  *(_BYTE *)(v93 + 16) = *(_BYTE *)(a2 + v92 + 16);
  *(_OWORD *)(v93 + 24) = *(_OWORD *)(a2 + v92 + 24);
  *(_BYTE *)(v93 + 40) = *(_BYTE *)(a2 + v92 + 40);
  *(_QWORD *)(v93 + 48) = *(_QWORD *)(a2 + v92 + 48);
  *(_OWORD *)(v93 + 56) = *(_OWORD *)(a2 + v92 + 56);
  *(_OWORD *)(v93 + 72) = *(_OWORD *)(a2 + v92 + 72);
  *(_BYTE *)(v93 + 88) = *(_BYTE *)(a2 + v92 + 88);
  *(_OWORD *)(v93 + 96) = *(_OWORD *)(a2 + v92 + 96);
  v95 = type metadata accessor for MetricsRequest(0);
  v96 = *(int *)(v95 + 40);
  v97 = (void *)(v93 + v96);
  v98 = (void *)(v94 + v96);
  v99 = sub_190A46EE8();
  v247 = *(_QWORD *)(v99 - 8);
  v100 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v247 + 48);
  v101 = v100(v97, 1, v99);
  v102 = v100(v98, 1, v99);
  if (v101)
  {
    if (!v102)
    {
      (*(void (**)(void *, void *, uint64_t))(v247 + 32))(v97, v98, v99);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v97, 0, 1, v99);
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  if (v102)
  {
    (*(void (**)(void *, uint64_t))(v247 + 8))(v97, v99);
LABEL_44:
    v103 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
    goto LABEL_45;
  }
  (*(void (**)(void *, void *, uint64_t))(v247 + 40))(v97, v98, v99);
LABEL_45:
  v104 = *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v105 = (_OWORD *)(v93 + v104);
  v106 = (_OWORD *)(v94 + v104);
  v107 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v108 = *((_QWORD *)v107 - 1);
  v109 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v108 + 48);
  v110 = v109(v105, 1, v107);
  v111 = v109(v106, 1, v107);
  if (!v110)
  {
    if (v111)
    {
      sub_1908B5150((uint64_t)v105, type metadata accessor for JindoMetricsDefinition);
      goto LABEL_51;
    }
    *v105 = *v106;
    v122 = v107[5];
    v123 = (char *)v105 + v122;
    v124 = (char *)v106 + v122;
    *(_OWORD *)v123 = *(_OWORD *)v124;
    v123[16] = v124[16];
    *(_OWORD *)(v123 + 24) = *(_OWORD *)(v124 + 24);
    v123[40] = v124[40];
    *((_QWORD *)v123 + 6) = *((_QWORD *)v124 + 6);
    *(_OWORD *)(v123 + 56) = *(_OWORD *)(v124 + 56);
    *(_OWORD *)(v123 + 72) = *(_OWORD *)(v124 + 72);
    v123[88] = v124[88];
    *((_OWORD *)v123 + 6) = *((_OWORD *)v124 + 6);
    v125 = *(int *)(v95 + 40);
    v126 = &v123[v125];
    v127 = &v124[v125];
    v128 = v100(&v123[v125], 1, v99);
    v129 = v100(v127, 1, v99);
    if (v128)
    {
      if (!v129)
      {
        (*(void (**)(char *, char *, uint64_t))(v247 + 32))(v126, v127, v99);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v126, 0, 1, v99);
        goto LABEL_72;
      }
    }
    else
    {
      if (!v129)
      {
        (*(void (**)(char *, char *, uint64_t))(v247 + 40))(v126, v127, v99);
LABEL_72:
        v157 = v107[6];
        v158 = (char *)v105 + v157;
        v159 = (char *)v106 + v157;
        *(_OWORD *)v158 = *(_OWORD *)v159;
        v158[16] = v159[16];
        *(_OWORD *)(v158 + 24) = *(_OWORD *)(v159 + 24);
        v158[40] = v159[40];
        *((_QWORD *)v158 + 6) = *((_QWORD *)v159 + 6);
        *(_OWORD *)(v158 + 56) = *(_OWORD *)(v159 + 56);
        *(_OWORD *)(v158 + 72) = *(_OWORD *)(v159 + 72);
        v158[88] = v159[88];
        *((_OWORD *)v158 + 6) = *((_OWORD *)v159 + 6);
        v160 = *(int *)(v95 + 40);
        v161 = &v158[v160];
        v162 = &v159[v160];
        v163 = v100(&v158[v160], 1, v99);
        v164 = v100(v162, 1, v99);
        if (v163)
        {
          if (!v164)
          {
            (*(void (**)(char *, char *, uint64_t))(v247 + 32))(v161, v162, v99);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v161, 0, 1, v99);
            goto LABEL_78;
          }
        }
        else
        {
          if (!v164)
          {
            (*(void (**)(char *, char *, uint64_t))(v247 + 40))(v161, v162, v99);
LABEL_78:
            v166 = v107[7];
            v167 = (char *)v105 + v166;
            v168 = (char *)v106 + v166;
            *(_OWORD *)v167 = *(_OWORD *)v168;
            v167[16] = v168[16];
            *(_OWORD *)(v167 + 24) = *(_OWORD *)(v168 + 24);
            v167[40] = v168[40];
            *((_QWORD *)v167 + 6) = *((_QWORD *)v168 + 6);
            *(_OWORD *)(v167 + 56) = *(_OWORD *)(v168 + 56);
            *(_OWORD *)(v167 + 72) = *(_OWORD *)(v168 + 72);
            v167[88] = v168[88];
            *((_OWORD *)v167 + 6) = *((_OWORD *)v168 + 6);
            v169 = *(int *)(v95 + 40);
            v170 = &v167[v169];
            v171 = &v168[v169];
            v172 = v100(&v167[v169], 1, v99);
            v173 = v100(v171, 1, v99);
            if (v172)
            {
              if (!v173)
              {
                (*(void (**)(char *, char *, uint64_t))(v247 + 32))(v170, v171, v99);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v170, 0, 1, v99);
                goto LABEL_84;
              }
            }
            else
            {
              if (!v173)
              {
                (*(void (**)(char *, char *, uint64_t))(v247 + 40))(v170, v171, v99);
LABEL_84:
                v120 = v244;
                v175 = v107[8];
                v176 = (char *)v105 + v175;
                v177 = (char *)v106 + v175;
                *(_OWORD *)v176 = *(_OWORD *)v177;
                v176[16] = v177[16];
                *(_OWORD *)(v176 + 24) = *(_OWORD *)(v177 + 24);
                v176[40] = v177[40];
                *((_QWORD *)v176 + 6) = *((_QWORD *)v177 + 6);
                *(_OWORD *)(v176 + 56) = *(_OWORD *)(v177 + 56);
                *(_OWORD *)(v176 + 72) = *(_OWORD *)(v177 + 72);
                v176[88] = v177[88];
                *((_OWORD *)v176 + 6) = *((_OWORD *)v177 + 6);
                v178 = *(int *)(v95 + 40);
                v179 = &v176[v178];
                v180 = &v177[v178];
                v181 = v100(&v176[v178], 1, v99);
                v182 = v100(v180, 1, v99);
                if (v181)
                {
                  if (!v182)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v247 + 32))(v179, v180, v99);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v179, 0, 1, v99);
                    goto LABEL_52;
                  }
                }
                else
                {
                  if (!v182)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v247 + 40))(v179, v180, v99);
                    goto LABEL_52;
                  }
                  (*(void (**)(char *, uint64_t))(v247 + 8))(v179, v99);
                }
                v183 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
                memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
                goto LABEL_52;
              }
              (*(void (**)(char *, uint64_t))(v247 + 8))(v170, v99);
            }
            v174 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
            memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
            goto LABEL_84;
          }
          (*(void (**)(char *, uint64_t))(v247 + 8))(v161, v99);
        }
        v165 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
        goto LABEL_78;
      }
      (*(void (**)(char *, uint64_t))(v247 + 8))(v126, v99);
    }
    v156 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
    goto LABEL_72;
  }
  if (v111)
  {
LABEL_51:
    v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
    v120 = v244;
LABEL_52:
    v121 = v248;
    goto LABEL_68;
  }
  *v105 = *v106;
  v112 = v107[5];
  v113 = (char *)v105 + v112;
  v114 = (char *)v106 + v112;
  v113[16] = v114[16];
  *(_OWORD *)v113 = *(_OWORD *)v114;
  *(_OWORD *)(v113 + 24) = *(_OWORD *)(v114 + 24);
  v113[40] = v114[40];
  *((_QWORD *)v113 + 6) = *((_QWORD *)v114 + 6);
  *(_OWORD *)(v113 + 56) = *(_OWORD *)(v114 + 56);
  *(_OWORD *)(v113 + 72) = *(_OWORD *)(v114 + 72);
  v113[88] = v114[88];
  *((_OWORD *)v113 + 6) = *((_OWORD *)v114 + 6);
  v115 = *(int *)(v95 + 40);
  v116 = &v113[v115];
  v117 = &v114[v115];
  if (v100(&v114[v115], 1, v99))
  {
    v118 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v247 + 32))(v116, v117, v99);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v116, 0, 1, v99);
  }
  v130 = v107[6];
  v131 = (char *)v105 + v130;
  v132 = (char *)v106 + v130;
  *(_OWORD *)v131 = *(_OWORD *)v132;
  v131[16] = v132[16];
  *(_OWORD *)(v131 + 24) = *(_OWORD *)(v132 + 24);
  v131[40] = v132[40];
  *((_QWORD *)v131 + 6) = *((_QWORD *)v132 + 6);
  *(_OWORD *)(v131 + 56) = *(_OWORD *)(v132 + 56);
  *(_OWORD *)(v131 + 72) = *(_OWORD *)(v132 + 72);
  v131[88] = v132[88];
  *((_OWORD *)v131 + 6) = *((_OWORD *)v132 + 6);
  v133 = *(int *)(v95 + 40);
  v134 = &v131[v133];
  v135 = &v132[v133];
  if (v100(&v132[v133], 1, v99))
  {
    v136 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v134, v135, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v247 + 32))(v134, v135, v99);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v134, 0, 1, v99);
  }
  v137 = v107[7];
  v138 = (char *)v105 + v137;
  v139 = (char *)v106 + v137;
  *(_OWORD *)v138 = *(_OWORD *)v139;
  v138[16] = v139[16];
  *(_OWORD *)(v138 + 24) = *(_OWORD *)(v139 + 24);
  v138[40] = v139[40];
  *((_QWORD *)v138 + 6) = *((_QWORD *)v139 + 6);
  *(_OWORD *)(v138 + 56) = *(_OWORD *)(v139 + 56);
  *(_OWORD *)(v138 + 72) = *(_OWORD *)(v139 + 72);
  v138[88] = v139[88];
  *((_OWORD *)v138 + 6) = *((_OWORD *)v139 + 6);
  v140 = *(int *)(v95 + 40);
  v141 = &v138[v140];
  v142 = &v139[v140];
  if (v100(&v139[v140], 1, v99))
  {
    v143 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v247 + 32))(v141, v142, v99);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v141, 0, 1, v99);
  }
  v120 = v244;
  v144 = v107[8];
  v145 = (char *)v105 + v144;
  v146 = (char *)v106 + v144;
  *(_OWORD *)v145 = *(_OWORD *)v146;
  v145[16] = v146[16];
  *(_OWORD *)(v145 + 24) = *(_OWORD *)(v146 + 24);
  v145[40] = v146[40];
  *((_QWORD *)v145 + 6) = *((_QWORD *)v146 + 6);
  *(_OWORD *)(v145 + 56) = *(_OWORD *)(v146 + 56);
  *(_OWORD *)(v145 + 72) = *(_OWORD *)(v146 + 72);
  v145[88] = v146[88];
  *((_OWORD *)v145 + 6) = *((_OWORD *)v146 + 6);
  v147 = *(int *)(v95 + 40);
  v148 = &v145[v147];
  v149 = &v146[v147];
  if (v100(&v146[v147], 1, v99))
  {
    v150 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v247 + 32))(v148, v149, v99);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v148, 0, 1, v99);
  }
  v121 = v248;
  (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v108 + 56))(v105, 0, 1, v107);
LABEL_68:
  *(_QWORD *)(a1 + v121[8]) = *(_QWORD *)(v120 + v121[8]);
  swift_bridgeObjectRelease();
  v151 = v121[9];
  v152 = a1 + v151;
  v153 = v120 + v151;
  v154 = *(_QWORD *)(v120 + v151 + 8);
  *(_QWORD *)v152 = *(_QWORD *)(v120 + v151);
  *(_QWORD *)(v152 + 8) = v154;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v152 + 16) = *(_BYTE *)(v153 + 16);
  *(_BYTE *)(v152 + 17) = *(_BYTE *)(v153 + 17);
  return a1;
}

uint64_t sub_1908DAE28()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1908DAE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6430);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for ActivityMetricsDefinition(0);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1908DAEE0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1908DAEEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6430);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for ActivityMetricsDefinition(0);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for ActivityViewCollection()
{
  uint64_t result;

  result = qword_1EE1EA548;
  if (!qword_1EE1EA548)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1908DAFD0()
{
  unint64_t v0;
  unint64_t v1;

  sub_1908DB084();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ActivityMetricsDefinition(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1908DB084()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE1EA540)
  {
    type metadata accessor for JindoViewCollection();
    v0 = sub_190A48148();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE1EA540);
  }
}

unint64_t sub_1908DB0DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1ECBD8;
  if (!qword_1EE1ECBD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1E6428);
    result = MEMORY[0x19401429C](&unk_190A4A710, v1);
    atomic_store(result, (unint64_t *)&qword_1EE1ECBD8);
  }
  return result;
}

uint64_t sub_1908DB128@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t *v27;
  void *v28;
  uint64_t v29;
  uint64_t KeyPath;
  os_unfair_lock_s *v31;
  id v32;
  uint64_t v33;
  int v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 *v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t *v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t *v57;
  uint64_t result;
  uint64_t v59;
  void *v60;
  id v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t *v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t *v84;
  uint64_t *v85;
  char *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t *v93;
  uint64_t v94[2];
  uint64_t v95[5];
  uint64_t v96;

  v2 = v1;
  v92 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E62E8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v87 = (uint64_t *)((char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x1E0C80A78](v4);
  v86 = (char *)&v82 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v89 = (uint64_t *)((char *)&v82 - v9);
  MEMORY[0x1E0C80A78](v8);
  v88 = (uint64_t)&v82 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6430);
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v91 = type metadata accessor for JindoViewStates(0);
  v96 = *(_QWORD *)(v91 - 8);
  v14 = MEMORY[0x1E0C80A78](v91);
  v83 = (uint64_t *)((char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v90 = (uint64_t)&v82 - v16;
  v17 = type metadata accessor for ActivityMetricsDefinition(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ActivityViewStates(0);
  v21 = MEMORY[0x1E0C80A78](v20);
  v84 = (uint64_t *)((char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = MEMORY[0x1E0C80A78](v21);
  v85 = (uint64_t *)((char *)&v82 - v24);
  MEMORY[0x1E0C80A78](v23);
  v93 = (uint64_t *)((char *)&v82 - v25);
  v26 = (int *)type metadata accessor for ActivityViewCollection();
  v27 = (uint64_t *)(v1 + v26[5]);
  v29 = *v27;
  v28 = (void *)v27[1];
  KeyPath = swift_getKeyPath();
  v31 = *(os_unfair_lock_s **)(v29 + 16);
  swift_retain_n();
  v32 = v28;
  os_unfair_lock_lock(v31);
  v33 = sub_1908B7CB4(KeyPath);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 16));

  swift_release();
  swift_release_n();
  if (v33)
  {
    if (*(_QWORD *)(v33 + 16))
      v34 = *(unsigned __int8 *)(v33 + 32);
    else
      v34 = 1;
    v35 = v93;
    swift_bridgeObjectRelease();
  }
  else
  {
    v34 = 1;
    v35 = v93;
  }
  v36 = *(_QWORD *)(v2 + v26[8]);
  v37 = *(_QWORD *)(v36 + 16);
  if (v37)
  {
    v38 = (unsigned __int8 *)(v36 + 32);
    while (v34 != *v38)
    {
      ++v38;
      if (!--v37)
        goto LABEL_11;
    }
  }
  else
  {
LABEL_11:
    LOBYTE(v34) = 1;
  }
  v39 = *(_QWORD *)(v2 + v26[6]);
  sub_1908AF5D8(v2 + v26[7], (uint64_t)v19, type metadata accessor for ActivityMetricsDefinition);
  v40 = (void *)v27[1];
  v95[0] = *v27;
  v95[1] = (uint64_t)v40;
  LOBYTE(v94[0]) = v34;
  swift_retain();
  swift_retain();
  v41 = v40;
  sub_190A10F20(v39, (uint64_t)v19, v95, v94, v35);
  sub_1908AAA48(v2, (uint64_t)v13, &qword_1EE1E6430);
  v42 = type metadata accessor for JindoViewCollection();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v13, 1, v42) == 1)
  {
    sub_1908AA544((uint64_t)v13, &qword_1EE1E6430);
    v43 = v84;
    sub_1908AF5D8((uint64_t)v35, (uint64_t)v84, type metadata accessor for ActivityViewStates);
    v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v96 + 56);
    v45 = (uint64_t)v86;
    v46 = v91;
    v44(v86, 1, 1, v91);
    v47 = v2 + v26[9];
    v49 = *(_QWORD *)v47;
    v48 = *(_QWORD *)(v47 + 8);
    LODWORD(v90) = *(unsigned __int8 *)(v47 + 16);
    LODWORD(v89) = *(unsigned __int8 *)(v47 + 17);
    v50 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6428);
    v51 = v92;
    v52 = (char *)v92 + v50[15];
    v44(v52, 1, 1, v46);
    *((_BYTE *)v51 + v50[16]) = 1;
    sub_1908AF5D8((uint64_t)v43, (uint64_t)v51 + v50[14], type metadata accessor for ActivityViewStates);
    swift_bridgeObjectRetain();
    v53 = (uint64_t)v52;
    v54 = v45;
    sub_1908DB8C0(v45, v53);
    v55 = *v43;
    v51[1] = *v43;
    v56 = (char *)v51 + v50[17];
    *(_QWORD *)v56 = v49;
    *((_QWORD *)v56 + 1) = v48;
    v56[16] = v90;
    v56[17] = (char)v89;
    v57 = v87;
    sub_1908AAA48(v54, (uint64_t)v87, &qword_1EE1E62E8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v96 + 48))(v57, 1, v46) == 1)
    {
      sub_1908AA544(v54, &qword_1EE1E62E8);
      sub_1908B5150((uint64_t)v43, type metadata accessor for ActivityViewStates);
      result = sub_1908AA544((uint64_t)v57, &qword_1EE1E62E8);
      v59 = 0;
    }
    else
    {
      v59 = *v57;
      sub_1908AA544(v54, &qword_1EE1E62E8);
      sub_1908B5150((uint64_t)v43, type metadata accessor for ActivityViewStates);
      result = sub_1908B5150((uint64_t)v57, type metadata accessor for JindoViewStates);
    }
    v78 = __OFADD__(v55, v59);
    v79 = v55 + v59;
    v80 = (uint64_t)v93;
    if (!v78)
    {
      *v92 = v79;
      return sub_1908B5150(v80, type metadata accessor for ActivityViewStates);
    }
    __break(1u);
  }
  else
  {
    sub_1908BBDC8((uint64_t)(v13 + 2), (uint64_t)v95);
    sub_1908AF5D8((uint64_t)v13 + *(int *)(v42 + 24), (uint64_t)v19, type metadata accessor for ActivityMetricsDefinition);
    v60 = (void *)v13[1];
    v94[0] = *v13;
    v94[1] = (uint64_t)v60;
    swift_retain();
    v61 = v60;
    v62 = v83;
    sub_1909A6E4C((uint64_t)v95, (uint64_t)v19, v94, v83);
    sub_1908B5150((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for JindoViewCollection);
    v63 = v90;
    sub_1908DB908((uint64_t)v62, v90);
    v64 = v85;
    sub_1908AF5D8((uint64_t)v35, (uint64_t)v85, type metadata accessor for ActivityViewStates);
    v65 = v88;
    sub_1908AF5D8(v63, v88, type metadata accessor for JindoViewStates);
    v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56);
    v67 = v91;
    v66(v65, 0, 1, v91);
    v68 = v2 + v26[9];
    v70 = *(_QWORD *)v68;
    v69 = *(_QWORD *)(v68 + 8);
    LODWORD(v87) = *(unsigned __int8 *)(v68 + 16);
    LODWORD(v86) = *(unsigned __int8 *)(v68 + 17);
    v71 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6428);
    v72 = v92;
    v73 = (uint64_t)v92 + v71[15];
    v66(v73, 1, 1, v67);
    *((_BYTE *)v72 + v71[16]) = 1;
    sub_1908AF5D8((uint64_t)v64, (uint64_t)v72 + v71[14], type metadata accessor for ActivityViewStates);
    swift_bridgeObjectRetain();
    sub_1908DB8C0(v65, v73);
    v74 = *v64;
    v72[1] = *v64;
    v75 = (char *)v72 + v71[17];
    *(_QWORD *)v75 = v70;
    *((_QWORD *)v75 + 1) = v69;
    v75[16] = (char)v87;
    v75[17] = (char)v86;
    v76 = v89;
    sub_1908AAA48(v65, (uint64_t)v89, &qword_1EE1E62E8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v96 + 48))(v76, 1, v67) == 1)
    {
      sub_1908AA544(v65, &qword_1EE1E62E8);
      sub_1908B5150((uint64_t)v64, type metadata accessor for ActivityViewStates);
      result = sub_1908AA544((uint64_t)v76, &qword_1EE1E62E8);
      v77 = 0;
    }
    else
    {
      v77 = *v76;
      sub_1908AA544(v65, &qword_1EE1E62E8);
      sub_1908B5150((uint64_t)v64, type metadata accessor for ActivityViewStates);
      result = sub_1908B5150((uint64_t)v76, type metadata accessor for JindoViewStates);
    }
    v78 = __OFADD__(v74, v77);
    v81 = v74 + v77;
    v80 = (uint64_t)v93;
    if (!v78)
    {
      *v92 = v81;
      sub_1908B5150(v90, type metadata accessor for JindoViewStates);
      return sub_1908B5150(v80, type metadata accessor for ActivityViewStates);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1908DB8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E62E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1908DB908(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JindoViewStates(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1908DB94C()
{
  int active_platform;
  uint64_t result;

  active_platform = dyld_get_active_platform();
  result = dyld_get_program_sdk_version();
  LODWORD(qword_1ECF6C5E8) = active_platform;
  HIDWORD(qword_1ECF6C5E8) = result;
  return result;
}

double static SystemVersion.currentProcessSDKVersion.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_1908DBA64(&qword_1ECF6C5C8, qword_1ECF6C5E8, a1);
}

uint64_t static SystemVersion.currentProcessSDKVersion.setter(uint64_t *a1)
{
  return sub_1908DBADC(a1, &qword_1ECF6C5C8, qword_1ECF6C5E8);
}

uint64_t (*static SystemVersion.currentProcessSDKVersion.modify())()
{
  if (qword_1ECF6C5C8 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1908DBA24()
{
  uint64_t result;

  result = dyld_get_program_sdk_version();
  dword_1EE1ECBE0 = -1;
  *(_DWORD *)algn_1EE1ECBE4 = result;
  return result;
}

double static SystemVersion.currentProcessSDKVersionForAnyPlatforms.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_1908DBA64(&qword_1EE1EC490, (double *)&dword_1EE1ECBE0, a1);
}

double sub_1908DBA64@<D0>(_QWORD *a1@<X0>, double *a2@<X1>, _QWORD *a3@<X8>)
{
  double result;

  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  result = *a2;
  *a3 = *(_QWORD *)a2;
  return result;
}

uint64_t static SystemVersion.currentProcessSDKVersionForAnyPlatforms.setter(uint64_t *a1)
{
  return sub_1908DBADC(a1, &qword_1EE1EC490, &dword_1EE1ECBE0);
}

uint64_t sub_1908DBADC(uint64_t *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  if (*a2 != -1)
    swift_once();
  result = swift_beginAccess();
  *a3 = v4;
  return result;
}

uint64_t (*static SystemVersion.currentProcessSDKVersionForAnyPlatforms.modify())()
{
  if (qword_1EE1EC490 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1908DBBAC()
{
  uint64_t result;

  result = getWKSystemVersionSDK_AzulE();
  qword_1EE1ECBE8 = result;
  return result;
}

double static SystemVersion.AzulE.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_1908DBD50(qword_1EE1EC498, (double *)&qword_1EE1ECBE8, a1);
}

uint64_t sub_1908DBBE8()
{
  uint64_t result;

  result = getWKSystemVersionSDK_Sky();
  qword_1ECF6D0C8 = result;
  return result;
}

double static SystemVersion.Sky.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_1908DBD50(&qword_1ECF6D0D0, (double *)&qword_1ECF6D0C8, a1);
}

uint64_t sub_1908DBC24()
{
  uint64_t result;

  result = getWKSystemVersionSDK_Sydney();
  qword_1ECF6B8F0 = result;
  return result;
}

double static SystemVersion.Sydney.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_1908DBD50(&qword_1ECF6B8E8, qword_1ECF6B8F0, a1);
}

uint64_t sub_1908DBC60()
{
  uint64_t result;

  result = getWKSystemVersionSDK_SydneyC();
  qword_1EE1E62B8 = result;
  return result;
}

double static SystemVersion.SydneyC.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_1908DBD50(&qword_1EE1E62C0, (double *)&qword_1EE1E62B8, a1);
}

uint64_t sub_1908DBC9C()
{
  uint64_t result;

  result = getWKSystemVersionSDK_Dawn();
  qword_1ECF6C600 = result;
  return result;
}

double static SystemVersion.Dawn.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_1908DBD50(&qword_1ECF6C608, (double *)&qword_1ECF6C600, a1);
}

uint64_t sub_1908DBCD8()
{
  uint64_t result;

  result = getWKSystemVersionSDK_DawnC();
  qword_1ECF6A600 = result;
  return result;
}

double static SystemVersion.DawnC.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_1908DBD50(qword_1ECF6A610, (double *)&qword_1ECF6A600, a1);
}

uint64_t sub_1908DBD14()
{
  uint64_t result;

  result = getWKSystemVersionSDK_Crystal();
  qword_1ECF6A708 = result;
  return result;
}

double static SystemVersion.Crystal.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_1908DBD50(&qword_1ECF6A718, qword_1ECF6A708, a1);
}

double sub_1908DBD50@<D0>(_QWORD *a1@<X0>, double *a2@<X1>, _QWORD *a3@<X8>)
{
  double result;

  if (*a1 != -1)
    swift_once();
  result = *a2;
  *a3 = *(_QWORD *)a2;
  return result;
}

uint64_t static SystemVersion.currentProcessIsLinkedOnOrAfter(_:)()
{
  return dyld_program_sdk_at_least();
}

uint64_t SystemVersion.description.getter()
{
  uint64_t v1;

  sub_1908DBE48();
  v1 = sub_190A47B78();
  sub_190A47B3C();
  sub_190A47B78();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_1908DBE48()
{
  unint64_t result;

  result = qword_1EE1ECBF0;
  if (!qword_1EE1ECBF0)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEE138], MEMORY[0x1E0DEE0F8]);
    atomic_store(result, (unint64_t *)&qword_1EE1ECBF0);
  }
  return result;
}

void SystemVersion.forAnyPlatform()(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(v1 + 4);
  *a1 = -1;
  a1[1] = v2;
}

uint64_t SystemVersion.hash(into:)()
{
  sub_190A487E4();
  return sub_190A487E4();
}

BOOL static SystemVersion.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

BOOL sub_1908DBEE8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1908DBF00()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t sub_1908DBF44()
{
  return sub_190A487CC();
}

uint64_t sub_1908DBF6C()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t sub_1908DBFAC()
{
  _BYTE *v0;

  if (*v0)
    return 7038067;
  else
    return 0x6D726F6674616C70;
}

uint64_t sub_1908DBFE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1908DC7EC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1908DC004(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1908DC010()
{
  sub_1908DC17C();
  return sub_190A48868();
}

uint64_t sub_1908DC038()
{
  sub_1908DC17C();
  return sub_190A48874();
}

uint64_t SystemVersion.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  int v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C5D0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_DWORD *)(v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1908DC17C();
  sub_190A48850();
  v12 = 0;
  sub_190A48658();
  if (!v2)
  {
    v11 = 1;
    sub_190A48658();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1908DC17C()
{
  unint64_t result;

  result = qword_1ECF6C7E0;
  if (!qword_1ECF6C7E0)
  {
    result = MEMORY[0x19401429C](&unk_190A4AE9C, &type metadata for SystemVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6C7E0);
  }
  return result;
}

uint64_t SystemVersion.hashValue.getter()
{
  sub_190A487C0();
  sub_190A487E4();
  sub_190A487E4();
  return sub_190A48808();
}

uint64_t SystemVersion.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  uint64_t v12;
  char v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69E00);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1908DC17C();
  sub_190A48838();
  if (!v2)
  {
    v14 = 0;
    v9 = sub_190A48598();
    v13 = 1;
    v10 = sub_190A48598();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1908DC360@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return SystemVersion.init(from:)(a1, a2);
}

uint64_t sub_1908DC374(_QWORD *a1)
{
  return SystemVersion.encode(to:)(a1);
}

uint64_t sub_1908DC388()
{
  sub_190A487C0();
  sub_190A487E4();
  sub_190A487E4();
  return sub_190A48808();
}

uint64_t sub_1908DC3E0()
{
  sub_190A487E4();
  return sub_190A487E4();
}

uint64_t sub_1908DC418()
{
  sub_190A487C0();
  sub_190A487E4();
  sub_190A487E4();
  return sub_190A48808();
}

unint64_t sub_1908DC470()
{
  unint64_t result;

  result = qword_1EE1ECBF8;
  if (!qword_1EE1ECBF8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for SystemVersion, &type metadata for SystemVersion);
    atomic_store(result, (unint64_t *)&qword_1EE1ECBF8);
  }
  return result;
}

uint64_t sub_1908DC4B4()
{
  uint64_t v1;

  sub_1908DBE48();
  v1 = sub_190A47B78();
  sub_190A47B3C();
  sub_190A47B78();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  return v1;
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SystemVersion(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SystemVersion(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SystemVersion()
{
  return &type metadata for SystemVersion;
}

uint64_t getEnumTagSinglePayload for ActivityFamily(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemVersion.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1908DC694 + 4 * byte_190A4ACD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1908DC6C8 + 4 * byte_190A4ACD0[v4]))();
}

uint64_t sub_1908DC6C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1908DC6D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1908DC6D8);
  return result;
}

uint64_t sub_1908DC6E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1908DC6ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1908DC6F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1908DC6F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SystemVersion.CodingKeys()
{
  return &type metadata for SystemVersion.CodingKeys;
}

unint64_t sub_1908DC718()
{
  unint64_t result;

  result = qword_1EE1ECC00;
  if (!qword_1EE1ECC00)
  {
    result = MEMORY[0x19401429C](&unk_190A4AE74, &type metadata for SystemVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ECC00);
  }
  return result;
}

unint64_t sub_1908DC760()
{
  unint64_t result;

  result = qword_1ECF6C7F0;
  if (!qword_1ECF6C7F0)
  {
    result = MEMORY[0x19401429C](&unk_190A4ADE4, &type metadata for SystemVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6C7F0);
  }
  return result;
}

unint64_t sub_1908DC7A8()
{
  unint64_t result;

  result = qword_1ECF6C7E8;
  if (!qword_1ECF6C7E8)
  {
    result = MEMORY[0x19401429C](&unk_190A4AE0C, &type metadata for SystemVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6C7E8);
  }
  return result;
}

uint64_t sub_1908DC7EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D726F6674616C70 && a2 == 0xE800000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7038067 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t WidgetViewMetadata.supportsForeground.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t WidgetViewMetadata.supportsForeground.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*WidgetViewMetadata.supportsForeground.modify())()
{
  return nullsub_1;
}

uint64_t WidgetViewMetadata.containsPrivacyRedactions.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t WidgetViewMetadata.containsPrivacyRedactions.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*WidgetViewMetadata.containsPrivacyRedactions.modify())()
{
  return nullsub_1;
}

uint64_t WidgetViewMetadata.containsInteractiveControls.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t WidgetViewMetadata.containsInteractiveControls.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*WidgetViewMetadata.containsInteractiveControls.modify())()
{
  return nullsub_1;
}

uint64_t WidgetViewMetadata.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WidgetViewMetadata();
  return sub_1908AAA48(v1 + *(int *)(v3 + 28), a1, (uint64_t *)&unk_1ECF6C858);
}

uint64_t type metadata accessor for WidgetViewMetadata()
{
  uint64_t result;

  result = qword_1ECF6ADE0;
  if (!qword_1ECF6ADE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t WidgetViewMetadata.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WidgetViewMetadata();
  return sub_1908DCA84(a1, v1 + *(int *)(v3 + 28), (uint64_t *)&unk_1ECF6C858);
}

uint64_t (*WidgetViewMetadata.url.modify())()
{
  type metadata accessor for WidgetViewMetadata();
  return nullsub_1;
}

uint64_t WidgetViewMetadata.auxiliaryMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WidgetViewMetadata();
  return sub_1908AAA48(v1 + *(int *)(v3 + 32), a1, &qword_1ECF6BC08);
}

uint64_t WidgetViewMetadata.auxiliaryMetadata.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WidgetViewMetadata();
  return sub_1908DCA84(a1, v1 + *(int *)(v3 + 32), &qword_1ECF6BC08);
}

uint64_t sub_1908DCA84(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t (*WidgetViewMetadata.auxiliaryMetadata.modify())()
{
  type metadata accessor for WidgetViewMetadata();
  return nullsub_1;
}

uint64_t WidgetViewMetadata.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = type metadata accessor for WidgetViewMetadata();
  v3 = a1 + *(int *)(v2 + 28);
  v4 = sub_190A45FC4();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  v6 = a1 + *(int *)(v2 + 32);
  v7 = sub_190A47284();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v9(v6, 1, 1, v7);
  *(_WORD *)a1 = 0;
  *(_BYTE *)(a1 + 2) = 0;
  sub_1908AA544(v3, (uint64_t *)&unk_1ECF6C858);
  v5(v3, 1, 1, v4);
  sub_1908AA544(v6, &qword_1ECF6BC08);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v9)(v6, 1, 1, v7);
}

uint64_t sub_1908DCBE8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1908DCC24 + 4 * byte_190A4AEF0[a1]))(0xD000000000000012, 0x8000000190A60D00);
}

uint64_t sub_1908DCC24()
{
  uint64_t v0;

  return v0 + 8;
}

uint64_t sub_1908DCC4C()
{
  return 7107189;
}

unint64_t sub_1908DCC5C()
{
  return 0xD000000000000011;
}

uint64_t sub_1908DCC78()
{
  unsigned __int8 *v0;

  return sub_1908DCBE8(*v0);
}

uint64_t sub_1908DCC80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1908DE03C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1908DCCA4(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1908DCCB0()
{
  sub_1908DCF08();
  return sub_190A48868();
}

uint64_t sub_1908DCCD8()
{
  sub_1908DCF08();
  return sub_190A48874();
}

uint64_t WidgetViewMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AD38);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1908DCF08();
  sub_190A48850();
  v8[15] = 0;
  sub_190A48604();
  if (!v1)
  {
    v8[14] = 1;
    sub_190A48604();
    v8[13] = 2;
    sub_190A485E0();
    type metadata accessor for WidgetViewMetadata();
    v8[12] = 3;
    sub_190A45FC4();
    sub_1908AA2F4(&qword_1ECF6C648, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_190A485EC();
    v8[11] = 4;
    sub_190A47284();
    sub_1908AA2F4(&qword_1ECF6BA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDCD50], MEMORY[0x1E0CDCD60]);
    sub_190A485EC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1908DCF08()
{
  unint64_t result;

  result = qword_1ECF6AE08;
  if (!qword_1ECF6AE08)
  {
    result = MEMORY[0x19401429C](&unk_190A4B08C, &type metadata for WidgetViewMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6AE08);
  }
  return result;
}

uint64_t WidgetViewMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;

  v28 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC08);
  MEMORY[0x1E0C80A78](v3);
  v27 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v5);
  v30 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF68168);
  v29 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for WidgetViewMetadata();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[2] = 2;
  v33 = &v12[*(int *)(v10 + 28)];
  v13 = v33;
  v14 = sub_190A45FC4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = (uint64_t)&v12[*(int *)(v9 + 32)];
  v16 = sub_190A47284();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1908DCF08();
  v31 = v8;
  v18 = (uint64_t)v33;
  v17 = v34;
  sub_190A48838();
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1908AA544(v18, (uint64_t *)&unk_1ECF6C858);
    return sub_1908AA544(v15, &qword_1ECF6BC08);
  }
  else
  {
    v34 = v16;
    v19 = v29;
    v20 = (uint64_t)v30;
    v39 = 0;
    *v12 = sub_190A48544() & 1;
    v38 = 1;
    v12[1] = sub_190A48544() & 1;
    v37 = 2;
    v12[2] = sub_190A48520();
    v36 = 3;
    sub_1908AA2F4(&qword_1ECF69D80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    sub_190A4852C();
    v21 = (uint64_t)v12;
    sub_1908DCA84(v20, v18, (uint64_t *)&unk_1ECF6C858);
    v35 = 4;
    sub_1908AA2F4(&qword_1ECF68130, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDCD50], MEMORY[0x1E0CDCD68]);
    v22 = (uint64_t)v27;
    v23 = v31;
    v24 = v32;
    sub_190A4852C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v24);
    v25 = v28;
    sub_1908DCA84(v22, v15, &qword_1ECF6BC08);
    sub_1908DD300(v21, v25);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1908DD344(v21);
  }
}

uint64_t sub_1908DD300(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetViewMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1908DD344(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WidgetViewMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1908DD380@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetViewMetadata.init(from:)(a1, a2);
}

uint64_t sub_1908DD394(_QWORD *a1)
{
  return WidgetViewMetadata.encode(to:)(a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for WidgetViewMetadata(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    v7 = *(int *)(a3 + 28);
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = sub_190A45FC4();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = *(int *)(a3 + 32);
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_190A47284();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC08);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return v4;
}

uint64_t destroy for WidgetViewMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_190A45FC4();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + *(int *)(a2 + 32);
  v8 = sub_190A47284();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return result;
}

uint64_t initializeWithCopy for WidgetViewMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_190A45FC4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 32);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_190A47284();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC08);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

_BYTE *assignWithCopy for WidgetViewMetadata(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_BYTE *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 28);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_190A45FC4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(a3 + 32);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_190A47284();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 24))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC08);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

uint64_t initializeWithTake for WidgetViewMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_190A45FC4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 32);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_190A47284();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC08);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

_BYTE *assignWithTake for WidgetViewMetadata(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_BYTE *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 28);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_190A45FC4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(a3 + 32);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_190A47284();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 40))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC08);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 32))(v16, v17, v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetViewMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1908DDC88(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = *(int *)(a3 + 28);
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC08);
      v11 = *(_QWORD *)(v12 - 8);
      v13 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v11 + 48))(&a1[v13], a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for WidgetViewMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_1908DDD3C(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC08);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1908DDDDC()
{
  unint64_t v0;
  unint64_t v1;

  sub_1908BBFB0(319, (unint64_t *)&qword_1ECF6D220, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
  {
    sub_1908BBFB0(319, &qword_1ECF6BBF8, (void (*)(uint64_t))MEMORY[0x1E0CDCD50]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for WidgetViewMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1908DDEE4 + 4 * byte_190A4AEFA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1908DDF18 + 4 * byte_190A4AEF5[v4]))();
}

uint64_t sub_1908DDF18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1908DDF20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1908DDF28);
  return result;
}

uint64_t sub_1908DDF34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1908DDF3CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1908DDF40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1908DDF48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetViewMetadata.CodingKeys()
{
  return &type metadata for WidgetViewMetadata.CodingKeys;
}

unint64_t sub_1908DDF68()
{
  unint64_t result;

  result = qword_1EE1ECC08;
  if (!qword_1EE1ECC08)
  {
    result = MEMORY[0x19401429C](&unk_190A4B064, &type metadata for WidgetViewMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ECC08);
  }
  return result;
}

unint64_t sub_1908DDFB0()
{
  unint64_t result;

  result = qword_1ECF6AE18;
  if (!qword_1ECF6AE18)
  {
    result = MEMORY[0x19401429C](&unk_190A4AFD4, &type metadata for WidgetViewMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6AE18);
  }
  return result;
}

unint64_t sub_1908DDFF8()
{
  unint64_t result;

  result = qword_1ECF6AE10;
  if (!qword_1ECF6AE10)
  {
    result = MEMORY[0x19401429C](&unk_190A4AFFC, &type metadata for WidgetViewMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6AE10);
  }
  return result;
}

uint64_t sub_1908DE03C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x8000000190A60D00 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000190A60D20 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000190A60D40 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000190A60D60)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t WidgetEnvironment.subscript.getter(uint64_t a1)
{
  return sub_1908E2140(a1, (void (*)(uint64_t))sub_1908E1124);
}

{
  return sub_1908E2140(a1, (void (*)(uint64_t))sub_1908E1124);
}

BOOL WidgetEnvironment.matches(_:ignoring:)(uint64_t a1, int64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v5 = *v2;
  v6 = v2[1];
  v7 = *(os_unfair_lock_s **)(*v2 + 16);
  swift_retain();
  os_unfair_lock_lock(v7);
  v8 = v6 + OBJC_IVAR___CHKWidgetEnvironment_tuples;
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)v8 + 16);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  swift_release();
  if (!v9)
    return 1;
  WidgetEnvironment.findEnumeratedIndex(matching:ignoring:)(a1, a2);
  return (v10 & 1) == 0;
}

uint64_t sub_1908DE2E8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v3 = a1;
  v30 = MEMORY[0x1E0DEE9D8];
  sub_1908B8D70(0, v1, 0);
  v2 = v30;
  result = sub_1908FE5F8(v3);
  v6 = result;
  v7 = 0;
  v8 = v3 + 64;
  v24 = v3 + 80;
  v25 = v1;
  v26 = v5;
  v27 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v3 + 36) != v5)
      goto LABEL_24;
    v28 = v7;
    v12 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 24 * v6);
    v13 = *v12;
    v29 = v12[1];
    v14 = v12[2];
    v15 = v3;
    v17 = *(_QWORD *)(v30 + 16);
    v16 = *(_QWORD *)(v30 + 24);
    swift_retain();
    result = swift_bridgeObjectRetain();
    if (v17 >= v16 >> 1)
      result = sub_1908B8D70(v16 > 1, v17 + 1, 1);
    *(_QWORD *)(v30 + 16) = v17 + 1;
    v18 = (_QWORD *)(v30 + 24 * v17);
    v18[4] = v13;
    v18[5] = v29;
    v18[6] = v14;
    v9 = 1 << *(_BYTE *)(v15 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = v27;
    v19 = *(_QWORD *)(v27 + 8 * v11);
    if ((v19 & (1 << v6)) == 0)
      goto LABEL_26;
    v3 = v15;
    v5 = v26;
    if (*(_DWORD *)(v15 + 36) != v26)
      goto LABEL_27;
    v20 = v19 & (-2 << (v6 & 0x3F));
    if (v20)
    {
      v9 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v25;
    }
    else
    {
      v21 = v11 + 1;
      v22 = (unint64_t)(v9 + 63) >> 6;
      v10 = v25;
      if (v11 + 1 < v22)
      {
        v23 = *(_QWORD *)(v27 + 8 * v21);
        if (v23)
        {
LABEL_20:
          v9 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v11)
          {
            v23 = *(_QWORD *)(v24 + 8 * v11++);
            if (v23)
            {
              v21 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v28 + 1;
    v6 = v9;
    if (v28 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1908DE51C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_19090191C();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_1908DE568()
{
  sub_19090191C();
  return sub_190A46C48();
}

uint64_t sub_1908DE5B0(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v6 = v5;
  v20 = a3;
  v21 = a4;
  swift_retain();
  v10 = a4;
  swift_bridgeObjectRetain();
  v11 = sub_1908FFDE4(&v20, a5);
  v13 = (void *)v12;
  v22 = v11;
  v23 = v12;
  v24 = v14;
  if (v12 >> 62)
    goto LABEL_17;
  v15 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v15 >= 1)
  {
    v16 = 0;
    v17 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      if ((sub_1908EF6EC(v15 - 1) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v22 = v17;
        swift_bridgeObjectRelease();
        v23 = v17;
        swift_bridgeObjectRelease();
        v24 = v17;
      }
      if (__OFADD__(v16, 1))
        break;
      v20 = v16;
      v21 = v13;
      v18 = a1(&v20);
      if (v6)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v16;
      }
      if ((v18 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v16;
      }
      swift_bridgeObjectRelease();
      v13 = (void *)v23;
      if (v23 >> 62)
      {
        swift_bridgeObjectRetain_n();
        v15 = sub_190A48484();
        swift_bridgeObjectRelease();
      }
      else
      {
        v15 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      ++v16;
      if (v15 <= 0)
        goto LABEL_18;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain_n();
    v15 = sub_190A48484();
    swift_bridgeObjectRelease();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1908DE7E0@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t i;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t (*v38)(char *, uint64_t, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  char *v45;
  uint64_t v46;
  char *v47;
  id v48;
  uint64_t (*v49)(char *);
  uint64_t v50;
  void (*v51)(void);
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56[2];
  uint64_t v57;

  v49 = a1;
  v50 = a2;
  v47 = a3;
  v3 = sub_190A46C30();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v55 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v46 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
  MEMORY[0x1E0C80A78](v9);
  v54 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA590);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (uint64_t *)((char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1908AAA48(v53, (uint64_t)v16, &qword_1EE1EA590);
  sub_1908BD0B4((uint64_t)v16, (uint64_t)v13, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  v20 = *v13;
  v21 = (void *)v13[1];
  v52 = (char *)v19 + *(int *)(v17 + 20);
  v53 = v4;
  v51 = *(void (**)(void))(v4 + 16);
  v51();
  swift_retain();
  v22 = v21;
  v23 = sub_1908FF740(MEMORY[0x1E0DEE9D8]);
  v56[0] = v20;
  v56[1] = (uint64_t)v22;
  swift_retain();
  v48 = v22;
  swift_bridgeObjectRetain();
  v24 = sub_1908FFDE4(v56, v23);
  v26 = v25;
  v28 = v27;
  swift_bridgeObjectRelease();

  swift_release();
  *v19 = v24;
  v19[1] = v26;
  v19[2] = v28;
  sub_1908B5150((uint64_t)v13, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  v29 = v19[1];
  if (v29 >> 62)
  {
LABEL_31:
    swift_bridgeObjectRetain_n();
    v30 = sub_190A48484();
    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v31 = v54;
  if (v30 >= 1)
  {
    while (1)
    {
      if ((sub_1908EF6EC(v30 - 1) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v32 = MEMORY[0x1E0DEE9D8];
        *v19 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRelease();
        v19[1] = v32;
        swift_bridgeObjectRelease();
        v19[2] = v32;
      }
      ((void (*)(char *, char *, uint64_t))v51)(v8, v52, v3);
      if (v29 >> 62)
      {
        swift_bridgeObjectRetain();
        v33 = sub_190A48484();
        swift_bridgeObjectRelease();
        if (!v33)
          goto LABEL_15;
      }
      else
      {
        v33 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v33)
          goto LABEL_15;
      }
      if (v33 < 1)
      {
        __break(1u);
        goto LABEL_31;
      }
      for (i = 0; i != v33; ++i)
      {
        if ((v29 & 0xC000000000000001) != 0)
        {
          v35 = MEMORY[0x194013510](i, v29);
        }
        else
        {
          v35 = *(_QWORD *)(v29 + 8 * i + 32);
          swift_retain();
        }
        (*(void (**)(char *))(**(_QWORD **)(v35 + 16) + 112))(v8);
        swift_release();
      }
LABEL_15:
      swift_bridgeObjectRelease();
      v36 = v53;
      v31 = v54;
      v37 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
      v37(v54, v8, v3);
      v38 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
      v38(v31, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v31, 1, v3) == 1)
        goto LABEL_25;
      v39 = v55;
      v37(v55, v31, v3);
      v40 = v57;
      v41 = v49(v39);
      if (v40)
      {
        (*(void (**)(char *, uint64_t))(v36 + 8))(v55, v3);
        return sub_1908B5150((uint64_t)v19, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
      }
      if ((v41 & 1) != 0)
      {
        sub_1908B5150((uint64_t)v19, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
        v45 = v47;
        v37(v47, v55, v3);
        v42 = v45;
        v43 = 0;
        return v38(v42, v43, 1, v3);
      }
      v57 = 0;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v55, v3);
      v29 = v19[1];
      if (v29 >> 62)
      {
        swift_bridgeObjectRetain_n();
        v30 = sub_190A48484();
        swift_bridgeObjectRelease();
        if (v30 <= 0)
        {
LABEL_22:
          swift_bridgeObjectRelease();
          goto LABEL_24;
        }
      }
      else
      {
        v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v30 <= 0)
          goto LABEL_22;
      }
    }
  }
  swift_bridgeObjectRelease();
  v38 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56);
LABEL_24:
  v38(v31, 1, 1, v3);
LABEL_25:
  sub_1908B5150((uint64_t)v19, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
  v42 = v47;
  v43 = 1;
  return v38(v42, v43, 1, v3);
}

uint64_t WidgetEnvironment.findEnumeratedIndex(matching:ignoring:)(uint64_t a1, int64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  os_unfair_lock_s *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  os_unfair_lock_s *v35;
  char *v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  char v40;
  char v41;
  uint64_t result;
  char *v43;
  id v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  void (*v49)(_QWORD, _QWORD, _QWORD);
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(_QWORD, _QWORD, _QWORD);
  unint64_t v60;
  char *v61;
  char *v62;
  uint64_t i;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  _QWORD *v80;
  char *v81;
  void (*v82)(_QWORD, _QWORD);
  uint64_t v83;
  os_unfair_lock_s *v84;
  char *v85;
  objc_class *v86;
  char *v87;
  unint64_t *v88;
  char *v89;
  char *v90;
  unint64_t *v91;
  unint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  void (*v103)(_QWORD, _QWORD, _QWORD);
  uint64_t v104;
  char *v105;
  void (*v106)(_QWORD, _QWORD, _QWORD, _QWORD);
  int64_t v107;
  unint64_t v108;
  unint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  objc_super v119;
  uint64_t v120[3];
  char *v121;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
  MEMORY[0x1E0C80A78](v5);
  v110 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_190A466FC();
  v114 = *(_QWORD *)(v7 - 8);
  v115 = v7;
  MEMORY[0x1E0C80A78](v7);
  v113 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_190A46C30();
  v111 = *(_QWORD *)(v118 - 8);
  v9 = MEMORY[0x1E0C80A78](v118);
  v11 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v100 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v117 = (char *)&v100 - v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v100 - v17;
  v20 = *v2;
  v19 = (char *)v2[1];
  v21 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain();
  os_unfair_lock_lock(v21);
  v22 = &v19[OBJC_IVAR___CHKWidgetEnvironment_tuples];
  swift_beginAccess();
  v23 = *(_QWORD *)(*(_QWORD *)v22 + 16);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));
  swift_release();
  if (!v23)
    return 0;
  v102 = v11;
  swift_bridgeObjectRetain();
  swift_retain();
  v24 = v19;
  v25 = sub_1908FF740(a2);
  v116 = v20;
  v26 = v25;
  v27 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v27);
  *(&v100 - 2) = a1;
  v28 = sub_1908DE5B0((uint64_t (*)(uint64_t *))sub_1908FF880, (uint64_t)(&v100 - 4), v116, v24, v26);
  v30 = v29;
  v31 = v116;
  swift_bridgeObjectRelease();

  swift_release();
  if (v30)
  {
    swift_bridgeObjectRelease();
    return v28;
  }
  v32 = 0;
  v33 = a1;
  KeyPath = swift_getKeyPath();
  v35 = *(os_unfair_lock_s **)(v31 + 16);
  swift_retain_n();
  v36 = v24;
  os_unfair_lock_lock(v35);
  v37 = sub_1908B7A68(KeyPath);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v31 + 16));
  v105 = v36;

  swift_release();
  swift_release_n();
  if (!v37)
    return 0;
  v38 = sub_1908FF90C();
  sub_190A46C3C();
  v39 = v121;
  sub_1908EE7D0((uint64_t)v121, v37);
  v41 = v40;
  swift_bridgeObjectRelease();

  if ((v41 & 1) == 0)
    return 0;
  sub_190A46C3C();
  v43 = v121;
  v44 = objc_msgSend(v121, sel_fallbackDisplayProperties);

  sub_1908AB890(0, (unint64_t *)&unk_1ECF6A9A8);
  v45 = sub_190A47C5C();

  if (v45 >> 62)
    goto LABEL_65;
  v46 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v112 = v33;
    v109 = v38;
    v104 = v32;
    v101 = v14;
    if (v46)
      break;
    v47 = MEMORY[0x1E0DEE9D8];
    v32 = v111;
LABEL_25:
    swift_bridgeObjectRelease();
    v113 = *(char **)(v47 + 16);
    if (!v113)
    {
      v38 = v116;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v110, 1, 1, v118);
LABEL_54:
      swift_bridgeObjectRelease();
      v83 = swift_getKeyPath();
      v84 = *(os_unfair_lock_s **)(v38 + 16);
      swift_retain_n();
      v85 = v105;
      os_unfair_lock_lock(v84);
      if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
      {
        v86 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
        v87 = (char *)objc_allocWithZone(v86);
        v88 = (unint64_t *)&v87[OBJC_IVAR___CHKWidgetEnvironment_tuples];
        v89 = v85;
        v90 = v87;
        *v88 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
        v91 = (unint64_t *)&v89[OBJC_IVAR___CHKWidgetEnvironment_tuples];
        swift_beginAccess();
        v92 = *v91;
        swift_beginAccess();
        *v88 = v92;
        v38 = v116;
        swift_bridgeObjectRetain();

        swift_bridgeObjectRelease();
        v119.receiver = v90;
        v119.super_class = v86;
        v85 = (char *)objc_msgSendSuper2(&v119, sel_init);

      }
      v93 = v85;
      swift_retain();
      sub_1908E17F8(0, v83, (unint64_t *)&unk_1ECF6A9A8, 0x1E0D10188, (uint64_t *)&unk_1ECF69C18, (uint64_t *)&unk_1EE1EC780);

      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v38 + 16));
      swift_release();
      swift_release();
      swift_retain_n();
      v94 = v93;
      swift_bridgeObjectRetain();
      v95 = v94;
      v96 = sub_1908FF740(a2);
      v97 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v97);
      *(&v100 - 2) = v112;
      v28 = sub_1908DE5B0((uint64_t (*)(uint64_t *))sub_1908FF880, (uint64_t)(&v100 - 4), v38, v95, v96);
      v99 = v98;
      swift_bridgeObjectRelease();

      swift_release();
      swift_release();
      if (v99)
        swift_bridgeObjectRelease();
      else
        v28 = 0;

      swift_release();
      return v28;
    }
    v45 = 0;
    v114 = v47 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
    v57 = a2 & 0xFFFFFFFFFFFFFF8;
    v115 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0)
      v57 = a2;
    v100 = v57;
    v18 = (char *)(a2 & 0xC000000000000001);
    v108 = (unint64_t)a2 >> 62;
    v38 = v116;
    v58 = v118;
    v14 = v101;
    v33 = (uint64_t)v110;
    v107 = a2;
    while (v45 < *(_QWORD *)(v47 + 16))
    {
      v59 = *(void (**)(_QWORD, _QWORD, _QWORD))(v32 + 16);
      v59(v33, v114 + *(_QWORD *)(v32 + 72) * v45, v58);
      v106 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v32 + 56);
      v106(v33, 0, 1, v58);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v33, 1, v58) == 1)
        goto LABEL_54;
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v14, v33, v58);
      v60 = v108;
      if (v108)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        v71 = v105;
        sub_190A48484();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_retain();
        v61 = v105;
      }
      sub_190A481CC();
      v62 = (char *)sub_190A47DB8();
      v121 = v62;
      if (v60)
      {
        swift_bridgeObjectRetain();
        v33 = sub_190A48484();
        swift_bridgeObjectRelease();
      }
      else
      {
        v33 = *(_QWORD *)(v115 + 16);
      }
      v117 = (char *)v45;
      v103 = v59;
      if (v33)
      {
        if (v33 < 1)
          goto LABEL_64;
        for (i = 0; i != v33; ++i)
        {
          if (v18)
          {
            v64 = MEMORY[0x194013510](i, a2);
          }
          else
          {
            v64 = *(_QWORD *)(a2 + 8 * i + 32);
            swift_retain();
          }
          sub_1908F4F0C(&v120, v64);
          swift_release();
        }
        v65 = swift_bridgeObjectRelease();
        v62 = v121;
        v38 = v116;
        v14 = v101;
      }
      else
      {
        v65 = swift_bridgeObjectRelease();
      }
      MEMORY[0x1E0C80A78](v65);
      *(&v100 - 2) = (uint64_t)v14;
      v66 = v105;
      v67 = v104;
      v68 = sub_1908DE5B0((uint64_t (*)(uint64_t *))sub_1908FF880, (uint64_t)(&v100 - 4), v38, v105, (uint64_t)v62);
      v70 = v69;
      v104 = v67;
      swift_bridgeObjectRelease();

      swift_release();
      if (v70)
      {
        v117 = (char *)v68;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v72 = v118;
        v73 = v111;
        if (qword_1ECF6AD50 != -1)
          swift_once();
        v74 = sub_190A465A0();
        __swift_project_value_buffer(v74, (uint64_t)qword_1ECF6D510);
        v75 = v102;
        v76 = v101;
        v103(v102, v101, v72);
        v77 = sub_190A46588();
        v78 = sub_190A47F44();
        if (os_log_type_enabled(v77, v78))
        {
          v79 = (uint8_t *)swift_slowAlloc();
          v80 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v79 = 138412290;
          sub_190A46C3C();
          v81 = v121;
          v72 = v118;
          sub_190A48178();
          *v80 = v81;
          v82 = *(void (**)(_QWORD, _QWORD))(v111 + 8);
          v82(v75, v72);
          _os_log_impl(&dword_1908A7000, v77, v78, "Matched with fallback display properties: %@", v79, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
          swift_arrayDestroy();
          MEMORY[0x194014398](v80, -1, -1);
          MEMORY[0x194014398](v79, -1, -1);

        }
        else
        {

          v82 = *(void (**)(_QWORD, _QWORD))(v73 + 8);
          v82(v75, v72);
        }
        v82(v76, v72);
        return (uint64_t)v117;
      }
      v58 = v118;
      v45 = (unint64_t)(v117 + 1);
      v32 = v111;
      (*(void (**)(char *, uint64_t))(v111 + 8))(v14, v118);
      v38 = v116;
      v33 = (uint64_t)v110;
      a2 = v107;
      if ((char *)v45 == v113)
      {
        v106(v110, 1, 1, v58);
        goto LABEL_54;
      }
    }
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    swift_bridgeObjectRetain();
    v46 = sub_190A48484();
    swift_bridgeObjectRelease();
  }
  v108 = v45 & 0xC000000000000001;
  LODWORD(v103) = *MEMORY[0x1E0CD8A98];
  LODWORD(v106) = *MEMORY[0x1E0CD8AA0];
  v47 = MEMORY[0x1E0DEE9D8];
  v38 = 4;
  v32 = v111;
  v107 = v46;
  while (1)
  {
    if (v108)
      v48 = (char *)MEMORY[0x194013510](v38 - 4, v45);
    else
      v48 = (char *)*(id *)(v45 + 8 * v38);
    v14 = v48;
    v33 = v38 - 3;
    if (__OFADD__(v38 - 4, 1))
    {
      __break(1u);
      goto LABEL_63;
    }
    v49 = *(void (**)(_QWORD, _QWORD, _QWORD))(v32 + 16);
    v49(v18, v112, v118);
    v121 = v14;
    v50 = v14;
    sub_190A46C48();
    objc_msgSend(v50, sel_scale);
    sub_190A469F0();
    v51 = (char *)objc_msgSend(v50, sel_colorGamut);
    v52 = v106;
    if (v51)
    {
      v53 = v51;
      v52 = v103;
      if (v51 != (char *)1)
        break;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v114 + 104))(v113, v52, v115);
    sub_190A469D8();

    v49(v117, v18, v118);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v47 = sub_1908F23E8(0, *(_QWORD *)(v47 + 16) + 1, 1, v47, (uint64_t *)&unk_1ECF6C4C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDAA30]);
    v55 = *(_QWORD *)(v47 + 16);
    v54 = *(_QWORD *)(v47 + 24);
    if (v55 >= v54 >> 1)
      v47 = sub_1908F23E8(v54 > 1, v55 + 1, 1, v47, (uint64_t *)&unk_1ECF6C4C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDAA30]);
    *(_QWORD *)(v47 + 16) = v55 + 1;
    v56 = v118;
    (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v47+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v55, v117, v118);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v56);
    ++v38;
    if (v33 == v107)
      goto LABEL_25;
  }
  type metadata accessor for CHSDisplayGamut(0);
  v121 = v53;
  result = sub_190A48730();
  __break(1u);
  return result;
}

Swift::Int __swiftcall WidgetEnvironment.enumeratedCount()()
{
  uint64_t *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  _QWORD *v3;
  Swift::Int result;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;

  v1 = *v0;
  v2 = *(os_unfair_lock_s **)(*v0 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  v3 = sub_1908EB19C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  result = swift_release();
  v5 = v3[2];
  if (v5)
  {
    v6 = 0;
    v7 = 1;
    while (v6 < v3[2])
    {
      v8 = v3[v6 + 4];
      if (v8 >> 62)
      {
        swift_bridgeObjectRetain();
        v9 = sub_190A48484();
        result = swift_bridgeObjectRelease();
      }
      else
      {
        v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v9 <= 1)
        v10 = 1;
      else
        v10 = v9;
      v11 = v7 * v10;
      if ((unsigned __int128)(v7 * (__int128)v10) >> 64 != (v7 * v10) >> 63)
        goto LABEL_16;
      ++v6;
      v7 *= v10;
      if (v5 == v6)
        goto LABEL_14;
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
    v11 = 0;
LABEL_14:
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t WidgetEnvironment.environmentValues(at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  os_unfair_lock_s *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a1;
  v25 = a2;
  v3 = sub_190A46C30();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1ECC18);
  MEMORY[0x1E0C80A78](v23);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *v2;
  v16 = (char *)v2[1];
  v17 = *(os_unfair_lock_s **)(*v2 + 16);
  swift_retain();
  os_unfair_lock_lock(v17);
  v18 = &v16[OBJC_IVAR___CHKWidgetEnvironment_tuples];
  swift_beginAccess();
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 16);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 16));
  swift_release();
  if (!v19)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v25, 1, 1, v3);
  sub_190A46C24();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(&v9[*(int *)(v7 + 20)], v6, v3);
  *(_QWORD *)v9 = v15;
  *((_QWORD *)v9 + 1) = v16;
  v20 = *(void (**)(char *, uint64_t))(v4 + 8);
  swift_retain();
  v21 = v16;
  v20(v6, v3);
  result = sub_1908BD0B4((uint64_t)v9, (uint64_t)v11, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  if (v24 < 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)&v11[*(int *)(v23 + 36)] = v24;
    sub_1908EEAB4(v14);
    WidgetEnvironment.EnvironmentValuesEnumerator.Iterator.next()(v25);
    return sub_1908B5150((uint64_t)v14, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
  }
  return result;
}

unint64_t sub_1908DFD94(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AF90);
  v2 = sub_190A484C0();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1908AAA48(v6, (uint64_t)&v15, &qword_1EE1ECD50);
    v7 = v15;
    v8 = v16;
    result = sub_1908D2C98(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_190901E94(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1908DFEC8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5A8);
  v2 = sub_190A484C0();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1908AAA48(v6, (uint64_t)&v13, &qword_1ECF6C5A0);
    v7 = v13;
    result = sub_1908D371C(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_190901E94(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1908DFFF4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CD50);
  v2 = (_QWORD *)sub_190A484C0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 56);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 3);
    v6 = (uint64_t)*(v4 - 2);
    v7 = (uint64_t)*(v4 - 1);
    v8 = *v4;
    swift_retain();
    swift_bridgeObjectRetain();
    v9 = v8;
    result = sub_1908D45AC(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (_QWORD *)(v2[6] + 24 * result);
    *v12 = v5;
    v12[1] = v6;
    v12[2] = v7;
    *(_QWORD *)(v2[7] + 8 * result) = v9;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v2[2] = v15;
    v4 += 4;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1908E012C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CD60);
  v2 = (_QWORD *)sub_190A484C0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v6 = *(v4 - 1);
    v5 = *v4;
    swift_retain();
    swift_retain();
    result = sub_1908D2C2C(v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1908E0234(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CD58);
  v2 = (_QWORD *)sub_190A484C0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_1908D2C98(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1908E034C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECCC8);
  v2 = (_QWORD *)sub_190A484C0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1908D2C98(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1908E046C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_190A486DC();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_190A486DC() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1908E0530(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  int v12;
  int v13;
  BOOL v14;
  BOOL v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  BOOL v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v4 = a2 + 32;
  swift_bridgeObjectRetain();
  v5 = 0;
  while (1)
  {
    v6 = *(_QWORD *)(v4 + 8 * v5);
    if (!v6)
    {
      if (!a1)
        break;
      goto LABEL_4;
    }
    if (a1)
    {
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
      sub_1908AF598((unint64_t *)&qword_1EE1E5F10, qword_1ECF6B760, MEMORY[0x1E0D0F988]);
      sub_190A47C08();
      sub_190A47C08();
      if (v23 == v21 && v24 == v22)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v7 = sub_190A486DC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0)
          goto LABEL_38;
      }
      v8 = *(_QWORD **)(v6 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations);
      v9 = *(_QWORD **)(a1 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations);
      v10 = v8[2];
      if (v10 != v9[2])
        goto LABEL_38;
      if (v10)
        v11 = v8 == v9;
      else
        v11 = 1;
      if (!v11)
      {
        v14 = v8[4] == v9[4] && v8[5] == v9[5];
        if (!v14 && (sub_190A486DC() & 1) == 0)
          goto LABEL_38;
        if (v10 != 1)
        {
          v15 = v8[6] == v9[6] && v8[7] == v9[7];
          if (!v15 && (sub_190A486DC() & 1) == 0)
            goto LABEL_38;
          v16 = v10 - 2;
          if (v16)
          {
            v17 = v9 + 9;
            v18 = v8 + 9;
            while (1)
            {
              v19 = *(v18 - 1) == *(v17 - 1) && *v18 == *v17;
              if (!v19 && (sub_190A486DC() & 1) == 0)
                break;
              v17 += 2;
              v18 += 2;
              if (!--v16)
                goto LABEL_17;
            }
LABEL_38:
            swift_release();
            swift_release();
            goto LABEL_4;
          }
        }
      }
LABEL_17:
      v12 = *(unsigned __int8 *)(v6 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations);
      v13 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations);
      swift_release();
      swift_release();
      if (v12 == v13)
        break;
    }
LABEL_4:
    if (++v5 == v2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1908E079C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v10;
  char v11;
  unint64_t v12;
  char v13;

  if (a2 >> 62)
    goto LABEL_20;
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_190A48484())
  {
    v6 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v7 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v7 = (id)MEMORY[0x194013510](0, a2);
LABEL_5:
      v8 = v7;
      sub_1908AB890(0, (unint64_t *)a3);
      a3 = sub_190A480F4();

      if ((a3 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v5 == 1)
        goto LABEL_18;
      if (v6)
        break;
      v6 = 5;
      while (1)
      {
        v12 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
          break;
        a3 = (uint64_t)*(id *)(a2 + 8 * v6);
        v13 = sub_190A480F4();

        if ((v13 & 1) != 0)
          goto LABEL_6;
        ++v6;
        if (v12 == v5)
          goto LABEL_18;
      }
      __break(1u);
    }
    a3 = 1;
    while (1)
    {
      MEMORY[0x194013510](a3, a2);
      v10 = a3 + 1;
      if (__OFADD__(a3, 1))
        break;
      v11 = sub_190A480F4();
      swift_unknownObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_6;
      ++a3;
      if (v10 == v5)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1908E0920(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return v2 & 1;
  if (*(_BYTE *)(a2 + 32) == (result & 1))
    return 1;
  if (v2 == 1)
    return 0;
  v3 = 33;
  while (1)
  {
    v4 = v3 - 31;
    if (__OFADD__(v3 - 32, 1))
      break;
    v5 = *(_BYTE *)(a2 + v3) ^ result;
    if ((v5 & 1) != 0)
    {
      ++v3;
      if (v4 != v2)
        continue;
    }
    LOBYTE(v2) = v5 ^ 1;
    return v2 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1908E0990(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  char *v16;
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a1;
  v3 = sub_190A468E8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v25 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v26 = (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB598);
  MEMORY[0x1E0C80A78](v27);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 + 16);
  if (!v11)
    return 0;
  v12 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v13 = *(_QWORD *)(v7 + 72);
  v23 = a2;
  swift_bridgeObjectRetain();
  v24 = v13;
  while (1)
  {
    v14 = (uint64_t)&v10[*(int *)(v27 + 48)];
    sub_1908AAA48(v12, (uint64_t)v10, &qword_1ECF6AE40);
    sub_1908AAA48(v28, v14, &qword_1ECF6AE40);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
    if (v15(v10, 1, v3) == 1)
      break;
    sub_1908AAA48((uint64_t)v10, v26, &qword_1ECF6AE40);
    if (v15((char *)v14, 1, v3) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v26, v3);
      goto LABEL_4;
    }
    v16 = v25;
    v17 = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v25, v14, v3);
    sub_1908AED38((unint64_t *)&unk_1EE1EA8D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9EF8], MEMORY[0x1E0CD9F08]);
    v18 = sub_190A47AAC();
    v19 = *(void (**)(char *, uint64_t))(v4 + 8);
    v20 = v16;
    v13 = v24;
    v19(v20, v3);
    v19((char *)v17, v3);
    sub_1908AA544((uint64_t)v10, &qword_1ECF6AE40);
    if ((v18 & 1) != 0)
      goto LABEL_14;
LABEL_5:
    v12 += v13;
    if (!--v11)
    {
      v21 = 0;
      goto LABEL_15;
    }
  }
  if (v15((char *)v14, 1, v3) != 1)
  {
LABEL_4:
    sub_1908AA544((uint64_t)v10, &qword_1EE1EB598);
    goto LABEL_5;
  }
  sub_1908AA544((uint64_t)v10, &qword_1ECF6AE40);
LABEL_14:
  v21 = 1;
LABEL_15:
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1908E0C44(uint64_t result, double a2)
{
  uint64_t v2;
  _BOOL8 v3;
  uint64_t i;
  uint64_t v5;
  double v6;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return 0;
  if (*(double *)(result + 32) == a2)
    return 1;
  if (v2 != 1)
  {
    for (i = 5; ; ++i)
    {
      v5 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v6 = *(double *)(result + 8 * i);
      v3 = v6 == a2;
      if (v6 == a2 || v5 == v2)
        return v3;
    }
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_1908E0CA4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;

  if (qword_1ECF6BF78 != -1)
    swift_once();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1908B88AC(v0);
  result = swift_bridgeObjectRelease();
  off_1ECF6CA20 = v1;
  return result;
}

void *sub_1908E0D0C()
{
  void *result;

  result = (void *)sub_1908FE840();
  off_1ECF6BF68 = result;
  return result;
}

void sub_1908E0D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  char isUniquelyReferenced_nonNull_native;
  id v10;
  uint64_t v11;

  if (a1)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    *v4 = 0x8000000000000000;
    sub_1908FC140(a1, a2, a3, a4, isUniquelyReferenced_nonNull_native);
    *v4 = v11;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = (id)sub_1909000EC(a3, a4);
    swift_bridgeObjectRelease();
    swift_release();

  }
}

uint64_t sub_1908E0E04(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_190901E94((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_1908FC7CC(v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = sub_190A48400();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_1908AA544(a1, (uint64_t *)&unk_1ECF6C8A0);
    sub_1908F8CC4(a2, v9);
    v7 = sub_190A48400();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
    return sub_1908AA544((uint64_t)v9, (uint64_t *)&unk_1ECF6C8A0);
  }
}

uint64_t sub_1908E0EE8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90);
  *a2 = a1;
  sub_190A482C8();
  sub_190A47B3C();
  sub_190A4867C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A48304();
  v4 = *MEMORY[0x1E0DEC450];
  v5 = sub_190A4831C();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
}

id WidgetEnvironment._lock_storage.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

void WidgetEnvironment._lock_storage.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t (*WidgetEnvironment._lock_storage.modify())()
{
  return nullsub_1;
}

uint64_t sub_1908E1028@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t result;

  v4 = *(void **)(a1 + 8);
  v5 = *a2;
  swift_retain();
  v6 = v4;
  v7 = WidgetEnvironment.subscript.getter(v5);

  result = swift_release();
  *a3 = v7;
  return result;
}

uint64_t sub_1908E1098(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a3;
  v4 = *a1;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_190901460(v4, v3);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t WidgetEnvironment.subscript.setter(uint64_t a1, uint64_t a2)
{
  sub_190901460(a1, a2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1908E1124@<X0>(uint64_t *a1@<X8>)
{
  return sub_1909014D0(a1);
}

uint64_t sub_1908E1138()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  if (qword_1ECF6C8D8 != -1)
    swift_once();
  swift_beginAccess();
  v0 = off_1ECF6CA28;
  v1 = swift_retain();
  v2 = sub_1908B78A0(v1, (uint64_t)v0);
  swift_endAccess();
  v3 = swift_release();
  if (v2)
  {
    v4 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v2 + 16) + 80))(v3);
    v7 = sub_1908EB628(v4, v5, v6);
    swift_bridgeObjectRelease();
    v8 = swift_release();
    if (v7)
    {
      MEMORY[0x1E0C80A78](v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CD00);
      sub_1908AF598(&qword_1ECF69E98, &qword_1ECF6CD00, MEMORY[0x1E0DEAF38]);
      v7 = sub_190A47BB4();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
    return v7;
  }
  else
  {
    sub_190A48298();
    sub_190A47B3C();
    sub_190A483C4();
    sub_190A486B8();
    result = sub_190A48448();
    __break(1u);
  }
  return result;
}

void sub_1908E1380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t *a5)
{
  uint64_t v5;
  void *v11;
  objc_class *v12;
  char *v13;
  unint64_t *v14;
  char *v15;
  char *v16;
  unint64_t *v17;
  unint64_t v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  objc_super v24;
  uint64_t v25;

  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v25 = v5;
    v11 = *(void **)(a1 + 8);
    v23 = a4;
    v12 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v13 = (char *)objc_allocWithZone(v12);
    v14 = (unint64_t *)&v13[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v15 = v11;
    v16 = v13;
    *v14 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v17 = (unint64_t *)&v15[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v18 = *v17;
    swift_beginAccess();
    *v14 = v18;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v24.receiver = v16;
    v24.super_class = v12;
    a4 = v23;
    v19 = objc_msgSendSuper2(&v24, sel_init);

    v20 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = v19;

  }
  v21 = *(void **)(a1 + 8);
  swift_bridgeObjectRetain();
  v22 = v21;
  swift_retain();
  sub_1908E1A24(a3, a2, a4, a5);

}

void sub_1908E14F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a7)
{
  uint64_t v7;
  void *v15;
  char *v16;
  unint64_t *v17;
  char *v18;
  unint64_t *v19;
  unint64_t v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  char *v25;
  objc_class *v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v28;
  objc_super v29;
  uint64_t v30;

  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v15 = *(void **)(a1 + 8);
    v26 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v30 = v7;
    v16 = (char *)objc_allocWithZone(v26);
    v27 = a6;
    v28 = a7;
    v17 = (unint64_t *)&v16[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v25 = v15;
    v18 = v16;
    *v17 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v19 = (unint64_t *)&v25[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v20 = *v19;
    swift_beginAccess();
    *v17 = v20;
    a6 = v27;
    a7 = v28;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v29.receiver = v18;
    v29.super_class = v26;
    v21 = objc_msgSendSuper2(&v29, sel_init);

    v22 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = v21;

  }
  v23 = *(void **)(a1 + 8);
  swift_bridgeObjectRetain();
  v24 = v23;
  swift_retain();
  sub_1908E1C18(a3, a2, a4, a5, a6, a7);

}

void sub_1908E1684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v6;
  objc_class *v7;
  char *v8;
  unint64_t *v9;
  char *v10;
  char *v11;
  unint64_t *v12;
  unint64_t v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  objc_super v18;
  uint64_t v19;

  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v6 = *(void **)(a1 + 8);
    v19 = v3;
    v7 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v8 = (char *)objc_allocWithZone(v7);
    v9 = (unint64_t *)&v8[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v10 = v6;
    v11 = v8;
    *v9 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v12 = (unint64_t *)&v10[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v13 = *v12;
    swift_beginAccess();
    *v9 = v13;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v18.receiver = v11;
    v18.super_class = v7;
    v14 = objc_msgSendSuper2(&v18, sel_init);

    v15 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = v14;

  }
  v16 = *(void **)(a1 + 8);
  swift_bridgeObjectRetain();
  v17 = v16;
  swift_retain();
  sub_1908E1E1C(a3);

}

uint64_t sub_1908E17D4(unint64_t a1, uint64_t a2)
{
  return sub_1908E17F8(a1, a2, (unint64_t *)&qword_1ECF6CD48, 0x1E0D101F0, &qword_1ECF6B878, (uint64_t *)&unk_1EE1ECD20);
}

uint64_t sub_1908E17F8(unint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;

  if (qword_1ECF6C8D8 != -1)
    swift_once();
  swift_beginAccess();
  v12 = off_1ECF6CA28;
  v13 = swift_retain();
  v14 = sub_1908B78A0(v13, (uint64_t)v12);
  swift_endAccess();
  v15 = swift_release();
  if (v14)
  {
    v16 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v14 + 16) + 80))(v15);
    v18 = v17;
    v20 = v19;
    if (a1)
    {
      swift_retain();
      swift_retain();
      v21 = sub_190900448(a1, v14, a2, a3, a4, a5);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      v21 = 0;
    }
    sub_1908EB8A8(v21, v16, v18, v20);
    swift_release();
    return swift_release();
  }
  else
  {
    sub_190A48298();
    sub_190A47B3C();
    __swift_instantiateConcreteTypeFromMangledName(a6);
    sub_190A483DC();
    result = sub_190A48448();
    __break(1u);
  }
  return result;
}

uint64_t sub_1908E1A00(uint64_t a1, uint64_t a2)
{
  return sub_1908E1C18(a1, a2, (uint64_t)&type metadata for InternalWidgetFamily, (uint64_t)&unk_1ECF6B868, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, (uint64_t *)&unk_1EE1EC710);
}

uint64_t sub_1908E1A24(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t), uint64_t *a4)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;

  if (qword_1ECF6C8D8 != -1)
    swift_once();
  swift_beginAccess();
  v8 = off_1ECF6CA28;
  v9 = swift_retain();
  v10 = sub_1908B78A0(v9, (uint64_t)v8);
  swift_endAccess();
  v11 = swift_release();
  if (v10)
  {
    v12 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v10 + 16) + 80))(v11);
    v14 = v13;
    v16 = v15;
    if (a1)
    {
      swift_retain();
      swift_retain();
      v17 = a3(a1, v10, a2);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      v17 = 0;
    }
    sub_1908EB8A8(v17, v12, v14, v16);
    swift_release();
    return swift_release();
  }
  else
  {
    sub_190A48298();
    sub_190A47B3C();
    __swift_instantiateConcreteTypeFromMangledName(a4);
    sub_190A483DC();
    result = sub_190A48448();
    __break(1u);
  }
  return result;
}

uint64_t sub_1908E1C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a6)
{
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;

  if (qword_1ECF6C8D8 != -1)
    swift_once();
  swift_beginAccess();
  v12 = off_1ECF6CA28;
  v13 = swift_retain();
  v14 = sub_1908B78A0(v13, (uint64_t)v12);
  swift_endAccess();
  v15 = swift_release();
  if (v14)
  {
    v16 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v14 + 16) + 80))(v15);
    v18 = v17;
    v20 = v19;
    if (a1)
    {
      swift_retain();
      swift_retain();
      v21 = a5(a1, v14, a2, a3, a4);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      v21 = 0;
    }
    sub_1908EB8A8(v21, v16, v18, v20);
    swift_release();
    return swift_release();
  }
  else
  {
    sub_190A48298();
    sub_190A47B3C();
    __swift_instantiateConcreteTypeFromMangledName(a6);
    sub_190A483DC();
    result = sub_190A48448();
    __break(1u);
  }
  return result;
}

uint64_t sub_1908E1E1C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  _QWORD v15[4];

  if (qword_1ECF6C8D8 != -1)
    swift_once();
  swift_beginAccess();
  v2 = off_1ECF6CA28;
  v3 = swift_retain();
  v4 = sub_1908B78A0(v3, (uint64_t)v2);
  swift_endAccess();
  v5 = swift_release();
  if (v4)
  {
    v6 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v4 + 16) + 80))(v5);
    v7 = v6;
    v9 = v8;
    v11 = v10;
    if (a1)
    {
      v15[0] = v15;
      v15[3] = a1;
      MEMORY[0x1E0C80A78](v6);
      v12 = sub_190A47D04();
      type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
      MEMORY[0x19401429C](MEMORY[0x1E0DEAF38], v12);
      v13 = sub_190A47BB4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = 0;
    }
    sub_1908EB8A8(v13, v7, v9, v11);
    swift_release();
    return swift_release();
  }
  else
  {
    sub_190A48298();
    sub_190A47B3C();
    sub_190A483C4();
    sub_190A486B8();
    result = sub_190A48448();
    __break(1u);
  }
  return result;
}

uint64_t (*WidgetEnvironment.subscript.modify(uint64_t *a1, uint64_t a2))(uint64_t *a1, char a2)
{
  uint64_t v2;

  a1[1] = a2;
  a1[2] = v2;
  *a1 = WidgetEnvironment.subscript.getter(a2);
  return sub_1908E20B8;
}

uint64_t sub_1908E20B8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    sub_190901460(v3, v2);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_190901460(v3, v2);
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1908E2140(uint64_t a1, void (*a2)(uint64_t))
{
  __int128 *v2;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD v8[2];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *v2;
  v10 = *(_QWORD *)v2;
  v8[1] = v4;
  v9 = a1;
  v5 = type metadata accessor for UnfairLock();
  sub_190A47D04();
  v6 = sub_190A48148();
  swift_retain();
  sub_1909FD034(a2, (uint64_t)v8, v5, v6, (uint64_t)&off_1E2CC2C08);
  swift_release();
  return v11;
}

uint64_t WidgetEnvironment.values<A>(keyPath:)(uint64_t a1)
{
  return sub_1908E2140(a1, (void (*)(uint64_t))sub_1908E1124);
}

Swift::Void __swiftcall WidgetEnvironment.filterForExtensions()()
{
  id *v0;
  id *v1;
  uint64_t KeyPath;
  os_unfair_lock_t *v3;
  os_unfair_lock_s *v4;
  id v5;
  objc_class *v6;
  char *v7;
  unint64_t *v8;
  char *v9;
  char *v10;
  unint64_t *v11;
  unint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  os_unfair_lock_t *v17;
  os_unfair_lock_s *v18;
  id v19;
  objc_class *v20;
  char *v21;
  unint64_t *v22;
  char *v23;
  char *v24;
  unint64_t *v25;
  unint64_t v26;
  id v27;
  id v28;
  id v29;
  objc_super v30;
  objc_super v31;

  v1 = v0;
  KeyPath = swift_getKeyPath();
  v3 = (os_unfair_lock_t *)*v0;
  v4 = (os_unfair_lock_s *)*((_QWORD *)*v0 + 2);
  swift_retain();
  os_unfair_lock_lock(v4);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v5 = v1[1];
    v6 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v7 = (char *)objc_allocWithZone(v6);
    v8 = (unint64_t *)&v7[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v9 = (char *)v5;
    v10 = v7;
    *v8 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v11 = (unint64_t *)&v9[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v12 = *v11;
    swift_beginAccess();
    *v8 = v12;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v31.receiver = v10;
    v31.super_class = v6;
    v13 = objc_msgSendSuper2(&v31, sel_init);

    v14 = v1[1];
    v1[1] = v13;

  }
  v15 = v1[1];
  swift_retain();
  sub_1908E1C18(0, KeyPath, MEMORY[0x1E0DEAFA0], (uint64_t)&unk_1ECF69AB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, &qword_1EE1ECD40);

  os_unfair_lock_unlock(v3[2]);
  swift_release();
  swift_release();
  v16 = swift_getKeyPath();
  v17 = (os_unfair_lock_t *)*v1;
  v18 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v18);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v19 = v1[1];
    v20 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v21 = (char *)objc_allocWithZone(v20);
    v22 = (unint64_t *)&v21[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v23 = (char *)v19;
    v24 = v21;
    *v22 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v25 = (unint64_t *)&v23[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v26 = *v25;
    swift_beginAccess();
    *v22 = v26;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v30.receiver = v24;
    v30.super_class = v20;
    v27 = objc_msgSendSuper2(&v30, sel_init);

    v28 = v1[1];
    v1[1] = v27;

  }
  v29 = v1[1];
  swift_retain();
  sub_1908E1C18(0, v16, MEMORY[0x1E0DEAFA0], (uint64_t)&unk_1ECF69AB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, &qword_1EE1ECD40);

  os_unfair_lock_unlock(v17[2]);
  swift_release();
  swift_release();
}

uint64_t sub_1908E24D4@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_190901B18, a1);
}

uint64_t sub_1908E24E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, (void (*)(void))sub_190901B18);
}

uint64_t sub_1908E24FC@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_190901B5C, a1);
}

uint64_t sub_1908E2510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, (void (*)(void))sub_190901B5C);
}

uint64_t WidgetEnvironment.filteredForExtensions()@<X0>(_QWORD *a1@<X8>)
{
  return sub_1908E30E0((uint64_t (*)(void *))WidgetEnvironment.filterForExtensions(), a1);
}

Swift::Void __swiftcall WidgetEnvironment.filterForControlArchiving()()
{
  id *v0;
  id *v1;
  uint64_t KeyPath;
  os_unfair_lock_t *v3;
  os_unfair_lock_s *v4;
  id v5;
  objc_class *v6;
  char *v7;
  unint64_t *v8;
  char *v9;
  char *v10;
  unint64_t *v11;
  unint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  os_unfair_lock_t *v17;
  os_unfair_lock_s *v18;
  id v19;
  objc_class *v20;
  char *v21;
  unint64_t *v22;
  char *v23;
  char *v24;
  unint64_t *v25;
  unint64_t v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  os_unfair_lock_t *v31;
  os_unfair_lock_s *v32;
  id v33;
  objc_class *v34;
  char *v35;
  unint64_t *v36;
  char *v37;
  char *v38;
  unint64_t *v39;
  unint64_t v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  os_unfair_lock_t *v45;
  os_unfair_lock_s *v46;
  id v47;
  objc_class *v48;
  char *v49;
  unint64_t *v50;
  char *v51;
  char *v52;
  unint64_t *v53;
  unint64_t v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  os_unfair_lock_t *v59;
  os_unfair_lock_s *v60;
  id v61;
  objc_class *v62;
  char *v63;
  unint64_t *v64;
  char *v65;
  char *v66;
  unint64_t *v67;
  unint64_t v68;
  id v69;
  id v70;
  id v71;
  objc_super v72;
  objc_super v73;
  objc_super v74;
  objc_super v75;
  objc_super v76;

  v1 = v0;
  WidgetEnvironment.filterForArchiving()();
  KeyPath = swift_getKeyPath();
  v3 = (os_unfair_lock_t *)*v0;
  v4 = (os_unfair_lock_s *)*((_QWORD *)*v0 + 2);
  swift_retain();
  os_unfair_lock_lock(v4);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v5 = v1[1];
    v6 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v7 = (char *)objc_allocWithZone(v6);
    v8 = (unint64_t *)&v7[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v9 = (char *)v5;
    v10 = v7;
    *v8 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v11 = (unint64_t *)&v9[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v12 = *v11;
    swift_beginAccess();
    *v8 = v12;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v76.receiver = v10;
    v76.super_class = v6;
    v13 = objc_msgSendSuper2(&v76, sel_init);

    v14 = v1[1];
    v1[1] = v13;

  }
  v15 = v1[1];
  swift_retain();
  sub_1908E1C18(0, KeyPath, MEMORY[0x1E0DEAFA0], (uint64_t)&unk_1ECF69AB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, &qword_1EE1ECD40);

  os_unfair_lock_unlock(v3[2]);
  swift_release();
  swift_release();
  v16 = swift_getKeyPath();
  v17 = (os_unfair_lock_t *)*v1;
  v18 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v18);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v19 = v1[1];
    v20 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v21 = (char *)objc_allocWithZone(v20);
    v22 = (unint64_t *)&v21[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v23 = (char *)v19;
    v24 = v21;
    *v22 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v25 = (unint64_t *)&v23[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v26 = *v25;
    swift_beginAccess();
    *v22 = v26;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v75.receiver = v24;
    v75.super_class = v20;
    v27 = objc_msgSendSuper2(&v75, sel_init);

    v28 = v1[1];
    v1[1] = v27;

  }
  v29 = v1[1];
  swift_retain();
  sub_1908E1C18(0, v16, (uint64_t)&type metadata for WidgetBackgroundStyle, (uint64_t)&unk_1ECF69C08, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, (uint64_t *)&unk_1EE1ECD30);

  os_unfair_lock_unlock(v17[2]);
  swift_release();
  swift_release();
  v30 = swift_getKeyPath();
  v31 = (os_unfair_lock_t *)*v1;
  v32 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v32);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v33 = v1[1];
    v34 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v35 = (char *)objc_allocWithZone(v34);
    v36 = (unint64_t *)&v35[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v37 = (char *)v33;
    v38 = v35;
    *v36 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v39 = (unint64_t *)&v37[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v40 = *v39;
    swift_beginAccess();
    *v36 = v40;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v74.receiver = v38;
    v74.super_class = v34;
    v41 = objc_msgSendSuper2(&v74, sel_init);

    v42 = v1[1];
    v1[1] = v41;

  }
  v43 = v1[1];
  swift_retain();
  sub_1908E1C18(0, v30, (uint64_t)&type metadata for InternalWidgetFamily, (uint64_t)&unk_1ECF6B868, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, (uint64_t *)&unk_1EE1EC710);

  os_unfair_lock_unlock(v31[2]);
  swift_release();
  swift_release();
  v44 = swift_getKeyPath();
  v45 = (os_unfair_lock_t *)*v1;
  v46 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v46);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v47 = v1[1];
    v48 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v49 = (char *)objc_allocWithZone(v48);
    v50 = (unint64_t *)&v49[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v51 = (char *)v47;
    v52 = v49;
    *v50 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v53 = (unint64_t *)&v51[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v54 = *v53;
    swift_beginAccess();
    *v50 = v54;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v73.receiver = v52;
    v73.super_class = v48;
    v55 = objc_msgSendSuper2(&v73, sel_init);

    v56 = v1[1];
    v1[1] = v55;

  }
  v57 = v1[1];
  swift_retain();
  sub_1908E17F8(0, v44, (unint64_t *)&qword_1ECF6CD48, 0x1E0D101F0, &qword_1ECF6B878, (uint64_t *)&unk_1EE1ECD20);

  os_unfair_lock_unlock(v45[2]);
  swift_release();
  swift_release();
  v58 = swift_getKeyPath();
  v59 = (os_unfair_lock_t *)*v1;
  v60 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v60);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v61 = v1[1];
    v62 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v63 = (char *)objc_allocWithZone(v62);
    v64 = (unint64_t *)&v63[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v65 = (char *)v61;
    v66 = v63;
    *v64 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v67 = (unint64_t *)&v65[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v68 = *v67;
    swift_beginAccess();
    *v64 = v68;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v72.receiver = v66;
    v72.super_class = v62;
    v69 = objc_msgSendSuper2(&v72, sel_init);

    v70 = v1[1];
    v1[1] = v69;

  }
  v71 = v1[1];
  swift_retain();
  sub_1908E1A24(0, v58, sub_190900684, (uint64_t *)&unk_1EE1EC700);

  os_unfair_lock_unlock(v59[2]);
  swift_release();
  swift_release();
}

Swift::Void __swiftcall WidgetEnvironment.filterForArchiving()()
{
  id *v0;
  id *v1;
  uint64_t KeyPath;
  os_unfair_lock_t *v3;
  os_unfair_lock_s *v4;
  id v5;
  objc_class *v6;
  char *v7;
  unint64_t *v8;
  char *v9;
  char *v10;
  unint64_t *v11;
  unint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  os_unfair_lock_t *v17;
  os_unfair_lock_s *v18;
  id v19;
  objc_class *v20;
  char *v21;
  unint64_t *v22;
  char *v23;
  char *v24;
  unint64_t *v25;
  unint64_t v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  os_unfair_lock_t *v31;
  os_unfair_lock_s *v32;
  id v33;
  objc_class *v34;
  char *v35;
  unint64_t *v36;
  char *v37;
  char *v38;
  unint64_t *v39;
  unint64_t v40;
  id v41;
  id v42;
  id v43;
  objc_super v44;
  objc_super v45;
  objc_super v46;

  v1 = v0;
  KeyPath = swift_getKeyPath();
  v3 = (os_unfair_lock_t *)*v0;
  v4 = (os_unfair_lock_s *)*((_QWORD *)*v0 + 2);
  swift_retain();
  os_unfair_lock_lock(v4);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v5 = v1[1];
    v6 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v7 = (char *)objc_allocWithZone(v6);
    v8 = (unint64_t *)&v7[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v9 = (char *)v5;
    v10 = v7;
    *v8 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v11 = (unint64_t *)&v9[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v12 = *v11;
    swift_beginAccess();
    *v8 = v12;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v46.receiver = v10;
    v46.super_class = v6;
    v13 = objc_msgSendSuper2(&v46, sel_init);

    v14 = v1[1];
    v1[1] = v13;

  }
  v15 = v1[1];
  swift_retain();
  sub_1908E1C18(0, KeyPath, MEMORY[0x1E0DEAFA0], (uint64_t)&unk_1ECF69AB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, &qword_1EE1ECD40);

  os_unfair_lock_unlock(v3[2]);
  swift_release();
  swift_release();
  v16 = swift_getKeyPath();
  v17 = (os_unfair_lock_t *)*v1;
  v18 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v18);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v19 = v1[1];
    v20 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v21 = (char *)objc_allocWithZone(v20);
    v22 = (unint64_t *)&v21[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v23 = (char *)v19;
    v24 = v21;
    *v22 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v25 = (unint64_t *)&v23[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v26 = *v25;
    swift_beginAccess();
    *v22 = v26;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v45.receiver = v24;
    v45.super_class = v20;
    v27 = objc_msgSendSuper2(&v45, sel_init);

    v28 = v1[1];
    v1[1] = v27;

  }
  v29 = v1[1];
  swift_retain();
  sub_1908E1C18(0, v16, MEMORY[0x1E0DEAFA0], (uint64_t)&unk_1ECF69AB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, &qword_1EE1ECD40);

  os_unfair_lock_unlock(v17[2]);
  swift_release();
  swift_release();
  v30 = swift_getKeyPath();
  v31 = (os_unfair_lock_t *)*v1;
  v32 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v32);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v33 = v1[1];
    v34 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v35 = (char *)objc_allocWithZone(v34);
    v36 = (unint64_t *)&v35[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v37 = (char *)v33;
    v38 = v35;
    *v36 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v39 = (unint64_t *)&v37[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v40 = *v39;
    swift_beginAccess();
    *v36 = v40;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v44.receiver = v38;
    v44.super_class = v34;
    v41 = objc_msgSendSuper2(&v44, sel_init);

    v42 = v1[1];
    v1[1] = v41;

  }
  v43 = v1[1];
  swift_retain();
  sub_1908E1C18(0, v30, MEMORY[0x1E0DEAFA0], (uint64_t)&unk_1ECF69AB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, &qword_1EE1ECD40);

  os_unfair_lock_unlock(v31[2]);
  swift_release();
  swift_release();
}

uint64_t sub_1908E2FD4@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_190901AD4, a1);
}

uint64_t sub_1908E2FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, (void (*)(void))sub_190901AD4);
}

uint64_t WidgetEnvironment.filteredForControlArchiving()@<X0>(_QWORD *a1@<X8>)
{
  return sub_1908E30E0((uint64_t (*)(void *))WidgetEnvironment.filterForControlArchiving(), a1);
}

uint64_t sub_1908E3008@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_190901CCC, a1);
}

uint64_t sub_1908E301C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, (void (*)(void))sub_190901CCC);
}

uint64_t sub_1908E3030@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_190901D10, a1);
}

uint64_t sub_1908E3044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, (void (*)(void))sub_190901D10);
}

uint64_t sub_1908E3058@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_190901960, a1);
}

uint64_t keypath_get_5Tm@<X0>(void (*a1)(void)@<X3>, _BYTE *a2@<X8>)
{
  uint64_t result;
  char v4;

  a1();
  result = sub_190A46C3C();
  *a2 = v4;
  return result;
}

uint64_t sub_1908E30C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, (void (*)(void))sub_190901960);
}

uint64_t WidgetEnvironment.filteredForArchiving()@<X0>(_QWORD *a1@<X8>)
{
  return sub_1908E30E0((uint64_t (*)(void *))WidgetEnvironment.filterForArchiving(), a1);
}

uint64_t sub_1908E30E0@<X0>(uint64_t (*a1)(void *)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  void *v5;

  v4 = *v2;
  v5 = (void *)v2[1];
  *a2 = v4;
  a2[1] = v5;
  swift_retain();
  return a1(v5);
}

uint64_t WidgetEnvironment.apply(environmentValues:)()
{
  id *v0;
  id *v1;
  uint64_t KeyPath;
  uint64_t inited;
  os_unfair_lock_t *v4;
  os_unfair_lock_s *v5;
  id v6;
  objc_class *v7;
  char *v8;
  unint64_t *v9;
  char *v10;
  char *v11;
  unint64_t *v12;
  unint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_unfair_lock_t *v20;
  os_unfair_lock_s *v21;
  id v22;
  objc_class *v23;
  char *v24;
  unint64_t *v25;
  char *v26;
  char *v27;
  unint64_t *v28;
  unint64_t v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  os_unfair_lock_t *v36;
  os_unfair_lock_s *v37;
  id v38;
  objc_class *v39;
  char *v40;
  unint64_t *v41;
  char *v42;
  char *v43;
  unint64_t *v44;
  unint64_t v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  os_unfair_lock_t *v52;
  os_unfair_lock_s *v53;
  id v54;
  objc_class *v55;
  char *v56;
  unint64_t *v57;
  char *v58;
  char *v59;
  unint64_t *v60;
  unint64_t v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(void);
  uint64_t v68;
  os_unfair_lock_t *v69;
  os_unfair_lock_s *v70;
  uint64_t v71;
  uint64_t (*v72)(void);
  uint64_t v73;
  os_unfair_lock_t *v74;
  os_unfair_lock_s *v75;
  uint64_t v76;
  uint64_t v77;
  os_unfair_lock_t *v78;
  os_unfair_lock_s *v79;
  uint64_t v80;
  uint64_t v81;
  os_unfair_lock_t *v82;
  os_unfair_lock_s *v83;
  uint64_t v84;
  uint64_t (*v85)(void);
  uint64_t v86;
  os_unfair_lock_t *v87;
  os_unfair_lock_s *v88;
  uint64_t v89;
  os_unfair_lock_t *v90;
  os_unfair_lock_s *v91;
  id v92;
  objc_class *v93;
  char *v94;
  unint64_t *v95;
  char *v96;
  char *v97;
  unint64_t *v98;
  unint64_t v99;
  id v100;
  id v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  os_unfair_lock_t *v106;
  os_unfair_lock_s *v107;
  id v108;
  objc_class *v109;
  char *v110;
  unint64_t *v111;
  char *v112;
  char *v113;
  unint64_t *v114;
  unint64_t v115;
  id v116;
  id v117;
  id v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  os_unfair_lock_t *v122;
  os_unfair_lock_s *v123;
  id v124;
  objc_class *v125;
  char *v126;
  unint64_t *v127;
  char *v128;
  char *v129;
  unint64_t *v130;
  unint64_t v131;
  id v132;
  id v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  os_unfair_lock_t *v139;
  os_unfair_lock_s *v140;
  uint64_t v141;
  uint64_t v142;
  os_unfair_lock_t *v143;
  os_unfair_lock_s *v144;
  uint64_t v145;
  uint64_t v146;
  os_unfair_lock_t *v147;
  os_unfair_lock_s *v148;
  id v149;
  objc_class *v150;
  char *v151;
  unint64_t *v152;
  char *v153;
  char *v154;
  unint64_t *v155;
  unint64_t v156;
  id v157;
  id v158;
  id v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  os_unfair_lock_t *v163;
  os_unfair_lock_s *v164;
  id v165;
  objc_class *v166;
  char *v167;
  unint64_t *v168;
  char *v169;
  char *v170;
  unint64_t *v171;
  unint64_t v172;
  id v173;
  id v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  os_unfair_lock_t *v179;
  os_unfair_lock_s *v180;
  id v181;
  objc_class *v182;
  char *v183;
  unint64_t *v184;
  char *v185;
  char *v186;
  unint64_t *v187;
  unint64_t v188;
  id v189;
  id v190;
  id v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  os_unfair_lock_t *v195;
  os_unfair_lock_s *v196;
  id v197;
  objc_class *v198;
  char *v199;
  unint64_t *v200;
  char *v201;
  char *v202;
  unint64_t *v203;
  unint64_t v204;
  id v205;
  id v206;
  id v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  os_unfair_lock_t *v211;
  os_unfair_lock_s *v212;
  uint64_t v213;
  os_unfair_lock_t *v214;
  os_unfair_lock_s *v215;
  id v216;
  objc_class *v217;
  char *v218;
  unint64_t *v219;
  char *v220;
  char *v221;
  unint64_t *v222;
  unint64_t v223;
  id v224;
  id v225;
  id v226;
  uint64_t v227;
  uint64_t v228;
  os_unfair_lock_t *v229;
  os_unfair_lock_s *v230;
  id v231;
  objc_class *v232;
  char *v233;
  unint64_t *v234;
  char *v235;
  char *v236;
  unint64_t *v237;
  unint64_t v238;
  id v239;
  id v240;
  id v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  os_unfair_lock_t *v245;
  os_unfair_lock_s *v246;
  id v247;
  objc_class *v248;
  char *v249;
  unint64_t *v250;
  char *v251;
  char *v252;
  unint64_t *v253;
  unint64_t v254;
  id v255;
  id v256;
  id v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  os_unfair_lock_t *v261;
  os_unfair_lock_s *v262;
  id v263;
  objc_class *v264;
  char *v265;
  unint64_t *v266;
  char *v267;
  char *v268;
  unint64_t *v269;
  unint64_t v270;
  id v271;
  id v272;
  id v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  os_unfair_lock_t *v277;
  os_unfair_lock_s *v278;
  id v279;
  objc_class *v280;
  char *v281;
  unint64_t *v282;
  char *v283;
  char *v284;
  unint64_t *v285;
  unint64_t v286;
  id v287;
  id v288;
  id v289;
  uint64_t v290;
  objc_super v292;
  char v293;
  objc_super v294;
  char v295;
  objc_super v296;
  uint64_t v297;
  objc_super v298;
  objc_super v299;
  objc_super v300;
  char v301;
  objc_super v302;
  char v303;
  objc_super v304;
  char v305;
  objc_super v306;
  __int128 v307;
  objc_super v308;
  char v309;
  objc_super v310;
  uint64_t v311;
  objc_super v312;
  objc_super v313;
  objc_super v314;
  objc_super v315;
  objc_super v316;

  v1 = v0;
  KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B000);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190A4A350;
  *(_BYTE *)(inited + 32) = sub_190A46B70() & 1;
  v4 = (os_unfair_lock_t *)*v0;
  v5 = (os_unfair_lock_s *)*((_QWORD *)*v0 + 2);
  swift_retain();
  os_unfair_lock_lock(v5);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v6 = v1[1];
    v7 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v8 = (char *)objc_allocWithZone(v7);
    v9 = (unint64_t *)&v8[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v10 = (char *)v6;
    v11 = v8;
    *v9 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v12 = (unint64_t *)&v10[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v13 = *v12;
    swift_beginAccess();
    *v9 = v13;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v316.receiver = v11;
    v316.super_class = v7;
    v14 = objc_msgSendSuper2(&v316, sel_init);

    v15 = v1[1];
    v1[1] = v14;

  }
  v16 = v1[1];
  swift_retain();
  v17 = swift_bridgeObjectRetain();
  sub_1908E1C18(v17, KeyPath, MEMORY[0x1E0DEAFA0], (uint64_t)&unk_1ECF69AB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, &qword_1EE1ECD40);

  os_unfair_lock_unlock(v4[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  v18 = swift_getKeyPath();
  v19 = swift_initStackObject();
  *(_OWORD *)(v19 + 16) = xmmword_190A4A350;
  *(_BYTE *)(v19 + 32) = sub_190A46B04() & 1;
  v20 = (os_unfair_lock_t *)*v1;
  v21 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v21);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v22 = v1[1];
    v23 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v24 = (char *)objc_allocWithZone(v23);
    v25 = (unint64_t *)&v24[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v26 = (char *)v22;
    v27 = v24;
    *v25 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v28 = (unint64_t *)&v26[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v29 = *v28;
    swift_beginAccess();
    *v25 = v29;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v315.receiver = v27;
    v315.super_class = v23;
    v30 = objc_msgSendSuper2(&v315, sel_init);

    v31 = v1[1];
    v1[1] = v30;

  }
  v32 = v1[1];
  swift_retain();
  v33 = swift_bridgeObjectRetain();
  sub_1908E1C18(v33, v18, MEMORY[0x1E0DEAFA0], (uint64_t)&unk_1ECF69AB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, &qword_1EE1ECD40);

  os_unfair_lock_unlock(v20[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  v34 = swift_getKeyPath();
  v35 = swift_initStackObject();
  *(_OWORD *)(v35 + 16) = xmmword_190A4A350;
  *(_BYTE *)(v35 + 32) = sub_190A46B10() & 1;
  v36 = (os_unfair_lock_t *)*v1;
  v37 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v37);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v38 = v1[1];
    v39 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v40 = (char *)objc_allocWithZone(v39);
    v41 = (unint64_t *)&v40[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v42 = (char *)v38;
    v43 = v40;
    *v41 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v44 = (unint64_t *)&v42[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v45 = *v44;
    swift_beginAccess();
    *v41 = v45;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v314.receiver = v43;
    v314.super_class = v39;
    v46 = objc_msgSendSuper2(&v314, sel_init);

    v47 = v1[1];
    v1[1] = v46;

  }
  v48 = v1[1];
  swift_retain();
  v49 = swift_bridgeObjectRetain();
  sub_1908E1C18(v49, v34, MEMORY[0x1E0DEAFA0], (uint64_t)&unk_1ECF69AB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, &qword_1EE1ECD40);

  os_unfair_lock_unlock(v36[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  v50 = swift_getKeyPath();
  v51 = swift_initStackObject();
  *(_OWORD *)(v51 + 16) = xmmword_190A4A350;
  *(_BYTE *)(v51 + 32) = sub_190A46B4C() & 1;
  v52 = (os_unfair_lock_t *)*v1;
  v53 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v53);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v54 = v1[1];
    v55 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v56 = (char *)objc_allocWithZone(v55);
    v57 = (unint64_t *)&v56[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v58 = (char *)v54;
    v59 = v56;
    *v57 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v60 = (unint64_t *)&v58[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v61 = *v60;
    swift_beginAccess();
    *v57 = v61;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v313.receiver = v59;
    v313.super_class = v55;
    v62 = objc_msgSendSuper2(&v313, sel_init);

    v63 = v1[1];
    v1[1] = v62;

  }
  v64 = v1[1];
  swift_retain();
  v65 = swift_bridgeObjectRetain();
  sub_1908E1C18(v65, v50, MEMORY[0x1E0DEAFA0], (uint64_t)&unk_1ECF69AB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, &qword_1EE1ECD40);

  os_unfair_lock_unlock(v52[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  v66 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF69B08);
  sub_190A46E94();
  v67 = MEMORY[0x1E0CDB2E0];
  v68 = swift_allocObject();
  *(_OWORD *)(v68 + 16) = xmmword_190A4A350;
  sub_190A46AE0();
  v69 = (os_unfair_lock_t *)*v1;
  v70 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v70);
  sub_1908E14F0((uint64_t)v1, v66, v68, (uint64_t)v67, (uint64_t)&unk_1ECF69A98, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909009F0, (uint64_t *)&unk_1EE1EC760);
  os_unfair_lock_unlock(v69[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v71 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69AF0);
  sub_190A4669C();
  v72 = MEMORY[0x1E0CD86F8];
  v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_190A4A350;
  sub_190A469B4();
  v74 = (os_unfair_lock_t *)*v1;
  v75 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v75);
  sub_1908E14F0((uint64_t)v1, v71, v73, (uint64_t)v72, (uint64_t)&unk_1ECF69A78, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909009F0, (uint64_t *)&unk_1EE1EC770);
  os_unfair_lock_unlock(v74[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v76 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF69AF8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40);
  v77 = swift_allocObject();
  *(_OWORD *)(v77 + 16) = xmmword_190A4A350;
  sub_190A46A74();
  v78 = (os_unfair_lock_t *)*v1;
  v79 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v79);
  sub_1908E1380((uint64_t)v1, v76, v77, sub_190900C7C, &qword_1EE1EC740);
  os_unfair_lock_unlock(v78[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v80 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69B18);
  sub_190A46EAC();
  v81 = swift_allocObject();
  *(_OWORD *)(v81 + 16) = xmmword_190A4A350;
  sub_190A469FC();
  v82 = (os_unfair_lock_t *)*v1;
  v83 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v83);
  sub_1908E14F0((uint64_t)v1, v80, v81, (uint64_t)MEMORY[0x1E0CDB388], (uint64_t)&unk_1ECF69AA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909009F0, (uint64_t *)&unk_1EE1EC730);
  os_unfair_lock_unlock(v82[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v84 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F0);
  sub_190A46924();
  v85 = MEMORY[0x1E0CDA008];
  v86 = swift_allocObject();
  *(_OWORD *)(v86 + 16) = xmmword_190A4A350;
  sub_190A46A8C();
  v87 = (os_unfair_lock_t *)*v1;
  v88 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v88);
  sub_1908E14F0((uint64_t)v1, v84, v86, (uint64_t)v85, (uint64_t)&unk_1ECF69B28, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909009F0, (uint64_t *)&unk_1EE1EC720);
  os_unfair_lock_unlock(v87[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v89 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6D2F0);
  *(_OWORD *)(swift_initStackObject() + 16) = xmmword_190A4A350;
  sub_19090191C();
  sub_190A46C3C();
  v90 = (os_unfair_lock_t *)*v1;
  v91 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v91);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v92 = v1[1];
    v93 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v94 = (char *)objc_allocWithZone(v93);
    v95 = (unint64_t *)&v94[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v96 = (char *)v92;
    v97 = v94;
    *v95 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v98 = (unint64_t *)&v96[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v99 = *v98;
    swift_beginAccess();
    *v95 = v99;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v312.receiver = v97;
    v312.super_class = v93;
    v100 = objc_msgSendSuper2(&v312, sel_init);

    v101 = v1[1];
    v1[1] = v100;

  }
  v102 = v1[1];
  swift_retain();
  v103 = swift_bridgeObjectRetain();
  sub_1908E1C18(v103, v89, (uint64_t)&type metadata for InternalWidgetFamily, (uint64_t)&unk_1ECF6B868, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, (uint64_t *)&unk_1EE1EC710);

  os_unfair_lock_unlock(v90[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  v104 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6BDD0);
  v105 = swift_initStackObject();
  *(_OWORD *)(v105 + 16) = xmmword_190A4B0F0;
  sub_1908BE014();
  sub_190A46C3C();
  *(_QWORD *)(v105 + 32) = v311;
  v311 = v105;
  sub_190A47C74();
  v106 = (os_unfair_lock_t *)*v1;
  v107 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v107);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v108 = v1[1];
    v109 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v110 = (char *)objc_allocWithZone(v109);
    v111 = (unint64_t *)&v110[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v112 = (char *)v108;
    v113 = v110;
    *v111 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v114 = (unint64_t *)&v112[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v115 = *v114;
    swift_beginAccess();
    *v111 = v115;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v310.receiver = v113;
    v310.super_class = v109;
    v116 = objc_msgSendSuper2(&v310, sel_init);

    v117 = v1[1];
    v1[1] = v116;

  }
  v118 = v1[1];
  swift_retain();
  v119 = swift_bridgeObjectRetain();
  sub_1908E17F8(v119, v104, (unint64_t *)&qword_1ECF6CD48, 0x1E0D101F0, &qword_1ECF6B878, (uint64_t *)&unk_1EE1ECD20);

  os_unfair_lock_unlock(v106[2]);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v120 = swift_getKeyPath();
  v121 = swift_initStackObject();
  *(_OWORD *)(v121 + 16) = xmmword_190A4A350;
  sub_190901960();
  sub_190A46C3C();
  *(_BYTE *)(v121 + 32) = v309;
  v122 = (os_unfair_lock_t *)*v1;
  v123 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v123);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v124 = v1[1];
    v125 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v126 = (char *)objc_allocWithZone(v125);
    v127 = (unint64_t *)&v126[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v128 = (char *)v124;
    v129 = v126;
    *v127 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v130 = (unint64_t *)&v128[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v131 = *v130;
    swift_beginAccess();
    *v127 = v131;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v308.receiver = v129;
    v308.super_class = v125;
    v132 = objc_msgSendSuper2(&v308, sel_init);

    v133 = v1[1];
    v1[1] = v132;

  }
  v134 = v1[1];
  swift_retain();
  v135 = swift_bridgeObjectRetain();
  sub_1908E1C18(v135, v120, MEMORY[0x1E0DEAFA0], (uint64_t)&unk_1ECF69AB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, &qword_1EE1ECD40);

  os_unfair_lock_unlock(v122[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  v136 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C740);
  v137 = swift_initStackObject();
  *(_OWORD *)(v137 + 16) = xmmword_190A4A350;
  sub_1909019AC();
  sub_190A46C3C();
  *(_QWORD *)(v137 + 32) = v307;
  *(_QWORD *)&v307 = v137;
  sub_190A47C74();
  v138 = v137;
  v139 = (os_unfair_lock_t *)*v1;
  v140 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v140);
  sub_1908E1380((uint64_t)v1, v136, v138, sub_190900F00, (uint64_t *)&unk_1EE1EC790);
  os_unfair_lock_unlock(v139[2]);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v141 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69A70);
  v142 = swift_initStackObject();
  *(_OWORD *)(v142 + 16) = xmmword_190A4A350;
  sub_190901A40();
  sub_190A46C3C();
  *(_OWORD *)(v142 + 32) = v307;
  v143 = (os_unfair_lock_t *)*v1;
  v144 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v144);
  sub_1908E1380((uint64_t)v1, v141, v142, sub_1909010C4, (uint64_t *)&unk_1EE1ECD10);
  os_unfair_lock_unlock(v143[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  swift_arrayDestroy();
  v145 = swift_getKeyPath();
  v146 = swift_initStackObject();
  *(_OWORD *)(v146 + 16) = xmmword_190A4A350;
  *(_BYTE *)(v146 + 32) = sub_190A46AC8() & 1;
  v147 = (os_unfair_lock_t *)*v1;
  v148 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v148);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v149 = v1[1];
    v150 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v151 = (char *)objc_allocWithZone(v150);
    v152 = (unint64_t *)&v151[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v153 = (char *)v149;
    v154 = v151;
    *v152 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v155 = (unint64_t *)&v153[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v156 = *v155;
    swift_beginAccess();
    *v152 = v156;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v306.receiver = v154;
    v306.super_class = v150;
    v157 = objc_msgSendSuper2(&v306, sel_init);

    v158 = v1[1];
    v1[1] = v157;

  }
  v159 = v1[1];
  swift_retain();
  v160 = swift_bridgeObjectRetain();
  sub_1908E1C18(v160, v145, MEMORY[0x1E0DEAFA0], (uint64_t)&unk_1ECF69AB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, &qword_1EE1ECD40);

  os_unfair_lock_unlock(v147[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  v161 = swift_getKeyPath();
  v162 = swift_initStackObject();
  *(_OWORD *)(v162 + 16) = xmmword_190A4A350;
  sub_190901AD4();
  sub_190A46C3C();
  *(_BYTE *)(v162 + 32) = v305;
  v163 = (os_unfair_lock_t *)*v1;
  v164 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v164);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v165 = v1[1];
    v166 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v167 = (char *)objc_allocWithZone(v166);
    v168 = (unint64_t *)&v167[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v169 = (char *)v165;
    v170 = v167;
    *v168 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v171 = (unint64_t *)&v169[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v172 = *v171;
    swift_beginAccess();
    *v168 = v172;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v304.receiver = v170;
    v304.super_class = v166;
    v173 = objc_msgSendSuper2(&v304, sel_init);

    v174 = v1[1];
    v1[1] = v173;

  }
  v175 = v1[1];
  swift_retain();
  v176 = swift_bridgeObjectRetain();
  sub_1908E1C18(v176, v161, MEMORY[0x1E0DEAFA0], (uint64_t)&unk_1ECF69AB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, &qword_1EE1ECD40);

  os_unfair_lock_unlock(v163[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  v177 = swift_getKeyPath();
  v178 = swift_initStackObject();
  *(_OWORD *)(v178 + 16) = xmmword_190A4A350;
  sub_190901B18();
  sub_190A46C3C();
  *(_BYTE *)(v178 + 32) = v303;
  v179 = (os_unfair_lock_t *)*v1;
  v180 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v180);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v181 = v1[1];
    v182 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v183 = (char *)objc_allocWithZone(v182);
    v184 = (unint64_t *)&v183[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v185 = (char *)v181;
    v186 = v183;
    *v184 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v187 = (unint64_t *)&v185[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v188 = *v187;
    swift_beginAccess();
    *v184 = v188;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v302.receiver = v186;
    v302.super_class = v182;
    v189 = objc_msgSendSuper2(&v302, sel_init);

    v190 = v1[1];
    v1[1] = v189;

  }
  v191 = v1[1];
  swift_retain();
  v192 = swift_bridgeObjectRetain();
  sub_1908E1C18(v192, v177, MEMORY[0x1E0DEAFA0], (uint64_t)&unk_1ECF69AB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, &qword_1EE1ECD40);

  os_unfair_lock_unlock(v179[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  v193 = swift_getKeyPath();
  v194 = swift_initStackObject();
  *(_OWORD *)(v194 + 16) = xmmword_190A4A350;
  sub_190901B5C();
  sub_190A46C3C();
  *(_BYTE *)(v194 + 32) = v301;
  v195 = (os_unfair_lock_t *)*v1;
  v196 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v196);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v197 = v1[1];
    v198 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v199 = (char *)objc_allocWithZone(v198);
    v200 = (unint64_t *)&v199[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v201 = (char *)v197;
    v202 = v199;
    *v200 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v203 = (unint64_t *)&v201[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v204 = *v203;
    swift_beginAccess();
    *v200 = v204;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v300.receiver = v202;
    v300.super_class = v198;
    v205 = objc_msgSendSuper2(&v300, sel_init);

    v206 = v1[1];
    v1[1] = v205;

  }
  v207 = v1[1];
  swift_retain();
  v208 = swift_bridgeObjectRetain();
  sub_1908E1C18(v208, v193, MEMORY[0x1E0DEAFA0], (uint64_t)&unk_1ECF69AB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, &qword_1EE1ECD40);

  os_unfair_lock_unlock(v195[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  v209 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC28);
  v210 = swift_initStackObject();
  *(_OWORD *)(v210 + 16) = xmmword_190A4A350;
  sub_190901C00();
  sub_190A46C3C();
  v211 = (os_unfair_lock_t *)*v1;
  v212 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v212);
  sub_1908E14F0((uint64_t)v1, v209, v210, (uint64_t)&type metadata for ActivityUpdateAvailability, (uint64_t)&unk_1EE1ECD08, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, (uint64_t *)&unk_1EE1EC6F0);
  os_unfair_lock_unlock(v211[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  v213 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF69C28);
  *(_OWORD *)(swift_initStackObject() + 16) = xmmword_190A4A350;
  sub_190901C44();
  sub_190A46C3C();
  v214 = (os_unfair_lock_t *)*v1;
  v215 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v215);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v216 = v1[1];
    v217 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v218 = (char *)objc_allocWithZone(v217);
    v219 = (unint64_t *)&v218[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v220 = (char *)v216;
    v221 = v218;
    *v219 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v222 = (unint64_t *)&v220[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v223 = *v222;
    swift_beginAccess();
    *v219 = v223;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v299.receiver = v221;
    v299.super_class = v217;
    v224 = objc_msgSendSuper2(&v299, sel_init);

    v225 = v1[1];
    v1[1] = v224;

  }
  v226 = v1[1];
  swift_retain();
  v227 = swift_bridgeObjectRetain();
  sub_1908E1A24(v227, v213, sub_190900684, (uint64_t *)&unk_1EE1EC700);

  os_unfair_lock_unlock(v214[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  v228 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ECF69C38);
  *(_OWORD *)(swift_initStackObject() + 16) = xmmword_190A4A350;
  sub_190901C88();
  sub_190A46C3C();
  v229 = (os_unfair_lock_t *)*v1;
  v230 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v230);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v231 = v1[1];
    v232 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v233 = (char *)objc_allocWithZone(v232);
    v234 = (unint64_t *)&v233[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v235 = (char *)v231;
    v236 = v233;
    *v234 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v237 = (unint64_t *)&v235[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v238 = *v237;
    swift_beginAccess();
    *v234 = v238;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v298.receiver = v236;
    v298.super_class = v232;
    v239 = objc_msgSendSuper2(&v298, sel_init);

    v240 = v1[1];
    v1[1] = v239;

  }
  v241 = v1[1];
  swift_retain();
  v242 = swift_bridgeObjectRetain();
  sub_1908E1C18(v242, v228, (uint64_t)&type metadata for WidgetBackgroundStyle, (uint64_t)&unk_1ECF69C08, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, (uint64_t *)&unk_1EE1ECD30);

  os_unfair_lock_unlock(v229[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  v243 = swift_getKeyPath();
  v244 = swift_initStackObject();
  *(_OWORD *)(v244 + 16) = xmmword_190A4B0F0;
  sub_1908FF90C();
  sub_190A46C3C();
  *(_QWORD *)(v244 + 32) = v297;
  v297 = v244;
  sub_190A47C74();
  v245 = (os_unfair_lock_t *)*v1;
  v246 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v246);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v247 = v1[1];
    v248 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v249 = (char *)objc_allocWithZone(v248);
    v250 = (unint64_t *)&v249[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v251 = (char *)v247;
    v252 = v249;
    *v250 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v253 = (unint64_t *)&v251[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v254 = *v253;
    swift_beginAccess();
    *v250 = v254;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v296.receiver = v252;
    v296.super_class = v248;
    v255 = objc_msgSendSuper2(&v296, sel_init);

    v256 = v1[1];
    v1[1] = v255;

  }
  v257 = v1[1];
  swift_retain();
  v258 = swift_bridgeObjectRetain();
  sub_1908E17F8(v258, v243, (unint64_t *)&unk_1ECF6A9A8, 0x1E0D10188, (uint64_t *)&unk_1ECF69C18, (uint64_t *)&unk_1EE1EC780);

  os_unfair_lock_unlock(v245[2]);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v259 = swift_getKeyPath();
  v260 = swift_initStackObject();
  *(_OWORD *)(v260 + 16) = xmmword_190A4A350;
  sub_190901CCC();
  sub_190A46C3C();
  *(_BYTE *)(v260 + 32) = v295;
  v261 = (os_unfair_lock_t *)*v1;
  v262 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v262);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v263 = v1[1];
    v264 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v265 = (char *)objc_allocWithZone(v264);
    v266 = (unint64_t *)&v265[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v267 = (char *)v263;
    v268 = v265;
    *v266 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v269 = (unint64_t *)&v267[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v270 = *v269;
    swift_beginAccess();
    *v266 = v270;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v294.receiver = v268;
    v294.super_class = v264;
    v271 = objc_msgSendSuper2(&v294, sel_init);

    v272 = v1[1];
    v1[1] = v271;

  }
  v273 = v1[1];
  swift_retain();
  v274 = swift_bridgeObjectRetain();
  sub_1908E1C18(v274, v259, MEMORY[0x1E0DEAFA0], (uint64_t)&unk_1ECF69AB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, &qword_1EE1ECD40);

  os_unfair_lock_unlock(v261[2]);
  swift_release();
  swift_release();
  swift_setDeallocating();
  v275 = swift_getKeyPath();
  v276 = swift_initStackObject();
  *(_OWORD *)(v276 + 16) = xmmword_190A4A350;
  sub_190901D10();
  sub_190A46C3C();
  *(_BYTE *)(v276 + 32) = v293;
  v277 = (os_unfair_lock_t *)*v1;
  v278 = (os_unfair_lock_s *)*((_QWORD *)*v1 + 2);
  swift_retain();
  os_unfair_lock_lock(v278);
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    v279 = v1[1];
    v280 = (objc_class *)type metadata accessor for WidgetEnvironment.Storage();
    v281 = (char *)objc_allocWithZone(v280);
    v282 = (unint64_t *)&v281[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    v283 = (char *)v279;
    v284 = v281;
    *v282 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
    v285 = (unint64_t *)&v283[OBJC_IVAR___CHKWidgetEnvironment_tuples];
    swift_beginAccess();
    v286 = *v285;
    swift_beginAccess();
    *v282 = v286;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v292.receiver = v284;
    v292.super_class = v280;
    v287 = objc_msgSendSuper2(&v292, sel_init);

    v288 = v1[1];
    v1[1] = v287;

  }
  v289 = v1[1];
  swift_retain();
  v290 = swift_bridgeObjectRetain();
  sub_1908E1C18(v290, v275, MEMORY[0x1E0DEAFA0], (uint64_t)&unk_1ECF69AB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1909002B8, &qword_1EE1ECD40);

  os_unfair_lock_unlock(v277[2]);
  swift_release();
  swift_release();
  return swift_setDeallocating();
}

uint64_t sub_1908E51C0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46B7C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1908E51EC()
{
  return sub_190A46B88();
}

uint64_t sub_1908E5210@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46B1C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1908E523C()
{
  return sub_190A46B28();
}

uint64_t sub_1908E5260@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46B34();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1908E528C()
{
  return sub_190A46B40();
}

uint64_t sub_1908E52B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46B58();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1908E52DC()
{
  return sub_190A46B64();
}

uint64_t sub_1908E5300()
{
  return sub_190A46AEC();
}

uint64_t sub_1908E5320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1908EADC8(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CDB2E0], MEMORY[0x1E0CDA7A0]);
}

uint64_t sub_1908E5334()
{
  return sub_190A469B4();
}

uint64_t sub_1908E5354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1908EADC8(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CD86F8], (uint64_t (*)(char *))MEMORY[0x1E0CDA4E8]);
}

uint64_t sub_1908E5368()
{
  return sub_190A46A74();
}

uint64_t sub_1908E5388(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40);
  MEMORY[0x1E0C80A78](v2);
  sub_1908AAA48(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1ECF6AE40);
  return sub_190A46A80();
}

uint64_t sub_1908E5408()
{
  return sub_190A469FC();
}

uint64_t sub_1908E5428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1908EADC8(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CDB388], (uint64_t (*)(char *))MEMORY[0x1E0CDA5C0]);
}

uint64_t sub_1908E543C()
{
  return sub_190A46A8C();
}

uint64_t sub_1908E545C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1908EADC8(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CDA008], MEMORY[0x1E0CDA6B0]);
}

double sub_1908E5470@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_190901A40();
  sub_190A46C3C();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1908E54BC(uint64_t a1)
{
  sub_1908B53B8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  sub_190901A40();
  return sub_190A46C48();
}

uint64_t sub_1908E550C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46AC8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1908E5538()
{
  return sub_190A46AD4();
}

uint64_t sub_1908E555C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_190901C00();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_1908E55A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, (void (*)(void))sub_190901C00);
}

uint64_t keypath_set_54Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  a5();
  return sub_190A46C48();
}

uint64_t sub_1908E5604@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1908FF90C();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

void sub_1908E5650(id *a1)
{
  EnvironmentValues._widgetDisplayProperties.setter(*a1);
}

uint64_t WidgetEnvironment.union(_:)(unint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;
  void *v3;
  id v4;
  unint64_t v5;

  v2 = *a1;
  v3 = (void *)a1[1];
  swift_retain();
  v4 = v3;
  v5 = swift_retain();
  sub_1909FD0BC(v5, v2, v1, v2, v4);
  return swift_release();
}

uint64_t sub_1908E56DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  int64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  _QWORD *v42;
  unint64_t v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;
  void *v48;
  _QWORD *v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t result;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  int64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;

  v2 = (uint64_t *)(a1 + OBJC_IVAR___CHKWidgetEnvironment_tuples);
  swift_beginAccess();
  v54 = *v2 + 64;
  v3 = 1 << *(_BYTE *)(*v2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(*v2 + 64);
  v6 = (uint64_t *)(v1 + OBJC_IVAR___CHKWidgetEnvironment_tuples);
  v55 = (unint64_t)(v3 + 63) >> 6;
  v56 = *v2;
  swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v59 = v7;
      v11 = v10 | (v7 << 6);
      goto LABEL_23;
    }
    v12 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_48;
    if (v12 >= v55)
      return swift_release();
    v13 = *(_QWORD *)(v54 + 8 * v12);
    v14 = v7 + 1;
    if (!v13)
    {
      v14 = v7 + 2;
      if (v7 + 2 >= v55)
        return swift_release();
      v13 = *(_QWORD *)(v54 + 8 * v14);
      if (!v13)
      {
        v14 = v7 + 3;
        if (v7 + 3 >= v55)
          return swift_release();
        v13 = *(_QWORD *)(v54 + 8 * v14);
        if (!v13)
          break;
      }
    }
LABEL_22:
    v5 = (v13 - 1) & v13;
    v59 = v14;
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_23:
    v16 = (uint64_t *)(*(_QWORD *)(v56 + 48) + 24 * v11);
    v17 = *v16;
    v18 = v16[1];
    v19 = v16[2];
    v20 = *(void **)(*(_QWORD *)(v56 + 56) + 8 * v11);
    v21 = objc_allocWithZone(MEMORY[0x1E0C99E10]);
    swift_retain();
    swift_bridgeObjectRetain();
    v22 = v20;
    v23 = objc_msgSend(v21, sel_initWithOrderedSet_, v22);
    swift_beginAccess();
    v24 = *v6;
    v58 = v22;
    v60 = v18;
    if (*(_QWORD *)(*v6 + 16))
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v25 = sub_1908D45AC(v18, v19);
      if ((v26 & 1) != 0)
      {
        v27 = *(void **)(*(_QWORD *)(v24 + 56) + 8 * v25);
        swift_endAccess();
        v28 = v27;
        swift_bridgeObjectRelease();
        swift_release();
        objc_msgSend(v23, sel_unionOrderedSet_, v28);

        goto LABEL_29;
      }
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
LABEL_29:
    v29 = objc_allocWithZone(MEMORY[0x1E0C99E40]);
    swift_retain();
    swift_bridgeObjectRetain();
    v57 = v23;
    v30 = objc_msgSend(v29, sel_initWithOrderedSet_, v23);
    swift_beginAccess();
    if (v30)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v32 = *v6;
      v61 = (_QWORD *)*v6;
      *v6 = 0x8000000000000000;
      v34 = sub_1908D45AC(v18, v19);
      v35 = *(_QWORD *)(v32 + 16);
      v36 = (v33 & 1) == 0;
      v37 = v35 + v36;
      if (__OFADD__(v35, v36))
      {
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      v38 = v33;
      if (*(_QWORD *)(v32 + 24) >= v37)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1908FD4AC();
        v39 = v60;
        v42 = v61;
        if ((v38 & 1) == 0)
        {
LABEL_42:
          v42[(v34 >> 6) + 8] |= 1 << v34;
          v49 = (_QWORD *)(v42[6] + 24 * v34);
          *v49 = v17;
          v49[1] = v39;
          v49[2] = v19;
          *(_QWORD *)(v42[7] + 8 * v34) = v30;
          v50 = v42[2];
          v51 = __OFADD__(v50, 1);
          v52 = v50 + 1;
          if (v51)
            goto LABEL_49;
          v42[2] = v52;
          swift_retain();
          swift_bridgeObjectRetain();
          goto LABEL_5;
        }
      }
      else
      {
        sub_1908F9C8C(v37, isUniquelyReferenced_nonNull_native);
        v39 = v60;
        v40 = sub_1908D45AC(v60, v19);
        if ((v38 & 1) != (v41 & 1))
          goto LABEL_51;
        v34 = v40;
        v42 = v61;
        if ((v38 & 1) == 0)
          goto LABEL_42;
      }
      v8 = v42[7];

      *(_QWORD *)(v8 + 8 * v34) = v30;
LABEL_5:
      *v6 = (uint64_t)v42;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      v7 = v59;
      v9 = v58;
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    v43 = sub_1908D45AC(v18, v19);
    v45 = v44;
    swift_bridgeObjectRelease();
    if ((v45 & 1) != 0)
    {
      v46 = swift_isUniquelyReferenced_nonNull_native();
      v47 = *v6;
      v62 = *v6;
      *v6 = 0x8000000000000000;
      v9 = v58;
      if ((v46 & 1) == 0)
      {
        sub_1908FD4AC();
        v47 = v62;
      }
      swift_bridgeObjectRelease();
      swift_release();
      v48 = *(void **)(*(_QWORD *)(v47 + 56) + 8 * v43);
      sub_1908FB790(v43, v47);
      *v6 = v47;

      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
      v9 = v58;
    }
    v7 = v59;
LABEL_6:
    swift_endAccess();

    swift_bridgeObjectRelease();
    swift_release();

  }
  v15 = v7 + 4;
  if (v7 + 4 >= v55)
    return swift_release();
  v13 = *(_QWORD *)(v54 + 8 * v15);
  if (v13)
  {
    v14 = v7 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v14 >= v55)
      return swift_release();
    v13 = *(_QWORD *)(v54 + 8 * v14);
    ++v15;
    if (v13)
      goto LABEL_22;
  }
LABEL_50:
  __break(1u);
LABEL_51:
  result = sub_190A48754();
  __break(1u);
  return result;
}

BOOL static WidgetEnvironment.DifferenceUsage.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t WidgetEnvironment.DifferenceUsage.hash(into:)()
{
  return sub_190A487CC();
}

uint64_t WidgetEnvironment.DifferenceUsage.hashValue.getter()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t WidgetEnvironment.differences(from:ignoringEnvironmentKeys:usage:)(uint64_t a1, unint64_t a2, unsigned __int8 *a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t KeyPath;
  uint64_t v23;
  os_unfair_lock_s *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  os_unfair_lock_s *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  os_unfair_lock_s *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  os_unfair_lock_s *v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  os_unfair_lock_s *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  os_unfair_lock_s *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  os_unfair_lock_s *v71;
  id v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  os_unfair_lock_s *v79;
  id v80;
  uint64_t v81;
  char v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  os_unfair_lock_s *v87;
  id v88;
  uint64_t v89;
  char v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  os_unfair_lock_s *v94;
  id v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  os_unfair_lock_s *v100;
  id v101;
  unint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  os_unfair_lock_s *v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  os_unfair_lock_s *v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  os_unfair_lock_s *v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  os_unfair_lock_s *v121;
  id v122;
  uint64_t v123;
  int64_t v124;
  _QWORD *v125;
  unint64_t *v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  os_unfair_lock_s *v143;
  id v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  os_unfair_lock_s *v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  os_unfair_lock_s *v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  os_unfair_lock_s *v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  os_unfair_lock_s *v166;
  id v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  os_unfair_lock_s *v171;
  id v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  os_unfair_lock_s *v178;
  id v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  os_unfair_lock_s *v183;
  id v184;
  unint64_t v185;
  void *v186;
  uint64_t v187;
  uint64_t v188;
  os_unfair_lock_s *v189;
  id v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  os_unfair_lock_s *v194;
  id v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  id v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  unsigned int v217;
  uint64_t v218;
  void *v219;
  unint64_t v220;

  v7 = sub_190A46924();
  v212 = *(_QWORD *)(v7 - 8);
  v213 = (id)v7;
  MEMORY[0x1E0C80A78](v7);
  v211 = (char *)&v199 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_190A46EAC();
  v209 = *(_QWORD *)(v9 - 8);
  v210 = v9;
  MEMORY[0x1E0C80A78](v9);
  v208 = (char *)&v199 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40);
  MEMORY[0x1E0C80A78](v11);
  v207 = (char *)&v199 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_190A466FC();
  v205 = *(_QWORD *)(v13 - 8);
  v206 = v13;
  MEMORY[0x1E0C80A78](v13);
  v204 = (char *)&v199 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_190A46E94();
  v202 = *(_QWORD *)(v15 - 8);
  v203 = v15;
  MEMORY[0x1E0C80A78](v15);
  v201 = (char *)&v199 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = sub_190A4669C();
  v199 = *(_QWORD *)(v200 - 8);
  MEMORY[0x1E0C80A78](v200);
  v18 = (char *)&v199 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = *a3;
  v20 = *v3;
  v19 = (void *)v3[1];
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = MEMORY[0x1E0DEE9D8];
  v214 = v21 + 16;
  KeyPath = swift_getKeyPath();
  v23 = swift_getKeyPath();
  v24 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v25 = v19;
  os_unfair_lock_lock(v24);
  v26 = sub_1908B7F88(v23);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  v218 = a1;
  sub_190A469B4();
  sub_1908E81A0(0x686353726F6C6F63, 0xEB00000000656D65, KeyPath, v26, (uint64_t)v18, a2, v217, v21, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD86F8], &qword_1EE1EB528, MEMORY[0x1E0CD8718]);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v199 + 8))(v18, v200);
  v27 = swift_getKeyPath();
  v28 = swift_getKeyPath();
  v29 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v30 = v25;
  os_unfair_lock_lock(v29);
  v31 = sub_1908B7F64(v28);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  v32 = (uint64_t)v201;
  sub_190A46AE0();
  v33 = a2;
  v34 = a2;
  LODWORD(a2) = v217;
  v35 = v21;
  sub_1908E81A0(0xD000000000000013, 0x8000000190A60D80, v27, v31, v32, v34, v217, v21, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDB2E0], &qword_1EE1EB5B0, MEMORY[0x1E0CDB2F8]);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v32, v203);
  v36 = swift_getKeyPath();
  v37 = swift_getKeyPath();
  v38 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v39 = v30;
  os_unfair_lock_lock(v38);
  v40 = sub_1908B7F40(v37);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  v41 = (uint64_t)v204;
  sub_190A469CC();
  sub_1908E81A0(0x4779616C70736964, 0xEC00000074756D61, v36, v40, v41, v33, a2, v21, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD8AA8], &qword_1EE1E6C30, MEMORY[0x1E0CD8AB8]);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v205 + 8))(v41, v206);
  v42 = swift_getKeyPath();
  v43 = swift_getKeyPath();
  v44 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v45 = v39;
  os_unfair_lock_lock(v44);
  v46 = sub_1908B7C78(v43);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  sub_190A469E4();
  v47 = v217;
  sub_1908E7700(0x5379616C70736964, 0xEC000000656C6163, v48, v42, v46, v33, v217, v35);
  swift_release();
  swift_bridgeObjectRelease();
  v49 = swift_getKeyPath();
  v50 = swift_getKeyPath();
  v51 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v52 = v45;
  os_unfair_lock_lock(v51);
  v53 = sub_1908B7D60(v50);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  v54 = (unint64_t)v207;
  sub_190A46A74();
  v215 = v33;
  v55 = v47;
  sub_1908E7C10(0xD000000000000010, 0x8000000190A60DA0, v49, v53, v54, v33, v47, v35);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1908AA544(v54, &qword_1ECF6AE40);
  v56 = swift_getKeyPath();
  v57 = swift_getKeyPath();
  v58 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v59 = v52;
  os_unfair_lock_lock(v58);
  v60 = sub_1908B7D3C(v57);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  v61 = (uint64_t)v208;
  sub_190A469FC();
  sub_1908E81A0(0x65746143657A6973, 0xEC00000079726F67, v56, v60, v61, v33, v47, v35, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDB388], &qword_1ECF6AA38, MEMORY[0x1E0CDB3B8]);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v209 + 8))(v61, v210);
  v62 = swift_getKeyPath();
  v63 = swift_getKeyPath();
  v64 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v65 = v59;
  os_unfair_lock_lock(v64);
  v66 = sub_1908B7D18(v63);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  v67 = (uint64_t)v211;
  sub_190A46A8C();
  v68 = v215;
  sub_1908E81A0(0xD000000000000010, 0x8000000190A60DC0, v62, v66, v67, v215, v55, v35, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDA008], &qword_1EE1EB5A0, MEMORY[0x1E0CDA020]);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, id))(v212 + 8))(v67, v213);
  v69 = swift_getKeyPath();
  v70 = swift_getKeyPath();
  v71 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v72 = v65;
  os_unfair_lock_lock(v71);
  v73 = sub_1908B7C8C(v70);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  v74 = sub_190A46B70();
  v75 = v55;
  v76 = v35;
  sub_1908E8858(0xD000000000000026, 0x8000000190A60DE0, v69, v73, v74 & 1, v68, v75, v35);
  swift_release();
  swift_bridgeObjectRelease();
  v77 = swift_getKeyPath();
  v78 = swift_getKeyPath();
  v79 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v80 = v72;
  os_unfair_lock_lock(v79);
  v81 = sub_1908B7C8C(v78);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  v82 = sub_190A46B04();
  v83 = v68;
  v84 = v217;
  sub_1908E8858(0xD000000000000019, 0x8000000190A60E10, v77, v81, v82 & 1, v83, v217, v76);
  swift_release();
  swift_bridgeObjectRelease();
  v85 = swift_getKeyPath();
  v86 = swift_getKeyPath();
  v87 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v88 = v80;
  os_unfair_lock_lock(v87);
  v89 = sub_1908B7C8C(v86);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  v90 = sub_190A46B10();
  v91 = v215;
  sub_1908E8858(0xD000000000000019, 0x8000000190A60E30, v85, v89, v90 & 1, v215, v84, v76);
  swift_release();
  swift_bridgeObjectRelease();
  v92 = swift_getKeyPath();
  v93 = swift_getKeyPath();
  v94 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v95 = v88;
  os_unfair_lock_lock(v94);
  v96 = sub_1908B7C8C(v93);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  v97 = sub_190A46B4C();
  sub_1908E8858(0xD00000000000001FLL, 0x8000000190A60E50, v92, v96, v97 & 1, v91, v84, v76);
  swift_release();
  swift_bridgeObjectRelease();
  v98 = swift_getKeyPath();
  v99 = swift_getKeyPath();
  v100 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v101 = v95;
  os_unfair_lock_lock(v100);
  v102 = sub_1908B7A4C(v99);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  sub_1908BE014();
  sub_190A46C3C();
  v103 = v219;
  sub_1908EA760(0x4D7465676469775FLL, 0xEE00736369727465, v98, v102, v219, v91, v84, v76, (unint64_t *)&qword_1ECF6CD48);

  swift_release();
  swift_bridgeObjectRelease();
  v104 = swift_getKeyPath();
  v105 = swift_getKeyPath();
  v106 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v107 = v101;
  os_unfair_lock_lock(v106);
  v108 = sub_1908B7C8C(v105);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  sub_190901960();
  sub_190A46C3C();
  sub_1908E8858(0xD000000000000010, 0x8000000190A60E70, v104, v108, (char)v219, v91, v84, v76);
  swift_release();
  swift_bridgeObjectRelease();
  v109 = swift_getKeyPath();
  v110 = swift_getKeyPath();
  v111 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v112 = v107;
  os_unfair_lock_lock(v111);
  v113 = sub_1908B7CA0(v110);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  sub_19090191C();
  sub_190A46C3C();
  sub_1908E9CF0(0x467465676469775FLL, 0xED0000796C696D61, v109, v113, (char)v219, v91, v84, v76);
  swift_release();
  swift_bridgeObjectRelease();
  v114 = swift_getKeyPath();
  v115 = swift_getKeyPath();
  v116 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v117 = v112;
  os_unfair_lock_lock(v116);
  v118 = sub_1908B7C64(v115);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  sub_1909019AC();
  sub_190A46C3C();
  v216 = v76;
  sub_1908E8D70(0x7A696C61636F6C5FLL, 0xEE00736E6F697461, v114, v118, (uint64_t)v219, v91, v84, v76);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v119 = swift_getKeyPath();
  v120 = swift_getKeyPath();
  v121 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v122 = v117;
  os_unfair_lock_lock(v121);
  v123 = sub_1908B7D04(v120);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  if (v123)
  {
    v124 = *(_QWORD *)(v123 + 16);
    if (v124)
    {
      v212 = v119;
      v213 = v122;
      v219 = (void *)MEMORY[0x1E0DEE9D8];
      sub_1908B8C6C(0, v124, 0);
      v125 = v219;
      v126 = (unint64_t *)(v123 + 40);
      do
      {
        v127 = *(v126 - 1);
        v128 = *v126;
        sub_1908B53B8(v127, *v126);
        v129 = sub_190A45FF4();
        v131 = v130;
        sub_1908B53FC(v127, v128);
        v219 = v125;
        v133 = v125[2];
        v132 = v125[3];
        if (v133 >= v132 >> 1)
        {
          sub_1908B8C6C(v132 > 1, v133 + 1, 1);
          v125 = v219;
        }
        v126 += 2;
        v125[2] = v133 + 1;
        v134 = &v125[2 * v133];
        v134[4] = v129;
        v134[5] = v131;
        --v124;
      }
      while (v124);
      swift_bridgeObjectRelease();
      v119 = v212;
      v122 = v213;
    }
    else
    {
      swift_bridgeObjectRelease();
      v125 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    v125 = 0;
  }
  sub_190901A40();
  sub_190A46C3C();
  v135 = (uint64_t)v219;
  v136 = v220;
  v137 = sub_190A45FF4();
  v139 = v138;
  sub_1908B53FC(v135, v136);
  v140 = v215;
  sub_1908E9290(0xD000000000000012, 0x8000000190A60E90, v119, v125, v137, v139, v215, v217, v216);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v141 = swift_getKeyPath();
  v142 = swift_getKeyPath();
  v143 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v144 = v122;
  os_unfair_lock_lock(v143);
  v145 = sub_1908B7C8C(v142);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  v146 = sub_190A46AC8();
  v147 = v217;
  sub_1908E8858(0xD000000000000012, 0x8000000190A60EB0, v141, v145, v146 & 1, v140, v217, v216);
  swift_release();
  swift_bridgeObjectRelease();
  v148 = swift_getKeyPath();
  v149 = swift_getKeyPath();
  v150 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v151 = v144;
  os_unfair_lock_lock(v150);
  v152 = sub_1908B7C8C(v149);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  sub_190901AD4();
  sub_190A46C3C();
  v153 = v216;
  sub_1908E8858(0xD000000000000010, 0x8000000190A60ED0, v148, v152, (char)v219, v140, v147, v216);
  swift_release();
  swift_bridgeObjectRelease();
  v154 = swift_getKeyPath();
  v155 = swift_getKeyPath();
  v156 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v157 = v151;
  os_unfair_lock_lock(v156);
  v158 = sub_1908B7CF0(v155);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  sub_190901C44();
  sub_190A46C3C();
  sub_1908E97AC(0xD000000000000013, 0x8000000190A60EF0, v154, v158, v219, v220, v140, v147, v153);
  swift_release();
  swift_bridgeObjectRelease();
  v159 = swift_getKeyPath();
  v160 = swift_getKeyPath();
  v161 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v162 = v157;
  os_unfair_lock_lock(v161);
  v163 = sub_1908B7CDC(v160);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  sub_190901C88();
  sub_190A46C3C();
  v213 = (id)0xD000000000000025;
  sub_1908E9CF0(0xD000000000000025, 0x8000000190A60F10, v159, v163, (char)v219, v140, v147, v153);
  swift_release();
  swift_bridgeObjectRelease();
  v164 = swift_getKeyPath();
  v165 = swift_getKeyPath();
  v166 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v167 = v162;
  os_unfair_lock_lock(v166);
  v168 = sub_1908B7C8C(v165);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  sub_190901B18();
  sub_190A46C3C();
  sub_1908E8858((uint64_t)v213, 0x8000000190A60F40, v164, v168, (char)v219, v140, v147, v216);
  swift_release();
  swift_bridgeObjectRelease();
  v169 = swift_getKeyPath();
  v170 = swift_getKeyPath();
  v171 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v172 = v167;
  os_unfair_lock_lock(v171);
  v173 = sub_1908B7C8C(v170);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  sub_190901B5C();
  sub_190A46C3C();
  v174 = v217;
  v175 = v216;
  sub_1908E8858(0xD00000000000002BLL, 0x8000000190A60F70, v169, v173, (char)v219, v140, v217, v216);
  swift_release();
  swift_bridgeObjectRelease();
  v176 = swift_getKeyPath();
  v177 = swift_getKeyPath();
  v178 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v179 = v172;
  os_unfair_lock_lock(v178);
  v180 = sub_1908B7CC8(v177);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  sub_190901C00();
  sub_190A46C3C();
  sub_1908EA228(0xD00000000000001ALL, 0x8000000190A60FA0, v176, v180, (char)v219, v140, v174, v175);
  swift_release();
  swift_bridgeObjectRelease();
  v181 = swift_getKeyPath();
  v182 = swift_getKeyPath();
  v183 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v184 = v179;
  os_unfair_lock_lock(v183);
  v185 = sub_1908B7A68(v182);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  sub_1908FF90C();
  sub_190A46C3C();
  v186 = v219;
  sub_1908EA760(0xD000000000000018, 0x8000000190A60FC0, v181, v185, v219, v140, v174, v175, (unint64_t *)&unk_1ECF6A9A8);

  swift_release();
  swift_bridgeObjectRelease();
  v187 = swift_getKeyPath();
  v188 = swift_getKeyPath();
  v189 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v190 = v184;
  os_unfair_lock_lock(v189);
  v191 = sub_1908B7C8C(v188);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  sub_190901CCC();
  sub_190A46C3C();
  sub_1908E8858(0xD000000000000022, 0x8000000190A60FE0, v187, v191, (char)v219, v140, v174, v175);
  swift_release();
  swift_bridgeObjectRelease();
  v192 = swift_getKeyPath();
  v193 = swift_getKeyPath();
  v194 = *(os_unfair_lock_s **)(v20 + 16);
  swift_retain_n();
  v195 = v190;
  os_unfair_lock_lock(v194);
  v196 = sub_1908B7C8C(v193);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));

  swift_release();
  swift_release_n();
  sub_190901D10();
  sub_190A46C3C();
  sub_1908E8858(0xD000000000000019, 0x8000000190A61010, v192, v196, (char)v219, v140, v174, v175);
  swift_release();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v197 = *(_QWORD *)(v175 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v197;
}

uint64_t sub_1908E7700(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD **v25;
  uint64_t v26;
  _QWORD *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if (a6 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    v14 = sub_190A48484();
    if (v14)
    {
LABEL_3:
      v32 = a5;
      v33 = a8;
      v34 = a1;
      v35 = a2;
      sub_190A481CC();
      a8 = a6 & 0xC000000000000001;
      a2 = 4;
      a1 = MEMORY[0x1E0DEBEA0];
      do
      {
        v15 = a2 - 4;
        if (a8)
        {
          a5 = MEMORY[0x194013510](a2 - 4, a6);
          v16 = a2 - 3;
          if (__OFADD__(v15, 1))
            goto LABEL_14;
        }
        else
        {
          a5 = *(_QWORD *)(a6 + 8 * a2);
          swift_retain();
          v16 = a2 - 3;
          if (__OFADD__(v15, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        v17 = sub_190A47AAC();
        swift_release();
        if ((v17 & 1) != 0)
          return swift_bridgeObjectRelease();
        ++a2;
      }
      while (v16 != v14);
      result = swift_bridgeObjectRelease();
      a1 = v34;
      a2 = v35;
      a5 = v32;
      a8 = v33;
      if (v32)
        goto LABEL_17;
      return result;
    }
  }
  else
  {
    v14 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14)
      goto LABEL_3;
  }
  result = swift_bridgeObjectRelease();
  if (!a5)
    return result;
LABEL_17:
  result = sub_1908E0C44(a5, a3);
  if ((result & 1) == 0)
  {
    v19 = *(_QWORD *)(a5 + 16);
    if (v19)
    {
      v36 = MEMORY[0x1E0DEE9D8];
      sub_1908B8C6C(0, v19, 0);
      v20 = a5 + 32;
      do
      {
        sub_190A483DC();
        v22 = *(_QWORD *)(v36 + 16);
        v21 = *(_QWORD *)(v36 + 24);
        v23 = v22 + 1;
        if (v22 >= v21 >> 1)
          sub_1908B8C6C(v21 > 1, v22 + 1, 1);
        *(_QWORD *)(v36 + 16) = v23;
        v24 = v36 + 16 * v22;
        *(_QWORD *)(v24 + 32) = 0;
        *(_QWORD *)(v24 + 40) = 0xE000000000000000;
        v20 += 8;
        --v19;
      }
      while (v19);
      if (v23 > 1)
        goto LABEL_24;
    }
    else
    {
      v23 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v23 > 1)
      {
LABEL_24:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
        sub_1908AF598((unint64_t *)&qword_1EE1EAE30, (uint64_t *)&unk_1ECF6CD08, MEMORY[0x1E0DEAF20]);
        sub_190A47A58();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
LABEL_28:
        v25 = (_QWORD **)(a8 + 16);
        sub_190A48298();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        sub_190A47B00();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        v26 = a2;
        swift_beginAccess();
        v27 = *v25;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v25 = v27;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v27 = sub_1908F2A64(0, v27[2] + 1, 1, v27);
          *v25 = v27;
        }
        v30 = v27[2];
        v29 = v27[3];
        if (v30 >= v29 >> 1)
        {
          v27 = sub_1908F2A64((_QWORD *)(v29 > 1), v30 + 1, 1, v27);
          *v25 = v27;
        }
        v27[2] = v30 + 1;
        v31 = &v27[2 * v30];
        v31[4] = a1;
        v31[5] = v26;
        return swift_endAccess();
      }
    }
    if (!v23)
    {
      result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_1908E7C10(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, int a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t result;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;

  LODWORD(v9) = a7;
  v46 = a1;
  v47 = a2;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40);
  v14 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v48 = (uint64_t)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a6 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    v16 = sub_190A48484();
    if (v16)
    {
LABEL_3:
      v41 = v14;
      v42 = a4;
      v43 = a8;
      v44 = v9;
      v45 = a5;
      sub_190A481CC();
      a5 = a6 & 0xC000000000000001;
      v17 = 4;
      a8 = MEMORY[0x1E0DEBEA0];
      do
      {
        v14 = v17 - 4;
        if (a5)
        {
          a4 = MEMORY[0x194013510](v17 - 4, a6);
          v9 = v17 - 3;
          if (__OFADD__(v14, 1))
            goto LABEL_14;
        }
        else
        {
          a4 = *(_QWORD *)(a6 + 8 * v17);
          swift_retain();
          v9 = v17 - 3;
          if (__OFADD__(v14, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        v50 = a4;
        v52 = a3;
        v18 = sub_190A47AAC();
        swift_release();
        if ((v18 & 1) != 0)
          return swift_bridgeObjectRelease();
        ++v17;
      }
      while (v9 != v16);
      result = swift_bridgeObjectRelease();
      a5 = v45;
      LODWORD(v9) = v44;
      a4 = v42;
      a8 = v43;
      v14 = v41;
      if (v42)
        goto LABEL_17;
      return result;
    }
  }
  else
  {
    v16 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16)
      goto LABEL_3;
  }
  result = swift_bridgeObjectRelease();
  if (!a4)
    return result;
LABEL_17:
  result = sub_1908E0990(a5, a4);
  if ((result & 1) == 0)
  {
    v20 = *(_QWORD *)(a4 + 16);
    if (v20)
    {
      v43 = a8;
      v44 = v9;
      v45 = a5;
      v52 = MEMORY[0x1E0DEE9D8];
      sub_1908B8C6C(0, v20, 0);
      v21 = a4 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      v22 = *(_QWORD *)(v14 + 72);
      v23 = v52;
      do
      {
        v24 = v48;
        sub_1908AAA48(v21, v48, &qword_1ECF6AE40);
        v50 = 0;
        v51 = 0xE000000000000000;
        sub_190A483DC();
        v26 = v50;
        v25 = v51;
        sub_1908AA544(v24, &qword_1ECF6AE40);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1908B8C6C(0, *(_QWORD *)(v23 + 16) + 1, 1);
          v23 = v52;
        }
        v28 = *(_QWORD *)(v23 + 16);
        v27 = *(_QWORD *)(v23 + 24);
        v29 = v28 + 1;
        if (v28 >= v27 >> 1)
        {
          sub_1908B8C6C(v27 > 1, v28 + 1, 1);
          v23 = v52;
        }
        *(_QWORD *)(v23 + 16) = v29;
        v30 = v23 + 16 * v28;
        *(_QWORD *)(v30 + 32) = v26;
        *(_QWORD *)(v30 + 40) = v25;
        v21 += v22;
        --v20;
      }
      while (v20);
      a5 = v45;
      a8 = v43;
      if (v29 > 1)
        goto LABEL_26;
    }
    else
    {
      v23 = MEMORY[0x1E0DEE9D8];
      v29 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v29 > 1)
      {
LABEL_26:
        v50 = 91;
        v51 = 0xE100000000000000;
        v52 = v23;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
        sub_1908AF598((unint64_t *)&qword_1EE1EAE30, (uint64_t *)&unk_1ECF6CD08, MEMORY[0x1E0DEAF20]);
        sub_190A47A58();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
LABEL_30:
        v31 = (_QWORD *)(a8 + 16);
        v50 = 0;
        v51 = 0xE000000000000000;
        sub_190A48298();
        v32 = v47;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v50 = v46;
        v51 = v32;
        sub_190A47B3C();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        sub_1908AAA48(a5, v48, &qword_1ECF6AE40);
        sub_190A47B00();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        v33 = v50;
        v34 = v51;
        swift_beginAccess();
        v35 = *(_QWORD **)(a8 + 16);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(a8 + 16) = v35;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v35 = sub_1908F2A64(0, v35[2] + 1, 1, v35);
          *v31 = v35;
        }
        v38 = v35[2];
        v37 = v35[3];
        if (v38 >= v37 >> 1)
        {
          v35 = sub_1908F2A64((_QWORD *)(v37 > 1), v38 + 1, 1, v35);
          *v31 = v35;
        }
        v35[2] = v38 + 1;
        v39 = &v35[2 * v38];
        v39[4] = v33;
        v39[5] = v34;
        return swift_endAccess();
      }
    }
    if (!v29)
    {
      result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_1908E81A0(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, int a7, uint64_t a8, uint64_t (*a9)(uint64_t), unint64_t *a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(_BYTE *, uint64_t);
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD **v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  _BYTE v52[4];
  int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t);
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  _BYTE *v62;
  void (*v63)(_BYTE *, unint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;

  v54 = a8;
  v55 = a1;
  LODWORD(v11) = a7;
  v61 = a5;
  v56 = a2;
  v58 = a9;
  v15 = a9(0);
  v59 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v62 = &v52[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v19 = &v52[-v18];
  if (a6 >> 62)
    goto LABEL_43;
  v20 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    v64 = v15;
    v60 = v19;
    if (v20)
      break;
    result = swift_bridgeObjectRelease();
    if (!a4)
      return result;
LABEL_15:
    a6 = *(_QWORD *)(a4 + 16);
    if (!a6)
    {
      v29 = MEMORY[0x1E0DEE9D8];
      v30 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v30 <= 1)
        goto LABEL_32;
      goto LABEL_19;
    }
    v24 = v59;
    v25 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
    a3 = a4 + v25;
    v63 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v59 + 16);
    v63(v19, a4 + v25, v64);
    v26 = sub_1908AED38(a10, 255, v58, a11);
    swift_bridgeObjectRetain();
    v58 = (uint64_t (*)(uint64_t))v26;
    v27 = sub_190A47AAC();
    v15 = v64;
    LOBYTE(v26) = v27;
    v28 = *(void (**)(_BYTE *, uint64_t))(v24 + 8);
    v28(v19, v64);
    if ((v26 & 1) != 0)
      return swift_bridgeObjectRelease();
    v57 = a4;
    v53 = v11;
    if (a6 == 1)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      v67 = MEMORY[0x1E0DEE9D8];
      sub_1908B8C6C(0, a6, 0);
      v35 = v64;
      v36 = *(_QWORD *)(v59 + 72);
      do
      {
        v37 = v62;
        v63(v62, a3, v35);
        v65 = 0;
        v66 = 0xE000000000000000;
        sub_190A483DC();
        v38 = v65;
        v39 = v66;
        v28(v37, v35);
        v29 = v67;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1908B8C6C(0, *(_QWORD *)(v29 + 16) + 1, 1);
          v35 = v64;
          v29 = v67;
        }
        v41 = *(_QWORD *)(v29 + 16);
        v40 = *(_QWORD *)(v29 + 24);
        v30 = v41 + 1;
        if (v41 >= v40 >> 1)
        {
          sub_1908B8C6C(v40 > 1, v41 + 1, 1);
          v35 = v64;
          v29 = v67;
        }
        *(_QWORD *)(v29 + 16) = v30;
        v42 = v29 + 16 * v41;
        *(_QWORD *)(v42 + 32) = v38;
        *(_QWORD *)(v42 + 40) = v39;
        a3 += v36;
        --a6;
      }
      while (a6);
      if (v30 <= 1)
      {
LABEL_32:
        if (!v30)
        {
          result = swift_bridgeObjectRelease();
          __break(1u);
          return result;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_34;
      }
LABEL_19:
      v65 = 91;
      v66 = 0xE100000000000000;
      v67 = v29;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
      sub_1908AF598((unint64_t *)&qword_1EE1EAE30, (uint64_t *)&unk_1ECF6CD08, MEMORY[0x1E0DEAF20]);
      sub_190A47A58();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
LABEL_34:
      v43 = (_QWORD **)(v54 + 16);
      v65 = 0;
      v66 = 0xE000000000000000;
      sub_190A48298();
      v44 = v56;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v65 = v55;
      v66 = v44;
      sub_190A47B3C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v59 + 16))(v62, v61, v64);
      sub_190A47B00();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      v45 = v65;
      v46 = v66;
      swift_beginAccess();
      v47 = *v43;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v43 = v47;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v47 = sub_1908F2A64(0, v47[2] + 1, 1, v47);
        *v43 = v47;
      }
      v50 = v47[2];
      v49 = v47[3];
      if (v50 >= v49 >> 1)
      {
        v47 = sub_1908F2A64((_QWORD *)(v49 > 1), v50 + 1, 1, v47);
        *v43 = v47;
      }
      v47[2] = v50 + 1;
      v51 = &v47[2 * v50];
      v51[4] = v45;
      v51[5] = v46;
      return swift_endAccess();
    }
    v19 = v60;
    a4 = *(_QWORD *)(v59 + 72);
    v31 = v57 + a4 + v25;
    v32 = 1;
    while (1)
    {
      v63(v19, v31, v15);
      v11 = v32 + 1;
      if (__OFADD__(v32, 1))
        break;
      v33 = v15;
      v34 = sub_190A47AAC();
      v28(v19, v33);
      if ((v34 & 1) != 0)
        return swift_bridgeObjectRelease();
      ++v32;
      v31 += a4;
      v15 = v64;
      if (v11 == a6)
        goto LABEL_25;
    }
LABEL_42:
    __break(1u);
LABEL_43:
    swift_bridgeObjectRetain();
    v20 = sub_190A48484();
  }
  v57 = a4;
  v53 = v11;
  v15 = sub_190A481CC();
  v11 = 4;
  do
  {
    v19 = (_BYTE *)(v11 - 4);
    if ((a6 & 0xC000000000000001) != 0)
    {
      a4 = MEMORY[0x194013510](v11 - 4, a6);
      v21 = v11 - 3;
      if (__OFADD__(v19, 1))
        goto LABEL_41;
    }
    else
    {
      a4 = *(_QWORD *)(a6 + 8 * v11);
      swift_retain();
      v21 = v11 - 3;
      if (__OFADD__(v19, 1))
      {
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    v65 = a4;
    v67 = a3;
    v22 = sub_190A47AAC();
    swift_release();
    if ((v22 & 1) != 0)
      return swift_bridgeObjectRelease();
    ++v11;
  }
  while (v21 != v20);
  result = swift_bridgeObjectRelease();
  LODWORD(v11) = v53;
  a4 = v57;
  v19 = v60;
  if (v57)
    goto LABEL_15;
  return result;
}

uint64_t sub_1908E8858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v10;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD **v23;
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v35;

  LOBYTE(v10) = a5;
  if (a6 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    v13 = sub_190A48484();
    if (v13)
    {
LABEL_3:
      v29 = a4;
      v30 = a8;
      v32 = a2;
      v33 = v10;
      sub_190A481CC();
      v10 = a6 & 0xC000000000000001;
      a2 = 4;
      a4 = MEMORY[0x1E0DEBEA0];
      do
      {
        a8 = a2 - 4;
        if (v10)
        {
          MEMORY[0x194013510](a2 - 4, a6);
          v14 = a2 - 3;
          if (__OFADD__(a8, 1))
            goto LABEL_14;
        }
        else
        {
          swift_retain();
          v14 = a2 - 3;
          if (__OFADD__(a8, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        v15 = sub_190A47AAC();
        swift_release();
        if ((v15 & 1) != 0)
          return swift_bridgeObjectRelease();
        ++a2;
      }
      while (v14 != v13);
      result = swift_bridgeObjectRelease();
      LOBYTE(v10) = v33;
      a8 = v30;
      a2 = v32;
      a4 = v29;
      if (v29)
        goto LABEL_17;
      return result;
    }
  }
  else
  {
    v13 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_3;
  }
  result = swift_bridgeObjectRelease();
  if (!a4)
    return result;
LABEL_17:
  result = sub_1908E0920(v10 & 1, a4);
  if ((result & 1) == 0)
  {
    v17 = *(_QWORD *)(a4 + 16);
    if (v17)
    {
      v31 = a8;
      v35 = MEMORY[0x1E0DEE9D8];
      sub_1908B8C6C(0, v17, 0);
      v18 = a4 + 32;
      do
      {
        sub_190A483DC();
        v20 = *(_QWORD *)(v35 + 16);
        v19 = *(_QWORD *)(v35 + 24);
        v21 = v20 + 1;
        if (v20 >= v19 >> 1)
          sub_1908B8C6C(v19 > 1, v20 + 1, 1);
        *(_QWORD *)(v35 + 16) = v21;
        v22 = v35 + 16 * v20;
        *(_QWORD *)(v22 + 32) = 0;
        *(_QWORD *)(v22 + 40) = 0xE000000000000000;
        ++v18;
        --v17;
      }
      while (v17);
      a8 = v31;
      if (v21 > 1)
        goto LABEL_24;
    }
    else
    {
      v21 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v21 > 1)
      {
LABEL_24:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
        sub_1908AF598((unint64_t *)&qword_1EE1EAE30, (uint64_t *)&unk_1ECF6CD08, MEMORY[0x1E0DEAF20]);
        sub_190A47A58();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
LABEL_28:
        v23 = (_QWORD **)(a8 + 16);
        sub_190A48298();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        sub_190A47B00();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        swift_beginAccess();
        v24 = *v23;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v23 = v24;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v24 = sub_1908F2A64(0, v24[2] + 1, 1, v24);
          *v23 = v24;
        }
        v27 = v24[2];
        v26 = v24[3];
        if (v27 >= v26 >> 1)
        {
          v24 = sub_1908F2A64((_QWORD *)(v26 > 1), v27 + 1, 1, v24);
          *v23 = v24;
        }
        v24[2] = v27 + 1;
        v28 = &v24[2 * v27];
        v28[4] = a1;
        v28[5] = a2;
        return swift_endAccess();
      }
    }
    if (!v21)
    {
      result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_1908E8D70(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD **v23;
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;

  if (a6 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    v13 = sub_190A48484();
    if (v13)
    {
LABEL_3:
      v29 = a4;
      v30 = a8;
      v32 = a2;
      v33 = a5;
      sub_190A481CC();
      a2 = a6 & 0xC000000000000001;
      a5 = 4;
      a4 = MEMORY[0x1E0DEBEA0];
      do
      {
        a8 = a5 - 4;
        if (a2)
        {
          MEMORY[0x194013510](a5 - 4, a6);
          v14 = a5 - 3;
          if (__OFADD__(a8, 1))
            goto LABEL_14;
        }
        else
        {
          swift_retain();
          v14 = a5 - 3;
          if (__OFADD__(a8, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        v15 = sub_190A47AAC();
        swift_release();
        if ((v15 & 1) != 0)
          return swift_bridgeObjectRelease();
        ++a5;
      }
      while (v14 != v13);
      result = swift_bridgeObjectRelease();
      a2 = v32;
      a5 = v33;
      a4 = v29;
      a8 = v30;
      if (v29)
        goto LABEL_17;
      return result;
    }
  }
  else
  {
    v13 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_3;
  }
  result = swift_bridgeObjectRelease();
  if (!a4)
    return result;
LABEL_17:
  result = sub_1908E0530(a5, a4);
  if ((result & 1) == 0)
  {
    v17 = *(_QWORD *)(a4 + 16);
    if (v17)
    {
      v31 = a8;
      v35 = MEMORY[0x1E0DEE9D8];
      sub_1908B8C6C(0, v17, 0);
      v18 = a4 + 32;
      do
      {
        v18 += 8;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C650);
        sub_190A483DC();
        v20 = *(_QWORD *)(v35 + 16);
        v19 = *(_QWORD *)(v35 + 24);
        v21 = v20 + 1;
        if (v20 >= v19 >> 1)
          sub_1908B8C6C(v19 > 1, v20 + 1, 1);
        *(_QWORD *)(v35 + 16) = v21;
        v22 = v35 + 16 * v20;
        *(_QWORD *)(v22 + 32) = 0;
        *(_QWORD *)(v22 + 40) = 0xE000000000000000;
        --v17;
      }
      while (v17);
      a8 = v31;
      if (v21 > 1)
        goto LABEL_24;
    }
    else
    {
      v21 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v21 > 1)
      {
LABEL_24:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
        sub_1908AF598((unint64_t *)&qword_1EE1EAE30, (uint64_t *)&unk_1ECF6CD08, MEMORY[0x1E0DEAF20]);
        sub_190A47A58();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
LABEL_28:
        v23 = (_QWORD **)(a8 + 16);
        sub_190A48298();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C650);
        sub_190A47B00();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        swift_beginAccess();
        v24 = *v23;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v23 = v24;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v24 = sub_1908F2A64(0, v24[2] + 1, 1, v24);
          *v23 = v24;
        }
        v27 = v24[2];
        v26 = v24[3];
        if (v27 >= v26 >> 1)
        {
          v24 = sub_1908F2A64((_QWORD *)(v26 > 1), v27 + 1, 1, v24);
          *v23 = v24;
        }
        v24[2] = v27 + 1;
        v28 = &v24[2 * v27];
        v28[4] = a1;
        v28[5] = a2;
        return swift_endAccess();
      }
    }
    if (!v21)
    {
      result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_1908E9290(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v34;

  if (a7 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    v13 = sub_190A48484();
    if (v13)
    {
LABEL_3:
      v29 = a4;
      v30 = a5;
      v31 = a6;
      sub_190A481CC();
      a5 = a7 & 0xC000000000000001;
      a6 = 4;
      do
      {
        a4 = (_QWORD *)(a6 - 4);
        if (a5)
        {
          MEMORY[0x194013510](a6 - 4, a7);
          v14 = a6 - 3;
          if (__OFADD__(a4, 1))
            goto LABEL_14;
        }
        else
        {
          swift_retain();
          v14 = a6 - 3;
          if (__OFADD__(a4, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        v15 = sub_190A47AAC();
        swift_release();
        if ((v15 & 1) != 0)
          return swift_bridgeObjectRelease();
        ++a6;
      }
      while (v14 != v13);
      result = swift_bridgeObjectRelease();
      a5 = v30;
      a6 = v31;
      a4 = v29;
      if (v29)
        goto LABEL_17;
      return result;
    }
  }
  else
  {
    v13 = *(_QWORD *)((a7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_3;
  }
  result = swift_bridgeObjectRelease();
  if (!a4)
    return result;
LABEL_17:
  result = sub_1908E046C(a5, a6, a4);
  if ((result & 1) == 0)
  {
    v17 = a4[2];
    if (v17)
    {
      v34 = MEMORY[0x1E0DEE9D8];
      sub_1908B8C6C(0, v17, 0);
      v18 = a4 + 5;
      do
      {
        sub_190A483DC();
        v20 = *(_QWORD *)(v34 + 16);
        v19 = *(_QWORD *)(v34 + 24);
        v21 = v20 + 1;
        if (v20 >= v19 >> 1)
          sub_1908B8C6C(v19 > 1, v20 + 1, 1);
        v18 += 2;
        *(_QWORD *)(v34 + 16) = v21;
        v22 = v34 + 16 * v20;
        *(_QWORD *)(v22 + 32) = 0;
        *(_QWORD *)(v22 + 40) = 0xE000000000000000;
        --v17;
      }
      while (v17);
      if (v21 > 1)
        goto LABEL_24;
    }
    else
    {
      v21 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v21 > 1)
      {
LABEL_24:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
        sub_1908AF598((unint64_t *)&qword_1EE1EAE30, (uint64_t *)&unk_1ECF6CD08, MEMORY[0x1E0DEAF20]);
        sub_190A47A58();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
LABEL_28:
        v23 = (_QWORD *)(a9 + 16);
        sub_190A48298();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        swift_bridgeObjectRetain();
        sub_190A47B00();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        swift_beginAccess();
        v24 = *(_QWORD **)(a9 + 16);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(a9 + 16) = v24;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v24 = sub_1908F2A64(0, v24[2] + 1, 1, v24);
          *v23 = v24;
        }
        v27 = v24[2];
        v26 = v24[3];
        if (v27 >= v26 >> 1)
        {
          v24 = sub_1908F2A64((_QWORD *)(v26 > 1), v27 + 1, 1, v24);
          *v23 = v24;
        }
        v24[2] = v27 + 1;
        v28 = &v24[2 * v27];
        v28[4] = a1;
        v28[5] = a2;
        return swift_endAccess();
      }
    }
    if (!v21)
    {
      result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_1908E97AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, unint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t result;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v40;

  if (a7 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    v14 = sub_190A48484();
    if (v14)
    {
LABEL_3:
      v35 = a5;
      v36 = a4;
      v37 = a2;
      v38 = a6;
      sub_190A481CC();
      a6 = a7 & 0xC000000000000001;
      v15 = 4;
      a5 = MEMORY[0x1E0DEBEA0];
      do
      {
        a4 = v15 - 4;
        if (a6)
        {
          a2 = MEMORY[0x194013510](v15 - 4, a7);
          v16 = v15 - 3;
          if (__OFADD__(a4, 1))
            goto LABEL_14;
        }
        else
        {
          a2 = *(_QWORD *)(a7 + 8 * v15);
          swift_retain();
          v16 = v15 - 3;
          if (__OFADD__(a4, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        v17 = sub_190A47AAC();
        swift_release();
        if ((v17 & 1) != 0)
          return swift_bridgeObjectRelease();
        ++v15;
      }
      while (v16 != v14);
      result = swift_bridgeObjectRelease();
      a2 = v37;
      a6 = v38;
      a4 = v36;
      a5 = v35;
      if (v36)
        goto LABEL_17;
      return result;
    }
  }
  else
  {
    v14 = *(_QWORD *)((a7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14)
      goto LABEL_3;
  }
  result = swift_bridgeObjectRelease();
  if (a4)
  {
LABEL_17:
    v19 = *(_QWORD *)(a4 + 16);
    if (v19)
    {
      v20 = (_QWORD *)(a4 + 40);
      v21 = *(_QWORD *)(a4 + 16);
      while (*((unsigned __int8 *)v20 - 8) != a5 || *v20 != a6)
      {
        v20 += 2;
        if (!--v21)
        {
          v40 = MEMORY[0x1E0DEE9D8];
          sub_1908B8C6C(0, v19, 0);
          v23 = a4 + 40;
          do
          {
            sub_190A483DC();
            v25 = *(_QWORD *)(v40 + 16);
            v24 = *(_QWORD *)(v40 + 24);
            v26 = v25 + 1;
            if (v25 >= v24 >> 1)
              sub_1908B8C6C(v24 > 1, v25 + 1, 1);
            v23 += 16;
            *(_QWORD *)(v40 + 16) = v26;
            v27 = v40 + 16 * v25;
            *(_QWORD *)(v27 + 32) = 0;
            *(_QWORD *)(v27 + 40) = 0xE000000000000000;
            --v19;
          }
          while (v19);
          if (v26 > 1)
            goto LABEL_30;
          goto LABEL_32;
        }
      }
    }
    else
    {
      v26 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v26 <= 1)
      {
LABEL_32:
        if (!v26)
        {
          result = swift_bridgeObjectRelease();
          __break(1u);
          return result;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_30:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
        sub_1908AF598((unint64_t *)&qword_1EE1EAE30, (uint64_t *)&unk_1ECF6CD08, MEMORY[0x1E0DEAF20]);
        sub_190A47A58();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
      }
      v28 = (_QWORD *)(a9 + 16);
      sub_190A48298();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      sub_190A47B00();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      v29 = a2;
      swift_beginAccess();
      v30 = *(_QWORD **)(a9 + 16);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(a9 + 16) = v30;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v30 = sub_1908F2A64(0, v30[2] + 1, 1, v30);
        *v28 = v30;
      }
      v33 = v30[2];
      v32 = v30[3];
      if (v33 >= v32 >> 1)
      {
        v30 = sub_1908F2A64((_QWORD *)(v32 > 1), v33 + 1, 1, v30);
        *v28 = v30;
      }
      v30[2] = v33 + 1;
      v34 = &v30[2 * v33];
      v34[4] = a1;
      v34[5] = v29;
      return swift_endAccess();
    }
  }
  return result;
}

uint64_t sub_1908E9CF0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD **v24;
  unint64_t v25;
  _QWORD *v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v37;

  LOBYTE(v10) = a5;
  if (a6 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    v13 = sub_190A48484();
    if (v13)
    {
LABEL_3:
      v31 = v10;
      v32 = a4;
      v33 = a8;
      v35 = a2;
      sub_190A481CC();
      a2 = a6 & 0xC000000000000001;
      v14 = 4;
      do
      {
        a8 = v14 - 4;
        if (a2)
        {
          a4 = MEMORY[0x194013510](v14 - 4, a6);
          v10 = v14 - 3;
          if (__OFADD__(a8, 1))
            goto LABEL_14;
        }
        else
        {
          a4 = *(_QWORD *)(a6 + 8 * v14);
          swift_retain();
          v10 = v14 - 3;
          if (__OFADD__(a8, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        v15 = sub_190A47AAC();
        swift_release();
        if ((v15 & 1) != 0)
          return swift_bridgeObjectRelease();
        ++v14;
      }
      while (v10 != v13);
      result = swift_bridgeObjectRelease();
      a8 = v33;
      a2 = v35;
      a4 = v32;
      LOBYTE(v10) = v31;
      if (v32)
        goto LABEL_17;
      return result;
    }
  }
  else
  {
    v13 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_3;
  }
  result = swift_bridgeObjectRelease();
  if (a4)
  {
LABEL_17:
    v17 = *(_QWORD *)(a4 + 16);
    if (v17)
    {
      v18 = 0;
      v19 = a4 + 32;
      while (*(unsigned __int8 *)(v19 + v18) != v10)
      {
        if (v17 == ++v18)
        {
          v34 = a8;
          v37 = MEMORY[0x1E0DEE9D8];
          sub_1908B8C6C(0, v17, 0);
          do
          {
            ++v19;
            sub_190A483DC();
            v21 = *(_QWORD *)(v37 + 16);
            v20 = *(_QWORD *)(v37 + 24);
            v22 = v21 + 1;
            if (v21 >= v20 >> 1)
              sub_1908B8C6C(v20 > 1, v21 + 1, 1);
            *(_QWORD *)(v37 + 16) = v22;
            v23 = v37 + 16 * v21;
            *(_QWORD *)(v23 + 32) = 0;
            *(_QWORD *)(v23 + 40) = 0xE000000000000000;
            --v17;
          }
          while (v17);
          a8 = v34;
          if (v22 > 1)
            goto LABEL_27;
          goto LABEL_29;
        }
      }
    }
    else
    {
      v22 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v22 <= 1)
      {
LABEL_29:
        if (!v22)
        {
          result = swift_bridgeObjectRelease();
          __break(1u);
          return result;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_27:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
        sub_1908AF598((unint64_t *)&qword_1EE1EAE30, (uint64_t *)&unk_1ECF6CD08, MEMORY[0x1E0DEAF20]);
        sub_190A47A58();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
      }
      v24 = (_QWORD **)(a8 + 16);
      sub_190A48298();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      sub_190A47B00();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      v25 = a2;
      swift_beginAccess();
      v26 = *v24;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v24 = v26;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v26 = sub_1908F2A64(0, v26[2] + 1, 1, v26);
        *v24 = v26;
      }
      v29 = v26[2];
      v28 = v26[3];
      if (v29 >= v28 >> 1)
      {
        v26 = sub_1908F2A64((_QWORD *)(v28 > 1), v29 + 1, 1, v26);
        *v24 = v26;
      }
      v26[2] = v29 + 1;
      v30 = &v26[2 * v29];
      v30[4] = a1;
      v30[5] = v25;
      return swift_endAccess();
    }
  }
  return result;
}

uint64_t sub_1908EA228(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD **v24;
  unint64_t v25;
  _QWORD *v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v36;

  LOBYTE(v10) = a5;
  if (a6 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    v13 = sub_190A48484();
    if (v13)
    {
LABEL_3:
      v31 = v10;
      v32 = a4;
      v33 = a8;
      v34 = a2;
      sub_190A481CC();
      a2 = a6 & 0xC000000000000001;
      v14 = 4;
      do
      {
        a8 = v14 - 4;
        if (a2)
        {
          a4 = MEMORY[0x194013510](v14 - 4, a6);
          v10 = v14 - 3;
          if (__OFADD__(a8, 1))
            goto LABEL_14;
        }
        else
        {
          a4 = *(_QWORD *)(a6 + 8 * v14);
          swift_retain();
          v10 = v14 - 3;
          if (__OFADD__(a8, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        v15 = sub_190A47AAC();
        swift_release();
        if ((v15 & 1) != 0)
          return swift_bridgeObjectRelease();
        ++v14;
      }
      while (v10 != v13);
      result = swift_bridgeObjectRelease();
      a8 = v33;
      a2 = v34;
      a4 = v32;
      LOBYTE(v10) = v31;
      if (v32)
        goto LABEL_17;
      return result;
    }
  }
  else
  {
    v13 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_3;
  }
  result = swift_bridgeObjectRelease();
  if (a4)
  {
LABEL_17:
    v17 = *(_QWORD *)(a4 + 16);
    if (v17)
    {
      v18 = 0;
      v19 = a4 + 32;
      while (((((v10 & 1) == 0) ^ *(unsigned __int8 *)(v19 + v18)) & 1) == 0)
      {
        if (v17 == ++v18)
        {
          v36 = MEMORY[0x1E0DEE9D8];
          sub_1908B8C6C(0, v17, 0);
          do
          {
            sub_190A483DC();
            v21 = *(_QWORD *)(v36 + 16);
            v20 = *(_QWORD *)(v36 + 24);
            v22 = v21 + 1;
            if (v21 >= v20 >> 1)
              sub_1908B8C6C(v20 > 1, v21 + 1, 1);
            *(_QWORD *)(v36 + 16) = v22;
            v23 = v36 + 16 * v21;
            *(_QWORD *)(v23 + 32) = 0;
            *(_QWORD *)(v23 + 40) = 0xE000000000000000;
            ++v19;
            --v17;
          }
          while (v17);
          if (v22 > 1)
            goto LABEL_27;
          goto LABEL_29;
        }
      }
    }
    else
    {
      v22 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v22 <= 1)
      {
LABEL_29:
        if (!v22)
        {
          result = swift_bridgeObjectRelease();
          __break(1u);
          return result;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_27:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
        sub_1908AF598((unint64_t *)&qword_1EE1EAE30, (uint64_t *)&unk_1ECF6CD08, MEMORY[0x1E0DEAF20]);
        sub_190A47A58();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
        swift_bridgeObjectRelease();
        sub_190A47B3C();
      }
      v24 = (_QWORD **)(a8 + 16);
      sub_190A48298();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      sub_190A47B00();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      v25 = a2;
      swift_beginAccess();
      v26 = *v24;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v24 = v26;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v26 = sub_1908F2A64(0, v26[2] + 1, 1, v26);
        *v24 = v26;
      }
      v29 = v26[2];
      v28 = v26[3];
      if (v29 >= v28 >> 1)
      {
        v26 = sub_1908F2A64((_QWORD *)(v28 > 1), v29 + 1, 1, v26);
        *v24 = v26;
      }
      v26[2] = v29 + 1;
      v30 = &v26[2 * v29];
      v30[4] = a1;
      v30[5] = v25;
      return swift_endAccess();
    }
  }
  return result;
}

uint64_t sub_1908EA760(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, unint64_t a6, uint64_t a7, unint64_t a8, unint64_t *a9)
{
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD **v29;
  id v30;
  _QWORD *v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  void *v39;
  unint64_t v40;
  uint64_t v41;

  if (a6 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    v13 = sub_190A48484();
    if (v13)
    {
LABEL_3:
      v39 = a5;
      v40 = a4;
      v36 = a8;
      a5 = (void *)sub_190A481CC();
      a4 = 4;
      do
      {
        v14 = a4 - 4;
        if ((a6 & 0xC000000000000001) != 0)
        {
          MEMORY[0x194013510](a4 - 4, a6);
          v15 = __OFADD__(v14, 1);
          a8 = a4 - 3;
          if (v15)
            goto LABEL_14;
        }
        else
        {
          swift_retain();
          v15 = __OFADD__(v14, 1);
          a8 = a4 - 3;
          if (v15)
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        v16 = sub_190A47AAC();
        swift_release();
        if ((v16 & 1) != 0)
          return swift_bridgeObjectRelease();
        ++a4;
      }
      while (a8 != v13);
      result = swift_bridgeObjectRelease();
      a5 = v39;
      a4 = v40;
      a8 = v36;
      if (v40)
        goto LABEL_17;
      return result;
    }
  }
  else
  {
    v13 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_3;
  }
  result = swift_bridgeObjectRelease();
  if (!a4)
    return result;
LABEL_17:
  result = sub_1908E079C((uint64_t)a5, a4, (uint64_t)a9);
  if ((result & 1) == 0)
  {
    if (a4 >> 62)
    {
      swift_bridgeObjectRetain();
      v18 = sub_190A48484();
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    v19 = MEMORY[0x1E0DEE9D8];
    if (v18)
    {
      v41 = MEMORY[0x1E0DEE9D8];
      sub_1908B8C6C(0, v18 & ~(v18 >> 63), 0);
      if (v18 < 0)
      {
        __break(1u);
        goto LABEL_44;
      }
      v19 = v41;
      if ((a4 & 0xC000000000000001) != 0)
      {
        v20 = 0;
        do
        {
          MEMORY[0x194013510](v20, a4);
          sub_1908AB890(0, a9);
          sub_190A483DC();
          swift_unknownObjectRelease();
          v22 = *(_QWORD *)(v41 + 16);
          v21 = *(_QWORD *)(v41 + 24);
          if (v22 >= v21 >> 1)
            sub_1908B8C6C(v21 > 1, v22 + 1, 1);
          ++v20;
          *(_QWORD *)(v41 + 16) = v22 + 1;
          v23 = v41 + 16 * v22;
          *(_QWORD *)(v23 + 32) = 0;
          *(_QWORD *)(v23 + 40) = 0xE000000000000000;
        }
        while (v18 != v20);
      }
      else
      {
        v24 = a4 + 32;
        sub_1908AB890(0, a9);
        do
        {
          sub_190A483DC();
          v26 = *(_QWORD *)(v41 + 16);
          v25 = *(_QWORD *)(v41 + 24);
          if (v26 >= v25 >> 1)
            sub_1908B8C6C(v25 > 1, v26 + 1, 1);
          *(_QWORD *)(v41 + 16) = v26 + 1;
          v27 = v41 + 16 * v26;
          *(_QWORD *)(v27 + 32) = 0;
          *(_QWORD *)(v27 + 40) = 0xE000000000000000;
          v24 += 8;
          --v18;
        }
        while (v18);
      }
    }
    v28 = *(_QWORD *)(v19 + 16);
    if (v28 > 1)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
      sub_1908AF598((unint64_t *)&qword_1EE1EAE30, (uint64_t *)&unk_1ECF6CD08, MEMORY[0x1E0DEAF20]);
      sub_190A47A58();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
LABEL_36:
      v29 = (_QWORD **)(a8 + 16);
      sub_190A48298();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      sub_1908AB890(0, a9);
      v30 = a5;
      sub_190A47B00();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      swift_beginAccess();
      v31 = *v29;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v29 = v31;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v31 = sub_1908F2A64(0, v31[2] + 1, 1, v31);
        *v29 = v31;
      }
      v34 = v31[2];
      v33 = v31[3];
      if (v34 >= v33 >> 1)
      {
        v31 = sub_1908F2A64((_QWORD *)(v33 > 1), v34 + 1, 1, v31);
        *v29 = v31;
      }
      v31[2] = v34 + 1;
      v35 = &v31[2 * v34];
      v35[4] = a1;
      v35[5] = a2;
      return swift_endAccess();
    }
    if (v28)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
LABEL_44:
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_1908EAD94()
{
  return sub_190A469CC();
}

uint64_t sub_1908EADB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1908EADC8(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CD8AA8], (uint64_t (*)(char *))MEMORY[0x1E0CDA580]);
}

uint64_t sub_1908EADC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  a5(0);
  MEMORY[0x1E0C80A78]();
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_1908EAE44(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(*(_QWORD *)a1 + 24) + 16) + 104))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 16)) & 1;
}

BOOL sub_1908EAE84(uint64_t a1, uint64_t a2)
{
  return ((*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 16) + 104))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 24) + 16)) & 1) == 0;
}

BOOL sub_1908EAEC8(uint64_t a1, uint64_t a2)
{
  return ((*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(*(_QWORD *)a1 + 24) + 16) + 104))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 16)) & 1) == 0;
}

uint64_t sub_1908EAF0C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 16) + 104))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 24) + 16)) & 1;
}

uint64_t sub_1908EAF4C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_190A487C0();
  (*(void (**)(uint64_t))(**(_QWORD **)(v1 + 16) + 80))(v2);
  swift_bridgeObjectRetain();
  sub_190A47B18();
  swift_release();
  swift_bridgeObjectRelease_n();
  return sub_190A48808();
}

uint64_t sub_1908EAFD4()
{
  uint64_t v0;

  (*(void (**)(void))(**(_QWORD **)(*(_QWORD *)v0 + 16) + 80))();
  swift_bridgeObjectRetain();
  sub_190A47B18();
  swift_release();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1908EB044()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_190A487C0();
  (*(void (**)(uint64_t))(**(_QWORD **)(v1 + 16) + 80))(v2);
  swift_bridgeObjectRetain();
  sub_190A47B18();
  swift_release();
  swift_bridgeObjectRelease_n();
  return sub_190A48808();
}

uint64_t sub_1908EB0C8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(*(_QWORD *)a1 + 24) + 16) + 96))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 16)) & 1;
}

_QWORD *sub_1908EB19C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  void *v17;
  id v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *result;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38[3];
  uint64_t v39;
  uint64_t v40;

  v1 = sub_190A45F7C();
  v27 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (uint64_t *)(v0 + OBJC_IVAR___CHKWidgetEnvironment_tuples);
  swift_beginAccess();
  v32 = sub_1908F22BC(0, *(_QWORD *)(*v4 + 16), 0, MEMORY[0x1E0DEE9D8]);
  v28 = v4;
  v5 = swift_bridgeObjectRetain();
  v6 = sub_1908DE2E8(v5);
  swift_bridgeObjectRelease();
  v38[0] = v6;
  swift_bridgeObjectRetain();
  sub_1908F38CC(v38);
  swift_bridgeObjectRelease();
  v7 = v38[0];
  v35 = *(_QWORD *)(v38[0] + 16);
  if (!v35)
  {
LABEL_21:
    swift_release();
    return v32;
  }
  v8 = 0;
  v34 = v38[0] + 32;
  v9 = v28;
  v33 = v38[0];
  while (1)
  {
    if (v8 >= *(_QWORD *)(v7 + 16))
    {
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    v10 = (uint64_t *)(v34 + 24 * v8);
    v12 = *v10;
    v11 = v10[1];
    v13 = v10[2];
    swift_beginAccess();
    v14 = *v9;
    if (*(_QWORD *)(*v9 + 16))
      break;
    swift_bridgeObjectRetain_n();
    swift_retain();
LABEL_4:
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease_n();
LABEL_5:
    v7 = v33;
    if (++v8 == v35)
      goto LABEL_21;
  }
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v15 = sub_1908D45AC(v11, v13);
  if ((v16 & 1) == 0)
  {
    swift_release();
    goto LABEL_4;
  }
  v17 = *(void **)(*(_QWORD *)(v14 + 56) + 8 * v15);
  swift_endAccess();
  v18 = v17;
  v30 = v13;
  swift_bridgeObjectRelease();
  v31 = v12;
  swift_release();
  v19 = (unint64_t)objc_msgSend(v18, sel_count);
  v40 = MEMORY[0x1E0DEE9D8];
  sub_190A4837C();
  v20 = v18;
  sub_190A47F2C();

  if ((v19 & 0x8000000000000000) != 0)
    goto LABEL_23;
  v29 = v20;
  if (!v19)
  {
LABEL_14:
    sub_1908AED38(&qword_1ECF6C938, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
    while (1)
    {
      sub_190A4816C();
      if (!v37)
        break;
      sub_190901E94(&v36, v38);
      sub_1908B3694((uint64_t)v38, (uint64_t)&v36);
      swift_dynamicCast();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      sub_190A48358();
      sub_190A48388();
      sub_190A48394();
      sub_190A48364();
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v3, v1);
    sub_1908AA544((uint64_t)&v36, (uint64_t *)&unk_1ECF6C8A0);
    v21 = v40;
    v22 = v32;
    v24 = v32[2];
    v23 = v32[3];
    if (v24 >= v23 >> 1)
      v22 = sub_1908F22BC((_QWORD *)(v23 > 1), v24 + 1, 1, v32);
    v22[2] = v24 + 1;
    v32 = v22;
    v22[v24 + 4] = v21;

    swift_bridgeObjectRelease();
    swift_release();
    v9 = v28;
    goto LABEL_5;
  }
  sub_1908AED38(&qword_1ECF6C938, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
  while (1)
  {
    sub_190A4816C();
    if (!v39)
      break;
    sub_1908B3694((uint64_t)v38, (uint64_t)&v36);
    swift_dynamicCast();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    sub_190A48358();
    sub_190A48388();
    sub_190A48394();
    sub_190A48364();
    if (!--v19)
      goto LABEL_14;
  }
LABEL_24:
  __break(1u);
  result = (_QWORD *)swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1908EB628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  _BYTE v22[32];
  _OWORD v23[2];
  __int128 v24;
  uint64_t v25;
  unint64_t v26;

  v6 = sub_190A45F7C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = (uint64_t *)(v3 + OBJC_IVAR___CHKWidgetEnvironment_tuples);
  swift_beginAccess();
  v11 = *v10;
  if (!*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
LABEL_10:
    swift_endAccess();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  v12 = sub_1908D45AC(a2, a3);
  if ((v13 & 1) == 0)
  {
    swift_release();
    goto LABEL_10;
  }
  v14 = *(void **)(*(_QWORD *)(v11 + 56) + 8 * v12);
  swift_endAccess();
  v15 = v14;
  swift_bridgeObjectRelease();
  swift_release();
  v26 = MEMORY[0x1E0DEE9D8];
  v16 = v15;
  sub_190A47F2C();

  sub_1908AED38(&qword_1ECF6C938, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
  sub_190A4816C();
  while (v25)
  {
    sub_190901E94(&v24, v23);
    sub_1908B3694((uint64_t)v23, (uint64_t)v22);
    swift_dynamicCast();
    v17 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    MEMORY[0x194012E68](v17);
    if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_190A47C98();
    sub_190A47CD4();
    sub_190A47C74();
    sub_190A4816C();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v19 = v26;
  if ((v26 & 0x8000000000000000) != 0 || (v26 & 0x4000000000000000) != 0)
  {
    v18 = sub_1908B88B8(v26);

    swift_bridgeObjectRelease();
  }
  else
  {

    return v19 & 0xFFFFFFFFFFFFFF8;
  }
  return (uint64_t)v18;
}

void sub_1908EB8A8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  __int128 v24;
  ValueMetadata *v25;
  uint64_t v26;

  if (!a1)
    goto LABEL_21;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_190A48484();
    swift_bridgeObjectRelease();
    if (v21)
    {
      swift_bridgeObjectRetain();
      v8 = sub_190A48484();
      swift_bridgeObjectRelease();
      if (!v8)
      {
        swift_bridgeObjectRelease();
LABEL_16:
        v18 = objc_allocWithZone(MEMORY[0x1E0C99E40]);
        v19 = (void *)sub_190A47C50();
        swift_bridgeObjectRelease();
        v20 = objc_msgSend(v18, sel_initWithArray_, v19);

        swift_beginAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1908E0D28((uint64_t)v20, a2, a3, a4);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      goto LABEL_4;
    }
    goto LABEL_20;
  }
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v8)
  {
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    swift_beginAccess();
    v22 = (void *)sub_1909000EC(a3, a4);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_release();

    return;
  }
LABEL_4:
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1908B8D54(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v23 = a3;
    v9 = v26;
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v8; ++i)
      {
        v11 = MEMORY[0x194013510](i, a1);
        v25 = &type metadata for WidgetEnvironment.Storage.TupleValue;
        v26 = v9;
        *(_QWORD *)&v24 = v11;
        v13 = *(_QWORD *)(v9 + 16);
        v12 = *(_QWORD *)(v9 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_1908B8D54(v12 > 1, v13 + 1, 1);
          v9 = v26;
        }
        *(_QWORD *)(v9 + 16) = v13 + 1;
        sub_190901E94(&v24, (_OWORD *)(v9 + 32 * v13 + 32));
      }
    }
    else
    {
      v14 = (uint64_t *)(a1 + 32);
      do
      {
        v15 = *v14;
        v25 = &type metadata for WidgetEnvironment.Storage.TupleValue;
        v26 = v9;
        *(_QWORD *)&v24 = v15;
        v16 = *(_QWORD *)(v9 + 16);
        v17 = *(_QWORD *)(v9 + 24);
        swift_retain();
        if (v16 >= v17 >> 1)
        {
          sub_1908B8D54(v17 > 1, v16 + 1, 1);
          v9 = v26;
        }
        *(_QWORD *)(v9 + 16) = v16 + 1;
        sub_190901E94(&v24, (_OWORD *)(v9 + 32 * v16 + 32));
        ++v14;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease();
    a3 = v23;
    goto LABEL_16;
  }
  __break(1u);
}

uint64_t sub_1908EBB9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  void *v4;
  uint64_t v7;

  (*(void (**)(_QWORD *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a2 + 16) + 120))(a4, *(_QWORD *)(*(_QWORD *)a1 + 24), a3);
  if (v4)
  {

    v7 = 1;
  }
  else
  {
    v7 = 0;
  }
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, v7, 1, a3);
}

uint64_t sub_1908EBC20()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 16) + 120))();
}

void sub_1908EBC48(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t *a4@<X8>)
{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *boxed_opaque_existential_1;
  void (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20[4];
  uint64_t v21;

  v19 = a3;
  v8 = *(_QWORD *)(*MEMORY[0x1E0DEC880] + *a3 + 8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v18 - v10;
  v20[3] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 16);
  v13(boxed_opaque_existential_1, a1, v8);
  v21 = a2;
  v14 = (*(uint64_t (**)(uint64_t *))(**(_QWORD **)(a2 + 16) + 128))(v20);
  if (v4)
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    *a4 = 0;
  }
  else
  {
    v15 = v14;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
    v13((uint64_t *)v11, a1, v8);
    v16 = sub_190A483C4();
    v17 = swift_allocObject();
    sub_1908F2014((uint64_t)v19, (uint64_t)v11, v15, v21, v16);
    *a4 = v17;
    swift_retain();
    swift_retain();
  }
}

uint64_t sub_1908EBDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  sub_1908F2014(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t WidgetEnvironment.Storage.debugDescription.getter()
{
  uint64_t v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  __int128 v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t result;
  _QWORD v49[2];
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;

  ObjectType = swift_getObjectType();
  v2 = sub_190A45F7C();
  v52 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t *)(v0 + OBJC_IVAR___CHKWidgetEnvironment_tuples);
  swift_beginAccess();
  v56 = sub_1908F2A64(0, *(_QWORD *)(*v5 + 16), 0, MEMORY[0x1E0DEE9D8]);
  v6 = *v5;
  swift_bridgeObjectRetain_n();
  v7 = sub_1908B88AC(v6);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v64 = v7;
  sub_1908F38CC((uint64_t *)&v64);
  swift_bridgeObjectRelease();
  v8 = v64;
  v53 = *(_QWORD *)(v64 + 16);
  if (!v53)
  {
LABEL_30:
    swift_release();
    *(_QWORD *)&v64 = v56;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
    sub_1908AF598((unint64_t *)&qword_1EE1EAE30, (uint64_t *)&unk_1ECF6CD08, MEMORY[0x1E0DEAF20]);
    sub_190A47A58();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v64 = sub_190A48880();
    *((_QWORD *)&v64 + 1) = v47;
    sub_190A47B3C();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    return v64;
  }
  v49[1] = ObjectType;
  v9 = 0;
  v58 = v64 + 32;
  v60 = MEMORY[0x1E0DEE9B8] + 8;
  v10 = v53;
  v51 = v5;
  v50 = v64;
  while (1)
  {
    if (v9 >= *(_QWORD *)(v8 + 16))
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v11 = (uint64_t *)(v58 + 24 * v9);
    v13 = *v11;
    v12 = v11[1];
    v14 = v11[2];
    swift_beginAccess();
    v15 = *v5;
    if (*(_QWORD *)(*v5 + 16))
      break;
    swift_bridgeObjectRetain_n();
    swift_retain();
LABEL_4:
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease_n();
LABEL_5:
    if (++v9 == v10)
      goto LABEL_30;
  }
  v59 = v9;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v16 = v12;
  v17 = sub_1908D45AC(v12, v14);
  if ((v18 & 1) == 0)
  {
    swift_release();
    v9 = v59;
    goto LABEL_4;
  }
  v19 = *(void **)(*(_QWORD *)(v15 + 56) + 8 * v17);
  swift_endAccess();
  v20 = v19;
  v57 = v14;
  swift_bridgeObjectRelease();
  v55 = v13;
  swift_release();
  v21 = (uint64_t)objc_msgSend(v20, sel_count);
  v66 = MEMORY[0x1E0DEE9D8];
  sub_1908B8C6C(0, v21 & ~(v21 >> 63), 0);
  v22 = v20;
  sub_190A47F2C();

  if (v21 < 0)
    goto LABEL_32;
  v54 = v22;
  if (!v21)
  {
LABEL_20:
    sub_1908AED38(&qword_1ECF6C938, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
    while (1)
    {
      sub_190A4816C();
      if (!v63)
        break;
      sub_190901E94(&v62, &v64);
      sub_1908B3694((uint64_t)&v64, (uint64_t)&v62);
      swift_dynamicCast();
      v33 = *(_QWORD *)(v61 + 24);
      swift_retain();
      swift_release();
      v34 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v33 + 16) + 80);
      v35 = swift_retain();
      v36 = v34(v35);
      v38 = v37;
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      v39 = v66;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1908B8C6C(0, *(_QWORD *)(v39 + 16) + 1, 1);
        v39 = v66;
      }
      v41 = *(_QWORD *)(v39 + 16);
      v40 = *(_QWORD *)(v39 + 24);
      if (v41 >= v40 >> 1)
      {
        sub_1908B8C6C(v40 > 1, v41 + 1, 1);
        v39 = v66;
      }
      *(_QWORD *)(v39 + 16) = v41 + 1;
      v42 = v39 + 16 * v41;
      *(_QWORD *)(v42 + 32) = v36;
      *(_QWORD *)(v42 + 40) = v38;
    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v4, v2);
    sub_1908AA544((uint64_t)&v62, (uint64_t *)&unk_1ECF6C8A0);
    *(_QWORD *)&v64 = v66;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
    sub_1908AF598((unint64_t *)&qword_1EE1EAE30, (uint64_t *)&unk_1ECF6CD08, MEMORY[0x1E0DEAF20]);
    sub_190A47A58();
    swift_release();
    *(_QWORD *)&v64 = v16;
    *((_QWORD *)&v64 + 1) = v57;
    swift_bridgeObjectRetain();
    sub_190A47B3C();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    v43 = v64;
    v44 = v56;
    v46 = v56[2];
    v45 = v56[3];
    if (v46 >= v45 >> 1)
      v44 = sub_1908F2A64((_QWORD *)(v45 > 1), v46 + 1, 1, v56);
    v5 = v51;
    v9 = v59;
    v44[2] = v46 + 1;
    v56 = v44;
    *(_OWORD *)&v44[2 * v46 + 4] = v43;
    swift_bridgeObjectRelease();
    swift_release();

    v8 = v50;
    v10 = v53;
    goto LABEL_5;
  }
  sub_1908AED38(&qword_1ECF6C938, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
  while (1)
  {
    sub_190A4816C();
    if (!v65)
      break;
    sub_1908B3694((uint64_t)&v64, (uint64_t)&v62);
    swift_dynamicCast();
    v23 = *(_QWORD *)(v61 + 24);
    swift_retain();
    swift_release();
    v24 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v23 + 16) + 80);
    v25 = swift_retain();
    v26 = v24(v25);
    v28 = v27;
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
    v29 = v66;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1908B8C6C(0, *(_QWORD *)(v29 + 16) + 1, 1);
      v29 = v66;
    }
    v31 = *(_QWORD *)(v29 + 16);
    v30 = *(_QWORD *)(v29 + 24);
    if (v31 >= v30 >> 1)
    {
      sub_1908B8C6C(v30 > 1, v31 + 1, 1);
      v29 = v66;
    }
    *(_QWORD *)(v29 + 16) = v31 + 1;
    v32 = v29 + 16 * v31;
    *(_QWORD *)(v32 + 32) = v26;
    *(_QWORD *)(v32 + 40) = v28;
    if (!--v21)
      goto LABEL_20;
  }
LABEL_33:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t WidgetEnvironment.Storage.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return WidgetEnvironment.Storage.init(from:)(a1);
}

uint64_t WidgetEnvironment.Storage.init(from:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *ObjectType;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t *v9;
  char *v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  objc_class **v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t i;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t j;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  void *v37;
  id v38;
  uint64_t *v39;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  char v50;
  char v51;
  char v52;
  uint64_t v53;
  unint64_t v54;
  void *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t *v58;
  unint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t result;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  _QWORD *v73;
  objc_class *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  char *v85;
  unint64_t *v86;
  __int128 v87;
  ValueMetadata *v88;
  objc_super v89;
  _QWORD *v90;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD68);
  v78 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (unint64_t *)&v1[OBJC_IVAR___CHKWidgetEnvironment_tuples];
  v10 = v1;
  v11 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
  v86 = v9;
  *v9 = v11;
  if (qword_1ECF6C8B0 != -1)
LABEL_58:
    swift_once();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190901EA4();
  sub_190A48838();
  v12 = (void *)v3;
  if (v3)
    goto LABEL_55;
  v13 = sub_190A485A4();
  v14 = v8;
  v8 = *(char **)(v13 + 16);
  v85 = v14;
  if (!v8)
  {
    swift_bridgeObjectRelease();
LABEL_52:
    v63 = v78;
    v64 = v86;
    swift_beginAccess();
    if (*(_QWORD *)(*v64 + 16) || !v8)
    {

      (*(void (**)(char *, unint64_t))(v63 + 8))(v85, v6);
      v89.receiver = v10;
      v89.super_class = ObjectType;
      v68 = (unint64_t)objc_msgSendSuper2(&v89, sel_init);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      return v68;
    }
    v65 = sub_190A4831C();
    swift_allocError();
    v67 = v66;
    sub_190A48304();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v65 - 8) + 104))(v67, *MEMORY[0x1E0DEC458], v65);
    swift_willThrow();
    (*(void (**)(char *, unint64_t))(v63 + 8))(v85, v6);
LABEL_55:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v68 = *v86;

    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return v68;
  }
  v71 = v6;
  v72 = v10;
  v73 = a1;
  v74 = ObjectType;
  v6 = 0;
  a1 = (_QWORD *)(v13 + 32);
  v76 = MEMORY[0x1E0DEE9B8] + 8;
  v77 = v8;
  v10 = (char *)v13;
  v75 = (char *)v13;
  v83 = (_QWORD *)(v13 + 32);
  while (1)
  {
    v15 = (objc_class **)&a1[3 * v6];
    ObjectType = *v15;
    v3 = (uint64_t)v15[1];
    v16 = (uint64_t)v15[2];
    v17 = qword_1ECF6C900;
    swift_retain();
    swift_bridgeObjectRetain();
    if (v17 != -1)
      swift_once();
    ++v6;
    swift_beginAccess();
    v18 = off_1ECF6CA10;
    if (!*((_QWORD *)off_1ECF6CA10 + 2))
      goto LABEL_12;
    swift_bridgeObjectRetain();
    v19 = sub_1908D2C98(v3, v16);
    if ((v20 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_12:
      swift_endAccess();
      goto LABEL_13;
    }
    v3 = *(_QWORD *)(v18[7] + 8 * v19);
    swift_endAccess();
    swift_retain();
    swift_bridgeObjectRelease();
    v21 = *(_QWORD *)(v3 + 16);
    v22 = (*(uint64_t (**)(char *))(*(_QWORD *)v21 + 112))(v85);
    if (v12)
    {

      swift_release();
      v12 = 0;
      a1 = v83;
      goto LABEL_13;
    }
    v23 = v22;
    v81 = (*(uint64_t (**)(void))(*(_QWORD *)v21 + 80))();
    v82 = v24;
    v84 = v25;
    v80 = v3;
    if (v23 >> 62)
      break;
    v26 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v26)
      goto LABEL_18;
LABEL_31:
    swift_bridgeObjectRelease();
LABEL_32:
    v36 = objc_allocWithZone(MEMORY[0x1E0C99E40]);
    v37 = (void *)sub_190A47C50();
    swift_bridgeObjectRelease();
    v38 = objc_msgSend(v36, sel_initWithArray_, v37);

    v39 = (uint64_t *)v86;
    swift_beginAccess();
    if (v38)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v90 = (_QWORD *)*v39;
      v41 = v90;
      *v39 = 0x8000000000000000;
      v43 = sub_1908D45AC(v82, v84);
      v44 = v41[2];
      v45 = (v42 & 1) == 0;
      v46 = v44 + v45;
      if (__OFADD__(v44, v45))
        goto LABEL_60;
      v47 = v42;
      if (v41[3] >= v46)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1908FD4AC();
      }
      else
      {
        sub_1908F9C8C(v46, isUniquelyReferenced_nonNull_native);
        v48 = sub_1908D45AC(v82, v84);
        if ((v47 & 1) != (v49 & 1))
          goto LABEL_62;
        v43 = v48;
      }
      v56 = v90;
      if ((v47 & 1) != 0)
      {
        v57 = v90[7];

        *(_QWORD *)(v57 + 8 * v43) = v38;
      }
      else
      {
        v90[(v43 >> 6) + 8] |= 1 << v43;
        v58 = (uint64_t *)(v56[6] + 24 * v43);
        v59 = v82;
        *v58 = v81;
        v58[1] = v59;
        v58[2] = v84;
        *(_QWORD *)(v56[7] + 8 * v43) = v38;
        v60 = v56[2];
        v61 = __OFADD__(v60, 1);
        v62 = v60 + 1;
        if (v61)
          goto LABEL_61;
        v56[2] = v62;
        swift_retain();
        swift_bridgeObjectRetain();
      }
      v3 = *v86;
      *v86 = (unint64_t)v56;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      v8 = v77;
    }
    else
    {
      swift_bridgeObjectRetain();
      v3 = v84;
      v82 = sub_1908D45AC(v82, v84);
      v51 = v50;
      swift_bridgeObjectRelease();
      if ((v51 & 1) != 0)
      {
        v79 = v12;
        v52 = swift_isUniquelyReferenced_nonNull_native();
        v53 = *v39;
        v90 = (_QWORD *)*v39;
        *v39 = 0x8000000000000000;
        if ((v52 & 1) == 0)
        {
          sub_1908FD4AC();
          v53 = (uint64_t)v90;
        }
        v54 = v82;
        swift_bridgeObjectRelease();
        swift_release();
        v55 = *(void **)(*(_QWORD *)(v53 + 56) + 8 * v54);
        sub_1908FB790(v54, v53);
        v3 = *v39;
        *v39 = v53;

        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        v12 = v79;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    v10 = v75;
    a1 = v83;
    swift_endAccess();
    swift_release();
LABEL_13:
    swift_bridgeObjectRelease();
    swift_release();
    if ((char *)v6 == v8)
    {
      swift_bridgeObjectRelease();
      a1 = v73;
      ObjectType = v74;
      v10 = v72;
      v6 = v71;
      goto LABEL_52;
    }
    if (v6 >= *((_QWORD *)v10 + 2))
    {
      __break(1u);
      goto LABEL_58;
    }
  }
  swift_bridgeObjectRetain();
  v26 = sub_190A48484();
  swift_bridgeObjectRelease();
  if (!v26)
    goto LABEL_31;
LABEL_18:
  v90 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1908B8D54(0, v26 & ~(v26 >> 63), 0);
  if ((v26 & 0x8000000000000000) == 0)
  {
    v79 = 0;
    v27 = v90;
    if ((v23 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v26; ++i)
      {
        v29 = MEMORY[0x194013510](i, v23);
        v88 = &type metadata for WidgetEnvironment.Storage.TupleValue;
        *(_QWORD *)&v87 = v29;
        v90 = v27;
        v31 = v27[2];
        v30 = v27[3];
        if (v31 >= v30 >> 1)
        {
          sub_1908B8D54(v30 > 1, v31 + 1, 1);
          v27 = v90;
        }
        v27[2] = v31 + 1;
        sub_190901E94(&v87, &v27[4 * v31 + 4]);
      }
    }
    else
    {
      for (j = 0; j != v26; ++j)
      {
        v33 = *(_QWORD *)(v23 + 8 * j + 32);
        v88 = &type metadata for WidgetEnvironment.Storage.TupleValue;
        *(_QWORD *)&v87 = v33;
        v90 = v27;
        v35 = v27[2];
        v34 = v27[3];
        swift_retain();
        if (v35 >= v34 >> 1)
        {
          sub_1908B8D54(v34 > 1, v35 + 1, 1);
          v27 = v90;
        }
        v27[2] = v35 + 1;
        sub_190901E94(&v87, &v27[4 * v35 + 4]);
      }
    }
    swift_bridgeObjectRelease();
    v12 = v79;
    v8 = v77;
    goto LABEL_32;
  }
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  result = sub_190A48754();
  __break(1u);
  return result;
}

uint64_t WidgetEnvironment.Storage.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = v1;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C7C8);
  v4 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190901EA4();
  v26 = v6;
  sub_190A48850();
  result = (uint64_t)sub_1908EB19C();
  v8 = result;
  v29 = *(_QWORD *)(result + 16);
  if (!v29)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v26, v27);
  }
  v23 = v4;
  v24 = result;
  v9 = 0;
  v28 = result + 32;
  while (v9 < *(_QWORD *)(v8 + 16))
  {
    v10 = *(_QWORD *)(v28 + 8 * v9);
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v22 = sub_190A48484();
      result = swift_bridgeObjectRelease();
      if (!v22)
      {
LABEL_3:
        result = swift_bridgeObjectRelease();
        goto LABEL_4;
      }
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (!v11)
        goto LABEL_3;
    }
    v31 = v2;
    if ((v10 & 0xC000000000000001) != 0)
    {
      v13 = MEMORY[0x194013510](0, v10);
      v12 = v13;
    }
    else
    {
      if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_32;
      v12 = *(_QWORD *)(v10 + 32);
      v13 = swift_retain();
    }
    v30 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v12 + 16) + 80))(v13);
    v15 = v14;
    v17 = v16;
    swift_release();
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      v18 = sub_190A48484();
      swift_bridgeObjectRelease();
      if (v18)
      {
LABEL_13:
        v25 = v17;
        v32 = MEMORY[0x1E0DEE9D8];
        result = sub_190A4837C();
        if (v18 < 0)
          goto LABEL_33;
        v19 = 0;
        do
        {
          if ((v10 & 0xC000000000000001) != 0)
            MEMORY[0x194013510](v19, v10);
          else
            swift_retain();
          ++v19;
          swift_retain();
          swift_release();
          sub_190A48358();
          sub_190A48388();
          sub_190A48394();
          sub_190A48364();
        }
        while (v18 != v19);
        v20 = v32;
        swift_bridgeObjectRelease();
        v17 = v25;
        goto LABEL_22;
      }
    }
    else
    {
      v18 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v18)
        goto LABEL_13;
    }
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x1E0DEE9D8];
LABEL_22:
    v35 = v20;
    v32 = v30;
    v33 = v15;
    v34 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C7B0);
    sub_190901EE8();
    v21 = v31;
    sub_190A48640();
    v2 = v21;
    if (v21)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_release();
    v8 = v24;
LABEL_4:
    if (++v9 == v29)
    {
      swift_bridgeObjectRelease();
      v4 = v23;
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v26, v27);
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t static WidgetEnvironment.Storage.supportsSecureCoding.getter()
{
  return 1;
}

id WidgetEnvironment.Storage.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return WidgetEnvironment.Storage.init(coder:)(a1);
}

id WidgetEnvironment.Storage.init(coder:)(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  unint64_t *v4;
  char *v5;
  uint64_t v6;
  id v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t *v19;
  char *v20;
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = (unint64_t *)&v1[OBJC_IVAR___CHKWidgetEnvironment_tuples];
  v5 = v1;
  *v4 = sub_1908DFFF4(MEMORY[0x1E0DEE9D8]);
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    sub_1908AB890(0, &qword_1ECF6D310);
    v10 = sub_190A48088();
    if (v10)
    {
      v11 = (void *)v10;
      sub_190A45F10();
      swift_allocObject();
      sub_190A45F04();
      v12 = v11;
      v13 = sub_190A46000();
      v15 = v14;

      sub_1908AED38(qword_1ECF6CB80, v16, (uint64_t (*)(uint64_t))type metadata accessor for WidgetEnvironment.Storage, (uint64_t)&protocol conformance descriptor for WidgetEnvironment.Storage);
      sub_190A45EEC();
      swift_release();

      sub_1908B53FC(v13, v15);
      v19 = (unint64_t *)&v20[OBJC_IVAR___CHKWidgetEnvironment_tuples];
      swift_beginAccess();
      v9 = *v19;
      swift_bridgeObjectRetain();

      goto LABEL_4;
    }

LABEL_9:
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return 0;
  }
  sub_1908AED38(qword_1ECF6CB80, v6, (uint64_t (*)(uint64_t))type metadata accessor for WidgetEnvironment.Storage, (uint64_t)&protocol conformance descriptor for WidgetEnvironment.Storage);
  v7 = a1;
  sub_190A47FA4();

  if (!v20)
  {

    goto LABEL_9;
  }
  v8 = (unint64_t *)&v20[OBJC_IVAR___CHKWidgetEnvironment_tuples];
  swift_beginAccess();
  v9 = *v8;
  swift_bridgeObjectRetain();

LABEL_4:
  swift_beginAccess();
  *v4 = v9;

  swift_bridgeObjectRelease();
  v21.receiver = v5;
  v21.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v21, sel_init);

  return v17;
}

Swift::Void __swiftcall WidgetEnvironment.Storage.encode(with:)(NSCoder with)
{
  uint64_t v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;

  swift_getObjectType();
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    sub_1908AED38(&qword_1ECF6BE98, v2, (uint64_t (*)(uint64_t))type metadata accessor for WidgetEnvironment.Storage, (uint64_t)&protocol conformance descriptor for WidgetEnvironment.Storage);
    v3 = with.super.isa;
    sub_190A47F98();

  }
  else
  {
    sub_190A45F40();
    swift_allocObject();
    sub_190A45F34();
    sub_190A45F1C();
    sub_1908AED38(&qword_1ECF6BE98, v4, (uint64_t (*)(uint64_t))type metadata accessor for WidgetEnvironment.Storage, (uint64_t)&protocol conformance descriptor for WidgetEnvironment.Storage);
    v5 = sub_190A45F28();
    v7 = v6;
    v8 = (void *)sub_190A45FE8();
    v9 = (void *)sub_190A47AC4();
    -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v8, v9);

    sub_1908B53FC(v5, v7);
    swift_release();
  }
}

uint64_t WidgetEnvironment.Storage.hash.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  char *v16;
  BOOL v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  _QWORD *v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char *v39;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___CHKWidgetEnvironment_tuples);
  swift_beginAccess();
  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  v36 = *v1 + 64;
  v4 = 1;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & v3;
  v37 = (unint64_t)(v5 + 63) >> 6;
  v38 = v2;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  v11 = 0;
  do
  {
    if (v7)
    {
      v18 = __clz(__rbit64(v7));
      v19 = (v7 - 1) & v7;
      v20 = v18 | (v11 << 6);
      v17 = __OFADD__(v9++, 1);
      if (v17)
        goto LABEL_33;
    }
    else
    {
      v21 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_34;
      if (v21 >= v37)
      {
LABEL_31:
        swift_release();
        sub_190A48814();
        sub_190A487CC();
        sub_190A487CC();
        sub_190A487CC();
        return sub_190A487FC();
      }
      v22 = *(_QWORD *)(v36 + 8 * v21);
      ++v11;
      if (!v22)
      {
        v11 = v21 + 1;
        if (v21 + 1 >= v37)
          goto LABEL_31;
        v22 = *(_QWORD *)(v36 + 8 * v11);
        if (!v22)
        {
          v11 = v21 + 2;
          if (v21 + 2 >= v37)
            goto LABEL_31;
          v22 = *(_QWORD *)(v36 + 8 * v11);
          if (!v22)
          {
            v23 = v21 + 3;
            if (v23 >= v37)
              goto LABEL_31;
            v22 = *(_QWORD *)(v36 + 8 * v23);
            if (!v22)
            {
              while (1)
              {
                v11 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_35;
                if (v11 >= v37)
                  goto LABEL_31;
                v22 = *(_QWORD *)(v36 + 8 * v11);
                ++v23;
                if (v22)
                  goto LABEL_23;
              }
            }
            v11 = v23;
          }
        }
      }
LABEL_23:
      v19 = (v22 - 1) & v22;
      v20 = __clz(__rbit64(v22)) + (v11 << 6);
      v17 = __OFADD__(v9++, 1);
      if (v17)
        goto LABEL_33;
    }
    v39 = v10;
    v24 = v4;
    v25 = v19;
    v26 = v11;
    v27 = *(_QWORD *)(v38 + 48) + 24 * v20;
    v28 = *(_QWORD *)(v27 + 8);
    v29 = *(_QWORD *)(v27 + 16);
    v30 = *(void **)(*(_QWORD *)(v38 + 56) + 8 * v20);
    v31 = qword_1ECF6BF78;
    swift_retain();
    swift_bridgeObjectRetain();
    v32 = v30;
    if (v31 != -1)
      swift_once();
    v33 = off_1ECF6BF68;
    if (*((_QWORD *)off_1ECF6BF68 + 2))
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v34 = sub_1908D45AC(v28, v29);
      if ((v35 & 1) != 0)
        v12 = *(_QWORD *)(v33[7] + 8 * v34);
      else
        v12 = 1;
      v11 = v26;
      v7 = v25;
      v13 = v24;
      v14 = v39;
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      v12 = 1;
      v11 = v26;
      v7 = v25;
      v13 = v24;
      v14 = v39;
    }
    v4 = v12 * v13;
    v15 = v32;
    v16 = (char *)objc_msgSend(v15, sel_count);

    swift_bridgeObjectRelease();
    result = swift_release();
    v17 = __OFADD__(v14, v16);
    v10 = &v16[(_QWORD)v14];
  }
  while (!v17);
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t WidgetEnvironment.Storage.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  char v8;
  char *v10;
  _BYTE v11[24];
  uint64_t v12;

  swift_getObjectType();
  sub_1908AAA48(a1, (uint64_t)v11, (uint64_t *)&unk_1ECF6C8A0);
  if (!v12)
  {
    sub_1908AA544((uint64_t)v11, (uint64_t *)&unk_1ECF6C8A0);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v8 = 0;
    return v8 & 1;
  }
  v3 = (uint64_t *)(v1 + OBJC_IVAR___CHKWidgetEnvironment_tuples);
  swift_beginAccess();
  v4 = *v3;
  v5 = (uint64_t *)&v10[OBJC_IVAR___CHKWidgetEnvironment_tuples];
  swift_beginAccess();
  v6 = *v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1908EDBA4(v4, v6);
  v8 = v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1908EDBA4(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  unint64_t v19;
  char v20;
  char v21;
  id v22;
  char v23;
  int64_t v24;

  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v24 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_24;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v11 >= v24)
      return;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v24)
        return;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v24)
          return;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
        {
          v4 = v11 + 3;
          if (v11 + 3 >= v24)
            return;
          v12 = *(_QWORD *)(v5 + 8 * v4);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_24:
    v14 = *(_QWORD *)(a1 + 48) + 24 * v10;
    v15 = *(_QWORD *)(v14 + 8);
    v16 = *(_QWORD *)(v14 + 16);
    v17 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    swift_retain();
    swift_bridgeObjectRetain();
    v18 = v17;
    v19 = sub_1908D45AC(v15, v16);
    v21 = v20;
    swift_bridgeObjectRelease();
    swift_release();
    if ((v21 & 1) == 0)
    {

      return;
    }
    sub_1908AB890(0, &qword_1ECF6ADF0);
    v22 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v19);
    v23 = sub_190A480F4();

    if ((v23 & 1) == 0)
      return;
  }
  v13 = v11 + 4;
  if (v13 >= v24)
    return;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v24)
      return;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_31:
  __break(1u);
}

id WidgetEnvironment.Storage.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1908EDE94@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  objc_class *v2;
  uint64_t v3;
  id v6;
  uint64_t result;

  v6 = objc_allocWithZone(v2);
  result = WidgetEnvironment.Storage.init(from:)(a1);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_1908EDEE0(_QWORD *a1)
{
  return WidgetEnvironment.Storage.encode(to:)(a1);
}

id WidgetEnvironment.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  _DWORD *v3;
  id result;

  type metadata accessor for UnfairLock();
  v2 = swift_allocObject();
  v3 = (_DWORD *)swift_slowAlloc();
  *v3 = 0;
  *(_QWORD *)(v2 + 16) = v3;
  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WidgetEnvironment.Storage()), sel_init);
  *a1 = v2;
  a1[1] = (uint64_t)result;
  return result;
}

uint64_t WidgetEnvironment.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  _DWORD *v5;
  id v6;
  uint64_t v7;

  type metadata accessor for UnfairLock();
  v4 = swift_allocObject();
  v5 = (_DWORD *)swift_slowAlloc();
  *v5 = 0;
  *(_QWORD *)(v4 + 16) = v5;
  v6 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WidgetEnvironment.Storage()), sel_init);
  *a2 = v4;
  a2[1] = (uint64_t)v6;
  WidgetEnvironment.apply(environmentValues:)();
  v7 = sub_190A46C30();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
}

_DWORD *WidgetEnvironment.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  _DWORD *result;

  type metadata accessor for UnfairLock();
  v4 = swift_allocObject();
  result = (_DWORD *)swift_slowAlloc();
  *result = 0;
  *(_QWORD *)(v4 + 16) = result;
  *a2 = v4;
  a2[1] = a1;
  return result;
}

id WidgetEnvironment.secureCodable()()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  id v5;

  v1 = *v0;
  v2 = (void *)v0[1];
  v3 = *(os_unfair_lock_s **)(*v0 + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  v4 = *(os_unfair_lock_s **)(v1 + 16);
  v5 = v2;
  os_unfair_lock_unlock(v4);
  swift_release();
  return v5;
}

uint64_t WidgetEnvironment.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  id v9;
  void *v10;
  _QWORD v11[4];

  type metadata accessor for UnfairLock();
  v5 = swift_allocObject();
  v6 = (_DWORD *)swift_slowAlloc();
  *v6 = 0;
  *(_QWORD *)(v5 + 16) = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_retain();
  sub_190A48820();
  if (v2)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    type metadata accessor for WidgetEnvironment.Storage();
    sub_1908AED38(qword_1ECF6CB80, v7, (uint64_t (*)(uint64_t))type metadata accessor for WidgetEnvironment.Storage, (uint64_t)&protocol conformance descriptor for WidgetEnvironment.Storage);
    sub_190A486E8();
    v9 = v10;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    *a2 = v5;
    a2[1] = (uint64_t)v9;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  }
  return swift_release();
}

uint64_t WidgetEnvironment.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  _BYTE v6[24];
  uint64_t v7;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190A48844();
  v3 = *(os_unfair_lock_s **)(v2 + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
  type metadata accessor for WidgetEnvironment.Storage();
  sub_1908AED38(&qword_1ECF6BE98, v4, (uint64_t (*)(uint64_t))type metadata accessor for WidgetEnvironment.Storage, (uint64_t)&protocol conformance descriptor for WidgetEnvironment.Storage);
  sub_190A486F4();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t WidgetEnvironment.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *v0;
  v2 = *(os_unfair_lock_s **)(*v0 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  WidgetEnvironment.Storage.hash.getter();
  sub_190A487CC();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  return swift_release();
}

uint64_t static WidgetEnvironment.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  void *v3;
  unint64_t v4;
  void *v5;
  id v6;
  id v7;

  v2 = *a1;
  v3 = (void *)a1[1];
  v4 = *a2;
  v5 = (void *)a2[1];
  swift_retain();
  v6 = v3;
  swift_retain();
  v7 = v5;
  LOBYTE(v3) = sub_1909FD19C(v2, v4);

  swift_release();
  swift_release();
  return v3 & 1;
}

uint64_t WidgetEnvironment.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *v0;
  sub_190A487C0();
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  WidgetEnvironment.Storage.hash.getter();
  sub_190A487CC();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  return sub_190A48808();
}

uint64_t sub_1908EE43C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return WidgetEnvironment.init(from:)(a1, a2);
}

uint64_t sub_1908EE450(_QWORD *a1)
{
  return WidgetEnvironment.encode(to:)(a1);
}

uint64_t sub_1908EE468()
{
  uint64_t *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *v0;
  v2 = *(os_unfair_lock_s **)(*v0 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  WidgetEnvironment.Storage.hash.getter();
  sub_190A487CC();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  return swift_release();
}

uint64_t sub_1908EE4BC()
{
  uint64_t *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *v0;
  sub_190A487C0();
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  WidgetEnvironment.Storage.hash.getter();
  sub_190A487CC();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  return sub_190A48808();
}

uint64_t sub_1908EE528(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  void *v3;
  unint64_t v4;
  void *v5;
  id v6;
  id v7;

  v2 = *a1;
  v3 = (void *)a1[1];
  v4 = *a2;
  v5 = (void *)a2[1];
  swift_retain();
  v6 = v3;
  swift_retain();
  v7 = v5;
  LOBYTE(v3) = sub_1909FD19C(v2, v4);

  swift_release();
  swift_release();
  return v3 & 1;
}

unint64_t WidgetEnvironment.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *v0;
  v2 = *(os_unfair_lock_s **)(*v0 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  WidgetEnvironment.Storage.debugDescription.getter();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  return 0xD000000000000012;
}

unint64_t WidgetEnvironment.debugDescription.getter()
{
  return 0xD000000000000011;
}

unint64_t sub_1908EE66C()
{
  return 0xD000000000000011;
}

uint64_t sub_1908EE68C(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v15;

  if (a3 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    v5 = sub_190A48484();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      v6 = 4;
      do
      {
        v7 = v6 - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          v8 = MEMORY[0x194013510](v6 - 4, a3);
          v9 = v6 - 3;
          if (__OFADD__(v7, 1))
            goto LABEL_16;
        }
        else
        {
          v8 = *(_QWORD *)(a3 + 8 * v6);
          swift_retain();
          v9 = v6 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        v15 = v8;
        v10 = a1(&v15);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return v12 & 1;
        }
        v11 = v10;
        swift_release();
        if ((v11 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          v12 = 0;
          return v12 & 1;
        }
        ++v6;
      }
      while (v9 != v5);
    }
  }
  swift_bridgeObjectRelease();
  v12 = 1;
  return v12 & 1;
}

void sub_1908EE7D0(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  char v6;
  uint64_t i;
  id v8;
  void *v9;
  char v10;
  unint64_t v11;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v4 = (id)MEMORY[0x194013510](0, a2);
      }
      else
      {
        if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v4 = *(id *)(a2 + 32);
      }
      v5 = v4;
      sub_1908AB890(0, (unint64_t *)&unk_1ECF6A9A8);
      v6 = sub_190A480F4();

      if ((v6 & 1) == 0)
      {
        for (i = 0; ; ++i)
        {
          v11 = i + 1;
          if (__OFADD__(i, 1))
            break;
          if (v11 == v3)
            return;
          if ((a2 & 0xC000000000000001) != 0)
          {
            v8 = (id)MEMORY[0x194013510](i + 1, a2);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0)
              goto LABEL_18;
            if (v11 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_19;
            v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          v9 = v8;
          v10 = sub_190A480F4();

          if ((v10 & 1) != 0)
            return;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        v3 = sub_190A48484();
        swift_bridgeObjectRelease();
        if (v3)
          continue;
      }
      return;
    }
  }
}

uint64_t sub_1908EE968(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v4 = *(_QWORD *)(sub_190A46EAC() - 8);
  v5 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v6 = *(_QWORD *)(v4 + 72);
  sub_1908AED38(&qword_1ECF6AA38, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDB388], MEMORY[0x1E0CDB3B8]);
  v7 = 0;
  while ((sub_190A47AAC() & 1) == 0)
  {
    ++v7;
    v5 += v6;
    if (v2 == v7)
      return 0;
  }
  return v7;
}

id WidgetEnvironment.makeEnumerator(with:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v9;

  v5 = *v2;
  v9 = (id)v2[1];
  v6 = (char *)a2 + *(int *)(type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0) + 20);
  v7 = sub_190A46C30();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, a1, v7);
  *a2 = v5;
  a2[1] = v9;
  swift_retain();
  return v9;
}

uint64_t sub_1908EEAB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t i;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t j;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(void);
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[2];

  v2 = v1;
  v4 = sub_190A46C30();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
  MEMORY[0x1E0C80A78](v8);
  v45 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA590);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1908AAA48(v1, (uint64_t)v15, &qword_1EE1EA590);
  sub_1908BD0B4((uint64_t)v15, (uint64_t)v12, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  v17 = *v12;
  v16 = (void *)v12[1];
  v18 = (char *)a1
      + *(int *)(type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0) + 20);
  v46 = v5;
  v47 = v4;
  v43 = *(void (**)(void))(v5 + 16);
  v44 = v18;
  v43();
  swift_retain();
  v19 = v16;
  v20 = sub_1908FF740(MEMORY[0x1E0DEE9D8]);
  v48[0] = v17;
  v48[1] = (uint64_t)v19;
  swift_retain();
  v21 = v19;
  swift_bridgeObjectRetain();
  v22 = sub_1908FFDE4(v48, v20);
  v24 = v23;
  v26 = v25;
  swift_bridgeObjectRelease();

  swift_release();
  *a1 = v22;
  a1[1] = v24;
  a1[2] = v26;
  sub_1908B5150((uint64_t)v12, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1ECC18) + 36);
  if (*(uint64_t *)(v2 + v42) >= 1)
  {
    for (i = 0; i < *(_QWORD *)(v2 + v42); ++i)
    {
      v28 = a1[1];
      if (v28 >> 62)
      {
        swift_bridgeObjectRetain_n();
        v39 = sub_190A48484();
        swift_bridgeObjectRelease();
        v30 = v39 - 1;
        if (v39 < 1)
        {
LABEL_21:
          swift_bridgeObjectRelease();
          v37 = (uint64_t)v45;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v45, 1, 1, v47);
LABEL_22:
          sub_1908AA544(v2, (uint64_t *)&unk_1EE1ECC18);
          v40 = (uint64_t *)&unk_1ECF6C868;
          v41 = v37;
          return sub_1908AA544(v41, v40);
        }
      }
      else
      {
        v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        v30 = v29 - 1;
        if (v29 < 1)
          goto LABEL_21;
      }
      if ((sub_1908EF6EC(v30) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v31 = MEMORY[0x1E0DEE9D8];
        *a1 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRelease();
        a1[1] = v31;
        swift_bridgeObjectRelease();
        a1[2] = v31;
      }
      result = ((uint64_t (*)(char *, char *, uint64_t))v43)(v7, v44, v47);
      if (v28 >> 62)
      {
        swift_bridgeObjectRetain();
        v33 = sub_190A48484();
        result = swift_bridgeObjectRelease();
        if (!v33)
          goto LABEL_17;
      }
      else
      {
        v33 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v33)
          goto LABEL_17;
      }
      if (v33 < 1)
      {
        __break(1u);
        return result;
      }
      for (j = 0; j != v33; ++j)
      {
        if ((v28 & 0xC000000000000001) != 0)
        {
          v35 = MEMORY[0x194013510](j, v28);
        }
        else
        {
          v35 = *(_QWORD *)(v28 + 8 * j + 32);
          swift_retain();
        }
        (*(void (**)(char *))(**(_QWORD **)(v35 + 16) + 112))(v7);
        swift_release();
      }
LABEL_17:
      swift_bridgeObjectRelease();
      v37 = (uint64_t)v45;
      v36 = v46;
      v38 = v47;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v45, v7, v47);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v38);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v37, 1, v38) == 1)
        goto LABEL_22;
      sub_1908AA544(v37, (uint64_t *)&unk_1ECF6C868);
    }
  }
  v40 = (uint64_t *)&unk_1EE1ECC18;
  v41 = v2;
  return sub_1908AA544(v41, v40);
}

uint64_t WidgetEnvironment.EnvironmentValuesEnumerator.Iterator.next()@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = sub_190A46C30();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *((_QWORD *)v1 + 1);
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v16 = sub_190A48484();
    swift_bridgeObjectRelease();
    v9 = v16 - 1;
    if (v16 >= 1)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  }
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v9 = v8 - 1;
  if (v8 < 1)
    goto LABEL_17;
LABEL_3:
  if ((sub_1908EF6EC(v9) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)v1 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    *((_QWORD *)v1 + 1) = v10;
    swift_bridgeObjectRelease();
    *((_QWORD *)v1 + 2) = v10;
  }
  v11 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0);
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 16))(v6, &v1[*(int *)(v11 + 20)], v3);
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_190A48484();
    result = swift_bridgeObjectRelease();
    if (!v13)
    {
LABEL_15:
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v6, v3);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
    }
  }
  else
  {
    v13 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v13)
      goto LABEL_15;
  }
  if (v13 >= 1)
  {
    for (i = 0; i != v13; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v15 = MEMORY[0x194013510](i, v7);
      }
      else
      {
        v15 = *(_QWORD *)(v7 + 8 * i + 32);
        swift_retain();
      }
      (*(void (**)(char *))(**(_QWORD **)(v15 + 16) + 112))(v6);
      swift_release();
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t WidgetEnvironment.environmentValues(where:)@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t (*v23)(char *);
  uint64_t v24;

  v23 = a1;
  v24 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA590);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_190A46C30();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v3;
  v15 = (char *)v3[1];
  v17 = *(os_unfair_lock_s **)(*v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v17);
  v18 = &v15[OBJC_IVAR___CHKWidgetEnvironment_tuples];
  swift_beginAccess();
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 16);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 16));
  swift_release();
  if (!v19)
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3, 1, 1, v8);
  sub_190A46C24();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(&v14[*(int *)(v12 + 20)], v11, v8);
  *(_QWORD *)v14 = v16;
  *((_QWORD *)v14 + 1) = v15;
  v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  swift_retain();
  v21 = v15;
  v20(v11, v8);
  sub_1908BD0B4((uint64_t)v14, (uint64_t)v7, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  sub_1908DE7E0(v23, v24, a3);
  return sub_1908AA544((uint64_t)v7, &qword_1EE1EA590);
}

uint64_t WidgetEnvironment.EnvironmentValuesEnumerator.makeIterator()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  void *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17[2];

  v3 = *v1;
  v4 = (void *)v1[1];
  v5 = (char *)v1 + *(int *)(type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0) + 20);
  v6 = (char *)a1
     + *(int *)(type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0) + 20);
  v7 = sub_190A46C30();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, v5, v7);
  swift_retain();
  v8 = v4;
  v9 = sub_1908FF740(MEMORY[0x1E0DEE9D8]);
  v17[0] = v3;
  v17[1] = (uint64_t)v8;
  swift_retain();
  v10 = v8;
  swift_bridgeObjectRetain();
  v11 = sub_1908FFDE4(v17, v9);
  v13 = v12;
  v15 = v14;
  swift_bridgeObjectRelease();

  result = swift_release();
  *a1 = v11;
  a1[1] = v13;
  a1[2] = v15;
  return result;
}

unint64_t sub_1908EF40C()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[1];
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v3 = v2 - 1;
    if (v2 >= 1)
      goto LABEL_3;
LABEL_6:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain_n();
  v5 = sub_190A48484();
  swift_bridgeObjectRelease();
  v3 = v5 - 1;
  if (v5 < 1)
    goto LABEL_6;
LABEL_3:
  if ((sub_1908EF6EC(v3) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v4 = MEMORY[0x1E0DEE9D8];
    *v0 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    v0[1] = v4;
    swift_bridgeObjectRelease();
    v0[2] = v4;
  }
  return v1;
}

uint64_t sub_1908EF4D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  void *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18[2];

  v4 = *v2;
  v5 = (void *)v2[1];
  v6 = (char *)v2 + *(int *)(a1 + 20);
  v7 = (char *)a2
     + *(int *)(type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0) + 20);
  v8 = sub_190A46C30();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, v6, v8);
  swift_retain();
  v9 = v5;
  v10 = sub_1908FF740(MEMORY[0x1E0DEE9D8]);
  v18[0] = v4;
  v18[1] = (uint64_t)v9;
  swift_retain();
  v11 = v9;
  swift_bridgeObjectRetain();
  v12 = sub_1908FFDE4(v18, v10);
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease();

  swift_release();
  *a2 = v12;
  a2[1] = v14;
  a2[2] = v16;
  return sub_1908B5150((uint64_t)v2, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
}

uint64_t sub_1908EF5C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1908BAE48(v0);
  sub_1908B5150(v0, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  return v1;
}

uint64_t sub_1908EF604(unint64_t a1, unint64_t a2)
{
  uint64_t result;
  unint64_t *v5;
  unint64_t v6;
  int64x2_t v7;
  int64x2_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = sub_190A4843C();
    __break(1u);
    return result;
  }
  if (!a2)
    return MEMORY[0x1E0DEE9D8];
  result = sub_190A47CBC();
  *(_QWORD *)(result + 16) = a2;
  v5 = (unint64_t *)(result + 32);
  if (a2 < 4)
  {
    v6 = 0;
LABEL_9:
    v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  v6 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  v5 += a2 & 0xFFFFFFFFFFFFFFFCLL;
  v7 = vdupq_n_s64(a1);
  v8 = (int64x2_t *)(result + 48);
  v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v6 != a2)
    goto LABEL_9;
  return result;
}

uint64_t sub_1908EF6EC(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t *v21;

  v8 = (unint64_t *)(v2 + 8);
  while (1)
  {
    if ((a1 & 0x8000000000000000) != 0)
      goto LABEL_46;
    v5 = v21[2];
    if (*(_QWORD *)(v5 + 16) <= a1)
      goto LABEL_47;
    v9 = *(_QWORD *)(v5 + 8 * a1 + 32);
    v3 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_48;
    v1 = *v21;
    if (*(_QWORD *)(*v21 + 16) <= a1)
      goto LABEL_49;
    v6 = v1 + 32;
    v10 = *(_QWORD *)(v1 + 32 + 8 * a1);
    if (v10 >> 62)
      break;
    v4 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3 < v4)
      goto LABEL_29;
LABEL_9:
    v11 = *(_QWORD *)(v5 + 16);
    if (v11 < a1)
      goto LABEL_50;
    if (v11 != a1)
    {
      v12 = *(_QWORD *)(v1 + 16);
      if (v12 > a1 && v11 <= v12)
      {
        v20 = v4;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = (unint64_t)sub_190A4133C((_QWORD *)v5);
        v4 = v5 + 32;
        v1 = a1;
        while (v1 < *(_QWORD *)(v5 + 16))
        {
          *(_QWORD *)(v4 + 8 * v1) = 0;
          v13 = *(_QWORD *)(v6 + 8 * v1);
          if ((v13 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            v14 = MEMORY[0x194013510](0, v13);
            swift_bridgeObjectRelease();
          }
          else
          {
            if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_44;
            v14 = *(_QWORD *)(v13 + 32);
            swift_retain();
          }
          v15 = *v8;
          isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *v8 = v15;
          if (!isUniquelyReferenced_nonNull_bridgeObject
            || (v15 & 0x8000000000000000) != 0
            || (v15 & 0x4000000000000000) != 0)
          {
            sub_190A412D4(v15);
          }
          if (v1 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_45;
          *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 8 * v1 + 0x20) = v14;
          swift_release();
          sub_190A47C74();
          if (v11 == ++v1)
          {
            v4 = v20;
            v21[2] = v5;
            goto LABEL_2;
          }
        }
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
      }
      __break(1u);
      goto LABEL_52;
    }
LABEL_2:
    if ((--a1 & 0x8000000000000000) != 0)
      return v3 < v4;
  }
  swift_bridgeObjectRetain();
  v4 = sub_190A48484();
  swift_bridgeObjectRelease();
  if (v3 >= v4)
    goto LABEL_9;
LABEL_29:
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
    goto LABEL_30;
LABEL_52:
  result = (uint64_t)sub_190A4133C((_QWORD *)v5);
  v5 = result;
LABEL_30:
  if (*(_QWORD *)(v5 + 16) <= a1)
  {
    __break(1u);
    goto LABEL_54;
  }
  *(_QWORD *)(v5 + 8 * a1 + 32) = v3;
  v21[2] = v5;
  if (*(_QWORD *)(v1 + 16) <= a1)
  {
LABEL_54:
    __break(1u);
LABEL_55:
    swift_bridgeObjectRetain();
    v18 = MEMORY[0x194013510](v3, v5);
    swift_bridgeObjectRelease();
LABEL_36:
    v19 = *v8;
    result = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *v8 = v19;
    if (!(_DWORD)result || (v19 & 0x8000000000000000) != 0 || (v19 & 0x4000000000000000) != 0)
      sub_190A412D4(v19);
    if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20) = v18;
      swift_release();
      sub_190A47C74();
      return v3 < v4;
    }
    goto LABEL_58;
  }
  v5 = *(_QWORD *)(v6 + 8 * a1);
  if ((v5 & 0xC000000000000001) != 0)
    goto LABEL_55;
  if (v3 < 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v3 < *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v18 = *(_QWORD *)(v5 + 8 * v3 + 32);
    swift_retain();
    goto LABEL_36;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

unint64_t sub_1908EFA10@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_1908EF40C();
  *a1 = result;
  return result;
}

uint64_t sub_1908EFA34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13[2];

  v3 = *v1;
  v4 = (void *)v1[1];
  v5 = v1[2];
  v13[0] = v3;
  v13[1] = (uint64_t)v4;
  swift_retain();
  v6 = v4;
  swift_bridgeObjectRetain();
  v7 = sub_1908FFDE4(v13, v5);
  v9 = v8;
  v11 = v10;
  swift_bridgeObjectRelease();

  result = swift_release();
  *a1 = v7;
  a1[1] = v9;
  a1[2] = v11;
  return result;
}

uint64_t sub_1908EFAC8()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;

  v1 = (void *)v0[1];
  v2 = sub_1908BB3DC(*v0, v1, v0[2]);
  swift_bridgeObjectRelease();

  swift_release();
  return v2;
}

uint64_t sub_1908EFB1C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1908F46CC(a1, a2, a3, *(_QWORD *)v3, *(void **)(v3 + 8), *(_QWORD *)(v3 + 16));
}

void *sub_1908EFB28()
{
  void *result;

  result = (void *)sub_1908E0234(MEMORY[0x1E0DEE9D8]);
  off_1ECF6CA10 = result;
  return result;
}

void *sub_1908EFB4C()
{
  void *result;

  result = (void *)sub_1908E012C(MEMORY[0x1E0DEE9D8]);
  off_1ECF6CA28 = result;
  return result;
}

uint64_t sub_1908EFB70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = swift_allocObject();
  type metadata accessor for WidgetEnvironment.AnyKey.Storage(0, a2, a3, v6);
  *(_QWORD *)(v5 + 16) = swift_allocObject();
  return v5;
}

void *sub_1908EFBD4()
{
  void *result;
  uint64_t v1;
  uint64_t i;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char v29;
  _QWORD *v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;

  if (qword_1ECF6C910 != -1)
LABEL_43:
    swift_once();
  result = off_1ECF6CA20;
  v1 = *((_QWORD *)off_1ECF6CA20 + 2);
  if (!v1)
    return result;
  for (i = swift_bridgeObjectRetain() + 48; ; i += 24)
  {
    v4 = *(_QWORD *)(i - 16);
    v5 = qword_1ECF6C900;
    swift_retain_n();
    swift_bridgeObjectRetain();
    if (v5 != -1)
      swift_once();
    (*(void (**)(void))(**(_QWORD **)(v4 + 16) + 80))();
    v7 = v6;
    v9 = v8;
    swift_release();
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = off_1ECF6CA10;
    v41 = off_1ECF6CA10;
    off_1ECF6CA10 = (_UNKNOWN *)0x8000000000000000;
    v13 = sub_1908D2C98(v7, v9);
    v14 = v11[2];
    v15 = (v12 & 1) == 0;
    v16 = v14 + v15;
    if (__OFADD__(v14, v15))
    {
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v17 = v12;
    if (v11[3] < v16)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v20 = v41;
      if ((v12 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      sub_1908FD820();
      v20 = v41;
      if ((v17 & 1) != 0)
      {
LABEL_15:
        v21 = v20[7];
        swift_release();
        *(_QWORD *)(v21 + 8 * v13) = v4;
        goto LABEL_19;
      }
    }
LABEL_17:
    v20[(v13 >> 6) + 8] |= 1 << v13;
    v22 = (uint64_t *)(v20[6] + 16 * v13);
    *v22 = v7;
    v22[1] = v9;
    *(_QWORD *)(v20[7] + 8 * v13) = v4;
    v23 = v20[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_41;
    v20[2] = v25;
    swift_bridgeObjectRetain();
LABEL_19:
    off_1ECF6CA10 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    if (qword_1ECF6C8D8 != -1)
      swift_once();
    v26 = (*(uint64_t (**)(void))(**(_QWORD **)(v4 + 16) + 104))();
    swift_beginAccess();
    v27 = off_1ECF6CA28;
    if (((unint64_t)off_1ECF6CA28 & 0xC000000000000001) != 0)
    {
      if ((uint64_t)off_1ECF6CA28 >= 0)
        v27 = (void *)((unint64_t)off_1ECF6CA28 & 0xFFFFFFFFFFFFFF8);
      swift_retain();
      v28 = sub_190A48214();
      if (__OFADD__(v28, 1))
        goto LABEL_40;
      off_1ECF6CA28 = (_UNKNOWN *)sub_1908F8DC0((uint64_t)v27, v28 + 1);
    }
    else
    {
      swift_retain();
    }
    v29 = swift_isUniquelyReferenced_nonNull_native();
    v30 = off_1ECF6CA28;
    v42 = off_1ECF6CA28;
    off_1ECF6CA28 = (_UNKNOWN *)0x8000000000000000;
    v32 = sub_1908D2C2C(v26);
    v33 = v30[2];
    v34 = (v31 & 1) == 0;
    v35 = v33 + v34;
    if (__OFADD__(v33, v34))
      goto LABEL_39;
    v36 = v31;
    if (v30[3] >= v35)
    {
      if ((v29 & 1) == 0)
        sub_1908FD678();
    }
    else
    {
      sub_1908F9FB4(v35, v29);
      v37 = sub_1908D2C2C(v26);
      if ((v36 & 1) != (v38 & 1))
        goto LABEL_45;
      v32 = v37;
    }
    if ((v36 & 1) != 0)
    {
      v3 = v42[7];
      swift_release();
      *(_QWORD *)(v3 + 8 * v32) = v4;
    }
    else
    {
      v42[(v32 >> 6) + 8] |= 1 << v32;
      *(_QWORD *)(v42[6] + 8 * v32) = v26;
      *(_QWORD *)(v42[7] + 8 * v32) = v4;
      v39 = v42[2];
      v24 = __OFADD__(v39, 1);
      v40 = v39 + 1;
      if (v24)
        goto LABEL_42;
      v42[2] = v40;
      swift_retain();
    }
    off_1ECF6CA28 = v42;
    swift_release();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_release_n();
    if (!--v1)
      return (void *)swift_bridgeObjectRelease();
  }
  sub_1908FA2CC(v16, isUniquelyReferenced_nonNull_native);
  v18 = sub_1908D2C98(v7, v9);
  if ((v17 & 1) == (v19 & 1))
  {
    v13 = v18;
    v20 = v41;
    if ((v17 & 1) != 0)
      goto LABEL_15;
    goto LABEL_17;
  }
  sub_190A48754();
  __break(1u);
LABEL_45:
  sub_190A481CC();
  result = (void *)sub_190A48754();
  __break(1u);
  return result;
}

uint64_t sub_1908F0028()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1908F0054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1909037C4(a1, a2);
  *a3 = result;
  a3[1] = v5;
  a3[2] = v6;
  return result;
}

void sub_1908F007C(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t sub_1908F0088(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
    return 0;
  else
    return sub_190A486DC();
}

uint64_t sub_1908F00B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if (v4 == v2 && v5 == v3)
    v7 = 1;
  else
    v7 = sub_190A486DC() ^ 1;
  return v7 & 1;
}

uint64_t sub_1908F00F4(uint64_t a1, uint64_t a2)
{
  char v3;

  if (*(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
    v3 = 1;
  else
    v3 = sub_190A486DC() ^ 1;
  return v3 & 1;
}

uint64_t sub_1908F013C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if (v4 == v2 && v5 == v3)
    return 0;
  else
    return sub_190A486DC();
}

uint64_t sub_1908F0160()
{
  sub_190A487C0();
  swift_bridgeObjectRetain();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_1908F01B8()
{
  swift_bridgeObjectRetain();
  sub_190A47B18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1908F01FC()
{
  sub_190A487C0();
  swift_bridgeObjectRetain();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_1908F0250()
{
  sub_190901EA4();
  return sub_190A48868();
}

uint64_t sub_1908F0278()
{
  sub_190901EA4();
  return sub_190A48874();
}

uint64_t sub_1908F02A0(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
    return 1;
  else
    return sub_190A486DC();
}

void sub_1908F02D0()
{
  sub_190A48448();
  __break(1u);
}

void sub_1908F0318()
{
  sub_190A48448();
  __break(1u);
}

void sub_1908F0360()
{
  sub_190A48448();
  __break(1u);
}

void sub_1908F03A8()
{
  sub_190A48448();
  __break(1u);
}

void sub_1908F03F0()
{
  sub_190A48448();
  __break(1u);
}

void sub_1908F0438()
{
  sub_190A48448();
  __break(1u);
}

void sub_1908F0480()
{
  sub_190A48448();
  __break(1u);
}

uint64_t sub_1908F04C8()
{
  return swift_allocObject();
}

uint64_t sub_1908F04D8()
{
  uint64_t v0;

  return sub_1908FE81C(*(_QWORD *)(*(_QWORD *)v0 + 144), *(_QWORD *)(*(_QWORD *)v0 + 152));
}

uint64_t sub_1908F04E4()
{
  uint64_t v0;

  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)v0 + 152) + 48))();
  sub_190A481CC();
  return sub_190A47B00();
}

uint64_t sub_1908F0530()
{
  uint64_t v0;

  return sub_190903600(*(_QWORD *)(*(_QWORD *)v0 + 144), *(_QWORD *)(*(_QWORD *)v0 + 152));
}

uint64_t sub_1908F053C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)v0 + 152) + 72))();
  v2 = v1;
  swift_release();
  return v2;
}

uint64_t sub_1908F057C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[7];
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = *v1;
  v4 = type metadata accessor for WidgetEnvironment.AnyKey();
  v5 = *(_QWORD *)(v3 + 144);
  v6 = *(_QWORD *)(v3 + 152);
  v17 = sub_1908EFB70(v4, v5, v6);
  swift_getAssociatedTypeWitness();
  v7 = sub_190A47D04();
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 72))(v5, v6);
  v20 = v8;
  v21 = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD68);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  MEMORY[0x19401429C](MEMORY[0x1E0DEAF40], v7, &AssociatedConformanceWitness);
  v10 = a1;
  sub_190A48580();
  if (v16[6])
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_willThrow();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = swift_release();
    v19 = v22;
    MEMORY[0x1E0C80A78](v11);
    v16[2] = v5;
    v16[3] = v6;
    v16[4] = v17;
    v12 = (char *)type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6AE48);
    v14 = MEMORY[0x19401429C](MEMORY[0x1E0DEAF50], v7);
    v10 = sub_190907290((void (*)(char *, char *))sub_190903D04, (uint64_t)v16, v7, v12, v13, v14, MEMORY[0x1E0DEDB38], (uint64_t)&v22);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v10;
}

uint64_t sub_1908F07AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t AssociatedConformanceWitness;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[4];
  uint64_t v30;
  uint64_t *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v36 = a2;
  v31 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v32 = (char *)v29 - v13;
  v34 = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(v34 - 8);
  v15 = MEMORY[0x1E0C80A78](v34);
  v35 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v29 - v17;
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 56);
  v33 = a1;
  result = v19(a1, a3, a4);
  if (v6)
  {
    *a5 = v6;
  }
  else
  {
    v29[1] = a5;
    v29[3] = type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
    v21 = (uint64_t)v35;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v35, v18, v34);
    v29[2] = type metadata accessor for WidgetEnvironment.AnyValue();
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v23 = (uint64_t)v32;
    v22(v32, v33, AssociatedTypeWitness);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v25 = swift_getAssociatedConformanceWitness();
    v26 = swift_allocObject();
    sub_1908F1784(v23, AssociatedTypeWitness, AssociatedConformanceWitness, v25);
    sub_190A46C30();
    v27 = sub_190A483C4();
    v28 = swift_allocObject();
    sub_1908F2014(v30, v21, v26, v36, v27);
    *v31 = v28;
    return swift_retain();
  }
  return result;
}

uint64_t sub_1908F0A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  sub_1908F1784(a1, a2, a3, a4);
  return v8;
}

uint64_t sub_1908F0A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t AssociatedTypeWitness;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42[4];
  uint64_t v43;

  v39 = a2;
  v43 = a1;
  v36 = a3;
  v4 = *v3;
  v5 = sub_190A48148();
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  MEMORY[0x1E0C80A78](v5);
  v38 = (char *)&v34 - v6;
  v8 = *(_QWORD *)(v4 + 144);
  v7 = *(_QWORD *)(v4 + 152);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v41 = (char *)&v34 - v9;
  v10 = swift_getAssociatedTypeWitness();
  v11 = sub_190A48148();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v34 - v14;
  v16 = *(_QWORD *)(v10 - 8);
  v17 = MEMORY[0x1E0C80A78](v13);
  v19 = (char *)&v34 - v18;
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(**(_QWORD **)(v43 + 16) + 88))(v42, v17);
  v20 = v16;
  v21 = swift_dynamicCast();
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if (v21)
  {
    v23 = AssociatedTypeWitness;
    v24 = v38;
    v25 = v39;
    v22(v15, 0, 1, v10);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v19, v15, v10);
    v26 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 56))(v19, v8, v7);
    if (v26)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v19, v10);
    }
    else
    {
      v29 = v25;
      v30 = swift_dynamicCast();
      v31 = *(_QWORD *)(v25 - 8);
      v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
      if ((v30 & 1) != 0)
      {
        v32(v24, 0, 1, v29);
        (*(void (**)(char *, uint64_t))(v20 + 8))(v19, v10);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v36, v24, v29);
      }
      else
      {
        v32(v24, 1, 1, v29);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v35);
        sub_190A4831C();
        swift_allocError();
        sub_1908E0EE8(v23, v33);
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v19, v10);
      }
    }
  }
  else
  {
    v22(v15, 1, 1, v10);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    sub_190A4831C();
    swift_allocError();
    sub_1908E0EE8(v10, v28);
    return swift_willThrow();
  }
}

uint64_t sub_1908F0E0C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t AssociatedConformanceWitness;
  uint64_t v23;
  _QWORD v25[2];
  _BYTE v26[32];
  char *v27;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 144);
  v5 = *(_QWORD *)(v3 + 152);
  v25[0] = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](v25[0]);
  v27 = (char *)v25 - v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_190A48148();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v25 - v11;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v10);
  v15 = (char *)v25 - v14;
  sub_1908B3694(a1, (uint64_t)v26);
  v16 = swift_dynamicCast();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v16)
  {
    v17(v12, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v12, AssociatedTypeWitness);
    v18 = (uint64_t)v27;
    v19 = v25[1];
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 64))(v15, v4, v5);
    if (v19)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, AssociatedTypeWitness);
    }
    else
    {
      type metadata accessor for WidgetEnvironment.AnyValue();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, AssociatedTypeWitness);
      v21 = v25[0];
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v23 = swift_getAssociatedConformanceWitness();
      v4 = swift_allocObject();
      sub_1908F1784(v18, v21, AssociatedConformanceWitness, v23);
    }
  }
  else
  {
    v17(v12, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    sub_190A4831C();
    swift_allocError();
    sub_1908E0EE8(AssociatedTypeWitness, v20);
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_1908F10D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for WidgetEnvironment.AnyKey.Storage(0, a2, a3, a4);
  *(_QWORD *)(v4 + 16) = swift_allocObject();
  return v4;
}

uint64_t sub_1908F1100()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(*(_QWORD *)v0 + 16) + 96))();
}

void sub_1908F112C()
{
  sub_190A48448();
  __break(1u);
}

void sub_1908F1174()
{
  sub_190A48448();
  __break(1u);
}

void sub_1908F11BC()
{
  sub_190A48448();
  __break(1u);
}

void sub_1908F1204()
{
  sub_190A48448();
  __break(1u);
}

uint64_t sub_1908F124C()
{
  return 0;
}

uint64_t sub_1908F1258@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

void sub_1908F1284(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1908F1290()
{
  sub_190903CC0();
  return sub_190A48868();
}

uint64_t sub_1908F12B8()
{
  sub_190903CC0();
  return sub_190A48874();
}

uint64_t sub_1908F12E0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC80);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190903CC0();
  sub_190A48850();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1908F13A4(uint64_t a1, _QWORD *a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a1 + 104))(*a2) & 1;
}

uint64_t sub_1908F13E0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 80))();
}

uint64_t sub_1908F1408()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 112))();
}

uint64_t sub_1908F1430(uint64_t a1, _QWORD *a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a1 + 96))(*a2) & 1;
}

uint64_t sub_1908F1460(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1 + *(_QWORD *)(v4 + 152), v2);
  return sub_190A47B00();
}

uint64_t sub_1908F14DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;

  v2 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 152);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  a1[3] = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1, v2, v3);
}

uint64_t sub_1908F1520(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 128) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 152), a1);
  return v2;
}

uint64_t sub_1908F1574(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190A48844();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_190A486F4();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_1908F1620()
{
  uint64_t result;
  char v1;

  result = swift_dynamicCastClass();
  if (result)
  {
    swift_retain();
    v1 = sub_190A47AAC();
    swift_release();
    return v1 & 1;
  }
  return result;
}

uint64_t sub_1908F16A8()
{
  uint64_t result;
  char v1;

  result = swift_dynamicCastClass();
  if (result)
  {
    swift_retain();
    v1 = sub_190A47A64();
    swift_release();
    return v1 & 1;
  }
  return result;
}

uint64_t sub_1908F172C()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 128) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152));
}

uint64_t sub_1908F1748()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 128) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152));
  return swift_deallocClassInstance();
}

uint64_t sub_1908F1784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for WidgetEnvironment.AnyValue.Storage(0, a2, a3, a4);
  v6 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v6 + 128) - 8) + 32))(v6 + *(_QWORD *)(*(_QWORD *)v6 + 152), a1);
  *(_QWORD *)(v4 + 16) = v6;
  return v4;
}

uint64_t sub_1908F17E8()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1908F180C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)a1 + 16) + 104))(*(_QWORD *)(*(_QWORD *)a2 + 16)) & 1;
}

BOOL sub_1908F1844(uint64_t a1, uint64_t a2)
{
  return ((*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)a2 + 16) + 104))(*(_QWORD *)(*(_QWORD *)a1 + 16)) & 1) == 0;
}

BOOL sub_1908F1880(uint64_t a1, uint64_t a2)
{
  return ((*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)a1 + 16) + 104))(*(_QWORD *)(*(_QWORD *)a2 + 16)) & 1) == 0;
}

uint64_t sub_1908F18BC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)a2 + 16) + 104))(*(_QWORD *)(*(_QWORD *)a1 + 16)) & 1;
}

uint64_t sub_1908F18F4()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)v0 + 16) + 80);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  return v3;
}

uint64_t sub_1908F1948()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(*(_QWORD *)v0 + 16) + 112))();
}

uint64_t sub_1908F1974(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)a1 + 16) + 96))(*(_QWORD *)(*(_QWORD *)a2 + 16)) & 1;
}

void sub_1908F19AC()
{
  sub_190A48448();
  __break(1u);
}

void sub_1908F19F4()
{
  sub_190A48448();
  __break(1u);
}

void sub_1908F1A3C()
{
  sub_190A48448();
  __break(1u);
}

void sub_1908F1A84()
{
  sub_190A48448();
  __break(1u);
}

void sub_1908F1ACC()
{
  sub_190A48448();
  __break(1u);
}

void sub_1908F1B14()
{
  sub_190A48448();
  __break(1u);
}

uint64_t sub_1908F1B5C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 88))();
}

uint64_t sub_1908F1B84()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 96))();
}

char *sub_1908F1BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v6;
  uint64_t v7;

  v6 = (char *)swift_allocObject();
  v7 = *(_QWORD *)v6;
  *((_QWORD *)v6 + 2) = a1;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 144) - 8) + 32))(&v6[*(_QWORD *)(v7 + 160)], a2);
  *(_QWORD *)&v6[*(_QWORD *)(*(_QWORD *)v6 + 168)] = a3;
  return v6;
}

uint64_t sub_1908F1C20()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168)) + 16) + 80))();
}

uint64_t sub_1908F1C54()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  sub_190A47B3C();
  v1 = *(void (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168)) + 16) + 96);
  v2 = swift_retain();
  v1(v2);
  sub_190A47B3C();
  swift_release();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  sub_190A486B8();
  sub_190A47B3C();
  return 0;
}

uint64_t sub_1908F1D20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_190A47B3C();
  (*(void (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168)) + 16) + 96))(v1);
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  sub_190A486B8();
  sub_190A47B3C();
  return 0;
}

uint64_t sub_1908F1DD4()
{
  return swift_retain();
}

uint64_t sub_1908F1DDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1 + *(_QWORD *)(v3 + 160));
  return swift_setAtWritableKeyPath();
}

uint64_t sub_1908F1E60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  char v7;
  uint64_t v9[4];

  v3 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 168));
  v9[3] = *(_QWORD *)(*(_QWORD *)v1 + 144);
  __swift_allocate_boxed_opaque_existential_1(v9);
  swift_getAtKeyPath();
  v4 = (*(uint64_t (**)(uint64_t *))(**(_QWORD **)(v3 + 16) + 128))(v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(a1 + 16) + 96);
  swift_retain_n();
  swift_retain();
  v7 = v6(v5);
  swift_release_n();
  swift_release_n();
  return v7 & 1;
}

uint64_t sub_1908F1F54()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 144) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 160));
  return swift_release();
}

uint64_t *sub_1908F1FA0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 144) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 160));
  swift_release();
  return v0;
}

uint64_t sub_1908F1FF4()
{
  sub_1908F1FA0();
  return swift_deallocClassInstance();
}

uint64_t sub_1908F2014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  char *v10;
  uint64_t v11;

  type metadata accessor for WidgetEnvironment.AnyKeyValueTuple.Storage(0, a5, *(_QWORD *)(*MEMORY[0x1E0DEC880] + a5 + 8), a4);
  v10 = (char *)swift_allocObject();
  v11 = *(_QWORD *)v10;
  *((_QWORD *)v10 + 2) = a1;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v11 + 144) - 8) + 32))(&v10[*(_QWORD *)(v11 + 160)], a2);
  *(_QWORD *)&v10[*(_QWORD *)(*(_QWORD *)v10 + 168)] = a4;
  *(_QWORD *)(v5 + 16) = v10;
  *(_QWORD *)(v5 + 24) = a3;
  return v5;
}

uint64_t sub_1908F20BC()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1908F20E8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)v0 + 16) + 96);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  return v3;
}

uint64_t sub_1908F213C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(*(_QWORD *)v0 + 24) + 16) + 80);
  swift_retain();
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1908F21A4(uint64_t *a1, uint64_t *a2)
{
  return sub_1908FE768(*a1, *a2);
}

_QWORD *sub_1908F21B0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECCF8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1908FE680(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1908F22BC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C890);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1908FF9D0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1908F23C8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1908F336C(a1, a2, a3, a4, &qword_1ECF6AA78);
}

uint64_t sub_1908F23D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1908F23E8(a1, a2, a3, a4, &qword_1ECF6D300, type metadata accessor for WidgetDescriptor);
}

uint64_t sub_1908F23E8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_190A4843C();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1909039CC(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_1908F25F4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B990);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1908FE680(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1908F2700(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1908F2724(a1, a2, a3, a4, &qword_1ECF6B000);
}

char *sub_1908F270C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1908F2724(a1, a2, a3, a4, (uint64_t *)&unk_1ECF6D2F0);
}

char *sub_1908F2718(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1908F2724(a1, a2, a3, a4, &qword_1EE1ECCB0);
}

char *sub_1908F2724(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = *((_QWORD *)a4 + 3);
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = *((_QWORD *)a4 + 2);
    if (v8 <= v9)
      v10 = *((_QWORD *)a4 + 2);
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (char *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      *((_QWORD *)v11 + 2) = v9;
      *((_QWORD *)v11 + 3) = 2 * v12 - 64;
      v13 = v11 + 32;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32])
          memmove(v13, a4 + 32, v9);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (char *)MEMORY[0x1E0DEE9D8];
      v13 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_190903310(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1908F2818(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1908F23E8(a1, a2, a3, a4, &qword_1EE1EB718, (uint64_t (*)(_QWORD))type metadata accessor for ControlTemplateType);
}

_QWORD *sub_1908F282C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC98);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4])
          memmove(v12, a4 + 4, 80 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_190900814(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1908F294C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1ECCA0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_190900908(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1908F2A58(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1908F2724(a1, a2, a3, a4, &qword_1ECF6BA18);
}

_QWORD *sub_1908F2A64(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6ADD0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1909001C8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1908F2B70(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1908F2724(a1, a2, a3, a4, &qword_1EE1ECC28);
}

char *sub_1908F2B7C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1908F2724(a1, a2, a3, a4, qword_1ECF69C38);
}

_QWORD *sub_1908F2B88(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF69C28);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_190900908(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1908F2C94(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69A70);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1909033F4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1908F2DA0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1908F23E8(a1, a2, a3, a4, &qword_1ECF6B9F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA008]);
}

uint64_t sub_1908F2DB4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1908F23E8(a1, a2, a3, a4, &qword_1ECF69B18, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDB388]);
}

uint64_t sub_1908F2DC8(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF69AF8);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_190A4843C();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1909034E4(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1908F2FD8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1908F23E8(a1, a2, a3, a4, qword_1EE1E5E78, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD8AA8]);
}

uint64_t sub_1908F2FEC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1908F23E8(a1, a2, a3, a4, (uint64_t *)&unk_1ECF69B08, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDB2E0]);
}

uint64_t sub_1908F3000(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1908F23E8(a1, a2, a3, a4, &qword_1ECF69AF0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD86F8]);
}

uint64_t sub_1908F3014(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1908F23E8(a1, a2, a3, a4, &qword_1EE1ECCF0, (uint64_t (*)(_QWORD))type metadata accessor for ActivityViewCollection);
}

_QWORD *sub_1908F3028(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB228);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4])
          memmove(v12, a4 + 4, 80 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1909038D8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1908F3148(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6780);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v12 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_190903310(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1908F3240(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5B0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1909036B8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1908F3360(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1908F336C(a1, a2, a3, a4, &qword_1EE1E6C08);
}

_QWORD *sub_1908F336C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4])
          memmove(v14, a4 + 4, 8 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1908FE680(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1908F3474(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1908F23E8(a1, a2, a3, a4, &qword_1ECF6AAF8, (uint64_t (*)(_QWORD))type metadata accessor for WidgetViewMetadata);
}

_QWORD *sub_1908F3488(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1ECCE0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_190903AE4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1908F3594(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1908F35BC(a1, a2, a3, a4, &qword_1EE1ECC78);
}

_QWORD *sub_1908F35A8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1908F35BC(a1, a2, a3, a4, &qword_1EE1EA818);
}

_QWORD *sub_1908F35BC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v9 + 4])
          memmove(v14, a4 + 4, 32 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_190903BD4(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1908F36D4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EC668);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_190900908(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1908F37E0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1908F23E8(a1, a2, a3, a4, &qword_1ECF6C4B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD9AA8]);
}

uint64_t sub_1908F37F4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1908F23E8(a1, a2, a3, a4, &qword_1ECF6C4B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB11F0]);
}

uint64_t sub_1908F3808(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1908F23E8(a1, a2, a3, a4, &qword_1ECF6C4A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0E38]);
}

void sub_1908F381C(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_190A48178();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t sub_1908F38CC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1908FE5E4(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1908F3934(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1908F3934(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  BOOL v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *__dst;

  v3 = a1[1];
  result = sub_190A48670();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1908F4040(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v104 = result;
  v101 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v93 = v11;
      v103 = v8;
      if (v12 >= 2)
      {
        v94 = *v101;
        do
        {
          v95 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v94)
            goto LABEL_159;
          v96 = v93;
          v97 = *(_QWORD *)&v93[16 * v95 + 32];
          v98 = *(_QWORD *)&v93[16 * v12 + 24];
          sub_1908F411C((char *)(v94 + 24 * v97), (char *)(v94 + 24 * *(_QWORD *)&v93[16 * v12 + 16]), v94 + 24 * v98, __dst);
          if (v1)
            break;
          if (v98 < v97)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v96 = sub_1908F46B8((uint64_t)v96);
          if (v95 >= *((_QWORD *)v96 + 2))
            goto LABEL_149;
          v99 = &v96[16 * v95 + 32];
          *(_QWORD *)v99 = v97;
          *((_QWORD *)v99 + 1) = v98;
          v100 = *((_QWORD *)v96 + 2);
          if (v12 > v100)
            goto LABEL_150;
          memmove(&v96[16 * v12 + 16], &v96[16 * v12 + 32], 16 * (v100 - v12));
          v93 = v96;
          *((_QWORD *)v96 + 2) = v100 - 1;
          v12 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v103 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_190A47CBC();
    *(_QWORD *)(v7 + 16) = v6;
    v103 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v102 = *a1 + 16;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v105 = v3;
  v106 = v10;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = v10 + 24 * v9;
    v15 = *(_QWORD *)(v14 + 8);
    v16 = *(_QWORD *)(v14 + 16);
    v17 = v10 + 24 * v13;
    if (v15 == *(_QWORD *)(v17 + 8) && v16 == *(_QWORD *)(v17 + 16))
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_190A486DC();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v102 + 24 * v20);
    do
    {
      v23 = v10 + 24 * v9;
      if (*(v21 - 1) == *(_QWORD *)(v23 + 8) && *v21 == *(_QWORD *)(v23 + 16))
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_190A486DC()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v22 = v20 + 1;
      v21 += 3;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 24 * v20;
        v26 = 24 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v26;
            v30 = v10 + v25;
            v31 = *(_OWORD *)(v10 + v26);
            v32 = *(_QWORD *)(v10 + v26 + 16);
            v33 = *(_QWORD *)(v10 + v25 - 8);
            *(_OWORD *)v29 = *(_OWORD *)(v10 + v25 - 24);
            *(_QWORD *)(v29 + 16) = v33;
            *(_OWORD *)(v30 - 24) = v31;
            *(_QWORD *)(v30 - 8) = v32;
          }
          ++v28;
          v25 -= 24;
          v26 += 24;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v104)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1908F43F8(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v44 = *((_QWORD *)v11 + 2);
    v43 = *((_QWORD *)v11 + 3);
    v12 = v44 + 1;
    if (v44 >= v43 >> 1)
      v11 = sub_1908F43F8((char *)(v43 > 1), v44 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v45 = v11 + 32;
    v46 = &v11[16 * v44 + 32];
    *(_QWORD *)v46 = v13;
    *((_QWORD *)v46 + 1) = v9;
    if (v44)
    {
      v10 = v106;
      while (1)
      {
        v47 = v12 - 1;
        if (v12 >= 4)
        {
          v52 = &v45[16 * v12];
          v53 = *((_QWORD *)v52 - 8);
          v54 = *((_QWORD *)v52 - 7);
          v58 = __OFSUB__(v54, v53);
          v55 = v54 - v53;
          if (v58)
            goto LABEL_135;
          v57 = *((_QWORD *)v52 - 6);
          v56 = *((_QWORD *)v52 - 5);
          v58 = __OFSUB__(v56, v57);
          v50 = v56 - v57;
          v51 = v58;
          if (v58)
            goto LABEL_136;
          v59 = v12 - 2;
          v60 = &v45[16 * v12 - 32];
          v62 = *(_QWORD *)v60;
          v61 = *((_QWORD *)v60 + 1);
          v58 = __OFSUB__(v61, v62);
          v63 = v61 - v62;
          if (v58)
            goto LABEL_138;
          v58 = __OFADD__(v50, v63);
          v64 = v50 + v63;
          if (v58)
            goto LABEL_141;
          if (v64 >= v55)
          {
            v82 = &v45[16 * v47];
            v84 = *(_QWORD *)v82;
            v83 = *((_QWORD *)v82 + 1);
            v58 = __OFSUB__(v83, v84);
            v85 = v83 - v84;
            if (v58)
              goto LABEL_145;
            v75 = v50 < v85;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v76 = *((_QWORD *)v11 + 4);
            v77 = *((_QWORD *)v11 + 5);
            v58 = __OFSUB__(v77, v76);
            v69 = v77 - v76;
            v70 = v58;
            goto LABEL_99;
          }
          v49 = *((_QWORD *)v11 + 4);
          v48 = *((_QWORD *)v11 + 5);
          v58 = __OFSUB__(v48, v49);
          v50 = v48 - v49;
          v51 = v58;
        }
        if ((v51 & 1) != 0)
          goto LABEL_137;
        v59 = v12 - 2;
        v65 = &v45[16 * v12 - 32];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v68 = __OFSUB__(v66, v67);
        v69 = v66 - v67;
        v70 = v68;
        if (v68)
          goto LABEL_140;
        v71 = &v45[16 * v47];
        v73 = *(_QWORD *)v71;
        v72 = *((_QWORD *)v71 + 1);
        v58 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v58)
          goto LABEL_143;
        if (__OFADD__(v69, v74))
          goto LABEL_144;
        if (v69 + v74 >= v50)
        {
          v75 = v50 < v74;
LABEL_105:
          if (v75)
            v47 = v59;
          goto LABEL_107;
        }
LABEL_99:
        if ((v70 & 1) != 0)
          goto LABEL_139;
        v78 = &v45[16 * v47];
        v80 = *(_QWORD *)v78;
        v79 = *((_QWORD *)v78 + 1);
        v58 = __OFSUB__(v79, v80);
        v81 = v79 - v80;
        if (v58)
          goto LABEL_142;
        if (v81 < v69)
          goto LABEL_15;
LABEL_107:
        v86 = v47 - 1;
        if (v47 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10)
          goto LABEL_157;
        v87 = v10;
        v88 = &v45[16 * v86];
        v89 = *(_QWORD *)v88;
        v90 = &v45[16 * v47];
        v91 = *((_QWORD *)v90 + 1);
        sub_1908F411C((char *)(v87 + 24 * *(_QWORD *)v88), (char *)(v87 + 24 * *(_QWORD *)v90), v87 + 24 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v89)
          goto LABEL_132;
        if (v47 > *((_QWORD *)v11 + 2))
          goto LABEL_133;
        *(_QWORD *)v88 = v89;
        *(_QWORD *)&v45[16 * v86 + 8] = v91;
        v92 = *((_QWORD *)v11 + 2);
        if (v47 >= v92)
          goto LABEL_134;
        v12 = v92 - 1;
        memmove(&v45[16 * v47], v90 + 16, 16 * (v92 - 1 - v47));
        *((_QWORD *)v11 + 2) = v92 - 1;
        v75 = v92 > 2;
        v10 = v106;
        if (!v75)
          goto LABEL_15;
      }
    }
    v12 = 1;
    v10 = v106;
LABEL_15:
    v3 = v105;
    if (v9 >= v105)
    {
      v8 = v103;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v104))
    goto LABEL_153;
  if (v13 + v104 >= v3)
    v34 = v3;
  else
    v34 = v13 + v104;
  if (v34 >= v13)
  {
    if (v9 != v34)
    {
      v35 = (uint64_t *)(v10 + 24 * v9);
      do
      {
        v36 = v10 + 24 * v9;
        v37 = *(_QWORD *)(v36 + 8);
        v38 = *(_QWORD *)(v36 + 16);
        v39 = v13;
        v40 = v35;
        do
        {
          v41 = v37 == *(v40 - 2) && v38 == *(v40 - 1);
          if (v41 || (sub_190A486DC() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v42 = *v40;
          v37 = v40[1];
          v38 = v40[2];
          *(_OWORD *)v40 = *(_OWORD *)(v40 - 3);
          v40[2] = *(v40 - 1);
          *(v40 - 2) = v37;
          *(v40 - 1) = v38;
          *(v40 - 3) = v42;
          v40 -= 3;
          ++v39;
        }
        while (v9 != v39);
        ++v9;
        v35 += 3;
      }
      while (v9 != v34);
      v9 = v34;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_190A4843C();
  __break(1u);
  return result;
}

uint64_t sub_1908F4040(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;
  uint64_t v14;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 24 * a3;
LABEL_5:
    v9 = v7 + 24 * v4;
    result = *(_QWORD *)(v9 + 8);
    v10 = *(_QWORD *)(v9 + 16);
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_190A486DC(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 24;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      v14 = *v12;
      result = v12[1];
      v10 = v12[2];
      *(_OWORD *)v12 = *(_OWORD *)(v12 - 3);
      v12[2] = *(v12 - 1);
      *(v12 - 2) = result;
      *(v12 - 1) = v10;
      *(v12 - 3) = v14;
      v12 -= 3;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1908F411C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  BOOL v14;
  char *v15;
  char *v16;
  __int128 v17;
  char *v18;
  unint64_t v19;
  char *v20;
  BOOL v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  uint64_t result;
  char *v26;
  const void *v27;
  char *v28;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 24;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  v28 = __src;
  v27 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[24 * v11] <= __dst)
        memmove(__dst, a2, 24 * v11);
      v18 = &v4[24 * v11];
      v26 = v18;
      v28 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        v19 = a3 - 24;
        do
        {
          v20 = (char *)(v19 + 24);
          v21 = *((_QWORD *)v18 - 2) == *((_QWORD *)v6 - 2) && *((_QWORD *)v18 - 1) == *((_QWORD *)v6 - 1);
          if (v21 || (sub_190A486DC() & 1) == 0)
          {
            v26 = v18 - 24;
            if (v20 < v18 || v19 >= (unint64_t)v18 || v20 != v18)
            {
              v24 = *(_OWORD *)(v18 - 24);
              *(_QWORD *)(v19 + 16) = *((_QWORD *)v18 - 1);
              *(_OWORD *)v19 = v24;
            }
            v22 = v6;
            v18 -= 24;
            if (v6 <= v7)
              break;
          }
          else
          {
            v22 = v6 - 24;
            if (v20 != v6 || v19 >= (unint64_t)v6)
            {
              v23 = *(_OWORD *)v22;
              *(_QWORD *)(v19 + 16) = *((_QWORD *)v6 - 1);
              *(_OWORD *)v19 = v23;
            }
            v28 = v6 - 24;
            if (v22 <= v7)
              break;
          }
          v19 -= 24;
          v6 = v22;
        }
        while (v18 > v4);
      }
LABEL_48:
      sub_1908F45FC((void **)&v28, &v27, &v26);
      return 1;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[24 * v9] <= __dst)
      memmove(__dst, __src, 24 * v9);
    v12 = &v4[24 * v9];
    v26 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      v13 = v4;
      while (1)
      {
        v14 = *((_QWORD *)v6 + 1) == *((_QWORD *)v13 + 1) && *((_QWORD *)v6 + 2) == *((_QWORD *)v13 + 2);
        if (v14 || (sub_190A486DC() & 1) == 0)
        {
          v4 = v13 + 24;
          v16 = v13;
          v15 = v6;
          if (v7 == v13)
          {
            v13 += 24;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v13 += 24;
          }
        }
        else
        {
          v15 = v6 + 24;
          v16 = v6;
          if (v7 == v6 && v7 < v15)
            goto LABEL_22;
        }
        v17 = *(_OWORD *)v16;
        *((_QWORD *)v7 + 2) = *((_QWORD *)v16 + 2);
        *(_OWORD *)v7 = v17;
LABEL_22:
        v7 += 24;
        if (v13 < v12)
        {
          v6 = v15;
          if ((unint64_t)v15 < a3)
            continue;
        }
        v27 = v4;
        v28 = v7;
        goto LABEL_48;
      }
    }
    goto LABEL_48;
  }
  result = sub_190A484CC();
  __break(1u);
  return result;
}

char *sub_1908F43F8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECD00);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1908F44F0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = type metadata accessor for ViewableTimelineEntry();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_190A484CC();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_1908F45FC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -24)
  {
    result = (char *)sub_190A484CC();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
      return (char *)memmove(result, v3, 24 * v6);
  }
  return result;
}

char *sub_1908F46B8(uint64_t a1)
{
  return sub_1908F43F8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1908F46CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v21 = a4;
  v22 = (unint64_t)a5;
  swift_bridgeObjectRetain();
  swift_retain();
  v11 = a5;
  v12 = sub_1908FFDE4(&v21, a6);
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease();

  swift_release();
  v21 = v12;
  v22 = v14;
  v23 = v16;
  if (!a2)
    goto LABEL_19;
  if (!a3)
    goto LABEL_20;
  if (a3 < 0)
  {
    __break(1u);
  }
  else if (!(v14 >> 62))
  {
    v17 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17 >= 1)
      goto LABEL_6;
    goto LABEL_18;
  }
  swift_bridgeObjectRetain_n();
  v17 = sub_190A48484();
  swift_bridgeObjectRelease();
  if (v17 < 1)
  {
LABEL_18:
    swift_bridgeObjectRelease();
LABEL_19:
    a3 = 0;
    goto LABEL_20;
  }
LABEL_6:
  v18 = 0;
  v19 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if ((sub_1908EF6EC(v17 - 1) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v21 = v19;
      swift_bridgeObjectRelease();
      v22 = v19;
      swift_bridgeObjectRelease();
      v23 = v19;
    }
    *(_QWORD *)(a2 + 8 * v18) = v14;
    v14 = v22;
    if (a3 - 1 == v18)
      break;
    if (v22 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v17 = sub_190A48484();
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    ++v18;
    if (v17 <= 0)
    {
      swift_bridgeObjectRelease();
      v12 = v21;
      v16 = v23;
      a3 = v18;
      goto LABEL_20;
    }
  }
  v12 = v21;
  v16 = v23;
LABEL_20:
  *a1 = v12;
  a1[1] = v14;
  a1[2] = v16;
  return a3;
}

uint64_t sub_1908F48C0(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  void *v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t result;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t i;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  char *v47;
  void (*v48)(void);
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53[2];

  v52 = a2;
  v44 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C868);
  MEMORY[0x1E0C80A78](v5);
  v50 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_190A46C30();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v47 = (char *)&v43 - v12;
  v13 = type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *v3;
  v16 = (void *)v3[1];
  v45 = v3;
  type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(0);
  v18 = (char *)v15 + *(int *)(v13 + 20);
  v51 = v8;
  v48 = *(void (**)(void))(v8 + 16);
  v49 = v18;
  v48();
  swift_retain();
  v19 = v16;
  v20 = sub_1908FF740(MEMORY[0x1E0DEE9D8]);
  v53[0] = v17;
  v53[1] = (uint64_t)v19;
  swift_retain();
  v21 = v19;
  swift_bridgeObjectRetain();
  v22 = sub_1908FFDE4(v53, v20);
  v24 = v23;
  v26 = v25;
  v27 = v52;
  swift_bridgeObjectRelease();

  swift_release();
  *v15 = v22;
  v15[1] = v24;
  v15[2] = v26;
  result = sub_1908B5150((uint64_t)v45, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator);
  if (!v27)
  {
    v29 = 0;
LABEL_27:
    sub_1908BD0B4((uint64_t)v15, v44, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
    return v29;
  }
  if (!a3)
  {
LABEL_26:
    v29 = a3;
    goto LABEL_27;
  }
  if (a3 < 0)
    goto LABEL_29;
  v29 = 0;
  v46 = a3;
  while (1)
  {
    v30 = v15[1];
    if (v30 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v42 = sub_190A48484();
      swift_bridgeObjectRelease();
      v32 = v42 - 1;
      if (v42 < 1)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        v37 = (uint64_t)v50;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v50, 1, 1, v7);
LABEL_24:
        sub_1908AA544(v37, (uint64_t *)&unk_1ECF6C868);
        goto LABEL_27;
      }
    }
    else
    {
      v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v32 = v31 - 1;
      if (v31 < 1)
        goto LABEL_23;
    }
    if ((sub_1908EF6EC(v32) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v33 = MEMORY[0x1E0DEE9D8];
      *v15 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      v15[1] = v33;
      swift_bridgeObjectRelease();
      v15[2] = v33;
    }
    v52 = v27;
    result = ((uint64_t (*)(char *, char *, uint64_t))v48)(v11, v49, v7);
    if (v30 >> 62)
    {
      swift_bridgeObjectRetain();
      v34 = sub_190A48484();
      result = swift_bridgeObjectRelease();
      if (!v34)
        goto LABEL_19;
    }
    else
    {
      v34 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v34)
        goto LABEL_19;
    }
    if (v34 < 1)
      break;
    for (i = 0; i != v34; ++i)
    {
      if ((v30 & 0xC000000000000001) != 0)
      {
        v36 = MEMORY[0x194013510](i, v30);
      }
      else
      {
        v36 = *(_QWORD *)(v30 + 8 * i + 32);
        swift_retain();
      }
      (*(void (**)(char *))(**(_QWORD **)(v36 + 16) + 112))(v11);
      swift_release();
    }
LABEL_19:
    swift_bridgeObjectRelease();
    v37 = (uint64_t)v50;
    v38 = v51;
    v39 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
    v39(v50, v11, v7);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v37, 0, 1, v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v37, 1, v7) == 1)
      goto LABEL_24;
    ++v29;
    v40 = v47;
    v39(v47, (char *)v37, v7);
    v41 = v52;
    v39(v52, v40, v7);
    a3 = v46;
    if (v29 == v46)
      goto LABEL_26;
    v27 = &v41[*(_QWORD *)(v51 + 72)];
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

_QWORD *sub_1908F4CF0(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  v5 = a4 + 64;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v11 = 0;
    v9 = 0;
LABEL_39:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (_QWORD *)v9;
  }
  v9 = a3;
  if (!a3)
  {
    v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v10 = a2;
  v22 = -1 << *(_BYTE *)(a4 + 32);
  v23 = result;
  v11 = 0;
  v12 = 0;
  v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8)
    goto LABEL_9;
LABEL_8:
  v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    v19 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 24 * v15);
    v20 = v19[1];
    v21 = v19[2];
    *v10 = *v19;
    v10[1] = v20;
    v10[2] = v21;
    if (v12 == v9)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 3;
    swift_retain();
    result = (_QWORD *)swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_8;
LABEL_9:
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v16 >= v13)
      goto LABEL_33;
    v17 = *(_QWORD *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        v8 = 0;
        v11 = v16;
      }
      else
      {
        v17 = *(_QWORD *)(v5 + 8 * v11);
        if (v17)
          goto LABEL_14;
        v18 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_33;
        v17 = *(_QWORD *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          v16 = v18;
          goto LABEL_18;
        }
        v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          v17 = *(_QWORD *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            v16 = v11;
            goto LABEL_18;
          }
          v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            v8 = 0;
            goto LABEL_37;
          }
          v17 = *(_QWORD *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              v16 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_42;
              if (v16 >= v13)
              {
                v8 = 0;
                v11 = v13 - 1;
                goto LABEL_37;
              }
              v17 = *(_QWORD *)(v5 + 8 * v16);
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v8 = 0;
        v11 = v16 + 2;
      }
LABEL_37:
      v9 = v12;
LABEL_38:
      v6 = v22;
      result = v23;
      goto LABEL_39;
    }
LABEL_18:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v16 << 6);
    v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1908F4F0C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v8 = sub_190A48220();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_190A481CC();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v18;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_190A48214();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v16 = sub_1908F5784(v7, result + 1);
    v20 = v16;
    if (*(_QWORD *)(v16 + 24) <= *(_QWORD *)(v16 + 16))
    {
      swift_retain();
      sub_1908F5DBC();
      v17 = v20;
    }
    else
    {
      v17 = v16;
      swift_retain();
    }
    sub_1908F6EA8(a2, v17);
    *v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  sub_190A481CC();
  swift_bridgeObjectRetain();
  v10 = sub_190A47A40();
  v11 = -1 << *(_BYTE *)(v6 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v2;
    *v2 = 0x8000000000000000;
    v15 = swift_retain();
    sub_1908F70CC(v15, v12, isUniquelyReferenced_nonNull_native);
    *v2 = v19;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  v13 = ~v11;
  while ((sub_190A47AAC() & 1) == 0)
  {
    v12 = (v12 + 1) & v13;
    if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      goto LABEL_11;
  }
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v12);
  swift_retain();
  return 0;
}

uint64_t sub_1908F51A0(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v8 = sub_190A48220();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for WidgetURLHandler();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v23;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_190A48214();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v18 = sub_1908F5988(v7, result + 1);
    v24 = v18;
    if (*(_QWORD *)(v18 + 24) <= *(_QWORD *)(v18 + 16))
    {
      swift_retain();
      sub_1908F6094();
      v19 = v24;
    }
    else
    {
      v19 = v18;
      swift_retain();
    }
    sub_1908F6F50(a2, v19);
    *v3 = v19;
    swift_bridgeObjectRelease();
    *a1 = a2;
  }
  else
  {
    sub_190A487C0();
    v10 = *(void **)(a2 + 56);
    swift_bridgeObjectRetain();
    v11 = v10;
    sub_190A48100();

    v12 = sub_190A48808();
    v13 = -1 << *(_BYTE *)(v6 + 32);
    v14 = v12 & ~v13;
    if (((*(_QWORD *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
    {
      sub_1908AB890(0, (unint64_t *)&qword_1ECF6C5E0);
      swift_retain();
      v15 = sub_190A480F4();
      swift_release();
      if ((v15 & 1) != 0)
      {
LABEL_12:
        swift_release();
        swift_bridgeObjectRelease();
        *a1 = *(_QWORD *)(*(_QWORD *)(*v3 + 48) + 8 * v14);
        swift_retain();
        return 0;
      }
      v16 = ~v13;
      while (1)
      {
        v14 = (v14 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
          break;
        swift_retain();
        v17 = sub_190A480F4();
        swift_release();
        if ((v17 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = *v3;
    *v3 = 0x8000000000000000;
    v21 = swift_retain();
    sub_1908F7254(v21, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v25;
    swift_bridgeObjectRelease();
    *a1 = a2;
  }
  return 1;
}

uint64_t sub_1908F5490(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_190A487C0();
  swift_bridgeObjectRetain();
  sub_190A47B18();
  v8 = sub_190A48808();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_190A486DC() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_190A486DC() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1908F743C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1908F563C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;

  v5 = *v2;
  sub_190A487C0();
  swift_bridgeObjectRetain();
  sub_190A47908();
  v6 = sub_190A48808();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v2;
    *v2 = 0x8000000000000000;
    sub_1908F75D4(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v12;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  if ((sub_190A478FC() & 1) == 0)
  {
    v9 = ~v7;
    do
    {
      v8 = (v8 + 1) & v9;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while ((sub_190A478FC() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  result = 0;
  a2 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1908F5784(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECD48);
    v2 = sub_190A48280();
    v14 = v2;
    sub_190A48208();
    if (sub_190A4822C())
    {
      sub_190A481CC();
      do
      {
        swift_dynamicCast();
        v2 = v14;
        if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
        {
          sub_1908F5DBC();
          v2 = v14;
        }
        result = sub_190A47A40();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v9 = 0;
          v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v11 = v7 == v10;
            if (v7 == v10)
              v7 = 0;
            v9 |= v11;
            v12 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_190A4822C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1908F5988(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1ECCB8);
    v2 = sub_190A48280();
    v15 = v2;
    sub_190A48208();
    if (sub_190A4822C())
    {
      type metadata accessor for WidgetURLHandler();
      do
      {
        swift_dynamicCast();
        v2 = v15;
        if (*(_QWORD *)(v15 + 24) <= *(_QWORD *)(v15 + 16))
        {
          sub_1908F6094();
          v2 = v15;
        }
        sub_190A487C0();
        v3 = *(id *)(v14 + 56);
        sub_190A48100();

        result = sub_190A48808();
        v5 = v2 + 56;
        v6 = -1 << *(_BYTE *)(v2 + 32);
        v7 = result & ~v6;
        v8 = v7 >> 6;
        if (((-1 << v7) & ~*(_QWORD *)(v2 + 56 + 8 * (v7 >> 6))) != 0)
        {
          v9 = __clz(__rbit64((-1 << v7) & ~*(_QWORD *)(v2 + 56 + 8 * (v7 >> 6)))) | v7 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v6) >> 6;
          do
          {
            if (++v8 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v8 == v11;
            if (v8 == v11)
              v8 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v5 + 8 * v8);
          }
          while (v13 == -1);
          v9 = __clz(__rbit64(~v13)) + (v8 << 6);
        }
        *(_QWORD *)(v5 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v9) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_190A4822C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1908F5B98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E5E20);
    v2 = sub_190A48280();
    v15 = v2;
    sub_190A48208();
    if (sub_190A4822C())
    {
      sub_190A465D0();
      v3 = MEMORY[0x1E0C95E18];
      do
      {
        swift_dynamicCast();
        v2 = v15;
        if (*(_QWORD *)(v15 + 24) <= *(_QWORD *)(v15 + 16))
        {
          sub_1908F68EC();
          v2 = v15;
        }
        sub_1908AED38(&qword_1EE1E5DD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], v3);
        result = sub_190A47A40();
        v5 = v2 + 56;
        v6 = -1 << *(_BYTE *)(v2 + 32);
        v7 = result & ~v6;
        v8 = v7 >> 6;
        if (((-1 << v7) & ~*(_QWORD *)(v2 + 56 + 8 * (v7 >> 6))) != 0)
        {
          v9 = __clz(__rbit64((-1 << v7) & ~*(_QWORD *)(v2 + 56 + 8 * (v7 >> 6)))) | v7 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v6) >> 6;
          do
          {
            if (++v8 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v8 == v11;
            if (v8 == v11)
              v8 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v5 + 8 * v8);
          }
          while (v13 == -1);
          v9 = __clz(__rbit64(~v13)) + (v8 << 6);
        }
        *(_QWORD *)(v5 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v9) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_190A4822C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1908F5DBC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECD48);
  v3 = sub_190A48274();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v27 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v8)
          goto LABEL_33;
        v16 = v27[v15];
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v8)
            goto LABEL_33;
          v16 = v27[v11];
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v8)
              goto LABEL_33;
            v16 = v27[v11];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero(v27, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v27 = -1 << v26;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v27[v17];
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v16 = v27[v11];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_190A481CC();
      result = sub_190A47A40();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v9 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1908F6094()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1ECCB8);
  v3 = sub_190A48274();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v29 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v29;
                v28 = 1 << *(_BYTE *)(v2 + 32);
                if (v28 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v28;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      sub_190A487C0();
      v20 = *(id *)(v19 + 56);
      sub_190A48100();

      result = sub_190A48808();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1908F6358()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B4C0);
  v3 = sub_190A48274();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_190A487C0();
      sub_190A47B18();
      result = sub_190A48808();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1908F6634()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6B50);
  v3 = sub_190A48274();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      sub_190A487C0();
      sub_190A47908();
      result = sub_190A48808();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1908F68EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  _QWORD *v26;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E5E20);
  v2 = sub_190A48274();
  v3 = v2;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 1 << *(_BYTE *)(v1 + 32);
    v26 = (_QWORD *)(v1 + 56);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(v1 + 56);
    v25 = (unint64_t)(v4 + 63) >> 6;
    v7 = v2 + 56;
    result = swift_retain();
    v9 = 0;
    while (1)
    {
      if (v6)
      {
        v11 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        v12 = v11 | (v9 << 6);
      }
      else
      {
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v13 >= v25)
          goto LABEL_33;
        v14 = v26[v13];
        ++v9;
        if (!v14)
        {
          v9 = v13 + 1;
          if (v13 + 1 >= v25)
            goto LABEL_33;
          v14 = v26[v9];
          if (!v14)
          {
            v9 = v13 + 2;
            if (v13 + 2 >= v25)
              goto LABEL_33;
            v14 = v26[v9];
            if (!v14)
            {
              v15 = v13 + 3;
              if (v15 >= v25)
              {
LABEL_33:
                swift_release();
                v24 = 1 << *(_BYTE *)(v1 + 32);
                if (v24 > 63)
                  bzero(v26, ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v26 = -1 << v24;
                *(_QWORD *)(v1 + 16) = 0;
                break;
              }
              v14 = v26[v15];
              if (!v14)
              {
                while (1)
                {
                  v9 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_39;
                  if (v9 >= v25)
                    goto LABEL_33;
                  v14 = v26[v9];
                  ++v15;
                  if (v14)
                    goto LABEL_23;
                }
              }
              v9 = v15;
            }
          }
        }
LABEL_23:
        v6 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v9 << 6);
      }
      v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v12);
      sub_190A465D0();
      sub_1908AED38(&qword_1EE1E5DD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
      result = sub_190A47A40();
      v17 = -1 << *(_BYTE *)(v3 + 32);
      v18 = result & ~v17;
      v19 = v18 >> 6;
      if (((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6))) != 0)
      {
        v10 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v20 = 0;
        v21 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v21 && (v20 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v22 = v19 == v21;
          if (v19 == v21)
            v19 = 0;
          v20 |= v22;
          v23 = *(_QWORD *)(v7 + 8 * v19);
        }
        while (v23 == -1);
        v10 = __clz(__rbit64(~v23)) + (v19 << 6);
      }
      *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10) = v16;
      ++*(_QWORD *)(v3 + 16);
    }
  }
  result = swift_release();
  *v0 = v3;
  return result;
}

uint64_t sub_1908F6C00()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A3E0);
  result = sub_190A48274();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_190A487C0();
      sub_190A487CC();
      result = sub_190A48808();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_1908F6EA8(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_190A481CC();
  sub_190A47A40();
  result = sub_190A481FC();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_1908F6F50(uint64_t a1, uint64_t a2)
{
  id v4;
  unint64_t result;

  sub_190A487C0();
  v4 = *(id *)(a1 + 56);
  sub_190A48100();

  sub_190A48808();
  result = sub_190A481FC();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_1908F6FFC(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_190A465D0();
  sub_1908AED38(&qword_1EE1E5DD0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
  sub_190A47A40();
  result = sub_190A481FC();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1908F70CC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1908F5DBC();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1908F7BD4(&qword_1EE1ECD48);
      goto LABEL_12;
    }
    sub_1908F7F04();
  }
  v8 = *v3;
  sub_190A481CC();
  result = sub_190A47A40();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = ~v9;
    do
    {
      result = sub_190A47AAC();
      if ((result & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v10;
    }
    while (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v11 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * a2) = v5;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (!v13)
  {
    *(_QWORD *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_190A48748();
  __break(1u);
  return result;
}

uint64_t sub_1908F7254(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1908F6094();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_1908F7BD4((uint64_t *)&unk_1EE1ECCB8);
      goto LABEL_14;
    }
    sub_1908F81C8();
  }
  v9 = *v3;
  sub_190A487C0();
  v10 = *(id *)(v6 + 56);
  sub_190A48100();

  result = sub_190A48808();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = result & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    type metadata accessor for WidgetURLHandler();
    sub_1908AB890(0, (unint64_t *)&qword_1ECF6C5E0);
    swift_retain();
    v12 = sub_190A480F4();
    result = swift_release();
    if ((v12 & 1) != 0)
    {
LABEL_13:
      result = sub_190A48748();
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        swift_retain();
        v14 = sub_190A480F4();
        result = swift_release();
        if ((v14 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v15 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v15 + 48) + 8 * a2) = v6;
  v16 = *(_QWORD *)(v15 + 16);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    *(_QWORD *)(v15 + 16) = v18;
  return result;
}

uint64_t sub_1908F743C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1908F6358();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1908F7884();
      goto LABEL_22;
    }
    sub_1908F8460();
  }
  v11 = *v4;
  sub_190A487C0();
  sub_190A47B18();
  result = sub_190A48808();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_190A486DC(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_190A48748();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_190A486DC();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1908F75D4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1908F6634();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1908F7A34();
      goto LABEL_14;
    }
    sub_1908F870C();
  }
  v8 = *v3;
  sub_190A487C0();
  sub_190A47908();
  result = sub_190A48808();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    result = sub_190A478FC();
    if ((result & 1) != 0)
    {
LABEL_13:
      result = sub_190A48748();
      __break(1u);
    }
    else
    {
      v10 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v10;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        result = sub_190A478FC();
        if ((result & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v11 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * a2) = v5;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    *(_QWORD *)(v11 + 16) = v14;
  return result;
}

uint64_t sub_1908F772C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1908F6C00();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1908F7D74();
      goto LABEL_14;
    }
    sub_1908F8990();
  }
  v8 = *v3;
  sub_190A487C0();
  sub_190A487CC();
  result = sub_190A48808();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      result = sub_190A48748();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v10 + a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void *sub_1908F7878()
{
  return sub_1908F7BD4((uint64_t *)&unk_1EE1ECCB8);
}

void *sub_1908F7884()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B4C0);
  v2 = *v0;
  v3 = sub_190A48268();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1908F7A34()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6B50);
  v2 = *v0;
  v3 = sub_190A48268();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1908F7BC8()
{
  return sub_1908F7BD4(&qword_1EE1E5E20);
}

void *sub_1908F7BD4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_190A48268();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    result = (void *)swift_retain();
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1908F7D74()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A3E0);
  v2 = *v0;
  v3 = sub_190A48268();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1908F7F04()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECD48);
  v2 = sub_190A48274();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_35:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v24 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v25 = (unint64_t)(v4 + 63) >> 6;
  v7 = v2 + 56;
  result = swift_retain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v13 >= v25)
      goto LABEL_33;
    v14 = *(_QWORD *)(v24 + 8 * v13);
    ++v9;
    if (!v14)
    {
      v9 = v13 + 1;
      if (v13 + 1 >= v25)
        goto LABEL_33;
      v14 = *(_QWORD *)(v24 + 8 * v9);
      if (!v14)
      {
        v9 = v13 + 2;
        if (v13 + 2 >= v25)
          goto LABEL_33;
        v14 = *(_QWORD *)(v24 + 8 * v9);
        if (!v14)
          break;
      }
    }
LABEL_23:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v12);
    sub_190A481CC();
    swift_retain();
    result = sub_190A47A40();
    v17 = -1 << *(_BYTE *)(v3 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6))) != 0)
    {
      v10 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v20 = 0;
      v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v22 = v19 == v21;
        if (v19 == v21)
          v19 = 0;
        v20 |= v22;
        v23 = *(_QWORD *)(v7 + 8 * v19);
      }
      while (v23 == -1);
      v10 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10) = v16;
    ++*(_QWORD *)(v3 + 16);
  }
  v15 = v13 + 3;
  if (v15 >= v25)
  {
LABEL_33:
    result = swift_release_n();
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v24 + 8 * v15);
  if (v14)
  {
    v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v25)
      goto LABEL_33;
    v14 = *(_QWORD *)(v24 + 8 * v9);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1908F81C8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1ECCB8);
  v3 = sub_190A48274();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v29 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    sub_190A487C0();
    v20 = *(void **)(v19 + 56);
    swift_retain();
    v21 = v20;
    sub_190A48100();

    result = sub_190A48808();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v10 + 8 * (v23 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v10 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v10 + 8 * v24);
      }
      while (v28 == -1);
      v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v29;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1908F8460()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B4C0);
  v3 = sub_190A48274();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_190A487C0();
    swift_bridgeObjectRetain();
    sub_190A47B18();
    result = sub_190A48808();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1908F870C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6B50);
  v3 = sub_190A48274();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    sub_190A487C0();
    sub_190A47908();
    result = sub_190A48808();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1908F8990()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A3E0);
  result = sub_190A48274();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_190A487C0();
    sub_190A487CC();
    result = sub_190A48808();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1908F8C08(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_190A48484();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x19401351C](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

double sub_1908F8CC4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1908D3854(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1908FE100();
      v9 = v13;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_190A48400();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_190901E94((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_1908FB98C(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1908F8DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CD60);
    v2 = sub_190A484B4();
    v18 = v2;
    sub_190A4840C();
    v3 = sub_190A48430();
    if (v3)
    {
      v4 = v3;
      sub_190A481CC();
      do
      {
        swift_dynamicCast();
        type metadata accessor for WidgetEnvironment.AnyKey();
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_1908F9FB4(v12 + 1, 1);
          v2 = v18;
        }
        result = sub_190A47A40();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_190A48430();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

uint64_t sub_1908F8FFC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AF90);
  v6 = sub_190A484A8();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_190901E94(v24, v35);
      }
      else
      {
        sub_1908B3694((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_190A487C0();
      sub_190A47B18();
      result = sub_190A48808();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_190901E94(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1908F92F8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  char v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1E6700);
  result = sub_190A484A8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v42 = a2;
    v8 = 0;
    v44 = (uint64_t *)(v5 + 64);
    v45 = v5;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v39 = -1 << v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v40 = 1 << *(_BYTE *)(v5 + 32);
    v41 = v3;
    v43 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = (uint64_t)v44;
        if (v17 >= v43)
          goto LABEL_31;
        v18 = v44[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v43)
            goto LABEL_31;
          v18 = v44[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v43)
            {
LABEL_31:
              if ((v42 & 1) == 0)
              {
                result = swift_release();
                v3 = v41;
                goto LABEL_38;
              }
              if (v40 >= 64)
                bzero(v44, 8 * v43);
              else
                *v44 = v39;
              v3 = v41;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v44[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v8 >= v43)
                  goto LABEL_31;
                v18 = v44[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_QWORD *)(v5 + 56) + 88 * v16;
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
      v49 = *(_BYTE *)(v20 + 81);
      v50 = *(_BYTE *)(v20 + 82);
      v48 = *(_BYTE *)(v20 + 80);
      v46 = *(_QWORD *)(v20 + 64);
      v47 = *(_QWORD *)(v20 + 72);
      v22 = *(_BYTE *)(v20 + 61);
      v23 = *(_BYTE *)(v20 + 60);
      v24 = *(_QWORD *)(v20 + 52);
      v25 = *(_QWORD *)(v20 + 44);
      v26 = *(_BYTE *)(v20 + 40);
      v28 = *(_QWORD *)(v20 + 24);
      v27 = *(_QWORD *)(v20 + 32);
      v30 = *(_QWORD *)(v20 + 8);
      v29 = *(_QWORD *)(v20 + 16);
      v31 = *(_QWORD *)v20;
      result = sub_190A487B4();
      v32 = -1 << *(_BYTE *)(v7 + 32);
      v33 = result & ~v32;
      v34 = v33 >> 6;
      if (((-1 << v33) & ~*(_QWORD *)(v12 + 8 * (v33 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v12 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v35 = 0;
        v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v37 = v34 == v36;
          if (v34 == v36)
            v34 = 0;
          v35 |= v37;
          v38 = *(_QWORD *)(v12 + 8 * v34);
        }
        while (v38 == -1);
        v13 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v13) = v21;
      v14 = *(_QWORD *)(v7 + 56) + 88 * v13;
      *(_QWORD *)v14 = v31;
      *(_QWORD *)(v14 + 8) = v30;
      *(_QWORD *)(v14 + 16) = v29;
      *(_QWORD *)(v14 + 24) = v28;
      *(_QWORD *)(v14 + 32) = v27;
      *(_BYTE *)(v14 + 40) = v26;
      *(_QWORD *)(v14 + 44) = v25;
      *(_QWORD *)(v14 + 52) = v24;
      *(_BYTE *)(v14 + 60) = v23;
      *(_BYTE *)(v14 + 61) = v22;
      v5 = v45;
      *(_QWORD *)(v14 + 64) = v46;
      *(_QWORD *)(v14 + 72) = v47;
      *(_BYTE *)(v14 + 80) = v48;
      *(_BYTE *)(v14 + 81) = v49;
      *(_BYTE *)(v14 + 82) = v50;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1908F9644(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  _OWORD *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5A8);
  v6 = sub_190A484A8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_34;
      v20 = *(_QWORD *)(v33 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v20 = *(_QWORD *)(v33 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v23 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
    if ((a2 & 1) != 0)
    {
      sub_190901E94(v23, v34);
    }
    else
    {
      sub_1908B3694((uint64_t)v23, (uint64_t)v34);
      v24 = v22;
    }
    sub_190A487C0();
    type metadata accessor for CFString(0);
    sub_1908AED38((unint64_t *)&unk_1ECF6C588, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_190A4A29C);
    sub_190A46348();
    result = sub_190A48808();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v22;
    result = (uint64_t)sub_190901E94(v34, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v19 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1908F9968(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BFA8);
  v36 = a2;
  v6 = sub_190A484A8();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v35 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v20 = v19 | (v13 << 6);
      }
      else
      {
        v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v34)
          goto LABEL_33;
        v22 = v35[v21];
        ++v13;
        if (!v22)
        {
          v13 = v21 + 1;
          if (v21 + 1 >= v34)
            goto LABEL_33;
          v22 = v35[v13];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v34)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v36 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v35[v23];
            if (!v22)
            {
              while (1)
              {
                v13 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_40;
                if (v13 >= v34)
                  goto LABEL_33;
                v22 = v35[v13];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v13 = v23;
          }
        }
LABEL_30:
        v10 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      v28 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 24 * v20);
      v30 = *v28;
      v29 = v28[1];
      v31 = v28[2];
      v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
      if ((v36 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
      }
      sub_190A487C0();
      swift_bridgeObjectRetain();
      sub_190A47B18();
      swift_bridgeObjectRelease();
      result = sub_190A48808();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 24 * v17);
      *v18 = v30;
      v18[1] = v29;
      v18[2] = v31;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1908F9C8C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CD50);
  v37 = a2;
  v6 = sub_190A484A8();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v20 = v19 | (v13 << 6);
      }
      else
      {
        v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v35)
          goto LABEL_33;
        v22 = v36[v21];
        ++v13;
        if (!v22)
        {
          v13 = v21 + 1;
          if (v21 + 1 >= v35)
            goto LABEL_33;
          v22 = v36[v13];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v37 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v36[v23];
            if (!v22)
            {
              while (1)
              {
                v13 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_40;
                if (v13 >= v35)
                  goto LABEL_33;
                v22 = v36[v13];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v13 = v23;
          }
        }
LABEL_30:
        v10 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      v28 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 24 * v20);
      v30 = *v28;
      v29 = v28[1];
      v31 = v28[2];
      v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
      if ((v37 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        v33 = v32;
      }
      sub_190A487C0();
      swift_bridgeObjectRetain();
      sub_190A47B18();
      swift_bridgeObjectRelease();
      result = sub_190A48808();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 24 * v17);
      *v18 = v30;
      v18[1] = v29;
      v18[2] = v31;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1908F9FB4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CD60);
  v35 = a2;
  v6 = sub_190A484A8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v33 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v33)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v34 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v33)
        goto LABEL_33;
      v23 = *(_QWORD *)(v34 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v33)
        {
LABEL_33:
          swift_release();
          if ((v35 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v34 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v33)
              goto LABEL_33;
            v23 = *(_QWORD *)(v34 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = 8 * v20;
    v30 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v29);
    v31 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v29);
    if ((v35 & 1) == 0)
    {
      swift_retain();
      swift_retain();
    }
    sub_190A481CC();
    result = sub_190A47A40();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 8 * v17;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v31;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v35 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1908FA2CC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CD58);
  v36 = a2;
  v6 = sub_190A484A8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_190A487C0();
    sub_190A47B18();
    result = sub_190A48808();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1908FA5E0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A6F0);
  result = sub_190A484A8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v34 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v33)
          goto LABEL_31;
        v18 = v34[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v33)
            goto LABEL_31;
          v18 = v34[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v33)
            {
LABEL_31:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v32;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v8 >= v33)
                  goto LABEL_31;
                v18 = v34[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
      v21 = *(_QWORD *)(v5 + 56) + 24 * v16;
      v23 = *(_QWORD *)(v21 + 8);
      v22 = *(_QWORD *)(v21 + 16);
      v24 = *(_BYTE *)v21;
      sub_190A487C0();
      sub_190A487CC();
      result = sub_190A48808();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v13 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v13) = v20;
      v14 = *(_QWORD *)(v7 + 56) + 24 * v13;
      *(_BYTE *)v14 = v24;
      *(_QWORD *)(v14 + 8) = v23;
      *(_QWORD *)(v14 + 16) = v22;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1908FA8C4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A3C8);
  v38 = a2;
  v6 = sub_190A484A8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_190A487C0();
    sub_190A47B18();
    result = sub_190A48808();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1908FABD0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void *v33;
  id v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  __int128 v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A4C0);
  v6 = sub_190A484A8();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v37 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v21 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v22 = v21 | (v13 << 6);
      }
      else
      {
        v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v36)
          goto LABEL_33;
        v24 = v37[v23];
        ++v13;
        if (!v24)
        {
          v13 = v23 + 1;
          if (v23 + 1 >= v36)
            goto LABEL_33;
          v24 = v37[v13];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v5 + 32);
                if (v35 >= 64)
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v35;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v37[v25];
            if (!v24)
            {
              while (1)
              {
                v13 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v13 >= v36)
                  goto LABEL_33;
                v24 = v37[v13];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v13 = v25;
          }
        }
LABEL_30:
        v10 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v13 << 6);
      }
      v30 = 16 * v22;
      v31 = *(_QWORD *)(v5 + 48) + v30;
      v32 = *(_BYTE *)v31;
      v33 = *(void **)(v31 + 8);
      v38 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((a2 & 1) == 0)
        v34 = v33;
      sub_190A487C0();
      sub_190A487CC();
      v14 = v33;
      sub_190A48100();

      result = sub_190A48808();
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v11 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = *(_QWORD *)(v7 + 48) + v19;
      *(_BYTE *)v20 = v32;
      *(_QWORD *)(v20 + 8) = v14;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + v19) = v38;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1908FAEE0(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v3 = v2;
  v5 = type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1ECCD0);
  v10 = (_QWORD *)sub_190A484A8();
  if (*(_QWORD *)(v9 + 16))
  {
    v27 = v3;
    v11 = 1 << *(_BYTE *)(v9 + 32);
    v12 = (_QWORD *)(v9 + 64);
    v13 = -1;
    if (v11 < 64)
      v13 = ~(-1 << v11);
    v14 = v13 & *(_QWORD *)(v9 + 64);
    v15 = (unint64_t)(v11 + 63) >> 6;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v20 = v19 | (v17 << 6);
      }
      else
      {
        v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v21 >= v15)
          goto LABEL_23;
        v22 = v12[v21];
        ++v17;
        if (!v22)
        {
          v17 = v21 + 1;
          if (v21 + 1 >= v15)
            goto LABEL_23;
          v22 = v12[v17];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v27;
                goto LABEL_30;
              }
              v25 = 1 << *(_BYTE *)(v9 + 32);
              if (v25 >= 64)
                bzero((void *)(v9 + 64), ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v12 = -1 << v25;
              v3 = v27;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v22 = v12[v23];
            if (!v22)
            {
              while (1)
              {
                v17 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_32;
                if (v17 >= v15)
                  goto LABEL_23;
                v22 = v12[v17];
                ++v23;
                if (v22)
                  goto LABEL_20;
              }
            }
            v17 = v23;
          }
        }
LABEL_20:
        v14 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      v24 = *(_QWORD *)(v9 + 48) + *(_QWORD *)(v6 + 72) * v20;
      if ((a2 & 1) != 0)
      {
        sub_1908BD0B4(v24, (uint64_t)v8, type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey);
        v18 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v20);
      }
      else
      {
        sub_1908D4424(v24, (uint64_t)v8);
        v18 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v20);
        swift_bridgeObjectRetain();
      }
      result = sub_1908FC948((uint64_t)v8, v18, v10);
    }
  }
  result = swift_release();
LABEL_30:
  *v3 = v10;
  return result;
}

uint64_t sub_1908FB13C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  int v39;
  _OWORD v40[2];

  v3 = v2;
  v5 = sub_190A48400();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF680A0);
  v39 = a2;
  v10 = sub_190A484A8();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v38 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v36 = v2;
  v37 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = v38;
    v24 = v38[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_34;
      v24 = v38[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v38[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v37)
              goto LABEL_34;
            v24 = v38[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v39 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_190901E94((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v21), v40);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_1908B3694(*(_QWORD *)(v9 + 56) + 32 * v21, (uint64_t)v40);
    }
    result = sub_190A47A40();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = (uint64_t)sub_190901E94(v40, (_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v19));
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = v38;
  if ((v39 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1908FB4C0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A3E8);
  result = sub_190A484A8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v29)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v29)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v29)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_190A487C0();
      sub_190A487CC();
      result = sub_190A48808();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

unint64_t sub_1908FB790(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 *v13;
  __int128 v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_190A481F0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_190A487C0();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_190A47B18();
        v9 = sub_190A48808();
        swift_bridgeObjectRelease();
        result = swift_release();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = v11 + 24 * v3;
          v13 = (__int128 *)(v11 + 24 * v6);
          if (v3 != v6 || v12 >= (unint64_t)v13 + 24)
          {
            v14 = *v13;
            *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
            *(_OWORD *)v12 = v14;
          }
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_QWORD *)(v15 + 8 * v3);
          v17 = (_QWORD *)(v15 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
          {
            *v16 = *v17;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1908FB98C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;

  v4 = sub_190A48400();
  v36 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_190A481F0();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v35 = (result + 1) & v11;
      v12 = *(_QWORD *)(v36 + 72);
      v34 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v34(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        v18 = sub_190A47A40();
        result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v35)
        {
          if (v19 >= v35 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v12 = v15;
              v13 = v17;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_OWORD *)(v23 + 32 * a1);
            v25 = (_OWORD *)(v23 + 32 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 2))
            {
              v26 = v25[1];
              *v24 = *v25;
              v24[1] = v26;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v35 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v27 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v27;
    v29 = (-1 << a1) - 1;
  }
  else
  {
    v27 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v27;
    v28 = (-1 << a1) - 1;
  }
  *v27 = v29 & v28;
  v30 = *(_QWORD *)(a2 + 16);
  v31 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_1908FBC10(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1908D2C98(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_190901E94(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1908FCD60();
      goto LABEL_7;
    }
    sub_1908F8FFC(v15, a4 & 1);
    v21 = sub_1908D2C98(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1908FCAB8(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_190A48754();
  __break(1u);
  return result;
}

uint64_t sub_1908FBD40(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  char v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1908D2D48(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = sub_1908FCF44();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7] + 88 * v10;
      v18 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)(v17 + 32) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v17 + 48) = v18;
      *(_OWORD *)(v17 + 64) = *(_OWORD *)(a1 + 64);
      *(_DWORD *)(v17 + 79) = *(_DWORD *)(a1 + 79);
      v19 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)v17 = *(_OWORD *)a1;
      *(_OWORD *)(v17 + 16) = v19;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_QWORD *)(v16[6] + 8 * v10) = a2;
    v21 = v16[7] + 88 * v10;
    v22 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)v21 = *(_OWORD *)a1;
    *(_OWORD *)(v21 + 16) = v22;
    *(_DWORD *)(v21 + 79) = *(_DWORD *)(a1 + 79);
    v23 = *(_OWORD *)(a1 + 64);
    v24 = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v21 + 48) = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v21 + 64) = v23;
    *(_OWORD *)(v21 + 32) = v24;
    v25 = v16[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      v16[2] = v27;
      return result;
    }
    goto LABEL_14;
  }
  sub_1908F92F8(result, a3 & 1);
  result = sub_1908D2D48(a2);
  if ((v14 & 1) == (v20 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_190A48754();
  __break(1u);
  return result;
}

_OWORD *sub_1908FBEB0(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1908D371C((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_OWORD *)(v15[7] + 32 * v9);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
        return sub_190901E94(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1908FD128();
      goto LABEL_7;
    }
    sub_1908F9644(v12, a3 & 1);
    v18 = sub_1908D371C((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1908FCB20(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for CFString(0);
  result = (_OWORD *)sub_190A48754();
  __break(1u);
  return result;
}

uint64_t sub_1908FBFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v6 = v5;
  v12 = *v5;
  v14 = sub_1908D45AC(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= result && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= result && (a5 & 1) == 0)
  {
    result = (uint64_t)sub_1908FD2EC();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v20[7] + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v22 = (_QWORD *)(v20[6] + 24 * v14);
    *v22 = a2;
    v22[1] = a3;
    v22[2] = a4;
    *(_QWORD *)(v20[7] + 8 * v14) = a1;
    v23 = v20[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v20[2] = v25;
      swift_retain();
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1908F9968(result, a5 & 1);
  result = sub_1908D45AC(a3, a4);
  if ((v18 & 1) == (v21 & 1))
  {
    v14 = result;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_190A48754();
  __break(1u);
  return result;
}

void sub_1908FC140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v6 = v5;
  v12 = *v5;
  v14 = sub_1908D45AC(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1908FD4AC();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];

      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v24 = (_QWORD *)(v20[6] + 24 * v14);
    *v24 = a2;
    v24[1] = a3;
    v24[2] = a4;
    *(_QWORD *)(v20[7] + 8 * v14) = a1;
    v25 = v20[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      v20[2] = v27;
      swift_retain();
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_1908F9C8C(v17, a5 & 1);
  v22 = sub_1908D45AC(a3, a4);
  if ((v18 & 1) == (v23 & 1))
  {
    v14 = v22;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_190A48754();
  __break(1u);
}

uint64_t sub_1908FC2BC(char a1, uint64_t a2, char a3, double a4, double a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_1908D37A4(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= result && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7] + 24 * v14;
        *(_BYTE *)v21 = a1;
        *(double *)(v21 + 8) = a4;
        *(double *)(v21 + 16) = a5;
        return result;
      }
      return sub_1908FCB84(v14, a2, a1, v20, a4, a5);
    }
    if (v19 >= result && (a3 & 1) == 0)
    {
      result = (uint64_t)sub_1908FD9D4();
      goto LABEL_7;
    }
    sub_1908FA5E0(result, a3 & 1);
    result = sub_1908D37A4(a2);
    if ((v18 & 1) == (v22 & 1))
    {
      v14 = result;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
      return sub_1908FCB84(v14, a2, a1, v20, a4, a5);
    }
  }
  type metadata accessor for CHSWidgetFamily(0);
  result = sub_190A48754();
  __break(1u);
  return result;
}

void sub_1908FC3EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1908D2C98(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1908FDB78();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_1908FA8C4(v15, a4 & 1);
  v20 = sub_1908D2C98(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_190A48754();
  __break(1u);
}

id sub_1908FC548(char a1, void *a2, char a3, double a4, double a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  id result;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  double *v20;
  char v21;

  v6 = (_QWORD **)v5;
  v11 = (_QWORD *)*v5;
  v13 = sub_1908D38A4(a1, a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  result = (id)(v14 + v15);
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = v11[3];
    if (v18 >= (uint64_t)result && (a3 & 1) != 0)
    {
LABEL_7:
      v19 = *v6;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v20 = (double *)(v19[7] + 16 * v13);
        *v20 = a4;
        v20[1] = a5;
        return result;
      }
      goto LABEL_11;
    }
    if (v18 >= (uint64_t)result && (a3 & 1) == 0)
    {
      result = sub_1908FDD28();
      goto LABEL_7;
    }
    sub_1908FABD0((uint64_t)result, a3 & 1);
    result = (id)sub_1908D38A4(a1, a2);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = (unint64_t)result;
      v19 = *v6;
      if ((v17 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1908FCBD4(v13, a1, (uint64_t)a2, v19, a4, a5);
      return a2;
    }
  }
  result = (id)sub_190A48754();
  __break(1u);
  return result;
}

uint64_t sub_1908FC678(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_1908D391C(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    v19 = *v4;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_1908FDED8();
    goto LABEL_7;
  }
  sub_1908FAEE0(v16, a3 & 1);
  v22 = sub_1908D391C(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    result = sub_190A48754();
    __break(1u);
    return result;
  }
  v13 = v22;
  v19 = *v4;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_1908D4424(a2, (uint64_t)v10);
  return sub_1908FCC28(v13, (uint64_t)v10, a1, v19);
}

_OWORD *sub_1908FC7CC(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _OWORD *v21;
  _OWORD *result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_190A48400();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1908D3854(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (_OWORD *)(v20[7] + 32 * v14);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
        return sub_190901E94(a1, v21);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1908FE100();
      goto LABEL_7;
    }
    sub_1908FB13C(v17, a3 & 1);
    v23 = sub_1908D3854(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1908FCCC0(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = (_OWORD *)sub_190A48754();
  __break(1u);
  return result;
}

uint64_t sub_1908FC948(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  os_unfair_lock_s *v10;
  id v11;
  unint64_t v12;
  uint64_t result;

  sub_190A487C0();
  sub_190A46084();
  sub_1908AED38(&qword_1EE1EC910, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_190A47A4C();
  v6 = type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  v7 = (_QWORD *)(a1 + *(int *)(v6 + 20));
  v8 = *v7;
  v9 = (void *)v7[1];
  v10 = *(os_unfair_lock_s **)(*v7 + 16);
  swift_retain_n();
  v11 = v9;
  os_unfair_lock_lock(v10);
  WidgetEnvironment.Storage.hash.getter();
  sub_190A487CC();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));

  swift_release_n();
  sub_190A48808();
  v12 = sub_190A481FC();
  *(_QWORD *)((char *)a3 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v12;
  result = sub_1908BD0B4(a1, a3[6] + *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v12, type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey);
  *(_QWORD *)(a3[7] + 8 * v12) = a2;
  ++a3[2];
  return result;
}

_OWORD *sub_1908FCAB8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_190901E94(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

_OWORD *sub_1908FCB20(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_190901E94(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_1908FCB84(unint64_t result, uint64_t a2, char a3, _QWORD *a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a4[6] + 8 * result) = a2;
  v6 = a4[7] + 24 * result;
  *(_BYTE *)v6 = a3;
  *(double *)(v6 + 8) = a5;
  *(double *)(v6 + 16) = a6;
  v7 = a4[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    a4[2] = v9;
  return result;
}

unint64_t sub_1908FCBD4(unint64_t result, char a2, uint64_t a3, _QWORD *a4, double a5, double a6)
{
  uint64_t v6;
  double *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(result >> 6) + 8] |= 1 << result;
  v6 = a4[6] + 16 * result;
  *(_BYTE *)v6 = a2;
  *(_QWORD *)(v6 + 8) = a3;
  v7 = (double *)(a4[7] + 16 * result);
  *v7 = a5;
  v7[1] = a6;
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

uint64_t sub_1908FCC28(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  result = sub_1908BD0B4(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

_OWORD *sub_1908FCCC0(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  _OWORD *result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_190A48400();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  result = sub_190901E94(a3, (_OWORD *)(a4[7] + 32 * a1));
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

void *sub_1908FCD60()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AF90);
  v2 = *v0;
  v3 = sub_190A4849C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1908B3694(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_190901E94(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_1908FCF44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  unint64_t v34;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1E6700);
  v2 = *v0;
  v3 = sub_190A4849C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = swift_release();
    *v1 = v4;
    return result;
  }
  result = v3 + 64;
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || result >= v2 + 64 + 8 * v7)
    result = (unint64_t)memmove((void *)result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v31 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v13)
      goto LABEL_26;
    v32 = *(_QWORD *)(v6 + 8 * v31);
    ++v9;
    if (!v32)
    {
      v9 = v31 + 1;
      if (v31 + 1 >= v13)
        goto LABEL_26;
      v32 = *(_QWORD *)(v6 + 8 * v9);
      if (!v32)
        break;
    }
LABEL_25:
    v34 = __clz(__rbit64(v32));
    v12 = (v32 - 1) & v32;
    v15 = v34 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 88 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)(v19 + 32);
    v21 = *(_BYTE *)(v19 + 40);
    v22 = *(_BYTE *)(v19 + 60);
    result = *(unsigned __int8 *)(v19 + 61);
    v23 = *(_BYTE *)(v19 + 80);
    v24 = *(_BYTE *)(v19 + 81);
    v25 = *(_BYTE *)(v19 + 82);
    v26 = *(_OWORD *)(v19 + 64);
    v27 = *(_OWORD *)(v19 + 44);
    v28 = *(_OWORD *)v19;
    v29 = *(_OWORD *)(v19 + 16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v30 = *(_QWORD *)(v4 + 56) + v18;
    *(_OWORD *)v30 = v28;
    *(_OWORD *)(v30 + 16) = v29;
    *(_QWORD *)(v30 + 32) = v20;
    *(_BYTE *)(v30 + 40) = v21;
    *(_OWORD *)(v30 + 44) = v27;
    *(_BYTE *)(v30 + 60) = v22;
    *(_BYTE *)(v30 + 61) = result;
    *(_OWORD *)(v30 + 64) = v26;
    *(_BYTE *)(v30 + 80) = v23;
    *(_BYTE *)(v30 + 81) = v24;
    *(_BYTE *)(v30 + 82) = v25;
  }
  v33 = v31 + 2;
  if (v33 >= v13)
    goto LABEL_26;
  v32 = *(_QWORD *)(v6 + 8 * v33);
  if (v32)
  {
    v9 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v32 = *(_QWORD *)(v6 + 8 * v9);
    ++v33;
    if (v32)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1908FD128()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5A8);
  v2 = *v0;
  v3 = sub_190A4849C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_1908B3694(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_190901E94(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1908FD2EC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BFA8);
  v2 = *v0;
  v3 = sub_190A4849C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 24 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = v17[2];
    v21 = 8 * v15;
    v22 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v21);
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v18;
    v23[1] = v19;
    v23[2] = v20;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v21) = v22;
    swift_retain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1908FD4AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CD50);
  v2 = *v0;
  v3 = sub_190A4849C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 24 * v15);
    v18 = v17[1];
    v19 = v17[2];
    v20 = 8 * v15;
    v21 = *(void **)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = *v17;
    v22[1] = v18;
    v22[2] = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    swift_retain();
    swift_bridgeObjectRetain();
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1908FD678()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CD60);
  v2 = *v0;
  v3 = sub_190A4849C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    swift_retain();
    result = (void *)swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1908FD820()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CD58);
  v2 = *v0;
  v3 = sub_190A4849C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1908FD9D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A6F0);
  v2 = *v0;
  v3 = sub_190A4849C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v26 = __clz(__rbit64(v24));
    v12 = (v24 - 1) & v24;
    v15 = v26 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 24 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_BYTE *)v19;
    v21 = *(_OWORD *)(v19 + 8);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v18;
    *(_BYTE *)v22 = v20;
    *(_OWORD *)(v22 + 8) = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1908FDB78()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A3C8);
  v2 = *v0;
  v3 = sub_190A4849C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1908FDD28()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  __int128 v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A4C0);
  v2 = *v0;
  v3 = sub_190A4849C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_BYTE *)v17;
    v19 = *(void **)(v17 + 8);
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_BYTE *)v21 = v18;
    *(_QWORD *)(v21 + 8) = v19;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    result = v19;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1908FDED8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey(0);
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1ECCD0);
  v5 = *v0;
  v6 = sub_190A4849C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v9 + 8 * v12);
      if (!v23)
        break;
    }
LABEL_25:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v26 + 72) * v18;
    sub_1908D4424(*(_QWORD *)(v5 + 48) + v19, (uint64_t)v4);
    v20 = 8 * v18;
    v21 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
    sub_1908BD0B4((uint64_t)v4, *(_QWORD *)(v7 + 48) + v19, type metadata accessor for WidgetArchiver.ArchivingDelegate.SelectableRegionKey);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v9 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1908FE100()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _OWORD v26[2];

  v1 = v0;
  v2 = sub_190A48400();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF680A0);
  v6 = *v0;
  v7 = sub_190A4849C();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v24 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v25 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v25 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 32 * v18;
    sub_1908B3694(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v26);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    result = sub_190901E94(v26, (_OWORD *)(*(_QWORD *)(v8 + 56) + v20));
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1908FE33C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A3E8);
  v2 = *v0;
  v3 = sub_190A4849C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void (*sub_1908FE4DC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1908FE55C(v6, a2, a3);
  return sub_1908FE530;
}

void sub_1908FE530(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1908FE55C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x194013510](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_1908FE5C8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1908FE5C8()
{
  return swift_release();
}

uint64_t sub_1908FE5D0(_QWORD *a1)
{
  return sub_1908B918C(0, a1[2], 0, a1);
}

uint64_t sub_1908FE5E4(uint64_t a1)
{
  return sub_1908B95D0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1908FE5F8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

char *sub_1908FE680(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1908FE768(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  sub_190A481CC();
  v4 = (*(uint64_t (**)(void))(**(_QWORD **)(a1 + 16) + 104))();
  v5 = (*(uint64_t (**)(void))(**(_QWORD **)(a2 + 16) + 104))();
  v6 = MEMORY[0x1940133E4](v4, v5);
  swift_release();
  swift_release();
  if ((v6 & 1) != 0)
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(a1 + 24) + 16) + 96))(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 16)) & 1;
  else
    return 0;
}

uint64_t sub_1908FE81C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_1908FE840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;

  if (qword_1ECF6B730 != -1)
    swift_once();
  v1 = qword_1ECF6D7E0;
  v0 = *(_QWORD *)algn_1ECF6D7E8;
  v2 = qword_1ECF6D7F0;
  swift_retain();
  swift_bridgeObjectRetain();
  v3 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(1, v1, v0, v2, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B6E0 != -1)
    swift_once();
  v5 = qword_1ECF6D780;
  v6 = *(_QWORD *)algn_1ECF6D788;
  v7 = qword_1ECF6D790;
  swift_retain();
  swift_bridgeObjectRetain();
  v8 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(2, v5, v6, v7, v8);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B6F0 != -1)
    swift_once();
  v9 = qword_1ECF6D7A0;
  v10 = *(_QWORD *)algn_1ECF6D7A8;
  v11 = qword_1ECF6D7B0;
  swift_retain();
  swift_bridgeObjectRetain();
  v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(3, v9, v10, v11, v12);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B720 != -1)
    swift_once();
  v13 = qword_1ECF6D7C0;
  v14 = *(_QWORD *)algn_1ECF6D7C8;
  v15 = qword_1ECF6D7D0;
  swift_retain();
  swift_bridgeObjectRetain();
  v16 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(4, v13, v14, v15, v16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B590 != -1)
    swift_once();
  v17 = qword_1ECF6D688;
  v18 = unk_1ECF6D690;
  v19 = qword_1ECF6D698;
  swift_retain();
  swift_bridgeObjectRetain();
  v20 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(5, v17, v18, v19, v20);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B668 != -1)
    swift_once();
  v21 = qword_1ECF6D740;
  v22 = *(_QWORD *)algn_1ECF6D748;
  v23 = qword_1ECF6D750;
  swift_retain();
  swift_bridgeObjectRetain();
  v24 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(6, v21, v22, v23, v24);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B4E0 != -1)
    swift_once();
  v25 = qword_1ECF6D760;
  v26 = *(_QWORD *)algn_1ECF6D768;
  v27 = qword_1ECF6D770;
  swift_retain();
  swift_bridgeObjectRetain();
  v28 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(7, v25, v26, v27, v28);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B5F0 != -1)
    swift_once();
  v29 = qword_1ECF6D6C0;
  v30 = *(_QWORD *)algn_1ECF6D6C8;
  v31 = qword_1ECF6D6D0;
  swift_retain();
  swift_bridgeObjectRetain();
  v32 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(8, v29, v30, v31, v32);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B608 != -1)
    swift_once();
  v33 = qword_1ECF6D6E0;
  v34 = *(_QWORD *)algn_1ECF6D6E8;
  v35 = qword_1ECF6D6F0;
  swift_retain();
  swift_bridgeObjectRetain();
  v36 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(9, v33, v34, v35, v36);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6C918 != -1)
    swift_once();
  v37 = qword_1ECF6D8E0;
  v38 = *(_QWORD *)algn_1ECF6D8E8;
  v39 = qword_1ECF6D8F0;
  swift_retain();
  swift_bridgeObjectRetain();
  v40 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(10, v37, v38, v39, v40);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6C8E8 != -1)
    swift_once();
  v41 = qword_1ECF6D8C0;
  v42 = *(_QWORD *)algn_1ECF6D8C8;
  v43 = qword_1ECF6D8D0;
  swift_retain();
  swift_bridgeObjectRetain();
  v44 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(11, v41, v42, v43, v44);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6C930 != -1)
    swift_once();
  v45 = qword_1ECF6D920;
  v46 = *(_QWORD *)algn_1ECF6D928;
  v47 = qword_1ECF6D930;
  swift_retain();
  swift_bridgeObjectRetain();
  v48 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(12, v45, v46, v47, v48);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6C928 != -1)
    swift_once();
  v49 = qword_1ECF6D900;
  v50 = *(_QWORD *)algn_1ECF6D908;
  v51 = qword_1ECF6D910;
  swift_retain();
  swift_bridgeObjectRetain();
  v52 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(13, v49, v50, v51, v52);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B648 != -1)
    swift_once();
  v53 = qword_1ECF6D700;
  v54 = *(_QWORD *)algn_1ECF6D708;
  v55 = qword_1ECF6D710;
  swift_retain();
  swift_bridgeObjectRetain();
  v56 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(14, v53, v54, v55, v56);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B5E0 != -1)
    swift_once();
  v57 = qword_1ECF6D6A8;
  v58 = *(_QWORD *)byte_1ECF6D6B0;
  v59 = qword_1ECF6D6B8;
  swift_retain();
  swift_bridgeObjectRetain();
  v60 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(16, v57, v58, v59, v60);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B658 != -1)
    swift_once();
  v61 = qword_1ECF6D720;
  v62 = *(_QWORD *)algn_1ECF6D728;
  v63 = qword_1ECF6D730;
  swift_retain();
  swift_bridgeObjectRetain();
  v64 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(18, v61, v62, v63, v64);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B500 != -1)
    swift_once();
  v65 = qword_1ECF6D668;
  v66 = unk_1ECF6D670;
  v67 = qword_1ECF6D678;
  swift_retain();
  swift_bridgeObjectRetain();
  v68 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(19, v65, v66, v67, v68);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B348 != -1)
    swift_once();
  v69 = qword_1ECF6D5A8;
  v70 = unk_1ECF6D5B0;
  v71 = qword_1ECF6D5B8;
  swift_retain();
  swift_bridgeObjectRetain();
  v72 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(20, v69, v70, v71, v72);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B280 != -1)
    swift_once();
  v73 = qword_1ECF6D550;
  v74 = *(_QWORD *)algn_1ECF6D558;
  v75 = qword_1ECF6D560;
  swift_retain();
  swift_bridgeObjectRetain();
  v76 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(21, v73, v74, v75, v76);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B350 != -1)
    swift_once();
  v77 = qword_1ECF6D5C8;
  v78 = unk_1ECF6D5D0;
  v79 = qword_1ECF6D5D8;
  swift_retain();
  swift_bridgeObjectRetain();
  v80 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(22, v77, v78, v79, v80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B288 != -1)
    swift_once();
  v81 = qword_1ECF6D570;
  v82 = *(_QWORD *)algn_1ECF6D578;
  v83 = qword_1ECF6D580;
  swift_retain();
  swift_bridgeObjectRetain();
  v84 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(23, v81, v82, v83, v84);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B3B8 != -1)
    swift_once();
  v85 = qword_1ECF6D640;
  v86 = *(_QWORD *)algn_1ECF6D648;
  v87 = qword_1ECF6D650;
  swift_retain();
  swift_bridgeObjectRetain();
  v88 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(24, v85, v86, v87, v88);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B3A0 != -1)
    swift_once();
  v89 = qword_1ECF6D620;
  v90 = *(_QWORD *)algn_1ECF6D628;
  v91 = qword_1ECF6D630;
  swift_retain();
  swift_bridgeObjectRetain();
  v92 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(25, v89, v90, v91, v92);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B358 != -1)
    swift_once();
  v93 = qword_1ECF6D5E8;
  v94 = unk_1ECF6D5F0;
  v95 = qword_1ECF6D5F8;
  swift_retain();
  swift_bridgeObjectRetain();
  v96 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(26, v93, v94, v95, v96);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6B360 != -1)
    swift_once();
  v97 = qword_1ECF6D608;
  v98 = unk_1ECF6D610;
  v99 = qword_1ECF6D618;
  swift_retain();
  swift_bridgeObjectRetain();
  v100 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(27, v97, v98, v99, v100);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6AAC8 != -1)
    swift_once();
  v101 = qword_1ECF6D4B8;
  v102 = *(_QWORD *)byte_1ECF6D4C0;
  v103 = qword_1ECF6D4C8;
  swift_retain();
  swift_bridgeObjectRetain();
  v104 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(28, v101, v102, v103, v104);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ECF6A980 != -1)
    swift_once();
  v105 = qword_1ECF6D460;
  v106 = *(_QWORD *)algn_1ECF6D468;
  v107 = qword_1ECF6D470;
  swift_retain();
  swift_bridgeObjectRetain();
  v108 = swift_isUniquelyReferenced_nonNull_native();
  sub_1908FBFD0(29, v105, v106, v107, v108);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1908FF740(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_190A48484();
    swift_bridgeObjectRelease();
  }
  sub_190A481CC();
  result = sub_190A47DB8();
  v4 = result;
  v9 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v5 = sub_190A48484();
    result = swift_bridgeObjectRelease();
    if (!v5)
      return v4;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
      return v4;
  }
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v7 = MEMORY[0x194013510](i, a1);
      }
      else
      {
        v7 = *(_QWORD *)(a1 + 8 * i + 32);
        swift_retain();
      }
      sub_1908F4F0C(&v8, v7);
      swift_release();
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1908FF880(uint64_t a1)
{
  return sub_1908FF970(a1) & 1;
}

uint64_t sub_1908FF898@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1908FF90C();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

void sub_1908FF8E4(id *a1)
{
  EnvironmentValues._widgetDisplayProperties.setter(*a1);
}

unint64_t sub_1908FF90C()
{
  unint64_t result;

  result = qword_1ECF6B200;
  if (!qword_1ECF6B200)
  {
    result = MEMORY[0x19401429C](&unk_190A5CFB0, &_s37WidgetDisplayPropertiesEnvironmentKeyVN);
    atomic_store(result, (unint64_t *)&qword_1ECF6B200);
  }
  return result;
}

uint64_t type metadata accessor for WidgetEnvironment.Storage()
{
  return objc_opt_self();
}

uint64_t sub_1908FF970(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD v4[4];

  v2 = *(_QWORD *)(a1 + 8);
  v4[2] = *(_QWORD *)(v1 + 16);
  return sub_1908EE68C((uint64_t (*)(uint64_t *))sub_190903D54, (uint64_t)v4, v2) & 1;
}

uint64_t type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1ECF6C830);
}

uint64_t type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1ECF6C820);
}

uint64_t sub_1908FF9D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CD00);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1908FFAD8(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v4 = 0;
  v23 = a2 & 0xC000000000000001;
  v24 = result + 32;
  v22 = MEMORY[0x1E0DEE9D8];
  v5 = a2 + 56;
  v20 = *(_QWORD *)(result + 16);
  do
  {
    if (v4 <= v2)
      v6 = v2;
    else
      v6 = v4;
    v21 = v6;
    while (1)
    {
      if (v4 == v6)
      {
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v7 = *(_QWORD *)(v24 + 8 * v4);
      if (v7 >> 62)
      {
        swift_bridgeObjectRetain_n();
        result = sub_190A48484();
        ++v4;
        if (!result)
        {
LABEL_34:
          swift_bridgeObjectRelease();
          goto LABEL_28;
        }
      }
      else
      {
        v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
        result = swift_bridgeObjectRetain_n();
        ++v4;
        if (!v8)
          goto LABEL_34;
      }
      if ((v7 & 0xC000000000000001) != 0)
      {
        v9 = MEMORY[0x194013510](0, v7);
      }
      else
      {
        if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_39;
        v9 = *(_QWORD *)(v7 + 32);
        swift_retain();
      }
      v10 = swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))(**(_QWORD **)(v9 + 16) + 104))(v10);
      swift_release();
      if (!v23)
        break;
      swift_retain();
      v11 = sub_190A48238();
      swift_release_n();
      if ((v11 & 1) == 0)
        goto LABEL_28;
      result = swift_bridgeObjectRelease();
LABEL_23:
      if (v4 == v2)
        return v22;
    }
    if (*(_QWORD *)(a2 + 16))
    {
      sub_190A481CC();
      v12 = sub_190A47A40();
      v13 = -1 << *(_BYTE *)(a2 + 32);
      v14 = v12 & ~v13;
      if (((*(_QWORD *)(v5 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
      {
        v15 = ~v13;
        while ((sub_190A47AAC() & 1) == 0)
        {
          v14 = (v14 + 1) & v15;
          if (((*(_QWORD *)(v5 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
          {
            swift_release();
            v2 = v20;
            goto LABEL_28;
          }
        }
        swift_bridgeObjectRelease();
        result = swift_release();
        v2 = v20;
        v6 = v21;
        goto LABEL_23;
      }
    }
    swift_release();
LABEL_28:
    v16 = v22;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1908B8C34(0, *(_QWORD *)(v22 + 16) + 1, 1);
      v16 = v22;
    }
    v18 = *(_QWORD *)(v16 + 16);
    v17 = *(_QWORD *)(v16 + 24);
    v19 = v16;
    if (v18 >= v17 >> 1)
    {
      result = sub_1908B8C34(v17 > 1, v18 + 1, 1);
      v19 = v22;
    }
    *(_QWORD *)(v19 + 16) = v18 + 1;
    v22 = v19;
    *(_QWORD *)(v19 + 8 * v18 + 32) = v7;
  }
  while (v4 != v2);
  return v22;
}

uint64_t sub_1908FFDE4(uint64_t *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  unint64_t *v14;
  _QWORD v15[3];

  v4 = *a1;
  v3 = (void *)a1[1];
  v15[2] = MEMORY[0x1E0DEE9D8];
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = sub_1908EB19C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));

  swift_release_n();
  if ((a2 & 0xC000000000000001) != 0)
  {
    if (!sub_190A48214())
      goto LABEL_4;
    goto LABEL_3;
  }
  if (*(_QWORD *)(a2 + 16))
  {
LABEL_3:
    v7 = sub_1908FFAD8((uint64_t)v6, a2);
    swift_bridgeObjectRelease();
    v6 = (_QWORD *)v7;
  }
LABEL_4:
  swift_bridgeObjectRelease();
  v8 = v6[2];
  sub_1908EF604(0, v8);
  sub_1908F8C08(v8, 0);
  sub_190A47C74();
  v9 = MEMORY[0x1E0DEE9D8];
  if (!v8)
  {
LABEL_12:
    sub_190961670(v9);
    return (uint64_t)v6;
  }
  v15[0] = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_190A4837C();
  v10 = v6[4];
  if (v10 >> 62)
    goto LABEL_29;
  v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain_n();
  if (!v11)
    goto LABEL_30;
LABEL_7:
  if ((v10 & 0xC000000000000001) != 0)
  {
    while (1)
    {
      MEMORY[0x194013510](0, v10);
LABEL_10:
      swift_bridgeObjectRelease_n();
      sub_190A48358();
      sub_190A48388();
      sub_190A48394();
      v10 = (unint64_t)v15;
      sub_190A48364();
      v13 = v8 - 1;
      if (v8 == 1)
        break;
      v14 = v6 + 5;
      while (v13)
      {
        v10 = *v14;
        if (*v14 >> 62)
        {
          swift_bridgeObjectRetain_n();
          v8 = sub_190A48484();
          swift_bridgeObjectRelease();
          if (!v8)
            goto LABEL_30;
        }
        else
        {
          v8 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (!v8)
            goto LABEL_30;
        }
        if ((v10 & 0xC000000000000001) != 0)
        {
          v8 = MEMORY[0x194013510](0, v10);
        }
        else
        {
          if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_28;
          v8 = *(_QWORD *)(v10 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease_n();
        sub_190A48358();
        sub_190A48388();
        sub_190A48394();
        v10 = (unint64_t)v15;
        sub_190A48364();
        ++v14;
        if (!--v13)
          goto LABEL_11;
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      swift_bridgeObjectRetain_n();
      result = sub_190A48484();
      if (result)
        goto LABEL_7;
LABEL_30:
      swift_bridgeObjectRelease();
      __break(1u);
    }
LABEL_11:
    v9 = v15[0];
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1909000EC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1908D45AC(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1908FD4AC();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  swift_release();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1908FB790(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1909001C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1909002B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  void *v5;
  void *v6;
  uint64_t result;
  uint64_t v9;
  uint64_t (*v11)(_BYTE *);
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v25[24];
  uint64_t v26;
  uint64_t v27;

  v6 = v5;
  result = MEMORY[0x1E0DEE9D8];
  v27 = MEMORY[0x1E0DEE9D8];
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v11 = *(uint64_t (**)(_BYTE *))(**(_QWORD **)(a2 + 16) + 128);
    swift_bridgeObjectRetain();
    v12 = 0;
    v20 = v9;
    v21 = a1;
    do
    {
      v13 = *(_BYTE *)(a1 + v12 + 32);
      v26 = a4;
      v25[0] = v13;
      v14 = v11(v25);
      if (v6)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
        v6 = 0;
      }
      else
      {
        v15 = v14;
        v16 = a4;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
        type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
        v17 = swift_allocObject();
        __swift_instantiateConcreteTypeFromMangledName(a5);
        v18 = swift_allocObject();
        *(_QWORD *)(v18 + 16) = a3;
        *(_BYTE *)(v18 + 24) = v13;
        *(_QWORD *)(v18 + 32) = a2;
        *(_QWORD *)(v17 + 16) = v18;
        *(_QWORD *)(v17 + 24) = v15;
        swift_retain();
        v19 = swift_retain();
        MEMORY[0x194012E68](v19);
        if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_190A47C98();
        sub_190A47CD4();
        sub_190A47C74();
        a4 = v16;
        v9 = v20;
        a1 = v21;
      }
      ++v12;
    }
    while (v9 != v12);
    swift_bridgeObjectRelease();
    return v27;
  }
  return result;
}

uint64_t sub_190900448(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, uint64_t *a6)
{
  void *v6;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v26;
  uint64_t (*v30)(_QWORD *);
  unint64_t v31;
  _QWORD v32[4];
  uint64_t v33;

  v9 = v6;
  v10 = a1;
  v33 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_16;
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; v11 = sub_190A48484())
  {
    v31 = v10 & 0xC000000000000001;
    v30 = *(uint64_t (**)(_QWORD *))(**(_QWORD **)(a2 + 16) + 128);
    v12 = 4;
    v26 = v10;
    while (1)
    {
      v13 = v31 ? (id)MEMORY[0x194013510](v12 - 4, v10) : *(id *)(v10 + 8 * v12);
      v14 = v13;
      v15 = v12 - 3;
      if (__OFADD__(v12 - 4, 1))
        break;
      v32[3] = sub_1908AB890(0, a4);
      v32[0] = v14;
      v16 = v14;
      v17 = v30(v32);
      if (v9)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
        v9 = 0;
      }
      else
      {
        v18 = v17;
        v19 = v11;
        v20 = a4;
        v21 = a5;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
        type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
        v22 = swift_allocObject();
        __swift_instantiateConcreteTypeFromMangledName(a6);
        v23 = (_QWORD *)swift_allocObject();
        v23[2] = a3;
        v23[3] = v16;
        v23[4] = a2;
        *(_QWORD *)(v22 + 16) = v23;
        *(_QWORD *)(v22 + 24) = v18;
        swift_retain();
        v24 = swift_retain();
        MEMORY[0x194012E68](v24);
        if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_190A47C98();
        sub_190A47CD4();
        sub_190A47C74();
        a5 = v21;
        a4 = v20;
        v11 = v19;
        v10 = v26;
      }
      ++v12;
      if (v15 == v11)
      {
        swift_bridgeObjectRelease();
        return v33;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_190900684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t result;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  _QWORD *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  _BYTE v20[8];
  uint64_t v21;
  ValueMetadata *v22;
  uint64_t v23;

  v4 = v3;
  result = MEMORY[0x1E0DEE9D8];
  v23 = MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = *(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 16) + 128);
    swift_bridgeObjectRetain();
    v9 = (_QWORD *)(a1 + 40);
    v17 = v8;
    do
    {
      v10 = *((_BYTE *)v9 - 8);
      v11 = *v9;
      v20[0] = v10;
      v22 = &type metadata for WidgetRenderScheme;
      v21 = v11;
      v12 = v8(v20);
      if (v4)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
        v4 = 0;
      }
      else
      {
        v13 = v12;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
        type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
        v14 = swift_allocObject();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF69BF8);
        v15 = swift_allocObject();
        *(_QWORD *)(v15 + 16) = a3;
        *(_BYTE *)(v15 + 24) = v10;
        *(_QWORD *)(v15 + 32) = v11;
        *(_QWORD *)(v15 + 40) = a2;
        *(_QWORD *)(v14 + 16) = v15;
        *(_QWORD *)(v14 + 24) = v13;
        swift_retain();
        v16 = swift_retain();
        MEMORY[0x194012E68](v16);
        if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_190A47C98();
        sub_190A47CD4();
        sub_190A47C74();
        v8 = v17;
      }
      v9 += 2;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    return v23;
  }
  return result;
}

uint64_t sub_190900814(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 80 * a1 + 32;
    v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_190A484CC();
  __break(1u);
  return result;
}

char *sub_190900908(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1909009F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t *a5)
{
  void *v5;
  void *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t *boxed_opaque_existential_1;
  void (*v22)(uint64_t *, uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45[4];
  uint64_t v46;

  v40 = a3;
  v41 = a5;
  v6 = v5;
  v9 = a4(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v39 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v38 = (char *)&v33 - v13;
  result = MEMORY[0x1E0DEE9D8];
  v46 = MEMORY[0x1E0DEE9D8];
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v16 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v37 = a2;
    v17 = *(_QWORD *)(a2 + 16);
    v18 = *(uint64_t (**)(_QWORD))(*(_QWORD *)v17 + 128);
    v19 = *(_QWORD *)(v10 + 72);
    v33 = a1;
    v20 = v19;
    swift_bridgeObjectRetain();
    v35 = v18;
    v36 = v17;
    v34 = v20;
    do
    {
      v45[3] = v9;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v45);
      v22 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16);
      v22(boxed_opaque_existential_1, v16, v9);
      v23 = v18(v45);
      if (v6)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
        v6 = 0;
      }
      else
      {
        v43 = v23;
        v44 = 0;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
        v24 = v38;
        v22((uint64_t *)v38, v16, v9);
        type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
        v42 = swift_allocObject();
        v25 = v9;
        v26 = v39;
        v22((uint64_t *)v39, (uint64_t)v24, v25);
        __swift_instantiateConcreteTypeFromMangledName(v41);
        v27 = (_QWORD *)swift_allocObject();
        v27[2] = v40;
        v22((_QWORD *)((char *)v27 + *(_QWORD *)(*v27 + 160)), (uint64_t)v26, v25);
        *(_QWORD *)((char *)v27 + *(_QWORD *)(*v27 + 168)) = v37;
        swift_retain();
        swift_retain();
        v28 = *(void (**)(char *, uint64_t))(v10 + 8);
        v29 = v26;
        v9 = v25;
        v30 = v42;
        v28(v29, v9);
        v31 = ((uint64_t (*)(char *, uint64_t))v28)(v24, v9);
        v32 = v43;
        *(_QWORD *)(v30 + 16) = v27;
        *(_QWORD *)(v30 + 24) = v32;
        MEMORY[0x194012E68](v31);
        if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_190A47C98();
        sub_190A47CD4();
        sub_190A47C74();
        v6 = v44;
        v18 = v35;
        v20 = v34;
      }
      v16 += v20;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    return v46;
  }
  return result;
}

uint64_t sub_190900C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  uint64_t *v18;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[4];
  uint64_t v40;

  v4 = v3;
  v37 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40);
  v8 = MEMORY[0x1E0C80A78](v7);
  v36 = (uint64_t)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v35 = (uint64_t)&v29 - v11;
  result = MEMORY[0x1E0DEE9D8];
  v40 = MEMORY[0x1E0DEE9D8];
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v34 = a2;
    v15 = *(_QWORD *)(a2 + 16);
    v16 = *(uint64_t (**)(_QWORD))(*(_QWORD *)v15 + 128);
    v17 = *(_QWORD *)(v10 + 72);
    v29 = a1;
    swift_bridgeObjectRetain();
    v18 = &qword_1ECF6AE40;
    v32 = v15;
    v33 = v7;
    v30 = v17;
    v31 = v16;
    do
    {
      v39[3] = v7;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v39);
      sub_1908AAA48(v14, (uint64_t)boxed_opaque_existential_1, v18);
      v20 = v16(v39);
      if (v4)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
        v4 = 0;
      }
      else
      {
        v38 = v20;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
        v21 = v35;
        sub_1908AAA48(v14, v35, v18);
        type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
        v22 = swift_allocObject();
        v23 = v18;
        v24 = v36;
        sub_1908AAA48(v21, v36, v23);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF69A88);
        v25 = (_QWORD *)swift_allocObject();
        v25[2] = v37;
        sub_1908AAA48(v24, (uint64_t)v25 + *(_QWORD *)(*v25 + 160), v23);
        *(_QWORD *)((char *)v25 + *(_QWORD *)(*v25 + 168)) = v34;
        swift_retain();
        swift_retain();
        v26 = v24;
        v18 = v23;
        sub_1908AA544(v26, v23);
        v27 = sub_1908AA544(v21, v23);
        v28 = v38;
        *(_QWORD *)(v22 + 16) = v25;
        *(_QWORD *)(v22 + 24) = v28;
        MEMORY[0x194012E68](v27);
        if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_190A47C98();
        sub_190A47CD4();
        sub_190A47C74();
        v7 = v33;
        v17 = v30;
        v16 = v31;
      }
      v14 += v17;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    return v40;
  }
  return result;
}

uint64_t sub_190900F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t result;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *);
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD *);
  uint64_t *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v23[4];
  uint64_t v24;

  v4 = v3;
  result = MEMORY[0x1E0DEE9D8];
  v24 = MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = *(uint64_t (**)(_QWORD *))(**(_QWORD **)(a2 + 16) + 128);
    swift_bridgeObjectRetain();
    v9 = 0;
    v10 = &qword_1ECF6C650;
    v19 = v7;
    v20 = a1;
    do
    {
      v11 = *(_QWORD *)(a1 + 8 * v9 + 32);
      v23[3] = __swift_instantiateConcreteTypeFromMangledName(v10);
      v23[0] = v11;
      swift_retain_n();
      v12 = v8(v23);
      if (v4)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
        swift_release();
        v4 = 0;
      }
      else
      {
        v13 = v12;
        v14 = v8;
        v15 = v10;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
        type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
        v16 = swift_allocObject();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69A58);
        v17 = (_QWORD *)swift_allocObject();
        v17[2] = a3;
        v17[3] = v11;
        v17[4] = a2;
        *(_QWORD *)(v16 + 16) = v17;
        *(_QWORD *)(v16 + 24) = v13;
        swift_retain();
        v18 = swift_retain();
        MEMORY[0x194012E68](v18);
        if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_190A47C98();
        sub_190A47CD4();
        sub_190A47C74();
        v10 = v15;
        v8 = v14;
        v7 = v19;
        a1 = v20;
      }
      ++v9;
    }
    while (v7 != v9);
    swift_bridgeObjectRelease();
    return v24;
  }
  return result;
}

uint64_t sub_1909010C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t result;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  unint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  _QWORD v21[4];
  uint64_t v22;

  v4 = v3;
  result = MEMORY[0x1E0DEE9D8];
  v22 = MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = *(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 16) + 128);
    swift_bridgeObjectRetain();
    v9 = (unint64_t *)(a1 + 40);
    v10 = MEMORY[0x1E0CB0338];
    v18 = v8;
    do
    {
      v11 = *(v9 - 1);
      v12 = *v9;
      v21[3] = v10;
      v21[0] = v11;
      v21[1] = v12;
      sub_1908B53B8(v11, v12);
      sub_1908B53B8(v11, v12);
      v13 = v8(v21);
      if (v4)
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
        sub_1908B53FC(v11, v12);
        v4 = 0;
      }
      else
      {
        v14 = v13;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
        type metadata accessor for WidgetEnvironment.AnyKeyValueTuple();
        v15 = swift_allocObject();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF69A48);
        v16 = (_QWORD *)swift_allocObject();
        v16[2] = a3;
        v16[3] = v11;
        v16[4] = v12;
        v16[5] = a2;
        *(_QWORD *)(v15 + 16) = v16;
        *(_QWORD *)(v15 + 24) = v14;
        swift_retain();
        v17 = swift_retain();
        MEMORY[0x194012E68](v17);
        if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_190A47C98();
        sub_190A47CD4();
        sub_190A47C74();
        v8 = v18;
      }
      v9 += 2;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    return v22;
  }
  return result;
}

unint64_t sub_19090126C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _OWORD *i;
  uint64_t v5;
  char v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  __int128 v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A6F0);
    v3 = (_QWORD *)sub_190A484C0();
    for (i = (_OWORD *)(a1 + 48); ; i += 2)
    {
      v5 = *((_QWORD *)i - 2);
      v6 = *((_BYTE *)i - 8);
      v13 = *i;
      result = sub_1908D37A4(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      v9 = v3[7] + 24 * result;
      *(_BYTE *)v9 = v6;
      *(_OWORD *)(v9 + 8) = v13;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v3[2] = v12;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_190901360(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A3E8);
  v3 = (_QWORD *)sub_190A484C0();
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_1908D37FC(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_BYTE *)v8 - 8);
    v13 = *v8;
    swift_bridgeObjectRetain();
    result = sub_1908D37FC(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_190901460(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v5 = *(_QWORD *)v2;
  v6 = *(os_unfair_lock_s **)(*(_QWORD *)v2 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_1908E1684(v2, a2, a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  return swift_release();
}

uint64_t sub_1909014D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1908E1138();
  *a1 = result;
  return result;
}

uint64_t sub_19090150C@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_190901B18, a1);
}

uint64_t sub_190901520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, (void (*)(void))sub_190901B18);
}

uint64_t sub_190901534@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_190901B5C, a1);
}

uint64_t sub_190901548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, (void (*)(void))sub_190901B5C);
}

uint64_t sub_19090155C@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_190901AD4, a1);
}

uint64_t sub_190901570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, (void (*)(void))sub_190901AD4);
}

uint64_t sub_19090158C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_19090191C();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_1909015D8()
{
  sub_19090191C();
  return sub_190A46C48();
}

uint64_t sub_190901630@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_190901CCC, a1);
}

uint64_t sub_190901644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, (void (*)(void))sub_190901CCC);
}

uint64_t sub_190901658@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_190901D10, a1);
}

uint64_t sub_19090166C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, (void (*)(void))sub_190901D10);
}

uint64_t sub_190901680@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_5Tm((void (*)(void))sub_190901960, a1);
}

uint64_t sub_190901694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, (void (*)(void))sub_190901960);
}

uint64_t sub_1909016A8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46B7C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1909016D4()
{
  return sub_190A46B88();
}

uint64_t sub_1909016F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46B1C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_190901724()
{
  return sub_190A46B28();
}

uint64_t sub_190901748@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46B34();
  *a1 = result & 1;
  return result;
}

uint64_t sub_190901774()
{
  return sub_190A46B40();
}

uint64_t sub_190901798@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46B58();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1909017C4()
{
  return sub_190A46B64();
}

uint64_t sub_1909017E8()
{
  return sub_190A46AEC();
}

uint64_t sub_190901808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1908EADC8(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CDB2E0], MEMORY[0x1E0CDA7A0]);
}

uint64_t sub_19090182C()
{
  return sub_190A469B4();
}

uint64_t sub_19090184C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1908EADC8(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CD86F8], (uint64_t (*)(char *))MEMORY[0x1E0CDA4E8]);
}

uint64_t sub_190901870()
{
  return sub_190A46A74();
}

uint64_t sub_190901894()
{
  return sub_190A469FC();
}

uint64_t sub_1909018B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1908EADC8(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CDB388], (uint64_t (*)(char *))MEMORY[0x1E0CDA5C0]);
}

uint64_t sub_1909018D8()
{
  return sub_190A46A8C();
}

uint64_t sub_1909018F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1908EADC8(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CDA008], MEMORY[0x1E0CDA6B0]);
}

unint64_t sub_19090191C()
{
  unint64_t result;

  result = qword_1ECF6C840;
  if (!qword_1ECF6C840)
  {
    result = MEMORY[0x19401429C](&unk_190A4F850, &type metadata for WidgetFamilyKey);
    atomic_store(result, (unint64_t *)&qword_1ECF6C840);
  }
  return result;
}

unint64_t sub_190901960()
{
  unint64_t result;

  result = qword_1ECF6B128;
  if (!qword_1ECF6B128)
  {
    result = MEMORY[0x19401429C](&unk_190A55A50, &_s29DevelopmentModeEnvironmentKeyVN);
    atomic_store(result, (unint64_t *)&qword_1ECF6B128);
  }
  return result;
}

unint64_t sub_1909019AC()
{
  unint64_t result;

  result = qword_1ECF6C878;
  if (!qword_1ECF6C878)
  {
    result = MEMORY[0x19401429C](&unk_190A4D4C8, &type metadata for LocalizationsKey);
    atomic_store(result, (unint64_t *)&qword_1ECF6C878);
  }
  return result;
}

double sub_1909019F0@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_190901A40();
  sub_190A46C3C();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

unint64_t sub_190901A40()
{
  unint64_t result;

  result = qword_1ECF6C888;
  if (!qword_1ECF6C888)
  {
    result = MEMORY[0x19401429C](&unk_190A50B24, &type metadata for LocalizationTokenKey);
    atomic_store(result, (unint64_t *)&qword_1ECF6C888);
  }
  return result;
}

uint64_t sub_190901A84@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46AC8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_190901AB0()
{
  return sub_190A46AD4();
}

unint64_t sub_190901AD4()
{
  unint64_t result;

  result = qword_1ECF6BEA0;
  if (!qword_1ECF6BEA0)
  {
    result = MEMORY[0x19401429C](&unk_190A59950, &type metadata for ShowsWidgetLabelEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_1ECF6BEA0);
  }
  return result;
}

unint64_t sub_190901B18()
{
  unint64_t result;

  result = qword_1ECF69EA8;
  if (!qword_1ECF69EA8)
  {
    result = MEMORY[0x19401429C](&unk_190A52AB4, &_s40UserWantsWidgetDataWhenPasscodeLockedKeyVN);
    atomic_store(result, (unint64_t *)&qword_1ECF69EA8);
  }
  return result;
}

unint64_t sub_190901B5C()
{
  unint64_t result;

  result = qword_1ECF69EB0;
  if (!qword_1ECF69EB0)
  {
    result = MEMORY[0x19401429C](&unk_190A52A7C, &_s46UserWantsLiveActivityDataWhenPasscodeLockedKeyVN);
    atomic_store(result, (unint64_t *)&qword_1ECF69EB0);
  }
  return result;
}

uint64_t sub_190901BA0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_190901C00();
  result = sub_190A46C3C();
  *a1 = v3;
  return result;
}

uint64_t sub_190901BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, (void (*)(void))sub_190901C00);
}

unint64_t sub_190901C00()
{
  unint64_t result;

  result = qword_1EE1ECC30;
  if (!qword_1EE1ECC30)
  {
    result = MEMORY[0x19401429C](&unk_190A4EB1C, &type metadata for ActivityUpdateAvailabilityEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_1EE1ECC30);
  }
  return result;
}

unint64_t sub_190901C44()
{
  unint64_t result;

  result = qword_1ECF6B130;
  if (!qword_1ECF6B130)
  {
    result = MEMORY[0x19401429C](&unk_190A5EC34, &_s32WidgetRenderSchemeEnvironmentKeyVN);
    atomic_store(result, (unint64_t *)&qword_1ECF6B130);
  }
  return result;
}

unint64_t sub_190901C88()
{
  unint64_t result;

  result = qword_1ECF6B140;
  if (!qword_1ECF6B140)
  {
    result = MEMORY[0x19401429C](&unk_190A4C714, &_s50WidgetPreferredSystemBackgroundStyleEnvironmentKeyVN);
    atomic_store(result, (unint64_t *)&qword_1ECF6B140);
  }
  return result;
}

unint64_t sub_190901CCC()
{
  unint64_t result;

  result = qword_1ECF6B158;
  if (!qword_1ECF6B158)
  {
    result = MEMORY[0x19401429C](&unk_190A54378, &_s36WantsCustomFontsEmbeddedInArchiveKeyVN);
    atomic_store(result, (unint64_t *)&qword_1ECF6B158);
  }
  return result;
}

unint64_t sub_190901D10()
{
  unint64_t result;

  result = qword_1ECF6B150;
  if (!qword_1ECF6B150)
  {
    result = MEMORY[0x19401429C](&unk_190A5095C, &_s27EncodesPreciseTextLayoutKeyVN);
    atomic_store(result, (unint64_t *)&qword_1ECF6B150);
  }
  return result;
}

uint64_t sub_190901D54()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190901D78()
{
  return sub_190A46AE0();
}

uint64_t sub_190901D98()
{
  return sub_190A469CC();
}

uint64_t sub_190901DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1908EADC8(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CD8AA8], (uint64_t (*)(char *))MEMORY[0x1E0CDA580]);
}

uint64_t sub_190901DE4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46B70();
  *a1 = result & 1;
  return result;
}

uint64_t sub_190901E10@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46B04();
  *a1 = result & 1;
  return result;
}

uint64_t sub_190901E3C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46B10();
  *a1 = result & 1;
  return result;
}

uint64_t sub_190901E68@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190A46B4C();
  *a1 = result & 1;
  return result;
}

_OWORD *sub_190901E94(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_190901EA4()
{
  unint64_t result;

  result = qword_1ECF6CA40;
  if (!qword_1ECF6CA40)
  {
    result = MEMORY[0x19401429C](&unk_190A4C024, &type metadata for WidgetEnvironment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6CA40);
  }
  return result;
}

unint64_t sub_190901EE8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ECF6C7B8;
  if (!qword_1ECF6C7B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6C7B0);
    v3 = sub_1908AED38(&qword_1ECF6C7A0, v2, (uint64_t (*)(uint64_t))type metadata accessor for WidgetEnvironment.AnyValue, (uint64_t)&unk_190A4BFFC);
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEAF10], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1ECF6C7B8);
  }
  return result;
}

uint64_t type metadata accessor for WidgetEnvironment.AnyValue()
{
  return objc_opt_self();
}

unint64_t sub_190901F88()
{
  unint64_t result;

  result = qword_1EE1ECC38;
  if (!qword_1EE1ECC38)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetEnvironment.DifferenceUsage, &type metadata for WidgetEnvironment.DifferenceUsage);
    atomic_store(result, (unint64_t *)&qword_1EE1ECC38);
  }
  return result;
}

unint64_t sub_190901FD0()
{
  unint64_t result;

  result = qword_1EE1EADE0;
  if (!qword_1EE1EADE0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetEnvironment, &type metadata for WidgetEnvironment);
    atomic_store(result, (unint64_t *)&qword_1EE1EADE0);
  }
  return result;
}

uint64_t sub_190902014()
{
  return sub_1908AED38((unint64_t *)&unk_1EE1ECC48, 255, type metadata accessor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator, (uint64_t)&protocol conformance descriptor for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator);
}

uint64_t sub_19090204C()
{
  return 8;
}

_QWORD *sub_190902058(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_190902064(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_19090206C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_190902084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_19090209C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_1909020A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 80))();
}

uint64_t sub_1909020AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 88))();
}

_QWORD *initializeBufferWithCopyOfBuffer for WidgetEnvironment(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  v4 = v3;
  return a1;
}

void destroy for WidgetEnvironment(uint64_t a1)
{
  swift_release();

}

_QWORD *assignWithCopy for WidgetEnvironment(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for WidgetEnvironment(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_release();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetEnvironment(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetEnvironment()
{
  return &type metadata for WidgetEnvironment;
}

uint64_t storeEnumTagSinglePayload for WidgetEnvironment.DifferenceUsage(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190902280 + 4 * byte_190A4B105[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1909022B4 + 4 * byte_190A4B100[v4]))();
}

uint64_t sub_1909022B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909022BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909022C4);
  return result;
}

uint64_t sub_1909022D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909022D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1909022DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909022E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetEnvironment.DifferenceUsage()
{
  return &type metadata for WidgetEnvironment.DifferenceUsage;
}

uint64_t method lookup function for WidgetEnvironment.Storage()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetEnvironment.Storage.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of WidgetEnvironment.Storage.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t *initializeBufferWithCopyOfBuffer for WidgetEnvironment.EnvironmentValuesEnumerator(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = (void *)a2[1];
    a1[1] = (uint64_t)v6;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_190A46C30();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_retain();
    v12 = v6;
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t destroy for WidgetEnvironment.EnvironmentValuesEnumerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_190A46C30();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for WidgetEnvironment.EnvironmentValuesEnumerator(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  id v10;

  v4 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_190A46C30();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_retain();
  v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for WidgetEnvironment.EnvironmentValuesEnumerator(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = (void *)a2[1];
  v7 = (void *)a1[1];
  a1[1] = v6;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_190A46C30();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

_OWORD *initializeWithTake for WidgetEnvironment.EnvironmentValuesEnumerator(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_190A46C30();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for WidgetEnvironment.EnvironmentValuesEnumerator(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  swift_release();
  v6 = (void *)a1[1];
  a1[1] = a2[1];

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_190A46C30();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetEnvironment.EnvironmentValuesEnumerator()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for WidgetEnvironment.EnvironmentValuesEnumerator()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190902624()
{
  return sub_190902A80();
}

uint64_t *initializeBufferWithCopyOfBuffer for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_190A46C30();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t destroy for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_190A46C30();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_190A46C30();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_190A46C30();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_190A46C30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_190A46C30();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_190A46C30();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for WidgetEnvironment.EnvironmentValuesEnumerator.Iterator()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *__swift_store_extra_inhabitant_indexTm(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_190A46C30();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_190902A74()
{
  return sub_190902A80();
}

uint64_t sub_190902A80()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190A46C30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for WidgetEnvironment.AnyKey()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for WidgetEnvironment.AnyKey.StorageBase()
{
  return objc_opt_self();
}

uint64_t sub_190902B30()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for WidgetEnvironment.AnyKey.Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WidgetEnvironment.AnyKey.Storage);
}

uint64_t type metadata accessor for WidgetEnvironment.AnyValue.StorageBase()
{
  return objc_opt_self();
}

uint64_t sub_190902B90()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for WidgetEnvironment.AnyValue.Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WidgetEnvironment.AnyValue.Storage);
}

uint64_t type metadata accessor for WidgetEnvironment.AnyKeyValueTuple()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for WidgetEnvironment.AnyKeyValueTuple.StorageBase()
{
  return objc_opt_self();
}

uint64_t sub_190902C4C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for WidgetEnvironment.AnyKeyValueTuple.Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WidgetEnvironment.AnyKeyValueTuple.Storage);
}

uint64_t destroy for WidgetEnvironment.CartesianProductEnumerator(uint64_t a1)
{
  swift_release();

  return swift_bridgeObjectRelease();
}

_QWORD *_s9WidgetKit17WidgetEnvironmentV26CartesianProductEnumeratorVwCP_0(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  v4 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for WidgetEnvironment.CartesianProductEnumerator(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for WidgetEnvironment.CartesianProductEnumerator(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_release();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for WidgetEnvironment.CartesianProductEnumerator()
{
  return &type metadata for WidgetEnvironment.CartesianProductEnumerator;
}

uint64_t destroy for WidgetEnvironment.CartesianProductEnumerator.Iterator()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s9WidgetKit17WidgetEnvironmentV26CartesianProductEnumeratorV8IteratorVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for WidgetEnvironment.CartesianProductEnumerator.Iterator(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WidgetEnvironment.CartesianProductEnumerator.Iterator(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for WidgetEnvironment.CartesianProductEnumerator.Iterator()
{
  return &type metadata for WidgetEnvironment.CartesianProductEnumerator.Iterator;
}

uint64_t destroy for WidgetEnvironment.CodingKeys()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s9WidgetKit17WidgetEnvironmentV10CodingKeysVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for WidgetEnvironment.CodingKeys(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for WidgetEnvironment.CodingKeys(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9WidgetKit17WidgetEnvironmentV10CodingKeysVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1909030EC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetEnvironment.CodingKeys()
{
  return &type metadata for WidgetEnvironment.CodingKeys;
}

ValueMetadata *type metadata accessor for WidgetEnvironment.Storage.TupleValue()
{
  return &type metadata for WidgetEnvironment.Storage.TupleValue;
}

unint64_t sub_190903150()
{
  unint64_t result;

  result = qword_1ECF6CB78;
  if (!qword_1ECF6CB78)
  {
    result = MEMORY[0x19401429C](&unk_190A4BAF4, &type metadata for WidgetEnvironment.Storage.TupleValue);
    atomic_store(result, (unint64_t *)&qword_1ECF6CB78);
  }
  return result;
}

unint64_t sub_190903198()
{
  unint64_t result;

  result = qword_1ECF6CA30;
  if (!qword_1ECF6CA30)
  {
    result = MEMORY[0x19401429C](&unk_190A4BBA4, &type metadata for WidgetEnvironment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6CA30);
  }
  return result;
}

unint64_t sub_1909031E0()
{
  unint64_t result;

  result = qword_1EE1ECC58;
  if (!qword_1EE1ECC58)
  {
    result = MEMORY[0x19401429C](&unk_190A4BCA4, &type metadata for WidgetEnvironment.CartesianProductEnumerator.Iterator);
    atomic_store(result, (unint64_t *)&qword_1EE1ECC58);
  }
  return result;
}

uint64_t sub_190903224()
{
  return sub_1908AED38(&qword_1EE1ECC60, 255, (uint64_t (*)(uint64_t))type metadata accessor for WidgetEnvironment.AnyValue.StorageBase, (uint64_t)&unk_190A4BE04);
}

uint64_t sub_190903254(uint64_t a1, uint64_t a2)
{
  return sub_1908AED38((unint64_t *)&unk_1EE1ECC68, a2, (uint64_t (*)(uint64_t))type metadata accessor for WidgetEnvironment.AnyValue, (uint64_t)&unk_190A4BEC4);
}

unint64_t sub_190903284()
{
  unint64_t result;

  result = qword_1ECF6CA50[0];
  if (!qword_1ECF6CA50[0])
  {
    result = MEMORY[0x19401429C](&unk_190A4BBCC, &type metadata for WidgetEnvironment.CodingKeys);
    atomic_store(result, qword_1ECF6CA50);
  }
  return result;
}

unint64_t sub_1909032CC()
{
  unint64_t result;

  result = qword_1ECF6CA48;
  if (!qword_1ECF6CA48)
  {
    result = MEMORY[0x19401429C](&unk_190A4BBF4, &type metadata for WidgetEnvironment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6CA48);
  }
  return result;
}

char *sub_190903310(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1909033F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1909034E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AE40) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_190903600(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_190903624(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_190A47DB8();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1908F5490(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1909036B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C530);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1909037C4(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_1ECF6C900 != -1)
    swift_once();
  swift_beginAccess();
  v4 = off_1ECF6CA10;
  if (!*((_QWORD *)off_1ECF6CA10 + 2))
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v5 = sub_1908D2C98(a1, a2);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_endAccess();
    swift_bridgeObjectRelease();
    return 0;
  }
  v7 = *(_QWORD *)(v4[7] + 8 * v5);
  swift_endAccess();
  swift_retain();
  v8 = swift_bridgeObjectRelease_n();
  v9 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v7 + 16) + 80))(v8);
  swift_release();
  return v9;
}

uint64_t sub_1909038D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 80 * a1 + 32;
    v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_1909039CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_190903AE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_190A484CC();
  __break(1u);
  return result;
}

uint64_t sub_190903BD4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_190A484CC();
  __break(1u);
  return result;
}

unint64_t sub_190903CC0()
{
  unint64_t result;

  result = qword_1EE1ECC88;
  if (!qword_1EE1ECC88)
  {
    result = MEMORY[0x19401429C](&unk_190A4C0C4, &type metadata for WidgetEnvironment.AnyValue.StorageBase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ECC88);
  }
  return result;
}

uint64_t sub_190903D04@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;

  return sub_1908F07AC(a1, v3[4], v3[2], v3[3], a2, a3);
}

uint64_t sub_190903D24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1908EBB9C(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 16), a2);
}

void sub_190903D3C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_1908EBC48(a1, *(_QWORD *)(v2 + 16), *(_QWORD **)(v2 + 24), a2);
}

uint64_t sub_190903D54(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(*(_QWORD *)a1 + 16) + 120))(*(_QWORD *)(*(_QWORD *)a1 + 24), *(_QWORD *)(v1 + 16)) & 1;
}

ValueMetadata *type metadata accessor for WidgetEnvironment.AnyValue.StorageBase.CodingKeys()
{
  return &type metadata for WidgetEnvironment.AnyValue.StorageBase.CodingKeys;
}

unint64_t sub_190903DA4()
{
  unint64_t result;

  result = qword_1EE1ECD58;
  if (!qword_1EE1ECD58)
  {
    result = MEMORY[0x19401429C](&unk_190A4C074, &type metadata for WidgetEnvironment.AnyValue.StorageBase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ECD58);
  }
  return result;
}

unint64_t sub_190903DEC()
{
  unint64_t result;

  result = qword_1EE1ECD60;
  if (!qword_1EE1ECD60)
  {
    result = MEMORY[0x19401429C](&unk_190A4C09C, &type metadata for WidgetEnvironment.AnyValue.StorageBase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ECD60);
  }
  return result;
}

uint64_t sub_190903E40(uint64_t a1, void *a2, void *a3, unsigned __int8 a4, uint64_t a5, double a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  char v20;
  double *v21;
  uint64_t result;
  double v23;
  char v24;
  void (*v25)(char *, uint64_t);
  double v26;
  char v27;
  void (*v28)(char *, uint64_t);
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  _QWORD v38[3];
  uint64_t v39;

  v12 = sub_190A462B8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v38[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v38[-1] - v17;
  if (*(_QWORD *)(a5 + 16) && (v19 = sub_1908D37A4(a1), (v20 & 1) != 0))
  {
    v21 = (double *)(*(_QWORD *)(a5 + 56) + 24 * v19);
    result = *(unsigned __int8 *)v21;
    if (*(_BYTE *)v21)
    {
      v23 = v21[1];
      if ((_DWORD)result == 1)
      {
        sub_190A46330();
        sub_190A46324();
        __swift_project_boxed_opaque_existential_1(v38, v39);
        sub_190A46318();
        (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, *MEMORY[0x1E0D0F608], v12);
        v24 = sub_190A462AC();
        v25 = *(void (**)(char *, uint64_t))(v13 + 8);
        v25(v16, v12);
        v25(v18, v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
        if ((v24 & 1) != 0)
          v26 = 2048.0;
        else
          v26 = 1290.0;
      }
      else
      {
        objc_msgSend(a2, sel__rawEffectiveSize);
        v35 = v34;
        objc_msgSend(a3, sel_scale);
        v26 = v35 * v36;
        objc_msgSend(a3, sel_scale);
      }
      v33 = fmax(v23 * v26, 80.0);
      return *(_QWORD *)&v33;
    }
  }
  else
  {
    if (a4)
    {
      if (a4 == 1)
      {
        sub_190A46330();
        sub_190A46324();
        __swift_project_boxed_opaque_existential_1(v38, v39);
        sub_190A46318();
        (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, *MEMORY[0x1E0D0F608], v12);
        v27 = sub_190A462AC();
        v28 = *(void (**)(char *, uint64_t))(v13 + 8);
        v28(v16, v12);
        v28(v18, v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
        if ((v27 & 1) != 0)
          v29 = 2048.0;
        else
          v29 = 1290.0;
      }
      else
      {
        objc_msgSend(a2, sel__rawEffectiveSize);
        v31 = v30;
        objc_msgSend(a3, sel_scale);
        v29 = v31 * v32;
        objc_msgSend(a3, sel_scale);
      }
      v33 = fmax(v29 * a6, 80.0);
      return *(_QWORD *)&v33;
    }
    return a4;
  }
  return result;
}

double sub_190904194()
{
  double v0;
  int v1;
  char isUniquelyReferenced_nonNull_native;

  if (qword_1ECF6A718 != -1)
    swift_once();
  if (dyld_program_sdk_at_least())
  {
    sub_19090126C(MEMORY[0x1E0DEE9D8]);
    return 2.2;
  }
  else
  {
    if (qword_1ECF6B8E8 != -1)
      swift_once();
    v1 = dyld_program_sdk_at_least();
    sub_19090126C(MEMORY[0x1E0DEE9D8]);
    if (v1)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v0 = 1.2;
      sub_1908FC2BC(2, 12, isUniquelyReferenced_nonNull_native, 1.2, 2.0);
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0.0;
    }
  }
  return v0;
}

uint64_t _s14descr1E2CCBB81C21ImageAttachmentPolicyVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s14descr1E2CCBB81C21ImageAttachmentPolicyVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14descr1E2CCBB81C21ImageAttachmentPolicyVwca(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr1E2CCBB81C21ImageAttachmentPolicyVwta(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr1E2CCBB81C21ImageAttachmentPolicyVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s14descr1E2CCBB81C21ImageAttachmentPolicyVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s14descr1E2CCBB81C21ImageAttachmentPolicyVMa()
{
  return &_s14descr1E2CCBB81C21ImageAttachmentPolicyVN;
}

uint64_t _s14descr1E2CCBB81C21ImageAttachmentPolicyV5EntryVwet(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && a1[24])
    return (*(_DWORD *)a1 + 254);
  v3 = *a1;
  v4 = v3 >= 3;
  v5 = v3 - 3;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s14descr1E2CCBB81C21ImageAttachmentPolicyV5EntryVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *_s14descr1E2CCBB81C21ImageAttachmentPolicyV5EntryVMa()
{
  return &_s14descr1E2CCBB81C21ImageAttachmentPolicyV5EntryVN;
}

uint64_t getEnumTagSinglePayload for WidgetBackgroundStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14descr1E2CCBB81C21ImageAttachmentPolicyV8BaseSizeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1909045A4 + 4 * byte_190A4C125[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1909045D8 + 4 * byte_190A4C120[v4]))();
}

uint64_t sub_1909045D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909045E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1909045E8);
  return result;
}

uint64_t sub_1909045F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909045FCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190904600(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190904608(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr1E2CCBB81C21ImageAttachmentPolicyV8BaseSizeOMa()
{
  return &_s14descr1E2CCBB81C21ImageAttachmentPolicyV8BaseSizeON;
}

unint64_t sub_190904628()
{
  unint64_t result;

  result = qword_1EE1ECDD0;
  if (!qword_1EE1ECDD0)
  {
    result = MEMORY[0x19401429C](&unk_190A4C198, &_s14descr1E2CCBB81C21ImageAttachmentPolicyV8BaseSizeON);
    atomic_store(result, (unint64_t *)&qword_1EE1ECDD0);
  }
  return result;
}

double sub_19090466C()
{
  double result;

  qword_1EE1FD7B8 = 0;
  result = 0.0;
  xmmword_1EE1FD798 = 0u;
  unk_1EE1FD7A8 = 0u;
  return result;
}

uint64_t sub_190904684@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EE1EC4A8 != -1)
    swift_once();
  return sub_190904D3C((uint64_t)&xmmword_1EE1FD798, a1);
}

uint64_t sub_1909046D4(uint64_t a1, void (*a2)(_OWORD *__return_ptr, uint64_t))
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _OWORD v9[2];
  uint64_t v10;

  v4 = sub_190904CB4(a1, (uint64_t)&v6);
  if (*((_QWORD *)&v7 + 1))
  {
    v9[0] = v6;
    v9[1] = v7;
    v10 = v8;
  }
  else
  {
    a2(v9, v4);
    sub_190904CFC((uint64_t)&v6);
  }
  return sub_190904CB4((uint64_t)v9, a1);
}

uint64_t sub_190904750()
{
  sub_190904C70();
  return sub_190A46C54();
}

uint64_t sub_190904778@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  v1 = qword_1EE1FD7D8;
  *(_QWORD *)a1 = qword_1EE1FD7C0;
  *(_OWORD *)(a1 + 8) = unk_1EE1FD7C8;
  *(_QWORD *)(a1 + 24) = v1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1909047BC(uint64_t *a1, void (*a2)(_QWORD *__return_ptr))
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = swift_allocObject();
  v5 = (_QWORD *)v4;
  *(_OWORD *)(v4 + 16) = xmmword_190A4C1C0;
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 40) = 0;
  v6 = a1[1];
  if (!v6)
  {
    v7 = sub_190905028((_QWORD *)v4, a2);
    v6 = v11;
    swift_bridgeObjectRelease();
    v8 = a1[3];
    if (v8)
      goto LABEL_3;
LABEL_5:
    sub_190905028(v5, a2);
    v9 = v12;
    v8 = v13;
    swift_release();
    result = swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v7 = *a1;
  v8 = a1[3];
  if (!v8)
    goto LABEL_5;
LABEL_3:
  v9 = a1[2];
  result = swift_release();
LABEL_6:
  *a1 = v7;
  a1[1] = v6;
  a1[2] = v9;
  a1[3] = v8;
  return result;
}

uint64_t sub_1909048A0()
{
  sub_190904FB0();
  return sub_190A46C54();
}

uint64_t sub_1909048C8()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_190A4702C();
  if (swift_conformsToProtocol2())
    result = v0;
  else
    result = 0;
  if (!result)
  {
    sub_190A48298();
    swift_bridgeObjectRelease();
    sub_190A4702C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6C10);
    sub_190A47B00();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    result = sub_190A48448();
    __break(1u);
  }
  return result;
}

uint64_t sub_1909049D0()
{
  return sub_190A45CAC();
}

uint64_t sub_1909049FC()
{
  return sub_1909049D0();
}

uint64_t sub_190904A08()
{
  return 1;
}

uint64_t sub_190904A10()
{
  return sub_190A45CAC();
}

uint64_t sub_190904A3C()
{
  return sub_190904A10();
}

uint64_t sub_190904A48()
{
  return 3;
}

uint64_t sub_190904A50()
{
  return sub_190A45CAC();
}

uint64_t sub_190904A7C()
{
  return sub_190904A50();
}

uint64_t sub_190904A88()
{
  return sub_190A45CAC();
}

uint64_t sub_190904AB4()
{
  return sub_190904A88();
}

uint64_t sub_190904AC0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_190904AC8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t initializeWithCopy for ControlTemplateDescriptor(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for ControlTemplateDescriptor(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ControlTemplateDescriptor(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlTemplateDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlTemplateDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplateDescriptor()
{
  return &type metadata for ControlTemplateDescriptor;
}

ValueMetadata *type metadata accessor for ControlTemplateDescriptor.Key()
{
  return &type metadata for ControlTemplateDescriptor.Key;
}

unint64_t sub_190904C2C()
{
  unint64_t result;

  result = qword_1EE1EB190;
  if (!qword_1EE1EB190)
  {
    result = MEMORY[0x19401429C](&unk_190A4C2D8, &type metadata for ControlTemplateDescriptor.Key);
    atomic_store(result, (unint64_t *)&qword_1EE1EB190);
  }
  return result;
}

unint64_t sub_190904C70()
{
  unint64_t result;

  result = qword_1EE1ECDD8;
  if (!qword_1EE1ECDD8)
  {
    result = MEMORY[0x19401429C](&unk_190A4C2B0, &type metadata for ControlTemplateDescriptor.Key);
    atomic_store(result, (unint64_t *)&qword_1EE1ECDD8);
  }
  return result;
}

uint64_t sub_190904CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECDE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_190904CFC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECDE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_190904D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECDE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t destroy for ControlViewMetadata()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ControlViewMetadata(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ControlViewMetadata(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ControlViewMetadata(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlViewMetadata(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlViewMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlViewMetadata()
{
  return &type metadata for ControlViewMetadata;
}

ValueMetadata *type metadata accessor for ControlViewMetadata.Key()
{
  return &type metadata for ControlViewMetadata.Key;
}

unint64_t sub_190904F6C()
{
  unint64_t result;

  result = qword_1EE1ECDE8;
  if (!qword_1EE1ECDE8)
  {
    result = MEMORY[0x19401429C](&unk_190A4C334, &type metadata for ControlViewMetadata.Key);
    atomic_store(result, (unint64_t *)&qword_1EE1ECDE8);
  }
  return result;
}

unint64_t sub_190904FB0()
{
  unint64_t result;

  result = qword_1EE1ECDF0;
  if (!qword_1EE1ECDF0)
  {
    result = MEMORY[0x19401429C](&unk_190A4C37C, &type metadata for ControlViewMetadata.Key);
    atomic_store(result, (unint64_t *)&qword_1EE1ECDF0);
  }
  return result;
}

uint64_t sub_190904FF4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_190905028(_QWORD *a1, void (*a2)(_QWORD *__return_ptr))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD v12[4];

  v2 = a1[2];
  v3 = a1[3];
  v4 = v2;
  if (v3 == 1)
  {
    a2(v12);
    v4 = v12[0];
    v6 = v12[1];
    v7 = v12[2];
    v8 = v12[3];
    swift_beginAccess();
    v9 = a1[2];
    v11 = a1[3];
    a1[2] = v4;
    a1[3] = v6;
    a1[4] = v7;
    a1[5] = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_190905118(v9, v11);
  }
  sub_19090514C(v2, v3);
  return v4;
}

uint64_t sub_190905118(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19090514C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for FirstPartyDominoLegacyMarginsFixIfNecessaryModifier(uint64_t a1)
{
  sub_1908D1BB0(*(id *)a1, *(_BYTE *)(a1 + 8));
  sub_1908D1BB0(*(id *)(a1 + 16), *(_BYTE *)(a1 + 24));
  sub_1908CE654(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return sub_1908CE654(*(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t initializeWithCopy for FirstPartyDominoLegacyMarginsFixIfNecessaryModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  char v5;
  void *v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v2 = a2;
  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B68(*(id *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(void **)(v2 + 16);
  v7 = *(_BYTE *)(v2 + 24);
  sub_1908D1B68(v6, v7);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(v2 + 32);
  v9 = *(_BYTE *)(v2 + 40);
  sub_1908D1B74(v8, v9);
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  v10 = *(_QWORD *)(v2 + 48);
  LOBYTE(v2) = *(_BYTE *)(v2 + 56);
  sub_1908D1B74(v10, v2);
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = v2;
  return a1;
}

uint64_t assignWithCopy for FirstPartyDominoLegacyMarginsFixIfNecessaryModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  char v5;
  void *v6;
  char v7;
  void *v8;
  char v9;
  void *v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v2 = a2;
  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1908D1B68(*(id *)a2, v5);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1908D1BB0(v6, v7);
  v8 = *(void **)(v2 + 16);
  v9 = *(_BYTE *)(v2 + 24);
  sub_1908D1B68(v8, v9);
  v10 = *(void **)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  sub_1908D1BB0(v10, v11);
  v12 = *(_QWORD *)(v2 + 32);
  v13 = *(_BYTE *)(v2 + 40);
  sub_1908D1B74(v12, v13);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v12;
  *(_BYTE *)(a1 + 40) = v13;
  sub_1908CE654(v14, v15);
  v16 = *(_QWORD *)(v2 + 48);
  LOBYTE(v2) = *(_BYTE *)(v2 + 56);
  sub_1908D1B74(v16, v2);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v16;
  *(_BYTE *)(a1 + 56) = v2;
  sub_1908CE654(v17, v18);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FirstPartyDominoLegacyMarginsFixIfNecessaryModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  char v7;
  char v8;
  void *v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1908D1BB0(v6, v7);
  v8 = *((_BYTE *)a2 + 24);
  v9 = *(void **)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v8;
  sub_1908D1BB0(v9, v10);
  v11 = *((_BYTE *)a2 + 40);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_BYTE *)(a1 + 40) = v11;
  sub_1908CE654(v12, v13);
  v14 = *((_BYTE *)a2 + 56);
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_BYTE *)(a1 + 56) = v14;
  sub_1908CE654(v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for FirstPartyDominoLegacyMarginsFixIfNecessaryModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FirstPartyDominoLegacyMarginsFixIfNecessaryModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FirstPartyDominoLegacyMarginsFixIfNecessaryModifier()
{
  return &type metadata for FirstPartyDominoLegacyMarginsFixIfNecessaryModifier;
}

uint64_t sub_190905494()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1909054A4()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_190903624((uint64_t)&unk_1E2CC99D8);
  result = swift_arrayDestroy();
  qword_1ECF6D4F0 = v0;
  return result;
}

uint64_t sub_1909054EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void *v16;
  char v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char v34;
  id v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  id v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  uint64_t v65;
  id v66;
  double v67;
  double v68;
  double v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  int v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  id v89;
  char v90;
  void *v91;
  ValueMetadata *v92;
  unint64_t v93;
  char v94;
  uint64_t v95;
  char v96;

  v88 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AC20);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6ABE0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6ABD0);
  MEMORY[0x1E0C80A78](v83);
  v85 = (uint64_t)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6AB40);
  MEMORY[0x1E0C80A78](v84);
  v86 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6ABF0);
  MEMORY[0x1E0C80A78](v13);
  v87 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(unsigned __int8 *)(v2 + 8);
  v16 = *(void **)(v2 + 16);
  v17 = *(_BYTE *)(v2 + 24);
  v18 = *(_QWORD *)(v2 + 32);
  v19 = *(unsigned __int8 *)(v2 + 40);
  v20 = *(_QWORD *)(v2 + 48);
  LODWORD(v14) = *(unsigned __int8 *)(v2 + 56);
  v77 = *(id *)v2;
  v89 = v77;
  v78 = v15;
  v90 = v15;
  v91 = v16;
  LOBYTE(v92) = v17;
  v79 = v18;
  v93 = v18;
  v80 = v19;
  v94 = v19;
  v81 = v20;
  v95 = v20;
  v82 = v14;
  v96 = v14;
  if ((sub_190905C74() & 1) != 0)
  {
    v74 = v8;
    v73 = v10;
    v75 = a2;
    v76 = v4;
    v92 = &type metadata for FeatureFlags.Widgets;
    v21 = sub_1909068BC();
    v93 = v21;
    LOBYTE(v89) = 5;
    v22 = sub_190A462A0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
    v72 = v13;
    v23 = v5;
    if ((v22 & 1) != 0)
      goto LABEL_11;
    v92 = &type metadata for FeatureFlags.Widgets;
    v93 = v21;
    LOBYTE(v89) = 5;
    v24 = sub_190A462A0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
    if ((v24 & 1) != 0)
      goto LABEL_11;
    if (qword_1ECF6AD28 != -1)
      swift_once();
    v25 = qword_1ECF6AD18;
    v26 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v27 = objc_msgSend(v26, sel_mainBundle, v72);
    v28 = objc_msgSend(v27, sel_bundleIdentifier);

    if (v28)
    {
      v29 = sub_190A47ADC();
      v31 = v30;

    }
    else
    {
      v31 = 0xE300000000000000;
      v29 = 7104878;
    }
    v34 = sub_1909C71EC(v29, v31, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v34 & 1) != 0)
    {
LABEL_11:
      v35 = v77;
      v36 = v78;
      sub_1908D1B68(v77, v78);
      sub_1908D1B68(v16, v17);
      v37 = v79;
      v38 = v80;
      sub_1908D1B74(v79, v80);
      v39 = v81;
      v40 = v82;
      sub_1908D1B74(v81, v82);
      sub_1908D1B68(v16, v17);
      v41 = sub_19096E4E8(v16, v17);
      sub_1908D1BB0(v16, v17);
      sub_1908D1BB0(v35, v36);
      sub_1908D1BB0(v16, v17);
      sub_1908CE654(v37, v38);
      sub_1908CE654(v39, v40);
      objc_msgSend(v41, sel_contentMargins);
      v43 = v42;
      v45 = v44;
      v47 = v46;

      v48 = sub_190A47308();
      v49 = (uint64_t)v86;
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v86, v88, v76);
      v50 = v49 + *(int *)(v84 + 36);
      *(_BYTE *)v50 = v48;
      *(_QWORD *)(v50 + 8) = v43;
      *(_QWORD *)(v50 + 16) = v45;
      *(_QWORD *)(v50 + 24) = v45;
      *(_QWORD *)(v50 + 32) = v47;
      *(_BYTE *)(v50 + 40) = 0;
      sub_1908AAA48(v49, v85, &qword_1ECF6AB40);
    }
    else
    {
      v52 = v77;
      v53 = v78;
      sub_1908D1B68(v77, v78);
      sub_1908D1B68(v16, v17);
      v54 = v79;
      v55 = v80;
      sub_1908D1B74(v79, v80);
      v56 = v81;
      v57 = v82;
      sub_1908D1B74(v81, v82);
      sub_1908D1B68(v16, v17);
      v58 = sub_19096E4E8(v16, v17);
      sub_1908D1BB0(v16, v17);
      sub_1908D1BB0(v52, v53);
      sub_1908D1BB0(v16, v17);
      sub_1908CE654(v54, v55);
      sub_1908CE654(v56, v57);
      objc_msgSend(v58, sel_contentMargins);
      v60 = v59;
      v62 = v61;
      v64 = v63;

      sub_1908D1B68(v52, v53);
      sub_1908D1B68(v16, v17);
      v65 = v54;
      sub_1908D1B74(v54, v55);
      sub_1908D1B74(v56, v57);
      sub_1908D1B68(v16, v17);
      v66 = sub_19096E4E8(v16, v17);
      sub_1908D1BB0(v16, v17);
      sub_1908D1BB0(v52, v53);
      sub_1908D1BB0(v16, v17);
      sub_1908CE654(v65, v55);
      sub_1908CE654(v56, v57);
      objc_msgSend(v66, sel_scaleFactor);
      v68 = v67;

      v69 = v62 * v68;
      v70 = sub_190A47308();
      v49 = (uint64_t)v86;
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v86, v88, v76);
      v71 = v49 + *(int *)(v84 + 36);
      *(_BYTE *)v71 = v70;
      *(double *)(v71 + 8) = v60 * v68;
      *(double *)(v71 + 16) = v69;
      *(double *)(v71 + 24) = v69;
      *(double *)(v71 + 32) = v64 * v68;
      *(_BYTE *)(v71 + 40) = 0;
      sub_1908AAA48(v49, v85, &qword_1ECF6AB40);
    }
    swift_storeEnumTagMultiPayload();
    sub_190906804();
    v51 = (uint64_t)v87;
    sub_190A46F90();
    sub_1908AA544(v49, &qword_1ECF6AB40);
    sub_1908AAA48(v51, (uint64_t)v73, &qword_1ECF6ABF0);
    swift_storeEnumTagMultiPayload();
    sub_1909067A0();
    sub_190906870();
    sub_190A46F90();
    return sub_1908AA544(v51, &qword_1ECF6ABF0);
  }
  else
  {
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v32(v7, v88, v4);
    v32(v10, (uint64_t)v7, v4);
    swift_storeEnumTagMultiPayload();
    sub_1909067A0();
    sub_190906870();
    sub_190A46F90();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_190905C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  void *v11;
  int v12;
  void *v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  void *v20;
  void *v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  id v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  id v46;
  double v47;
  double v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  NSObject *v55;
  uint64_t v56;
  void *v57;
  void *v58;
  char v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  id v64;
  char v65;
  uint64_t v66;
  int v67;
  os_log_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  os_log_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C788);
  MEMORY[0x1E0C80A78](v1);
  v81 = (char *)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for WidgetDescriptor(0);
  v80 = *(_QWORD *)(v82 - 8);
  v3 = MEMORY[0x1E0C80A78](v82);
  v76 = (uint64_t)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v73 = (uint64_t)&v70 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v72 = (uint64_t)&v70 - v8;
  result = MEMORY[0x1E0C80A78](v7);
  v83 = (uint64_t)&v70 - v10;
  if (!(_QWORD)xmmword_1ECF6D940)
  {
    __break(1u);
    return result;
  }
  v11 = *(void **)v0;
  v12 = *(unsigned __int8 *)(v0 + 8);
  v13 = *(void **)(v0 + 16);
  v14 = *(_BYTE *)(v0 + 24);
  v15 = *(_QWORD *)(v0 + 32);
  v16 = *(_BYTE *)(v0 + 40);
  v17 = *(_QWORD *)(v0 + 48);
  v18 = *(_BYTE *)(v0 + 56);
  v19 = *(_QWORD *)xmmword_1ECF6D940;
  v78 = (os_log_t)qword_1ECF6D950;
  v79 = v19;
  v85 = xmmword_1ECF6D940;
  swift_retain();
  sub_1908D1B68(v11, v12);
  sub_1908D1B68(v13, v14);
  sub_1908D1B74(v15, v16);
  sub_1908D1B74(v17, v18);
  sub_1908D1B68(v11, v12);
  v20 = (void *)sub_19096E88C(v11, v12);
  sub_1908D1BB0(v11, v12);
  v74 = v11;
  v77 = v12;
  sub_1908D1BB0(v11, v12);
  v70 = v13;
  v21 = v13;
  v22 = v14;
  sub_1908D1BB0(v21, v14);
  v71 = v15;
  v23 = v15;
  v24 = v16;
  sub_1908CE654(v23, v16);
  v75 = v17;
  v25 = v17;
  v26 = v18;
  sub_1908CE654(v25, v18);
  v27 = (uint64_t)v81;
  (*((void (**)(void *, uint64_t))v78[1].isa + 1))(v20, v79);
  swift_release();

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v27, 1, v82) == 1)
  {
    sub_1908AA544(v27, &qword_1ECF6C788);
    return 0;
  }
  sub_190906900(v27, v83);
  if (qword_1ECF6AD10 != -1)
    swift_once();
  v28 = qword_1ECF6D4F0;
  v29 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v30 = objc_msgSend(v29, sel_mainBundle);
  v31 = objc_msgSend(v30, sel_bundleIdentifier);

  v33 = v70;
  v32 = v71;
  if (v31)
  {
    v34 = sub_190A47ADC();
    v36 = v35;

  }
  else
  {
    v36 = 0xE300000000000000;
    v34 = 7104878;
  }
  v37 = v75;
  v38 = sub_1909C71EC(v34, v36, v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LODWORD(v80) = v38;
  if ((v38 & 1) == 0)
  {
    v42 = v83;
    v43 = v72;
    sub_190906944(v83, v72);
    v39 = v74;
    goto LABEL_16;
  }
  v39 = v74;
  v40 = v77;
  sub_1908D1B68(v74, v77);
  sub_1908D1B68(v33, v22);
  sub_1908D1B74(v32, v24);
  sub_1908D1B74(v37, v26);
  sub_1908D1B74(v32, v24);
  v41 = sub_19096EA60(v32, v24);
  sub_1908CE654(v32, v24);
  sub_1908D1BB0(v39, v40);
  sub_1908D1BB0(v33, v22);
  sub_1908CE654(v32, v24);
  sub_1908CE654(v37, v26);
  v42 = v83;
  v43 = v72;
  sub_190906944(v83, v72);
  if ((v41 & 1) != 0)
  {
LABEL_16:
    sub_190906988(v43);
    goto LABEL_17;
  }
  v44 = *(_BYTE *)(v43 + *(int *)(v82 + 76));
  sub_190906988(v43);
  if ((v44 & 1) == 0)
  {
LABEL_17:
    v51 = v42;
    v49 = v73;
    sub_190906944(v51, v73);
    goto LABEL_18;
  }
  v45 = v77;
  sub_1908D1B68(v39, v77);
  sub_1908D1B68(v33, v22);
  sub_1908D1B74(v32, v24);
  sub_1908D1B74(v37, v26);
  sub_1908D1B68(v33, v22);
  v46 = sub_19096E4E8(v33, v22);
  sub_1908D1BB0(v33, v22);
  sub_1908D1BB0(v39, v45);
  sub_1908D1BB0(v33, v22);
  sub_1908CE654(v32, v24);
  sub_1908CE654(v37, v26);
  objc_msgSend(v46, sel_scaleFactor);
  v48 = v47;

  v49 = v73;
  sub_190906944(v83, v73);
  if (v48 > 1.1)
  {
    v50 = *(unsigned __int8 *)(v49 + *(int *)(v82 + 88));
    sub_190906988(v49);
    LODWORD(v81) = v50 == 2 || (v50 & 1) == 0;
    goto LABEL_19;
  }
LABEL_18:
  sub_190906988(v49);
  LODWORD(v81) = 0;
LABEL_19:
  v52 = v76;
  if (qword_1ECF6AD50 != -1)
    swift_once();
  v53 = sub_190A465A0();
  __swift_project_value_buffer(v53, (uint64_t)qword_1ECF6D510);
  sub_190906944(v83, v52);
  v54 = v77;
  sub_1908D1B68(v39, v77);
  sub_1908D1B68(v33, v22);
  sub_1908D1B74(v32, v24);
  sub_1908D1B74(v37, v26);
  sub_1908D1B68(v39, v54);
  sub_1908D1B68(v33, v22);
  sub_1908D1B74(v32, v24);
  sub_1908D1B74(v37, v26);
  sub_1908D1B68(v39, v54);
  sub_1908D1B68(v33, v22);
  sub_1908D1B74(v32, v24);
  sub_1908D1B74(v37, v26);
  sub_1908D1B68(v39, v54);
  sub_1908D1B68(v33, v22);
  sub_1908D1B74(v32, v24);
  sub_1908D1B74(v37, v26);
  v55 = sub_190A46588();
  LODWORD(v79) = sub_190A47F44();
  if (os_log_type_enabled(v55, (os_log_type_t)v79))
  {
    v78 = v55;
    v56 = swift_slowAlloc();
    v73 = swift_slowAlloc();
    v85 = v73;
    *(_DWORD *)v56 = 136316162;
    sub_1908D1B68(v39, v54);
    sub_1908D1B68(v33, v22);
    sub_1908D1B74(v32, v24);
    sub_1908D1B74(v37, v26);
    sub_1908D1B68(v39, v54);
    v57 = v39;
    v58 = (void *)sub_19096E88C(v39, v54);
    sub_1908D1BB0(v57, v54);
    sub_1908D1BB0(v57, v54);
    sub_1908D1BB0(v33, v22);
    sub_1908CE654(v32, v24);
    sub_1908CE654(v37, v26);
    v59 = v22;
    if (v58)
    {
      v60 = objc_msgSend(v58, sel_extensionBundleIdentifier);

      v61 = sub_190A47ADC();
      v63 = v62;

    }
    else
    {
      v63 = 0xE300000000000000;
      v61 = 7104878;
    }
    v84 = sub_1908B35C4(v61, v63, &v85);
    sub_190A48178();
    swift_bridgeObjectRelease();
    v64 = v74;
    sub_1908D1BB0(v74, v54);
    sub_1908D1BB0(v33, v59);
    sub_1908CE654(v32, v24);
    v65 = v54;
    v66 = v75;
    sub_1908CE654(v75, v26);
    sub_1908D1BB0(v64, v65);
    sub_1908D1BB0(v33, v59);
    sub_1908CE654(v32, v24);
    sub_1908CE654(v66, v26);
    *(_WORD *)(v56 + 12) = 1024;
    LODWORD(v84) = (_DWORD)v81;
    sub_190A48178();
    *(_WORD *)(v56 + 18) = 1024;
    LODWORD(v84) = v80 & 1;
    sub_190A48178();
    *(_WORD *)(v56 + 24) = 1024;
    sub_1908D1B68(v64, v65);
    sub_1908D1B68(v33, v59);
    sub_1908D1B74(v32, v24);
    sub_1908D1B74(v66, v26);
    sub_1908D1B74(v32, v24);
    LODWORD(v80) = sub_19096EA60(v32, v24);
    sub_1908CE654(v32, v24);
    sub_1908D1BB0(v64, v65);
    sub_1908D1BB0(v33, v59);
    sub_1908CE654(v32, v24);
    sub_1908CE654(v66, v26);
    sub_1908D1BB0(v64, v65);
    sub_1908D1BB0(v33, v59);
    sub_1908CE654(v32, v24);
    sub_1908CE654(v66, v26);
    LODWORD(v84) = v80 & 1;
    sub_190A48178();
    sub_1908D1BB0(v64, v65);
    sub_1908D1BB0(v33, v59);
    sub_1908CE654(v32, v24);
    sub_1908CE654(v66, v26);
    *(_WORD *)(v56 + 30) = 1024;
    v67 = *(_BYTE *)(v76 + *(int *)(v82 + 88)) & 1;
    sub_190906988(v76);
    LODWORD(v84) = v67;
    sub_190A48178();
    v68 = v78;
    _os_log_impl(&dword_1908A7000, v78, (os_log_type_t)v79, "wants legacy margins for %s: %{BOOL}d - inEligibleBundle: %{BOOL}d, showsWidgetBackground: %{BOOL}d, enableContentMarginsForFirstParty: %{BOOL}d", (uint8_t *)v56, 0x24u);
    v69 = v73;
    swift_arrayDestroy();
    MEMORY[0x194014398](v69, -1, -1);
    MEMORY[0x194014398](v56, -1, -1);

  }
  else
  {
    sub_190906988(v52);
    sub_1908D1BB0(v39, v54);
    sub_1908D1BB0(v33, v22);
    sub_1908CE654(v32, v24);
    sub_1908CE654(v37, v26);

    sub_1908D1BB0(v39, v54);
    sub_1908D1BB0(v33, v22);
    sub_1908CE654(v32, v24);
    sub_1908CE654(v37, v26);
    sub_1908D1BB0(v39, v54);
    sub_1908D1BB0(v33, v22);
    sub_1908CE654(v32, v24);
    sub_1908CE654(v37, v26);
    sub_1908D1BB0(v39, v54);
    sub_1908D1BB0(v33, v22);
    sub_1908CE654(v32, v24);
    sub_1908CE654(v37, v26);
  }
  sub_190906988(v83);
  return v81;
}

unint64_t sub_1909067A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6ABE8;
  if (!qword_1ECF6ABE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6ABF0);
    v2[0] = sub_190906804();
    v2[1] = v2[0];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6ABE8);
  }
  return result;
}

unint64_t sub_190906804()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6AB38;
  if (!qword_1ECF6AB38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6AB40);
    v2[0] = sub_190906870();
    v2[1] = MEMORY[0x1E0CD9758];
    result = MEMORY[0x19401429C](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6AB38);
  }
  return result;
}

unint64_t sub_190906870()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ECF6AC18;
  if (!qword_1ECF6AC18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6AC20);
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDBF10], v1);
    atomic_store(result, (unint64_t *)&qword_1ECF6AC18);
  }
  return result;
}

unint64_t sub_1909068BC()
{
  unint64_t result;

  result = qword_1ECF6ACB8;
  if (!qword_1ECF6ACB8)
  {
    result = MEMORY[0x19401429C](&unk_190A56BB4, &type metadata for FeatureFlags.Widgets);
    atomic_store(result, (unint64_t *)&qword_1ECF6ACB8);
  }
  return result;
}

uint64_t sub_190906900(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_190906944(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_190906988(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WidgetDescriptor(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1909069C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ECF6AC08;
  if (!qword_1ECF6AC08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6AC10);
    v2[0] = sub_1909067A0();
    v2[1] = sub_190906870();
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ECF6AC08);
  }
  return result;
}

float TimelineEntryRelevance.score.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void TimelineEntryRelevance.score.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*TimelineEntryRelevance.score.modify())()
{
  return nullsub_1;
}

double TimelineEntryRelevance.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void TimelineEntryRelevance.duration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*TimelineEntryRelevance.duration.modify())()
{
  return nullsub_1;
}

WidgetKit::TimelineEntryRelevance __swiftcall TimelineEntryRelevance.init(score:duration:)(Swift::Float score, Swift::Double duration)
{
  uint64_t v2;
  WidgetKit::TimelineEntryRelevance result;

  *(Swift::Float *)v2 = score;
  *(Swift::Double *)(v2 + 8) = duration;
  result.duration = duration;
  result.score = score;
  return result;
}

uint64_t TimelineEntryRelevance.hash(into:)()
{
  sub_190A487E4();
  return sub_190A487F0();
}

BOOL static TimelineEntryRelevance.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(float *)a1 == *(float *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

uint64_t sub_190906AF4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6F697461727564;
  else
    return 0x65726F6373;
}

uint64_t sub_190906B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1909071A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190906B50()
{
  sub_190906CC0();
  return sub_190A48868();
}

uint64_t sub_190906B78()
{
  sub_190906CC0();
  return sub_190A48874();
}

uint64_t TimelineEntryRelevance.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF69EC8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190906CC0();
  sub_190A48850();
  v8[15] = 0;
  sub_190A4861C();
  if (!v1)
  {
    v8[14] = 1;
    sub_190A48610();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_190906CC0()
{
  unint64_t result;

  result = qword_1ECF6A380;
  if (!qword_1ECF6A380)
  {
    result = MEMORY[0x19401429C](&unk_190A4C628, &type metadata for TimelineEntryRelevance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6A380);
  }
  return result;
}

uint64_t TimelineEntryRelevance.hashValue.getter()
{
  sub_190A487C0();
  sub_190A487E4();
  sub_190A487F0();
  return sub_190A48808();
}

uint64_t TimelineEntryRelevance.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1ECF68188);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190906CC0();
  sub_190A48838();
  if (!v2)
  {
    v16 = 0;
    sub_190A4855C();
    v10 = v9;
    v15 = 1;
    sub_190A48550();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_DWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_190906EBC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TimelineEntryRelevance.init(from:)(a1, a2);
}

uint64_t sub_190906ED0(_QWORD *a1)
{
  return TimelineEntryRelevance.encode(to:)(a1);
}

uint64_t sub_190906EEC()
{
  sub_190A487C0();
  sub_190A487E4();
  sub_190A487F0();
  return sub_190A48808();
}

BOOL sub_190906F4C(uint64_t a1, uint64_t a2)
{
  return *(float *)a1 == *(float *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

void sub_190906F78(uint64_t a1@<X8>)
{
  TimelineEntry.relevance.getter(a1);
}

void TimelineEntry.relevance.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
}

unint64_t sub_190906FA0()
{
  unint64_t result;

  result = qword_1EE1ECDF8;
  if (!qword_1EE1ECDF8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for TimelineEntryRelevance, &type metadata for TimelineEntryRelevance);
    atomic_store(result, (unint64_t *)&qword_1EE1ECDF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for TimelineEntryRelevance()
{
  return &type metadata for TimelineEntryRelevance;
}

uint64_t dispatch thunk of TimelineEntry.date.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TimelineEntry.relevance.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t storeEnumTagSinglePayload for TimelineEntryRelevance.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190907050 + 4 * byte_190A4C465[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190907084 + 4 * byte_190A4C460[v4]))();
}

uint64_t sub_190907084(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19090708C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190907094);
  return result;
}

uint64_t sub_1909070A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1909070A8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1909070AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1909070B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TimelineEntryRelevance.CodingKeys()
{
  return &type metadata for TimelineEntryRelevance.CodingKeys;
}

unint64_t sub_1909070D4()
{
  unint64_t result;

  result = qword_1EE1ECE00;
  if (!qword_1EE1ECE00)
  {
    result = MEMORY[0x19401429C](&unk_190A4C600, &type metadata for TimelineEntryRelevance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ECE00);
  }
  return result;
}

unint64_t sub_19090711C()
{
  unint64_t result;

  result = qword_1ECF6A390;
  if (!qword_1ECF6A390)
  {
    result = MEMORY[0x19401429C](&unk_190A4C570, &type metadata for TimelineEntryRelevance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6A390);
  }
  return result;
}

unint64_t sub_190907164()
{
  unint64_t result;

  result = qword_1ECF6A388;
  if (!qword_1ECF6A388)
  {
    result = MEMORY[0x19401429C](&unk_190A4C598, &type metadata for TimelineEntryRelevance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6A388);
  }
  return result;
}

uint64_t sub_1909071A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65726F6373 && a2 == 0xE500000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_190907290(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  ((void (*)(void))MEMORY[0x1E0C80A78])();
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v31 = (char *)&v24 - v13;
  v36 = a4;
  MEMORY[0x1E0C80A78](v12);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_190A47E30();
  if (!v18)
    return sub_190A47CB0();
  v19 = v18;
  v25 = v15;
  v39 = sub_190A47A10();
  v32 = sub_190A483B8();
  sub_190A48370();
  v36 = v17;
  result = sub_190A47E18();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_190A47EC0();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_190A483A0();
      sub_190A47E6C();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

uint64_t WidgetRelevance.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v16 = a1;
  KeyPath = swift_getKeyPath();
  type metadata accessor for WidgetRelevanceAttribute(255, a2, v6, v7);
  v8 = sub_190A47D04();
  v11 = (char *)type metadata accessor for WidgetRelevanceEntry(0, a2, v9, v10);
  v12 = MEMORY[0x19401429C](MEMORY[0x1E0DEAF50], v8);
  v14 = sub_190907290((void (*)(char *, char *))sub_190907668, KeyPath, v8, v11, MEMORY[0x1E0DEDCE8], v12, MEMORY[0x1E0DEDD18], v13);
  swift_bridgeObjectRelease();
  swift_release();
  result = WidgetRelevances.init(_:)(v14, &v16);
  *a3 = v16;
  return result;
}

uint64_t sub_190907668()
{
  return swift_getAtKeyPath();
}

uint64_t sub_190907690()
{
  return swift_allocateGenericValueMetadata();
}

_QWORD *initializeBufferWithCopyOfBuffer for MetadataForegroundColorsModifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for MetadataForegroundColorsModifier()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for MetadataForegroundColorsModifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for MetadataForegroundColorsModifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlAction(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t type metadata accessor for WidgetRelevance(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WidgetRelevance);
}

uint64_t EnvironmentValues._preferredSystemWidgetBackgroundStyle.getter()
{
  sub_190901C88();
  return sub_190A46C3C();
}

uint64_t EnvironmentValues._preferredSystemWidgetBackgroundStyle.setter()
{
  sub_190901C88();
  return sub_190A46C48();
}

uint64_t sub_19090786C()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D568 = result;
  return result;
}

uint64_t sub_190907890()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B298);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D550 = v0;
  *(_QWORD *)algn_1ECF6D558 = 0xD000000000000025;
  qword_1ECF6D560 = 0x8000000190A60F10;
  return result;
}

uint64_t sub_190907904()
{
  if (qword_1ECF6B1B8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_190907944()
{
  uint64_t v0;

  if (qword_1ECF6B280 != -1)
    swift_once();
  v0 = qword_1ECF6D550;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

void sub_1909079B8(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1909079C0()
{
  sub_190907AB4();
  return sub_190A4681C();
}

uint64_t (*EnvironmentValues._preferredSystemWidgetBackgroundStyle.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = sub_190901C88();
  sub_190A46C3C();
  return sub_190907A68;
}

uint64_t sub_190907A68(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_190A46C48();
}

ValueMetadata *_s50WidgetPreferredSystemBackgroundStyleEnvironmentKeyVMa()
{
  return &_s50WidgetPreferredSystemBackgroundStyleEnvironmentKeyVN;
}

unint64_t sub_190907AB4()
{
  unint64_t result;

  result = qword_1ECF6B340;
  if (!qword_1ECF6B340)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetBackgroundStyle, &type metadata for WidgetBackgroundStyle);
    atomic_store(result, (unint64_t *)&qword_1ECF6B340);
  }
  return result;
}

ValueMetadata *type metadata accessor for PreferredSystemWidgetBackgroundStyleKey()
{
  return &type metadata for PreferredSystemWidgetBackgroundStyleKey;
}

unint64_t sub_190907B0C()
{
  unint64_t result;

  result = qword_1ECF6B338;
  if (!qword_1ECF6B338)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetBackgroundStyle, &type metadata for WidgetBackgroundStyle);
    atomic_store(result, (unint64_t *)&qword_1ECF6B338);
  }
  return result;
}

unint64_t sub_190907B54()
{
  unint64_t result;

  result = qword_1ECF6BF20;
  if (!qword_1ECF6BF20)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetBackgroundStyle, &type metadata for WidgetBackgroundStyle);
    atomic_store(result, (unint64_t *)&qword_1ECF6BF20);
  }
  return result;
}

unint64_t sub_190907B9C()
{
  unint64_t result;

  result = qword_1ECF6BF10;
  if (!qword_1ECF6BF10)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetBackgroundStyle, &type metadata for WidgetBackgroundStyle);
    atomic_store(result, (unint64_t *)&qword_1ECF6BF10);
  }
  return result;
}

uint64_t sub_190907BE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECEC0);
  v5 = MEMORY[0x1E0C80A78](v37);
  v36 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v35 = (_QWORD *)((char *)v31 - v8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (_QWORD *)((char *)v31 - v9);
  v41 = MEMORY[0x1E0DEE9D8];
  sub_1908B8C6C(0, 0, 0);
  v11 = v41;
  v12 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v34 = v12;
  v31[1] = a1;
  if (v12)
  {
    v13 = type metadata accessor for ControlTemplatePicker.Option(0);
    v14 = 0;
    v15 = *(_QWORD *)(v13 - 8);
    v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v32 = *(_QWORD *)(v15 + 72);
    v33 = v13;
    do
    {
      v17 = v37;
      v18 = (uint64_t)&v36[*(int *)(v37 + 48)];
      sub_1908AF5D8(v16, v18, type metadata accessor for ControlTemplatePicker.Option);
      v19 = (uint64_t)v35;
      v20 = (uint64_t)v35 + *(int *)(v17 + 48);
      *v35 = v14;
      sub_19090AEF8(v18, v20);
      sub_19090CC98(v19, (uint64_t)v10);
      v21 = *v10;
      v22 = (char *)v10 + *(int *)(v17 + 48);
      v39 = 0;
      v40 = 0xE000000000000000;
      sub_190A48298();
      swift_bridgeObjectRelease();
      v38 = v21;
      v39 = 91;
      v40 = 0xE100000000000000;
      sub_190A4867C();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      swift_bridgeObjectRetain();
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      sub_190A47B3C();
      sub_1908AAA48((uint64_t)&v22[*(int *)(v33 + 20)], (uint64_t)v4, (uint64_t *)&unk_1ECF6A3B8);
      v23 = sub_190A47260();
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v4, 1, v23) == 1)
      {
        sub_1908AA544((uint64_t)v4, (uint64_t *)&unk_1ECF6A3B8);
      }
      else
      {
        sub_190A471DC();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v23);
      }
      sub_190A47B3C();
      swift_bridgeObjectRelease();
      v25 = v39;
      v26 = v40;
      sub_1908AA544((uint64_t)v10, &qword_1EE1ECEC0);
      v11 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1908B8C6C(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v11 = v41;
      }
      v28 = *(_QWORD *)(v11 + 16);
      v27 = *(_QWORD *)(v11 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1908B8C6C(v27 > 1, v28 + 1, 1);
        v11 = v41;
      }
      ++v14;
      *(_QWORD *)(v11 + 16) = v28 + 1;
      v29 = v11 + 16 * v28;
      *(_QWORD *)(v29 + 32) = v25;
      *(_QWORD *)(v29 + 40) = v26;
      v16 += v32;
    }
    while (v34 != v14);
  }
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_190907FBC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (int *)type metadata accessor for ControlTemplatePicker(0);
  __swift_allocate_value_buffer((uint64_t)v3, qword_1EE1ECE08);
  v4 = __swift_project_value_buffer((uint64_t)v3, (uint64_t)qword_1EE1ECE08);
  v5 = sub_190A45FC4();
  v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v2, 1, 1, v5);
  v7 = v4 + v3[7];
  v6((char *)v7, 1, 1, v5);
  v8 = (_QWORD *)(v4 + v3[11]);
  *v8 = 0;
  v8[1] = 0;
  *(_QWORD *)v4 = MEMORY[0x1E0DEE9D8];
  *(_OWORD *)(v4 + 8) = 0u;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_BYTE *)(v4 + v3[8]) = 0;
  sub_1908DCA84((uint64_t)v2, v7, (uint64_t *)&unk_1ECF6C858);
  *(_BYTE *)(v4 + v3[9]) = 0;
  *(_BYTE *)(v4 + v3[10]) = 0;
  result = swift_bridgeObjectRelease();
  *v8 = 0;
  v8[1] = 0;
  *(_BYTE *)(v4 + v3[12]) = 0;
  return result;
}

uint64_t ControlTemplatePicker.init(options:title:subtitle:renderAsSlider:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, _QWORD *a9@<X8>, char a10, uint64_t a11, uint64_t a12, char a13)
{
  int *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t result;

  v20 = (int *)type metadata accessor for ControlTemplatePicker(0);
  v21 = (uint64_t)a9 + v20[7];
  v22 = sub_190A45FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  v23 = (_QWORD *)((char *)a9 + v20[11]);
  *v23 = 0;
  v23[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  *((_BYTE *)a9 + v20[8]) = a6;
  sub_1908DCA84(a7, v21, (uint64_t *)&unk_1ECF6C858);
  *((_BYTE *)a9 + v20[9]) = a8;
  *((_BYTE *)a9 + v20[10]) = a10;
  result = swift_bridgeObjectRelease();
  *v23 = a11;
  v23[1] = a12;
  *((_BYTE *)a9 + v20[12]) = a13;
  return result;
}

uint64_t type metadata accessor for ControlTemplatePicker(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1ECF6BEE0);
}

uint64_t static ControlTemplatePicker.empty.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EE1EC4B8 != -1)
    swift_once();
  v2 = type metadata accessor for ControlTemplatePicker(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE1ECE08);
  swift_beginAccess();
  return sub_1908AF5D8(v3, a1, type metadata accessor for ControlTemplatePicker);
}

uint64_t static ControlTemplatePicker.empty.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EE1EC4B8 != -1)
    swift_once();
  v2 = type metadata accessor for ControlTemplatePicker(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE1ECE08);
  swift_beginAccess();
  sub_190908370(a1, v3);
  swift_endAccess();
  return sub_1908B5150(a1, type metadata accessor for ControlTemplatePicker);
}

uint64_t sub_190908370(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ControlTemplatePicker(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t (*static ControlTemplatePicker.empty.modify())()
{
  uint64_t v0;

  if (qword_1EE1EC4B8 != -1)
    swift_once();
  v0 = type metadata accessor for ControlTemplatePicker(0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE1ECE08);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ControlTemplatePicker.Option.value.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplatePicker.Option.value.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ControlTemplatePicker.Option.value.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplatePicker.Option.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ControlTemplatePicker.Option(0);
  return sub_1908AAA48(v1 + *(int *)(v3 + 20), a1, (uint64_t *)&unk_1ECF6A3B8);
}

uint64_t type metadata accessor for ControlTemplatePicker.Option(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1EE1EA6C0);
}

uint64_t ControlTemplatePicker.Option.icon.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ControlTemplatePicker.Option(0);
  return sub_1908DCA84(a1, v1 + *(int *)(v3 + 20), (uint64_t *)&unk_1ECF6A3B8);
}

uint64_t (*ControlTemplatePicker.Option.icon.modify())()
{
  type metadata accessor for ControlTemplatePicker.Option(0);
  return nullsub_1;
}

uint64_t ControlTemplatePicker.Option.tint.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ControlTemplatePicker.Option(0) + 24));
}

uint64_t ControlTemplatePicker.Option.tint.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;

  result = type metadata accessor for ControlTemplatePicker.Option(0);
  v8 = v3 + *(int *)(result + 24);
  *(_QWORD *)v8 = a1;
  *(_QWORD *)(v8 + 8) = a2;
  *(_BYTE *)(v8 + 16) = a3 & 1;
  return result;
}

uint64_t (*ControlTemplatePicker.Option.tint.modify())()
{
  type metadata accessor for ControlTemplatePicker.Option(0);
  return nullsub_1;
}

uint64_t ControlTemplatePicker.Option.status.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ControlTemplatePicker.Option(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplatePicker.Option.status.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ControlTemplatePicker.Option(0) + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ControlTemplatePicker.Option.status.modify())()
{
  type metadata accessor for ControlTemplatePicker.Option(0);
  return nullsub_1;
}

uint64_t ControlTemplatePicker.Option.actionHint.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ControlTemplatePicker.Option(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplatePicker.Option.actionHint.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ControlTemplatePicker.Option(0) + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ControlTemplatePicker.Option.actionHint.modify())()
{
  type metadata accessor for ControlTemplatePicker.Option(0);
  return nullsub_1;
}

uint64_t ControlTemplatePicker.Option.init(value:icon:tint:status:actionHint:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  int *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t result;

  v17 = (int *)type metadata accessor for ControlTemplatePicker.Option(0);
  v18 = (uint64_t)a9 + v17[5];
  v19 = sub_190A47260();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = (char *)a9 + v17[6];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 1;
  v21 = (_QWORD *)((char *)a9 + v17[7]);
  *v21 = 0;
  v21[1] = 0;
  v22 = (_QWORD *)((char *)a9 + v17[8]);
  *v22 = 0;
  v22[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  sub_1908DCA84(a3, v18, (uint64_t *)&unk_1ECF6A3B8);
  *(_QWORD *)v20 = a4;
  *((_QWORD *)v20 + 1) = a5;
  v20[16] = a6 & 1;
  swift_bridgeObjectRelease();
  *v21 = a7;
  v21[1] = a8;
  result = swift_bridgeObjectRelease();
  *v22 = a10;
  v22[1] = a11;
  return result;
}

uint64_t sub_190908868()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_190908894 + 4 * byte_190A4C7C0[*v0]))(0x65756C6176, 0xE500000000000000);
}

uint64_t sub_190908894()
{
  return 1852793705;
}

uint64_t sub_1909088A4()
{
  return 1953393012;
}

uint64_t sub_1909088B4()
{
  return 0x737574617473;
}

uint64_t sub_1909088C8()
{
  return 0x69486E6F69746361;
}

uint64_t sub_1909088E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19090C6CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190908908()
{
  sub_19090AE2C();
  return sub_190A48868();
}

uint64_t sub_190908930()
{
  sub_19090AE2C();
  return sub_190A48874();
}

uint64_t ControlTemplatePicker.Option.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  __int128 *v10;
  char v11;
  _BYTE v13[16];
  __int128 v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECE20);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19090AE2C();
  sub_190A48850();
  LOBYTE(v14) = 0;
  sub_190A485D4();
  if (!v2)
  {
    v9 = type metadata accessor for ControlTemplatePicker.Option(0);
    LOBYTE(v14) = 1;
    sub_190A47260();
    sub_1908AA2F4(&qword_1EE1EB698, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDCD18], MEMORY[0x1E0CDCD28]);
    sub_190A485EC();
    v10 = (__int128 *)(v3 + *(int *)(v9 + 24));
    v11 = *((_BYTE *)v10 + 16);
    v14 = *v10;
    v15 = v11;
    v13[15] = 2;
    sub_19090AE70();
    sub_190A485EC();
    LOBYTE(v14) = 3;
    sub_190A485D4();
    LOBYTE(v14) = 4;
    sub_190A485D4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ControlTemplatePicker.Option.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  _OWORD *v44;
  __int128 v45;
  char v46;
  char v47;

  v37 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  MEMORY[0x1E0C80A78](v3);
  v40 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECE30);
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for ControlTemplatePicker.Option(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v10 = 0;
  v10[1] = 0;
  v11 = (uint64_t)v10 + *(int *)(v8 + 20);
  v12 = sub_190A47260();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v38 = v11;
  v13(v11, 1, 1, v12);
  v14 = (char *)v10 + v7[6];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 1;
  v15 = (uint64_t *)((char *)v10 + v7[7]);
  *v15 = 0;
  v15[1] = 0;
  v16 = v7[8];
  v42 = a1;
  v43 = v10;
  v17 = (uint64_t *)((char *)v10 + v16);
  *v17 = 0;
  v17[1] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19090AE2C();
  v18 = v44;
  sub_190A48838();
  if (v18)
  {
    v23 = (uint64_t)v43;
  }
  else
  {
    v44 = v14;
    v35 = v17;
    v36 = v15;
    v19 = (uint64_t)v40;
    v20 = v41;
    LOBYTE(v45) = 0;
    v21 = sub_190A48514();
    v23 = (uint64_t)v43;
    *v43 = v21;
    *(_QWORD *)(v23 + 8) = v24;
    LOBYTE(v45) = 1;
    sub_1908AA2F4(&qword_1EE1EB730, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDCD18], MEMORY[0x1E0CDCD38]);
    sub_190A4852C();
    sub_1908DCA84(v19, v38, (uint64_t *)&unk_1ECF6A3B8);
    v47 = 2;
    sub_19090AEB4();
    sub_190A4852C();
    v25 = v46;
    v26 = v44;
    *v44 = v45;
    *((_BYTE *)v26 + 16) = v25;
    LOBYTE(v45) = 3;
    v27 = sub_190A48514();
    v29 = v28;
    v30 = v36;
    swift_bridgeObjectRelease();
    *v30 = v27;
    v30[1] = v29;
    LOBYTE(v45) = 4;
    v31 = sub_190A48514();
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v20);
    v34 = v35;
    swift_bridgeObjectRelease();
    *v34 = v31;
    v34[1] = v33;
    sub_1908AF5D8(v23, v37, type metadata accessor for ControlTemplatePicker.Option);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  return sub_1908B5150(v23, type metadata accessor for ControlTemplatePicker.Option);
}

uint64_t sub_190908EF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ControlTemplatePicker.Option.init(from:)(a1, a2);
}

uint64_t sub_190908F0C(_QWORD *a1)
{
  return ControlTemplatePicker.Option.encode(to:)(a1);
}

uint64_t ControlTemplatePicker.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ControlTemplatePicker.options.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*ControlTemplatePicker.options.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplatePicker.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplatePicker.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*ControlTemplatePicker.title.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplatePicker.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplatePicker.subtitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*ControlTemplatePicker.subtitle.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplatePicker.associatedURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ControlTemplatePicker(0);
  return sub_1908AAA48(v1 + *(int *)(v3 + 28), a1, (uint64_t *)&unk_1ECF6C858);
}

uint64_t ControlTemplatePicker.associatedURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ControlTemplatePicker(0);
  return sub_1908DCA84(a1, v1 + *(int *)(v3 + 28), (uint64_t *)&unk_1ECF6C858);
}

uint64_t (*ControlTemplatePicker.associatedURL.modify())()
{
  type metadata accessor for ControlTemplatePicker(0);
  return nullsub_1;
}

uint64_t ControlTemplatePicker.renderAsSlider.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplatePicker(0) + 32));
}

uint64_t ControlTemplatePicker.renderAsSlider.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ControlTemplatePicker(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*ControlTemplatePicker.renderAsSlider.modify())()
{
  type metadata accessor for ControlTemplatePicker(0);
  return nullsub_1;
}

uint64_t ControlTemplatePicker.privacySensitive.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplatePicker(0) + 36));
}

uint64_t ControlTemplatePicker.privacySensitive.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ControlTemplatePicker(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*ControlTemplatePicker.privacySensitive.modify())()
{
  type metadata accessor for ControlTemplatePicker(0);
  return nullsub_1;
}

uint64_t ControlTemplatePicker.disabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplatePicker(0) + 40));
}

uint64_t ControlTemplatePicker.disabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ControlTemplatePicker(0);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*ControlTemplatePicker.disabled.modify())()
{
  type metadata accessor for ControlTemplatePicker(0);
  return nullsub_1;
}

uint64_t ControlTemplatePicker.accessibilityIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ControlTemplatePicker(0) + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplatePicker.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ControlTemplatePicker(0) + 44));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ControlTemplatePicker.accessibilityIdentifier.modify())()
{
  type metadata accessor for ControlTemplatePicker(0);
  return nullsub_1;
}

uint64_t ControlTemplatePicker.rasterizedImagesAllowed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplatePicker(0) + 48));
}

uint64_t ControlTemplatePicker.rasterizedImagesAllowed.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ControlTemplatePicker(0);
  *(_BYTE *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*ControlTemplatePicker.rasterizedImagesAllowed.modify())()
{
  type metadata accessor for ControlTemplatePicker(0);
  return nullsub_1;
}

uint64_t ControlTemplatePicker.asPlaceholder()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  char v45;
  char v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  char *v54;
  uint64_t *v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;

  v56 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  MEMORY[0x1E0C80A78](v2);
  v62 = (uint64_t)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for ControlTemplatePicker.Option(0);
  v4 = *(_QWORD *)(v61 - 8);
  v5 = MEMORY[0x1E0C80A78](v61);
  v60 = (uint64_t *)((char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v53 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v53 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v12);
  v54 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = v1;
  v14 = *v1;
  v15 = *(_QWORD *)(*v1 + 16);
  v16 = MEMORY[0x1E0DEE9D8];
  if (v15)
  {
    v67 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1908B8D28(0, v15, 0);
    v17 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v53 = v14;
    v58 = v17;
    v59 = v11;
    v18 = v14 + v17;
    v57 = *(_QWORD *)(v4 + 72);
    do
    {
      v66 = v15;
      sub_1908AF5D8(v18, (uint64_t)v9, type metadata accessor for ControlTemplatePicker.Option);
      if (qword_1EE1EC540 != -1)
        swift_once();
      swift_beginAccess();
      v19 = *(_QWORD *)algn_1EE1EE3A8;
      v65 = qword_1EE1EE3A0;
      v21 = (int *)v61;
      v20 = v62;
      sub_1908AAA48((uint64_t)&v9[*(int *)(v61 + 20)], v62, (uint64_t *)&unk_1ECF6A3B8);
      v22 = v21[5];
      v23 = &v9[v21[6]];
      v24 = *(_QWORD *)v23;
      v63 = *((_QWORD *)v23 + 1);
      LODWORD(v64) = v23[16];
      v25 = v60;
      v26 = (uint64_t)v60 + v22;
      v27 = sub_190A47260();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
      v28 = (char *)v25 + v21[6];
      *(_QWORD *)v28 = 0;
      *((_QWORD *)v28 + 1) = 0;
      v28[16] = 1;
      v29 = v9;
      v30 = (uint64_t *)((char *)v25 + v21[7]);
      *v30 = 0;
      v30[1] = 0;
      v31 = (uint64_t *)((char *)v25 + v21[8]);
      *v31 = 0;
      v31[1] = 0;
      *v25 = v65;
      v25[1] = v19;
      swift_bridgeObjectRetain();
      sub_1908DCA84(v20, v26, (uint64_t *)&unk_1ECF6A3B8);
      v32 = v63;
      *(_QWORD *)v28 = v24;
      *((_QWORD *)v28 + 1) = v32;
      v28[16] = v64;
      swift_bridgeObjectRelease();
      *v30 = 0;
      v30[1] = 0;
      v9 = v29;
      swift_bridgeObjectRelease();
      *v31 = 0;
      v31[1] = 0;
      v33 = (uint64_t)v59;
      sub_19090AEF8((uint64_t)v25, (uint64_t)v59);
      sub_1908B5150((uint64_t)v9, type metadata accessor for ControlTemplatePicker.Option);
      v16 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1908B8D28(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v16 = v67;
      }
      v34 = v66;
      v36 = *(_QWORD *)(v16 + 16);
      v35 = *(_QWORD *)(v16 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_1908B8D28(v35 > 1, v36 + 1, 1);
        v16 = v67;
      }
      *(_QWORD *)(v16 + 16) = v36 + 1;
      v37 = v57;
      sub_19090AEF8(v33, v16 + v58 + v36 * v57);
      v18 += v37;
      v15 = v34 - 1;
    }
    while (v15);
    swift_bridgeObjectRelease();
  }
  if (qword_1EE1EC530 != -1)
    swift_once();
  swift_beginAccess();
  v65 = qword_1EE1EE380;
  v66 = *(_QWORD *)algn_1EE1EE388;
  v38 = qword_1EE1EC538;
  swift_bridgeObjectRetain();
  if (v38 != -1)
    swift_once();
  swift_beginAccess();
  v39 = *(_QWORD *)algn_1EE1EE398;
  v64 = qword_1EE1EE390;
  v40 = (int *)type metadata accessor for ControlTemplatePicker(0);
  v41 = v55;
  LODWORD(v62) = *((unsigned __int8 *)v55 + v40[8]);
  v42 = sub_190A45FC4();
  v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56);
  v44 = (uint64_t)v54;
  v43(v54, 1, 1, v42);
  v45 = *((_BYTE *)v41 + v40[9]);
  v46 = *((_BYTE *)v41 + v40[10]);
  LODWORD(v63) = *((unsigned __int8 *)v41 + v40[12]);
  v47 = v56;
  v48 = (uint64_t)v56 + v40[7];
  v43((char *)v48, 1, 1, v42);
  v49 = (_QWORD *)((char *)v47 + v40[11]);
  *v49 = 0;
  v49[1] = 0;
  v50 = v65;
  *v47 = v16;
  v47[1] = v50;
  v51 = v64;
  v47[2] = v66;
  v47[3] = v51;
  v47[4] = v39;
  *((_BYTE *)v47 + v40[8]) = v62;
  swift_bridgeObjectRetain();
  sub_1908DCA84(v44, v48, (uint64_t *)&unk_1ECF6C858);
  *((_BYTE *)v47 + v40[9]) = v45;
  *((_BYTE *)v47 + v40[10]) = v46;
  result = swift_bridgeObjectRelease();
  *v49 = 0;
  v49[1] = 0;
  *((_BYTE *)v47 + v40[12]) = v63;
  return result;
}

uint64_t sub_190909880(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1909098B4 + 4 * byte_190A4C7C5[a1]))(0x736E6F6974706FLL, 0xE700000000000000);
}

uint64_t sub_1909098B4()
{
  return 0x656C746974;
}

uint64_t sub_1909098C8()
{
  return 0x656C746974627573;
}

uint64_t sub_1909098E0()
{
  return 0x746169636F737361;
}

uint64_t sub_190909904()
{
  return 0x73417265646E6572;
}

unint64_t sub_190909928()
{
  return 0xD000000000000010;
}

uint64_t sub_190909948()
{
  return 0x64656C6261736964;
}

unint64_t sub_190909960()
{
  return 0xD000000000000017;
}

uint64_t sub_190909988()
{
  unsigned __int8 *v0;

  return sub_190909880(*v0);
}

uint64_t sub_190909990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19090C8C4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1909099B4(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1909099C0()
{
  sub_19090AF3C();
  return sub_190A48868();
}

uint64_t sub_1909099E8()
{
  sub_19090AF3C();
  return sub_190A48874();
}

uint64_t ControlTemplatePicker.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[8];
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECE38);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19090AF3C();
  sub_190A48850();
  v11 = *v3;
  v10[7] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECE48);
  sub_19090AF80(&qword_1EE1ECE50, &qword_1EE1ECE58, (uint64_t)&protocol conformance descriptor for ControlTemplatePicker.Option, MEMORY[0x1E0DEAF10]);
  sub_190A48640();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_190A485D4();
    LOBYTE(v11) = 2;
    sub_190A485D4();
    type metadata accessor for ControlTemplatePicker(0);
    LOBYTE(v11) = 3;
    sub_190A45FC4();
    sub_1908AA2F4(&qword_1ECF6C648, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_190A485EC();
    LOBYTE(v11) = 4;
    sub_190A48604();
    LOBYTE(v11) = 5;
    sub_190A48604();
    LOBYTE(v11) = 6;
    sub_190A48604();
    LOBYTE(v11) = 7;
    sub_190A485D4();
    LOBYTE(v11) = 8;
    sub_190A48604();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ControlTemplatePicker.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char v46;
  uint64_t v47;

  v38 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECE60);
  v6 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for ControlTemplatePicker(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v12 + 24) = 0u;
  *(_OWORD *)(v12 + 8) = 0u;
  v13 = &v12[*(int *)(v10 + 28)];
  v14 = sub_190A45FC4();
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v43 = (uint64_t)v13;
  v15(v13, 1, 1, v14);
  v16 = v9[11];
  v45 = v12;
  v17 = &v12[v16];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v41 = a1;
  v42 = v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19090AF3C();
  v40 = v8;
  v18 = v44;
  sub_190A48838();
  if (v18)
  {
    v19 = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1908AA544(v19, (uint64_t *)&unk_1ECF6C858);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v37 = v14;
    v44 = (uint64_t)v5;
    v20 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECE48);
    v46 = 0;
    sub_19090AF80(&qword_1EE1ECE68, &qword_1EE1ECE70, (uint64_t)&protocol conformance descriptor for ControlTemplatePicker.Option, MEMORY[0x1E0DEAF40]);
    sub_190A48580();
    v21 = v43;
    v23 = v45;
    *v45 = v47;
    LOBYTE(v47) = 1;
    v24 = sub_190A48514();
    v25 = (uint64_t)v41;
    v26 = (uint64_t *)v42;
    v23[1] = v24;
    v23[2] = v27;
    LOBYTE(v47) = 2;
    v23[3] = sub_190A48514();
    v23[4] = v28;
    LOBYTE(v47) = 3;
    sub_1908AA2F4(&qword_1ECF69D80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    v29 = v44;
    sub_190A4852C();
    sub_1908DCA84(v29, v21, (uint64_t *)&unk_1ECF6C858);
    LOBYTE(v47) = 4;
    v30 = sub_190A48544();
    v31 = (uint64_t)v45;
    *((_BYTE *)v45 + v9[8]) = v30 & 1;
    LOBYTE(v47) = 5;
    *(_BYTE *)(v31 + v9[9]) = sub_190A48544() & 1;
    LOBYTE(v47) = 6;
    *(_BYTE *)(v31 + v9[10]) = sub_190A48544() & 1;
    LOBYTE(v47) = 7;
    v32 = sub_190A48514();
    v34 = v33;
    swift_bridgeObjectRelease();
    *v26 = v32;
    v26[1] = v34;
    LOBYTE(v47) = 8;
    v36 = v39;
    v35 = v40;
    LODWORD(v44) = sub_190A48544();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v35, v36);
    *(_BYTE *)(v31 + v9[12]) = v44 & 1;
    sub_1908AF5D8(v31, v38, type metadata accessor for ControlTemplatePicker);
    __swift_destroy_boxed_opaque_existential_1(v25);
    return sub_1908B5150(v31, type metadata accessor for ControlTemplatePicker);
  }
}

uint64_t sub_19090A170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1908AAA48(v2 + *(int *)(a1 + 28), a2, (uint64_t *)&unk_1ECF6C858);
}

uint64_t sub_19090A198(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

uint64_t sub_19090A1A4(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 40));
}

uint64_t sub_19090A1B0(void (*a1)(char *))
{
  return ControlTemplatePicker.validateIcon(_:)(a1);
}

uint64_t ControlTemplatePicker.validateIcon(_:)(void (*a1)(char *))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  void (*v24)(char *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v24 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_190A47260();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ControlTemplatePicker.Option(0);
  result = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v1;
  v16 = *(_QWORD *)(*v1 + 16);
  if (!v16)
    return result;
  v28 = v2;
  v17 = (uint64_t)&v14[*(int *)(result + 20)];
  v26 = v6;
  v27 = v17;
  v18 = v15 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v25 = *(_QWORD *)(v12 + 72);
  v23[1] = v15;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1908AF5D8(v18, (uint64_t)v14, type metadata accessor for ControlTemplatePicker.Option);
    sub_1908AAA48(v27, (uint64_t)v5, (uint64_t *)&unk_1ECF6A3B8);
    sub_1908B5150((uint64_t)v14, type metadata accessor for ControlTemplatePicker.Option);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    v20 = v7;
    v21 = v26;
    if (v19(v5, 1, v26) != 1)
      break;
    sub_1908AA544((uint64_t)v5, (uint64_t *)&unk_1ECF6A3B8);
LABEL_4:
    v7 = v20;
    v18 += v25;
    if (!--v16)
      return swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v9, v5, v21);
  v22 = v28;
  v24(v9);
  v28 = v22;
  if (!v22)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v21);
    goto LABEL_4;
  }
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v21);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19090A3F8(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 48));
}

uint64_t sub_19090A408@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ControlTemplatePicker.init(from:)(a1, a2);
}

uint64_t sub_19090A41C(_QWORD *a1)
{
  return ControlTemplatePicker.encode(to:)(a1);
}

uint64_t ControlTemplatePicker.debugDescription.getter()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_190907BE8(v0);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6CD08);
  sub_19090B004();
  sub_190A47A58();
  swift_bridgeObjectRelease();
  sub_190A48298();
  sub_190A47B3C();
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  return 0;
}

uint64_t _s9WidgetKit21ControlTemplatePickerV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  char v32;
  void (*v33)(char *, uint64_t);
  int *v34;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;

  v4 = sub_190A45FC4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA438);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v42 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v42 - v18;
  if ((sub_190917E6C(*a1, *a2) & 1) == 0)
    goto LABEL_26;
  v20 = a1[2];
  v21 = a2[2];
  if (!v20)
  {
    if (v21)
      goto LABEL_26;
    goto LABEL_9;
  }
  if (!v21)
    goto LABEL_26;
  if (a1[1] == a2[1] && v20 == v21 || (v22 = sub_190A486DC(), v23 = 0, (v22 & 1) != 0))
  {
LABEL_9:
    v24 = a1[4];
    v25 = a2[4];
    if (v24)
    {
      if (!v25)
        goto LABEL_26;
      if (a1[3] != a2[3] || v24 != v25)
      {
        v26 = sub_190A486DC();
        v23 = 0;
        if ((v26 & 1) == 0)
          return v23 & 1;
      }
    }
    else if (v25)
    {
      goto LABEL_26;
    }
    v27 = type metadata accessor for ControlTemplatePicker(0);
    v44 = v4;
    v28 = (int *)v27;
    sub_1908AAA48((uint64_t)a1 + *(int *)(v27 + 28), (uint64_t)v19, (uint64_t *)&unk_1ECF6C858);
    v43 = v28;
    sub_1908AAA48((uint64_t)a2 + v28[7], (uint64_t)v17, (uint64_t *)&unk_1ECF6C858);
    v29 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1908AAA48((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1ECF6C858);
    v45 = v29;
    v30 = v44;
    sub_1908AAA48((uint64_t)v17, v29, (uint64_t *)&unk_1ECF6C858);
    v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v31((uint64_t)v10, 1, v30) == 1)
    {
      sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6C858);
      sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6C858);
      if (v31(v45, 1, v30) == 1)
      {
        sub_1908AA544((uint64_t)v10, (uint64_t *)&unk_1ECF6C858);
LABEL_23:
        v34 = v43;
        if (*((unsigned __int8 *)a1 + v43[8]) != *((unsigned __int8 *)a2 + v43[8])
          || *((unsigned __int8 *)a1 + v43[9]) != *((unsigned __int8 *)a2 + v43[9])
          || *((unsigned __int8 *)a1 + v43[10]) != *((unsigned __int8 *)a2 + v43[10]))
        {
          goto LABEL_26;
        }
        v36 = v43[11];
        v37 = (uint64_t *)((char *)a1 + v36);
        v38 = *(uint64_t *)((char *)a1 + v36 + 8);
        v39 = (uint64_t *)((char *)a2 + v36);
        v40 = v39[1];
        if (v38)
        {
          if (v40)
          {
            if (*v37 != *v39 || v38 != v40)
            {
              v41 = sub_190A486DC();
              v23 = 0;
              if ((v41 & 1) == 0)
                return v23 & 1;
            }
LABEL_35:
            v23 = *((_BYTE *)a1 + v34[12]) ^ *((_BYTE *)a2 + v34[12]) ^ 1;
            return v23 & 1;
          }
        }
        else if (!v40)
        {
          goto LABEL_35;
        }
LABEL_26:
        v23 = 0;
        return v23 & 1;
      }
    }
    else
    {
      sub_1908AAA48((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_1ECF6C858);
      if (v31(v45, 1, v30) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v45, v30);
        sub_1908AA2F4(&qword_1EE1ECEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
        v32 = sub_190A47AAC();
        v33 = *(void (**)(char *, uint64_t))(v5 + 8);
        v33(v7, v30);
        sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6C858);
        sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6C858);
        v33(v14, v30);
        sub_1908AA544((uint64_t)v10, (uint64_t *)&unk_1ECF6C858);
        if ((v32 & 1) == 0)
          goto LABEL_26;
        goto LABEL_23;
      }
      sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6C858);
      sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6C858);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v30);
    }
    sub_1908AA544((uint64_t)v10, &qword_1EE1EA438);
    goto LABEL_26;
  }
  return v23 & 1;
}

uint64_t _s9WidgetKit21ControlTemplatePickerV6OptionV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  char *v29;
  char v30;
  void (*v31)(char *, uint64_t);
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;

  v4 = sub_190A47260();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA440);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v47 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v47 - v18;
  v20 = a1[1];
  v21 = a2[1];
  if (!v20)
  {
    if (v21)
      return 0;
    goto LABEL_8;
  }
  if (!v21)
    return 0;
  if (*a1 == *a2 && v20 == v21 || (v22 = sub_190A486DC(), result = 0, (v22 & 1) != 0))
  {
LABEL_8:
    v47 = v7;
    v24 = type metadata accessor for ControlTemplatePicker.Option(0);
    v25 = *(int *)(v24 + 20);
    v49 = a1;
    sub_1908AAA48((uint64_t)a1 + v25, (uint64_t)v19, (uint64_t *)&unk_1ECF6A3B8);
    v48 = v24;
    v26 = *(int *)(v24 + 20);
    v50 = a2;
    sub_1908AAA48((uint64_t)a2 + v26, (uint64_t)v17, (uint64_t *)&unk_1ECF6A3B8);
    v27 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1908AAA48((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1ECF6A3B8);
    sub_1908AAA48((uint64_t)v17, v27, (uint64_t *)&unk_1ECF6A3B8);
    v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v28((uint64_t)v10, 1, v4) == 1)
    {
      sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6A3B8);
      sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6A3B8);
      if (v28(v27, 1, v4) == 1)
      {
        sub_1908AA544((uint64_t)v10, (uint64_t *)&unk_1ECF6A3B8);
LABEL_17:
        v33 = v48;
        v32 = v49;
        v34 = *(int *)(v48 + 24);
        v35 = v50;
        if ((*((_BYTE *)v49 + v34 + 16) & 1) != 0)
        {
          if (!*((_BYTE *)v50 + v34 + 16))
            return 0;
        }
        else if ((*((_BYTE *)v50 + v34 + 16) & 1) != 0 || (sub_190A4768C() & 1) == 0)
        {
          return 0;
        }
        v36 = *(int *)(v33 + 28);
        v37 = (_QWORD *)((char *)v32 + v36);
        v38 = *(_QWORD *)((char *)v32 + v36 + 8);
        v39 = (_QWORD *)((char *)v35 + v36);
        v40 = v39[1];
        if (v38)
        {
          if (!v40)
            return 0;
          if (*v37 != *v39 || v38 != v40)
          {
            v41 = sub_190A486DC();
            result = 0;
            if ((v41 & 1) == 0)
              return result;
          }
        }
        else if (v40)
        {
          return 0;
        }
        v42 = *(int *)(v33 + 32);
        v43 = (_QWORD *)((char *)v32 + v42);
        v44 = *(_QWORD *)((char *)v32 + v42 + 8);
        v45 = (_QWORD *)((char *)v35 + v42);
        v46 = v45[1];
        if (v44)
        {
          if (v46 && (*v43 == *v45 && v44 == v46 || (sub_190A486DC() & 1) != 0))
            return 1;
        }
        else if (!v46)
        {
          return 1;
        }
        return 0;
      }
    }
    else
    {
      sub_1908AAA48((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_1ECF6A3B8);
      if (v28(v27, 1, v4) != 1)
      {
        v29 = v47;
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v47, v27, v4);
        sub_1908AA2F4(&qword_1EE1ECED0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDCD18], MEMORY[0x1E0CDCD30]);
        v30 = sub_190A47AAC();
        v31 = *(void (**)(char *, uint64_t))(v5 + 8);
        v31(v29, v4);
        sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6A3B8);
        sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6A3B8);
        v31(v14, v4);
        sub_1908AA544((uint64_t)v10, (uint64_t *)&unk_1ECF6A3B8);
        if ((v30 & 1) == 0)
          return 0;
        goto LABEL_17;
      }
      sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6A3B8);
      sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6A3B8);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    }
    sub_1908AA544((uint64_t)v10, &qword_1EE1EA440);
    return 0;
  }
  return result;
}

unint64_t sub_19090AE2C()
{
  unint64_t result;

  result = qword_1EE1ECE28;
  if (!qword_1EE1ECE28)
  {
    result = MEMORY[0x19401429C](&unk_190A4CBC4, &type metadata for ControlTemplatePicker.Option.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ECE28);
  }
  return result;
}

unint64_t sub_19090AE70()
{
  unint64_t result;

  result = qword_1EE1EBA00;
  if (!qword_1EE1EBA00)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDF578], MEMORY[0x1E0CDF570]);
    atomic_store(result, (unint64_t *)&qword_1EE1EBA00);
  }
  return result;
}

unint64_t sub_19090AEB4()
{
  unint64_t result;

  result = qword_1EE1EB738;
  if (!qword_1EE1EB738)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0CDF580], MEMORY[0x1E0CDF570]);
    atomic_store(result, (unint64_t *)&qword_1EE1EB738);
  }
  return result;
}

uint64_t sub_19090AEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ControlTemplatePicker.Option(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_19090AF3C()
{
  unint64_t result;

  result = qword_1EE1ECE40;
  if (!qword_1EE1ECE40)
  {
    result = MEMORY[0x19401429C](&unk_190A4CB74, &type metadata for ControlTemplatePicker.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ECE40);
  }
  return result;
}

uint64_t sub_19090AF80(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE1ECE48);
    v10 = sub_1908AA2F4(a2, type metadata accessor for ControlTemplatePicker.Option, a3);
    result = MEMORY[0x19401429C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19090B004()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1EAE30;
  if (!qword_1EE1EAE30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ECF6CD08);
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1EAE30);
  }
  return result;
}

uint64_t sub_19090B050(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1908AA2F4(&qword_1EE1ECE78, type metadata accessor for ControlTemplatePicker, (uint64_t)&protocol conformance descriptor for ControlTemplatePicker);
  a1[2] = sub_1908AA2F4(&qword_1EE1ECE80, type metadata accessor for ControlTemplatePicker, (uint64_t)&protocol conformance descriptor for ControlTemplatePicker);
  result = sub_1908AA2F4(&qword_1EE1ECE88, type metadata accessor for ControlTemplatePicker, (uint64_t)&protocol conformance descriptor for ControlTemplatePicker);
  a1[3] = result;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ControlTemplatePicker(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char *__dst;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = a2[4];
    a1[3] = a2[3];
    a1[4] = v9;
    v10 = a3[7];
    __dst = (char *)a1 + v10;
    v11 = (char *)a2 + v10;
    v12 = sub_190A45FC4();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v16 = a3[9];
    *((_BYTE *)v7 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *((_BYTE *)v7 + v16) = *((_BYTE *)a2 + v16);
    v17 = a3[11];
    *((_BYTE *)v7 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    v18 = (_QWORD *)((char *)v7 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *((_BYTE *)v7 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for ControlTemplatePicker(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_190A45FC4();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ControlTemplatePicker(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  v8 = a3[7];
  __dst = (char *)a1 + v8;
  v9 = (char *)a2 + v8;
  v10 = sub_190A45FC4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(__dst, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  v14 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
  v15 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ControlTemplatePicker(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_190A45FC4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v15 = a3[11];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  return a1;
}

uint64_t initializeWithTake for ControlTemplatePicker(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_190A45FC4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  return a1;
}

_QWORD *assignWithTake for ControlTemplatePicker(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_190A45FC4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  v17 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
  v18 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlTemplatePicker()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19090B880(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ControlTemplatePicker()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_19090B90C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

void sub_19090B984()
{
  unint64_t v0;

  sub_1908BBFB0(319, (unint64_t *)&qword_1ECF6D220, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *initializeBufferWithCopyOfBuffer for ControlTemplatePicker.Option(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_190A47260();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[6];
    v17 = a3[7];
    v18 = (char *)v4 + v16;
    v19 = (char *)a2 + v16;
    *(_OWORD *)v18 = *(_OWORD *)v19;
    v18[16] = v19[16];
    v20 = (uint64_t *)((char *)v4 + v17);
    v21 = (uint64_t *)((char *)a2 + v17);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = a3[8];
    v24 = (uint64_t *)((char *)v4 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ControlTemplatePicker.Option(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_190A47260();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ControlTemplatePicker.Option(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_190A47260();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[6];
  v15 = a3[7];
  v16 = (char *)a1 + v14;
  v17 = (char *)a2 + v14;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  v16[16] = v17[16];
  v18 = (_QWORD *)((char *)a1 + v15);
  v19 = (_QWORD *)((char *)a2 + v15);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ControlTemplatePicker.Option(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_190A47260();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_OWORD *)v17;
  v16[16] = v17[16];
  *(_OWORD *)v16 = v18;
  v19 = a3[7];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ControlTemplatePicker.Option(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_190A47260();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithTake for ControlTemplatePicker.Option(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_190A47260();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = a3[6];
  v17 = a3[7];
  v18 = (char *)a1 + v16;
  v19 = (char *)a2 + v16;
  *(_OWORD *)v18 = *(_OWORD *)v19;
  v18[16] = v19[16];
  v20 = (_QWORD *)((char *)a1 + v17);
  v21 = (_QWORD *)((char *)a2 + v17);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  v24 = a3[8];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlTemplatePicker.Option()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19090C154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ControlTemplatePicker.Option()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19090C1EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_19090C264()
{
  unint64_t v0;

  sub_1908BBFB0(319, &qword_1ECF6BEB8, (void (*)(uint64_t))MEMORY[0x1E0CDCD18]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t getEnumTagSinglePayload for ControlTemplatePicker.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlTemplatePicker.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_19090C3D0 + 4 * byte_190A4C7D3[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_19090C404 + 4 * byte_190A4C7CE[v4]))();
}

uint64_t sub_19090C404(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19090C40C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19090C414);
  return result;
}

uint64_t sub_19090C420(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19090C428);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_19090C42C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19090C434(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplatePicker.CodingKeys()
{
  return &type metadata for ControlTemplatePicker.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ControlTemplatePicker.Option.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_19090C49C + 4 * byte_190A4C7DD[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_19090C4D0 + 4 * byte_190A4C7D8[v4]))();
}

uint64_t sub_19090C4D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19090C4D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19090C4E0);
  return result;
}

uint64_t sub_19090C4EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19090C4F4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_19090C4F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19090C500(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlTemplatePicker.Option.CodingKeys()
{
  return &type metadata for ControlTemplatePicker.Option.CodingKeys;
}

unint64_t sub_19090C520()
{
  unint64_t result;

  result = qword_1EE1ECE90;
  if (!qword_1EE1ECE90)
  {
    result = MEMORY[0x19401429C](&unk_190A4CA94, &type metadata for ControlTemplatePicker.Option.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ECE90);
  }
  return result;
}

unint64_t sub_19090C568()
{
  unint64_t result;

  result = qword_1EE1ECE98;
  if (!qword_1EE1ECE98)
  {
    result = MEMORY[0x19401429C](&unk_190A4CB4C, &type metadata for ControlTemplatePicker.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ECE98);
  }
  return result;
}

unint64_t sub_19090C5B0()
{
  unint64_t result;

  result = qword_1EE1ECEA0;
  if (!qword_1EE1ECEA0)
  {
    result = MEMORY[0x19401429C](&unk_190A4CABC, &type metadata for ControlTemplatePicker.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ECEA0);
  }
  return result;
}

unint64_t sub_19090C5F8()
{
  unint64_t result;

  result = qword_1EE1ECEA8;
  if (!qword_1EE1ECEA8)
  {
    result = MEMORY[0x19401429C](&unk_190A4CAE4, &type metadata for ControlTemplatePicker.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ECEA8);
  }
  return result;
}

unint64_t sub_19090C640()
{
  unint64_t result;

  result = qword_1EE1ECEB0;
  if (!qword_1EE1ECEB0)
  {
    result = MEMORY[0x19401429C](&unk_190A4CA04, &type metadata for ControlTemplatePicker.Option.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ECEB0);
  }
  return result;
}

unint64_t sub_19090C688()
{
  unint64_t result;

  result = qword_1EE1ECEB8;
  if (!qword_1EE1ECEB8)
  {
    result = MEMORY[0x19401429C](&unk_190A4CA2C, &type metadata for ControlTemplatePicker.Option.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ECEB8);
  }
  return result;
}

uint64_t sub_19090C6CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1852793705 && a2 == 0xE400000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1953393012 && a2 == 0xE400000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x69486E6F69746361 && a2 == 0xEA0000000000746ELL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_19090C8C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746169636F737361 && a2 == 0xED00004C52556465 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73417265646E6572 && a2 == 0xEE00726564696C53 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000190A61460 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x64656C6261736964 && a2 == 0xE800000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000190A61480 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000190A614A0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_19090CC98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECEC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19090CCF0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = a5;
  a7[1] = a6;
  a7[2] = result;
  a7[3] = a2;
  a7[4] = a3;
  a7[5] = a4;
  return result;
}

uint64_t AppIntentConfiguration.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  v24 = a2;
  v22 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v22);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WidgetDescriptor(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v23 = (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v2[2];
  v10 = *v2;
  v27 = v2[1];
  v28 = v9;
  v26 = v10;
  v11 = v27;
  v12 = v9;
  v13 = (_OWORD *)swift_allocObject();
  v14 = *(_OWORD *)(a1 + 32);
  v13[1] = *(_OWORD *)(a1 + 16);
  v13[2] = v14;
  v15 = v2[1];
  v13[3] = *v2;
  v13[4] = v15;
  v13[5] = v2[2];
  v16 = v26;
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = v16;
  *(_OWORD *)v5 = v11;
  *((_OWORD *)v5 + 1) = v12;
  *((_QWORD *)v5 + 4) = sub_19090CF84;
  *((_QWORD *)v5 + 5) = v13;
  *((_QWORD *)v5 + 6) = sub_19090D034;
  *((_QWORD *)v5 + 7) = v17;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_19090D03C((uint64_t)&v26);
  swift_retain();
  swift_retain();
  swift_retain();
  v18 = v23;
  sub_1909F2CA8((uint64_t)v5, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D300);
  v19 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_190A4A350;
  sub_1908AF5D8(v18, v20 + v19, type metadata accessor for WidgetDescriptor);
  v25 = v20;
  sub_19090D084();
  sub_190A46F00();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_190906988(v18);
}

uint64_t sub_19090CF50()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_19090CF84()
{
  uint64_t v0;

  return sub_1908B49BC((void (**)(_QWORD *__return_ptr))(v0 + 48));
}

uint64_t sub_19090CF94@<X0>(void (*a1)(_QWORD *__return_ptr)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *boxed_opaque_existential_1;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  a1(v8);
  v3 = v9;
  v4 = v10;
  v5 = __swift_project_boxed_opaque_existential_1(v8, v9);
  a2[3] = v3;
  a2[4] = *(_QWORD *)(v4 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1, v5, v3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t sub_19090D010()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_19090D034@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_19090CF94(*(void (**)(_QWORD *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_19090D03C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_19090D084()
{
  unint64_t result;

  result = qword_1ECF6D308;
  if (!qword_1ECF6D308)
  {
    result = MEMORY[0x19401429C](&unk_190A5A8C0, &type metadata for WidgetDescriptorKey);
    atomic_store(result, (unint64_t *)&qword_1ECF6D308);
  }
  return result;
}

uint64_t AppIntentRecommendation.init(intent:description:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t *v19;

  v13 = *(_QWORD *)(a5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a7, a1, a5);
  v14 = sub_19096C780();
  v16 = v15;
  sub_19090D1C4(a2, a3, a4 & 1);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, a5);
  result = type metadata accessor for AppIntentRecommendation(0, a5, a6, v17);
  v19 = (uint64_t *)(a7 + *(int *)(result + 36));
  *v19 = v14;
  v19[1] = v16;
  return result;
}

uint64_t sub_19090D1C4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for AppIntentRecommendation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AppIntentRecommendation);
}

uint64_t AppIntentRecommendation.init(intent:description:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t *v18;

  v7 = *(_QWORD *)(a2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a4, a1, a2);
  v8 = sub_190A474AC();
  v10 = v9;
  v12 = v11 & 1;
  v13 = sub_19096C780();
  v15 = v14;
  sub_19090D1C4(v8, v10, v12);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, a2);
  result = type metadata accessor for AppIntentRecommendation(0, a2, a3, v16);
  v18 = (uint64_t *)(a4 + *(int *)(result + 36));
  *v18 = v13;
  v18[1] = v15;
  return result;
}

uint64_t AppIntentRecommendation.init<A>(intent:description:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a6;
  v29 = a5;
  v26 = a2;
  v27 = a1;
  v9 = *(_QWORD *)(a4 - 8);
  v10 = MEMORY[0x1E0C80A78](a6);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t))(v14 + 16))(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, a4);
  v15 = sub_190A474B8();
  v17 = v16;
  v19 = v18 & 1;
  v20 = sub_19096C780();
  v22 = v21;
  sub_19090D1C4(v15, v17, v19);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v26, a4);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v27, a3);
  result = type metadata accessor for AppIntentRecommendation(0, a3, v29, v23);
  v25 = (uint64_t *)(v28 + *(int *)(result + 36));
  *v25 = v20;
  v25[1] = v22;
  return result;
}

uint64_t AppIntentConfiguration.init<A>(kind:intent:provider:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, void (**a7)()@<X8>, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  void (*v14)();
  void (*v15)();
  void (*v16)();
  void (*v17)();
  void (*v18)();
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  char *v23;
  void (*v25)();

  swift_getAssociatedConformanceWitness();
  v13 = sub_19093B3E8(a5, a1);
  v15 = v14;
  v25 = v16;
  v18 = v17;
  v19 = *(_QWORD *)(a8 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (*(_QWORD *)(v19 + 64) + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (char *)swift_allocObject();
  *((_QWORD *)v22 + 2) = a5;
  *((_QWORD *)v22 + 3) = a6;
  *((_QWORD *)v22 + 4) = a8;
  *((_QWORD *)v22 + 5) = a9;
  *((_QWORD *)v22 + 6) = a10;
  *((_QWORD *)v22 + 7) = v13;
  *((_QWORD *)v22 + 8) = v15;
  *((_QWORD *)v22 + 9) = v25;
  *((_QWORD *)v22 + 10) = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(&v22[v20], a2, a8);
  v23 = &v22[v21];
  *(_QWORD *)v23 = a3;
  *((_QWORD *)v23 + 1) = a4;
  *a7 = sub_19090D78C;
  a7[1] = (void (*)())v22;
  a7[2] = (void (*)())v13;
  a7[3] = v15;
  a7[4] = v25;
  a7[5] = v18;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_19090D5B0(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  type metadata accessor for AppIntentTimelineEntryProvider();
}

uint64_t sub_19090D634(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v9, v5, v8);
  v12 = (char *)swift_allocObject();
  v13 = *(_QWORD *)v12;
  *((_QWORD *)v12 + 2) = v7;
  *((_QWORD *)v12 + 3) = v2;
  *((_QWORD *)v12 + 4) = v6;
  *((_QWORD *)v12 + 5) = v3;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v13 + 80) - 8) + 32))(&v12[*(_QWORD *)(v13 + 120)], v9);
  v14 = &v12[*(_QWORD *)(*(_QWORD *)v12 + 128)];
  v15 = *(_QWORD *)(v10 - 120);
  *(_QWORD *)v14 = *(_QWORD *)(v10 - 128);
  *((_QWORD *)v14 + 1) = v15;
  v4[3] = a1;
  v4[4] = (char *)MEMORY[0x19401429C](&unk_190A4CE2C, a1);
  v4[5] = (char *)&off_1E2CC8F10;
  *v4 = v12;
  swift_bridgeObjectRetain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_19090D6F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_19090D78C()
{
  uint64_t v0;

  sub_19090D5B0(*(_QWORD *)(v0 + 56));
}

uint64_t sub_19090D7F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_19090D824()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_19090D82C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_19090D85C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_19090D8B0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_19090D948(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for KeyPathToggleBox(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KeyPathToggleBox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AppIntentConfiguration()
{
  JUMPOUT(0x1940141E8);
}

uint64_t sub_19090DA3C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_19090DA44()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_19090DAB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_19090DB74(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19090DBB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_19090DC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19090DC90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_19090DCEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19090DD58(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_19090DDD4 + 4 * byte_190A4CC50[v10]))();
  }
}

void sub_19090DE58(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_19090DF4C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x19090DFC4);
}

void sub_19090DF54(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x19090DF5CLL);
  JUMPOUT(0x19090DFC4);
}

void sub_19090DFA0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x19090DFC4);
}

void sub_19090DFA8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x19090DFC4);
}

uint64_t sub_19090DFB0(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x19090DFBCLL);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x19090DFC4);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t sub_19090DFDC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

char *sub_19090E064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v14;
  uint64_t v15;
  char *v16;

  v14 = (char *)swift_allocObject();
  v15 = *(_QWORD *)v14;
  *((_QWORD *)v14 + 2) = a1;
  *((_QWORD *)v14 + 3) = a2;
  *((_QWORD *)v14 + 4) = a3;
  *((_QWORD *)v14 + 5) = a4;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v15 + 80) - 8) + 32))(&v14[*(_QWORD *)(v15 + 120)], a5);
  v16 = &v14[*(_QWORD *)(*(_QWORD *)v14 + 128)];
  *(_QWORD *)v16 = a6;
  *((_QWORD *)v16 + 1) = a7;
  return v14;
}

char *sub_19090E100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  uint64_t v10;
  char *v11;

  v10 = *(_QWORD *)v7;
  *((_QWORD *)v7 + 2) = a1;
  *((_QWORD *)v7 + 3) = a2;
  *((_QWORD *)v7 + 4) = a3;
  *((_QWORD *)v7 + 5) = a4;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v10 + 80) - 8) + 32))(&v7[*(_QWORD *)(v10 + 120)], a5);
  v11 = &v7[*(_QWORD *)(*(_QWORD *)v7 + 128)];
  *(_QWORD *)v11 = a6;
  *((_QWORD *)v11 + 1) = a7;
  return v7;
}

uint64_t sub_19090E164()
{
  sub_190A48880();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2E8);
  sub_190A47B00();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  return 60;
}

uint64_t sub_19090E24C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[8];

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 96);
  v3 = *(_QWORD *)(*v0 + 80);
  v15[7] = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(v3, v2);
  v4 = *(_QWORD *)(v1 + 88);
  v15[2] = v3;
  v15[3] = v4;
  v5 = *(_QWORD *)(v1 + 104);
  v15[4] = v2;
  v15[5] = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for AppIntentRecommendation(255, AssociatedTypeWitness, AssociatedConformanceWitness, v8);
  v9 = sub_190A47D04();
  v10 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6A048);
  v11 = MEMORY[0x19401429C](MEMORY[0x1E0DEAF50], v9);
  v13 = sub_190907290((void (*)(char *, char *))sub_1909120EC, (uint64_t)v15, v9, v10, MEMORY[0x1E0DEDCE8], v11, MEMORY[0x1E0DEDD18], v12);
  swift_bridgeObjectRelease();
  return v13;
}

void sub_19090E380(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  id v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[4];
  _QWORD v25[4];

  v4 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v5 = objc_msgSend(v4, sel_bundleIdentifier);

  if (v5)
  {
    sub_190A47ADC();

    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_190A45D3C();
    sub_190A45CDC();
    v8 = objc_allocWithZone(MEMORY[0x1E0CBD738]);
    v9 = (void *)sub_190A47AC4();
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    v10 = sub_190A486C4();
    __swift_project_boxed_opaque_existential_1(v24, v24[3]);
    v11 = objc_msgSend(v8, sel_initWithAppBundleIdentifier_linkAction_linkActionMetadata_, v9, v10, sub_190A486C4());
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    v13 = (_QWORD *)(a1
                   + *(int *)(type metadata accessor for AppIntentRecommendation(0, AssociatedTypeWitness, AssociatedConformanceWitness, v12)+ 36));
    v14 = v13[1];
    v25[0] = *v13;
    v25[1] = v14;
    sub_19091210C();
    v15 = v11;
    swift_bridgeObjectRetain_n();
    v16 = v15;
    v17 = sub_190A474B8();
    v19 = v18;
    LOBYTE(v10) = v20 & 1;
    v21 = sub_19096C780();
    v23 = v22;
    sub_19090D1C4(v17, v19, v10);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    *a2 = v16;
    a2[1] = v21;
    a2[2] = v23;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_19090E618(void *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  char v19;
  char v20;
  __int128 v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41[2];
  uint64_t v42;
  __int16 v43;
  char v44;
  __int128 v45;
  char v46;

  v36 = a1;
  v4 = *(_QWORD **)v2;
  v37 = type metadata accessor for TimelineReloadPolicy();
  v5 = MEMORY[0x1E0C80A78](v37);
  v40 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v4[11];
  v35 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v4[12];
  v11 = v4[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v38 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v39 = AssociatedTypeWitness;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)&v34 - v13;
  v15 = *(void **)(a2 + 8);
  v17 = *(_QWORD *)(a2 + 32);
  v18 = *(_WORD *)(a2 + 40);
  v19 = *(_BYTE *)(a2 + 42);
  v20 = *(_BYTE *)(a2 + 64);
  *(_QWORD *)&v41[0] = *(_QWORD *)a2;
  v16 = *(_QWORD *)&v41[0];
  *((_QWORD *)&v41[0] + 1) = v15;
  v41[1] = *(_OWORD *)(a2 + 16);
  v42 = v17;
  v43 = v18;
  v44 = v19;
  v21 = *(_OWORD *)(a2 + 48);
  v22 = v14;
  v45 = v21;
  v46 = v20;
  (*(void (**)(__int128 *, uint64_t, uint64_t))(v10 + 48))(v41, v11, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C488);
  v23 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ViewableTimelineEntry() - 8) + 80);
  v24 = (v23 + 32) & ~v23;
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_190A4A350;
  (*(void (**)(char *))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 128)))(v22);
  v26 = sub_190A30B3C((uint64_t)v9, v7, v25 + v24);
  (*(void (**)(char *, uint64_t, double))(v35 + 8))(v9, v7, v26);
  *(_QWORD *)&v41[0] = v16;
  *((_QWORD *)&v41[0] + 1) = v15;
  v27 = qword_1ECF6BE60;
  v28 = v36;
  swift_retain();
  v29 = v15;
  if (v27 != -1)
    swift_once();
  v30 = __swift_project_value_buffer(v37, (uint64_t)qword_1ECF6BE78);
  v31 = v40;
  sub_1908AF5D8(v30, v40, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  v32 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v28, v41, (_QWORD *)v25, v31, 1);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v22, v39);
  return v32;
}

uint64_t sub_19090E8D0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[7] = a1;
  v3[8] = a2;
  v4 = *v2;
  v3[9] = *(_QWORD *)(*v2 + 96);
  v3[10] = *(_QWORD *)(v4 + 80);
  v3[11] = swift_getAssociatedTypeWitness();
  v5 = sub_190A48148();
  v3[12] = v5;
  v3[13] = *(_QWORD *)(v5 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_19090E974()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  _QWORD *v7;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;

  v1 = objc_msgSend(*(id *)(v0 + 64), sel_intent);
  if (v1
    && (v2 = v1,
        v3 = objc_msgSend(v1, sel__asMigratedAppIntent),
        *(_QWORD *)(v0 + 128) = v3,
        v2,
        v3))
  {
    v4 = objc_msgSend(v3, sel_linkAction);
    *(_QWORD *)(v0 + 136) = v4;
    if (v4)
    {
      v5 = v4;
      *(_QWORD *)(v0 + 40) = sub_1909120B0();
      *(_QWORD *)(v0 + 16) = v5;
      v6 = v5;
      v7 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 144) = v7;
      swift_getAssociatedConformanceWitness();
      *v7 = v0;
      v7[1] = sub_19090EBAC;
      return sub_190A45D30();
    }
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v9 = sub_190A465A0();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ECF6D988);
    v10 = sub_190A46588();
    v11 = sub_190A47F50();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1908A7000, v10, v11, "Error: Unable to get LNAction from intent", v12, 2u);
      MEMORY[0x194014398](v12, -1, -1);
    }
    v13 = *(_QWORD *)(v0 + 88);
    v14 = *(_QWORD *)(v0 + 56);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v14, 1, 1);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 88) - 8) + 56))(*(_QWORD *)(v0 + 56), 1, 1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19090EBAC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19090EC10()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 88);

  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 0, 1, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, v2, v4);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 32))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19090ECB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void *v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  void *v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 88);

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  if (qword_1ECF6D3D8 != -1)
    swift_once();
  v3 = *(void **)(v0 + 152);
  v4 = sub_190A465A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ECF6D988);
  v5 = v3;
  v6 = v3;
  v7 = sub_190A46588();
  v8 = sub_190A47F50();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(void **)(v0 + 152);
  if (v9)
  {
    v16 = *(void **)(v0 + 128);
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    v13 = v10;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 48) = v14;
    sub_190A48178();
    *v12 = v14;

    _os_log_impl(&dword_1908A7000, v7, v8, "Error getting AppIntent from LNAction: %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EBB10);
    swift_arrayDestroy();
    MEMORY[0x194014398](v12, -1, -1);
    MEMORY[0x194014398](v11, -1, -1);

  }
  else
  {

  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 32))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19090EEE4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  _QWORD *v14;

  v4 = v2;
  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v4;
  v7 = (_QWORD *)*v4;
  *(_QWORD *)(v3 + 112) = *v4;
  *(_QWORD *)(v3 + 120) = type metadata accessor for TimelineReloadPolicy();
  *(_QWORD *)(v3 + 128) = swift_task_alloc();
  *(_QWORD *)(v3 + 136) = v7[11];
  *(_QWORD *)(v3 + 144) = swift_task_alloc();
  v8 = sub_190A46084();
  *(_QWORD *)(v3 + 152) = v8;
  *(_QWORD *)(v3 + 160) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v3 + 168) = swift_task_alloc();
  *(_QWORD *)(v3 + 176) = v7[12];
  *(_QWORD *)(v3 + 184) = v7[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v3 + 192) = AssociatedTypeWitness;
  *(_QWORD *)(v3 + 200) = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc();
  v10 = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v3 + 216) = v10;
  *(_QWORD *)(v3 + 224) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v3 + 232) = swift_task_alloc();
  v11 = sub_190A48148();
  *(_QWORD *)(v3 + 240) = v11;
  *(_QWORD *)(v3 + 248) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v3 + 256) = swift_task_alloc();
  v12 = swift_task_alloc();
  *(_QWORD *)(v3 + 264) = v12;
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 272) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 288) = v13;
  *(_QWORD *)(v3 + 304) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(v3 + 81) = *(_WORD *)(a2 + 40);
  *(_BYTE *)(v3 + 83) = *(_BYTE *)(a2 + 42);
  *(_OWORD *)(v3 + 312) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(v3 + 84) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(v3 + 328) = sub_190A47D64();
  *(_QWORD *)(v3 + 336) = sub_190A47D58();
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 344) = v14;
  *v14 = v3;
  v14[1] = sub_19090F0EC;
  return sub_19090E8D0(v12, a1);
}

uint64_t sub_19090F0EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_task_dealloc();
  *(_QWORD *)(v1 + 352) = sub_190A47D28();
  *(_QWORD *)(v1 + 360) = v2;
  return swift_task_switch();
}

uint64_t sub_19090F160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 16))(v1, *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v5 = *(_QWORD *)(v0 + 248);
    v4 = *(_QWORD *)(v0 + 256);
    v6 = *(_QWORD *)(v0 + 240);
    swift_release();
    v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v7(v4, v6);
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v8 = sub_190A465A0();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ECF6D988);
    v9 = sub_190A46588();
    v10 = sub_190A47F50();
    v11 = os_log_type_enabled(v9, v10);
    v12 = *(_QWORD *)(v0 + 264);
    v13 = *(_QWORD *)(v0 + 240);
    if (v11)
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v27 = v15;
      *(_DWORD *)v14 = 136446210;
      *(_QWORD *)(v0 + 88) = sub_1908B35C4(0xD000000000000013, 0x8000000190A61500, &v27);
      sub_190A48178();
      _os_log_impl(&dword_1908A7000, v9, v10, "No AppIntent in %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v15, -1, -1);
      MEMORY[0x194014398](v14, -1, -1);
    }

    v7(v12, v13);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v17 = *(_BYTE *)(v0 + 84);
    v19 = *(_QWORD *)(v0 + 312);
    v18 = *(_QWORD *)(v0 + 320);
    v20 = *(_BYTE *)(v0 + 83);
    v21 = *(_WORD *)(v0 + 81);
    v22 = *(_QWORD *)(v0 + 304);
    v23 = *(_QWORD *)(v0 + 176);
    v25 = *(_OWORD *)(v0 + 272);
    v26 = *(_OWORD *)(v0 + 288);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 32))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 216));
    *(_OWORD *)(v0 + 16) = v25;
    *(_OWORD *)(v0 + 32) = v26;
    *(_QWORD *)(v0 + 48) = v22;
    *(_WORD *)(v0 + 56) = v21;
    *(_BYTE *)(v0 + 58) = v20;
    *(_QWORD *)(v0 + 64) = v19;
    *(_QWORD *)(v0 + 72) = v18;
    *(_BYTE *)(v0 + 80) = v17;
    *(_QWORD *)&v26 = **(int **)(v23 + 56) + *(_QWORD *)(v23 + 56);
    v24 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 368) = v24;
    *v24 = v0;
    v24[1] = sub_19090F47C;
    return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD, _QWORD))v26)(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 232), v0 + 16, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 176));
  }
}

uint64_t sub_19090F47C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19090F4C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;

  v33 = *(_OWORD *)(v0 + 272);
  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 192);
  v29 = *(_QWORD *)(v0 + 160);
  v30 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 104);
  v28 = *(_QWORD *)(v0 + 168);
  v31 = *(void **)(v0 + 96);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C488);
  v4 = (int *)type metadata accessor for ViewableTimelineEntry();
  v5 = *(unsigned __int8 *)(*((_QWORD *)v4 - 1) + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_190A4A350;
  v8 = v7 + v6;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(v2, AssociatedConformanceWitness);
  (*(void (**)(uint64_t))(v3 + *(_QWORD *)(*(_QWORD *)v3 + 128)))(v1);
  v10 = sub_190A47884();
  v11 = v8 + v4[7];
  v12 = type metadata accessor for WidgetViewMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v8, v28, v30);
  *(_QWORD *)(v8 + v4[5]) = v10;
  v13 = v8 + v4[6];
  *(_QWORD *)v13 = 0;
  *(_QWORD *)(v13 + 8) = 0;
  *(_BYTE *)(v13 + 16) = 1;
  *(_OWORD *)(v8 + v4[8]) = xmmword_190A4A370;
  v36 = v33;
  v14 = qword_1ECF6BE60;
  v15 = v31;
  swift_retain();
  v16 = *((id *)&v33 + 1);
  if (v14 != -1)
    swift_once();
  v32 = *(_QWORD *)(v0 + 248);
  v17 = *(_QWORD *)(v0 + 232);
  v34 = *(_QWORD *)(v0 + 240);
  v35 = *(_QWORD *)(v0 + 264);
  v19 = *(_QWORD *)(v0 + 216);
  v18 = *(_QWORD *)(v0 + 224);
  v20 = *(_QWORD *)(v0 + 200);
  v21 = *(_QWORD *)(v0 + 208);
  v22 = *(_QWORD *)(v0 + 192);
  v23 = *(_QWORD *)(v0 + 128);
  v24 = *(void **)(v0 + 96);
  v25 = __swift_project_value_buffer(*(_QWORD *)(v0 + 120), (uint64_t)qword_1ECF6BE78);
  sub_1908AF5D8(v25, v23, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  v26 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v24, &v36, (_QWORD *)v7, v23, 1);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v35, v34);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v26);
}

uint64_t sub_19090F7C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  _QWORD *v11;

  v4 = v2;
  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v3 + 112) = AssociatedTypeWitness;
  *(_QWORD *)(v3 + 120) = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v3 + 128) = swift_task_alloc();
  v8 = sub_190A48148();
  *(_QWORD *)(v3 + 136) = v8;
  *(_QWORD *)(v3 + 144) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v3 + 152) = swift_task_alloc();
  v9 = swift_task_alloc();
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 168) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 160) = v9;
  *(_OWORD *)(v3 + 184) = v10;
  *(_QWORD *)(v3 + 200) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(v3 + 81) = *(_WORD *)(a2 + 40);
  *(_BYTE *)(v3 + 83) = *(_BYTE *)(a2 + 42);
  *(_OWORD *)(v3 + 208) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(v3 + 84) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(v3 + 224) = sub_190A47D64();
  *(_QWORD *)(v3 + 232) = sub_190A47D58();
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 240) = v11;
  *v11 = v3;
  v11[1] = sub_19090F900;
  return sub_19090E8D0(v9, a1);
}

uint64_t sub_19090F900()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_task_dealloc();
  *(_QWORD *)(v1 + 248) = sub_190A47D28();
  *(_QWORD *)(v1 + 256) = v2;
  return swift_task_switch();
}

uint64_t sub_19090F974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int16 v21;
  uint64_t v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 16))(v1, *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v5 = *(_QWORD *)(v0 + 144);
    v4 = *(_QWORD *)(v0 + 152);
    v6 = *(_QWORD *)(v0 + 136);
    swift_release();
    v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v7(v4, v6);
    if (qword_1ECF6D3D8 != -1)
      swift_once();
    v8 = sub_190A465A0();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ECF6D988);
    v9 = sub_190A46588();
    v10 = sub_190A47F50();
    v11 = os_log_type_enabled(v9, v10);
    v12 = *(_QWORD *)(v0 + 160);
    v13 = *(_QWORD *)(v0 + 136);
    if (v11)
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v26 = v15;
      *(_DWORD *)v14 = 136446210;
      *(_QWORD *)(v0 + 88) = sub_1908B35C4(0xD000000000000013, 0x8000000190A614E0, &v26);
      sub_190A48178();
      _os_log_impl(&dword_1908A7000, v9, v10, "No AppIntent in %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194014398](v15, -1, -1);
      MEMORY[0x194014398](v14, -1, -1);
    }

    v7(v12, v13);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v17 = *(_BYTE *)(v0 + 84);
    v19 = *(_QWORD *)(v0 + 208);
    v18 = *(_QWORD *)(v0 + 216);
    v20 = *(_BYTE *)(v0 + 83);
    v21 = *(_WORD *)(v0 + 81);
    v22 = *(_QWORD *)(v0 + 200);
    v24 = *(_OWORD *)(v0 + 168);
    v25 = *(_OWORD *)(v0 + 184);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 32))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 112));
    *(_OWORD *)(v0 + 16) = v24;
    *(_OWORD *)(v0 + 32) = v25;
    *(_QWORD *)(v0 + 48) = v22;
    *(_WORD *)(v0 + 56) = v21;
    *(_BYTE *)(v0 + 58) = v20;
    *(_QWORD *)(v0 + 64) = v19;
    *(_QWORD *)(v0 + 72) = v18;
    *(_BYTE *)(v0 + 80) = v17;
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v23;
    *v23 = v0;
    v23[1] = sub_19090FC38;
    return sub_190911964(*(_QWORD *)(v0 + 96), (uint64_t *)(v0 + 16), *(_QWORD *)(v0 + 128));
  }
}

uint64_t sub_19090FC38(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_19090FC90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 112);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_19090FD2C(void *a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __int128 v29;
  __int128 v30;
  char *v31;
  uint64_t v32;
  _QWORD v34[2];
  uint64_t v35;
  char *v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  char v45;

  v39 = a7;
  v40 = a4;
  v35 = a5;
  v37 = a1;
  v11 = (_QWORD *)*v7;
  v12 = *(_QWORD *)(a6 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](a1);
  v36 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v16;
  v17 = a2[3];
  v43 = a2[2];
  v44 = v17;
  v45 = *((_BYTE *)a2 + 64);
  v18 = a2[1];
  v41 = *a2;
  v42 = v18;
  v19 = sub_190A47D7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v16, 1, 1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a3, a6);
  sub_190A47D64();
  swift_retain();
  v37 = v37;
  sub_190911E34((uint64_t)&v41);
  swift_retain();
  v20 = sub_190A47D58();
  v21 = (*(unsigned __int8 *)(v12 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v22 = (v13 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = (char *)swift_allocObject();
  v25 = MEMORY[0x1E0DF06E8];
  *((_QWORD *)v24 + 2) = v20;
  *((_QWORD *)v24 + 3) = v25;
  *((_QWORD *)v24 + 4) = v11[10];
  *((_QWORD *)v24 + 5) = v11[11];
  *((_QWORD *)v24 + 6) = a6;
  *((_QWORD *)v24 + 7) = v11[12];
  v26 = v39;
  *((_QWORD *)v24 + 8) = v11[13];
  *((_QWORD *)v24 + 9) = v26;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v24[v21], v36, a6);
  *(_QWORD *)&v24[v22] = v34[1];
  v27 = (uint64_t)v38;
  *(_QWORD *)&v24[v23] = v37;
  v28 = &v24[(v23 + 15) & 0xFFFFFFFFFFFFFFF8];
  v29 = v44;
  *((_OWORD *)v28 + 2) = v43;
  *((_OWORD *)v28 + 3) = v29;
  v28[64] = v45;
  v30 = v42;
  *(_OWORD *)v28 = v41;
  *((_OWORD *)v28 + 1) = v30;
  v31 = &v24[(v23 + 87) & 0xFFFFFFFFFFFFFFF8];
  v32 = v35;
  *(_QWORD *)v31 = v40;
  *((_QWORD *)v31 + 1) = v32;
  sub_19095ADDC(v27, (uint64_t)&unk_1EE1ECF38, (uint64_t)v24);
  return swift_release();
}

uint64_t sub_19090FF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v8[61] = v11;
  v8[62] = v12;
  v8[59] = a7;
  v8[60] = a8;
  v8[57] = a5;
  v8[58] = a6;
  v8[56] = a4;
  v8[63] = *a5;
  v8[64] = *(_QWORD *)(v12 - 8);
  v8[65] = swift_task_alloc();
  v8[66] = swift_task_alloc();
  sub_190A47D64();
  v8[67] = sub_190A47D58();
  v8[68] = sub_190A47D28();
  v8[69] = v9;
  return swift_task_switch();
}

uint64_t sub_190910018()
{
  uint64_t v0;
  void (*v1)(_QWORD, _QWORD, _QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  _OWORD *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _QWORD *v20;
  uint64_t v21;
  __int128 v22;

  v1 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 512) + 16);
  v1(*(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 496));
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 472);
    v3 = *(_QWORD *)(v0 + 376);
    v4 = *(_QWORD *)(v0 + 384);
    *(_QWORD *)(v0 + 560) = v4;
    v5 = *(_BYTE *)(v0 + 392);
    v6 = *(_QWORD *)(v0 + 400);
    v7 = *(_QWORD *)(v0 + 408);
    *(_QWORD *)(v0 + 568) = v7;
    *(_OWORD *)(v0 + 192) = *(_OWORD *)v2;
    v8 = *(_OWORD *)(v2 + 16);
    v9 = *(_OWORD *)(v2 + 32);
    v10 = *(_OWORD *)(v2 + 48);
    *(_BYTE *)(v0 + 256) = *(_BYTE *)(v2 + 64);
    *(_OWORD *)(v0 + 224) = v9;
    *(_OWORD *)(v0 + 240) = v10;
    *(_OWORD *)(v0 + 208) = v8;
    *(_QWORD *)(v0 + 336) = v3;
    *(_QWORD *)(v0 + 344) = v4;
    *(_BYTE *)(v0 + 352) = v5;
    *(_QWORD *)(v0 + 360) = v6;
    *(_QWORD *)(v0 + 368) = v7;
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 576) = v11;
    *v11 = v0;
    v11[1] = sub_1909102B0;
    return sub_1909105C8(*(_QWORD *)(v0 + 464), (_OWORD *)(v0 + 192), (__int128 *)(v0 + 336));
  }
  else
  {
    v13 = (_OWORD *)(v0 + 104);
    v1(*(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 496));
    if ((swift_dynamicCast() & 1) == 0)
    {
      v21 = *(_QWORD *)(v0 + 504);
      *v13 = 0u;
      *(_OWORD *)(v0 + 120) = 0u;
      *(_OWORD *)(v0 + 136) = 0u;
      *(_OWORD *)(v0 + 152) = 0u;
      *(_OWORD *)(v0 + 168) = 0u;
      *(_QWORD *)(v0 + 184) = 0;
      swift_release();
      sub_1908AA544(v0 + 104, qword_1EE1ECF40);
      v22 = *(_OWORD *)(v21 + 96);
      *(_OWORD *)(v0 + 416) = *(_OWORD *)(v21 + 80);
      *(_OWORD *)(v0 + 432) = v22;
      type metadata accessor for AppIntentTimelineEntryProvider.Errors();
    }
    v14 = *(_QWORD *)(v0 + 472);
    v15 = *(_OWORD *)(v0 + 152);
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 136);
    *(_OWORD *)(v0 + 64) = v15;
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 168);
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 184);
    v16 = *(_OWORD *)(v0 + 120);
    *(_OWORD *)(v0 + 16) = *v13;
    *(_OWORD *)(v0 + 32) = v16;
    *(_OWORD *)(v0 + 264) = *(_OWORD *)v14;
    v18 = *(_OWORD *)(v14 + 32);
    v17 = *(_OWORD *)(v14 + 48);
    v19 = *(_OWORD *)(v14 + 16);
    *(_BYTE *)(v0 + 328) = *(_BYTE *)(v14 + 64);
    *(_OWORD *)(v0 + 296) = v18;
    *(_OWORD *)(v0 + 312) = v17;
    *(_OWORD *)(v0 + 280) = v19;
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 600) = v20;
    *v20 = v0;
    v20[1] = sub_1909103BC;
    return sub_190910D70(*(_QWORD *)(v0 + 464), v0 + 264, v0 + 16);
  }
}

uint64_t sub_190910224(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void (*v3)(void *, uint64_t);
  id v4;

  MEMORY[0x19401429C](&unk_190A4CEC8, a1);
  v2 = (void *)swift_allocError();
  swift_willThrow();
  v3 = *(void (**)(void *, uint64_t))(v1 + 480);
  v4 = v2;
  v3(v2, 1);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1909102B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 584) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 592) = a1;
  return swift_task_switch();
}

uint64_t sub_19091032C()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD);
  uint64_t v2;

  v1 = *(void (**)(uint64_t, _QWORD))(v0 + 480);
  swift_release();
  v2 = swift_retain();
  v1(v2, 0);
  swift_release_n();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909103BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 608) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 616) = a1;
  return swift_task_switch();
}

uint64_t sub_190910438()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD);
  uint64_t v2;

  v1 = *(void (**)(uint64_t, _QWORD))(v0 + 480);
  swift_release();
  v2 = swift_retain();
  v1(v2, 0);
  swift_release_n();
  sub_19091207C(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909104B4()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *, uint64_t);
  id v3;

  swift_release();
  swift_release();
  swift_release();
  v1 = *(void **)(v0 + 584);
  v2 = *(void (**)(void *, uint64_t))(v0 + 480);
  v3 = v1;
  v2(v1, 1);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190910544()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *, uint64_t);
  id v3;

  swift_release();
  sub_19091207C(v0 + 16);
  v1 = *(void **)(v0 + 608);
  v2 = *(void (**)(void *, uint64_t))(v0 + 480);
  v3 = v1;
  v2(v1, 1);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1909105C8(uint64_t a1, _OWORD *a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  *(_QWORD *)(v4 + 64) = a1;
  *(_QWORD *)(v4 + 72) = v3;
  *(_QWORD *)(v4 + 80) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6AFF0);
  *(_QWORD *)(v4 + 88) = swift_task_alloc();
  *(_QWORD *)(v4 + 96) = type metadata accessor for TimelineReloadPolicy();
  *(_QWORD *)(v4 + 104) = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v4 + 112) = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v4 + 120) = AssociatedConformanceWitness;
  v10 = type metadata accessor for Timeline(0, AssociatedTypeWitness, AssociatedConformanceWitness, v9);
  *(_QWORD *)(v4 + 128) = v10;
  *(_QWORD *)(v4 + 136) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v4 + 144) = swift_task_alloc();
  *(_QWORD *)(v4 + 152) = swift_task_alloc();
  v11 = *a3;
  *(_OWORD *)(v4 + 160) = *a2;
  *(_OWORD *)(v4 + 176) = v11;
  *(_BYTE *)(v4 + 264) = *((_BYTE *)a3 + 16);
  *(_OWORD *)(v4 + 192) = *(__int128 *)((char *)a3 + 24);
  sub_190A47D64();
  *(_QWORD *)(v4 + 208) = sub_190A47D58();
  *(_QWORD *)(v4 + 216) = sub_190A47D28();
  *(_QWORD *)(v4 + 224) = v12;
  return swift_task_switch();
}

uint64_t sub_19091074C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  char v5;
  _QWORD *v6;
  __int128 v8;
  __int128 v9;

  if (qword_1ECF6BB68 != -1)
    swift_once();
  v1 = sub_190A465A0();
  *(_QWORD *)(v0 + 232) = __swift_project_value_buffer(v1, (uint64_t)qword_1ECF6D820);
  v2 = sub_190A46588();
  v3 = sub_190A47F68();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1908A7000, v2, v3, "Preview entries request being handled by AppIntentConfiguration", v4, 2u);
    MEMORY[0x194014398](v4, -1, -1);
  }
  v5 = *(_BYTE *)(v0 + 264);
  v8 = *(_OWORD *)(v0 + 176);
  v9 = *(_OWORD *)(v0 + 192);

  *(_OWORD *)(v0 + 16) = v8;
  *(_BYTE *)(v0 + 32) = v5;
  *(_OWORD *)(v0 + 40) = v9;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v6;
  *v6 = v0;
  v6[1] = sub_19091087C;
  return TimelineEntryPreviewSource.unwrapTimeline<A>(for:)(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
}

uint64_t sub_19091087C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 248) = a1;
  *(_QWORD *)(v3 + 256) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1909108E8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  __int128 v27;

  swift_release();
  swift_bridgeObjectRetain();
  v1 = sub_190A46588();
  v2 = sub_190A47F68();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 248);
    v4 = *(_QWORD *)(v0 + 112);
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 134217984;
    *(_QWORD *)(v0 + 56) = MEMORY[0x194012F04](v3, v4);
    sub_190A48178();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v1, v2, "AppIntentConfiguration resolved entry source to have %ld entries", v5, 0xCu);
    MEMORY[0x194014398](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  if (qword_1ECF6BE60 != -1)
    swift_once();
  v6 = *(_QWORD *)(v0 + 248);
  v25 = *(void **)(v0 + 168);
  v7 = *(_QWORD **)(v0 + 152);
  v9 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD **)(v0 + 144);
  v11 = *(_QWORD *)(v0 + 120);
  v10 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 112);
  v14 = *(uint64_t **)(v0 + 88);
  v23 = *(_QWORD *)(v0 + 80);
  v24 = *(_QWORD *)(v0 + 160);
  v22 = *(_QWORD *)(v0 + 72);
  v26 = *(void **)(v0 + 64);
  v15 = __swift_project_value_buffer(*(_QWORD *)(v0 + 96), (uint64_t)qword_1ECF6BE78);
  sub_1908AF5D8(v15, v12, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  Timeline.init(entries:policy:)(v6, v12, v13, v11, v7);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(v8, v7, v10);
  v16 = (char *)type metadata accessor for ViewableTimelineEntry();
  sub_190A1A004(v8, (uint64_t)sub_190911E1C, v22, v16, v13, (uint64_t)&protocol witness table for ViewableTimelineEntry, v11, v14);
  *(_QWORD *)&v27 = v24;
  *((_QWORD *)&v27 + 1) = v25;
  v17 = (_QWORD *)*v14;
  sub_1908AF5D8((uint64_t)v14 + *(int *)(v23 + 36), v12, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  v18 = v26;
  swift_retain();
  v19 = v25;
  swift_bridgeObjectRetain();
  v20 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v18, &v27, v17, v12, 0);
  sub_1908AA544((uint64_t)v14, (uint64_t *)&unk_1ECF6AFF0);
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v7, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v20);
}

uint64_t sub_190910BBC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_190910C24@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;

  v16 = a3;
  v5 = *a2;
  v6 = *(_QWORD *)(*a2 + 88);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v15 - v10, a1, AssociatedTypeWitness);
  (*(void (**)(uint64_t))((char *)a2 + *(_QWORD *)(*a2 + 128)))(a1);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return sub_190A308CC((uint64_t)v11, (uint64_t)v8, AssociatedTypeWitness, v6, AssociatedConformanceWitness, *(_QWORD *)(v5 + 104), v16);
}

uint64_t sub_190910D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  *(_QWORD *)(v4 + 96) = a3;
  *(_QWORD *)(v4 + 104) = v3;
  *(_QWORD *)(v4 + 88) = a1;
  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 80);
  *(_QWORD *)(v4 + 112) = v7;
  *(_QWORD *)(v4 + 120) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 128) = swift_task_alloc();
  *(_QWORD *)(v4 + 136) = *(_QWORD *)(v6 + 96);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v4 + 144) = AssociatedTypeWitness;
  *(_QWORD *)(v4 + 152) = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = swift_task_alloc();
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 168) = *(_OWORD *)a2;
  *(_QWORD *)(v4 + 160) = v9;
  *(_OWORD *)(v4 + 184) = v10;
  *(_QWORD *)(v4 + 200) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(v4 + 81) = *(_WORD *)(a2 + 40);
  *(_BYTE *)(v4 + 83) = *(_BYTE *)(a2 + 42);
  *(_OWORD *)(v4 + 208) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(v4 + 84) = *(_BYTE *)(a2 + 64);
  sub_190A47D64();
  *(_QWORD *)(v4 + 224) = sub_190A47D58();
  *(_QWORD *)(v4 + 232) = sub_190A47D28();
  *(_QWORD *)(v4 + 240) = v11;
  return swift_task_switch();
}

uint64_t sub_190910E8C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  __int16 v10;
  uint64_t v11;
  _QWORD *v12;

  if (qword_1ECF6BB68 != -1)
    swift_once();
  v1 = sub_190A465A0();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ECF6D820);
  v2 = sub_190A46588();
  v3 = sub_190A47F68();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1908A7000, v2, v3, "Preview provider request being handled by AppIntentConfiguration", v4, 2u);
    MEMORY[0x194014398](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 112);

  TimelineProviderPreviewSource.unwrapContent<A>(for:)(v5, v6, v7, v7);
  v8 = *(_BYTE *)(v0 + 84);
  v9 = *(_BYTE *)(v0 + 83);
  v10 = *(_WORD *)(v0 + 81);
  v11 = *(_QWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 168);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 48) = v11;
  *(_WORD *)(v0 + 56) = v10;
  *(_BYTE *)(v0 + 58) = v9;
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 208);
  *(_BYTE *)(v0 + 80) = v8;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v12;
  *v12 = v0;
  v12[1] = sub_190911058;
  return sub_190911964(*(_QWORD *)(v0 + 88), (uint64_t *)(v0 + 16), *(_QWORD *)(v0 + 160));
}

uint64_t sub_190911058(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1909110B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 112);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 256));
}

uint64_t sub_190911138(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_190A47D7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_190A47D64();
  swift_retain();
  swift_retain();
  v10 = sub_190A47D58();
  v11 = (_QWORD *)swift_allocObject();
  v12 = MEMORY[0x1E0DF06E8];
  v11[2] = v10;
  v11[3] = v12;
  v11[4] = v3;
  v11[5] = a1;
  v11[6] = a2;
  sub_19095ADDC((uint64_t)v8, (uint64_t)&unk_1EE1ECF20, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_190911230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;

  v6[2] = a5;
  v6[3] = a6;
  v6[4] = sub_190A47D64();
  v6[5] = sub_190A47D58();
  v7 = (_QWORD *)swift_task_alloc();
  v6[6] = v7;
  *v7 = v6;
  v7[1] = sub_190911298;
  return sub_19091135C();
}

uint64_t sub_190911298(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = a1;
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_190911310()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *);

  v1 = *(void **)(v0 + 56);
  v2 = *(void (**)(void *))(v0 + 16);
  swift_release();
  v2(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19091135C()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  int *v8;

  v2 = *v0;
  v1[7] = sub_190A47D64();
  v1[8] = sub_190A47D58();
  v3 = *(_QWORD *)(v2 + 96);
  v1[9] = v3;
  v4 = *(int **)(v3 + 96);
  v5 = *(_QWORD *)(v2 + 80);
  v1[10] = v5;
  v8 = (int *)((char *)v4 + *v4);
  v6 = (_QWORD *)swift_task_alloc();
  v1[11] = v6;
  *v6 = v1;
  v6[1] = sub_19091140C;
  return ((uint64_t (*)(_QWORD *, uint64_t, uint64_t))v8)(v1 + 6, v5, v3);
}

uint64_t sub_19091140C()
{
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_19091147C()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  objc_class *v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  objc_super *v10;
  _BYTE *v11;
  _BYTE *v12;
  objc_super *v13;

  swift_release();
  if (*(_QWORD *)(v0 + 48))
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v4 = type metadata accessor for WidgetRelevances(0, AssociatedTypeWitness, v2, v3);
    swift_getAssociatedConformanceWitness();
    v5 = sub_190A3A0EC(v4);
    swift_bridgeObjectRelease();
    v6 = (objc_class *)type metadata accessor for WidgetRelevanceFetchResult();
    v7 = objc_allocWithZone(v6);
    v7[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 0;
    v8 = v7;
    v9 = sub_1909AE1FC(v5);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v8[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = v9;

    *(_QWORD *)(v0 + 32) = v8;
    v10 = (objc_super *)(v0 + 32);
  }
  else
  {
    v6 = (objc_class *)type metadata accessor for WidgetRelevanceFetchResult();
    v11 = objc_allocWithZone(v6);
    v11[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 1;
    v12 = v11;
    *(_QWORD *)&v12[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = sub_1909AE1FC(MEMORY[0x1E0DEE9D8]);

    *(_QWORD *)(v0 + 16) = v12;
    v10 = (objc_super *)(v0 + 16);
  }
  v10->super_class = v6;
  v13 = -[objc_super init](v10, sel_init);
  return (*(uint64_t (**)(objc_super *))(v0 + 8))(v13);
}

uint64_t sub_190911604()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

uint64_t sub_190911644()
{
  return sub_190A487CC();
}

uint64_t sub_190911668()
{
  sub_190A487C0();
  sub_190A487CC();
  return sub_190A48808();
}

void type metadata accessor for AppIntentTimelineEntryProvider()
{
  JUMPOUT(0x1940141E8);
}

uint64_t sub_1909116C0()
{
  sub_19090D084();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190911710(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_190911770;
  return sub_19090EEE4(a1, a2);
}

uint64_t sub_190911770(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1909117C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_190912240;
  return sub_19090F7C0(a1, a2);
}

uint64_t sub_190911820()
{
  return sub_19090E24C();
}

uint64_t sub_190911840(void *a1, uint64_t a2)
{
  return sub_19090E618(a1, a2);
}

uint64_t sub_190911860(void *a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_19090FD2C(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_190911880(uint64_t a1, uint64_t a2)
{
  return sub_190911138(a1, a2);
}

uint64_t sub_1909118A0(uint64_t a1)
{
  MEMORY[0x19401429C](&unk_190A4CE00, a1);
  return sub_19096C574();
}

uint64_t sub_1909118D4()
{
  return sub_19090E164();
}

uint64_t sub_1909118F4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x19401429C](&unk_190A4CDB0);
  result = MEMORY[0x19401429C](&unk_190A4CDD8, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_190911938(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x19401429C](&unk_190A4CE00);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_190911964(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v5 = v3;
  *(_QWORD *)(v4 + 88) = a1;
  *(_QWORD *)(v4 + 96) = v5;
  v7 = *v5;
  type metadata accessor for TimelineReloadPolicy();
  *(_QWORD *)(v4 + 104) = swift_task_alloc();
  *(_QWORD *)(v4 + 112) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6AFF0);
  *(_QWORD *)(v4 + 120) = swift_task_alloc();
  v23 = *(_QWORD *)(v7 + 96);
  v24 = *(_QWORD *)(v7 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v4 + 128) = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v4 + 136) = AssociatedConformanceWitness;
  v11 = type metadata accessor for Timeline(0, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
  *(_QWORD *)(v4 + 144) = v11;
  *(_QWORD *)(v4 + 152) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v4 + 160) = swift_task_alloc();
  v12 = swift_task_alloc();
  v13 = *a2;
  v14 = a2[1];
  *(_QWORD *)(v4 + 168) = v12;
  *(_QWORD *)(v4 + 176) = v13;
  *(_QWORD *)(v4 + 184) = v14;
  v22 = *((_OWORD *)a2 + 1);
  v15 = a2[4];
  v16 = *((_WORD *)a2 + 20);
  LOBYTE(v7) = *((_BYTE *)a2 + 42);
  v17 = a2[6];
  v18 = a2[7];
  v19 = *((_BYTE *)a2 + 64);
  *(_QWORD *)(v4 + 192) = sub_190A47D64();
  *(_QWORD *)(v4 + 200) = sub_190A47D58();
  *(_QWORD *)(v4 + 16) = v13;
  *(_QWORD *)(v4 + 24) = v14;
  *(_OWORD *)(v4 + 32) = v22;
  *(_QWORD *)(v4 + 48) = v15;
  *(_WORD *)(v4 + 56) = v16;
  *(_BYTE *)(v4 + 58) = v7;
  *(_QWORD *)(v4 + 64) = v17;
  *(_QWORD *)(v4 + 72) = v18;
  *(_BYTE *)(v4 + 80) = v19;
  *(_QWORD *)&v22 = **(int **)(v23 + 64) + *(_QWORD *)(v23 + 64);
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 208) = v20;
  *v20 = v4;
  v20[1] = sub_190911B60;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v22)(v12, a3, v4 + 16, v24, v23);
}

uint64_t sub_190911B60()
{
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_190911BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v16;
  __int128 v17;
  void *v18;
  uint64_t v19;
  __int128 v20;

  v1 = *(_QWORD *)(v0 + 168);
  v17 = *(_OWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD **)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 144);
  v19 = v1;
  v6 = *(uint64_t **)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 112);
  v16 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 96);
  v18 = *(void **)(v0 + 88);
  swift_release();
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v2 + 16))(v3, v1, v4);
  v10 = (char *)type metadata accessor for ViewableTimelineEntry();
  sub_190A1A004(v3, (uint64_t)sub_190911E1C, v9, v10, v7, (uint64_t)&protocol witness table for ViewableTimelineEntry, v5, v6);
  v20 = v17;
  v11 = (_QWORD *)*v6;
  sub_1908AF5D8((uint64_t)v6 + *(int *)(v8 + 36), v16, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  v12 = v18;
  swift_retain();
  v13 = *((id *)&v17 + 1);
  swift_bridgeObjectRetain();
  v14 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v12, &v20, v11, v16, 1);
  sub_1908AA544((uint64_t)v6, (uint64_t *)&unk_1ECF6AFF0);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v19, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v14);
}

uint64_t sub_190911D68()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190911D9C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1908CEB54;
  return sub_190911230(a1, v4, v5, v6, v7, v8);
}

double sub_190911E1C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_190910C24(a1, v2, a2);
}

uint64_t sub_190911E34(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_190911E90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190911F78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v3 = *(_QWORD *)(v1[6] - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1[2];
  v8 = v1[3];
  v9 = (uint64_t)v1 + v4;
  v10 = *(_QWORD **)((char *)v1 + v5);
  v11 = *(_QWORD *)((char *)v1 + v6);
  v12 = (uint64_t)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = *(_QWORD *)((char *)v1 + ((v6 + 87) & 0xFFFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1908C5090;
  return sub_19090FF60(a1, v7, v8, v9, v10, v11, v12, v13);
}

void type metadata accessor for AppIntentTimelineEntryProvider.Errors()
{
  JUMPOUT(0x1940141E8);
}

uint64_t sub_19091207C(uint64_t a1)
{
  destroy for TimelineProviderPreviewSource(a1);
  return a1;
}

unint64_t sub_1909120B0()
{
  unint64_t result;

  result = qword_1EE1EB978;
  if (!qword_1EE1EB978)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE1EB978);
  }
  return result;
}

void sub_1909120EC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_19090E380(a1, a2);
}

unint64_t sub_19091210C()
{
  unint64_t result;

  result = qword_1EE1E6A50;
  if (!qword_1EE1E6A50)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EE1E6A50);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for OptionalLocalizationsWrapper.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t sub_1909121A4(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1909121E4 + 4 * byte_190A4CC5F[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_190912204 + 4 * byte_190A4CC64[v4]))();
}

_BYTE *sub_1909121E4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_190912204(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_19091220C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190912214(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_19091221C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190912224(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_190912230()
{
  JUMPOUT(0x19401429CLL);
}

id WidgetInfo.configuration.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

uint64_t WidgetInfo.widgetConfigurationIntent<A>(of:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v5;
  _BYTE v7[40];

  sub_1909122E4(v2 + 40, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA700);
  v5 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, v5 ^ 1u, 1, a1);
}

uint64_t sub_1909122E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void WidgetInfo.family.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

uint64_t WidgetInfo.kind.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void WidgetInfo.internalFamily.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

uint64_t WidgetInfo.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19091237C(v1, a1);
}

uint64_t sub_19091237C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for WidgetInfo(a2, a1);
  return a2;
}

BOOL static WidgetInfo.== infix(_:_:)()
{
  uint64_t v0;

  sub_190A487C0();
  WidgetInfo.hash(into:)();
  v0 = sub_190A48808();
  sub_190A487C0();
  WidgetInfo.hash(into:)();
  return v0 == sub_190A48808();
}

uint64_t WidgetInfo.hashValue.getter()
{
  sub_190A487C0();
  WidgetInfo.hash(into:)();
  return sub_190A48808();
}

void WidgetInfo.hash(into:)()
{
  void **v0;
  void **v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  _QWORD v6[3];
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v1 = v0;
  v2 = *v0;
  if (*v0)
  {
    sub_190A487D8();
    v3 = v2;
    sub_190A48100();

  }
  else
  {
    sub_190A487D8();
  }
  sub_190A487CC();
  sub_190A487CC();
  swift_bridgeObjectRetain();
  sub_190A47B18();
  swift_bridgeObjectRelease();
  sub_1909122E4((uint64_t)(v1 + 5), (uint64_t)v6);
  if (!v7)
  {
    sub_1908AA544((uint64_t)v6, &qword_1EE1EA700);
    v8 = 0u;
    v9 = 0u;
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(v6, v7);
  sub_190A45D3C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if (!*((_QWORD *)&v9 + 1))
  {
LABEL_9:
    sub_1908AA544((uint64_t)&v8, (uint64_t *)&unk_1ECF6C8A0);
    goto LABEL_10;
  }
  sub_1908AB890(0, (unint64_t *)&qword_1ECF6C5E0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v4 = (void *)v6[0];
    sub_190A487D8();
    v5 = v4;
    sub_190A48100();

    return;
  }
LABEL_10:
  sub_190A487D8();
}

uint64_t sub_1909125EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_19091237C(v1, a1);
}

uint64_t sub_1909125F8()
{
  sub_190A487C0();
  WidgetInfo.hash(into:)();
  return sub_190A48808();
}

uint64_t sub_190912638()
{
  sub_190A487C0();
  WidgetInfo.hash(into:)();
  return sub_190A48808();
}

BOOL sub_190912670()
{
  uint64_t v0;

  sub_190A487C0();
  WidgetInfo.hash(into:)();
  v0 = sub_190A48808();
  sub_190A487C0();
  WidgetInfo.hash(into:)();
  return v0 == sub_190A48808();
}

uint64_t WidgetInfo.debugDescription.getter()
{
  id *v0;
  id *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v1 = v0;
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_190A48298();
  v8 = 0;
  v9 = 0xE000000000000000;
  sub_190A47B3C();
  if (*v0)
  {
    v2 = *v0;
    v3 = objc_msgSend(v2, sel_description);
    sub_190A47ADC();

  }
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  sub_1909122E4((uint64_t)(v1 + 5), (uint64_t)v6);
  v4 = v7;
  sub_1908AA544((uint64_t)v6, &qword_1EE1EA700);
  if (!v4)
  {
LABEL_6:
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    __asm { BR              X10 }
  }
  result = sub_1909122E4((uint64_t)(v1 + 5), (uint64_t)v6);
  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECFC8);
    sub_190A47B00();
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void sub_1909129CC()
{
  sub_190A486D0();
  __break(1u);
  JUMPOUT(0x1909129E0);
}

uint64_t sub_190912A04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return swift_task_switch();
}

uint64_t sub_190912A1C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  unsigned int v11;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;

  swift_unknownObjectRetain();
  objc_opt_self();
  v1 = (void *)swift_dynamicCastObjCClassUnconditional();
  *(_QWORD *)(v0 + 104) = v1;
  v2 = objc_msgSend(v1, sel_intent);
  *(_QWORD *)(v0 + 112) = v2;
  if (v2)
  {
    v3 = v2;
    objc_opt_self();
    v4 = (void *)swift_dynamicCastObjCClass();
    if (v4)
    {
      **(_QWORD **)(v0 + 88) = 0;
      v5 = objc_msgSend(v4, sel_linkAction);
      if (v5)
      {
        v6 = v5;
        *(_QWORD *)(v0 + 80) = sub_1908AB890(0, (unint64_t *)&qword_1EE1EB978);
        *(_QWORD *)(v0 + 56) = v6;
      }
      else
      {
        *(_OWORD *)(v0 + 56) = 0u;
        *(_OWORD *)(v0 + 72) = 0u;
      }
      v13 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 120) = v13;
      *v13 = v0;
      v13[1] = sub_190912C80;
      return sub_190A45C4C();
    }

  }
  v7 = *(_QWORD *)(v0 + 88);
  v8 = objc_msgSend(v1, sel_intentReference);
  v9 = objc_msgSend(v8, sel__typedIntent);

  *(_QWORD *)v7 = v9;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_QWORD *)(v7 + 72) = 0;
  v10 = *(_QWORD *)(v0 + 88);
  InternalWidgetFamily.init(_:)((uint64_t)objc_msgSend(*(id *)(v0 + 104), sel_family), &v20);
  v11 = v20;
  *(_BYTE *)(v10 + 32) = v20;
  if (v11 >= 0xD || ((0x13BFu >> v11) & 1) == 0)
    return sub_190A486D0();
  v14 = *(void **)(v0 + 104);
  v15 = *(_QWORD *)(v0 + 88);
  *(_BYTE *)(v15 + 8) = byte_190A4D004[(char)v11];
  v16 = objc_msgSend(v14, sel_kind);
  v17 = sub_190A47ADC();
  v19 = v18;
  swift_unknownObjectRelease();

  *(_QWORD *)(v15 + 16) = v17;
  *(_QWORD *)(v15 + 24) = v19;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190912C80()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)

  else
    sub_1908AA544(v2 + 56, (uint64_t *)&unk_1ECF6C8A0);
  return swift_task_switch();
}

uint64_t sub_190912CF8()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  sub_1909132CC(v0 + 16, *(_QWORD *)(v0 + 88) + 40);
  v1 = *(_QWORD *)(v0 + 88);
  InternalWidgetFamily.init(_:)((uint64_t)objc_msgSend(*(id *)(v0 + 104), sel_family), &v10);
  v2 = v10;
  *(_BYTE *)(v1 + 32) = v10;
  if (v2 >= 0xD || ((0x13BFu >> v2) & 1) == 0)
    return sub_190A486D0();
  v4 = *(void **)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 88);
  *(_BYTE *)(v5 + 8) = byte_190A4D004[(char)v2];
  v6 = objc_msgSend(v4, sel_kind);
  v7 = sub_190A47ADC();
  v9 = v8;
  swift_unknownObjectRelease();

  *(_QWORD *)(v5 + 16) = v7;
  *(_QWORD *)(v5 + 24) = v9;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190912E0C()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  sub_1908AA544(v0 + 56, (uint64_t *)&unk_1ECF6C8A0);
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  sub_1909132CC(v0 + 16, *(_QWORD *)(v0 + 88) + 40);
  v1 = *(_QWORD *)(v0 + 88);
  InternalWidgetFamily.init(_:)((uint64_t)objc_msgSend(*(id *)(v0 + 104), sel_family), &v10);
  v2 = v10;
  *(_BYTE *)(v1 + 32) = v10;
  if (v2 >= 0xD || ((0x13BFu >> v2) & 1) == 0)
    return sub_190A486D0();
  v4 = *(void **)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 88);
  *(_BYTE *)(v5 + 8) = byte_190A4D004[(char)v2];
  v6 = objc_msgSend(v4, sel_kind);
  v7 = sub_190A47ADC();
  v9 = v8;
  swift_unknownObjectRelease();

  *(_QWORD *)(v5 + 16) = v7;
  *(_QWORD *)(v5 + 24) = v9;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_190912F44()
{
  unint64_t result;

  result = qword_1EE1ECFD0;
  if (!qword_1EE1ECFD0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetInfo, &type metadata for WidgetInfo);
    atomic_store(result, (unint64_t *)&qword_1EE1ECFD0);
  }
  return result;
}

unint64_t sub_190912F8C()
{
  unint64_t result;

  result = qword_1EE1ECFD8;
  if (!qword_1EE1ECFD8)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetInfo, &type metadata for WidgetInfo);
    atomic_store(result, &qword_1EE1ECFD8);
  }
  return result;
}

uint64_t destroy for WidgetInfo(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 64))
    return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  return result;
}

uint64_t initializeWithCopy for WidgetInfo(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  __int128 v11;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = a1 + 40;
  v7 = a2 + 40;
  v8 = *(_QWORD *)(a2 + 64);
  v9 = v4;
  swift_bridgeObjectRetain();
  if (v8)
  {
    v10 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 72) = v10;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(v6, v7, v8);
  }
  else
  {
    v11 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)v6 = *(_OWORD *)v7;
    *(_OWORD *)(v6 + 16) = v11;
    *(_QWORD *)(v6 + 32) = *(_QWORD *)(v7 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for WidgetInfo(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v7)
    {
      *(_QWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
      return a1;
    }
LABEL_7:
    v8 = *(_OWORD *)(a2 + 40);
    v9 = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 56) = v9;
    return a1;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for WidgetInfo(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1909132CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_190913314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v10 = sub_190A48148();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v18 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56))((char *)&v18 - v12, 1, 1, a4);
  *(_QWORD *)a5 = a1;
  *((_QWORD *)a5 + 1) = a2;
  *((_QWORD *)a5 + 2) = a3;
  v16 = type metadata accessor for DedupedSequence.DedupedIterator(0, a4, v14, v15);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&a5[*(int *)(v16 + 32)], v13, v10);
  swift_retain();
  return swift_retain();
}

uint64_t sub_1909133EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  char v19;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C458);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  v10 = type metadata accessor for ViewableTimelineEntry();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v21 - v15;
  sub_190913578(a1, (uint64_t)v9);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v17(v9, 1, v10) == 1)
  {
    v18 = (uint64_t)v9;
  }
  else
  {
    sub_190913600((uint64_t)v9, (uint64_t)v16);
    sub_190913578(a2, (uint64_t)v7);
    if (v17(v7, 1, v10) != 1)
    {
      sub_190913600((uint64_t)v7, (uint64_t)v14);
      v19 = sub_190A4606C();
      sub_190913644((uint64_t)v14);
      sub_190913644((uint64_t)v16);
      return v19 & 1;
    }
    sub_190913644((uint64_t)v16);
    v18 = (uint64_t)v7;
  }
  sub_1909135C0(v18);
  v19 = 0;
  return v19 & 1;
}

uint64_t sub_190913578(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C458);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1909135C0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C458);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_190913600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ViewableTimelineEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_190913644(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ViewableTimelineEntry();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_190913684()
{
  swift_release();
  return swift_release();
}

uint64_t sub_1909136AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1909136EC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_190913748(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for DedupedSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DedupedSequence);
}

uint64_t sub_190913798()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190A48148();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_190913820(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  size_t v8;
  int v9;
  uint64_t v10;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  if (*(_DWORD *)(v5 + 84))
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = *(_QWORD *)(v5 + 64) + 1;
  v9 = v6 & 0x100000;
  v10 = *a2;
  *a1 = *a2;
  if (v7 > 7 || v9 != 0 || ((v7 + 24) & ~v7) + v8 > 0x18)
  {
    a1 = (uint64_t *)(v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    v13 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v14 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (void *)(((unint64_t)v13 + v7 + 16) & ~v7);
    v17 = (const void *)(((unint64_t)v14 + v7 + 16) & ~v7);
    v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
    swift_retain();
    swift_retain();
    if (v18(v17, 1, v4))
    {
      memcpy(v16, v17, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v16, v17, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, v4);
    }
  }
  return a1;
}

uint64_t sub_190913950(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  v3 = a1 + 15;
  swift_release();
  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = ((v3 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  return result;
}

_QWORD *sub_1909139D8(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  size_t v14;

  v5 = *a2;
  v4 = (unint64_t)a2 + 15;
  *a1 = v5;
  v6 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 8);
  *v6 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF8);
  v6[1] = v7;
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (void *)(((unint64_t)v6 + v10 + 16) & ~v10);
  v12 = (const void *)((v10 + 16 + (v4 & 0xFFFFFFFFFFFFFFF8)) & ~v10);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_retain();
  swift_retain();
  if (v13(v12, 1, v8))
  {
    if (*(_DWORD *)(v9 + 84))
      v14 = *(_QWORD *)(v9 + 64);
    else
      v14 = *(_QWORD *)(v9 + 64) + 1;
    memcpy(v11, v12, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v11, v12, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
  }
  return a1;
}

_QWORD *sub_190913ABC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  size_t v16;

  v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = v5 & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFF8) + 8);
  *v6 = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF8);
  v6[1] = v8;
  swift_retain();
  swift_release();
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (void *)(((unint64_t)v6 + v11 + 16) & ~v11);
  v13 = (void *)((v11 + 16 + v7) & ~v11);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v14(v12, 1, v9);
  v15 = v14(v13, 1, v9);
  if ((_DWORD)v7)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v12, v13, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v9);
      return a1;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v12, v13, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  }
  if (*(_DWORD *)(v10 + 84))
    v16 = *(_QWORD *)(v10 + 64);
  else
    v16 = *(_QWORD *)(v10 + 64) + 1;
  memcpy(v12, v13, v16);
  return a1;
}

_QWORD *sub_190913C00(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  size_t v11;

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)(((unint64_t)v4 + v8 + 16) & ~v8);
  v10 = (const void *)(((unint64_t)v5 + v8 + 16) & ~v8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    if (*(_DWORD *)(v7 + 84))
      v11 = *(_QWORD *)(v7 + 64);
    else
      v11 = *(_QWORD *)(v7 + 64) + 1;
    memcpy(v9, v10, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  return a1;
}

_QWORD *sub_190913CD0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  _OWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  size_t v15;

  v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release();
  v6 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = v5 & 0xFFFFFFFFFFFFFFF8;
  *v6 = *(_OWORD *)(v5 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (void *)(((unint64_t)v6 + v10 + 16) & ~v10);
  v12 = (void *)((v10 + 16 + v7) & ~v10);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  LODWORD(v7) = v13(v11, 1, v8);
  v14 = v13(v12, 1, v8);
  if ((_DWORD)v7)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v11, v12, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
      return a1;
    }
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 40))(v11, v12, v8);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v15 = *(_QWORD *)(v9 + 64);
  else
    v15 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v11, v12, v15);
  return a1;
}

uint64_t sub_190913E04(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  int v13;
  unsigned int v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = v6;
  if (v5)
    v8 = *(_QWORD *)(v4 + 64);
  else
    v8 = *(_QWORD *)(v4 + 64) + 1;
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_28;
  v11 = v8 + ((v9 + 24) & ~v9);
  v12 = 8 * v11;
  if (v11 <= 3)
  {
    v15 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13)
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v15 > 0xFF)
    {
      v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(_WORD *)((char *)a1 + v11))
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v15 < 2)
    {
LABEL_28:
      if ((v6 & 0x80000000) != 0)
      {
        v18 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                     + v9
                                                                     + 16) & ~v9);
        if (v18 >= 2)
          return v18 - 1;
        else
          return 0;
      }
      else
      {
        v17 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v17) = -1;
        return (v17 + 1);
      }
    }
  }
  v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((_BYTE *)a1 + v11))
    goto LABEL_28;
LABEL_21:
  v16 = (v13 - 1) << v12;
  if (v11 > 3)
    v16 = 0;
  if ((_DWORD)v11)
  {
    if (v11 > 3)
      LODWORD(v11) = 4;
    __asm { BR              X12 }
  }
  return v7 + v16 + 1;
}

void sub_190913F88(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  v12 = ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v11;
  v13 = a3 >= v10;
  v14 = a3 - v10;
  if (v14 != 0 && v13)
  {
    if (v12 > 3)
    {
      v6 = 1u;
      if (v10 < a2)
        goto LABEL_19;
      goto LABEL_26;
    }
    v15 = ((v14 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v6 = 4u;
      if (v10 < a2)
      {
LABEL_19:
        v16 = ~v10 + a2;
        if (v12 < 4)
        {
          if ((_DWORD)v12)
          {
            v17 = v16 & ~(-1 << (8 * v12));
            bzero(a1, v12);
            if ((_DWORD)v12 == 3)
            {
              *a1 = v17;
              *((_BYTE *)a1 + 2) = BYTE2(v17);
            }
            else if ((_DWORD)v12 == 2)
            {
              *a1 = v17;
            }
            else
            {
              *(_BYTE *)a1 = v17;
            }
          }
        }
        else
        {
          bzero(a1, v12);
          *(_DWORD *)a1 = v16;
        }
        __asm { BR              X10 }
      }
LABEL_26:
      __asm { BR              X15 }
    }
    if (v15 >= 0x100)
      v6 = 2;
    else
      v6 = v15 > 1;
  }
  if (v10 < a2)
    goto LABEL_19;
  goto LABEL_26;
}

void sub_1909141E0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1909141E8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_190914208()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_190914210()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_190914220()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t type metadata accessor for DedupedSequence.DedupedIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DedupedSequence.DedupedIterator);
}

uint64_t sub_190914238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  int v15;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v18 = a1;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = sub_190A48148();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v17 - v11;
  v13 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a2, 1, 1, v5);
  do
  {
    sub_190A4825C();
    v14 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v14(a2, v6);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a2, v12, v6);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
    v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v5);
    v14((uint64_t)v10, v6);
  }
  while (v15 != 1 && ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a2, v3 + *(int *)(v18 + 32)) & 1) != 0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v3 + *(int *)(v18 + 32), a2, v6);
}

void sub_1909143AC()
{
  JUMPOUT(0x19401429CLL);
}

uint64_t sub_1909143BC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t *v2;

  sub_190913314(*v2, v2[1], v2[2], *(_QWORD *)(a1 + 16), a2);
  swift_release();
  return swift_release();
}

uint64_t sub_1909143F8()
{
  uint64_t v0;

  v0 = sub_19091443C();
  swift_release();
  swift_release();
  return v0;
}

uint64_t StaticConfiguration.body.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v1 = type metadata accessor for ViewSource(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (_QWORD *)((char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for WidgetDescriptor(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v0;
  v9 = v0[1];
  v10 = v0[2];
  v11 = v0[3];
  v12 = v0[4];
  v13 = v0[5];
  *v3 = v10;
  v3[1] = v11;
  v3[2] = v12;
  v3[3] = v13;
  v3[4] = 0;
  v3[5] = 0;
  v3[6] = v8;
  v3[7] = v9;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1909F2CA8((uint64_t)v3, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6D300);
  v14 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_190A4A350;
  sub_1908AF5D8((uint64_t)v7, v15 + v14, type metadata accessor for WidgetDescriptor);
  v17[1] = v15;
  sub_19090D084();
  sub_190A46F00();
  swift_bridgeObjectRelease();
  return sub_190906988((uint64_t)v7);
}

uint64_t StaticConfiguration.init<A>(kind:provider:content:)@<X0>(void (*a1)()@<X0>, void (*a2)()@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void (**a9)()@<X8>, uint64_t a10)
{
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;

  v15 = *(_QWORD *)(a7 - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = (*(_QWORD *)(v15 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = a6;
  *((_QWORD *)v18 + 3) = a7;
  *((_QWORD *)v18 + 4) = a8;
  *((_QWORD *)v18 + 5) = a10;
  *((_QWORD *)v18 + 6) = a1;
  *((_QWORD *)v18 + 7) = a2;
  *((_QWORD *)v18 + 8) = 0;
  *((_QWORD *)v18 + 9) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(&v18[v16], a3, a7);
  v19 = &v18[v17];
  *(_QWORD *)v19 = a4;
  *((_QWORD *)v19 + 1) = a5;
  *a9 = sub_190914894;
  a9[1] = (void (*)())v18;
  a9[2] = a1;
  a9[3] = a2;
  a9[4] = 0;
  a9[5] = 0;
  return swift_bridgeObjectRetain();
}

void sub_1909146BC(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  type metadata accessor for TimelineEntryProvider();
}

uint64_t sub_190914740(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v12;
  uint64_t v13;
  char *v14;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, v5, v8);
  v12 = (char *)swift_allocObject();
  v13 = *(_QWORD *)v12;
  *((_QWORD *)v12 + 2) = v7;
  *((_QWORD *)v12 + 3) = v2;
  *((_QWORD *)v12 + 4) = *(_QWORD *)(v10 - 128);
  *((_QWORD *)v12 + 5) = v3;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v13 + 80) - 8) + 32))(&v12[*(_QWORD *)(v13 + 120)], v9);
  v14 = &v12[*(_QWORD *)(*(_QWORD *)v12 + 128)];
  *(_QWORD *)v14 = *(_QWORD *)(v10 - 120);
  *((_QWORD *)v14 + 1) = v1;
  v4[3] = a1;
  v4[4] = (char *)MEMORY[0x19401429C](&unk_190A4D278, a1);
  *v4 = v12;
  swift_bridgeObjectRetain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_190914800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_190914894()
{
  uint64_t v0;

  sub_1909146BC(*(_QWORD *)(v0 + 48));
}

uint64_t sub_1909148F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for StaticConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StaticConfiguration);
}

uint64_t sub_190914934()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1909149BC()
{
  sub_190A48880();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  return 60;
}

uint64_t sub_190914A5C(void *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  char v19;
  char v20;
  __int128 v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41[2];
  uint64_t v42;
  __int16 v43;
  char v44;
  __int128 v45;
  char v46;

  v36 = a1;
  v4 = *(_QWORD **)v2;
  v37 = type metadata accessor for TimelineReloadPolicy();
  v5 = MEMORY[0x1E0C80A78](v37);
  v40 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v4[11];
  v35 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v4[12];
  v11 = v4[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v38 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v39 = AssociatedTypeWitness;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)&v34 - v13;
  v15 = *(void **)(a2 + 8);
  v17 = *(_QWORD *)(a2 + 32);
  v18 = *(_WORD *)(a2 + 40);
  v19 = *(_BYTE *)(a2 + 42);
  v20 = *(_BYTE *)(a2 + 64);
  *(_QWORD *)&v41[0] = *(_QWORD *)a2;
  v16 = *(_QWORD *)&v41[0];
  *((_QWORD *)&v41[0] + 1) = v15;
  v41[1] = *(_OWORD *)(a2 + 16);
  v42 = v17;
  v43 = v18;
  v44 = v19;
  v21 = *(_OWORD *)(a2 + 48);
  v22 = v14;
  v45 = v21;
  v46 = v20;
  (*(void (**)(__int128 *, uint64_t, uint64_t))(v10 + 24))(v41, v11, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C488);
  v23 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ViewableTimelineEntry() - 8) + 80);
  v24 = (v23 + 32) & ~v23;
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_190A4A350;
  (*(void (**)(char *))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 128)))(v22);
  v26 = sub_190A30B3C((uint64_t)v9, v7, v25 + v24);
  (*(void (**)(char *, uint64_t, double))(v35 + 8))(v9, v7, v26);
  *(_QWORD *)&v41[0] = v16;
  *((_QWORD *)&v41[0] + 1) = v15;
  v27 = qword_1ECF6BE60;
  v28 = v36;
  swift_retain();
  v29 = v15;
  if (v27 != -1)
    swift_once();
  v30 = __swift_project_value_buffer(v37, (uint64_t)qword_1ECF6BE78);
  v31 = v40;
  sub_1908AF5D8(v30, v40, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  v32 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v28, v41, (_QWORD *)v25, v31, 1);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v22, v39);
  return v32;
}

uint64_t sub_190914D14(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  void (*v18)(_OWORD *, uint64_t (*)(uint64_t), uint64_t, _QWORD, uint64_t);
  id v19;
  _OWORD v21[4];
  char v22;
  _OWORD v23[2];
  __int128 v24;
  __int128 v25;
  char v26;

  v9 = *(_OWORD *)(a2 + 16);
  v10 = *(_OWORD *)(a2 + 48);
  v24 = *(_OWORD *)(a2 + 32);
  v25 = v10;
  v11 = *(_OWORD *)(a2 + 16);
  v23[0] = *(_OWORD *)a2;
  v23[1] = v11;
  v12 = *(_OWORD *)(a2 + 48);
  v21[2] = v24;
  v21[3] = v12;
  v13 = *v4;
  v26 = *(_BYTE *)(a2 + 64);
  v22 = *(_BYTE *)(a2 + 64);
  v21[0] = v23[0];
  v21[1] = v9;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v4;
  *(_QWORD *)(v14 + 24) = a3;
  *(_QWORD *)(v14 + 32) = a4;
  *(_QWORD *)(v14 + 40) = a1;
  v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v14 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v14 + 96) = v15;
  *(_BYTE *)(v14 + 112) = *(_BYTE *)(a2 + 64);
  v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v14 + 48) = *(_OWORD *)a2;
  *(_OWORD *)(v14 + 64) = v16;
  v17 = *(_QWORD *)(v13 + 96);
  v18 = *(void (**)(_OWORD *, uint64_t (*)(uint64_t), uint64_t, _QWORD, uint64_t))(v17 + 32);
  swift_retain();
  swift_retain();
  v19 = a1;
  sub_190911E34((uint64_t)v23);
  v18(v21, sub_1909175D4, v14, *(_QWORD *)(v13 + 80), v17);
  return swift_release();
}

uint64_t sub_190914E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  id v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;

  v37 = a4;
  v38 = a5;
  v35 = a2;
  v36 = a3;
  v8 = *(_QWORD **)a2;
  v9 = *(_QWORD *)(*(_QWORD *)a2 + 96);
  v33 = v8[10];
  v34 = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v32 = AssociatedTypeWitness;
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)&v31 - v13;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v31 - v13, a1);
  v15 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v16 = (v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  v19 = (char *)swift_allocObject();
  v20 = v32;
  *((_QWORD *)v19 + 2) = v33;
  v21 = v34;
  *((_QWORD *)v19 + 3) = v8[11];
  *((_QWORD *)v19 + 4) = v21;
  *((_QWORD *)v19 + 5) = v8[13];
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v19[v15], v14, v20);
  v22 = v36;
  *(_QWORD *)&v19[v16] = v35;
  v23 = &v19[v17];
  v25 = v37;
  v24 = v38;
  *(_QWORD *)v23 = v22;
  *((_QWORD *)v23 + 1) = v25;
  *(_QWORD *)&v19[v18] = v24;
  v26 = &v19[(v18 + 15) & 0xFFFFFFFFFFFFFFF8];
  v27 = *(_OWORD *)(a6 + 48);
  *((_OWORD *)v26 + 2) = *(_OWORD *)(a6 + 32);
  *((_OWORD *)v26 + 3) = v27;
  v26[64] = *(_BYTE *)(a6 + 64);
  v28 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)v26 = *(_OWORD *)a6;
  *((_OWORD *)v26 + 1) = v28;
  swift_retain();
  swift_retain();
  v29 = v24;
  sub_190911E34(a6);
  sub_1909AD338((uint64_t)sub_1909176E8, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_190914FB4(uint64_t a1, uint64_t *a2, void (*a3)(void), uint64_t a4, void *a5, __int128 *a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  __int128 *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(void);
  __int128 v41;
  __int128 v42;

  v35 = a6;
  v36 = a5;
  v39 = a4;
  v40 = a3;
  v31 = a1;
  v7 = *a2;
  v37 = type metadata accessor for TimelineReloadPolicy();
  v8 = MEMORY[0x1E0C80A78](v37);
  v38 = (uint64_t)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[1] = *(_QWORD *)(v7 + 88);
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_190A46084();
  v32 = *(_QWORD *)(v10 - 8);
  v33 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C488);
  v13 = (int *)type metadata accessor for ViewableTimelineEntry();
  v14 = *(unsigned __int8 *)(*((_QWORD *)v13 - 1) + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_190A4A350;
  v34 = (_QWORD *)v16;
  v17 = v16 + v15;
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v19 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8);
  v20 = swift_checkMetadataState();
  v21 = v31;
  v19(v20, AssociatedConformanceWitness);
  (*(void (**)(uint64_t))((char *)a2 + *(_QWORD *)(*a2 + 128)))(v21);
  v22 = sub_190A47884();
  v23 = v17 + v13[7];
  v24 = type metadata accessor for WidgetViewMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v17, v12, v33);
  *(_QWORD *)(v17 + v13[5]) = v22;
  v25 = v17 + v13[6];
  *(_QWORD *)v25 = 0;
  *(_QWORD *)(v25 + 8) = 0;
  *(_BYTE *)(v25 + 16) = 1;
  *(_OWORD *)(v17 + v13[8]) = xmmword_190A4A370;
  v41 = *v35;
  v42 = v41;
  v26 = v36;
  sub_190917544((uint64_t)&v42);
  if (qword_1ECF6BE60 != -1)
    swift_once();
  v27 = __swift_project_value_buffer(v37, (uint64_t)qword_1ECF6BE78);
  v28 = v38;
  sub_1908AF5D8(v27, v38, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v26, &v41, v34, v28, 1);
  v40();
  return swift_release();
}

uint64_t sub_1909152C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  void (*v19)(_OWORD *, uint64_t (*)(uint64_t), uint64_t, _QWORD, uint64_t);
  id v20;
  _OWORD v22[4];
  char v23;
  _OWORD v24[2];
  __int128 v25;
  __int128 v26;
  char v27;

  v10 = *(_OWORD *)(a3 + 16);
  v11 = *(_OWORD *)(a3 + 48);
  v25 = *(_OWORD *)(a3 + 32);
  v26 = v11;
  v12 = *(_OWORD *)(a3 + 16);
  v24[0] = *(_OWORD *)a3;
  v24[1] = v12;
  v13 = *(_OWORD *)(a3 + 48);
  v22[2] = v25;
  v22[3] = v13;
  v14 = *v5;
  v27 = *(_BYTE *)(a3 + 64);
  v23 = *(_BYTE *)(a3 + 64);
  v22[0] = v24[0];
  v22[1] = v10;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v5;
  *(_QWORD *)(v15 + 24) = a4;
  *(_QWORD *)(v15 + 32) = a5;
  *(_QWORD *)(v15 + 40) = a1;
  v16 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v15 + 80) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v15 + 96) = v16;
  *(_BYTE *)(v15 + 112) = *(_BYTE *)(a3 + 64);
  v17 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v15 + 48) = *(_OWORD *)a3;
  *(_OWORD *)(v15 + 64) = v17;
  v18 = *(_QWORD *)(v14 + 96);
  v19 = *(void (**)(_OWORD *, uint64_t (*)(uint64_t), uint64_t, _QWORD, uint64_t))(v18 + 40);
  swift_retain();
  swift_retain();
  v20 = a1;
  sub_190911E34((uint64_t)v24);
  v19(v22, sub_1909172F4, v15, *(_QWORD *)(v14 + 80), v18);
  return swift_release();
}

uint64_t sub_1909153D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  _QWORD *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  id v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;

  v38 = a5;
  v39 = a6;
  v36 = a3;
  v37 = a4;
  v7 = *(_QWORD **)a2;
  v34 = *(_QWORD *)(*(_QWORD *)a2 + 96);
  v35 = a2;
  v33 = v7[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = type metadata accessor for Timeline(0, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v32 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v32 - v14, a1, v11);
  v16 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v17 = (v13 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = (char *)swift_allocObject();
  *((_QWORD *)v20 + 2) = v33;
  v21 = v34;
  *((_QWORD *)v20 + 3) = v7[11];
  *((_QWORD *)v20 + 4) = v21;
  *((_QWORD *)v20 + 5) = v7[13];
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v20[v16], v15, v11);
  v22 = v36;
  *(_QWORD *)&v20[v17] = v35;
  v23 = &v20[v18];
  v25 = v37;
  v24 = v38;
  *(_QWORD *)v23 = v22;
  *((_QWORD *)v23 + 1) = v25;
  *(_QWORD *)&v20[v19] = v24;
  v26 = &v20[(v19 + 15) & 0xFFFFFFFFFFFFFFF8];
  v27 = v39;
  v28 = *(_OWORD *)(v39 + 48);
  *((_OWORD *)v26 + 2) = *(_OWORD *)(v39 + 32);
  *((_OWORD *)v26 + 3) = v28;
  v26[64] = *(_BYTE *)(v27 + 64);
  v29 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v29;
  swift_retain();
  swift_retain();
  v30 = v24;
  sub_190911E34(v27);
  sub_1909AD338((uint64_t)sub_190917470, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_1909155A8(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, void *a5, __int128 *a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  char *v21;
  _QWORD *v22;
  id v23;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void (*v28)(void);
  __int128 v29;
  __int128 v30;

  v26 = a5;
  v27 = a4;
  v28 = a3;
  v25 = a1;
  v8 = type metadata accessor for TimelineReloadPolicy();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v14 = type metadata accessor for Timeline(0, AssociatedTypeWitness, AssociatedConformanceWitness, v13);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v25 - v16);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6AFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (uint64_t *)((char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v15 + 16))(v17, v25, v14);
  v21 = (char *)type metadata accessor for ViewableTimelineEntry();
  sub_190A1A004(v17, (uint64_t)sub_1909170A8, a2, v21, AssociatedTypeWitness, (uint64_t)&protocol witness table for ViewableTimelineEntry, AssociatedConformanceWitness, v20);
  v30 = *a6;
  v29 = *a6;
  v22 = (_QWORD *)*v20;
  sub_1908AF5D8((uint64_t)v20 + *(int *)(v18 + 36), (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  v23 = v26;
  sub_190917544((uint64_t)&v30);
  swift_bridgeObjectRetain();
  WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v23, &v29, v22, (uint64_t)v10, 1);
  v28();
  swift_release();
  return sub_1908AA544((uint64_t)v20, (uint64_t *)&unk_1ECF6AFF0);
}

uint64_t sub_1909157E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _OWORD v16[2];
  uint64_t v17;
  __int16 v18;
  char v19;
  __int128 v20;
  char v21;

  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_WORD *)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 42);
  v11 = *(_BYTE *)(a2 + 64);
  v12 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 120);
  v13 = *(_OWORD *)(a2 + 16);
  v16[0] = *(_OWORD *)a2;
  v16[1] = v13;
  v17 = v8;
  v18 = v9;
  v19 = v10;
  v20 = *(_OWORD *)(a2 + 48);
  v21 = v11;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = a4;
  swift_retain();
  sub_1909152C8(a1, v12, (uint64_t)v16, (uint64_t)sub_1909172D0, v14);
  return swift_release();
}

uint64_t sub_1909158A0(void *a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __int128 v29;
  __int128 v30;
  char *v31;
  uint64_t v32;
  _QWORD v34[2];
  uint64_t v35;
  char *v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  char v45;

  v39 = a7;
  v40 = a4;
  v35 = a5;
  v37 = a1;
  v11 = (_QWORD *)*v7;
  v12 = *(_QWORD *)(a6 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](a1);
  v36 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v16;
  v17 = a2[3];
  v43 = a2[2];
  v44 = v17;
  v45 = *((_BYTE *)a2 + 64);
  v18 = a2[1];
  v41 = *a2;
  v42 = v18;
  v19 = sub_190A47D7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v16, 1, 1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a3, a6);
  sub_190A47D64();
  swift_retain();
  v37 = v37;
  sub_190911E34((uint64_t)&v41);
  swift_retain();
  v20 = sub_190A47D58();
  v21 = (*(unsigned __int8 *)(v12 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v22 = (v13 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = (char *)swift_allocObject();
  v25 = MEMORY[0x1E0DF06E8];
  *((_QWORD *)v24 + 2) = v20;
  *((_QWORD *)v24 + 3) = v25;
  *((_QWORD *)v24 + 4) = v11[10];
  *((_QWORD *)v24 + 5) = v11[11];
  *((_QWORD *)v24 + 6) = a6;
  *((_QWORD *)v24 + 7) = v11[12];
  v26 = v39;
  *((_QWORD *)v24 + 8) = v11[13];
  *((_QWORD *)v24 + 9) = v26;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v24[v21], v36, a6);
  *(_QWORD *)&v24[v22] = v34[1];
  v27 = (uint64_t)v38;
  *(_QWORD *)&v24[v23] = v37;
  v28 = &v24[(v23 + 15) & 0xFFFFFFFFFFFFFFF8];
  v29 = v44;
  *((_OWORD *)v28 + 2) = v43;
  *((_OWORD *)v28 + 3) = v29;
  v28[64] = v45;
  v30 = v42;
  *(_OWORD *)v28 = v41;
  *((_OWORD *)v28 + 1) = v30;
  v31 = &v24[(v23 + 87) & 0xFFFFFFFFFFFFFFF8];
  v32 = v35;
  *(_QWORD *)v31 = v40;
  *((_QWORD *)v31 + 1) = v32;
  sub_19095ADDC(v27, (uint64_t)&unk_1EE1ED0A0, (uint64_t)v24);
  return swift_release();
}

uint64_t sub_190915AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v8[61] = v11;
  v8[62] = v12;
  v8[59] = a7;
  v8[60] = a8;
  v8[57] = a5;
  v8[58] = a6;
  v8[56] = a4;
  v8[63] = *a5;
  v8[64] = *(_QWORD *)(v12 - 8);
  v8[65] = swift_task_alloc();
  v8[66] = swift_task_alloc();
  sub_190A47D64();
  v8[67] = sub_190A47D58();
  v8[68] = sub_190A47D28();
  v8[69] = v9;
  return swift_task_switch();
}

uint64_t sub_190915B8C()
{
  uint64_t v0;
  void (*v1)(_QWORD, _QWORD, _QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  _OWORD *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _QWORD *v20;
  uint64_t v21;
  __int128 v22;

  v1 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 512) + 16);
  v1(*(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 496));
  if ((swift_dynamicCast() & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 472);
    v3 = *(_QWORD *)(v0 + 376);
    v4 = *(_QWORD *)(v0 + 384);
    *(_QWORD *)(v0 + 560) = v4;
    v5 = *(_BYTE *)(v0 + 392);
    v6 = *(_QWORD *)(v0 + 400);
    v7 = *(_QWORD *)(v0 + 408);
    *(_QWORD *)(v0 + 568) = v7;
    *(_OWORD *)(v0 + 192) = *(_OWORD *)v2;
    v8 = *(_OWORD *)(v2 + 16);
    v9 = *(_OWORD *)(v2 + 32);
    v10 = *(_OWORD *)(v2 + 48);
    *(_BYTE *)(v0 + 256) = *(_BYTE *)(v2 + 64);
    *(_OWORD *)(v0 + 224) = v9;
    *(_OWORD *)(v0 + 240) = v10;
    *(_OWORD *)(v0 + 208) = v8;
    *(_QWORD *)(v0 + 336) = v3;
    *(_QWORD *)(v0 + 344) = v4;
    *(_BYTE *)(v0 + 352) = v5;
    *(_QWORD *)(v0 + 360) = v6;
    *(_QWORD *)(v0 + 368) = v7;
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 576) = v11;
    *v11 = v0;
    v11[1] = sub_1909102B0;
    return sub_190915E24(*(_QWORD *)(v0 + 464), (_OWORD *)(v0 + 192), (__int128 *)(v0 + 336));
  }
  else
  {
    v13 = (_OWORD *)(v0 + 104);
    v1(*(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 496));
    if ((swift_dynamicCast() & 1) == 0)
    {
      v21 = *(_QWORD *)(v0 + 504);
      *v13 = 0u;
      *(_OWORD *)(v0 + 120) = 0u;
      *(_OWORD *)(v0 + 136) = 0u;
      *(_OWORD *)(v0 + 152) = 0u;
      *(_OWORD *)(v0 + 168) = 0u;
      *(_QWORD *)(v0 + 184) = 0;
      swift_release();
      sub_1908AA544(v0 + 104, qword_1EE1ECF40);
      v22 = *(_OWORD *)(v21 + 96);
      *(_OWORD *)(v0 + 416) = *(_OWORD *)(v21 + 80);
      *(_OWORD *)(v0 + 432) = v22;
      type metadata accessor for TimelineEntryProvider.Errors();
    }
    v14 = *(_QWORD *)(v0 + 472);
    v15 = *(_OWORD *)(v0 + 152);
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 136);
    *(_OWORD *)(v0 + 64) = v15;
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 168);
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 184);
    v16 = *(_OWORD *)(v0 + 120);
    *(_OWORD *)(v0 + 16) = *v13;
    *(_OWORD *)(v0 + 32) = v16;
    *(_OWORD *)(v0 + 264) = *(_OWORD *)v14;
    v18 = *(_OWORD *)(v14 + 32);
    v17 = *(_OWORD *)(v14 + 48);
    v19 = *(_OWORD *)(v14 + 16);
    *(_BYTE *)(v0 + 328) = *(_BYTE *)(v14 + 64);
    *(_OWORD *)(v0 + 296) = v18;
    *(_OWORD *)(v0 + 312) = v17;
    *(_OWORD *)(v0 + 280) = v19;
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 600) = v20;
    *v20 = v0;
    v20[1] = sub_1909103BC;
    return sub_190916564(*(_QWORD *)(v0 + 464), v0 + 264, v0 + 16);
  }
}

uint64_t sub_190915D98(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void (*v3)(void *, uint64_t);
  id v4;

  MEMORY[0x19401429C](&unk_190A4D318, a1);
  v2 = (void *)swift_allocError();
  swift_willThrow();
  v3 = *(void (**)(void *, uint64_t))(v1 + 480);
  v4 = v2;
  v3(v2, 1);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_190915E24(uint64_t a1, _OWORD *a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  *(_QWORD *)(v4 + 64) = a1;
  *(_QWORD *)(v4 + 72) = v3;
  *(_QWORD *)(v4 + 80) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6AFF0);
  *(_QWORD *)(v4 + 88) = swift_task_alloc();
  *(_QWORD *)(v4 + 96) = type metadata accessor for TimelineReloadPolicy();
  *(_QWORD *)(v4 + 104) = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v4 + 112) = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v4 + 120) = AssociatedConformanceWitness;
  v10 = type metadata accessor for Timeline(0, AssociatedTypeWitness, AssociatedConformanceWitness, v9);
  *(_QWORD *)(v4 + 128) = v10;
  *(_QWORD *)(v4 + 136) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v4 + 144) = swift_task_alloc();
  *(_QWORD *)(v4 + 152) = swift_task_alloc();
  v11 = *a3;
  *(_OWORD *)(v4 + 160) = *a2;
  *(_OWORD *)(v4 + 176) = v11;
  *(_BYTE *)(v4 + 264) = *((_BYTE *)a3 + 16);
  *(_OWORD *)(v4 + 192) = *(__int128 *)((char *)a3 + 24);
  sub_190A47D64();
  *(_QWORD *)(v4 + 208) = sub_190A47D58();
  *(_QWORD *)(v4 + 216) = sub_190A47D28();
  *(_QWORD *)(v4 + 224) = v12;
  return swift_task_switch();
}

uint64_t sub_190915FA8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  char v5;
  _QWORD *v6;
  __int128 v8;
  __int128 v9;

  if (qword_1ECF6BB68 != -1)
    swift_once();
  v1 = sub_190A465A0();
  *(_QWORD *)(v0 + 232) = __swift_project_value_buffer(v1, (uint64_t)qword_1ECF6D820);
  v2 = sub_190A46588();
  v3 = sub_190A47F68();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1908A7000, v2, v3, "Preview entries request being handled by StaticConfiguration", v4, 2u);
    MEMORY[0x194014398](v4, -1, -1);
  }
  v5 = *(_BYTE *)(v0 + 264);
  v8 = *(_OWORD *)(v0 + 176);
  v9 = *(_OWORD *)(v0 + 192);

  *(_OWORD *)(v0 + 16) = v8;
  *(_BYTE *)(v0 + 32) = v5;
  *(_OWORD *)(v0 + 40) = v9;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v6;
  *v6 = v0;
  v6[1] = sub_1909160D8;
  return TimelineEntryPreviewSource.unwrapTimeline<A>(for:)(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
}

uint64_t sub_1909160D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 248) = a1;
  *(_QWORD *)(v3 + 256) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_190916144()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  __int128 v27;

  swift_release();
  swift_bridgeObjectRetain();
  v1 = sub_190A46588();
  v2 = sub_190A47F68();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 248);
    v4 = *(_QWORD *)(v0 + 112);
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 134217984;
    *(_QWORD *)(v0 + 56) = MEMORY[0x194012F04](v3, v4);
    sub_190A48178();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1908A7000, v1, v2, "StaticConfiguration resolved entry source to have %ld entries", v5, 0xCu);
    MEMORY[0x194014398](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  if (qword_1ECF6BE60 != -1)
    swift_once();
  v6 = *(_QWORD *)(v0 + 248);
  v25 = *(void **)(v0 + 168);
  v7 = *(_QWORD **)(v0 + 152);
  v9 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD **)(v0 + 144);
  v11 = *(_QWORD *)(v0 + 120);
  v10 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 112);
  v14 = *(uint64_t **)(v0 + 88);
  v23 = *(_QWORD *)(v0 + 80);
  v24 = *(_QWORD *)(v0 + 160);
  v22 = *(_QWORD *)(v0 + 72);
  v26 = *(void **)(v0 + 64);
  v15 = __swift_project_value_buffer(*(_QWORD *)(v0 + 96), (uint64_t)qword_1ECF6BE78);
  sub_1908AF5D8(v15, v12, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  Timeline.init(entries:policy:)(v6, v12, v13, v11, v7);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(v8, v7, v10);
  v16 = (char *)type metadata accessor for ViewableTimelineEntry();
  sub_190A1A004(v8, (uint64_t)sub_1909170A8, v22, v16, v13, (uint64_t)&protocol witness table for ViewableTimelineEntry, v11, v14);
  *(_QWORD *)&v27 = v24;
  *((_QWORD *)&v27 + 1) = v25;
  v17 = (_QWORD *)*v14;
  sub_1908AF5D8((uint64_t)v14 + *(int *)(v23 + 36), v12, (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  type metadata accessor for WidgetViewCollection();
  swift_allocObject();
  v18 = v26;
  swift_retain();
  v19 = v25;
  swift_bridgeObjectRetain();
  v20 = WidgetViewCollection.init(widget:environment:entries:reloadPolicy:shouldSortAndDedupeEntries:)(v18, &v27, v17, v12, 0);
  sub_1908AA544((uint64_t)v14, (uint64_t *)&unk_1ECF6AFF0);
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v7, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v20);
}

double sub_190916418@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;

  v16 = a3;
  v5 = *a2;
  v6 = *(_QWORD *)(*a2 + 88);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v15 - v10, a1, AssociatedTypeWitness);
  (*(void (**)(uint64_t))((char *)a2 + *(_QWORD *)(*a2 + 128)))(a1);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return sub_190A308CC((uint64_t)v11, (uint64_t)v8, AssociatedTypeWitness, v6, AssociatedConformanceWitness, *(_QWORD *)(v5 + 104), v16);
}

uint64_t sub_190916564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  *(_QWORD *)(v4 + 104) = a3;
  *(_QWORD *)(v4 + 112) = v3;
  *(_QWORD *)(v4 + 96) = a1;
  v6 = *v3;
  *(_QWORD *)(v4 + 120) = *v3;
  v7 = *(_QWORD *)(v6 + 80);
  *(_QWORD *)(v4 + 128) = v7;
  *(_QWORD *)(v4 + 136) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 144) = swift_task_alloc();
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 64) = v8;
  *(_BYTE *)(v4 + 80) = *(_BYTE *)(a2 + 64);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 32) = v9;
  *(_QWORD *)(v4 + 152) = sub_190A47D64();
  *(_QWORD *)(v4 + 160) = sub_190A47D58();
  *(_QWORD *)(v4 + 168) = sub_190A47D28();
  *(_QWORD *)(v4 + 176) = v10;
  return swift_task_switch();
}

uint64_t sub_190916620()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  if (qword_1ECF6BB68 != -1)
    swift_once();
  v1 = sub_190A465A0();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ECF6D820);
  v2 = sub_190A46588();
  v3 = sub_190A47F68();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1908A7000, v2, v3, "Preview provider request being handled by StaticConfiguration", v4, 2u);
    MEMORY[0x194014398](v4, -1, -1);
  }
  v5 = v0[18];
  v6 = v0[16];

  TimelineProviderPreviewSource.unwrapContent<A>(for:)(v6, v5);
  v7 = v0[18];
  v8 = v0[14];
  v9 = v0[12];
  v0[23] = sub_190A47D58();
  v10 = (_QWORD *)swift_task_alloc();
  v0[24] = v10;
  v10[2] = v8;
  v10[3] = v9;
  v10[4] = v7;
  v10[5] = v0 + 2;
  v11 = (_QWORD *)swift_task_alloc();
  v0[25] = v11;
  type metadata accessor for WidgetViewCollection();
  *v11 = v0;
  v11[1] = sub_190916808;
  return sub_190A486A0();
}

uint64_t sub_190916808()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_190916870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_1909168D4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED090);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  sub_1909152C8(a3, a4, a5, (uint64_t)sub_190917068, v13);
  return swift_release();
}

uint64_t sub_1909169D4()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED090);
  return sub_190A47D40();
}

uint64_t sub_190916A18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B9F8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_190A47D7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_190A47D64();
  swift_retain();
  swift_retain();
  v10 = sub_190A47D58();
  v11 = (_QWORD *)swift_allocObject();
  v12 = MEMORY[0x1E0DF06E8];
  v11[2] = v10;
  v11[3] = v12;
  v11[4] = v3;
  v11[5] = a1;
  v11[6] = a2;
  sub_19095ADDC((uint64_t)v8, (uint64_t)&unk_1EE1ED088, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_190916B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;

  v6[2] = a5;
  v6[3] = a6;
  v6[4] = sub_190A47D64();
  v6[5] = sub_190A47D58();
  v7 = (_QWORD *)swift_task_alloc();
  v6[6] = v7;
  *v7 = v6;
  v7[1] = sub_190911298;
  return sub_190916B78();
}

uint64_t sub_190916B78()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD *, uint64_t, uint64_t);

  v2 = *v0;
  v1[7] = sub_190A47D64();
  v1[8] = sub_190A47D58();
  v3 = *(_QWORD *)(v2 + 96);
  v4 = *(_QWORD *)(v2 + 80);
  v7 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v3 + 56) + *(_QWORD *)(v3 + 56));
  v5 = (_QWORD *)swift_task_alloc();
  v1[9] = v5;
  *v5 = v1;
  v5[1] = sub_190916C20;
  return v7(v1 + 6, v4, v3);
}

uint64_t sub_190916C20()
{
  swift_task_dealloc();
  sub_190A47D28();
  return swift_task_switch();
}

uint64_t sub_190916C90()
{
  uint64_t v0;
  unint64_t v1;
  objc_class *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  objc_super *v6;
  _BYTE *v7;
  _BYTE *v8;
  objc_super *v9;

  swift_release();
  if (*(_QWORD *)(v0 + 48))
  {
    v1 = sub_190A3A1BC();
    swift_bridgeObjectRelease();
    v2 = (objc_class *)type metadata accessor for WidgetRelevanceFetchResult();
    v3 = objc_allocWithZone(v2);
    v3[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 0;
    v4 = v3;
    v5 = sub_1909AE1FC(v1);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v4[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = v5;

    *(_QWORD *)(v0 + 32) = v4;
    v6 = (objc_super *)(v0 + 32);
  }
  else
  {
    v2 = (objc_class *)type metadata accessor for WidgetRelevanceFetchResult();
    v7 = objc_allocWithZone(v2);
    v7[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_isDefaultImplementation] = 1;
    v8 = v7;
    *(_QWORD *)&v8[OBJC_IVAR____TtC9WidgetKit26WidgetRelevanceFetchResult_widgetRelevances] = sub_1909AE1FC(MEMORY[0x1E0DEE9D8]);

    *(_QWORD *)(v0 + 16) = v8;
    v6 = (objc_super *)(v0 + 16);
  }
  v6->super_class = v2;
  v9 = -[objc_super init](v6, sel_init);
  return (*(uint64_t (**)(objc_super *))(v0 + 8))(v9);
}

void type metadata accessor for TimelineEntryProvider()
{
  JUMPOUT(0x1940141E8);
}

uint64_t sub_190916DBC()
{
  sub_19090D084();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_190916E0C(void *a1, uint64_t a2)
{
  return sub_190914A5C(a1, a2);
}

uint64_t sub_190916E2C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_190914D14(a1, a2, a3, a4);
}

uint64_t sub_190916E4C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1909157E4(a1, a2, a3, a4);
}

uint64_t sub_190916E6C(void *a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1909158A0(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_190916E8C(uint64_t a1, uint64_t a2)
{
  return sub_190916A18(a1, a2);
}

uint64_t sub_190916EAC(uint64_t a1)
{
  MEMORY[0x19401429C](&unk_190A4D278, a1);
  return sub_19096C574();
}

uint64_t sub_190916EE0()
{
  return sub_1909149BC();
}

uint64_t sub_190916F00(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x19401429C](&unk_190A4D228);
  result = MEMORY[0x19401429C](&unk_190A4D250, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_190916F44()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_190916F78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1908CEB54;
  return sub_190916B10(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_190916FF8(uint64_t a1)
{
  uint64_t v1;

  return sub_1909168D4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_190917004()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED090);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_190917068()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ED090);
  return sub_1909169D4();
}

double sub_1909170A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_190916418(a1, v2, a2);
}

uint64_t sub_1909170C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909171A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v3 = *(_QWORD *)(v1[6] - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1[2];
  v8 = v1[3];
  v9 = (uint64_t)v1 + v4;
  v10 = *(_QWORD **)((char *)v1 + v5);
  v11 = *(_QWORD *)((char *)v1 + v6);
  v12 = (uint64_t)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = *(_QWORD *)((char *)v1 + ((v6 + 87) & 0xFFFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1908C5090;
  return sub_190915AD4(a1, v7, v8, v9, v10, v11, v12, v13);
}

void type metadata accessor for TimelineEntryProvider.Errors()
{
  JUMPOUT(0x1940141E8);
}

uint64_t sub_1909172AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1909172D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1909172F4(uint64_t a1)
{
  return sub_1909175E0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD *))sub_1909153D0);
}

uint64_t sub_190917300()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = type metadata accessor for Timeline(0, AssociatedTypeWitness, AssociatedConformanceWitness, v3);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  swift_bridgeObjectRelease();
  v8 = v0 + v6 + *(int *)(v4 + 36);
  v9 = sub_190A46084();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = (((((v7 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_190917470()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = *(_QWORD *)(type metadata accessor for Timeline(0, AssociatedTypeWitness, AssociatedConformanceWitness, v3) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1909155A8(v0 + v5, *(_QWORD *)(v0 + v6), *(void (**)(void))(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v0 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), (__int128 *)(v0+ ((((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_190917544(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 8);
  swift_retain();
  v3 = v2;
  return a1;
}

uint64_t objectdestroy_25Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1909175D4(uint64_t a1)
{
  return sub_1909175E0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD *))sub_190914E20);
}

uint64_t sub_1909175E0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD *))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2 + 6);
}

uint64_t sub_1909175F4()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1909176E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_190914FB4(v0 + v2, *(uint64_t **)(v0 + v3), *(void (**)(void))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), (__int128 *)(v0+ ((((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_190917768(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1909177A8 + 4 * byte_190A4D120[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1909177C8 + 4 * byte_190A4D125[v4]))();
}

_BYTE *sub_1909177A8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1909177C8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1909177D0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1909177D8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1909177E0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1909177E8(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1909177F4()
{
  JUMPOUT(0x19401429CLL);
}

uint64_t EnvironmentValues._localizations.getter()
{
  uint64_t v1;

  sub_1909019AC();
  sub_190A46C3C();
  return v1;
}

uint64_t EnvironmentValues._localizations.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void *v30;
  uint64_t LikeCurrentWithBundleLocalizations;
  void *v32;
  void (*v33)(char *, char *, uint64_t);
  int v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  unsigned int *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unsigned int *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;

  v3 = sub_190A46888();
  v52 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v48 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v47 = (char *)&v46 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v50 = (char *)&v46 - v9;
  MEMORY[0x1E0C80A78](v8);
  v49 = (char *)&v46 - v10;
  v11 = sub_190A4618C();
  MEMORY[0x1E0C80A78](v11);
  v53 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C948);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_190A46180();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v46 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v46 - v24;
  sub_1909019AC();
  v54 = v1;
  result = sub_190A46C3C();
  v27 = v55;
  if (a1)
  {
    v51 = v3;
    if (v55)
    {
      v28 = swift_retain_n();
      v29 = _s9WidgetKit0A13LocalizationsC2eeoiySbAC_ACtFZ_0(v28, v27);
      swift_release_n();
      swift_release();
      if ((v29 & 1) != 0)
        return swift_release();
    }
  }
  else
  {
    if (!v55)
      return result;
    v51 = v3;
    swift_release();
  }
  v55 = a1;
  swift_retain();
  sub_190A46C48();
  if (a1)
  {
    swift_retain();
    v30 = (void *)sub_190A47C50();
    LikeCurrentWithBundleLocalizations = _CFLocaleCreateLikeCurrentWithBundleLocalizations();
    if (LikeCurrentWithBundleLocalizations)
    {
      v32 = (void *)LikeCurrentWithBundleLocalizations;
      sub_190A46114();

      v33 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
      v33(v15, v23, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
      v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
      v35 = v52;
      if (v34 != 1)
      {
        v33(v25, v15, v16);
LABEL_16:
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v23, v25, v16);
        sub_190A46BB8();
        sub_190A46174();
        sub_190A46BE8();
        sub_190A460F0();
        v42 = sub_190A460FC();
        swift_bridgeObjectRelease();
        v43 = (unsigned int *)MEMORY[0x1E0CD9A98];
        if (v42 != 2)
          v43 = (unsigned int *)MEMORY[0x1E0CD9A90];
        v45 = v50;
        v44 = v51;
        (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v50, *v43, v51);
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v49, v45, v44);
        sub_190A46A68();

        swift_release_n();
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v25, v16);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
      v35 = v52;
    }
    sub_190A46138();
    sub_190917D68((uint64_t)v15);
    goto LABEL_16;
  }
  sub_190A46138();
  sub_190A46BB8();
  sub_190A46BAC();
  sub_190A46174();
  v36 = *(void (**)(char *, uint64_t))(v17 + 8);
  v36(v23, v16);
  sub_190A46BE8();
  sub_190A46BAC();
  sub_190A460F0();
  v36(v20, v16);
  v37 = sub_190A460FC();
  swift_bridgeObjectRelease();
  v38 = (unsigned int *)MEMORY[0x1E0CD9A98];
  if (v37 != 2)
    v38 = (unsigned int *)MEMORY[0x1E0CD9A90];
  v39 = v51;
  v40 = v52;
  v41 = v48;
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v48, *v38, v51);
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v47, v41, v39);
  return sub_190A46A68();
}

uint64_t sub_190917D68(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C948);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_190917DA8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_190A486DC(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_190A486DC() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_190917E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;

  v4 = type metadata accessor for ControlTemplatePicker.Option(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_190918AD0(a1 + v12, (uint64_t)v10);
        sub_190918AD0(a2 + v12, (uint64_t)v7);
        v15 = static ControlTemplatePicker.Option.== infix(_:_:)(v10, v7);
        sub_190918B14((uint64_t)v7);
        sub_190918B14((uint64_t)v10);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_190917F88()
{
  sub_190918754();
  return sub_190A4681C();
}

uint64_t sub_190917FD8()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ECF6D918 = result;
  return result;
}

uint64_t sub_190917FFC()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetEnvironment.AnyKey();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6CB58);
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ECF6D900 = v0;
  strcpy(algn_1ECF6D908, "localizations");
  HIWORD(qword_1ECF6D910) = -4864;
  return result;
}

uint64_t sub_190918078()
{
  if (qword_1ECF6C8C0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1909180B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  return swift_retain();
}

uint64_t sub_1909180D8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  type metadata accessor for OptionalLocalizationsWrapper();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *a2 = v4;
  return swift_retain();
}

uint64_t sub_190918128()
{
  uint64_t v0;

  if (qword_1ECF6C928 != -1)
    swift_once();
  v0 = qword_1ECF6D900;
  swift_retain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t (*EnvironmentValues._localizations.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 8) = v1;
  sub_1909019AC();
  sub_190A46C3C();
  return sub_1909181E4;
}

uint64_t sub_1909181E4(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) == 0)
    return EnvironmentValues._localizations.setter(*a1);
  v2 = swift_retain();
  EnvironmentValues._localizations.setter(v2);
  return swift_release();
}

uint64_t sub_190918228()
{
  return 0x65756C6176;
}

uint64_t sub_19091823C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_190A486DC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1909182C8()
{
  sub_1909187DC();
  return sub_190A48868();
}

uint64_t sub_1909182F0()
{
  sub_1909187DC();
  return sub_190A48874();
}

uint64_t sub_190918318(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B4A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909187DC();
  sub_190A48850();
  v9[1] = *(_QWORD *)(v2 + 16);
  type metadata accessor for WidgetLocalizations();
  sub_1908AED38(&qword_1ECF6C7A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for WidgetLocalizations, (uint64_t)&protocol conformance descriptor for WidgetLocalizations);
  sub_190A485EC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_190918438(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6B750);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909187DC();
  sub_190A48838();
  if (v2)
  {
    type metadata accessor for OptionalLocalizationsWrapper();
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for WidgetLocalizations();
    sub_1908AED38(&qword_1ECF6CC28, 255, (uint64_t (*)(uint64_t))type metadata accessor for WidgetLocalizations, (uint64_t)&protocol conformance descriptor for WidgetLocalizations);
    sub_190A4852C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(_QWORD *)(v1 + 16) = v9[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_1909185A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  type metadata accessor for OptionalLocalizationsWrapper();
  v5 = swift_allocObject();
  result = sub_190918438(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1909185FC(_QWORD *a1)
{
  return sub_190918318(a1);
}

uint64_t sub_19091861C(uint64_t *a1, uint64_t *a2)
{
  return sub_19091898C(*a1, *a2);
}

uint64_t sub_190918628()
{
  uint64_t v0;

  if (*(_QWORD *)(*(_QWORD *)v0 + 16))
    return sub_190992C14();
  else
    return 7104878;
}

uint64_t sub_190918660(uint64_t *a1, uint64_t *a2)
{
  return sub_190918820(*a1, *a2);
}

uint64_t type metadata accessor for OptionalLocalizationsWrapper()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for LocalizationsKey()
{
  return &type metadata for LocalizationsKey;
}

uint64_t sub_1909186A4(uint64_t a1, uint64_t a2)
{
  return sub_1908AED38(&qword_1ECF6CCF0, a2, (uint64_t (*)(uint64_t))type metadata accessor for OptionalLocalizationsWrapper, (uint64_t)&unk_190A4D3C4);
}

uint64_t sub_1909186D0(uint64_t a1, uint64_t a2)
{
  return sub_1908AED38(&qword_1ECF6CCE8, a2, (uint64_t (*)(uint64_t))type metadata accessor for OptionalLocalizationsWrapper, (uint64_t)&unk_190A4D414);
}

uint64_t sub_1909186FC(uint64_t a1, uint64_t a2)
{
  return sub_1908AED38(&qword_1ECF6CCF8, a2, (uint64_t (*)(uint64_t))type metadata accessor for OptionalLocalizationsWrapper, (uint64_t)&unk_190A4D484);
}

uint64_t sub_190918728(uint64_t a1, uint64_t a2)
{
  return sub_1908AED38(&qword_1ECF6CCE0, a2, (uint64_t (*)(uint64_t))type metadata accessor for OptionalLocalizationsWrapper, (uint64_t)&unk_190A4D45C);
}

unint64_t sub_190918754()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE1ED128;
  if (!qword_1EE1ED128)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6C650);
    v2 = sub_1908AED38((unint64_t *)&qword_1EE1EDF40, 255, (uint64_t (*)(uint64_t))type metadata accessor for WidgetLocalizations, (uint64_t)&protocol conformance descriptor for WidgetLocalizations);
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEE998], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE1ED128);
  }
  return result;
}

unint64_t sub_1909187DC()
{
  unint64_t result;

  result = qword_1ECF6B700;
  if (!qword_1ECF6B700)
  {
    result = MEMORY[0x19401429C](&unk_190A4D5EC, &type metadata for OptionalLocalizationsWrapper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B700);
  }
  return result;
}

uint64_t sub_190918820(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  BOOL v5;
  char v6;
  char v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = (v2 | v3) == 0;
  if (v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
    sub_190918A84();
    sub_190A47C08();
    sub_190A47C08();
    if (v12 == v10 && v13 == v11)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v6 = sub_190A486DC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v6 & 1) == 0)
        goto LABEL_11;
    }
    if ((sub_190917DA8(*(_QWORD **)(v2 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations), *(_QWORD **)(v3 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_availableLocalizations)) & 1) != 0)
    {
      v7 = *(_BYTE *)(v2 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations);
      v8 = *(_BYTE *)(v3 + OBJC_IVAR____TtC9WidgetKit19WidgetLocalizations_supportsMixedLocalizations);
      swift_release();
      swift_release();
      v4 = v7 ^ v8 ^ 1;
      return v4 & 1;
    }
LABEL_11:
    swift_release();
    swift_release();
    v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_19091898C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  if (*(_QWORD *)(a1 + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(qword_1ECF6B760);
      v2 = sub_190A46300();
      v4 = v3;
      if (v2 == sub_190A46300() && v4 == v5)
        v7 = 0;
      else
        v7 = sub_190A486DC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      v7 = 1;
    }
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

unint64_t sub_190918A84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE1E5F10;
  if (!qword_1EE1E5F10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ECF6B760);
    result = MEMORY[0x19401429C](MEMORY[0x1E0D0F988], v1);
    atomic_store(result, (unint64_t *)&qword_1EE1E5F10);
  }
  return result;
}

uint64_t sub_190918AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ControlTemplatePicker.Option(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_190918B14(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ControlTemplatePicker.Option(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for OptionalLocalizationsWrapper.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_190918B90 + 4 * byte_190A4D360[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_190918BB0 + 4 * byte_190A4D365[v4]))();
}

_BYTE *sub_190918B90(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_190918BB0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190918BB8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190918BC0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_190918BC8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_190918BD0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OptionalLocalizationsWrapper.CodingKeys()
{
  return &type metadata for OptionalLocalizationsWrapper.CodingKeys;
}

unint64_t sub_190918BF0()
{
  unint64_t result;

  result = qword_1EE1ED130;
  if (!qword_1EE1ED130)
  {
    result = MEMORY[0x19401429C](&unk_190A4D5C4, &type metadata for OptionalLocalizationsWrapper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ED130);
  }
  return result;
}

unint64_t sub_190918C38()
{
  unint64_t result;

  result = qword_1ECF6B710;
  if (!qword_1ECF6B710)
  {
    result = MEMORY[0x19401429C](&unk_190A4D534, &type metadata for OptionalLocalizationsWrapper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B710);
  }
  return result;
}

unint64_t sub_190918C80()
{
  unint64_t result;

  result = qword_1ECF6B708;
  if (!qword_1ECF6B708)
  {
    result = MEMORY[0x19401429C](&unk_190A4D55C, &type metadata for OptionalLocalizationsWrapper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6B708);
  }
  return result;
}

uint64_t *sub_190918CC4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  void (*v42)(char *, char *);
  char *__dst;
  uint64_t v44;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_190A46084();
    v11 = *(_QWORD *)(v10 - 8);
    v44 = v10;
    v42 = *(void (**)(char *, char *))(v11 + 16);
    v42(v8, v9);
    v12 = a3[6];
    v13 = (char *)v4 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_190A45FC4();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v19 = type metadata accessor for BundleStub();
    v20 = *(int *)(v19 + 20);
    v21 = *(void **)&v14[v20];
    *(_QWORD *)&v13[v20] = v21;
    v22 = *(int *)(v19 + 24);
    v23 = &v13[v22];
    v24 = &v14[v22];
    v25 = *((_QWORD *)v24 + 1);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v25;
    v26 = a3[7];
    v27 = a3[8];
    v28 = (uint64_t *)((char *)v4 + v26);
    v29 = (uint64_t *)((char *)a2 + v26);
    v30 = (void *)v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = *(void **)((char *)a2 + v27);
    *(uint64_t *)((char *)v4 + v27) = (uint64_t)v31;
    v32 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)v4 + v32) = *(uint64_t *)((char *)a2 + v32);
    v33 = a3[11];
    __dst = (char *)v4 + v33;
    v34 = (char *)a2 + v33;
    v35 = v11;
    v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    v37 = v21;
    swift_bridgeObjectRetain();
    swift_retain();
    v38 = v30;
    v39 = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v36(v34, 1, v44))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
      memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v42)(__dst, v34, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v44);
    }
  }
  return v4;
}

uint64_t sub_190918F04(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  void (*v13)(uint64_t, uint64_t);

  v4 = a1 + a2[5];
  v5 = sub_190A46084();
  v6 = *(_QWORD *)(v5 - 8);
  v13 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v13(v4, v5);
  v7 = a1 + a2[6];
  v8 = sub_190A45FC4();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);

  swift_bridgeObjectRelease();
  v10 = a1 + a2[7];
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = a1 + a2[11];
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v13)(v11, v5);
  return result;
}

_QWORD *sub_19091905C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void (*v40)(char *, char *);
  char *__dst;
  uint64_t v42;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_190A46084();
  v10 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  v40 = *(void (**)(char *, char *))(v10 + 16);
  v40(v7, v8);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_190A45FC4();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = type metadata accessor for BundleStub();
  v18 = *(int *)(v17 + 20);
  v19 = *(void **)&v13[v18];
  *(_QWORD *)&v12[v18] = v19;
  v20 = *(int *)(v17 + 24);
  v21 = &v12[v20];
  v22 = &v13[v20];
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = v23;
  v24 = a3[7];
  v25 = a3[8];
  v26 = (_QWORD *)((char *)a1 + v24);
  v27 = (_QWORD *)((char *)a2 + v24);
  v28 = (void *)v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = *(void **)((char *)a2 + v25);
  *(_QWORD *)((char *)a1 + v25) = v29;
  v30 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + v30) = *(_QWORD *)((char *)a2 + v30);
  v31 = a3[11];
  __dst = (char *)a1 + v31;
  v32 = (char *)a2 + v31;
  v33 = v10;
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v35 = v19;
  swift_bridgeObjectRetain();
  swift_retain();
  v36 = v28;
  v37 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v34(v32, 1, v42))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
    memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v40)(__dst, v32, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v42);
  }
  return a1;
}

char *sub_190919270(char *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  uint64_t v42;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;

  *(_DWORD *)a1 = *a2;
  *((_DWORD *)a1 + 1) = a2[1];
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_190A46084();
  v45 = *(_QWORD *)(v9 - 8);
  v44 = *(void (**)(char *, char *, uint64_t))(v45 + 24);
  v44(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = (char *)a2 + v10;
  v13 = sub_190A45FC4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  v19 = type metadata accessor for BundleStub();
  v20 = *(int *)(v19 + 20);
  v21 = *(void **)&v12[v20];
  v22 = *(void **)&v11[v20];
  *(_QWORD *)&v11[v20] = v21;
  v23 = v21;

  v24 = *(int *)(v19 + 24);
  v25 = &v11[v24];
  v26 = &v12[v24];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = a3[7];
  v28 = &a1[v27];
  v29 = (char *)a2 + v27;
  *(_QWORD *)&a1[v27] = *(_QWORD *)((char *)a2 + v27);
  swift_retain();
  swift_release();
  v30 = (void *)*((_QWORD *)v29 + 1);
  v31 = (void *)*((_QWORD *)v28 + 1);
  *((_QWORD *)v28 + 1) = v30;
  v32 = v30;

  v33 = a3[8];
  v34 = *(void **)((char *)a2 + v33);
  v35 = *(void **)&a1[v33];
  *(_QWORD *)&a1[v33] = v34;
  v36 = v34;

  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = a3[11];
  v38 = &a1[v37];
  v39 = (char *)a2 + v37;
  v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  LODWORD(v35) = v40(&a1[v37], 1, v9);
  v41 = v40(v39, 1, v9);
  if (!(_DWORD)v35)
  {
    if (!v41)
    {
      v44(v38, v39, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v38, v9);
    goto LABEL_12;
  }
  if (v41)
  {
LABEL_12:
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v38, v39, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v38, 0, 1, v9);
  return a1;
}

_QWORD *sub_190919564(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_190A46084();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_190A45FC4();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = type metadata accessor for BundleStub();
  *(_QWORD *)&v13[*(int *)(v18 + 20)] = *(_QWORD *)&v14[*(int *)(v18 + 20)];
  *(_OWORD *)&v13[*(int *)(v18 + 24)] = *(_OWORD *)&v14[*(int *)(v18 + 24)];
  v19 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v19) = *(_QWORD *)((char *)a2 + v19);
  v20 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + v20) = *(_QWORD *)((char *)a2 + v20);
  v21 = a3[11];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v23, 1, v9))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v11(v22, v23, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
  }
  return a1;
}

char *sub_190919720(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  uint64_t v38;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;

  *(_QWORD *)a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_190A46084();
  v41 = *(_QWORD *)(v9 - 8);
  v40 = *(void (**)(char *, char *, uint64_t))(v41 + 40);
  v40(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = (char *)a2 + v10;
  v13 = sub_190A45FC4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  v19 = type metadata accessor for BundleStub();
  v20 = *(int *)(v19 + 20);
  v21 = *(void **)&v11[v20];
  *(_QWORD *)&v11[v20] = *(_QWORD *)&v12[v20];

  v22 = *(int *)(v19 + 24);
  v23 = &v11[v22];
  v24 = &v12[v22];
  v26 = *(_QWORD *)v24;
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = v26;
  *((_QWORD *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  v27 = a3[7];
  v28 = &a1[v27];
  v29 = (char *)a2 + v27;
  *(_QWORD *)&a1[v27] = *(_QWORD *)((char *)a2 + v27);
  swift_release();
  v30 = (void *)*((_QWORD *)v28 + 1);
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);

  v31 = a3[8];
  v32 = *(void **)&a1[v31];
  *(_QWORD *)&a1[v31] = *(_QWORD *)((char *)a2 + v31);

  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  v33 = a3[11];
  v34 = &a1[v33];
  v35 = (char *)a2 + v33;
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  LODWORD(v28) = v36(&a1[v33], 1, v9);
  v37 = v36(v35, 1, v9);
  if (!(_DWORD)v28)
  {
    if (!v37)
    {
      v40(v34, v35, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v41 + 8))(v34, v9);
    goto LABEL_12;
  }
  if (v37)
  {
LABEL_12:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C2F8);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v34, v35, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v34, 0, 1, v9);
  return a1;
}

uint64_t sub_1909199D8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909199E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v6 = sub_190A46084();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = type metadata accessor for BundleStub();
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for TimelineReloadPolicy();
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[11];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[7]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_190919AAC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190919AB8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = sub_190A46084();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
  }
  else
  {
    result = type metadata accessor for BundleStub();
    v9 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = result;
      v11 = a4[6];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
        return result;
      }
      v10 = type metadata accessor for TimelineReloadPolicy();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = a4[11];
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

uint64_t type metadata accessor for WidgetArchivableMetadata(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1ECF6BBE8);
}

void sub_190919B90()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_190A46084();
  if (v0 <= 0x3F)
  {
    type metadata accessor for BundleStub();
    if (v1 <= 0x3F)
    {
      sub_190919C64();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_190919C64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ECF6C620)
  {
    sub_190A46084();
    v0 = sub_190A48148();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ECF6C620);
  }
}

uint64_t sub_190919CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  __int128 v20[2];
  uint64_t v21;
  __int128 v22;
  char v23;
  uint64_t v24;

  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WidgetArchivableMetadata.EntryMetadata(0);
  v12 = a4 + *(int *)(v11 + 20);
  v13 = a4 + *(int *)(v11 + 24);
  *(_OWORD *)v13 = xmmword_190A4A370;
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a3 + 16))(&v22, a2, a3);
  v14 = v23;
  *(_OWORD *)v12 = v22;
  *(_BYTE *)(v12 + 16) = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6ACF0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1908B4BBC(v20, (uint64_t)&v22);
    v15 = __swift_project_boxed_opaque_existential_1(&v22, v24);
    v16 = (_QWORD *)((char *)v15 + *(int *)(type metadata accessor for ViewableTimelineEntry() + 32));
    v17 = *v16;
    v18 = v16[1];
    sub_1908CE0B4(*v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, a2);
    sub_1908CE500(*(_QWORD *)v13, *(_QWORD *)(v13 + 8));
    *(_QWORD *)v13 = v17;
    *(_QWORD *)(v13 + 8) = v18;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  }
  else
  {
    v21 = 0;
    memset(v20, 0, sizeof(v20));
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, a2);
    return sub_1908AA544((uint64_t)v20, &qword_1EE1ED138);
  }
}

uint64_t sub_190919E50(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 *v10;
  char v11;
  uint64_t v13;
  char v14;
  __int128 v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BAD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19091CE20();
  sub_190A48850();
  LOBYTE(v15) = 0;
  sub_190A46084();
  sub_1908AA2F4((unint64_t *)&unk_1ECF6C610, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_190A48640();
  if (!v2)
  {
    v9 = type metadata accessor for WidgetArchivableMetadata.EntryMetadata(0);
    v10 = (__int128 *)(v3 + *(int *)(v9 + 20));
    v11 = *((_BYTE *)v10 + 16);
    v15 = *v10;
    v16 = v11;
    v14 = 1;
    sub_19091CEA8();
    sub_190A485EC();
    v15 = *(_OWORD *)(v3 + *(int *)(v9 + 24));
    v14 = 2;
    sub_19091C084();
    sub_190A485EC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_19091A00C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  __int128 v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  __int128 v30;
  char v31;
  char v32;

  v23 = a2;
  v3 = sub_190A46084();
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF68170);
  v5 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for WidgetArchivableMetadata.EntryMetadata(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v11[*(int *)(v9 + 20)];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v28 = &v11[*(int *)(v9 + 24)];
  *(_OWORD *)v28 = xmmword_190A4A370;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19091CE20();
  v27 = v7;
  v13 = (uint64_t)v29;
  sub_190A48838();
  if (v13)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1908CE500(*(_QWORD *)v28, *((_QWORD *)v28 + 1));
  }
  else
  {
    v29 = v11;
    v14 = v24;
    LOBYTE(v30) = 0;
    sub_1908AA2F4((unint64_t *)&unk_1ECF69DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v15 = v25;
    sub_190A48580();
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v29, v26, v3);
    v32 = 1;
    sub_19091CE64();
    sub_190A4852C();
    v16 = v31;
    *(_OWORD *)v12 = v30;
    v12[16] = v16;
    v32 = 2;
    sub_19091BF34();
    sub_190A4852C();
    v17 = (uint64_t)a1;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v27, v15);
    v18 = v30;
    v19 = v28;
    sub_1908CE500(*(_QWORD *)v28, *((_QWORD *)v28 + 1));
    *(_OWORD *)v19 = v18;
    v20 = (uint64_t)v29;
    sub_1908AF5D8((uint64_t)v29, v23, type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
    __swift_destroy_boxed_opaque_existential_1(v17);
    return sub_1908B5150(v20, type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
  }
}

uint64_t sub_19091A344(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19091A380 + 4 * byte_190A4D640[a1]))(0x6E6F697461657263, 0xEC00000065746144);
}

uint64_t sub_19091A380()
{
  return 0x6D6E6F7269766E65;
}

uint64_t sub_19091A3A0()
{
  return 0x746567646977;
}

uint64_t sub_19091A3B4()
{
  return 0x74654D7972746E65;
}

uint64_t sub_19091A3D8()
{
  return 0x6174654D77656976;
}

uint64_t sub_19091A3F8()
{
  return 0x6F5064616F6C6572;
}

uint64_t sub_19091A418()
{
  return 0x5665766968637261;
}

uint64_t sub_19091A43C()
{
  return 0x6F69736E65747865;
}

uint64_t sub_19091A460()
{
  return 0x65566D6574737973;
}

uint64_t sub_19091A484()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x636E6176656C6572;
  if (*v0 != 1)
    v1 = 0x7461447972746E65;
  if (*v0)
    return v1;
  else
    return 1702125924;
}

uint64_t sub_19091A4E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19091C834(a1, a2);
  *a3 = result;
  return result;
}

void sub_19091A508(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_19091A514()
{
  sub_19091CE20();
  return sub_190A48868();
}

uint64_t sub_19091A53C()
{
  sub_19091CE20();
  return sub_190A48874();
}

uint64_t sub_19091A564@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_190A46084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

__n128 sub_19091A59C@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v2;
  __n128 *v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = (__n128 *)(v2 + *(int *)(a1 + 20));
  v4 = v3[1].n128_u8[0];
  result = *v3;
  *a2 = *v3;
  a2[1].n128_u8[0] = v4;
  return result;
}

uint64_t sub_19091A5B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19091A00C(a1, a2);
}

uint64_t sub_19091A5CC(_QWORD *a1)
{
  return sub_190919E50(a1);
}

uint64_t sub_19091A5E0()
{
  unsigned __int8 *v0;

  return sub_19091A344(*v0);
}

uint64_t sub_19091A5E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19091C98C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19091A60C()
{
  sub_19091BD8C();
  return sub_190A48868();
}

uint64_t sub_19091A634()
{
  sub_19091BD8C();
  return sub_190A48874();
}

uint64_t sub_19091A65C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char v19;
  unsigned int v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v30;
  uint64_t (*v31)();
  uint64_t (*v32)();
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  int **v41;
  int **v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t *v59;
  unint64_t v60;
  unint64_t *v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t *v68;
  uint64_t v69;
  unint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t *v76;
  uint64_t *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t (*v101)();
  unint64_t v102;
  uint64_t (*v103)();
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  char v109;

  v85 = a2;
  v91 = sub_190A48310();
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v89 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for TimelineReloadPolicy();
  MEMORY[0x1E0C80A78](v86);
  v87 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_190A46084();
  v96 = *(_QWORD *)(v5 - 8);
  v97 = v5;
  MEMORY[0x1E0C80A78](v5);
  v88 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for BundleStub();
  MEMORY[0x1E0C80A78](v93);
  v92 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_190A48400();
  v9 = *(_QWORD *)(v8 - 8);
  v94 = v8;
  v95 = v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF68178);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for WidgetArchivableMetadata(0);
  MEMORY[0x1E0C80A78](v100);
  v99 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v17 = sub_19091BD8C();
  v18 = v98;
  sub_190A48838();
  if (v18)
  {
    v19 = 0;
    v20 = 0;
    v21 = v99;
    v22 = (int *)v100;
    goto LABEL_15;
  }
  v82 = v11;
  v23 = v94;
  v81 = v17;
  v83 = v13;
  v98 = v15;
  v84 = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v24 = sub_190A4882C();
  if (qword_1ECF680D0 != -1)
    swift_once();
  v25 = __swift_project_value_buffer(v23, (uint64_t)qword_1ECF6D3E0);
  v26 = v95;
  v27 = (uint64_t)v82;
  (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v82, v25, v23);
  if (*(_QWORD *)(v24 + 16) && (v28 = sub_1908D3854(v27), (v29 & 1) != 0))
  {
    sub_1908B3694(*(_QWORD *)(v24 + 56) + 32 * v28, (uint64_t)&v107);
  }
  else
  {
    v107 = 0u;
    v108 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v23);
  if (!*((_QWORD *)&v108 + 1))
  {
    sub_1908AA544((uint64_t)&v107, (uint64_t *)&unk_1ECF6C8A0);
    v22 = (int *)v100;
    goto LABEL_13;
  }
  v30 = swift_dynamicCast();
  v22 = (int *)v100;
  if (!v30)
  {
LABEL_13:
    swift_beginAccess();
    v31 = off_1EE1E7798;
    v32 = off_1EE1E77A8;
    v33 = unk_1EE1E77B0;
    v95 = unk_1EE1E77A0;
    swift_retain();
    v94 = v33;
    swift_retain();
    goto LABEL_14;
  }
  v31 = v101;
  v32 = v103;
  v94 = v104;
  v95 = v102;
LABEL_14:
  LOBYTE(v101) = 6;
  v34 = sub_190A48568();
  v36 = v34;
  if (v34 < 1)
  {
    v101 = 0;
    v102 = 0xE000000000000000;
    sub_190A48298();
    sub_190A47B3C();
    *(_QWORD *)&v106 = v36;
    sub_190A4867C();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    *(_QWORD *)&v106 = 1;
    sub_190A4867C();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    v39 = v89;
    sub_190A48304();
    v40 = sub_190A4831C();
    swift_allocError();
    v42 = v41;
    v43 = (char *)v41 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90) + 48);
    *v42 = v22;
    v44 = v90;
    v45 = v91;
    (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v43, v39, v91);
    (*(void (**)(int **, _QWORD, uint64_t))(*(_QWORD *)(v40 - 8) + 104))(v42, *MEMORY[0x1E0DEC450], v40);
    swift_willThrow();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v39, v45);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v98, v84);
    v19 = 0;
    v20 = 0;
    v21 = v99;
    goto LABEL_15;
  }
  LOBYTE(v101) = 7;
  sub_1908AA2F4(&qword_1ECF69DA8, (uint64_t (*)(uint64_t))type metadata accessor for BundleStub, (uint64_t)&protocol conformance descriptor for BundleStub);
  v37 = (uint64_t)v92;
  sub_190A48580();
  v21 = v99;
  v38 = (uint64_t)&v99[v22[6]];
  sub_1908BD0B4(v37, v38, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  LOBYTE(v106) = 8;
  sub_19091BDD0();
  sub_190A48580();
  v92 = 0;
  v46 = v101;
  v47 = HIDWORD(v101);
  *(_DWORD *)v21 = (_DWORD)v101;
  *((_DWORD *)v21 + 1) = v47;
  v48 = *(_QWORD *)(v38 + *(int *)(v93 + 20)) + *MEMORY[0x1E0D0FE10];
  swift_beginAccess();
  if (!*(_QWORD *)(v48 + 8)
    && (*(_QWORD *)&v106 = __PAIR64__(v47, v46), v49 = ((uint64_t (*)(__int128 *))v31)(&v106), (v50 & 1) != 0))
  {
    v60 = v49 | 0x8000000000000000;
    *(_QWORD *)&v106 = v49 | 0x8000000000000000;
    sub_19091BE14();
    swift_willThrowTypedImpl();
    swift_allocError();
    *v61 = v60;
    swift_release();
  }
  else
  {
    v51 = ((uint64_t (*)(uint64_t))v32)(v38);
    if ((v52 & 1) == 0)
    {
      LOBYTE(v106) = 0;
      sub_1908AA2F4((unint64_t *)&unk_1ECF69DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
      v53 = v88;
      v54 = v97;
      v55 = v98;
      v56 = v84;
      v57 = v92;
      sub_190A48580();
      if (!v57)
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 32))(&v21[v22[5]], v53, v54);
        v109 = 1;
        sub_19091BE58();
        sub_190A48580();
        v106 = v105;
        WidgetEnvironment.filterForArchiving()();
        *(_OWORD *)&v21[v22[7]] = v106;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC50);
        LOBYTE(v105) = 3;
        sub_19091C000(&qword_1ECF68160, &qword_1ECF68140, (uint64_t)&unk_190A4D850, MEMORY[0x1E0DEAF40]);
        sub_190A48580();
        *(_QWORD *)&v21[v22[9]] = v106;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6AE30);
        LOBYTE(v105) = 4;
        sub_19091BEB0(&qword_1ECF68158, &qword_1ECF68138, (uint64_t)&protocol conformance descriptor for WidgetViewMetadata, MEMORY[0x1E0DEAF40]);
        sub_190A48580();
        *(_QWORD *)&v21[v22[10]] = v106;
        LOBYTE(v106) = 5;
        sub_1908AA2F4(&qword_1ECF680A8, (uint64_t (*)(uint64_t))type metadata accessor for TimelineReloadPolicy, (uint64_t)&protocol conformance descriptor for TimelineReloadPolicy);
        v62 = (uint64_t)v87;
        sub_190A48580();
        sub_1908BD0B4(v62, (uint64_t)&v21[v22[11]], (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
        LOBYTE(v105) = 2;
        sub_19091BF34();
        sub_190A48580();
        v63 = v106;
        sub_1908AB890(0, (unint64_t *)&unk_1ECF6A620);
        v64 = sub_1908AB890(0, (unint64_t *)&qword_1ECF6BF60);
        v93 = v63;
        v65 = sub_190A47FB0();
        v72 = v65;
        if (v65)
        {
          (*(void (**)(char *, uint64_t))(v83 + 8))(v98, v84);
          sub_1908B53FC(v93, *((unint64_t *)&v63 + 1));
          swift_release();
          swift_release();
          v73 = (uint64_t)v99;
          *(_QWORD *)&v99[*(int *)(v100 + 32)] = v72;
          sub_1908AF5D8(v73, v85, type metadata accessor for WidgetArchivableMetadata);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
          return sub_1908B5150(v73, type metadata accessor for WidgetArchivableMetadata);
        }
        v74 = sub_190A4831C();
        v75 = (void *)swift_allocError();
        v77 = v76;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90);
        *v77 = v64;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE40);
        v78 = swift_allocObject();
        *(_OWORD *)(v78 + 16) = xmmword_190A4A350;
        v79 = v81;
        *(_QWORD *)(v78 + 56) = &type metadata for WidgetArchivableMetadata.CodingKeys;
        *(_QWORD *)(v78 + 64) = v79;
        *(_BYTE *)(v78 + 32) = 2;
        sub_190A48304();
        v80 = *MEMORY[0x1E0DEC460];
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 104))(v77, v80, v74);
        swift_willThrow();
        v66 = sub_190A4831C();
        swift_allocError();
        v68 = v67;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1ECC90);
        *v68 = v64;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE40);
        v69 = swift_allocObject();
        *(_OWORD *)(v69 + 16) = xmmword_190A4A350;
        v70 = v81;
        *(_QWORD *)(v69 + 56) = &type metadata for WidgetArchivableMetadata.CodingKeys;
        *(_QWORD *)(v69 + 64) = v70;
        *(_BYTE *)(v69 + 32) = 2;
        v71 = v75;
        sub_190A48304();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 104))(v68, v80, v66);
        swift_willThrow();
        sub_1908B53FC(v93, *((unint64_t *)&v63 + 1));
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v83 + 8))(v98, v84);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
        v21 = v99;
        v22 = (int *)v100;
        (*(void (**)(char *, uint64_t))(v96 + 8))(&v99[*(int *)(v100 + 20)], v97);
        sub_1908B5150((uint64_t)&v21[v22[6]], (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
        v19 = 1;

        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v83 + 8))(v55, v56);
      swift_release();
      swift_release();
      goto LABEL_31;
    }
    v58 = v51;
    *(_QWORD *)&v106 = v51;
    sub_19091BE14();
    swift_willThrowTypedImpl();
    swift_allocError();
    *v59 = v58;
    swift_release();
  }
  swift_release();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v98, v84);
LABEL_31:
  v19 = 0;
  v20 = 4;
LABEL_15:
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  if ((v20 & 4) != 0)
    result = sub_1908B5150((uint64_t)&v21[v22[6]], (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  if (((v20 >> 6) & 1) != 0)
  {
LABEL_18:
    result = swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      return sub_1908B5150((uint64_t)&v21[v22[11]], (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  }
  return result;
}

uint64_t sub_19091B60C@<X0>(void *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int *v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t result;
  _QWORD v42[2];
  int *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v47 = a6;
  v48 = a8;
  v16 = type metadata accessor for WidgetArchivableMetadata.EntryMetadata(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a7;
  v21 = (int *)type metadata accessor for WidgetArchivableMetadata(0);
  *(_QWORD *)((char *)a9 + v21[8]) = a1;
  v49 = *a2;
  v22 = a1;
  v23 = a4;
  v24 = v22;
  WidgetEnvironment.filterForArchiving()();
  *(_OWORD *)((char *)a9 + v21[7]) = v49;
  v25 = (uint64_t)a9 + v21[6];
  v46 = a3;
  sub_1908AF5D8(a3, v25, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  v26 = *(_QWORD *)(v23 + 16);
  if (v26)
  {
    v43 = v21;
    v44 = a5;
    v45 = a9;
    v52 = MEMORY[0x1E0DEE9D8];
    sub_1908B8D8C(0, v26, 0);
    v42[1] = v23;
    v27 = v23 + 32;
    v28 = v52;
    do
    {
      sub_1908BBDC8(v27, (uint64_t)&v49);
      v30 = v50;
      v29 = v51;
      v31 = __swift_project_boxed_opaque_existential_1(&v49, v50);
      MEMORY[0x1E0C80A78](v31);
      v33 = (char *)v42 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v34 + 16))(v33);
      sub_190919CB8((uint64_t)v33, v30, v29, (uint64_t)v19);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1908B8D8C(0, *(_QWORD *)(v28 + 16) + 1, 1);
        v28 = v52;
      }
      v36 = *(_QWORD *)(v28 + 16);
      v35 = *(_QWORD *)(v28 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_1908B8D8C(v35 > 1, v36 + 1, 1);
        v28 = v52;
      }
      *(_QWORD *)(v28 + 16) = v36 + 1;
      sub_1908BD0B4((uint64_t)v19, v28+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v36, type metadata accessor for WidgetArchivableMetadata.EntryMetadata);
      v27 += 40;
      --v26;
    }
    while (v26);

    v38 = v47;
    v37 = v48;
    a5 = v44;
    a9 = v45;
    v21 = v43;
  }
  else
  {

    v28 = MEMORY[0x1E0DEE9D8];
    v38 = v47;
    v37 = v48;
  }
  sub_1908B5150(v46, (uint64_t (*)(_QWORD))type metadata accessor for BundleStub);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a9 + v21[9]) = v28;
  sub_1908BD0B4(a5, (uint64_t)a9 + v21[11], (uint64_t (*)(_QWORD))type metadata accessor for TimelineReloadPolicy);
  v39 = (char *)a9 + v21[5];
  v40 = sub_190A46084();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v39, v38, v40);
  *a9 = v20;
  *(_QWORD *)((char *)a9 + v21[10]) = v37;
  return result;
}

uint64_t sub_19091B8EC(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  uint64_t v22;

  v3 = v1;
  v22 = *MEMORY[0x1E0C80C00];
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6BAE0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19091BD8C();
  sub_190A48850();
  LOBYTE(v21) = 6;
  sub_190A48628();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)&v21 = *v3;
  v20 = 8;
  sub_19091BF78();
  sub_190A48640();
  v9 = (int *)type metadata accessor for WidgetArchivableMetadata(0);
  LOBYTE(v21) = 7;
  type metadata accessor for BundleStub();
  sub_1908AA2F4(&qword_1ECF6C638, (uint64_t (*)(uint64_t))type metadata accessor for BundleStub, (uint64_t)&protocol conformance descriptor for BundleStub);
  sub_190A48640();
  v21 = *(_OWORD *)((char *)v3 + v9[7]);
  v20 = 1;
  sub_19091BFBC();
  sub_190A48640();
  *(_QWORD *)&v21 = *(_QWORD *)((char *)v3 + v9[9]);
  v20 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6BC50);
  sub_19091C000(&qword_1ECF6BAD0, &qword_1ECF6BAB8, (uint64_t)&unk_190A4D828, MEMORY[0x1E0DEAF10]);
  sub_190A48640();
  *(_QWORD *)&v21 = *(_QWORD *)((char *)v3 + v9[10]);
  v20 = 4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6AE30);
  sub_19091BEB0(&qword_1ECF6AD30, &qword_1ECF6AC88, (uint64_t)&protocol conformance descriptor for WidgetViewMetadata, MEMORY[0x1E0DEAF10]);
  sub_190A48640();
  LOBYTE(v21) = 5;
  type metadata accessor for TimelineReloadPolicy();
  sub_1908AA2F4((unint64_t *)&unk_1ECF6C448, (uint64_t (*)(uint64_t))type metadata accessor for TimelineReloadPolicy, (uint64_t)&protocol conformance descriptor for TimelineReloadPolicy);
  sub_190A48640();
  LOBYTE(v21) = 0;
  sub_190A46084();
  sub_1908AA2F4((unint64_t *)&unk_1ECF6C610, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_190A48640();
  v11 = (void *)objc_opt_self();
  v12 = *(_QWORD *)((char *)v3 + v9[8]);
  *(_QWORD *)&v21 = 0;
  v13 = objc_msgSend(v11, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v12, 1, &v21);
  v14 = (id)v21;
  if (!v13)
  {
    v18 = v14;
    sub_190A45F58();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v15 = sub_190A46000();
  v17 = v16;

  *(_QWORD *)&v21 = v15;
  *((_QWORD *)&v21 + 1) = v17;
  v20 = 2;
  sub_19091C084();
  sub_190A48640();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_1908B53FC(v15, v17);
}

uint64_t sub_19091BD64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19091A65C(a1, a2);
}

uint64_t sub_19091BD78(_QWORD *a1)
{
  return sub_19091B8EC(a1);
}

unint64_t sub_19091BD8C()
{
  unint64_t result;

  result = qword_1ECF6BC38;
  if (!qword_1ECF6BC38)
  {
    result = MEMORY[0x19401429C](&unk_190A4D878, &type metadata for WidgetArchivableMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6BC38);
  }
  return result;
}

unint64_t sub_19091BDD0()
{
  unint64_t result;

  result = qword_1ECF69DB0;
  if (!qword_1ECF69DB0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for SystemVersion, &type metadata for SystemVersion);
    atomic_store(result, (unint64_t *)&qword_1ECF69DB0);
  }
  return result;
}

unint64_t sub_19091BE14()
{
  unint64_t result;

  result = qword_1EE1EA810;
  if (!qword_1EE1EA810)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetArchiver.ValidationError, &type metadata for WidgetArchiver.ValidationError);
    atomic_store(result, (unint64_t *)&qword_1EE1EA810);
  }
  return result;
}

unint64_t sub_19091BE58()
{
  unint64_t result;

  result = qword_1ECF69DD0;
  if (!qword_1ECF69DD0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetEnvironment, &type metadata for WidgetEnvironment);
    atomic_store(result, (unint64_t *)&qword_1ECF69DD0);
  }
  return result;
}

uint64_t type metadata accessor for WidgetArchivableMetadata.EntryMetadata(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1ECF6BC28);
}

uint64_t sub_19091BEB0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ECF6AE30);
    v10 = sub_1908AA2F4(a2, (uint64_t (*)(uint64_t))type metadata accessor for WidgetViewMetadata, a3);
    result = MEMORY[0x19401429C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19091BF34()
{
  unint64_t result;

  result = qword_1ECF6C940;
  if (!qword_1ECF6C940)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ECF6C940);
  }
  return result;
}

unint64_t sub_19091BF78()
{
  unint64_t result;

  result = qword_1ECF6C640;
  if (!qword_1ECF6C640)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for SystemVersion, &type metadata for SystemVersion);
    atomic_store(result, (unint64_t *)&qword_1ECF6C640);
  }
  return result;
}

unint64_t sub_19091BFBC()
{
  unint64_t result;

  result = qword_1ECF6C760;
  if (!qword_1ECF6C760)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for WidgetEnvironment, &type metadata for WidgetEnvironment);
    atomic_store(result, (unint64_t *)&qword_1ECF6C760);
  }
  return result;
}

uint64_t sub_19091C000(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECF6BC50);
    v10 = sub_1908AA2F4(a2, type metadata accessor for WidgetArchivableMetadata.EntryMetadata, a3);
    result = MEMORY[0x19401429C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19091C084()
{
  unint64_t result;

  result = qword_1ECF6C790;
  if (!qword_1ECF6C790)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ECF6C790);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WidgetArchivableMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_19091C114 + 4 * byte_190A4D64E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_19091C148 + 4 * byte_190A4D649[v4]))();
}

uint64_t sub_19091C148(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19091C150(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19091C158);
  return result;
}

uint64_t sub_19091C164(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19091C16CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_19091C170(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19091C178(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetArchivableMetadata.CodingKeys()
{
  return &type metadata for WidgetArchivableMetadata.CodingKeys;
}

uint64_t *sub_19091C194(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_190A46084();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_OWORD *)v10 = *(_OWORD *)v11;
    v10[16] = v11[16];
    v12 = (char *)a1 + v9;
    v13 = (uint64_t *)((char *)a2 + v9);
    v14 = *(uint64_t *)((char *)a2 + v9 + 8);
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
    }
    else
    {
      v16 = *v13;
      sub_1908B53B8(*v13, v14);
      *(_QWORD *)v12 = v16;
      *((_QWORD *)v12 + 1) = v14;
    }
  }
  return a1;
}

uint64_t sub_19091C264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t *v6;
  unint64_t v7;

  v4 = sub_190A46084();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v6 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  v7 = v6[1];
  if (v7 >> 60 != 15)
    return sub_1908B53FC(*v6, v7);
  return result;
}

uint64_t sub_19091C2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;

  v6 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v11 = a1 + v8;
  v12 = (uint64_t *)(a2 + v8);
  v13 = *(_QWORD *)(a2 + v8 + 8);
  if (v13 >> 60 == 15)
  {
    *(_OWORD *)v11 = *(_OWORD *)v12;
  }
  else
  {
    v14 = *v12;
    sub_1908B53B8(*v12, v13);
    *(_QWORD *)v11 = v14;
    *(_QWORD *)(v11 + 8) = v13;
  }
  return a1;
}

uint64_t sub_19091C36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v6 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 16) = *((_BYTE *)v9 + 16);
  *(_OWORD *)v8 = v10;
  v11 = *(int *)(a3 + 24);
  v12 = (uint64_t *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 8);
  if (*(_QWORD *)(a1 + v11 + 8) >> 60 != 15)
  {
    if (v14 >> 60 != 15)
    {
      v16 = *v13;
      sub_1908B53B8(v16, v14);
      v17 = *v12;
      v18 = v12[1];
      *v12 = v16;
      v12[1] = v14;
      sub_1908B53FC(v17, v18);
      return a1;
    }
    sub_19091C458((uint64_t)v12);
    goto LABEL_6;
  }
  if (v14 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)v12 = *(_OWORD *)v13;
    return a1;
  }
  v15 = *v13;
  sub_1908B53B8(v15, v14);
  *v12 = v15;
  v12[1] = v14;
  return a1;
}

uint64_t sub_19091C458(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

uint64_t sub_19091C48C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_19091C500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v6 = sub_190A46084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v11 = (uint64_t *)(a1 + v8);
  v12 = (uint64_t *)(a2 + v8);
  v13 = *(_QWORD *)(a1 + v8 + 8);
  if (v13 >> 60 != 15)
  {
    v14 = v12[1];
    if (v14 >> 60 != 15)
    {
      v15 = *v11;
      *v11 = *v12;
      v11[1] = v14;
      sub_1908B53FC(v15, v13);
      return a1;
    }
    sub_19091C458((uint64_t)v11);
  }
  *(_OWORD *)v11 = *(_OWORD *)v12;
  return a1;
}

uint64_t sub_19091C5B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_19091C5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  BOOL v10;
  unsigned int v11;

  v6 = sub_190A46084();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8) >> 60;
  v10 = ((4 * (_DWORD)v9) & 0xC) == 0;
  v11 = ((4 * v9) & 0xC | (v9 >> 2)) ^ 0xF;
  if (v10)
    return 0;
  else
    return v11;
}

uint64_t sub_19091C64C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19091C658(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  result = sub_190A46084();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (_QWORD *)(a1 + *(int *)(a4 + 24));
  *v10 = 0;
  v10[1] = (unint64_t)((~(_DWORD)a2 >> 2) & 3 | (4 * ~(_DWORD)a2)) << 60;
  return result;
}

uint64_t sub_19091C6E0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_190A46084();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_19091C760()
{
  unint64_t result;

  result = qword_1EE1ED140;
  if (!qword_1EE1ED140)
  {
    result = MEMORY[0x19401429C](&unk_190A4D7F0, &type metadata for WidgetArchivableMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ED140);
  }
  return result;
}

unint64_t sub_19091C7A8()
{
  unint64_t result;

  result = qword_1ECF6BC48;
  if (!qword_1ECF6BC48)
  {
    result = MEMORY[0x19401429C](&unk_190A4D760, &type metadata for WidgetArchivableMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6BC48);
  }
  return result;
}

unint64_t sub_19091C7F0()
{
  unint64_t result;

  result = qword_1ECF6BC40;
  if (!qword_1ECF6BC40)
  {
    result = MEMORY[0x19401429C](&unk_190A4D788, &type metadata for WidgetArchivableMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6BC40);
  }
  return result;
}

uint64_t sub_19091C834(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636E6176656C6572 && a2 == 0xE900000000000065 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461447972746E65 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_19091C98C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144;
  if (v2 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746567646977 && a2 == 0xE600000000000000 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74654D7972746E65 && a2 == 0xED00006174616461 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174654D77656976 && a2 == 0xEC00000061746164 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F5064616F6C6572 && a2 == 0xEC0000007963696CLL || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x5665766968637261 && a2 == 0xEE006E6F69737265 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F69736E65747865 && a2 == 0xEF656C646E75426ELL || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x65566D6574737973 && a2 == 0xED00006E6F697372)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

unint64_t sub_19091CE20()
{
  unint64_t result;

  result = qword_1ECF6BC10;
  if (!qword_1ECF6BC10)
  {
    result = MEMORY[0x19401429C](&unk_190A4D980, &type metadata for WidgetArchivableMetadata.EntryMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6BC10);
  }
  return result;
}

unint64_t sub_19091CE64()
{
  unint64_t result;

  result = qword_1ECF680B0;
  if (!qword_1ECF680B0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for TimelineEntryRelevance, &type metadata for TimelineEntryRelevance);
    atomic_store(result, (unint64_t *)&qword_1ECF680B0);
  }
  return result;
}

unint64_t sub_19091CEA8()
{
  unint64_t result;

  result = qword_1ECF6C460;
  if (!qword_1ECF6C460)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for TimelineEntryRelevance, &type metadata for TimelineEntryRelevance);
    atomic_store(result, (unint64_t *)&qword_1ECF6C460);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WidgetArchivableMetadata.EntryMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_19091CF38 + 4 * byte_190A4D658[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19091CF6C + 4 * byte_190A4D653[v4]))();
}

uint64_t sub_19091CF6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_19091CF74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19091CF7CLL);
  return result;
}

uint64_t sub_19091CF88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19091CF90);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_19091CF94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19091CF9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetArchivableMetadata.EntryMetadata.CodingKeys()
{
  return &type metadata for WidgetArchivableMetadata.EntryMetadata.CodingKeys;
}

unint64_t sub_19091CFBC()
{
  unint64_t result;

  result = qword_1EE1ED148;
  if (!qword_1EE1ED148)
  {
    result = MEMORY[0x19401429C](&unk_190A4D958, &type metadata for WidgetArchivableMetadata.EntryMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ED148);
  }
  return result;
}

unint64_t sub_19091D004()
{
  unint64_t result;

  result = qword_1ECF6BC20;
  if (!qword_1ECF6BC20)
  {
    result = MEMORY[0x19401429C](&unk_190A4D8C8, &type metadata for WidgetArchivableMetadata.EntryMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6BC20);
  }
  return result;
}

unint64_t sub_19091D04C()
{
  unint64_t result;

  result = qword_1ECF6BC18;
  if (!qword_1ECF6BC18)
  {
    result = MEMORY[0x19401429C](&unk_190A4D8F0, &type metadata for WidgetArchivableMetadata.EntryMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECF6BC18);
  }
  return result;
}

uint64_t sub_19091D090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  int v14;
  int v15;
  int v16;
  _BOOL4 v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  _BOOL4 v39;
  int v40;
  _BOOL4 v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);

  v44 = a1;
  v45 = a3;
  v4 = sub_190A46EAC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v34 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v46 = a2;
  v47 = v11;
  v11((char *)&v34 - v9, a2, v4);
  v12 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  v13 = v12(v10, v4);
  v14 = v13;
  v15 = *MEMORY[0x1E0CDB330];
  v16 = *MEMORY[0x1E0CDB368];
  v43 = *MEMORY[0x1E0CDB368];
  v18 = v13 == v15 || v13 == v16;
  v19 = *MEMORY[0x1E0CDB370];
  v41 = v18;
  v42 = v19;
  if (v13 == v19)
    v18 = 1;
  v20 = *MEMORY[0x1E0CDB358];
  v21 = 1;
  v39 = v18;
  v40 = v20;
  if (v18)
  {
    v22 = 1;
    v23 = 1;
    v24 = 1;
    v25 = 1;
    v26 = 1;
    v27 = 1;
    v28 = 1;
  }
  else
  {
    v22 = 1;
    v23 = 1;
    v24 = 1;
    v25 = 1;
    v26 = 1;
    v27 = 1;
    v28 = 1;
    if (v13 == v20)
      goto LABEL_28;
    if (v13 == *MEMORY[0x1E0CDB328])
      goto LABEL_26;
    if (v13 == *MEMORY[0x1E0CDB338])
    {
LABEL_25:
      v27 = 0;
LABEL_26:
      v28 = 0;
      goto LABEL_28;
    }
    if (v13 == *MEMORY[0x1E0CDB300])
    {
LABEL_24:
      v26 = 0;
      goto LABEL_25;
    }
    if (v13 == *MEMORY[0x1E0CDB348])
    {
LABEL_23:
      v25 = 0;
      goto LABEL_24;
    }
    if (v13 == *MEMORY[0x1E0CDB340])
    {
LABEL_22:
      v24 = 0;
      goto LABEL_23;
    }
    if (v13 == *MEMORY[0x1E0CDB350])
    {
LABEL_21:
      v23 = 0;
      goto LABEL_22;
    }
    if (v13 == *MEMORY[0x1E0CDB318])
    {
LABEL_20:
      v22 = 0;
      goto LABEL_21;
    }
    if (v13 == *MEMORY[0x1E0CDB320])
    {
      v21 = 0;
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    v21 = 1;
    v22 = 1;
    v23 = 1;
    v24 = 1;
    v25 = 1;
  }
LABEL_28:
  v34 = v5;
  v37 = v23;
  v38 = v24;
  v29 = v25;
  v35 = v21;
  v36 = v22;
  v30 = v44;
  v47(v8, v44, v4);
  v31 = v12(v8, v4);
  if (v31 != v15)
  {
    if (v31 == v43)
    {
      v32 = v46;
      if (v14 != v15)
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v47)(v45, v32, v4);
    }
    else
    {
      v32 = v46;
      if (v31 == v42)
      {
        if (!v41)
          return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v47)(v45, v32, v4);
      }
      else if (v31 == v40)
      {
        if (!v39)
          return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
      }
      else if (v31 == *MEMORY[0x1E0CDB328])
      {
        if ((v28 & 1) == 0)
          return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
      }
      else if (v31 == *MEMORY[0x1E0CDB338])
      {
        if ((v27 & 1) == 0)
          return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
      }
      else if (v31 == *MEMORY[0x1E0CDB300])
      {
        if ((v26 & 1) == 0)
          return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
      }
      else if (v31 == *MEMORY[0x1E0CDB348])
      {
        if ((v29 & 1) == 0)
          return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
      }
      else if (v31 == *MEMORY[0x1E0CDB340])
      {
        if ((v38 & 1) == 0)
          return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
      }
      else if (v31 == *MEMORY[0x1E0CDB350])
      {
        if ((v37 & 1) == 0)
          return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
      }
      else if (v31 == *MEMORY[0x1E0CDB318])
      {
        if ((v36 & 1) == 0)
          return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
      }
      else if (v31 == *MEMORY[0x1E0CDB320])
      {
        if ((v35 & 1) == 0)
          return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v4);
        if (!v39)
          return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
      }
    }
    v32 = v30;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
  }
  v32 = v46;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
}

__n128 MetricsRequest.width.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = v1[1].n128_u8[0];
  result = *v1;
  *a1 = *v1;
  a1[1].n128_u8[0] = v2;
  return result;
}

__n128 MetricsRequest.width.setter(__n128 *a1)
{
  __n128 *v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = a1[1].n128_u8[0];
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u8[0] = v2;
  return result;
}

uint64_t (*MetricsRequest.width.modify())()
{
  return nullsub_1;
}

__n128 MetricsRequest.height.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = *(_BYTE *)(v1 + 40);
  result = *(__n128 *)(v1 + 24);
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

__n128 MetricsRequest.height.setter(__n128 *a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = a1[1].n128_u8[0];
  result = *a1;
  *(__n128 *)(v1 + 24) = *a1;
  *(_BYTE *)(v1 + 40) = v2;
  return result;
}

uint64_t (*MetricsRequest.height.modify())()
{
  return nullsub_1;
}

double MetricsRequest.cornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

void MetricsRequest.cornerRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 48) = a1;
}

uint64_t (*MetricsRequest.cornerRadius.modify())()
{
  return nullsub_1;
}

__n128 MetricsRequest.edgeInsets.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 88);
  result = *(__n128 *)(v1 + 56);
  v4 = *(_OWORD *)(v1 + 72);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t MetricsRequest.edgeInsets.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_19091D544(a1, v1 + 56);
}

uint64_t sub_19091D544(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1E5F18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t (*MetricsRequest.edgeInsets.modify())()
{
  return nullsub_1;
}

double MetricsRequest.clipMargin.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 96);
}

void MetricsRequest.clipMargin.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 96) = a1;
}

uint64_t (*MetricsRequest.clipMargin.modify())()
{
  return nullsub_1;
}

double MetricsRequest.scaleFactor.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 104);
}

void MetricsRequest.scaleFactor.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 104) = a1;
}

uint64_t (*MetricsRequest.scaleFactor.modify())()
{
  return nullsub_1;
}

uint64_t MetricsRequest.watchDisplayVariant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MetricsRequest(0);
  return sub_1908AAA48(v1 + *(int *)(v3 + 40), a1, qword_1EE1EAFB0);
}

uint64_t type metadata accessor for MetricsRequest(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1ECF6BF28);
}

uint64_t MetricsRequest.watchDisplayVariant.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MetricsRequest(0);
  return sub_1908DCA84(a1, v1 + *(int *)(v3 + 40), qword_1EE1EAFB0);
}

uint64_t (*MetricsRequest.watchDisplayVariant.modify())()
{
  type metadata accessor for MetricsRequest(0);
  return nullsub_1;
}

uint64_t sub_19091D690(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19091D6C0 + 4 * byte_190A4D9D0[a1]))(0x6874646977, 0xE500000000000000);
}

uint64_t sub_19091D6C0()
{
  return 0x746867696568;
}

uint64_t sub_19091D6D4()
{
  return 0x615272656E726F63;
}

uint64_t sub_19091D6F4()
{
  return 0x706F547465736E69;
}

uint64_t sub_19091D70C()
{
  return 0x61654C7465736E69;
}

uint64_t sub_19091D72C()
{
  return 0x746F427465736E69;
}

uint64_t sub_19091D74C()
{
  return 0x6172547465736E69;
}

uint64_t sub_19091D770()
{
  return 0x6772614D70696C63;
}

uint64_t sub_19091D78C()
{
  return 0x636146656C616373;
}

unint64_t sub_19091D7B0()
{
  return 0xD000000000000013;
}

uint64_t sub_19091D7CC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19091D7FC + 4 * byte_190A4D9DA[a1]))(0x6874646977, 0xE500000000000000);
}

uint64_t sub_19091D7FC()
{
  return 0x746867696568;
}

uint64_t sub_19091D810()
{
  return 0x615272656E726F63;
}

uint64_t sub_19091D830()
{
  return 0x706F547465736E69;
}

uint64_t sub_19091D848()
{
  return 0x61654C7465736E69;
}

uint64_t sub_19091D868()
{
  return 0x746F427465736E69;
}

uint64_t sub_19091D888()
{
  return 0x6172547465736E69;
}

uint64_t sub_19091D8AC()
{
  return 0x6772614D70696C63;
}

uint64_t sub_19091D8C8()
{
  return 0x636146656C616373;
}

unint64_t sub_19091D8EC()
{
  return 0xD000000000000013;
}

uint64_t sub_19091D908(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_19091D690(*a1);
  v5 = v4;
  if (v3 == sub_19091D690(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_190A486DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_19091D990()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_190A487C0();
  sub_19091D690(v1);
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_19091D9F0()
{
  unsigned __int8 *v0;

  sub_19091D690(*v0);
  sub_190A47B18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19091DA30()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_190A487C0();
  sub_19091D690(v1);
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_19091DA8C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190928578();
  *a1 = result;
  return result;
}

uint64_t sub_19091DAB8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_19091D690(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_19091DAE0()
{
  unsigned __int8 *v0;

  return sub_19091D7CC(*v0);
}

uint64_t sub_19091DAE8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190928578();
  *a1 = result;
  return result;
}

void sub_19091DB0C(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_19091DB18()
{
  sub_19091E1FC();
  return sub_190A48868();
}

uint64_t sub_19091DB40()
{
  sub_19091E1FC();
  return sub_190A48874();
}

uint64_t MetricsRequest.init(width:height:cornerRadius:edgeInsets:clipMargin:scaleFactor:watchDisplayVariant:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>)
{
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  v13 = *a1;
  v14 = a1[1];
  v15 = *((_BYTE *)a1 + 16);
  v16 = *a2;
  v17 = a2[1];
  v18 = a5 + 56;
  v19 = *((_BYTE *)a2 + 16);
  v20 = a5 + *(int *)(type metadata accessor for MetricsRequest(0) + 40);
  v21 = sub_190A46EE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *(_QWORD *)a5 = v13;
  *(_QWORD *)(a5 + 8) = v14;
  *(_BYTE *)(a5 + 16) = v15;
  *(_QWORD *)(a5 + 24) = v16;
  *(_QWORD *)(a5 + 32) = v17;
  *(_BYTE *)(a5 + 40) = v19;
  *(double *)(a5 + 48) = a6;
  sub_19091D544(a3, v18);
  *(double *)(a5 + 96) = a7;
  *(double *)(a5 + 104) = a8;
  return sub_1908DCA84(a4, v20, qword_1EE1EAFB0);
}

uint64_t MetricsRequest.init(width:height:cornerRadius:edgeInsets:clipMargin:scaleFactor:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>)
{
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  v12 = *a1;
  v13 = a1[1];
  v14 = *((_BYTE *)a1 + 16);
  v15 = *a2;
  v16 = a2[1];
  v17 = a4 + 56;
  v18 = *((_BYTE *)a2 + 16);
  v19 = a4 + *(int *)(type metadata accessor for MetricsRequest(0) + 40);
  v20 = sub_190A46EE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  *(_QWORD *)a4 = v12;
  *(_QWORD *)(a4 + 8) = v13;
  *(_BYTE *)(a4 + 16) = v14;
  *(_QWORD *)(a4 + 24) = v15;
  *(_QWORD *)(a4 + 32) = v16;
  *(_BYTE *)(a4 + 40) = v18;
  *(double *)(a4 + 48) = a5;
  result = sub_19091D544(a3, v17);
  *(double *)(a4 + 96) = a6;
  *(double *)(a4 + 104) = a7;
  return result;
}

uint64_t MetricsRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  __int128 v49;
  char v50;
  char v51;

  v44 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6718);
  v6 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MetricsRequest(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v12 + 72) = 0u;
  *(_OWORD *)(v12 + 56) = 0u;
  v12[88] = 1;
  v13 = (uint64_t)&v12[*(int *)(v10 + 40)];
  v14 = sub_190A46EE8();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v46 = v13;
  v15(v13, 1, 1, v14);
  v16 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_19091E1FC();
  v17 = v48;
  sub_190A48838();
  if (v17)
  {
    v25 = v46;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    return sub_1908AA544(v25, qword_1EE1EAFB0);
  }
  else
  {
    v41 = v15;
    v42 = v5;
    v43 = v12;
    v48 = v6;
    v18 = v44;
    v51 = 0;
    sub_19091E240();
    v19 = v45;
    sub_190A48580();
    v20 = v50;
    v21 = (uint64_t)v43;
    *(_OWORD *)v43 = v49;
    *(_BYTE *)(v21 + 16) = v20;
    v51 = 1;
    sub_190A48580();
    v22 = v50;
    *(_OWORD *)(v21 + 24) = v49;
    *(_BYTE *)(v21 + 40) = v22;
    LOBYTE(v49) = 2;
    sub_190A48550();
    *(_QWORD *)(v21 + 48) = v23;
    LOBYTE(v49) = 7;
    sub_190A48550();
    *(_QWORD *)(v21 + 96) = v24;
    LOBYTE(v49) = 8;
    sub_190A48550();
    *(_QWORD *)(v21 + 104) = v27;
    LOBYTE(v49) = 9;
    v28 = sub_190A485B0();
    if ((v28 & 1) != 0)
    {
      LOBYTE(v49) = 9;
      sub_1908AA2F4(&qword_1EE1ED168, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDB770], MEMORY[0x1E0CDB790]);
      v29 = (uint64_t)v42;
      sub_190A48580();
      v41(v29, 0, 1, v14);
      sub_1908DCA84(v29, v46, qword_1EE1EAFB0);
    }
    LOBYTE(v49) = 3;
    sub_190A48550();
    v31 = v30;
    v32 = (uint64_t)v47;
    LOBYTE(v49) = 4;
    sub_190A48550();
    v34 = v33;
    LOBYTE(v49) = 5;
    sub_190A48550();
    v36 = v35;
    LOBYTE(v49) = 6;
    sub_190A48550();
    v38 = v37;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v19);
    v39 = (uint64_t)v43;
    *((_QWORD *)v43 + 7) = v31;
    *(_QWORD *)(v39 + 64) = v34;
    *(_QWORD *)(v39 + 72) = v36;
    *(_QWORD *)(v39 + 80) = v38;
    *(_BYTE *)(v39 + 88) = 0;
    v40 = (uint64_t)v43;
    sub_1908AF5D8((uint64_t)v43, v18, type metadata accessor for MetricsRequest);
    __swift_destroy_boxed_opaque_existential_1(v32);
    return sub_1908B5150(v40, type metadata accessor for MetricsRequest);
  }
}

unint64_t sub_19091E1FC()
{
  unint64_t result;

  result = qword_1EE1EAB30;
  if (!qword_1EE1EAB30)
  {
    result = MEMORY[0x19401429C](&unk_190A4E390, &type metadata for MetricsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EAB30);
  }
  return result;
}

unint64_t sub_19091E240()
{
  unint64_t result;

  result = qword_1EE1E6390;
  if (!qword_1EE1E6390)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for DimensionRequest, &type metadata for DimensionRequest);
    atomic_store(result, (unint64_t *)&qword_1EE1E6390);
  }
  return result;
}

uint64_t MetricsRequest.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  char *v14;
  uint64_t v16;
  char v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char v29;
  __int128 v30;
  char v31;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
  MEMORY[0x1E0C80A78](v4);
  v26 = (uint64_t)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_190A46EE8();
  v6 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6AE8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19091E1FC();
  sub_190A48850();
  v13 = *((_BYTE *)v2 + 16);
  v30 = *v2;
  v31 = v13;
  v29 = 0;
  sub_19091E6E4();
  v14 = v28;
  sub_190A48640();
  if (v14)
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v28 = v8;
  v16 = v27;
  v17 = *((_BYTE *)v2 + 40);
  v30 = *(__int128 *)((char *)v2 + 24);
  v31 = v17;
  v29 = 1;
  v18 = v12;
  sub_190A48640();
  *(_QWORD *)&v30 = *((_QWORD *)v2 + 6);
  v29 = 2;
  sub_19091E728();
  sub_190A48640();
  *(_QWORD *)&v30 = *((_QWORD *)v2 + 12);
  v29 = 7;
  sub_190A48640();
  *(_QWORD *)&v30 = *((_QWORD *)v2 + 13);
  v29 = 8;
  sub_190A48640();
  if ((*((_BYTE *)v2 + 88) & 1) == 0)
  {
    v24 = *((_QWORD *)v2 + 9);
    v23 = *((_QWORD *)v2 + 10);
    v25 = *((_QWORD *)v2 + 8);
    *(_QWORD *)&v30 = *((_QWORD *)v2 + 7);
    v29 = 3;
    sub_190A48640();
    *(_QWORD *)&v30 = v25;
    v29 = 4;
    sub_190A48640();
    *(_QWORD *)&v30 = v24;
    v29 = 5;
    sub_190A48640();
    *(_QWORD *)&v30 = v23;
    v29 = 6;
    sub_190A48640();
  }
  v19 = type metadata accessor for MetricsRequest(0);
  v20 = v26;
  sub_1908AAA48((uint64_t)v2 + *(int *)(v19 + 40), v26, qword_1EE1EAFB0);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v20, 1, v16);
  v22 = v28;
  if (v21 == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v9);
    return sub_1908AA544(v20, qword_1EE1EAFB0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v28, v20, v16);
    LOBYTE(v30) = 9;
    sub_1908AA2F4(&qword_1EE1ED170, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDB770], MEMORY[0x1E0CDB780]);
    sub_190A48640();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v22, v16);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v18, v9);
  }
}

unint64_t sub_19091E6E4()
{
  unint64_t result;

  result = qword_1EE1E69C0;
  if (!qword_1EE1E69C0)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for DimensionRequest, &type metadata for DimensionRequest);
    atomic_store(result, (unint64_t *)&qword_1EE1E69C0);
  }
  return result;
}

unint64_t sub_19091E728()
{
  unint64_t result;

  result = qword_1ECF6C800;
  if (!qword_1ECF6C800)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEF050], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1ECF6C800);
  }
  return result;
}

uint64_t MetricsRequest.hash(into:)()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  char v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v2) = *((_BYTE *)v0 + 16);
  v9 = *v0;
  v10 = v2;
  DimensionRequest.hash(into:)();
  v4 = *((_BYTE *)v0 + 40);
  v9 = *(__int128 *)((char *)v0 + 24);
  v10 = v4;
  DimensionRequest.hash(into:)();
  sub_190A487F0();
  sub_190A487F0();
  sub_190A487F0();
  sub_190A487F0();
  sub_190A487F0();
  sub_190A487F0();
  sub_190A487F0();
  v5 = type metadata accessor for MetricsRequest(0);
  sub_1908AAA48((uint64_t)v0 + *(int *)(v5 + 40), (uint64_t)v3, qword_1EE1EAFB0);
  v6 = sub_190A46EE8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v6) == 1)
  {
    sub_1908AA544((uint64_t)v3, qword_1EE1EAFB0);
  }
  else
  {
    sub_190A46EDC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
  }
  return sub_190A487CC();
}

uint64_t MetricsRequest.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v1 = v0;
  sub_190A48298();
  sub_190A47B3C();
  DimensionRequest.description.getter();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  DimensionRequest.description.getter();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v2 = *(_QWORD *)(v0 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5C0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_190A4A350;
  v4 = MEMORY[0x1E0DEF040];
  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEF040];
  v5 = sub_1909211CC();
  *(_QWORD *)(v3 + 64) = v5;
  *(_QWORD *)(v3 + 32) = v2;
  sub_190A47AE8();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v6 = *(_QWORD *)(v1 + 96);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_190A4A350;
  *(_QWORD *)(v7 + 56) = v4;
  *(_QWORD *)(v7 + 64) = v5;
  *(_QWORD *)(v7 + 32) = v6;
  sub_190A47AE8();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v8 = *(_QWORD *)(v1 + 104);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_190A4A350;
  *(_QWORD *)(v9 + 56) = v4;
  *(_QWORD *)(v9 + 64) = v5;
  *(_QWORD *)(v9 + 32) = v8;
  sub_190A47AE8();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v10 = *(_BYTE *)(v1 + 88);
  if ((v10 & 1) != 0)
  {
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
  }
  else
  {
    sub_190A47D88();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    sub_190A47D88();
  }
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  if ((v10 & 1) != 0)
  {
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
  }
  else
  {
    sub_190A47D88();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    sub_190A47D88();
  }
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  return 0;
}

BOOL MetricsRequest.isUnitScale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 104) == 1.0;
}

BOOL MetricsRequest.isActivityFullScreen.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 104) != 1.0;
}

BOOL static DimensionRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) != 0 && v2 == v3)
      return *(double *)(a1 + 8) == *(double *)(a2 + 8);
  }
  else if ((*(_BYTE *)(a2 + 16) & 1) == 0 && v2 == v3)
  {
    return 1;
  }
  return 0;
}

uint64_t MetricsRequest.hashValue.getter()
{
  sub_190A487C0();
  MetricsRequest.hash(into:)();
  return sub_190A48808();
}

uint64_t sub_19091EE38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MetricsRequest.init(from:)(a1, a2);
}

uint64_t sub_19091EE4C(_QWORD *a1)
{
  return MetricsRequest.encode(to:)(a1);
}

uint64_t sub_19091EE60()
{
  sub_190A487C0();
  MetricsRequest.hash(into:)();
  return sub_190A48808();
}

uint64_t sub_19091EEA0()
{
  sub_190A487C0();
  MetricsRequest.hash(into:)();
  return sub_190A48808();
}

double JindoMetricsDefinition.obstructionSize.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void JindoMetricsDefinition.obstructionSize.setter(double a1, double a2)
{
  double *v2;

  *v2 = a1;
  v2[1] = a2;
}

uint64_t (*JindoMetricsDefinition.obstructionSize.modify())()
{
  return nullsub_1;
}

uint64_t JindoMetricsDefinition.compactLeadingMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19091EF1C(type metadata accessor for JindoMetricsDefinition, (uint64_t)type metadata accessor for MetricsRequest, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1908AF5D8, a1);
}

uint64_t sub_19091EF1C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;

  v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 20), a4, a2);
}

uint64_t JindoMetricsDefinition.compactLeadingMetrics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for JindoMetricsDefinition(0) + 20);
  return sub_1909233F4(a1, v3);
}

uint64_t (*JindoMetricsDefinition.compactLeadingMetrics.modify())()
{
  type metadata accessor for JindoMetricsDefinition(0);
  return nullsub_1;
}

uint64_t JindoMetricsDefinition.compactTrailingMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for JindoMetricsDefinition(0);
  return sub_1908AF5D8(v1 + *(int *)(v3 + 24), a1, type metadata accessor for MetricsRequest);
}

uint64_t JindoMetricsDefinition.compactTrailingMetrics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for JindoMetricsDefinition(0) + 24);
  return sub_1909233F4(a1, v3);
}

uint64_t (*JindoMetricsDefinition.compactTrailingMetrics.modify())()
{
  type metadata accessor for JindoMetricsDefinition(0);
  return nullsub_1;
}

uint64_t JindoMetricsDefinition.compactMinimalMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for JindoMetricsDefinition(0);
  return sub_1908AF5D8(v1 + *(int *)(v3 + 28), a1, type metadata accessor for MetricsRequest);
}

uint64_t JindoMetricsDefinition.compactMinimalMetrics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for JindoMetricsDefinition(0) + 28);
  return sub_1909233F4(a1, v3);
}

uint64_t (*JindoMetricsDefinition.compactMinimalMetrics.modify())()
{
  type metadata accessor for JindoMetricsDefinition(0);
  return nullsub_1;
}

uint64_t JindoMetricsDefinition.expandedMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for JindoMetricsDefinition(0);
  return sub_1908AF5D8(v1 + *(int *)(v3 + 32), a1, type metadata accessor for MetricsRequest);
}

uint64_t JindoMetricsDefinition.expandedMetrics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for JindoMetricsDefinition(0) + 32);
  return sub_1909233F4(a1, v3);
}

uint64_t (*JindoMetricsDefinition.expandedMetrics.modify())()
{
  type metadata accessor for JindoMetricsDefinition(0);
  return nullsub_1;
}

uint64_t JindoMetricsDefinition.init(obstructionSize:compactLeadingMetrics:compactTrailingMetrics:compactMinimalMetrics:expandedMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, double *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  int *v12;

  *a5 = a6;
  a5[1] = a7;
  v12 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  sub_1908BD0B4(a1, (uint64_t)a5 + v12[5], type metadata accessor for MetricsRequest);
  sub_1908BD0B4(a2, (uint64_t)a5 + v12[6], type metadata accessor for MetricsRequest);
  sub_1908BD0B4(a3, (uint64_t)a5 + v12[7], type metadata accessor for MetricsRequest);
  return sub_1908BD0B4(a4, (uint64_t)a5 + v12[8], type metadata accessor for MetricsRequest);
}

uint64_t JindoMetricsDefinition.hash(into:)()
{
  sub_190A487F0();
  sub_190A487F0();
  type metadata accessor for JindoMetricsDefinition(0);
  MetricsRequest.hash(into:)();
  MetricsRequest.hash(into:)();
  MetricsRequest.hash(into:)();
  return MetricsRequest.hash(into:)();
}

uint64_t JindoMetricsDefinition.metricsRequestForTag(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = qword_190A4E3E8[a1];
  v5 = type metadata accessor for JindoMetricsDefinition(0);
  return sub_1908AF5D8(v2 + *(int *)(v5 + 4 * v4), a2, type metadata accessor for MetricsRequest);
}

uint64_t JindoMetricsDefinition.description.getter()
{
  sub_190A48298();
  sub_190A47B3C();
  type metadata accessor for CGSize(0);
  sub_190A483DC();
  sub_190A47B3C();
  type metadata accessor for JindoMetricsDefinition(0);
  MetricsRequest.description.getter();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  MetricsRequest.description.getter();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  MetricsRequest.description.getter();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  MetricsRequest.description.getter();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  return 0;
}

uint64_t sub_19091F4D0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_19091F50C + 4 * byte_190A4D9E4[a1]))(0xD000000000000014, 0x8000000190A5F9C0);
}

unint64_t sub_19091F50C()
{
  return 0xD000000000000015;
}

uint64_t sub_19091F558()
{
  return 0x6465646E61707865;
}

uint64_t sub_19091F57C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_19091F5B8 + 4 * byte_190A4D9EA[a1]))(0xD000000000000014, 0x8000000190A5F9C0);
}

unint64_t sub_19091F5B8()
{
  return 0xD000000000000015;
}

uint64_t sub_19091F604()
{
  return 0x6465646E61707865;
}

void sub_19091F628(char *a1)
{
  sub_190A270AC(*a1);
}

void sub_19091F634()
{
  char *v0;

  sub_190A27C3C(*v0);
}

void sub_19091F63C(uint64_t a1)
{
  char *v1;

  sub_190A27F6C(a1, *v1);
}

void sub_19091F644(uint64_t a1)
{
  char *v1;

  sub_190A282E0(a1, *v1);
}

uint64_t sub_19091F64C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1909285C0();
  *a1 = result;
  return result;
}

uint64_t sub_19091F678@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_19091F4D0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_19091F6A0()
{
  unsigned __int8 *v0;

  return sub_19091F57C(*v0);
}

uint64_t sub_19091F6A8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1909285C0();
  *a1 = result;
  return result;
}

void sub_19091F6CC(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_19091F6D8()
{
  sub_190923438();
  return sub_190A48868();
}

uint64_t sub_19091F700()
{
  sub_190923438();
  return sub_190A48874();
}

uint64_t JindoMetricsDefinition.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;

  v27 = a2;
  v31 = type metadata accessor for MetricsRequest(0);
  v3 = MEMORY[0x1E0C80A78](v31);
  v28 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v29 = (char *)&v27 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v30 = (char *)&v27 - v8;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - v9;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6728);
  v11 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v12 = type metadata accessor for JindoMetricsDefinition(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_190923438();
  v16 = v34;
  sub_190A48838();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  v34 = v11;
  v17 = v14;
  v40 = 0;
  sub_190A48550();
  v19 = v18;
  v39 = 1;
  sub_190A48550();
  v21 = v20;
  v38 = 2;
  sub_1908AA2F4(&qword_1EE1E62D0, type metadata accessor for MetricsRequest, (uint64_t)&protocol conformance descriptor for MetricsRequest);
  sub_190A48580();
  v22 = (int *)v12;
  sub_1908BD0B4((uint64_t)v10, (uint64_t)v17 + *(int *)(v12 + 20), type metadata accessor for MetricsRequest);
  v37 = 3;
  v23 = (uint64_t)v30;
  sub_190A48580();
  sub_1908BD0B4(v23, (uint64_t)v17 + v22[6], type metadata accessor for MetricsRequest);
  v36 = 4;
  v24 = (uint64_t)v29;
  sub_190A48580();
  sub_1908BD0B4(v24, (uint64_t)v17 + v22[7], type metadata accessor for MetricsRequest);
  v35 = 5;
  v25 = (uint64_t)v28;
  sub_190A48580();
  (*(void (**)(_QWORD, uint64_t))(v34 + 8))(0, v32);
  sub_1908BD0B4(v25, (uint64_t)v17 + v22[8], type metadata accessor for MetricsRequest);
  *v17 = v19;
  v17[1] = v21;
  sub_1908AF5D8((uint64_t)v17, v27, type metadata accessor for JindoMetricsDefinition);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return sub_1908B5150((uint64_t)v17, type metadata accessor for JindoMetricsDefinition);
}

uint64_t JindoMetricsDefinition.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6AF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190923438();
  sub_190A48850();
  v12 = *v3;
  v11 = 0;
  sub_19091E728();
  sub_190A48640();
  if (!v2)
  {
    v12 = v3[1];
    v11 = 1;
    sub_190A48640();
    type metadata accessor for JindoMetricsDefinition(0);
    LOBYTE(v12) = 2;
    type metadata accessor for MetricsRequest(0);
    sub_1908AA2F4(&qword_1EE1E69A0, type metadata accessor for MetricsRequest, (uint64_t)&protocol conformance descriptor for MetricsRequest);
    sub_190A48640();
    LOBYTE(v12) = 3;
    sub_190A48640();
    LOBYTE(v12) = 4;
    sub_190A48640();
    LOBYTE(v12) = 5;
    sub_190A48640();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t JindoMetricsDefinition.hashValue.getter()
{
  sub_190A487C0();
  sub_190A487F0();
  sub_190A487F0();
  type metadata accessor for JindoMetricsDefinition(0);
  MetricsRequest.hash(into:)();
  MetricsRequest.hash(into:)();
  MetricsRequest.hash(into:)();
  MetricsRequest.hash(into:)();
  return sub_190A48808();
}

uint64_t sub_19091FEA4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return JindoMetricsDefinition.init(from:)(a1, a2);
}

uint64_t sub_19091FEB8(_QWORD *a1)
{
  return JindoMetricsDefinition.encode(to:)(a1);
}

uint64_t sub_19091FED0()
{
  sub_190A487F0();
  sub_190A487F0();
  MetricsRequest.hash(into:)();
  MetricsRequest.hash(into:)();
  MetricsRequest.hash(into:)();
  return MetricsRequest.hash(into:)();
}

uint64_t sub_19091FF60()
{
  sub_190A487C0();
  sub_190A487F0();
  sub_190A487F0();
  MetricsRequest.hash(into:)();
  MetricsRequest.hash(into:)();
  MetricsRequest.hash(into:)();
  MetricsRequest.hash(into:)();
  return sub_190A48808();
}

double DimensionRequest.resolveIfNecessary(intrinsicLength:)(double result)
{
  uint64_t v1;

  if ((*(_BYTE *)(v1 + 16) & 1) == 0)
    return *(double *)v1;
  if (*(double *)(v1 + 8) < result)
    result = *(double *)(v1 + 8);
  if (result <= *(double *)v1)
    return *(double *)v1;
  return result;
}

uint64_t sub_190920044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  int v14;
  int v15;
  int v16;
  _BOOL4 v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  _BOOL4 v39;
  int v40;
  _BOOL4 v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);

  v44 = a1;
  v45 = a3;
  v4 = sub_190A46EAC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v34 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v46 = a2;
  v47 = v11;
  v11((char *)&v34 - v9, a2, v4);
  v12 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  v13 = v12(v10, v4);
  v14 = v13;
  v15 = *MEMORY[0x1E0CDB330];
  v16 = *MEMORY[0x1E0CDB368];
  v43 = *MEMORY[0x1E0CDB368];
  v18 = v13 == v15 || v13 == v16;
  v19 = *MEMORY[0x1E0CDB370];
  v41 = v18;
  v42 = v19;
  if (v13 == v19)
    v18 = 1;
  v20 = *MEMORY[0x1E0CDB358];
  v21 = 1;
  v39 = v18;
  v40 = v20;
  if (v18)
  {
    v22 = 1;
    v23 = 1;
    v24 = 1;
    v25 = 1;
    v26 = 1;
    v27 = 1;
    v28 = 1;
  }
  else
  {
    v22 = 1;
    v23 = 1;
    v24 = 1;
    v25 = 1;
    v26 = 1;
    v27 = 1;
    v28 = 1;
    if (v13 != v20)
    {
      if (v13 != *MEMORY[0x1E0CDB328])
      {
        if (v13 != *MEMORY[0x1E0CDB338])
        {
          if (v13 != *MEMORY[0x1E0CDB300])
          {
            if (v13 != *MEMORY[0x1E0CDB348])
            {
              if (v13 != *MEMORY[0x1E0CDB340])
              {
                if (v13 != *MEMORY[0x1E0CDB350])
                {
                  if (v13 != *MEMORY[0x1E0CDB318])
                  {
                    if (v13 != *MEMORY[0x1E0CDB320])
                    {
                      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
                      v21 = 1;
                      v22 = 1;
                      v23 = 1;
                      v24 = 1;
                      v27 = 1;
                      goto LABEL_28;
                    }
                    v21 = 0;
                  }
                  v22 = 0;
                }
                v23 = 0;
              }
              v24 = 0;
            }
            v25 = 0;
          }
          v26 = 0;
        }
        v27 = 0;
      }
      v28 = 0;
    }
  }
LABEL_28:
  v34 = v5;
  v37 = v23;
  v38 = v24;
  v29 = v27;
  v35 = v21;
  v36 = v22;
  v30 = v44;
  v47(v8, v44, v4);
  v31 = v12(v8, v4);
  v32 = v46;
  if (v31 == v15)
    goto LABEL_31;
  if (v31 != v43)
  {
    if (v31 == v42)
    {
      if (v41)
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v47)(v45, v32, v4);
    }
    else if (v31 == v40)
    {
      if (v39)
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v47)(v45, v32, v4);
    }
    else if (v31 == *MEMORY[0x1E0CDB328])
    {
      if ((v28 & 1) != 0)
        return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
    }
    else if (v31 == *MEMORY[0x1E0CDB338])
    {
      if ((v29 & 1) != 0)
        return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
    }
    else if (v31 == *MEMORY[0x1E0CDB300])
    {
      if ((v26 & 1) != 0)
        return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
    }
    else if (v31 == *MEMORY[0x1E0CDB348])
    {
      if ((v25 & 1) != 0)
        return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
    }
    else if (v31 == *MEMORY[0x1E0CDB340])
    {
      if ((v38 & 1) != 0)
        return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
    }
    else if (v31 == *MEMORY[0x1E0CDB350])
    {
      if ((v37 & 1) != 0)
        return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
    }
    else if (v31 == *MEMORY[0x1E0CDB318])
    {
      if ((v36 & 1) != 0)
        return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
    }
    else if (v31 == *MEMORY[0x1E0CDB320])
    {
      if ((v35 & 1) != 0)
        return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v4);
      if (v39)
        return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
    }
    goto LABEL_31;
  }
  if (v14 != v15)
LABEL_31:
    v32 = v30;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v47)(v45, v32, v4);
}

double DimensionRequest.minValue.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double DimensionRequest.maxValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = 8;
  if (!*(_BYTE *)(v0 + 16))
    v1 = 0;
  return *(double *)(v0 + v1);
}

uint64_t DimensionRequest.filePath.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *v0;
  if ((v0[2] & 1) != 0)
  {
    v2 = v0[1];
    v9 = 762214756;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5C0);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_190A4A350;
    v4 = MEMORY[0x1E0DEF040];
    *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEF040];
    v5 = sub_1909211CC();
    *(_QWORD *)(v3 + 64) = v5;
    *(_QWORD *)(v3 + 32) = v1;
    sub_190A47AE8();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_190A4A350;
    *(_QWORD *)(v6 + 56) = v4;
    *(_QWORD *)(v6 + 64) = v5;
    *(_QWORD *)(v6 + 32) = v2;
  }
  else
  {
    v9 = 762866022;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5C0);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_190A4A350;
    *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEF040];
    *(_QWORD *)(v7 + 64) = sub_1909211CC();
    *(_QWORD *)(v7 + 32) = v1;
  }
  sub_190A47AE8();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t DimensionRequest.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *v0;
  if ((v0[2] & 1) != 0)
  {
    v2 = v0[1];
    v9 = 0x3C63696D616E7944;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5C0);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_190A4A350;
    v4 = MEMORY[0x1E0DEF040];
    *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEF040];
    v5 = sub_1909211CC();
    *(_QWORD *)(v3 + 64) = v5;
    *(_QWORD *)(v3 + 32) = v1;
    sub_190A47AE8();
    sub_190A47B3C();
    swift_bridgeObjectRelease();
    sub_190A47B3C();
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_190A4A350;
    *(_QWORD *)(v6 + 56) = v4;
    *(_QWORD *)(v6 + 64) = v5;
    *(_QWORD *)(v6 + 32) = v2;
  }
  else
  {
    v9 = 0x3C6465786946;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6C5C0);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_190A4A350;
    *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEF040];
    *(_QWORD *)(v7 + 64) = sub_1909211CC();
    *(_QWORD *)(v7 + 32) = v1;
  }
  sub_190A47AE8();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  return v9;
}

void sub_190920790(char *a1)
{
  sub_190A27694(*a1);
}

void sub_19092079C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_190A487C0();
  __asm { BR              X9 }
}

uint64_t sub_1909207F0()
{
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

void sub_19092084C()
{
  __asm { BR              X10 }
}

uint64_t sub_190920890()
{
  sub_190A47B18();
  return swift_bridgeObjectRelease();
}

void sub_1909208D8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_190A487C0();
  __asm { BR              X9 }
}

uint64_t sub_190920928()
{
  sub_190A47B18();
  swift_bridgeObjectRelease();
  return sub_190A48808();
}

uint64_t sub_190920984@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190928608();
  *a1 = result;
  return result;
}

uint64_t sub_1909209B0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1909209E8 + 4 * byte_190A4D9FC[*v0]))();
}

void sub_1909209E8(_QWORD *a1@<X8>)
{
  *a1 = 0x6465786966;
  a1[1] = 0xE500000000000000;
}

void sub_190920A00(_QWORD *a1@<X8>)
{
  *a1 = 7235949;
  a1[1] = 0xE300000000000000;
}

void sub_190920A14(_QWORD *a1@<X8>)
{
  *a1 = 7889261;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_190920A28()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_190920A60 + 4 * byte_190A4DA00[*v0]))(0x5474736575716572, 0xEB00000000657079);
}

uint64_t sub_190920A60()
{
  return 0x6465786966;
}

uint64_t sub_190920A74()
{
  return 7235949;
}

uint64_t sub_190920A84()
{
  return 7889261;
}

uint64_t sub_190920A94@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_190928608();
  *a1 = result;
  return result;
}

void sub_190920AB8(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_190920AC4()
{
  sub_19092347C();
  return sub_190A48868();
}

uint64_t sub_190920AEC()
{
  sub_19092347C();
  return sub_190A48874();
}

uint64_t DimensionRequest.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6AF0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v8 = v1[1];
  v9 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19092347C();
  sub_190A48850();
  if (v9 == 1)
  {
    LOBYTE(v14) = 0;
    sub_190A485F8();
    if (!v2)
    {
      v14 = v12;
      v13 = 2;
      sub_19091E728();
      sub_190A48640();
      v14 = v8;
      v13 = 3;
      goto LABEL_7;
    }
  }
  else
  {
    LOBYTE(v14) = 0;
    sub_190A485F8();
    if (!v2)
    {
      v14 = v12;
      v13 = 1;
      sub_19091E728();
LABEL_7:
      sub_190A48640();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DimensionRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;

  v31 = a2;
  v32 = sub_190A48310();
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6720);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_19092347C();
  v10 = v33;
  sub_190A48838();
  if (!v10)
  {
    v28 = v4;
    v29 = a1;
    v11 = v32;
    v33 = v6;
    v37 = 0;
    sub_190A48538();
    v14 = sub_190A484F0();
    swift_bridgeObjectRelease();
    if (v14 == 1)
    {
      v36 = 1;
      sub_190A48550();
      v17 = v21;
      (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v5);
      v20 = 0;
      v19 = 0;
      v16 = v31;
      goto LABEL_12;
    }
    if (!v14)
    {
      v35 = 2;
      sub_190A48550();
      v16 = v31;
      v17 = v15;
      v34 = 3;
      sub_190A48550();
      v19 = v18;
      (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v5);
      v20 = 1;
LABEL_12:
      *(_QWORD *)v16 = v17;
      *(_QWORD *)(v16 + 8) = v19;
      *(_BYTE *)(v16 + 16) = v20;
      v12 = (uint64_t)v29;
      return __swift_destroy_boxed_opaque_existential_1(v12);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EDE40);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_190A4A350;
    *(_QWORD *)(v22 + 56) = &type metadata for DimensionRequest.CodingKeys;
    *(_QWORD *)(v22 + 64) = v9;
    *(_BYTE *)(v22 + 32) = 0;
    v23 = v28;
    sub_190A48304();
    v24 = sub_190A4831C();
    swift_allocError();
    v26 = v25;
    v27 = v30;
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 16))(v25, v23, v11);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x1E0DEC458], v24);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v11);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v5);
    a1 = v29;
  }
  v12 = (uint64_t)a1;
  return __swift_destroy_boxed_opaque_existential_1(v12);
}

uint64_t DimensionRequest.hash(into:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    sub_190A487CC();
    sub_190A487F0();
  }
  else
  {
    sub_190A487CC();
  }
  return sub_190A487F0();
}

uint64_t DimensionRequest.hashValue.getter()
{
  sub_190A487C0();
  DimensionRequest.hash(into:)();
  return sub_190A48808();
}

uint64_t sub_190921100@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DimensionRequest.init(from:)(a1, a2);
}

uint64_t sub_190921114(_QWORD *a1)
{
  return DimensionRequest.encode(to:)(a1);
}

uint64_t sub_190921128()
{
  sub_190A487C0();
  DimensionRequest.hash(into:)();
  return sub_190A48808();
}

uint64_t sub_19092117C()
{
  sub_190A487C0();
  DimensionRequest.hash(into:)();
  return sub_190A48808();
}

unint64_t sub_1909211CC()
{
  unint64_t result;

  result = qword_1EE1E6940;
  if (!qword_1EE1E6940)
  {
    result = MEMORY[0x19401429C](MEMORY[0x1E0DEF098], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1EE1E6940);
  }
  return result;
}

BOOL sub_190921210(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) != 0 && v2 == v3)
      return *(double *)(a1 + 8) == *(double *)(a2 + 8);
  }
  else if ((*(_BYTE *)(a2 + 16) & 1) == 0 && v2 == v3)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_190921270()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for ActivityMetricsDefinition(0);
  __swift_allocate_value_buffer(v0, qword_1EE1ED150);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE1ED150);
  return sub_1909212B8(v1);
}

uint64_t sub_1909212B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v21;

  v2 = type metadata accessor for ActivityMetricsDefinition(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MetricsRequest(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v21 - v13;
  v15 = (char *)&v21 + *(int *)(v12 + 40) - v13;
  v16 = sub_190A46EE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(_OWORD *)v14 = xmmword_190A4E410;
  v14[16] = 0;
  *(_OWORD *)(v14 + 24) = xmmword_190A4E410;
  v14[40] = 0;
  *((_QWORD *)v14 + 6) = 0x4036000000000000;
  *(_OWORD *)(v14 + 56) = 0u;
  *(_OWORD *)(v14 + 72) = 0u;
  v14[88] = 1;
  *((_OWORD *)v14 + 6) = xmmword_190A4E420;
  sub_1908AF5D8((uint64_t)v14, (uint64_t)v11, type metadata accessor for MetricsRequest);
  v17 = type metadata accessor for JindoMetricsDefinition(0);
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v7, 1, 1, v17);
  v19 = (uint64_t)&v4[*(int *)(v2 + 20)];
  v18((char *)v19, 1, 1, v17);
  sub_1908BD0B4((uint64_t)v11, (uint64_t)v4, type metadata accessor for MetricsRequest);
  sub_1908DCA84((uint64_t)v7, v19, &qword_1EE1EA8F0);
  sub_1908BD0B4((uint64_t)v4, a1, type metadata accessor for ActivityMetricsDefinition);
  return sub_1908B5150((uint64_t)v14, type metadata accessor for MetricsRequest);
}

uint64_t ActivityMetricsDefinition.init(listItemMetrics:jindoMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = a3 + *(int *)(type metadata accessor for ActivityMetricsDefinition(0) + 20);
  v7 = type metadata accessor for JindoMetricsDefinition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1908BD0B4(a1, a3, type metadata accessor for MetricsRequest);
  return sub_1908DCA84(a2, v6, &qword_1EE1EA8F0);
}

uint64_t static ActivityMetricsDefinition.default.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EE1EC4C0 != -1)
    swift_once();
  v2 = type metadata accessor for ActivityMetricsDefinition(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE1ED150);
  return sub_1908AF5D8(v3, a1, type metadata accessor for ActivityMetricsDefinition);
}

uint64_t ActivityMetricsDefinition._rawJindoMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19091EF1C(type metadata accessor for ActivityMetricsDefinition, (uint64_t)&qword_1EE1EA8F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1908AAA48, a1);
}

uint64_t ActivityMetricsDefinition._rawJindoMetrics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ActivityMetricsDefinition(0);
  return sub_1908DCA84(a1, v1 + *(int *)(v3 + 20), &qword_1EE1EA8F0);
}

uint64_t (*ActivityMetricsDefinition._rawJindoMetrics.modify())()
{
  type metadata accessor for ActivityMetricsDefinition(0);
  return nullsub_1;
}

uint64_t ActivityMetricsDefinition.listItemMetrics(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, _QWORD, uint64_t);
  void (*v21)(char *, uint64_t);
  double v22;
  double v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6ADD8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_190A46EAC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)v31 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)v31 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v31 - v18;
  v20 = *(void (**)(char *, _QWORD, uint64_t))(v8 + 104);
  v20(v17, *MEMORY[0x1E0CDB358], v7);
  v20(v11, *MEMORY[0x1E0CDB320], v7);
  sub_190920044(a1, (uint64_t)v11, (uint64_t)v14);
  v21 = *(void (**)(char *, uint64_t))(v8 + 8);
  v21(v11, v7);
  sub_19091D090((uint64_t)v17, (uint64_t)v14, (uint64_t)v19);
  v21(v14, v7);
  v21(v17, v7);
  sub_1908AF5D8(v31[1], a2, type metadata accessor for MetricsRequest);
  v22 = *(double *)(a2 + 24);
  v23 = *(double *)(a2 + 32);
  LODWORD(v17) = *(unsigned __int8 *)(a2 + 40);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v6, v19, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v24 = (void *)sub_190A48064();
  v25 = objc_msgSend((id)objc_opt_self(), sel_traitCollectionWithPreferredContentSizeCategory_, v24);
  v26 = objc_msgSend((id)objc_opt_self(), sel_defaultMetrics);
  if (!(_DWORD)v17)
    v23 = v22;
  v27 = v25;
  objc_msgSend(v26, sel_scaledValueForValue_compatibleWithTraitCollection_, v27, v23);
  v29 = v28;

  result = ((uint64_t (*)(char *, uint64_t))v21)(v19, v7);
  *(double *)(a2 + 24) = v22;
  *(_QWORD *)(a2 + 32) = v29;
  *(_BYTE *)(a2 + 40) = 1;
  return result;
}

uint64_t ActivityMetricsDefinition.jindoMetrics(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, _QWORD, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  double v31;
  int v32;
  char *v33;
  void *v34;
  id v35;
  id v36;
  double v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v47 = a1;
  v49 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECF6ADD8);
  MEMORY[0x1E0C80A78](v2);
  v44 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MetricsRequest(0);
  MEMORY[0x1E0C80A78](v4);
  v46 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for JindoMetricsDefinition(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v45 = (uint64_t)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_190A46EAC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v42 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v42 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v42 - v23;
  v25 = *(void (**)(char *, _QWORD, uint64_t))(v13 + 104);
  v25(v22, *MEMORY[0x1E0CDB358], v12);
  v25(v16, *MEMORY[0x1E0CDB320], v12);
  sub_190920044(v47, (uint64_t)v16, (uint64_t)v19);
  v26 = *(void (**)(char *, uint64_t))(v13 + 8);
  v26(v16, v12);
  sub_19091D090((uint64_t)v22, (uint64_t)v19, (uint64_t)v24);
  v26(v19, v12);
  v26(v22, v12);
  v27 = type metadata accessor for ActivityMetricsDefinition(0);
  sub_1908AAA48(v48 + *(int *)(v27 + 20), (uint64_t)v8, &qword_1EE1EA8F0);
  v48 = v10;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    v26(v24, v12);
    sub_1908AA544((uint64_t)v8, &qword_1EE1EA8F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(v49, 1, 1, v9);
  }
  else
  {
    v29 = v45;
    sub_1908BD0B4((uint64_t)v8, v45, type metadata accessor for JindoMetricsDefinition);
    v43 = v29 + *(int *)(v9 + 32);
    v30 = v46;
    sub_1908AF5D8(v43, v46, type metadata accessor for MetricsRequest);
    v42 = *(double *)(v30 + 24);
    v31 = *(double *)(v30 + 32);
    v47 = v9;
    v32 = *(unsigned __int8 *)(v30 + 40);
    v33 = v44;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v44, v24, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v33, 0, 1, v12);
    v34 = (void *)sub_190A48064();
    v35 = objc_msgSend((id)objc_opt_self(), sel_traitCollectionWithPreferredContentSizeCategory_, v34);
    v36 = objc_msgSend((id)objc_opt_self(), sel_defaultMetrics);
    v37 = v42;
    if (!v32)
      v31 = v42;
    v38 = v35;
    objc_msgSend(v36, sel_scaledValueForValue_compatibleWithTraitCollection_, v38, v31);
    v40 = v39;

    v26(v24, v12);
    *(double *)(v30 + 24) = v37;
    *(_QWORD *)(v30 + 32) = v40;
    *(_BYTE *)(v30 + 40) = 1;
    sub_1909233F4(v30, v43);
    v41 = v49;
    sub_1908AF5D8(v29, v49, type metadata accessor for JindoMetricsDefinition);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v41, 0, 1, v47);
    return sub_1908B5150(v29, type metadata accessor for JindoMetricsDefinition);
  }
}

uint64_t ActivityMetricsDefinition.filePath.getter()
{
  sub_190A48298();
  swift_bridgeObjectRelease();
  DimensionRequest.filePath.getter();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  DimensionRequest.filePath.getter();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  sub_190A47D88();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  sub_190A47D88();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  return 14967;
}

uint64_t ActivityMetricsDefinition.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_190A48298();
  sub_190A47B3C();
  MetricsRequest.description.getter();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v4 = type metadata accessor for ActivityMetricsDefinition(0);
  sub_1908AAA48(v0 + *(int *)(v4 + 20), (uint64_t)v3, &qword_1EE1EA8F0);
  v5 = type metadata accessor for JindoMetricsDefinition(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_1908AA544((uint64_t)v3, &qword_1EE1EA8F0);
  }
  else
  {
    JindoMetricsDefinition.description.getter();
    sub_1908B5150((uint64_t)v3, type metadata accessor for JindoMetricsDefinition);
  }
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  return v7[0];
}

uint64_t ActivityMetricsDefinition.hash(into:)()
{
  MetricsRequest.hash(into:)();
  type metadata accessor for ActivityMetricsDefinition(0);
  return sub_1909226A4();
}

unint64_t sub_190921FFC()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0xD000000000000013;
}

uint64_t sub_19092203C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_190928650(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190922060()
{
  sub_1909234D4();
  return sub_190A48868();
}

uint64_t sub_190922088()
{
  sub_1909234D4();
  return sub_190A48874();
}

uint64_t ActivityMetricsDefinition.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6B00);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909234D4();
  sub_190A48850();
  v8[15] = 0;
  type metadata accessor for MetricsRequest(0);
  sub_1908AA2F4(&qword_1EE1E69A0, type metadata accessor for MetricsRequest, (uint64_t)&protocol conformance descriptor for MetricsRequest);
  sub_190A48640();
  if (!v1)
  {
    type metadata accessor for ActivityMetricsDefinition(0);
    v8[14] = 1;
    type metadata accessor for JindoMetricsDefinition(0);
    sub_1908AA2F4((unint64_t *)&unk_1EE1E69F8, type metadata accessor for JindoMetricsDefinition, (uint64_t)&protocol conformance descriptor for JindoMetricsDefinition);
    sub_190A485EC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ActivityMetricsDefinition.hashValue.getter()
{
  sub_190A487C0();
  MetricsRequest.hash(into:)();
  type metadata accessor for ActivityMetricsDefinition(0);
  sub_1909226A4();
  return sub_190A48808();
}

uint64_t ActivityMetricsDefinition.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
  MEMORY[0x1E0C80A78](v3);
  v24 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MetricsRequest(0);
  MEMORY[0x1E0C80A78](v5);
  v25 = (uint64_t)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1E6730);
  v7 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ActivityMetricsDefinition(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)&v13[*(int *)(v11 + 20)];
  v15 = type metadata accessor for JindoMetricsDefinition(0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v28 = v14;
  v16(v14, 1, 1, v15);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1909234D4();
  v17 = v27;
  sub_190A48838();
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1908AA544(v28, &qword_1EE1EA8F0);
  }
  else
  {
    v18 = (uint64_t)v13;
    v19 = v24;
    v30 = 0;
    sub_1908AA2F4(&qword_1EE1E62D0, type metadata accessor for MetricsRequest, (uint64_t)&protocol conformance descriptor for MetricsRequest);
    sub_190A48580();
    sub_1908BD0B4(v25, v18, type metadata accessor for MetricsRequest);
    v29 = 1;
    sub_1908AA2F4(&qword_1EE1E6568, type metadata accessor for JindoMetricsDefinition, (uint64_t)&protocol conformance descriptor for JindoMetricsDefinition);
    v20 = (uint64_t)v19;
    v21 = v26;
    sub_190A4852C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v21);
    sub_1908DCA84(v20, v28, &qword_1EE1EA8F0);
    sub_1908AF5D8(v18, v23, type metadata accessor for ActivityMetricsDefinition);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1908B5150(v18, type metadata accessor for ActivityMetricsDefinition);
  }
}

uint64_t sub_19092258C()
{
  sub_190A487C0();
  MetricsRequest.hash(into:)();
  sub_1909226A4();
  return sub_190A48808();
}

uint64_t sub_1909225DC()
{
  MetricsRequest.hash(into:)();
  return sub_1909226A4();
}

uint64_t sub_190922618()
{
  sub_190A487C0();
  MetricsRequest.hash(into:)();
  sub_1909226A4();
  return sub_190A48808();
}

uint64_t sub_190922664@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ActivityMetricsDefinition.init(from:)(a1, a2);
}

uint64_t sub_190922678(_QWORD *a1)
{
  return ActivityMetricsDefinition.encode(to:)(a1);
}

uint64_t sub_1909226A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for JindoMetricsDefinition(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1908AAA48(v1, (uint64_t)v8, &qword_1EE1EA8F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
    return sub_190A487D8();
  sub_1908BD0B4((uint64_t)v8, (uint64_t)v5, type metadata accessor for JindoMetricsDefinition);
  sub_190A487D8();
  sub_190A487F0();
  sub_190A487F0();
  MetricsRequest.hash(into:)();
  MetricsRequest.hash(into:)();
  MetricsRequest.hash(into:)();
  MetricsRequest.hash(into:)();
  return sub_1908B5150((uint64_t)v5, type metadata accessor for JindoMetricsDefinition);
}

BOOL sub_190922820(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  unint64_t v14;
  int v15;
  _DWORD *v16;
  int v17;
  unint64_t v18;
  uint64_t v20;

  v4 = sub_190A46EAC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v20 - v9, a2, v4);
  v12 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  v13 = v12(v10, v4);
  v14 = 0;
  v15 = *MEMORY[0x1E0CDB330];
  v16 = (_DWORD *)MEMORY[0x1E0CDB368];
  if (v13 != *MEMORY[0x1E0CDB330])
  {
    if (v13 == *MEMORY[0x1E0CDB368])
    {
      v14 = 1;
      goto LABEL_24;
    }
    if (v13 == *MEMORY[0x1E0CDB370])
    {
      v14 = 2;
      goto LABEL_24;
    }
    if (v13 == *MEMORY[0x1E0CDB358])
      goto LABEL_7;
    if (v13 == *MEMORY[0x1E0CDB328])
    {
      v14 = 4;
    }
    else if (v13 == *MEMORY[0x1E0CDB338])
    {
      v14 = 5;
    }
    else if (v13 == *MEMORY[0x1E0CDB300])
    {
      v14 = 6;
    }
    else if (v13 == *MEMORY[0x1E0CDB348])
    {
      v14 = 7;
    }
    else if (v13 == *MEMORY[0x1E0CDB340])
    {
      v14 = 8;
    }
    else if (v13 == *MEMORY[0x1E0CDB350])
    {
      v14 = 9;
    }
    else if (v13 == *MEMORY[0x1E0CDB318])
    {
      v14 = 10;
    }
    else
    {
      if (v13 != *MEMORY[0x1E0CDB320])
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_7:
        v14 = 3;
        goto LABEL_24;
      }
      v14 = 11;
    }
  }
LABEL_24:
  v11(v8, a1, v4);
  v17 = v12(v8, v4);
  if (v17 == v15)
  {
    v18 = 0;
  }
  else if (v17 == *v16)
  {
    v18 = 1;
  }
  else if (v17 == *MEMORY[0x1E0CDB370])
  {
    v18 = 2;
  }
  else
  {
    if (v17 != *MEMORY[0x1E0CDB358])
    {
      if (v17 == *MEMORY[0x1E0CDB328])
      {
        v18 = 4;
        return v14 >= v18;
      }
      if (v17 == *MEMORY[0x1E0CDB338])
      {
        v18 = 5;
        return v14 >= v18;
      }
      if (v17 == *MEMORY[0x1E0CDB300])
      {
        v18 = 6;
        return v14 >= v18;
      }
      if (v17 == *MEMORY[0x1E0CDB348])
      {
        v18 = 7;
        return v14 >= v18;
      }
      if (v17 == *MEMORY[0x1E0CDB340])
      {
        v18 = 8;
        return v14 >= v18;
      }
      if (v17 == *MEMORY[0x1E0CDB350])
      {
        v18 = 9;
        return v14 >= v18;
      }
      if (v17 == *MEMORY[0x1E0CDB318])
      {
        v18 = 10;
        return v14 >= v18;
      }
      if (v17 == *MEMORY[0x1E0CDB320])
      {
        v18 = 11;
        return v14 >= v18;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    v18 = 3;
  }
  return v14 >= v18;
}

BOOL _s9WidgetKit25ActivityMetricsDefinitionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, int *);
  uint64_t *v24;
  double *v25;
  BOOL v26;
  char v27;
  uint64_t v28;
  double *v29;

  v4 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v5 = *((_QWORD *)v4 - 1);
  MEMORY[0x1E0C80A78](v4);
  v7 = (double *)((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA6D0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (double *)((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v28 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v28 - v18;
  if ((_s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0(a1, a2) & 1) == 0)
    return 0;
  v29 = v7;
  v20 = type metadata accessor for ActivityMetricsDefinition(0);
  sub_1908AAA48(a1 + *(int *)(v20 + 20), (uint64_t)v19, &qword_1EE1EA8F0);
  sub_1908AAA48(a2 + *(int *)(v20 + 20), (uint64_t)v17, &qword_1EE1EA8F0);
  v21 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1908AAA48((uint64_t)v19, (uint64_t)v10, &qword_1EE1EA8F0);
  sub_1908AAA48((uint64_t)v17, v21, &qword_1EE1EA8F0);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v5 + 48);
  if (v22((uint64_t)v10, 1, v4) == 1)
  {
    sub_1908AA544((uint64_t)v17, &qword_1EE1EA8F0);
    sub_1908AA544((uint64_t)v19, &qword_1EE1EA8F0);
    if (v22(v21, 1, v4) == 1)
    {
      sub_1908AA544((uint64_t)v10, &qword_1EE1EA8F0);
      return 1;
    }
    v24 = &qword_1EE1EA6D0;
    goto LABEL_20;
  }
  sub_1908AAA48((uint64_t)v10, (uint64_t)v14, &qword_1EE1EA8F0);
  if (v22(v21, 1, v4) == 1)
  {
    v24 = &qword_1EE1EA6D0;
LABEL_19:
    sub_1908AA544((uint64_t)v17, &qword_1EE1EA8F0);
    sub_1908AA544((uint64_t)v19, &qword_1EE1EA8F0);
    sub_1908B5150((uint64_t)v14, type metadata accessor for JindoMetricsDefinition);
LABEL_20:
    sub_1908AA544((uint64_t)v10, v24);
    return 0;
  }
  v25 = v29;
  sub_1908BD0B4(v21, (uint64_t)v29, type metadata accessor for JindoMetricsDefinition);
  v26 = *v14 == *v25 && v14[1] == v25[1];
  if (!v26
    || (_s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0((uint64_t)v14 + v4[5], (uint64_t)v25 + v4[5]) & 1) == 0
    || (_s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0((uint64_t)v14 + v4[6], (uint64_t)v25 + v4[6]) & 1) == 0
    || (_s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0((uint64_t)v14 + v4[7], (uint64_t)v25 + v4[7]) & 1) == 0)
  {
    sub_1908B5150((uint64_t)v25, type metadata accessor for JindoMetricsDefinition);
    v24 = &qword_1EE1EA8F0;
    goto LABEL_19;
  }
  v27 = _s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0((uint64_t)v14 + v4[8], (uint64_t)v25 + v4[8]);
  sub_1908B5150((uint64_t)v25, type metadata accessor for JindoMetricsDefinition);
  sub_1908AA544((uint64_t)v17, &qword_1EE1EA8F0);
  sub_1908AA544((uint64_t)v19, &qword_1EE1EA8F0);
  sub_1908B5150((uint64_t)v14, type metadata accessor for JindoMetricsDefinition);
  sub_1908AA544((uint64_t)v10, &qword_1EE1EA8F0);
  return (v27 & 1) != 0;
}

uint64_t _s9WidgetKit22JindoMetricsDefinitionV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  BOOL v2;
  int *v5;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2
    && (v5 = (int *)type metadata accessor for JindoMetricsDefinition(0),
        (_s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v5[5], (uint64_t)a2 + v5[5]) & 1) != 0)
    && (_s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v5[6], (uint64_t)a2 + v5[6]) & 1) != 0
    && (_s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v5[7], (uint64_t)a2 + v5[7]) & 1) != 0)
  {
    return _s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v5[8], (uint64_t)a2 + v5[8]);
  }
  else
  {
    return 0;
  }
}

uint64_t _s9WidgetKit14MetricsRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  double v20;
  double v21;
  uint64_t result;
  double v23;
  double v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;

  v4 = sub_190A46EE8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA698);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v29 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v29 - v18;
  v20 = *(double *)a1;
  v21 = *(double *)a2;
  if ((*(_BYTE *)(a1 + 16) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) != 0 || v20 != v21)
      return 0;
    goto LABEL_8;
  }
  if ((*(_BYTE *)(a2 + 16) & 1) == 0)
    return 0;
  result = 0;
  if (v20 == v21 && *(double *)(a1 + 8) == *(double *)(a2 + 8))
  {
LABEL_8:
    v23 = *(double *)(a1 + 24);
    v24 = *(double *)(a2 + 24);
    if ((*(_BYTE *)(a1 + 40) & 1) != 0)
    {
      if ((*(_BYTE *)(a2 + 40) & 1) == 0)
        return 0;
      result = 0;
      if (v23 != v24 || *(double *)(a1 + 32) != *(double *)(a2 + 32))
        return result;
    }
    else if ((*(_BYTE *)(a2 + 40) & 1) != 0 || v23 != v24)
    {
      return 0;
    }
    if (*(double *)(a1 + 48) == *(double *)(a2 + 48))
    {
      if ((*(_BYTE *)(a1 + 88) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 88))
          return 0;
      }
      else if ((*(_BYTE *)(a2 + 88) & 1) != 0 || (sub_190A46654() & 1) == 0)
      {
        return 0;
      }
      if (*(double *)(a1 + 96) != *(double *)(a2 + 96) || *(double *)(a1 + 104) != *(double *)(a2 + 104))
        return 0;
      v30 = type metadata accessor for MetricsRequest(0);
      sub_1908AAA48(a1 + *(int *)(v30 + 40), (uint64_t)v19, qword_1EE1EAFB0);
      sub_1908AAA48(a2 + *(int *)(v30 + 40), (uint64_t)v17, qword_1EE1EAFB0);
      v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_1908AAA48((uint64_t)v19, (uint64_t)v10, qword_1EE1EAFB0);
      sub_1908AAA48((uint64_t)v17, v25, qword_1EE1EAFB0);
      v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v26((uint64_t)v10, 1, v4) == 1)
      {
        sub_1908AA544((uint64_t)v17, qword_1EE1EAFB0);
        sub_1908AA544((uint64_t)v19, qword_1EE1EAFB0);
        if (v26(v25, 1, v4) == 1)
        {
          sub_1908AA544((uint64_t)v10, qword_1EE1EAFB0);
          return 1;
        }
        goto LABEL_28;
      }
      sub_1908AAA48((uint64_t)v10, (uint64_t)v14, qword_1EE1EAFB0);
      if (v26(v25, 1, v4) == 1)
      {
        sub_1908AA544((uint64_t)v17, qword_1EE1EAFB0);
        sub_1908AA544((uint64_t)v19, qword_1EE1EAFB0);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_28:
        sub_1908AA544((uint64_t)v10, &qword_1EE1EA698);
        return 0;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v25, v4);
      sub_1908AA2F4(&qword_1EE1ED1B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDB770], MEMORY[0x1E0CDB788]);
      v27 = sub_190A47AAC();
      v28 = *(void (**)(char *, uint64_t))(v5 + 8);
      v28(v7, v4);
      sub_1908AA544((uint64_t)v17, qword_1EE1EAFB0);
      sub_1908AA544((uint64_t)v19, qword_1EE1EAFB0);
      v28(v14, v4);
      sub_1908AA544((uint64_t)v10, qword_1EE1EAFB0);
      if ((v27 & 1) != 0)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for JindoMetricsDefinition(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1ECF6BF40);
}

uint64_t sub_1909233F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MetricsRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_190923438()
{
  unint64_t result;

  result = qword_1EE1EACA8;
  if (!qword_1EE1EACA8)
  {
    result = MEMORY[0x19401429C](&unk_190A4E340, &type metadata for JindoMetricsDefinition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EACA8);
  }
  return result;
}

unint64_t sub_19092347C()
{
  unint64_t result;

  result = qword_1EE1EABC0;
  if (!qword_1EE1EABC0)
  {
    result = MEMORY[0x19401429C](&unk_190A4E2F0, &type metadata for DimensionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EABC0);
  }
  return result;
}

uint64_t type metadata accessor for ActivityMetricsDefinition(uint64_t a1)
{
  return sub_1908B0210(a1, qword_1ECF6C388);
}

unint64_t sub_1909234D4()
{
  unint64_t result;

  result = qword_1EE1EACC0;
  if (!qword_1EE1EACC0)
  {
    result = MEMORY[0x19401429C](&unk_190A4E2A0, &type metadata for ActivityMetricsDefinition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EACC0);
  }
  return result;
}

uint64_t sub_190923518()
{
  return sub_1908AA2F4(&qword_1EE1ED178, type metadata accessor for MetricsRequest, (uint64_t)&protocol conformance descriptor for MetricsRequest);
}

uint64_t sub_190923544()
{
  return sub_1908AA2F4(&qword_1EE1ED180, type metadata accessor for JindoMetricsDefinition, (uint64_t)&protocol conformance descriptor for JindoMetricsDefinition);
}

unint64_t sub_190923574()
{
  unint64_t result;

  result = qword_1EE1ED188;
  if (!qword_1EE1ED188)
  {
    result = MEMORY[0x19401429C](&protocol conformance descriptor for DimensionRequest, &type metadata for DimensionRequest);
    atomic_store(result, (unint64_t *)&qword_1EE1ED188);
  }
  return result;
}

uint64_t sub_1909235B8()
{
  return sub_1908AA2F4(&qword_1EE1E6A10, type metadata accessor for ActivityMetricsDefinition, (uint64_t)&protocol conformance descriptor for ActivityMetricsDefinition);
}

uint64_t sub_1909235E4()
{
  return sub_1908AA2F4(&qword_1ECF6AA38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDB388], MEMORY[0x1E0CDB3B8]);
}

_QWORD *initializeBufferWithCopyOfBuffer for MetricsRequest(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  void *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
    v5 = *(int *)(a3 + 40);
    v6 = (void *)(a1 + v5);
    v7 = (char *)a2 + v5;
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    v8 = sub_190A46EE8();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for MetricsRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 40);
  v3 = sub_190A46EE8();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

uint64_t initializeWithCopy for MetricsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v4 = *(int *)(a3 + 40);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  v7 = sub_190A46EE8();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithCopy for MetricsRequest(uint64_t a1, __int128 *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v4 = *a2;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)a1 = v4;
  v5 = *(__int128 *)((char *)a2 + 24);
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  v6 = *(__int128 *)((char *)a2 + 56);
  v7 = *(__int128 *)((char *)a2 + 72);
  *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
  *(_OWORD *)(a1 + 72) = v7;
  *(_OWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
  v8 = *(int *)(a3 + 40);
  v9 = (void *)(a1 + v8);
  v10 = (char *)a2 + v8;
  v11 = sub_190A46EE8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t initializeWithTake for MetricsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v4 = *(int *)(a3 + 40);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  v7 = sub_190A46EE8();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for MetricsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v4 = *(int *)(a3 + 40);
  v5 = (void *)(a1 + v4);
  v6 = (void *)(a2 + v4);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  v7 = sub_190A46EE8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190923C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MetricsRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_190923CC4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 16) = -(char)a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

void sub_190923D38()
{
  unint64_t v0;

  sub_1908BBFB0(319, &qword_1ECF6BF38, (void (*)(uint64_t))MEMORY[0x1E0CDB770]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *initializeBufferWithCopyOfBuffer for JindoMetricsDefinition(_OWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    *(_OWORD *)v8 = *(_OWORD *)((char *)a2 + v7);
    v8[16] = *((_BYTE *)a2 + v7 + 16);
    v8[40] = *((_BYTE *)a2 + v7 + 40);
    *(_OWORD *)(v8 + 24) = *(_OWORD *)((char *)a2 + v7 + 24);
    *((_QWORD *)v8 + 6) = *(_QWORD *)((char *)a2 + v7 + 48);
    *(_OWORD *)(v8 + 72) = *(_OWORD *)((char *)a2 + v7 + 72);
    v8[88] = *((_BYTE *)a2 + v7 + 88);
    *(_OWORD *)(v8 + 56) = *(_OWORD *)((char *)a2 + v7 + 56);
    *((_OWORD *)v8 + 6) = *(_OWORD *)((char *)a2 + v7 + 96);
    v10 = type metadata accessor for MetricsRequest(0);
    v11 = *(int *)(v10 + 40);
    v12 = &v8[v11];
    v13 = &v9[v11];
    v14 = sub_190A46EE8();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    if (v16(v13, 1, v14))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v19 = a3[6];
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    *(_OWORD *)v20 = *(_OWORD *)v21;
    v20[16] = v21[16];
    *(_OWORD *)(v20 + 24) = *(_OWORD *)(v21 + 24);
    v20[40] = v21[40];
    *((_QWORD *)v20 + 6) = *((_QWORD *)v21 + 6);
    *(_OWORD *)(v20 + 56) = *(_OWORD *)(v21 + 56);
    *(_OWORD *)(v20 + 72) = *(_OWORD *)(v21 + 72);
    v20[88] = v21[88];
    *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
    v22 = *(int *)(v10 + 40);
    v23 = &v20[v22];
    v24 = &v21[v22];
    if (v16(&v21[v22], 1, v14))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v23, v24, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
    }
    v26 = a3[7];
    v27 = (char *)v4 + v26;
    v28 = (char *)a2 + v26;
    *(_OWORD *)v27 = *(_OWORD *)v28;
    v27[16] = v28[16];
    *(_OWORD *)(v27 + 24) = *(_OWORD *)(v28 + 24);
    v27[40] = v28[40];
    *((_QWORD *)v27 + 6) = *((_QWORD *)v28 + 6);
    *(_OWORD *)(v27 + 56) = *(_OWORD *)(v28 + 56);
    *(_OWORD *)(v27 + 72) = *(_OWORD *)(v28 + 72);
    v27[88] = v28[88];
    *((_OWORD *)v27 + 6) = *((_OWORD *)v28 + 6);
    v29 = *(int *)(v10 + 40);
    v30 = &v27[v29];
    v31 = &v28[v29];
    if (v16(&v28[v29], 1, v14))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v30, v31, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v30, 0, 1, v14);
    }
    v33 = a3[8];
    v34 = (char *)v4 + v33;
    v35 = (char *)a2 + v33;
    *(_OWORD *)v34 = *(_OWORD *)v35;
    v34[16] = v35[16];
    *(_OWORD *)(v34 + 24) = *(_OWORD *)(v35 + 24);
    v34[40] = v35[40];
    *((_QWORD *)v34 + 6) = *((_QWORD *)v35 + 6);
    *(_OWORD *)(v34 + 56) = *(_OWORD *)(v35 + 56);
    *(_OWORD *)(v34 + 72) = *(_OWORD *)(v35 + 72);
    v34[88] = v35[88];
    *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
    v36 = *(int *)(v10 + 40);
    v37 = &v34[v36];
    v38 = &v35[v36];
    if (v16(&v35[v36], 1, v14))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v37, v38, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v37, 0, 1, v14);
    }
  }
  return v4;
}

uint64_t destroy for JindoMetricsDefinition(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v4 = a1 + a2[5];
  v5 = type metadata accessor for MetricsRequest(0);
  v6 = *(int *)(v5 + 40);
  v7 = v4 + v6;
  v8 = sub_190A46EE8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v6 = *(int *)(v5 + 40);
  }
  v11 = a1 + v6 + a2[6];
  if (!v10(v11, 1, v8))
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
    v6 = *(int *)(v5 + 40);
  }
  v12 = a1 + v6 + a2[7];
  if (!v10(v12, 1, v8))
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
    v6 = *(int *)(v5 + 40);
  }
  v13 = a1 + v6 + a2[8];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v13, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v13, v8);
  return result;
}

_OWORD *initializeWithCopy for JindoMetricsDefinition(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_OWORD *)v7 = *(_OWORD *)((char *)a2 + v6);
  v7[16] = *((_BYTE *)a2 + v6 + 16);
  v7[40] = *((_BYTE *)a2 + v6 + 40);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)((char *)a2 + v6 + 24);
  *((_QWORD *)v7 + 6) = *(_QWORD *)((char *)a2 + v6 + 48);
  *(_OWORD *)(v7 + 72) = *(_OWORD *)((char *)a2 + v6 + 72);
  v7[88] = *((_BYTE *)a2 + v6 + 88);
  *(_OWORD *)(v7 + 56) = *(_OWORD *)((char *)a2 + v6 + 56);
  *((_OWORD *)v7 + 6) = *(_OWORD *)((char *)a2 + v6 + 96);
  v9 = type metadata accessor for MetricsRequest(0);
  v10 = *(int *)(v9 + 40);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_190A46EE8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  *(_OWORD *)v18 = *(_OWORD *)v19;
  v18[16] = v19[16];
  *(_OWORD *)(v18 + 24) = *(_OWORD *)(v19 + 24);
  v18[40] = v19[40];
  *((_QWORD *)v18 + 6) = *((_QWORD *)v19 + 6);
  *(_OWORD *)(v18 + 56) = *(_OWORD *)(v19 + 56);
  *(_OWORD *)(v18 + 72) = *(_OWORD *)(v19 + 72);
  v18[88] = v19[88];
  *((_OWORD *)v18 + 6) = *((_OWORD *)v19 + 6);
  v20 = *(int *)(v9 + 40);
  v21 = &v18[v20];
  v22 = &v19[v20];
  if (v15(&v19[v20], 1, v13))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v21, v22, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v21, 0, 1, v13);
  }
  v24 = a3[7];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  *(_OWORD *)v25 = *(_OWORD *)v26;
  v25[16] = v26[16];
  *(_OWORD *)(v25 + 24) = *(_OWORD *)(v26 + 24);
  v25[40] = v26[40];
  *((_QWORD *)v25 + 6) = *((_QWORD *)v26 + 6);
  *(_OWORD *)(v25 + 56) = *(_OWORD *)(v26 + 56);
  *(_OWORD *)(v25 + 72) = *(_OWORD *)(v26 + 72);
  v25[88] = v26[88];
  *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
  v27 = *(int *)(v9 + 40);
  v28 = &v25[v27];
  v29 = &v26[v27];
  if (v15(&v26[v27], 1, v13))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v28, v29, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v28, 0, 1, v13);
  }
  v31 = a3[8];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  *(_OWORD *)v32 = *(_OWORD *)v33;
  v32[16] = v33[16];
  *(_OWORD *)(v32 + 24) = *(_OWORD *)(v33 + 24);
  v32[40] = v33[40];
  *((_QWORD *)v32 + 6) = *((_QWORD *)v33 + 6);
  *(_OWORD *)(v32 + 56) = *(_OWORD *)(v33 + 56);
  *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
  v32[88] = v33[88];
  *((_OWORD *)v32 + 6) = *((_OWORD *)v33 + 6);
  v34 = *(int *)(v9 + 40);
  v35 = &v32[v34];
  v36 = &v33[v34];
  if (v15(&v33[v34], 1, v13))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v35, v36, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v35, 0, 1, v13);
  }
  return a1;
}

_QWORD *assignWithCopy for JindoMetricsDefinition(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  char *v57;
  char *v58;
  int v59;
  int v60;
  uint64_t v61;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = *(_OWORD *)((char *)a2 + v6);
  v7[16] = *((_BYTE *)a2 + v6 + 16);
  *(_OWORD *)v7 = v9;
  v10 = *(_OWORD *)((char *)a2 + v6 + 24);
  v7[40] = *((_BYTE *)a2 + v6 + 40);
  *(_OWORD *)(v7 + 24) = v10;
  *((_QWORD *)v7 + 6) = *(_QWORD *)((char *)a2 + v6 + 48);
  v11 = *(_OWORD *)((char *)a2 + v6 + 56);
  v12 = *(_OWORD *)((char *)a2 + v6 + 72);
  v7[88] = *((_BYTE *)a2 + v6 + 88);
  *(_OWORD *)(v7 + 72) = v12;
  *(_OWORD *)(v7 + 56) = v11;
  *((_QWORD *)v7 + 12) = *(_QWORD *)((char *)a2 + v6 + 96);
  *((_QWORD *)v7 + 13) = *(_QWORD *)((char *)a2 + v6 + 104);
  v13 = type metadata accessor for MetricsRequest(0);
  v14 = *(int *)(v13 + 40);
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = sub_190A46EE8();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v15, v16, v17);
LABEL_7:
  v23 = a3[6];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = *(_OWORD *)v25;
  v24[16] = v25[16];
  *(_OWORD *)v24 = v26;
  v27 = *(_OWORD *)(v25 + 24);
  v24[40] = v25[40];
  *(_OWORD *)(v24 + 24) = v27;
  *((_QWORD *)v24 + 6) = *((_QWORD *)v25 + 6);
  v28 = *(_OWORD *)(v25 + 56);
  v29 = *(_OWORD *)(v25 + 72);
  v24[88] = v25[88];
  *(_OWORD *)(v24 + 72) = v29;
  *(_OWORD *)(v24 + 56) = v28;
  *((_QWORD *)v24 + 12) = *((_QWORD *)v25 + 12);
  *((_QWORD *)v24 + 13) = *((_QWORD *)v25 + 13);
  v30 = *(int *)(v13 + 40);
  v31 = &v24[v30];
  v32 = &v25[v30];
  v33 = v19(&v24[v30], 1, v17);
  v34 = v19(v32, 1, v17);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v31, v32, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v31, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v31, v17);
LABEL_12:
    v35 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v31, v32, v17);
LABEL_13:
  v36 = a3[7];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = *(_OWORD *)v38;
  v37[16] = v38[16];
  *(_OWORD *)v37 = v39;
  v40 = *(_OWORD *)(v38 + 24);
  v37[40] = v38[40];
  *(_OWORD *)(v37 + 24) = v40;
  *((_QWORD *)v37 + 6) = *((_QWORD *)v38 + 6);
  v41 = *(_OWORD *)(v38 + 56);
  v42 = *(_OWORD *)(v38 + 72);
  v37[88] = v38[88];
  *(_OWORD *)(v37 + 72) = v42;
  *(_OWORD *)(v37 + 56) = v41;
  *((_QWORD *)v37 + 12) = *((_QWORD *)v38 + 12);
  *((_QWORD *)v37 + 13) = *((_QWORD *)v38 + 13);
  v43 = *(int *)(v13 + 40);
  v44 = &v37[v43];
  v45 = &v38[v43];
  v46 = v19(&v37[v43], 1, v17);
  v47 = v19(v45, 1, v17);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v44, v45, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v44, 0, 1, v17);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v44, v17);
LABEL_18:
    v48 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v44, v45, v17);
LABEL_19:
  v49 = a3[8];
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = *(_OWORD *)v51;
  v50[16] = v51[16];
  *(_OWORD *)v50 = v52;
  v53 = *(_OWORD *)(v51 + 24);
  v50[40] = v51[40];
  *(_OWORD *)(v50 + 24) = v53;
  *((_QWORD *)v50 + 6) = *((_QWORD *)v51 + 6);
  v54 = *(_OWORD *)(v51 + 56);
  v55 = *(_OWORD *)(v51 + 72);
  v50[88] = v51[88];
  *(_OWORD *)(v50 + 72) = v55;
  *(_OWORD *)(v50 + 56) = v54;
  *((_QWORD *)v50 + 12) = *((_QWORD *)v51 + 12);
  *((_QWORD *)v50 + 13) = *((_QWORD *)v51 + 13);
  v56 = *(int *)(v13 + 40);
  v57 = &v50[v56];
  v58 = &v51[v56];
  v59 = v19(&v50[v56], 1, v17);
  v60 = v19(v58, 1, v17);
  if (!v59)
  {
    if (!v60)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v57, v58, v17);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v57, v17);
    goto LABEL_24;
  }
  if (v60)
  {
LABEL_24:
    v61 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v57, v58, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v57, 0, 1, v17);
  return a1;
}

_OWORD *initializeWithTake for JindoMetricsDefinition(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_OWORD *)v7 = *(_OWORD *)((char *)a2 + v6);
  v7[16] = *((_BYTE *)a2 + v6 + 16);
  v7[40] = *((_BYTE *)a2 + v6 + 40);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)((char *)a2 + v6 + 24);
  *((_QWORD *)v7 + 6) = *(_QWORD *)((char *)a2 + v6 + 48);
  *(_OWORD *)(v7 + 72) = *(_OWORD *)((char *)a2 + v6 + 72);
  v7[88] = *((_BYTE *)a2 + v6 + 88);
  *(_OWORD *)(v7 + 56) = *(_OWORD *)((char *)a2 + v6 + 56);
  *((_OWORD *)v7 + 6) = *(_OWORD *)((char *)a2 + v6 + 96);
  v9 = type metadata accessor for MetricsRequest(0);
  v10 = *(int *)(v9 + 40);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_190A46EE8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  *(_OWORD *)v18 = *(_OWORD *)v19;
  v18[16] = v19[16];
  *(_OWORD *)(v18 + 24) = *(_OWORD *)(v19 + 24);
  v18[40] = v19[40];
  *((_QWORD *)v18 + 6) = *((_QWORD *)v19 + 6);
  *(_OWORD *)(v18 + 56) = *(_OWORD *)(v19 + 56);
  *(_OWORD *)(v18 + 72) = *(_OWORD *)(v19 + 72);
  v18[88] = v19[88];
  *((_OWORD *)v18 + 6) = *((_OWORD *)v19 + 6);
  v20 = *(int *)(v9 + 40);
  v21 = &v18[v20];
  v22 = &v19[v20];
  if (v15(&v19[v20], 1, v13))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v21, v22, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v21, 0, 1, v13);
  }
  v24 = a3[7];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  *(_OWORD *)v25 = *(_OWORD *)v26;
  v25[16] = v26[16];
  *(_OWORD *)(v25 + 24) = *(_OWORD *)(v26 + 24);
  v25[40] = v26[40];
  *((_QWORD *)v25 + 6) = *((_QWORD *)v26 + 6);
  *(_OWORD *)(v25 + 56) = *(_OWORD *)(v26 + 56);
  *(_OWORD *)(v25 + 72) = *(_OWORD *)(v26 + 72);
  v25[88] = v26[88];
  *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
  v27 = *(int *)(v9 + 40);
  v28 = &v25[v27];
  v29 = &v26[v27];
  if (v15(&v26[v27], 1, v13))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v28, v29, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v28, 0, 1, v13);
  }
  v31 = a3[8];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  *(_OWORD *)v32 = *(_OWORD *)v33;
  v32[16] = v33[16];
  *(_OWORD *)(v32 + 24) = *(_OWORD *)(v33 + 24);
  v32[40] = v33[40];
  *((_QWORD *)v32 + 6) = *((_QWORD *)v33 + 6);
  *(_OWORD *)(v32 + 56) = *(_OWORD *)(v33 + 56);
  *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
  v32[88] = v33[88];
  *((_OWORD *)v32 + 6) = *((_OWORD *)v33 + 6);
  v34 = *(int *)(v9 + 40);
  v35 = &v32[v34];
  v36 = &v33[v34];
  if (v15(&v33[v34], 1, v13))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v35, v36, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v35, 0, 1, v13);
  }
  return a1;
}

_OWORD *assignWithTake for JindoMetricsDefinition(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_OWORD *)v7 = *(_OWORD *)((char *)a2 + v6);
  v7[16] = *((_BYTE *)a2 + v6 + 16);
  v7[40] = *((_BYTE *)a2 + v6 + 40);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)((char *)a2 + v6 + 24);
  *((_QWORD *)v7 + 6) = *(_QWORD *)((char *)a2 + v6 + 48);
  *(_OWORD *)(v7 + 72) = *(_OWORD *)((char *)a2 + v6 + 72);
  v7[88] = *((_BYTE *)a2 + v6 + 88);
  *(_OWORD *)(v7 + 56) = *(_OWORD *)((char *)a2 + v6 + 56);
  *((_OWORD *)v7 + 6) = *(_OWORD *)((char *)a2 + v6 + 96);
  v9 = type metadata accessor for MetricsRequest(0);
  v10 = *(int *)(v9 + 40);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_190A46EE8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  v19 = a3[6];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  v20[16] = v21[16];
  *(_OWORD *)(v20 + 24) = *(_OWORD *)(v21 + 24);
  v20[40] = v21[40];
  *((_QWORD *)v20 + 6) = *((_QWORD *)v21 + 6);
  *(_OWORD *)(v20 + 56) = *(_OWORD *)(v21 + 56);
  *(_OWORD *)(v20 + 72) = *(_OWORD *)(v21 + 72);
  v20[88] = v21[88];
  *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
  v22 = *(int *)(v9 + 40);
  v23 = &v20[v22];
  v24 = &v21[v22];
  v25 = v15(&v20[v22], 1, v13);
  v26 = v15(v24, 1, v13);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v23, v24, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v23, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v13);
LABEL_12:
    v27 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v23, v24, v13);
LABEL_13:
  v28 = a3[7];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  *(_OWORD *)v29 = *(_OWORD *)v30;
  v29[16] = v30[16];
  *(_OWORD *)(v29 + 24) = *(_OWORD *)(v30 + 24);
  v29[40] = v30[40];
  *((_QWORD *)v29 + 6) = *((_QWORD *)v30 + 6);
  *(_OWORD *)(v29 + 56) = *(_OWORD *)(v30 + 56);
  *(_OWORD *)(v29 + 72) = *(_OWORD *)(v30 + 72);
  v29[88] = v30[88];
  *((_OWORD *)v29 + 6) = *((_OWORD *)v30 + 6);
  v31 = *(int *)(v9 + 40);
  v32 = &v29[v31];
  v33 = &v30[v31];
  v34 = v15(&v29[v31], 1, v13);
  v35 = v15(v33, 1, v13);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v32, v33, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v32, 0, 1, v13);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v32, v13);
LABEL_18:
    v36 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v32, v33, v13);
LABEL_19:
  v37 = a3[8];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  *(_OWORD *)v38 = *(_OWORD *)v39;
  v38[16] = v39[16];
  *(_OWORD *)(v38 + 24) = *(_OWORD *)(v39 + 24);
  v38[40] = v39[40];
  *((_QWORD *)v38 + 6) = *((_QWORD *)v39 + 6);
  *(_OWORD *)(v38 + 56) = *(_OWORD *)(v39 + 56);
  *(_OWORD *)(v38 + 72) = *(_OWORD *)(v39 + 72);
  v38[88] = v39[88];
  *((_OWORD *)v38 + 6) = *((_OWORD *)v39 + 6);
  v40 = *(int *)(v9 + 40);
  v41 = &v38[v40];
  v42 = &v39[v40];
  v43 = v15(&v38[v40], 1, v13);
  v44 = v15(v42, 1, v13);
  if (!v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v41, v42, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v41, v13);
    goto LABEL_24;
  }
  if (v44)
  {
LABEL_24:
    v45 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v41, v42, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v41, 0, 1, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for JindoMetricsDefinition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_190925314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for MetricsRequest(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v6);
}

uint64_t storeEnumTagSinglePayload for JindoMetricsDefinition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19092536C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for MetricsRequest(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1 + *(int *)(a4 + 20), a2, a2, v7);
}

uint64_t sub_1909253BC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MetricsRequest(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DimensionRequest(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DimensionRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1909254D4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1909254DC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DimensionRequest()
{
  return &type metadata for DimensionRequest;
}

_QWORD *initializeBufferWithCopyOfBuffer for ActivityMetricsDefinition(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v51;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    v7 = type metadata accessor for MetricsRequest(0);
    v8 = *(int *)(v7 + 40);
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_190A46EE8();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = *(int *)(a3 + 20);
    v17 = (_OWORD *)((char *)v4 + v16);
    v18 = (_OWORD *)((char *)a2 + v16);
    v19 = (int *)type metadata accessor for JindoMetricsDefinition(0);
    v20 = *((_QWORD *)v19 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v51 = v20;
      *v17 = *v18;
      v22 = v19[5];
      v23 = (char *)v17 + v22;
      v24 = (char *)v18 + v22;
      v23[16] = v24[16];
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *(_OWORD *)(v23 + 24) = *(_OWORD *)(v24 + 24);
      v23[40] = v24[40];
      *((_QWORD *)v23 + 6) = *((_QWORD *)v24 + 6);
      *(_OWORD *)(v23 + 56) = *(_OWORD *)(v24 + 56);
      *(_OWORD *)(v23 + 72) = *(_OWORD *)(v24 + 72);
      v23[88] = v24[88];
      *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
      v25 = *(int *)(v7 + 40);
      v26 = &v23[v25];
      v27 = &v24[v25];
      if (v13(&v24[v25], 1, v11))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v26, v27, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, v11);
      }
      v29 = v19[6];
      v30 = (char *)v17 + v29;
      v31 = (char *)v18 + v29;
      *(_OWORD *)v30 = *(_OWORD *)v31;
      v30[16] = v31[16];
      *(_OWORD *)(v30 + 24) = *(_OWORD *)(v31 + 24);
      v30[40] = v31[40];
      *((_QWORD *)v30 + 6) = *((_QWORD *)v31 + 6);
      *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
      *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
      v30[88] = v31[88];
      *((_OWORD *)v30 + 6) = *((_OWORD *)v31 + 6);
      v32 = *(int *)(v7 + 40);
      v33 = &v30[v32];
      v34 = &v31[v32];
      if (v13(&v31[v32], 1, v11))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v33, v34, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v33, 0, 1, v11);
      }
      v36 = v19[7];
      v37 = (char *)v17 + v36;
      v38 = (char *)v18 + v36;
      *(_OWORD *)v37 = *(_OWORD *)v38;
      v37[16] = v38[16];
      *(_OWORD *)(v37 + 24) = *(_OWORD *)(v38 + 24);
      v37[40] = v38[40];
      *((_QWORD *)v37 + 6) = *((_QWORD *)v38 + 6);
      *(_OWORD *)(v37 + 56) = *(_OWORD *)(v38 + 56);
      *(_OWORD *)(v37 + 72) = *(_OWORD *)(v38 + 72);
      v37[88] = v38[88];
      *((_OWORD *)v37 + 6) = *((_OWORD *)v38 + 6);
      v39 = *(int *)(v7 + 40);
      v40 = &v37[v39];
      v41 = &v38[v39];
      if (v13(&v38[v39], 1, v11))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v40, v41, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v40, 0, 1, v11);
      }
      v43 = v19[8];
      v44 = (char *)v17 + v43;
      v45 = (char *)v18 + v43;
      *(_OWORD *)v44 = *(_OWORD *)v45;
      v44[16] = v45[16];
      *(_OWORD *)(v44 + 24) = *(_OWORD *)(v45 + 24);
      v44[40] = v45[40];
      *((_QWORD *)v44 + 6) = *((_QWORD *)v45 + 6);
      *(_OWORD *)(v44 + 56) = *(_OWORD *)(v45 + 56);
      *(_OWORD *)(v44 + 72) = *(_OWORD *)(v45 + 72);
      v44[88] = v45[88];
      *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
      v46 = *(int *)(v7 + 40);
      v47 = &v44[v46];
      v48 = &v45[v46];
      if (v13(&v45[v46], 1, v11))
      {
        v49 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v47, v48, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v47, 0, 1, v11);
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v51 + 56))(v17, 0, 1, v19);
    }
  }
  return v4;
}

uint64_t destroy for ActivityMetricsDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  int *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for MetricsRequest(0);
  v5 = a1 + *(int *)(v4 + 40);
  v6 = sub_190A46EE8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v9 = a1 + *(int *)(a2 + 20);
  v10 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10);
  if (!(_DWORD)result)
  {
    v12 = *(int *)(v4 + 40);
    v13 = v9 + v10[5] + v12;
    if (!v8(v13, 1, v6))
    {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13, v6);
      v12 = *(int *)(v4 + 40);
    }
    v14 = v9 + v10[6] + v12;
    if (!v8(v14, 1, v6))
    {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v14, v6);
      v12 = *(int *)(v4 + 40);
    }
    v15 = v9 + v10[7] + v12;
    if (!v8(v15, 1, v6))
    {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v6);
      v12 = *(int *)(v4 + 40);
    }
    v16 = v9 + v10[8] + v12;
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v16, 1, v6);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v16, v6);
  }
  return result;
}

uint64_t initializeWithCopy for ActivityMetricsDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v49;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  v6 = type metadata accessor for MetricsRequest(0);
  v7 = *(int *)(v6 + 40);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_190A46EE8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 20);
  v15 = (_OWORD *)(a1 + v14);
  v16 = (_OWORD *)(a2 + v14);
  v17 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v18 = *((_QWORD *)v17 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v49 = v18;
    *v15 = *v16;
    v20 = v17[5];
    v21 = (char *)v15 + v20;
    v22 = (char *)v16 + v20;
    v21[16] = v22[16];
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + 24) = *(_OWORD *)(v22 + 24);
    v21[40] = v22[40];
    *((_QWORD *)v21 + 6) = *((_QWORD *)v22 + 6);
    *(_OWORD *)(v21 + 56) = *(_OWORD *)(v22 + 56);
    *(_OWORD *)(v21 + 72) = *(_OWORD *)(v22 + 72);
    v21[88] = v22[88];
    *((_OWORD *)v21 + 6) = *((_OWORD *)v22 + 6);
    v23 = *(int *)(v6 + 40);
    v24 = &v21[v23];
    v25 = &v22[v23];
    if (v12(&v22[v23], 1, v10))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v24, v25, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
    }
    v27 = v17[6];
    v28 = (char *)v15 + v27;
    v29 = (char *)v16 + v27;
    *(_OWORD *)v28 = *(_OWORD *)v29;
    v28[16] = v29[16];
    *(_OWORD *)(v28 + 24) = *(_OWORD *)(v29 + 24);
    v28[40] = v29[40];
    *((_QWORD *)v28 + 6) = *((_QWORD *)v29 + 6);
    *(_OWORD *)(v28 + 56) = *(_OWORD *)(v29 + 56);
    *(_OWORD *)(v28 + 72) = *(_OWORD *)(v29 + 72);
    v28[88] = v29[88];
    *((_OWORD *)v28 + 6) = *((_OWORD *)v29 + 6);
    v30 = *(int *)(v6 + 40);
    v31 = &v28[v30];
    v32 = &v29[v30];
    if (v12(&v29[v30], 1, v10))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v31, v32, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v31, 0, 1, v10);
    }
    v34 = v17[7];
    v35 = (char *)v15 + v34;
    v36 = (char *)v16 + v34;
    *(_OWORD *)v35 = *(_OWORD *)v36;
    v35[16] = v36[16];
    *(_OWORD *)(v35 + 24) = *(_OWORD *)(v36 + 24);
    v35[40] = v36[40];
    *((_QWORD *)v35 + 6) = *((_QWORD *)v36 + 6);
    *(_OWORD *)(v35 + 56) = *(_OWORD *)(v36 + 56);
    *(_OWORD *)(v35 + 72) = *(_OWORD *)(v36 + 72);
    v35[88] = v36[88];
    *((_OWORD *)v35 + 6) = *((_OWORD *)v36 + 6);
    v37 = *(int *)(v6 + 40);
    v38 = &v35[v37];
    v39 = &v36[v37];
    if (v12(&v36[v37], 1, v10))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v38, v39, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v38, 0, 1, v10);
    }
    v41 = v17[8];
    v42 = (char *)v15 + v41;
    v43 = (char *)v16 + v41;
    *(_OWORD *)v42 = *(_OWORD *)v43;
    v42[16] = v43[16];
    *(_OWORD *)(v42 + 24) = *(_OWORD *)(v43 + 24);
    v42[40] = v43[40];
    *((_QWORD *)v42 + 6) = *((_QWORD *)v43 + 6);
    *(_OWORD *)(v42 + 56) = *(_OWORD *)(v43 + 56);
    *(_OWORD *)(v42 + 72) = *(_OWORD *)(v43 + 72);
    v42[88] = v43[88];
    *((_OWORD *)v42 + 6) = *((_OWORD *)v43 + 6);
    v44 = *(int *)(v6 + 40);
    v45 = &v42[v44];
    v46 = &v43[v44];
    if (v12(&v43[v44], 1, v10))
    {
      v47 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v45, v46, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v45, 0, 1, v10);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v49 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t assignWithCopy for ActivityMetricsDefinition(uint64_t a1, __int128 *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, int *);
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  size_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  int v52;
  int v53;
  uint64_t v54;
  char *v55;
  char *v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  char *v97;
  char *v98;
  int v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  char *v110;
  char *v111;
  int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  uint64_t v124;
  char *v125;
  char *v126;
  int v127;
  int v128;
  uint64_t v129;

  v6 = *a2;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)a1 = v6;
  v7 = *(__int128 *)((char *)a2 + 24);
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_OWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  v8 = *(__int128 *)((char *)a2 + 56);
  v9 = *(__int128 *)((char *)a2 + 72);
  *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
  *(_OWORD *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
  v10 = type metadata accessor for MetricsRequest(0);
  v11 = *(int *)(v10 + 40);
  v12 = (void *)(a1 + v11);
  v13 = (char *)a2 + v11;
  v14 = sub_190A46EE8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  v129 = v15;
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_7:
  v20 = *(int *)(a3 + 20);
  v21 = (char *)(a1 + v20);
  v22 = (char *)a2 + v20;
  v23 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v24 = *((_QWORD *)v23 - 1);
  v25 = *(uint64_t (**)(char *, uint64_t, int *))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (v27)
    {
      sub_1908B5150((uint64_t)v21, type metadata accessor for JindoMetricsDefinition);
      goto LABEL_13;
    }
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
    v42 = v23[5];
    v43 = &v21[v42];
    v44 = &v22[v42];
    v45 = *(_OWORD *)v44;
    v43[16] = v44[16];
    *(_OWORD *)v43 = v45;
    v46 = *(_OWORD *)(v44 + 24);
    v43[40] = v44[40];
    *(_OWORD *)(v43 + 24) = v46;
    *((_QWORD *)v43 + 6) = *((_QWORD *)v44 + 6);
    v47 = *(_OWORD *)(v44 + 56);
    v48 = *(_OWORD *)(v44 + 72);
    v43[88] = v44[88];
    *(_OWORD *)(v43 + 72) = v48;
    *(_OWORD *)(v43 + 56) = v47;
    *((_QWORD *)v43 + 12) = *((_QWORD *)v44 + 12);
    *((_QWORD *)v43 + 13) = *((_QWORD *)v44 + 13);
    v49 = *(int *)(v10 + 40);
    v50 = &v43[v49];
    v51 = &v44[v49];
    v52 = v16(&v43[v49], 1, v14);
    v53 = v16(v51, 1, v14);
    if (v52)
    {
      if (!v53)
      {
        (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v50, v51, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v50, 0, 1, v14);
        goto LABEL_34;
      }
    }
    else
    {
      if (!v53)
      {
        (*(void (**)(char *, char *, uint64_t))(v129 + 24))(v50, v51, v14);
LABEL_34:
        v89 = v23[6];
        v90 = &v21[v89];
        v91 = &v22[v89];
        v92 = *(_OWORD *)v91;
        v90[16] = v91[16];
        *(_OWORD *)v90 = v92;
        v93 = *(_OWORD *)(v91 + 24);
        v90[40] = v91[40];
        *(_OWORD *)(v90 + 24) = v93;
        *((_QWORD *)v90 + 6) = *((_QWORD *)v91 + 6);
        v94 = *(_OWORD *)(v91 + 56);
        v95 = *(_OWORD *)(v91 + 72);
        v90[88] = v91[88];
        *(_OWORD *)(v90 + 72) = v95;
        *(_OWORD *)(v90 + 56) = v94;
        *((_QWORD *)v90 + 12) = *((_QWORD *)v91 + 12);
        *((_QWORD *)v90 + 13) = *((_QWORD *)v91 + 13);
        v96 = *(int *)(v10 + 40);
        v97 = &v90[v96];
        v98 = &v91[v96];
        v99 = v16(&v90[v96], 1, v14);
        v100 = v16(v98, 1, v14);
        if (v99)
        {
          if (!v100)
          {
            (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v97, v98, v14);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v97, 0, 1, v14);
LABEL_40:
            v102 = v23[7];
            v103 = &v21[v102];
            v104 = &v22[v102];
            v105 = *(_OWORD *)v104;
            v103[16] = v104[16];
            *(_OWORD *)v103 = v105;
            v106 = *(_OWORD *)(v104 + 24);
            v103[40] = v104[40];
            *(_OWORD *)(v103 + 24) = v106;
            *((_QWORD *)v103 + 6) = *((_QWORD *)v104 + 6);
            v107 = *(_OWORD *)(v104 + 56);
            v108 = *(_OWORD *)(v104 + 72);
            v103[88] = v104[88];
            *(_OWORD *)(v103 + 72) = v108;
            *(_OWORD *)(v103 + 56) = v107;
            *((_QWORD *)v103 + 12) = *((_QWORD *)v104 + 12);
            *((_QWORD *)v103 + 13) = *((_QWORD *)v104 + 13);
            v109 = *(int *)(v10 + 40);
            v110 = &v103[v109];
            v111 = &v104[v109];
            v112 = v16(&v103[v109], 1, v14);
            v113 = v16(v111, 1, v14);
            if (v112)
            {
              if (v113)
              {
                v114 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
                memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
                v115 = v129;
              }
              else
              {
                v115 = v129;
                (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v110, v111, v14);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v110, 0, 1, v14);
              }
            }
            else
            {
              v115 = v129;
              if (v113)
              {
                (*(void (**)(char *, uint64_t))(v129 + 8))(v110, v14);
                v116 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
                memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v129 + 24))(v110, v111, v14);
              }
            }
            v117 = v23[8];
            v118 = &v21[v117];
            v119 = &v22[v117];
            v120 = *(_OWORD *)v119;
            v118[16] = v119[16];
            *(_OWORD *)v118 = v120;
            v121 = *(_OWORD *)(v119 + 24);
            v118[40] = v119[40];
            *(_OWORD *)(v118 + 24) = v121;
            *((_QWORD *)v118 + 6) = *((_QWORD *)v119 + 6);
            v122 = *(_OWORD *)(v119 + 56);
            v123 = *(_OWORD *)(v119 + 72);
            v118[88] = v119[88];
            *(_OWORD *)(v118 + 72) = v123;
            *(_OWORD *)(v118 + 56) = v122;
            *((_QWORD *)v118 + 12) = *((_QWORD *)v119 + 12);
            *((_QWORD *)v118 + 13) = *((_QWORD *)v119 + 13);
            v124 = *(int *)(v10 + 40);
            v125 = &v118[v124];
            v126 = &v119[v124];
            v127 = v16(&v118[v124], 1, v14);
            v128 = v16(v126, 1, v14);
            if (v127)
            {
              if (!v128)
              {
                (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v125, v126, v14);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v125, 0, 1, v14);
                return a1;
              }
            }
            else
            {
              if (!v128)
              {
                (*(void (**)(char *, char *, uint64_t))(v115 + 24))(v125, v126, v14);
                return a1;
              }
              (*(void (**)(char *, uint64_t))(v115 + 8))(v125, v14);
            }
            v39 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0) - 8) + 64);
            v40 = v125;
            v41 = v126;
            goto LABEL_14;
          }
        }
        else
        {
          if (!v100)
          {
            (*(void (**)(char *, char *, uint64_t))(v129 + 24))(v97, v98, v14);
            goto LABEL_40;
          }
          (*(void (**)(char *, uint64_t))(v129 + 8))(v97, v14);
        }
        v101 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t))(v129 + 8))(v50, v14);
    }
    v88 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    goto LABEL_34;
  }
  if (v27)
  {
LABEL_13:
    v39 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0) - 8) + 64);
    v40 = v21;
    v41 = v22;
LABEL_14:
    memcpy(v40, v41, v39);
    return a1;
  }
  *(_OWORD *)v21 = *(_OWORD *)v22;
  v28 = v23[5];
  v29 = &v21[v28];
  v30 = &v22[v28];
  v31 = *(_OWORD *)v30;
  v29[16] = v30[16];
  *(_OWORD *)v29 = v31;
  v32 = *(_OWORD *)(v30 + 24);
  v29[40] = v30[40];
  *(_OWORD *)(v29 + 24) = v32;
  *((_QWORD *)v29 + 6) = *((_QWORD *)v30 + 6);
  v33 = *(_OWORD *)(v30 + 56);
  v34 = *(_OWORD *)(v30 + 72);
  v29[88] = v30[88];
  *(_OWORD *)(v29 + 72) = v34;
  *(_OWORD *)(v29 + 56) = v33;
  *((_QWORD *)v29 + 12) = *((_QWORD *)v30 + 12);
  *((_QWORD *)v29 + 13) = *((_QWORD *)v30 + 13);
  v35 = *(int *)(v10 + 40);
  v36 = &v29[v35];
  v37 = &v30[v35];
  if (v16(&v30[v35], 1, v14))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v36, v37, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v36, 0, 1, v14);
  }
  v54 = v23[6];
  v55 = &v21[v54];
  v56 = &v22[v54];
  v57 = *(_OWORD *)v56;
  v55[16] = v56[16];
  *(_OWORD *)v55 = v57;
  v58 = *(_OWORD *)(v56 + 24);
  v55[40] = v56[40];
  *(_OWORD *)(v55 + 24) = v58;
  *((_QWORD *)v55 + 6) = *((_QWORD *)v56 + 6);
  v59 = *(_OWORD *)(v56 + 56);
  v60 = *(_OWORD *)(v56 + 72);
  v55[88] = v56[88];
  *(_OWORD *)(v55 + 72) = v60;
  *(_OWORD *)(v55 + 56) = v59;
  *((_QWORD *)v55 + 12) = *((_QWORD *)v56 + 12);
  *((_QWORD *)v55 + 13) = *((_QWORD *)v56 + 13);
  v61 = *(int *)(v10 + 40);
  v62 = &v55[v61];
  v63 = &v56[v61];
  if (v16(&v56[v61], 1, v14))
  {
    v64 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v62, v63, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v62, 0, 1, v14);
  }
  v65 = v23[7];
  v66 = &v21[v65];
  v67 = &v22[v65];
  v68 = *(_OWORD *)v67;
  v66[16] = v67[16];
  *(_OWORD *)v66 = v68;
  v69 = *(_OWORD *)(v67 + 24);
  v66[40] = v67[40];
  *(_OWORD *)(v66 + 24) = v69;
  *((_QWORD *)v66 + 6) = *((_QWORD *)v67 + 6);
  v70 = *(_OWORD *)(v67 + 56);
  v71 = *(_OWORD *)(v67 + 72);
  v66[88] = v67[88];
  *(_OWORD *)(v66 + 72) = v71;
  *(_OWORD *)(v66 + 56) = v70;
  *((_QWORD *)v66 + 12) = *((_QWORD *)v67 + 12);
  *((_QWORD *)v66 + 13) = *((_QWORD *)v67 + 13);
  v72 = *(int *)(v10 + 40);
  v73 = &v66[v72];
  v74 = &v67[v72];
  if (v16(&v67[v72], 1, v14))
  {
    v75 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v73, v74, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v73, 0, 1, v14);
  }
  v76 = v23[8];
  v77 = &v21[v76];
  v78 = &v22[v76];
  v79 = *(_OWORD *)v78;
  v77[16] = v78[16];
  *(_OWORD *)v77 = v79;
  v80 = *(_OWORD *)(v78 + 24);
  v77[40] = v78[40];
  *(_OWORD *)(v77 + 24) = v80;
  *((_QWORD *)v77 + 6) = *((_QWORD *)v78 + 6);
  v81 = *(_OWORD *)(v78 + 56);
  v82 = *(_OWORD *)(v78 + 72);
  v77[88] = v78[88];
  *(_OWORD *)(v77 + 72) = v82;
  *(_OWORD *)(v77 + 56) = v81;
  *((_QWORD *)v77 + 12) = *((_QWORD *)v78 + 12);
  *((_QWORD *)v77 + 13) = *((_QWORD *)v78 + 13);
  v83 = *(int *)(v10 + 40);
  v84 = &v77[v83];
  v85 = &v78[v83];
  if (v16(&v78[v83], 1, v14))
  {
    v86 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v84, v85, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v84, 0, 1, v14);
  }
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

uint64_t initializeWithTake for ActivityMetricsDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v49;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  v6 = type metadata accessor for MetricsRequest(0);
  v7 = *(int *)(v6 + 40);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_190A46EE8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 20);
  v15 = (_OWORD *)(a1 + v14);
  v16 = (_OWORD *)(a2 + v14);
  v17 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v18 = *((_QWORD *)v17 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v49 = v18;
    *v15 = *v16;
    v20 = v17[5];
    v21 = (char *)v15 + v20;
    v22 = (char *)v16 + v20;
    v21[16] = v22[16];
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + 24) = *(_OWORD *)(v22 + 24);
    v21[40] = v22[40];
    *((_QWORD *)v21 + 6) = *((_QWORD *)v22 + 6);
    *(_OWORD *)(v21 + 56) = *(_OWORD *)(v22 + 56);
    *(_OWORD *)(v21 + 72) = *(_OWORD *)(v22 + 72);
    v21[88] = v22[88];
    *((_OWORD *)v21 + 6) = *((_OWORD *)v22 + 6);
    v23 = *(int *)(v6 + 40);
    v24 = &v21[v23];
    v25 = &v22[v23];
    if (v12(&v22[v23], 1, v10))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v25, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
    }
    v27 = v17[6];
    v28 = (char *)v15 + v27;
    v29 = (char *)v16 + v27;
    *(_OWORD *)v28 = *(_OWORD *)v29;
    v28[16] = v29[16];
    *(_OWORD *)(v28 + 24) = *(_OWORD *)(v29 + 24);
    v28[40] = v29[40];
    *((_QWORD *)v28 + 6) = *((_QWORD *)v29 + 6);
    *(_OWORD *)(v28 + 56) = *(_OWORD *)(v29 + 56);
    *(_OWORD *)(v28 + 72) = *(_OWORD *)(v29 + 72);
    v28[88] = v29[88];
    *((_OWORD *)v28 + 6) = *((_OWORD *)v29 + 6);
    v30 = *(int *)(v6 + 40);
    v31 = &v28[v30];
    v32 = &v29[v30];
    if (v12(&v29[v30], 1, v10))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v31, v32, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v31, 0, 1, v10);
    }
    v34 = v17[7];
    v35 = (char *)v15 + v34;
    v36 = (char *)v16 + v34;
    *(_OWORD *)v35 = *(_OWORD *)v36;
    v35[16] = v36[16];
    *(_OWORD *)(v35 + 24) = *(_OWORD *)(v36 + 24);
    v35[40] = v36[40];
    *((_QWORD *)v35 + 6) = *((_QWORD *)v36 + 6);
    *(_OWORD *)(v35 + 56) = *(_OWORD *)(v36 + 56);
    *(_OWORD *)(v35 + 72) = *(_OWORD *)(v36 + 72);
    v35[88] = v36[88];
    *((_OWORD *)v35 + 6) = *((_OWORD *)v36 + 6);
    v37 = *(int *)(v6 + 40);
    v38 = &v35[v37];
    v39 = &v36[v37];
    if (v12(&v36[v37], 1, v10))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v38, v39, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v38, 0, 1, v10);
    }
    v41 = v17[8];
    v42 = (char *)v15 + v41;
    v43 = (char *)v16 + v41;
    *(_OWORD *)v42 = *(_OWORD *)v43;
    v42[16] = v43[16];
    *(_OWORD *)(v42 + 24) = *(_OWORD *)(v43 + 24);
    v42[40] = v43[40];
    *((_QWORD *)v42 + 6) = *((_QWORD *)v43 + 6);
    *(_OWORD *)(v42 + 56) = *(_OWORD *)(v43 + 56);
    *(_OWORD *)(v42 + 72) = *(_OWORD *)(v43 + 72);
    v42[88] = v43[88];
    *((_OWORD *)v42 + 6) = *((_OWORD *)v43 + 6);
    v44 = *(int *)(v6 + 40);
    v45 = &v42[v44];
    v46 = &v43[v44];
    if (v12(&v43[v44], 1, v10))
    {
      v47 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v45, v46, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v45, 0, 1, v10);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v49 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t assignWithTake for ActivityMetricsDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, int *);
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  size_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int v40;
  int v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  int v91;
  int v92;
  uint64_t v93;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  v6 = type metadata accessor for MetricsRequest(0);
  v7 = *(int *)(v6 + 40);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_190A46EE8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  v93 = v11;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = *(int *)(a3 + 20);
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  v19 = (int *)type metadata accessor for JindoMetricsDefinition(0);
  v20 = *((_QWORD *)v19 - 1);
  v21 = *(uint64_t (**)(char *, uint64_t, int *))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (v23)
    {
      sub_1908B5150((uint64_t)v17, type metadata accessor for JindoMetricsDefinition);
      goto LABEL_13;
    }
    *(_OWORD *)v17 = *(_OWORD *)v18;
    v34 = v19[5];
    v35 = &v17[v34];
    v36 = &v18[v34];
    *(_OWORD *)v35 = *(_OWORD *)v36;
    v35[16] = v36[16];
    *(_OWORD *)(v35 + 24) = *(_OWORD *)(v36 + 24);
    v35[40] = v36[40];
    *((_QWORD *)v35 + 6) = *((_QWORD *)v36 + 6);
    *(_OWORD *)(v35 + 56) = *(_OWORD *)(v36 + 56);
    *(_OWORD *)(v35 + 72) = *(_OWORD *)(v36 + 72);
    v35[88] = v36[88];
    *((_OWORD *)v35 + 6) = *((_OWORD *)v36 + 6);
    v37 = *(int *)(v6 + 40);
    v38 = &v35[v37];
    v39 = &v36[v37];
    v40 = v12(&v35[v37], 1, v10);
    v41 = v12(v39, 1, v10);
    if (v40)
    {
      if (!v41)
      {
        (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v38, v39, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v38, 0, 1, v10);
        goto LABEL_34;
      }
    }
    else
    {
      if (!v41)
      {
        (*(void (**)(char *, char *, uint64_t))(v93 + 40))(v38, v39, v10);
LABEL_34:
        v65 = v19[6];
        v66 = &v17[v65];
        v67 = &v18[v65];
        *(_OWORD *)v66 = *(_OWORD *)v67;
        v66[16] = v67[16];
        *(_OWORD *)(v66 + 24) = *(_OWORD *)(v67 + 24);
        v66[40] = v67[40];
        *((_QWORD *)v66 + 6) = *((_QWORD *)v67 + 6);
        *(_OWORD *)(v66 + 56) = *(_OWORD *)(v67 + 56);
        *(_OWORD *)(v66 + 72) = *(_OWORD *)(v67 + 72);
        v66[88] = v67[88];
        *((_OWORD *)v66 + 6) = *((_OWORD *)v67 + 6);
        v68 = *(int *)(v6 + 40);
        v69 = &v66[v68];
        v70 = &v67[v68];
        v71 = v12(&v66[v68], 1, v10);
        v72 = v12(v70, 1, v10);
        if (v71)
        {
          if (!v72)
          {
            (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v69, v70, v10);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v69, 0, 1, v10);
LABEL_40:
            v74 = v19[7];
            v75 = &v17[v74];
            v76 = &v18[v74];
            *(_OWORD *)v75 = *(_OWORD *)v76;
            v75[16] = v76[16];
            *(_OWORD *)(v75 + 24) = *(_OWORD *)(v76 + 24);
            v75[40] = v76[40];
            *((_QWORD *)v75 + 6) = *((_QWORD *)v76 + 6);
            *(_OWORD *)(v75 + 56) = *(_OWORD *)(v76 + 56);
            *(_OWORD *)(v75 + 72) = *(_OWORD *)(v76 + 72);
            v75[88] = v76[88];
            *((_OWORD *)v75 + 6) = *((_OWORD *)v76 + 6);
            v77 = *(int *)(v6 + 40);
            v78 = &v75[v77];
            v79 = &v76[v77];
            v80 = v12(&v75[v77], 1, v10);
            v81 = v12(v79, 1, v10);
            if (v80)
            {
              if (v81)
              {
                v82 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
                memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
                v83 = v93;
              }
              else
              {
                v83 = v93;
                (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v78, v79, v10);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v78, 0, 1, v10);
              }
            }
            else
            {
              v83 = v93;
              if (v81)
              {
                (*(void (**)(char *, uint64_t))(v93 + 8))(v78, v10);
                v84 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
                memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v93 + 40))(v78, v79, v10);
              }
            }
            v85 = v19[8];
            v86 = &v17[v85];
            v87 = &v18[v85];
            *(_OWORD *)v86 = *(_OWORD *)v87;
            v86[16] = v87[16];
            *(_OWORD *)(v86 + 24) = *(_OWORD *)(v87 + 24);
            v86[40] = v87[40];
            *((_QWORD *)v86 + 6) = *((_QWORD *)v87 + 6);
            *(_OWORD *)(v86 + 56) = *(_OWORD *)(v87 + 56);
            *(_OWORD *)(v86 + 72) = *(_OWORD *)(v87 + 72);
            v86[88] = v87[88];
            *((_OWORD *)v86 + 6) = *((_OWORD *)v87 + 6);
            v88 = *(int *)(v6 + 40);
            v89 = &v86[v88];
            v90 = &v87[v88];
            v91 = v12(&v86[v88], 1, v10);
            v92 = v12(v90, 1, v10);
            if (v91)
            {
              if (!v92)
              {
                (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v89, v90, v10);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v89, 0, 1, v10);
                return a1;
              }
            }
            else
            {
              if (!v92)
              {
                (*(void (**)(char *, char *, uint64_t))(v83 + 40))(v89, v90, v10);
                return a1;
              }
              (*(void (**)(char *, uint64_t))(v83 + 8))(v89, v10);
            }
            v31 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0) - 8) + 64);
            v32 = v89;
            v33 = v90;
            goto LABEL_14;
          }
        }
        else
        {
          if (!v72)
          {
            (*(void (**)(char *, char *, uint64_t))(v93 + 40))(v69, v70, v10);
            goto LABEL_40;
          }
          (*(void (**)(char *, uint64_t))(v93 + 8))(v69, v10);
        }
        v73 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t))(v93 + 8))(v38, v10);
    }
    v64 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_34;
  }
  if (v23)
  {
LABEL_13:
    v31 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0) - 8) + 64);
    v32 = v17;
    v33 = v18;
LABEL_14:
    memcpy(v32, v33, v31);
    return a1;
  }
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v24 = v19[5];
  v25 = &v17[v24];
  v26 = &v18[v24];
  v25[16] = v26[16];
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 24) = *(_OWORD *)(v26 + 24);
  v25[40] = v26[40];
  *((_QWORD *)v25 + 6) = *((_QWORD *)v26 + 6);
  *(_OWORD *)(v25 + 56) = *(_OWORD *)(v26 + 56);
  *(_OWORD *)(v25 + 72) = *(_OWORD *)(v26 + 72);
  v25[88] = v26[88];
  *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
  v27 = *(int *)(v6 + 40);
  v28 = &v25[v27];
  v29 = &v26[v27];
  if (v12(&v26[v27], 1, v10))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v28, v29, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v28, 0, 1, v10);
  }
  v42 = v19[6];
  v43 = &v17[v42];
  v44 = &v18[v42];
  *(_OWORD *)v43 = *(_OWORD *)v44;
  v43[16] = v44[16];
  *(_OWORD *)(v43 + 24) = *(_OWORD *)(v44 + 24);
  v43[40] = v44[40];
  *((_QWORD *)v43 + 6) = *((_QWORD *)v44 + 6);
  *(_OWORD *)(v43 + 56) = *(_OWORD *)(v44 + 56);
  *(_OWORD *)(v43 + 72) = *(_OWORD *)(v44 + 72);
  v43[88] = v44[88];
  *((_OWORD *)v43 + 6) = *((_OWORD *)v44 + 6);
  v45 = *(int *)(v6 + 40);
  v46 = &v43[v45];
  v47 = &v44[v45];
  if (v12(&v44[v45], 1, v10))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v46, v47, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v46, 0, 1, v10);
  }
  v49 = v19[7];
  v50 = &v17[v49];
  v51 = &v18[v49];
  *(_OWORD *)v50 = *(_OWORD *)v51;
  v50[16] = v51[16];
  *(_OWORD *)(v50 + 24) = *(_OWORD *)(v51 + 24);
  v50[40] = v51[40];
  *((_QWORD *)v50 + 6) = *((_QWORD *)v51 + 6);
  *(_OWORD *)(v50 + 56) = *(_OWORD *)(v51 + 56);
  *(_OWORD *)(v50 + 72) = *(_OWORD *)(v51 + 72);
  v50[88] = v51[88];
  *((_OWORD *)v50 + 6) = *((_OWORD *)v51 + 6);
  v52 = *(int *)(v6 + 40);
  v53 = &v50[v52];
  v54 = &v51[v52];
  if (v12(&v51[v52], 1, v10))
  {
    v55 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v53, v54, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v53, 0, 1, v10);
  }
  v56 = v19[8];
  v57 = &v17[v56];
  v58 = &v18[v56];
  *(_OWORD *)v57 = *(_OWORD *)v58;
  v57[16] = v58[16];
  *(_OWORD *)(v57 + 24) = *(_OWORD *)(v58 + 24);
  v57[40] = v58[40];
  *((_QWORD *)v57 + 6) = *((_QWORD *)v58 + 6);
  *(_OWORD *)(v57 + 56) = *(_OWORD *)(v58 + 56);
  *(_OWORD *)(v57 + 72) = *(_OWORD *)(v58 + 72);
  v57[88] = v58[88];
  *((_OWORD *)v57 + 6) = *((_OWORD *)v58 + 6);
  v59 = *(int *)(v6 + 40);
  v60 = &v57[v59];
  v61 = &v58[v59];
  if (v12(&v58[v59], 1, v10))
  {
    v62 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE1EAFB0);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v60, v61, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v60, 0, 1, v10);
  }
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityMetricsDefinition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1909278A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for MetricsRequest(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ActivityMetricsDefinition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_19092792C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for MetricsRequest(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA8F0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1909279AC()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for MetricsRequest(319);
  if (v0 <= 0x3F)
  {
    sub_1908BBFB0(319, &qword_1ECF6BF50, (void (*)(uint64_t))type metadata accessor for JindoMetricsDefinition);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for ActivityMetricsDefinition.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_190927A8C + 4 * byte_190A4DA09[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190927AC0 + 4 * byte_190A4DA04[v4]))();
}

uint64_t sub_190927AC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190927AC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190927AD0);
  return result;
}

uint64_t sub_190927ADC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190927AE4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190927AE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190927AF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityMetricsDefinition.CodingKeys()
{
  return &type metadata for ActivityMetricsDefinition.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DimensionRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_190927B58 + 4 * byte_190A4DA13[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_190927B8C + 4 * byte_190A4DA0E[v4]))();
}

uint64_t sub_190927B8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190927B94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190927B9CLL);
  return result;
}

uint64_t sub_190927BA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190927BB0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_190927BB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190927BBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DimensionRequest.CodingKeys()
{
  return &type metadata for DimensionRequest.CodingKeys;
}

uint64_t getEnumTagSinglePayload for JindoMetricsDefinition.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for JindoMetricsDefinition.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_190927CB4 + 4 * byte_190A4DA1D[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_190927CE8 + 4 * byte_190A4DA18[v4]))();
}

uint64_t sub_190927CE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190927CF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190927CF8);
  return result;
}

uint64_t sub_190927D04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190927D0CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_190927D10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190927D18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JindoMetricsDefinition.CodingKeys()
{
  return &type metadata for JindoMetricsDefinition.CodingKeys;
}

uint64_t getEnumTagSinglePayload for MetricsRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_190927E10 + 4 * byte_190A4DA27[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_190927E44 + 4 * byte_190A4DA22[v4]))();
}

uint64_t sub_190927E44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190927E4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190927E54);
  return result;
}

uint64_t sub_190927E60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190927E68);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_190927E6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190927E74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsRequest.CodingKeys()
{
  return &type metadata for MetricsRequest.CodingKeys;
}

unint64_t sub_190927E94()
{
  unint64_t result;

  result = qword_1EE1ED190;
  if (!qword_1EE1ED190)
  {
    result = MEMORY[0x19401429C](&unk_190A4DFE0, &type metadata for MetricsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ED190);
  }
  return result;
}

unint64_t sub_190927EDC()
{
  unint64_t result;

  result = qword_1EE1ED198;
  if (!qword_1EE1ED198)
  {
    result = MEMORY[0x19401429C](&unk_190A4E0D0, &type metadata for JindoMetricsDefinition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ED198);
  }
  return result;
}

unint64_t sub_190927F24()
{
  unint64_t result;

  result = qword_1EE1ED1A0;
  if (!qword_1EE1ED1A0)
  {
    result = MEMORY[0x19401429C](&unk_190A4E1C0, &type metadata for DimensionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ED1A0);
  }
  return result;
}

unint64_t sub_190927F6C()
{
  unint64_t result;

  result = qword_1EE1ED1A8;
  if (!qword_1EE1ED1A8)
  {
    result = MEMORY[0x19401429C](&unk_190A4E278, &type metadata for ActivityMetricsDefinition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1ED1A8);
  }
  return result;
}

unint64_t sub_190927FB4()
{
  unint64_t result;

  result = qword_1EE1EACD0;
  if (!qword_1EE1EACD0)
  {
    result = MEMORY[0x19401429C](&unk_190A4E1E8, &type metadata for ActivityMetricsDefinition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EACD0);
  }
  return result;
}

unint64_t sub_190927FFC()
{
  unint64_t result;

  result = qword_1EE1EACC8;
  if (!qword_1EE1EACC8)
  {
    result = MEMORY[0x19401429C](&unk_190A4E210, &type metadata for ActivityMetricsDefinition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EACC8);
  }
  return result;
}

unint64_t sub_190928044()
{
  unint64_t result;

  result = qword_1EE1EABD0;
  if (!qword_1EE1EABD0)
  {
    result = MEMORY[0x19401429C](&unk_190A4E0F8, &type metadata for DimensionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EABD0);
  }
  return result;
}

unint64_t sub_19092808C()
{
  unint64_t result;

  result = qword_1EE1EABC8;
  if (!qword_1EE1EABC8)
  {
    result = MEMORY[0x19401429C](&unk_190A4E120, &type metadata for DimensionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EABC8);
  }
  return result;
}

unint64_t sub_1909280D4()
{
  unint64_t result;

  result = qword_1EE1EACB8;
  if (!qword_1EE1EACB8)
  {
    result = MEMORY[0x19401429C](&unk_190A4E008, &type metadata for JindoMetricsDefinition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EACB8);
  }
  return result;
}

unint64_t sub_19092811C()
{
  unint64_t result;

  result = qword_1EE1EACB0;
  if (!qword_1EE1EACB0)
  {
    result = MEMORY[0x19401429C](&unk_190A4E030, &type metadata for JindoMetricsDefinition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EACB0);
  }
  return result;
}

unint64_t sub_190928164()
{
  unint64_t result;

  result = qword_1EE1EAB40;
  if (!qword_1EE1EAB40)
  {
    result = MEMORY[0x19401429C](&unk_190A4DF18, &type metadata for MetricsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EAB40);
  }
  return result;
}

unint64_t sub_1909281AC()
{
  unint64_t result;

  result = qword_1EE1EAB38;
  if (!qword_1EE1EAB38)
  {
    result = MEMORY[0x19401429C](&unk_190A4DF40, &type metadata for MetricsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1EAB38);
  }
  return result;
}

BOOL sub_1909281F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  unint64_t v14;
  int v15;
  _DWORD *v16;
  int v17;
  unint64_t v18;
  uint64_t v20;

  v4 = sub_190A46EAC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v20 - v9, a1, v4);
  v12 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  v13 = v12(v10, v4);
  v14 = 0;
  v15 = *MEMORY[0x1E0CDB330];
  v16 = (_DWORD *)MEMORY[0x1E0CDB368];
  if (v13 != *MEMORY[0x1E0CDB330])
  {
    if (v13 == *MEMORY[0x1E0CDB368])
    {
      v14 = 1;
      goto LABEL_24;
    }
    if (v13 == *MEMORY[0x1E0CDB370])
    {
      v14 = 2;
      goto LABEL_24;
    }
    if (v13 == *MEMORY[0x1E0CDB358])
      goto LABEL_7;
    if (v13 == *MEMORY[0x1E0CDB328])
    {
      v14 = 4;
    }
    else if (v13 == *MEMORY[0x1E0CDB338])
    {
      v14 = 5;
    }
    else if (v13 == *MEMORY[0x1E0CDB300])
    {
      v14 = 6;
    }
    else if (v13 == *MEMORY[0x1E0CDB348])
    {
      v14 = 7;
    }
    else if (v13 == *MEMORY[0x1E0CDB340])
    {
      v14 = 8;
    }
    else if (v13 == *MEMORY[0x1E0CDB350])
    {
      v14 = 9;
    }
    else if (v13 == *MEMORY[0x1E0CDB318])
    {
      v14 = 10;
    }
    else
    {
      if (v13 != *MEMORY[0x1E0CDB320])
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_7:
        v14 = 3;
        goto LABEL_24;
      }
      v14 = 11;
    }
  }
LABEL_24:
  v11(v8, a2, v4);
  v17 = v12(v8, v4);
  if (v17 == v15)
  {
    v18 = 0;
  }
  else if (v17 == *v16)
  {
    v18 = 1;
  }
  else if (v17 == *MEMORY[0x1E0CDB370])
  {
    v18 = 2;
  }
  else
  {
    if (v17 != *MEMORY[0x1E0CDB358])
    {
      if (v17 == *MEMORY[0x1E0CDB328])
      {
        v18 = 4;
        return v14 >= v18;
      }
      if (v17 == *MEMORY[0x1E0CDB338])
      {
        v18 = 5;
        return v14 >= v18;
      }
      if (v17 == *MEMORY[0x1E0CDB300])
      {
        v18 = 6;
        return v14 >= v18;
      }
      if (v17 == *MEMORY[0x1E0CDB348])
      {
        v18 = 7;
        return v14 >= v18;
      }
      if (v17 == *MEMORY[0x1E0CDB340])
      {
        v18 = 8;
        return v14 >= v18;
      }
      if (v17 == *MEMORY[0x1E0CDB350])
      {
        v18 = 9;
        return v14 >= v18;
      }
      if (v17 == *MEMORY[0x1E0CDB318])
      {
        v18 = 10;
        return v14 >= v18;
      }
      if (v17 == *MEMORY[0x1E0CDB320])
      {
        v18 = 11;
        return v14 >= v18;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    v18 = 3;
  }
  return v14 >= v18;
}

uint64_t sub_190928578()
{
  unint64_t v0;

  v0 = sub_190A484F0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

uint64_t sub_1909285C0()
{
  unint64_t v0;

  v0 = sub_190A484F0();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_190928608()
{
  unint64_t v0;

  v0 = sub_190A484F0();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_190928650(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x8000000190A61830 || (sub_190A486DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000190A61850)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_190A486DC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_190928738()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for ControlTemplateButton(0);
  __swift_allocate_value_buffer(v0, qword_1EE1EA448);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE1EA448);
  return sub_190928780(v1);
}

uint64_t sub_190928780@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v42 = a1;
  v41 = type metadata accessor for ControlTemplateButton(0);
  MEMORY[0x1E0C80A78](v41);
  v39 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v2);
  v40 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v38 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v37 = (uint64_t)&v37 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (_OWORD *)((char *)&v37 - v13);
  MEMORY[0x1E0C80A78](v12);
  v16 = (_OWORD *)((char *)&v37 - v15);
  v17 = sub_190A47260();
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v6, 1, 1, v17);
  v19 = (uint64_t)v16 + v7[6];
  v18((char *)v19, 1, 1, v17);
  v20 = (char *)v16 + v7[7];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 1;
  v21 = (_QWORD *)((char *)v16 + v7[8]);
  *v21 = 0;
  v21[1] = 0;
  v22 = (_QWORD *)((char *)v16 + v7[9]);
  *v22 = 0;
  v22[1] = 0;
  *v16 = 0u;
  v16[1] = 0u;
  sub_1908DCA84((uint64_t)v6, v19, (uint64_t *)&unk_1ECF6A3B8);
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 1;
  swift_bridgeObjectRelease();
  *v21 = 0;
  v21[1] = 0;
  swift_bridgeObjectRelease();
  *v22 = 0;
  v22[1] = 0;
  v18(v6, 1, 1, v17);
  v23 = (uint64_t)v14 + v7[6];
  v18((char *)v23, 1, 1, v17);
  v24 = (char *)v14 + v7[7];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v24[16] = 1;
  v25 = (_QWORD *)((char *)v14 + v7[8]);
  *v25 = 0;
  v25[1] = 0;
  v26 = (_QWORD *)((char *)v14 + v7[9]);
  *v26 = 0;
  v26[1] = 0;
  *v14 = 0u;
  v14[1] = 0u;
  sub_1908DCA84((uint64_t)v6, v23, (uint64_t *)&unk_1ECF6A3B8);
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v24[16] = 1;
  swift_bridgeObjectRelease();
  *v25 = 0;
  v25[1] = 0;
  swift_bridgeObjectRelease();
  *v26 = 0;
  v26[1] = 0;
  v27 = v37;
  sub_1908AF5D8((uint64_t)v16, v37, type metadata accessor for ControlTemplateButton.Option);
  v28 = v38;
  sub_1908AF5D8((uint64_t)v14, v38, type metadata accessor for ControlTemplateButton.Option);
  v29 = sub_190A45FC4();
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v31 = (uint64_t)v40;
  v30(v40, 1, 1, v29);
  v32 = (int *)v41;
  v33 = (uint64_t)v39;
  v34 = (uint64_t)&v39[*(int *)(v41 + 28)];
  v30((char *)v34, 1, 1, v29);
  v35 = (_QWORD *)(v33 + v32[10]);
  *v35 = 0;
  v35[1] = 0;
  sub_1908BD0B4(v27, v33, type metadata accessor for ControlTemplateButton.Option);
  sub_1908BD0B4(v28, v33 + v32[5], type metadata accessor for ControlTemplateButton.Option);
  *(_QWORD *)(v33 + v32[6]) = 0;
  sub_1908DCA84(v31, v34, (uint64_t *)&unk_1ECF6C858);
  *(_BYTE *)(v33 + v32[8]) = 0;
  *(_BYTE *)(v33 + v32[9]) = 1;
  swift_bridgeObjectRelease();
  *v35 = 0;
  v35[1] = 0;
  *(_BYTE *)(v33 + v32[11]) = 0;
  sub_1908BD0B4(v33, v42, type metadata accessor for ControlTemplateButton);
  sub_1908B5150((uint64_t)v14, type metadata accessor for ControlTemplateButton.Option);
  return sub_1908B5150((uint64_t)v16, type metadata accessor for ControlTemplateButton.Option);
}

uint64_t ControlTemplateButton.Option.init(title:subtitle:icon:tint:status:actionHint:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t result;

  v19 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  v20 = (uint64_t)a9 + v19[6];
  v21 = sub_190A47260();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = (char *)a9 + v19[7];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = 1;
  v23 = (_QWORD *)((char *)a9 + v19[8]);
  *v23 = 0;
  v23[1] = 0;
  v24 = (_QWORD *)((char *)a9 + v19[9]);
  *v24 = 0;
  v24[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  sub_1908DCA84(a5, v20, (uint64_t *)&unk_1ECF6A3B8);
  *(_QWORD *)v22 = a6;
  *((_QWORD *)v22 + 1) = a7;
  v22[16] = a8 & 1;
  swift_bridgeObjectRelease();
  *v23 = a10;
  v23[1] = a11;
  result = swift_bridgeObjectRelease();
  *v24 = a12;
  v24[1] = a13;
  return result;
}

uint64_t type metadata accessor for ControlTemplateButton.Option(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1ECF6BEA8);
}

uint64_t ControlTemplateButton.init(inactive:active:action:associatedURL:privacySensitive:disabled:accessibilityIdentifier:rasterizedImagesAllowed:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t result;

  v15 = *a3;
  v16 = (int *)type metadata accessor for ControlTemplateButton(0);
  v17 = a9 + v16[7];
  v18 = sub_190A45FC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = (_QWORD *)(a9 + v16[10]);
  *v19 = 0;
  v19[1] = 0;
  sub_1908BD0B4(a1, a9, type metadata accessor for ControlTemplateButton.Option);
  sub_1908BD0B4(a2, a9 + v16[5], type metadata accessor for ControlTemplateButton.Option);
  *(_QWORD *)(a9 + v16[6]) = v15;
  sub_1908DCA84(a4, v17, (uint64_t *)&unk_1ECF6C858);
  *(_BYTE *)(a9 + v16[8]) = a5;
  *(_BYTE *)(a9 + v16[9]) = a6;
  result = swift_bridgeObjectRelease();
  *v19 = a7;
  v19[1] = a8;
  *(_BYTE *)(a9 + v16[11]) = a10;
  return result;
}

uint64_t type metadata accessor for ControlTemplateButton(uint64_t a1)
{
  return sub_1908B0210(a1, (uint64_t *)&unk_1ECF6BED0);
}

uint64_t static ControlTemplateButton.empty.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EE1EA468 != -1)
    swift_once();
  v2 = type metadata accessor for ControlTemplateButton(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE1EA448);
  swift_beginAccess();
  return sub_1908AF5D8(v3, a1, type metadata accessor for ControlTemplateButton);
}

uint64_t static ControlTemplateButton.empty.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EE1EA468 != -1)
    swift_once();
  v2 = type metadata accessor for ControlTemplateButton(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE1EA448);
  swift_beginAccess();
  sub_190928F48(a1, v3);
  swift_endAccess();
  return sub_1908B5150(a1, type metadata accessor for ControlTemplateButton);
}

uint64_t sub_190928F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ControlTemplateButton(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t (*static ControlTemplateButton.empty.modify())()
{
  uint64_t v0;

  if (qword_1EE1EA468 != -1)
    swift_once();
  v0 = type metadata accessor for ControlTemplateButton(0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE1EA448);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ControlTemplateButton.Option.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateButton.Option.title.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ControlTemplateButton.Option.title.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateButton.Option.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateButton.Option.subtitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ControlTemplateButton.Option.subtitle.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateButton.Option.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ControlTemplateButton.Option(0);
  return sub_1908AAA48(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&unk_1ECF6A3B8);
}

uint64_t ControlTemplateButton.Option.icon.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ControlTemplateButton.Option(0);
  return sub_1908DCA84(a1, v1 + *(int *)(v3 + 24), (uint64_t *)&unk_1ECF6A3B8);
}

uint64_t (*ControlTemplateButton.Option.icon.modify())()
{
  type metadata accessor for ControlTemplateButton.Option(0);
  return nullsub_1;
}

uint64_t ControlTemplateButton.Option.tint.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ControlTemplateButton.Option(0) + 28));
}

uint64_t ControlTemplateButton.Option.tint.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;

  result = type metadata accessor for ControlTemplateButton.Option(0);
  v8 = v3 + *(int *)(result + 28);
  *(_QWORD *)v8 = a1;
  *(_QWORD *)(v8 + 8) = a2;
  *(_BYTE *)(v8 + 16) = a3 & 1;
  return result;
}

uint64_t (*ControlTemplateButton.Option.tint.modify())()
{
  type metadata accessor for ControlTemplateButton.Option(0);
  return nullsub_1;
}

uint64_t ControlTemplateButton.Option.status.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ControlTemplateButton.Option(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateButton.Option.status.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ControlTemplateButton.Option(0) + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ControlTemplateButton.Option.status.modify())()
{
  type metadata accessor for ControlTemplateButton.Option(0);
  return nullsub_1;
}

uint64_t ControlTemplateButton.Option.actionHint.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ControlTemplateButton.Option(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateButton.Option.actionHint.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ControlTemplateButton.Option(0) + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ControlTemplateButton.Option.actionHint.modify())()
{
  type metadata accessor for ControlTemplateButton.Option(0);
  return nullsub_1;
}

uint64_t sub_190929370()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19092939C + 4 * byte_190A4E430[*v0]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_19092939C()
{
  return 0x656C746974627573;
}

uint64_t sub_1909293B4()
{
  return 1852793705;
}

uint64_t sub_1909293C4()
{
  return 1953393012;
}

uint64_t sub_1909293D4()
{
  return 0x737574617473;
}

uint64_t sub_1909293E8()
{
  return 0x69486E6F69746361;
}

uint64_t sub_190929404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19092E018(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_190929428()
{
  sub_19092BC14();
  return sub_190A48868();
}

uint64_t sub_190929450()
{
  sub_19092BC14();
  return sub_190A48874();
}

uint64_t ControlTemplateButton.Option.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  __int128 *v10;
  char v11;
  _BYTE v13[16];
  __int128 v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EAF78);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19092BC14();
  sub_190A48850();
  LOBYTE(v14) = 0;
  sub_190A485D4();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_190A485D4();
    v9 = type metadata accessor for ControlTemplateButton.Option(0);
    LOBYTE(v14) = 2;
    sub_190A47260();
    sub_1908AA2F4(&qword_1EE1EB698, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDCD18], MEMORY[0x1E0CDCD28]);
    sub_190A485EC();
    v10 = (__int128 *)(v3 + *(int *)(v9 + 28));
    v11 = *((_BYTE *)v10 + 16);
    v14 = *v10;
    v15 = v11;
    v13[15] = 3;
    sub_19090AE70();
    sub_190A485EC();
    LOBYTE(v14) = 4;
    sub_190A485D4();
    LOBYTE(v14) = 5;
    sub_190A485D4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ControlTemplateButton.Option.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  _OWORD *v47;
  __int128 v48;
  char v49;
  char v50;

  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  MEMORY[0x1E0C80A78](v3);
  v43 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB7E8);
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  v11 = (uint64_t)v10 + *(int *)(v8 + 24);
  v12 = sub_190A47260();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v41 = v11;
  v13(v11, 1, 1, v12);
  v14 = (char *)v10 + v7[7];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 1;
  v15 = (uint64_t *)((char *)v10 + v7[8]);
  *v15 = 0;
  v15[1] = 0;
  v16 = v7[9];
  v45 = a1;
  v46 = v10;
  v17 = (uint64_t *)((char *)v10 + v16);
  *v17 = 0;
  v17[1] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19092BC14();
  v18 = v47;
  sub_190A48838();
  if (v18)
  {
    v24 = v46;
  }
  else
  {
    v47 = v14;
    v38 = v17;
    v39 = v15;
    v19 = v42;
    v20 = (uint64_t)v43;
    LOBYTE(v48) = 0;
    v21 = v44;
    v22 = sub_190A48514();
    v24 = v46;
    *v46 = v22;
    v24[1] = v25;
    LOBYTE(v48) = 1;
    v24[2] = sub_190A48514();
    v24[3] = v26;
    LOBYTE(v48) = 2;
    sub_1908AA2F4(&qword_1EE1EB730, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDCD18], MEMORY[0x1E0CDCD38]);
    sub_190A4852C();
    v27 = v19;
    sub_1908DCA84(v20, v41, (uint64_t *)&unk_1ECF6A3B8);
    v50 = 3;
    sub_19090AEB4();
    sub_190A4852C();
    v28 = v49;
    v29 = v47;
    *v47 = v48;
    *((_BYTE *)v29 + 16) = v28;
    LOBYTE(v48) = 4;
    v30 = sub_190A48514();
    v32 = v31;
    v33 = v39;
    swift_bridgeObjectRelease();
    *v33 = v30;
    v33[1] = v32;
    LOBYTE(v48) = 5;
    v34 = sub_190A48514();
    v36 = v35;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v21);
    v37 = v38;
    swift_bridgeObjectRelease();
    *v37 = v34;
    v37[1] = v36;
    sub_1908AF5D8((uint64_t)v24, v40, type metadata accessor for ControlTemplateButton.Option);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  return sub_1908B5150((uint64_t)v24, type metadata accessor for ControlTemplateButton.Option);
}

uint64_t sub_190929A64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ControlTemplateButton.Option.init(from:)(a1, a2);
}

uint64_t sub_190929A78(_QWORD *a1)
{
  return ControlTemplateButton.Option.encode(to:)(a1);
}

uint64_t ControlTemplateButton.inactive.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1908AF5D8(v1, a1, type metadata accessor for ControlTemplateButton.Option);
}

uint64_t ControlTemplateButton.inactive.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_19092BC58(a1, v1);
}

uint64_t (*ControlTemplateButton.inactive.modify())()
{
  return nullsub_1;
}

uint64_t ControlTemplateButton.active.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ControlTemplateButton(0);
  return sub_1908AF5D8(v1 + *(int *)(v3 + 20), a1, type metadata accessor for ControlTemplateButton.Option);
}

uint64_t ControlTemplateButton.active.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ControlTemplateButton(0) + 20);
  return sub_19092BC58(a1, v3);
}

uint64_t (*ControlTemplateButton.active.modify())()
{
  type metadata accessor for ControlTemplateButton(0);
  return nullsub_1;
}

id ControlTemplateButton.action.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + *(int *)(type metadata accessor for ControlTemplateButton(0) + 24));
  *a1 = v3;
  return v3;
}

void ControlTemplateButton.action.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *(int *)(type metadata accessor for ControlTemplateButton(0) + 24);

  *(_QWORD *)(v1 + v3) = v2;
}

uint64_t (*ControlTemplateButton.action.modify())()
{
  type metadata accessor for ControlTemplateButton(0);
  return nullsub_1;
}

uint64_t ControlTemplateButton.associatedURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ControlTemplateButton(0);
  return sub_1908AAA48(v1 + *(int *)(v3 + 28), a1, (uint64_t *)&unk_1ECF6C858);
}

uint64_t ControlTemplateButton.associatedURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ControlTemplateButton(0);
  return sub_1908DCA84(a1, v1 + *(int *)(v3 + 28), (uint64_t *)&unk_1ECF6C858);
}

uint64_t (*ControlTemplateButton.associatedURL.modify())()
{
  type metadata accessor for ControlTemplateButton(0);
  return nullsub_1;
}

uint64_t ControlTemplateButton.privacySensitive.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplateButton(0) + 32));
}

uint64_t ControlTemplateButton.privacySensitive.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ControlTemplateButton(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*ControlTemplateButton.privacySensitive.modify())()
{
  type metadata accessor for ControlTemplateButton(0);
  return nullsub_1;
}

uint64_t ControlTemplateButton.disabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplateButton(0) + 36));
}

uint64_t ControlTemplateButton.disabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ControlTemplateButton(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*ControlTemplateButton.disabled.modify())()
{
  type metadata accessor for ControlTemplateButton(0);
  return nullsub_1;
}

uint64_t ControlTemplateButton.accessibilityIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ControlTemplateButton(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlTemplateButton.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ControlTemplateButton(0) + 40));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ControlTemplateButton.accessibilityIdentifier.modify())()
{
  type metadata accessor for ControlTemplateButton(0);
  return nullsub_1;
}

uint64_t ControlTemplateButton.rasterizedImagesAllowed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ControlTemplateButton(0) + 44));
}

uint64_t ControlTemplateButton.rasterizedImagesAllowed.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ControlTemplateButton(0);
  *(_BYTE *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*ControlTemplateButton.rasterizedImagesAllowed.modify())()
{
  type metadata accessor for ControlTemplateButton(0);
  return nullsub_1;
}

uint64_t ControlTemplateButton.asPlaceholder()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  id v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;

  v63 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v2);
  v62 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for ControlTemplateButton.Option(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v61 = (uint64_t *)((char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v53 - v10);
  if (qword_1EE1EC530 != -1)
    swift_once();
  swift_beginAccess();
  v59 = qword_1EE1EE380;
  v60 = *(_QWORD *)algn_1EE1EE388;
  v12 = qword_1EE1EC538;
  swift_bridgeObjectRetain();
  if (v12 != -1)
    swift_once();
  swift_beginAccess();
  v13 = qword_1EE1EE390;
  v58 = qword_1EE1EE390;
  v64 = *(_QWORD *)algn_1EE1EE398;
  sub_1908AAA48(v1 + v7[6], (uint64_t)v6, (uint64_t *)&unk_1ECF6A3B8);
  v14 = v7[6];
  v15 = (uint64_t *)(v1 + v7[7]);
  v16 = v15[1];
  v53 = *v15;
  v54 = v16;
  LODWORD(v55) = *((unsigned __int8 *)v15 + 16);
  v17 = (uint64_t)v11 + v14;
  v18 = sub_190A47260();
  v57 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v57(v17, 1, 1, v18);
  v19 = v7[7];
  v20 = v1;
  v56 = v1;
  v21 = (char *)v11 + v19;
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = 1;
  v22 = (uint64_t *)((char *)v11 + v7[8]);
  *v22 = 0;
  v22[1] = 0;
  v23 = (uint64_t)v6;
  v24 = (uint64_t *)((char *)v11 + v7[9]);
  *v24 = 0;
  v24[1] = 0;
  v25 = v60;
  *v11 = v59;
  v11[1] = v25;
  v26 = v64;
  v11[2] = v13;
  v11[3] = v26;
  swift_bridgeObjectRetain();
  sub_1908DCA84(v23, v17, (uint64_t *)&unk_1ECF6A3B8);
  v27 = v54;
  *(_QWORD *)v21 = v53;
  *((_QWORD *)v21 + 1) = v27;
  v21[16] = v55;
  swift_bridgeObjectRelease();
  *v22 = 0;
  v22[1] = 0;
  swift_bridgeObjectRelease();
  v28 = (int *)type metadata accessor for ControlTemplateButton(0);
  *v24 = 0;
  v24[1] = 0;
  v29 = v20 + v28[5];
  v30 = qword_1EE1EE380;
  v31 = *(_QWORD *)algn_1EE1EE388;
  v32 = v23;
  sub_1908AAA48(v29 + v7[6], v23, (uint64_t *)&unk_1ECF6A3B8);
  v33 = v7[6];
  v34 = (uint64_t *)(v29 + v7[7]);
  v55 = *v34;
  v59 = v34[1];
  LODWORD(v60) = *((unsigned __int8 *)v34 + 16);
  v35 = v61;
  v36 = (uint64_t)v61 + v33;
  v57((uint64_t)v61 + v33, 1, 1, v18);
  v37 = (char *)v35 + v7[7];
  *(_QWORD *)v37 = 0;
  *((_QWORD *)v37 + 1) = 0;
  v37[16] = 1;
  v38 = (uint64_t *)((char *)v35 + v7[8]);
  *v38 = 0;
  v38[1] = 0;
  v39 = (uint64_t *)((char *)v35 + v7[9]);
  *v39 = 0;
  v39[1] = 0;
  *v35 = v30;
  v35[1] = v31;
  v40 = v64;
  v35[2] = v58;
  v35[3] = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1908DCA84(v32, v36, (uint64_t *)&unk_1ECF6A3B8);
  v41 = v59;
  *(_QWORD *)v37 = v55;
  *((_QWORD *)v37 + 1) = v41;
  v37[16] = v60;
  swift_bridgeObjectRelease();
  *v38 = 0;
  v38[1] = 0;
  swift_bridgeObjectRelease();
  *v39 = 0;
  v39[1] = 0;
  v42 = v56;
  v43 = *(void **)(v56 + v28[6]);
  v44 = sub_190A45FC4();
  v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56);
  v46 = (uint64_t)v62;
  v45(v62, 1, 1, v44);
  v47 = v28[7];
  LOBYTE(v39) = *(_BYTE *)(v42 + v28[8]);
  LODWORD(v60) = *(unsigned __int8 *)(v42 + v28[9]);
  LODWORD(v64) = *(unsigned __int8 *)(v42 + v28[11]);
  v48 = v63;
  v49 = v63 + v47;
  v45((char *)(v63 + v47), 1, 1, v44);
  v50 = (_QWORD *)(v48 + v28[10]);
  *v50 = 0;
  v50[1] = 0;
  sub_1908BD0B4((uint64_t)v11, v48, type metadata accessor for ControlTemplateButton.Option);
  sub_1908BD0B4((uint64_t)v35, v48 + v28[5], type metadata accessor for ControlTemplateButton.Option);
  *(_QWORD *)(v48 + v28[6]) = v43;
  v51 = v43;
  sub_1908DCA84(v46, v49, (uint64_t *)&unk_1ECF6C858);
  *(_BYTE *)(v48 + v28[8]) = (_BYTE)v39;
  *(_BYTE *)(v48 + v28[9]) = v60;
  result = swift_bridgeObjectRelease();
  *v50 = 0;
  v50[1] = 0;
  *(_BYTE *)(v48 + v28[11]) = v64;
  return result;
}

uint64_t sub_19092A338(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_19092A36C + 4 * byte_190A4E436[a1]))(0x6576697463616E69, 0xE800000000000000);
}

uint64_t sub_19092A36C()
{
  return 0x657669746361;
}

uint64_t sub_19092A380()
{
  return 0x6E6F69746361;
}

uint64_t sub_19092A394()
{
  return 0x746169636F737361;
}

unint64_t sub_19092A3B8()
{
  return 0xD000000000000010;
}

uint64_t sub_19092A3D8()
{
  return 0x64656C6261736964;
}

unint64_t sub_19092A3EC()
{
  return 0xD000000000000017;
}

uint64_t sub_19092A414()
{
  unsigned __int8 *v0;

  return sub_19092A338(*v0);
}

uint64_t sub_19092A41C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_19092E274(a1, a2);
  *a3 = result;
  return result;
}

void sub_19092A440(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_19092A44C()
{
  sub_19092BC9C();
  return sub_190A48868();
}

uint64_t sub_19092A474()
{
  sub_19092BC9C();
  return sub_190A48874();
}

uint64_t ControlTemplateButton.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EAF70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19092BC9C();
  sub_190A48850();
  LOBYTE(v12) = 0;
  type metadata accessor for ControlTemplateButton.Option(0);
  sub_1908AA2F4(&qword_1EE1EAF68, type metadata accessor for ControlTemplateButton.Option, (uint64_t)&protocol conformance descriptor for ControlTemplateButton.Option);
  sub_190A48640();
  if (!v2)
  {
    v9 = type metadata accessor for ControlTemplateButton(0);
    LOBYTE(v12) = 1;
    sub_190A48640();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 24));
    v11[15] = 2;
    sub_19092BCE0();
    sub_190A48640();
    LOBYTE(v12) = 3;
    sub_190A45FC4();
    sub_1908AA2F4(&qword_1ECF6C648, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_190A485EC();
    LOBYTE(v12) = 4;
    sub_190A48604();
    LOBYTE(v12) = 5;
    sub_190A48604();
    LOBYTE(v12) = 6;
    sub_190A485D4();
    LOBYTE(v12) = 7;
    sub_190A48604();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ControlTemplateButton.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  int *v41;
  uint64_t v42;
  char *v43;
  char v44;
  uint64_t v45;

  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for ControlTemplateButton.Option(0);
  v6 = MEMORY[0x1E0C80A78](v36);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v35 = (char *)&v33 - v9;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EB7E0);
  v10 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ControlTemplateButton(0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 28)];
  v18 = sub_190A45FC4();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v42 = v17;
  v19(v17, 1, 1, v18);
  v40 = a1;
  v41 = (int *)v13;
  v20 = &v16[*(int *)(v13 + 40)];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v39 = v20;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19092BC9C();
  v37 = v12;
  v21 = v43;
  sub_190A48838();
  if (v21)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    sub_1908AA544(v42, (uint64_t *)&unk_1ECF6C858);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v43 = v5;
    LOBYTE(v45) = 0;
    sub_1908AA2F4(&qword_1EE1EB750, type metadata accessor for ControlTemplateButton.Option, (uint64_t)&protocol conformance descriptor for ControlTemplateButton.Option);
    v22 = (uint64_t)v35;
    sub_190A48580();
    sub_1908BD0B4(v22, (uint64_t)v16, type metadata accessor for ControlTemplateButton.Option);
    LOBYTE(v45) = 1;
    v23 = (uint64_t)v8;
    sub_190A48580();
    v24 = v41;
    sub_1908BD0B4(v23, (uint64_t)&v16[v41[5]], type metadata accessor for ControlTemplateButton.Option);
    v44 = 2;
    sub_19092BD24();
    sub_190A48580();
    *(_QWORD *)&v16[v24[6]] = v45;
    LOBYTE(v45) = 3;
    sub_1908AA2F4(&qword_1ECF69D80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    v25 = (uint64_t)v43;
    sub_190A4852C();
    v26 = (uint64_t *)v39;
    sub_1908DCA84(v25, v42, (uint64_t *)&unk_1ECF6C858);
    LOBYTE(v45) = 4;
    v27 = sub_190A48544();
    v28 = (uint64_t)v40;
    v16[v24[8]] = v27 & 1;
    LOBYTE(v45) = 5;
    v16[v24[9]] = sub_190A48544() & 1;
    LOBYTE(v45) = 6;
    v29 = sub_190A48514();
    v31 = v30;
    swift_bridgeObjectRelease();
    *v26 = v29;
    v26[1] = v31;
    LOBYTE(v45) = 7;
    LOBYTE(v29) = sub_190A48544();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v37, v38);
    v16[v24[11]] = v29 & 1;
    sub_1908AF5D8((uint64_t)v16, v34, type metadata accessor for ControlTemplateButton);
    __swift_destroy_boxed_opaque_existential_1(v28);
    return sub_1908B5150((uint64_t)v16, type metadata accessor for ControlTemplateButton);
  }
}

uint64_t sub_19092ACC8(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t sub_19092ACD4(void (*a1)(char *), uint64_t a2)
{
  return ControlTemplateButton.validateIcon(_:)(a1, a2);
}

uint64_t ControlTemplateButton.validateIcon(_:)(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(char *);
  uint64_t v22;
  void (*v23)(char *);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *);
  uint64_t v29;

  v28 = a1;
  v29 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v25 - v7;
  v9 = sub_190A47260();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v25 - v14;
  v16 = *(int *)(type metadata accessor for ControlTemplateButton(0) + 20);
  v26 = v2;
  v17 = v2 + v16;
  v18 = type metadata accessor for ControlTemplateButton.Option(0);
  sub_1908AAA48(v17 + *(int *)(v18 + 24), (uint64_t)v8, (uint64_t *)&unk_1ECF6A3B8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v19(v8, 1, v9) == 1)
  {
    sub_1908AA544((uint64_t)v8, (uint64_t *)&unk_1ECF6A3B8);
    v20 = v27;
    v21 = v28;
  }
  else
  {
    v25 = v13;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    v22 = v27;
    v23 = v28;
    v28(v15);
    v20 = v22;
    if (v22)
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    v21 = v23;
    v13 = v25;
  }
  sub_1908AAA48(v26 + *(int *)(v18 + 24), (uint64_t)v6, (uint64_t *)&unk_1ECF6A3B8);
  if (v19(v6, 1, v9) == 1)
    return sub_1908AA544((uint64_t)v6, (uint64_t *)&unk_1ECF6A3B8);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v6, v9);
  v21(v13);
  if (v20)
  {
    v15 = v13;
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_19092AF2C(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 44));
}

uint64_t sub_19092AF3C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ControlTemplateButton.init(from:)(a1, a2);
}

uint64_t sub_19092AF50(_QWORD *a1)
{
  return ControlTemplateButton.encode(to:)(a1);
}

uint64_t ControlTemplateButton.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  uint64_t v10;
  unint64_t v11;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6A3B8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v11 = 0xE000000000000000;
  sub_190A48298();
  sub_190A47B3C();
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v4 = type metadata accessor for ControlTemplateButton(0);
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v5 = type metadata accessor for ControlTemplateButton.Option(0);
  sub_1908AAA48(v0 + *(int *)(v5 + 24), (uint64_t)v3, (uint64_t *)&unk_1ECF6A3B8);
  v6 = sub_190A47260();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v6) == 1)
  {
    sub_1908AA544((uint64_t)v3, (uint64_t *)&unk_1ECF6A3B8);
  }
  else
  {
    sub_190A471DC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
  }
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  v9[1] = *(_QWORD *)(v0 + *(int *)(v4 + 24));
  sub_190A483DC();
  sub_190A47B3C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  swift_bridgeObjectRetain();
  sub_190A47B3C();
  swift_bridgeObjectRelease();
  sub_190A47B3C();
  return v10;
}

uint64_t _s9WidgetKit21ControlTemplateButtonV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  char v35;
  void (*v36)(char *, uint64_t);
  int *v37;
  _QWORD *v38;
  _QWORD *v39;
  char v40;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  int *v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;

  v4 = sub_190A45FC4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1EA438);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECF6C858);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v48 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v48 - v18;
  if ((_s9WidgetKit21ControlTemplateButtonV6OptionV2eeoiySbAE_AEtFZ_0(a1, a2) & 1) == 0)
    goto LABEL_17;
  v53 = v5;
  v20 = (int *)type metadata accessor for ControlTemplateButton(0);
  if ((_s9WidgetKit21ControlTemplateButtonV6OptionV2eeoiySbAE_AEtFZ_0((_QWORD *)((char *)a1 + v20[5]), (_QWORD *)((char *)a2 + v20[5])) & 1) == 0)goto LABEL_17;
  v51 = v4;
  v52 = a1;
  v21 = v20[6];
  v22 = *(void **)((char *)a1 + v21);
  v23 = *(void **)((char *)a2 + v21);
  if (v22)
  {
    if (!v23)
      goto LABEL_17;
    v49 = (int *)sub_19092E5B8();
    v24 = v22;
    v25 = v23;
    v26 = v24;
    v27 = v25;
    v28 = v26;
    v50 = a2;
    v29 = v28;
    v30 = v27;
    LOBYTE(v26) = sub_190A480F4();

    a2 = v50;
    if ((v26 & 1) == 0)
      goto LABEL_17;
  }
  else if (v23)
  {
    goto LABEL_17;
  }
  sub_1908AAA48((uint64_t)v52 + v20[7], (uint64_t)v19, (uint64_t *)&unk_1ECF6C858);
  v49 = v20;
  v50 = a2;
  sub_1908AAA48((uint64_t)a2 + v20[7], (uint64_t)v17, (uint64_t *)&unk_1ECF6C858);
  v31 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1908AAA48((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1ECF6C858);
  sub_1908AAA48((uint64_t)v17, v31, (uint64_t *)&unk_1ECF6C858);
  v32 = v53;
  v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
  v34 = v51;
  if (v33((uint64_t)v10, 1, v51) == 1)
  {
    sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6C858);
    sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6C858);
    if (v33(v31, 1, v34) == 1)
    {
      sub_1908AA544((uint64_t)v10, (uint64_t *)&unk_1ECF6C858);
      goto LABEL_15;
    }
LABEL_13:
    sub_1908AA544((uint64_t)v10, &qword_1EE1EA438);
    goto LABEL_17;
  }
  sub_1908AAA48((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_1ECF6C858);
  if (v33(v31, 1, v34) == 1)
  {
    sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6C858);
    sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6C858);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v34);
    goto LABEL_13;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v7, v31, v34);
  sub_1908AA2F4(&qword_1EE1ECEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
  v35 = sub_190A47AAC();
  v36 = *(void (**)(char *, uint64_t))(v32 + 8);
  v36(v7, v34);
  sub_1908AA544((uint64_t)v17, (uint64_t *)&unk_1ECF6C858);
  sub_1908AA544((uint64_t)v19, (uint64_t *)&unk_1ECF6C858);
  v36(v14, v34);
  sub_1908AA544((uint64_t)v10, (uint64_t *)&unk_1ECF6C858);
  if ((v35 & 1) == 0)
    goto LABEL_17;
LABEL_15:
  v37 = v49;
  v38 = v50;
  v39 = v52;
  if (*((unsigned __int8 *)v52 + v49[8]) != *((unsigned __int8 *)v50 + v49[8])
    || *((unsigned __int8 *)v52 + v49[9]) != *((unsigned __int8 *)v50 + v49[9]))
  {
    goto LABEL_17;
  }
  v42 = v49[10];
  v43 = (_QWORD *)((char *)v52 + v42);
  v44 = *(_QWORD *)((char *)v52 + v42 + 8);
  v45 = (_QWORD *)((char *)v50 + v42);
  v46 = v45[1];
  if (!v44)
  {
    if (!v46)
    {
LABEL_26:
      v40 = *((_BYTE *)v39 + v37[11]) ^ *((_BYTE *)v38 + v37[11]) ^ 1;
      return v40 & 1;
    }
LABEL_17:
    v40 = 0;
    return v40 & 1;
  }
  if (!v46)
    goto LABEL_17;
  if (*v43 == *v45 && v44 == v46)
    goto LABEL_26;
  v47 = sub_190A486DC();
  v37 = v49;
  v40 = 0;
  if ((v47 & 1) != 0)
    goto LABEL_26;
  return v40 & 1;
}

