void sub_18A71B2E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A71B2F8(uint64_t a1)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  const char *v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  const char *v16;
  void *v17;
  NSObject *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint8_t v27[128];
  uint8_t buf[4];
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 136))
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v2 = (void *)ck_log_facility_sql;
    if (os_log_type_enabled((os_log_t)ck_log_facility_sql, OS_LOG_TYPE_DEBUG))
    {
      v17 = *(void **)(*(_QWORD *)(a1 + 32) + 80);
      v18 = v2;
      objc_msgSend_CKSanitizedPath(v17, v19, v20, v21);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v29 = v22;
      _os_log_debug_impl(&dword_18A5C5000, v18, OS_LOG_TYPE_DEBUG, "Removing db at %{public}@", buf, 0xCu);

    }
    objc_msgSend_defaultManager(MEMORY[0x1E0CB3620], v3, v4, v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_removeItemAtPath_error_(v6, v7, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 80), 0);
    v23 = 0u;
    v24 = 0u;
    v25 = 0u;
    v26 = 0u;
    v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(&unk_1E1FC4190, v8, (uint64_t)&v23, (uint64_t)v27, 16);
    if (v9)
    {
      v12 = v9;
      v13 = *(_QWORD *)v24;
      do
      {
        for (i = 0; i != v12; ++i)
        {
          if (*(_QWORD *)v24 != v13)
            objc_enumerationMutation(&unk_1E1FC4190);
          objc_msgSend_stringByAppendingString_(*(void **)(*(_QWORD *)(a1 + 32) + 80), v10, *(_QWORD *)(*((_QWORD *)&v23 + 1) + 8 * i), v11);
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_removeItemAtPath_error_(v6, v16, (uint64_t)v15, 0);

        }
        v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(&unk_1E1FC4190, v10, (uint64_t)&v23, (uint64_t)v27, 16);
      }
      while (v12);
    }
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;

  }
}

uint64_t sub_18A71B568(char a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v6;
  NSObject *v7;
  NSObject *v8;
  int v10;
  id v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v6 = a2;
  if ((a1 & 1) == 0)
    goto LABEL_5;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v7 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
  {
    v10 = 138412546;
    v11 = v6;
    v12 = 2080;
    v13 = a4;
    _os_log_debug_impl(&dword_18A5C5000, v7, OS_LOG_TYPE_DEBUG, "%@ sql stmt:'%s'", (uint8_t *)&v10, 0x16u);
    if ((a1 & 8) == 0)
      goto LABEL_10;
  }
  else
  {
LABEL_5:
    if ((a1 & 8) == 0)
      goto LABEL_10;
  }
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v8 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
  {
    v10 = 138412290;
    v11 = v6;
    _os_log_debug_impl(&dword_18A5C5000, v8, OS_LOG_TYPE_DEBUG, "%@ sql close", (uint8_t *)&v10, 0xCu);
  }
LABEL_10:

  return 0;
}

void sub_18A71B904(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_18A71B91C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  id v7;
  const char *v8;
  _QWORD v9[4];
  id v10;
  uint64_t v11;

  v5 = a3;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = sub_18A71B9A4;
  v9[3] = &unk_1E1F62A60;
  v6 = *(_QWORD *)(a1 + 32);
  v10 = v5;
  v11 = v6;
  v7 = v5;
  objc_msgSend_usingStatementForSQL_performBlock_(a2, v8, (uint64_t)CFSTR("select name from sqlite_master where type = 'table'"), (uint64_t)v9);

}

void sub_18A71B9A4(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  sqlite3_stmt *v8;

  v8 = a2;
  if (((*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))() & 1) == 0)
  {
    do
    {
      if (!sub_18A5D6074((uint64_t)v8))
        break;
      sub_18A5DFDD4(v8, 0, v3, v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_addObject_(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v6, (uint64_t)v5, v7);

    }
    while (!(*(unsigned int (**)(void))(*(_QWORD *)(a1 + 32) + 16))());
  }

}

uint64_t sub_18A71BA2C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v2 = *(void **)(v1 + 40);
  *(_QWORD *)(v1 + 40) = 0;

  return 1;
}

void sub_18A71BAB4(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  objc_msgSend_allTableNames(*(void **)(a1 + 32), v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v8, (uint64_t)&v15, (uint64_t)v19, 16);
  if (v9)
  {
    v12 = v9;
    v13 = *(_QWORD *)v16;
    do
    {
      v14 = 0;
      do
      {
        if (*(_QWORD *)v16 != v13)
          objc_enumerationMutation(v7);
        objc_msgSend_executeSQL_(v3, v10, (uint64_t)CFSTR("drop table %@"), v11, *(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * v14++));
      }
      while (v12 != v14);
      v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v10, (uint64_t)&v15, (uint64_t)v19, 16);
    }
    while (v12);
  }

}

uint64_t sub_18A71BBCC()
{
  return 4;
}

void sub_18A71BCF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A71BD10(uint64_t a1, void *a2)
{
  id v4;
  uint64_t v5;
  const char *v6;
  _QWORD v7[4];
  id v8;
  uint64_t v9;

  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = sub_18A71BD90;
  v7[3] = &unk_1E1F62AF8;
  v4 = *(id *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v8 = v4;
  v9 = v5;
  objc_msgSend_usingStatementForSQL_performBlock_(a2, v6, (uint64_t)CFSTR("select value from Properties where key = ?"), (uint64_t)v7);

}

void sub_18A71BD90(uint64_t a1, void *a2)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v9 = a2;
  objc_msgSend_bindText_atIndex_(v9, v3, *(_QWORD *)(a1 + 32), 0);
  if (sub_18A5D6074((uint64_t)v9))
  {
    sub_18A5DFDD4((sqlite3_stmt *)v9, 0, v4, v5);
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

  }
}

void sub_18A71BF04(uint64_t a1, void *a2)
{
  const char *v4;
  _QWORD v5[4];
  id v6;
  id v7;

  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = sub_18A71BF94;
  v5[3] = &unk_1E1F62B48;
  v6 = *(id *)(a1 + 32);
  v7 = *(id *)(a1 + 40);
  objc_msgSend_usingStatementForSQL_performBlock_(a2, v4, (uint64_t)CFSTR("insert or replace into Properties (key, value) values (?,?)"), (uint64_t)v5);

}

void sub_18A71BF94(uint64_t a1, void *a2)
{
  uint64_t v3;
  const char *v4;
  const char *v5;
  id v6;

  v3 = *(_QWORD *)(a1 + 32);
  v6 = a2;
  objc_msgSend_bindText_atIndex_(v6, v4, v3, 0);
  objc_msgSend_bindText_atIndex_(v6, v5, *(_QWORD *)(a1 + 40), 1);
  sub_18A5D6074((uint64_t)v6);

}

void sub_18A71C1C8(uint64_t a1, void *a2)
{
  const char *v3;
  _QWORD v4[4];
  id v5;

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = sub_18A71C240;
  v4[3] = &unk_1E1F62B98;
  v5 = *(id *)(a1 + 32);
  objc_msgSend_usingStatementForSQL_performBlock_(a2, v3, (uint64_t)CFSTR("delete from Properties where key = ?"), (uint64_t)v4);

}

void sub_18A71C240(uint64_t a1, void *a2)
{
  uint64_t v2;
  const char *v3;
  id v4;

  v2 = *(_QWORD *)(a1 + 32);
  v4 = a2;
  objc_msgSend_bindText_atIndex_(v4, v3, v2, 0);
  sub_18A5D6074((uint64_t)v4);

}

void sub_18A71C478(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  const char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  const char *v10;
  _QWORD v11[4];
  id v12;
  id v13;

  v4 = a3;
  objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v5, (uint64_t)CFSTR("pragma table_info(%@)"), v6, *(_QWORD *)(a1 + 32));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = sub_18A71C53C;
  v11[3] = &unk_1E1F62BE8;
  v13 = v4;
  v8 = *(void **)(a1 + 40);
  v12 = *(id *)(a1 + 48);
  v9 = v4;
  objc_msgSend_usingStatementForSQL_performBlock_(v8, v10, (uint64_t)v7, (uint64_t)v11);

}

void sub_18A71C53C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  sqlite3_stmt *v9;

  v9 = a2;
  if (((*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))() & 1) == 0)
  {
    do
    {
      if (!sub_18A5D6074((uint64_t)v9))
        break;
      v5 = *(void **)(a1 + 32);
      sub_18A5DFDD4(v9, (const char *)1, v3, v4);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_addObject_(v5, v7, (uint64_t)v6, v8);

    }
    while (!(*(unsigned int (**)(void))(*(_QWORD *)(a1 + 40) + 16))());
  }

}

void sub_18A71C7EC(uint64_t a1, void *a2)
{
  id v3;
  id *v4;

  v4 = a2;
  sub_18A5D6374((uint64_t)v4, *(void **)(a1 + 32));
  while (1)
  {
    if (v4)
    {
      v3 = v4[5];
      if (v3)
        break;
    }
    if (!sub_18A5D6074((uint64_t)v4))
      goto LABEL_8;
  }

LABEL_8:
}

void sub_18A71CCA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A71CCB8(uint64_t a1, void *a2)
{
  void *v3;
  _QWORD *v4;
  void *v5;
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  sub_18A5D6374((uint64_t)v4, v3);
  sub_18A5D6074((uint64_t)v4);
  if (v4)
    v5 = (void *)v4[5];
  else
    v5 = 0;
  v6 = v5;

  if (!v6)
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend_lastInsertRowID(*(void **)(a1 + 40), v7, v8, v9);
}

void sub_18A71CE14(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  sub_18A5D6374((uint64_t)v3, v2);
  sub_18A5D6074((uint64_t)v3);

}

void sub_18A71D2B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A71D2CC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  const char *v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  const char *v19;
  _QWORD v20[4];
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;

  v5 = a3;
  v6 = *(void **)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 64);
  v8 = a2;
  objc_msgSend__tableNameForClass_(v6, v9, v7, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v12, (uint64_t)CFSTR("delete from %@ where %@"), v13, v11, *(_QWORD *)(a1 + 40));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = sub_18A71D3D0;
  v20[3] = &unk_1E1F62C88;
  v15 = *(id *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 56);
  v23 = v5;
  v24 = v16;
  v17 = *(_QWORD *)(a1 + 32);
  v21 = v15;
  v22 = v17;
  v18 = v5;
  objc_msgSend_usingStatementForSQL_performBlock_(v8, v19, (uint64_t)v14, (uint64_t)v20);

}

uint64_t sub_18A71D3D0(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  uint64_t result;
  const char *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  sub_18A5D6374((uint64_t)v4, v3);
  sub_18A5D6074((uint64_t)v4);

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  if ((result & 1) == 0)
  {
    result = objc_msgSend_changes(*(void **)(a1 + 40), v6, v7, v8);
    *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = result;
  }
  return result;
}

void sub_18A71D684(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  const char *v16;
  _QWORD v17[5];
  id v18;
  id v19;
  id v20;
  uint64_t v21;

  v5 = a3;
  v6 = a1[4];
  v7 = a1[5];
  v17[0] = MEMORY[0x1E0C809B0];
  v17[2] = sub_18A71D768;
  v17[3] = &unk_1E1F62CD8;
  v8 = a1[8];
  v9 = (void *)a1[9];
  v20 = v5;
  v17[4] = v8;
  v10 = a1[6];
  v11 = a1[7];
  v17[1] = 3221225472;
  v12 = v9;
  v14 = (void *)a1[10];
  v13 = a1[11];
  v18 = v12;
  v21 = v13;
  v19 = v14;
  v15 = v5;
  objc_msgSend_selectFrom_where_bindings_orderBy_limit_block_(a2, v16, v6, v7, v10, 0, v11, v17);

}

void sub_18A71D768(uint64_t a1, void *a2, _BYTE *a3)
{
  const char *v5;
  void *v6;
  id v7;
  const char *v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  id v13;

  v13 = a2;
  if ((*(unsigned int (**)(void))(*(_QWORD *)(a1 + 56) + 16))())
  {
    *a3 = 1;
  }
  else
  {
    objc_msgSend__boxedPropertyDictionary_forObjCClass_(*(void **)(a1 + 32), v5, (uint64_t)v13, *(_QWORD *)(a1 + 40));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_alloc(*(Class *)(a1 + 64));
    v10 = (void *)objc_msgSend_initWithPropertyDictionary_(v7, v8, (uint64_t)v6, v9);
    objc_msgSend_addObject_(*(void **)(a1 + 48), v11, (uint64_t)v10, v12);

  }
}

void sub_18A71D964(uint64_t a1, void *a2, _BYTE *a3)
{
  id v5;
  void *v6;
  const char *v7;
  void *v8;
  id v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;
  char v15;

  v5 = a2;
  v6 = (void *)MEMORY[0x18D76DE4C]();
  objc_msgSend__boxedPropertyDictionary_forObjCClass_(*(void **)(a1 + 32), v7, (uint64_t)v5, *(_QWORD *)(a1 + 40));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_alloc(*(Class *)(a1 + 56));
  v12 = (void *)objc_msgSend_initWithPropertyDictionary_(v9, v10, (uint64_t)v8, v11);
  v15 = 0;
  v13 = *(_QWORD *)(a1 + 48);
  if (v13)
  {
    (*(void (**)(uint64_t, void *, char *))(v13 + 16))(v13, v12, &v15);
    v14 = v15;
  }
  else
  {
    v14 = 0;
  }
  *a3 = v14;

  objc_autoreleasePoolPop(v6);
}

id sub_18A71DBF8(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  void *v5;
  id v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  void *v11;

  v4 = *(void **)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  v6 = a3;
  objc_msgSend_propertyForName_(v5, v7, a2, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend__boxedValue_forObjcCProperty_(v4, v10, (uint64_t)v6, (uint64_t)v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

void sub_18A71DF94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A71DFAC(uint64_t a1, void *a2)
{
  _QWORD v3[5];

  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = sub_18A71E00C;
  v3[3] = &unk_1E1F62D78;
  v3[4] = *(_QWORD *)(a1 + 32);
  return objc_msgSend_usingStatementForSQL_performBlock_(a2, (const char *)a2, (uint64_t)CFSTR("pragma user_version"), (uint64_t)v3);
}

void sub_18A71E00C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  id i;

  for (i = a2;
        sub_18A5D6074((uint64_t)i);

}

void sub_18A71E358(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 512) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 512);
    *(_QWORD *)(v8 + 512) = v7;

  }
}

void sub_18A71E4E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A71E500(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A71E528(uint64_t a1)
{

}

void sub_18A71E530(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 512));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A71E68C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void sub_18A71E81C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A71E834(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A71F390(uint64_t a1, void *a2, void *a3)
{
  id v5;
  CKMediaItemMaker *v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;

  v20 = a3;
  v5 = a2;
  v6 = [CKMediaItemMaker alloc];
  v9 = (void *)objc_msgSend_initWithAssetStreamHandle_(v6, v7, (uint64_t)v5, v8);

  objc_msgSend_setMediaItemMaker_(*(void **)(a1 + 32), v10, (uint64_t)v9, v11);
  v15 = *(_QWORD *)(a1 + 64);
  if (v15)
  {
    v17 = *(_QWORD *)(a1 + 40);
    v16 = *(_QWORD *)(a1 + 48);
    v18 = *(_QWORD *)(a1 + 32);
    objc_msgSend_CKClientSuitableError(v20, v12, v13, v14);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))(v15 + 16))(v15, v17, v16, v18, v19);

  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));

}

void sub_18A7202A0()
{
  CKAccountOverrideInfo *v0;
  const char *v1;
  uint64_t v2;
  void *v3;

  v0 = [CKAccountOverrideInfo alloc];
  v2 = objc_msgSend__initWithEmail_password_recoveryKey_(v0, v1, (uint64_t)CFSTR("__anonymous_account__"), 0, 0);
  v3 = (void *)qword_1ECD96BD8;
  qword_1ECD96BD8 = v2;

}

void sub_18A72031C()
{
  CKAccountOverrideInfo *v0;
  const char *v1;
  uint64_t v2;
  void *v3;

  v0 = [CKAccountOverrideInfo alloc];
  v2 = objc_msgSend__initWithEmail_password_recoveryKey_(v0, v1, (uint64_t)CFSTR("__live_account__"), 0, 0);
  v3 = (void *)qword_1ECD96BE8;
  qword_1ECD96BE8 = v2;

}

void sub_18A7215C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7216CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t CKSyncEngineDelegateShouldFetchChanges(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  const char *v8;
  uint64_t ChangesForZoneID;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    ChangesForZoneID = objc_msgSend_syncEngine_shouldFetchChangesForZoneID_(v5, v8, (uint64_t)v6, (uint64_t)v7);
  else
    ChangesForZoneID = 1;

  return ChangesForZoneID;
}

uint64_t CKSyncEngineDataSourceShouldFetchAssetContents(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  const char *v8;
  uint64_t AssetContentsForZoneID;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    AssetContentsForZoneID = objc_msgSend_syncEngine_shouldFetchAssetContentsForZoneID_(v5, v8, (uint64_t)v6, (uint64_t)v7);
  else
    AssetContentsForZoneID = 1;

  return AssetContentsForZoneID;
}

uint64_t sub_18A723560(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel_syncEngine_failedToDeleteRecordZoneWithID_error_, *(_QWORD *)(a1 + 40), a2);
}

BOOL sub_18A723574(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  char isEqualToString;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  _BOOL8 v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const char *v43;
  uint64_t v44;
  void *v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const char *v50;
  uint64_t v51;
  int v52;
  id v53;
  unint64_t v54;
  _QWORD v56[6];
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  char v60;

  objc_msgSend_CKClientSuitableError(a1, a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_domain(v5, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_isEqualToString_(v9, v10, *MEMORY[0x1E0CB28A8], v11))
  {
    if (objc_msgSend_code(v5, v12, v13, v14) == 4099)
    {

      goto LABEL_21;
    }
    v21 = objc_msgSend_code(v5, v15, v16, v17);

    if (v21 == 4097)
      goto LABEL_21;
  }
  else
  {

  }
  objc_msgSend_domain(v5, v18, v19, v20);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v22, v23, (uint64_t)CFSTR("CKErrorDomain"), v24);

  if ((isEqualToString & 1) != 0)
  {
    if (objc_msgSend_code(v5, v26, v27, v28) == 2)
    {
      v57 = 0;
      v58 = &v57;
      v59 = 0x2020000000;
      v60 = 0;
      objc_msgSend_userInfo(v5, v29, v30, v31);
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v32, v33, (uint64_t)CFSTR("CKPartialErrors"), v34);
      v35 = (void *)objc_claimAutoreleasedReturnValue();

      v56[0] = MEMORY[0x1E0C809B0];
      v56[1] = 3221225472;
      v56[2] = sub_18A724F54;
      v56[3] = &unk_1E1F62F10;
      v56[4] = &v57;
      v56[5] = a2;
      objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v35, v36, (uint64_t)v56, v37);
      v38 = *((_BYTE *)v58 + 24) != 0;

      _Block_object_dispose(&v57, 8);
      goto LABEL_25;
    }
    if (objc_msgSend_code(v5, v29, v30, v31) == 1)
    {
      objc_msgSend_userInfo(v5, v39, v40, v41);
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v42, v43, *MEMORY[0x1E0CB3388], v44);
      v45 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend_domain(v45, v46, v47, v48);
      v49 = (void *)objc_claimAutoreleasedReturnValue();
      v52 = objc_msgSend_isEqualToString_(v49, v50, (uint64_t)CFSTR("CKErrorDomain"), v51);

      if (v52)
      {
        v53 = v45;

        v5 = v53;
      }

    }
    v54 = objc_msgSend_code(v5, v39, v40, v41);
    if (v54 <= 0x24)
    {
      if (((1 << v54) & 0x1000A002D8) != 0)
        goto LABEL_21;
      if (v54 == 20)
      {
        if (a2)
          *a2 = 0;
        v38 = 1;
        goto LABEL_25;
      }
    }
    if (v54 - 110 <= 5 && ((1 << (v54 - 110)) & 0x23) != 0)
    {
LABEL_21:
      v38 = 1;
      if (a2)
        *a2 = 1;
      goto LABEL_25;
    }
  }
  v38 = 0;
  if (a2)
    *a2 = 0;
LABEL_25:

  return v38;
}

void sub_18A723800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A723818(uint64_t a1, void *a2, void *a3)
{
  void *v5;
  uint64_t v6;
  id v7;
  const char *v8;
  const char *v9;
  uint64_t v10;
  const char *v11;
  id v12;

  v5 = *(void **)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = a3;
  v12 = a2;
  objc_msgSend_syncEngine_failedToDeleteRecordWithID_error_(v5, v8, v6, (uint64_t)v12, v7);
  objc_msgSend_addObject_(*(void **)(a1 + 48), v9, (uint64_t)v12, v10);
  objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 56), v11, (uint64_t)v7, (uint64_t)v12);

}

uint64_t sub_18A723BC8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)(a1 + 32);
  objc_msgSend_recordID(a2, (const char *)a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend_containsRecordID_(v4, v6, (uint64_t)v5, v7);

  return v8;
}

id sub_18A723C0C(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  void *v5;
  void *v6;
  CKSyncEnginePendingRecordZoneChange *v7;
  const char *v8;
  void *v9;
  const char *v10;
  uint64_t v11;

  v3 = a2;
  objc_msgSend_syncEngine_recordToSaveForRecordID_(*(void **)(a1 + 32), v4, *(_QWORD *)(a1 + 40), (uint64_t)v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v5)
  {
    v6 = *(void **)(a1 + 48);
    v7 = [CKSyncEnginePendingRecordZoneChange alloc];
    v9 = (void *)objc_msgSend_initWithRecordID_type_(v7, v8, (uint64_t)v3, 0);
    objc_msgSend_addObject_(v6, v10, (uint64_t)v9, v11);

  }
  return v5;
}

void sub_18A7240A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A724308(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

const __CFString *CKStringFromSyncReason(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("Unknown");
  if (a1 == 1)
    v1 = CFSTR("Manual");
  if (a1)
    return v1;
  else
    return CFSTR("Scheduled");
}

uint64_t sub_18A724838(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_ckShortDescription(a2, (const char *)a2, a3, a4);
}

uint64_t sub_18A724E1C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_ckShortDescription(a2, (const char *)a2, a3, a4);
}

uint64_t sub_18A724E24(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_ckShortDescription(a2, (const char *)a2, a3, a4);
}

uint64_t sub_18A724F54(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t result;

  result = sub_18A723574(a3, *(_QWORD *)(a1 + 40));
  if ((_DWORD)result)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

void sub_18A72632C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void *sub_18A72637C(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A7263A4(uint64_t a1)
{

}

void sub_18A7263AC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7263EC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 528) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 528);
    *(_QWORD *)(v8 + 528) = v7;

  }
}

void sub_18A72657C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A726594(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 528));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7265D4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 536) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 536);
    *(_QWORD *)(v8 + 536) = v7;

  }
}

void sub_18A726764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A72677C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 536));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7267BC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 544) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 544);
    *(_QWORD *)(v8 + 544) = v7;

  }
}

void sub_18A72680C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 544));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A72684C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 552) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 552);
    *(_QWORD *)(v8 + 552) = v7;

  }
}

void sub_18A72689C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 552));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7268DC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 560) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 560);
    *(_QWORD *)(v8 + 560) = v7;

  }
}

void sub_18A726A6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A726A84(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 560));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

uint64_t sub_18A729528(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_predicateWithFormat_(MEMORY[0x1E0CB3880], a2, (uint64_t)CFSTR("refCount = 0"), a4);
}

void sub_18A72A9C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void sub_18A72AA54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void sub_18A72AAE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void sub_18A72AB84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void sub_18A72AC44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void sub_18A72B490(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A72B914(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  const char *v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  _QWORD v11[4];
  id v12;
  uint8_t buf[16];

  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v2 = ck_log_facility_data_repair;
  if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_18A5C5000, v2, OS_LOG_TYPE_INFO, "Fetching server changes manually", buf, 2u);
  }
  v3 = (void *)objc_opt_new();
  objc_msgSend_setForceFetchChanges_(v3, v4, 1, v5);
  objc_msgSend_repairZoneSyncEngine(*(void **)(a1 + 32), v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = sub_18A72BA34;
  v11[3] = &unk_1E1F60910;
  v12 = *(id *)(a1 + 40);
  objc_msgSend_fetchChangesWithOptions_completionHandler_(v9, v10, (uint64_t)v3, (uint64_t)v11);

}

void sub_18A72BA34(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (v3)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v4 = ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
    {
      v7 = 138412290;
      v8 = v3;
      _os_log_error_impl(&dword_18A5C5000, v4, OS_LOG_TYPE_ERROR, "Fetch server changes completed with error %@", (uint8_t *)&v7, 0xCu);
    }
  }
  else
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v5 = ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_INFO))
    {
      LOWORD(v7) = 0;
      _os_log_impl(&dword_18A5C5000, v5, OS_LOG_TYPE_INFO, "Fetch server changes completed successfully", (uint8_t *)&v7, 2u);
    }
  }
  v6 = *(_QWORD *)(a1 + 32);
  if (v6)
    (*(void (**)(void))(v6 + 16))();

}

uint64_t sub_18A72BBD8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_scheduleOrInvokeRepairsNow(*(void **)(a1 + 32), a2, a3, a4);
}

uint64_t sub_18A72BCA0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_dispatchEvent_(*(void **)(a1 + 32), a2, *(_QWORD *)(a1 + 40), a4);
}

void sub_18A72BDAC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  id v20;

  objc_msgSend_callbackForOverridePoint(*(void **)(a1 + 32), a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v5)
  {
    objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v6, v7, v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setCallbackForOverridePoint_(*(void **)(a1 + 32), v10, (uint64_t)v9, v11);

  }
  v20 = _Block_copy(*(const void **)(a1 + 40));
  objc_msgSend_callbackForOverridePoint(*(void **)(a1 + 32), v12, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_numberWithInteger_(MEMORY[0x1E0CB37E8], v16, *(_QWORD *)(a1 + 48), v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v15, v19, (uint64_t)v20, (uint64_t)v18);

}

void sub_18A72BFBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A72BFD4(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A72BFFC(uint64_t a1)
{

}

void sub_18A72C004(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;

  objc_msgSend_callbackForOverridePoint(*(void **)(a1 + 32), a2, a3, a4);
  v13 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_numberWithInteger_(MEMORY[0x1E0CB37E8], v5, *(_QWORD *)(a1 + 48), v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v13, v8, (uint64_t)v7, v9);
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v12 = *(void **)(v11 + 40);
  *(_QWORD *)(v11 + 40) = v10;

}

uint64_t sub_18A72C07C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40) + 16))();
}

void sub_18A72C4E8(void **a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  void *v19;
  NSObject *v20;
  const char *v21;
  uint64_t v22;
  void *v23;
  NSObject *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  const char *v35;
  int v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  double v56;
  NSObject *v57;
  void *v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  double v63;
  void *v64;
  const char *v65;
  int v66;
  NSObject *v67;
  void *v68;
  const char *v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  double v73;
  void *v74;
  const char *v75;
  const char *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  const char *v80;
  uint64_t v81;
  uint64_t v82;
  const char *v83;
  uint64_t v84;
  uint64_t v85;
  const char *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  const char *v90;
  uint64_t v91;
  void *v92;
  NSObject *v93;
  const char *v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  void *v98;
  const __CFString *v99;
  _BYTE v100[22];
  __int16 v101;
  const __CFString *v102;
  uint64_t v103;

  v103 = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend_canPerformFunction_(a1[4], a2, 0, a4) & 1) != 0)
  {
    v7 = (uint64_t)a1[5];
    if (!v7)
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v24 = ck_log_facility_data_repair;
      if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)v100 = 0;
        _os_log_impl(&dword_18A5C5000, v24, OS_LOG_TYPE_INFO, "Asset was successfully reuploaded, so deleting persisted repair record", v100, 2u);
      }
      objc_msgSend_database(a1[4], v25, v26, v27);
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_repairZoneRecordID(a1[6], v29, v30, v31);
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_deleteRepairRecord_(v28, v33, (uint64_t)v32, v34);

      goto LABEL_40;
    }
    if (objc_msgSend_repairErrorShouldBeMarkedAsBroken_(CKAssetRepairOperationUtilities, v5, v7, v6))
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v8 = ck_log_facility_data_repair;
      if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)v100 = 0;
        _os_log_impl(&dword_18A5C5000, v8, OS_LOG_TYPE_INFO, "Asset was successfully marked as missing, so deleting persisted repair record", v100, 2u);
      }
      objc_msgSend_database(a1[4], v9, v10, v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_repairZoneRecordID(a1[6], v13, v14, v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_deleteRepairRecord_(v12, v17, (uint64_t)v16, v18);
    }
    else
    {
      v36 = CKCanRetryForError(a1[5]);
      objc_msgSend_database(a1[4], v37, v38, v39);
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_repairZoneRecordID(a1[6], v41, v42, v43);
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_recordName(v44, v45, v46, v47);
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      v51 = objc_msgSend_delayedSyncCountForRecordName_(v40, v49, (uint64_t)v48, v50);
      objc_msgSend_retryableErrorMaxRetryCount(a1[4], v52, v53, v54);
      v56 = v55;

      if (CKErrorIsCode(a1[5], 20))
      {
        if (ck_log_initialization_predicate != -1)
          dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
        v57 = ck_log_facility_data_repair;
        if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_INFO))
        {
          v58 = a1[5];
          *(_DWORD *)v100 = 138412290;
          *(_QWORD *)&v100[4] = v58;
          _os_log_impl(&dword_18A5C5000, v57, OS_LOG_TYPE_INFO, "Received repair cancellation %@, rescheduling", v100, 0xCu);
        }
        v62 = CKRetryAfterSecondsForError(a1[5]);
        if (v62 == 0.0)
        {
          objc_msgSend_cancelledErrorRetryTime(a1[4], v59, v60, v61);
          v62 = v63;
        }
        v64 = a1[4];
        objc_msgSend_repairZoneRecordID(a1[6], v59, v60, v61);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_scheduleRecordRepair_withDelay_increasingCount_(v64, v65, (uint64_t)v12, 0, v62);
        goto LABEL_38;
      }
      if (v56 > (double)v51)
        v66 = v36;
      else
        v66 = 0;
      if (v66 == 1)
      {
        if (ck_log_initialization_predicate != -1)
          dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
        v67 = ck_log_facility_data_repair;
        if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_INFO))
        {
          v68 = a1[5];
          *(_DWORD *)v100 = 138412290;
          *(_QWORD *)&v100[4] = v68;
          _os_log_impl(&dword_18A5C5000, v67, OS_LOG_TYPE_INFO, "Received recoverable repair error %@, rescheduling", v100, 0xCu);
        }
        v72 = CKRetryAfterSecondsForError(a1[5]);
        if (v72 == 0.0)
        {
          objc_msgSend_retryableErrorRetryTime(a1[4], v69, v70, v71);
          v72 = v73;
        }
        v74 = a1[4];
        objc_msgSend_repairZoneRecordID(a1[6], v69, v70, v71);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_scheduleRecordRepair_withDelay_increasingCount_(v74, v75, (uint64_t)v12, 1, v72);
        goto LABEL_38;
      }
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v79 = (void *)ck_log_facility_data_repair;
      if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
      {
        v92 = a1[6];
        v93 = v79;
        objc_msgSend_repairZoneRecordID(v92, v94, v95, v96);
        v97 = (void *)objc_claimAutoreleasedReturnValue();
        v98 = a1[5];
        v99 = CFSTR("which is unrecoverable");
        *(_DWORD *)v100 = 138412802;
        *(_QWORD *)&v100[4] = v97;
        if (v36)
          v99 = CFSTR("after several attempts");
        *(_WORD *)&v100[12] = 2112;
        *(_QWORD *)&v100[14] = v98;
        v101 = 2112;
        v102 = v99;
        _os_log_error_impl(&dword_18A5C5000, v93, OS_LOG_TYPE_ERROR, "Could not recover repair record %@ with error %@ %@, so marking locally as unrecoverable", v100, 0x20u);

      }
      objc_msgSend_database(a1[4], v80, v81, v82, *(_OWORD *)v100);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_repairZoneRecordID(a1[6], v83, v84, v85);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_recordName(v16, v86, v87, v88);
      v89 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_markRecordNameUnrecoverable_(v12, v90, (uint64_t)v89, v91);

    }
LABEL_38:

    if (objc_msgSend_errorShouldTriggerNetworkReachabilityEvent_(CKAssetRepairOperationUtilities, v76, (uint64_t)a1[5], v77))objc_msgSend_dispatchEvent_(a1[4], v35, 7, v78);
LABEL_40:
    objc_msgSend_invokeCallbackForOverridePoint_withError_onCallbackQueue_(a1[4], v35, 4, (uint64_t)a1[5], 1);
    return;
  }
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v19 = (void *)ck_log_facility_data_repair;
  if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
  {
    v20 = v19;
    objc_msgSend_nameFromFunction_(CKUploadRequestManagerStateMachine, v21, 0, v22);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)v100 = 138543362;
    *(_QWORD *)&v100[4] = v23;
    _os_log_debug_impl(&dword_18A5C5000, v20, OS_LOG_TYPE_DEBUG, "Upload request repair scheduler attempted to perform function %{public}@, but failed to do so", v100, 0xCu);

  }
}

uint64_t sub_18A72CB44(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_dispatchEvent_(*(void **)(a1 + 32), a2, 17, a4);
}

void sub_18A72CC5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_18A72CC70(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const char *v37;
  uint64_t v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  NSObject *v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  NSObject *v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  int v57;
  void *v58;
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend_canPerformFunction_(*(void **)(a1 + 32), a2, 0, a4) & 1) != 0)
  {
    if (objc_msgSend_isRepairRecordActionable_(*(void **)(a1 + 32), v5, *(_QWORD *)(a1 + 40), v6))
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v7 = (void *)ck_log_facility_data_repair;
      if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
      {
        v45 = *(void **)(a1 + 40);
        v46 = v7;
        objc_msgSend_recordID(v45, v47, v48, v49);
        v50 = (void *)objc_claimAutoreleasedReturnValue();
        v57 = 138412290;
        v58 = v50;
        _os_log_debug_impl(&dword_18A5C5000, v46, OS_LOG_TYPE_DEBUG, "Sync engine: repair record %@ was fetched, persisting", (uint8_t *)&v57, 0xCu);

      }
      objc_msgSend_database(*(void **)(a1 + 32), v8, v9, v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_persistRepairRecord_(v11, v12, *(_QWORD *)(a1 + 40), v13);
    }
    else
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v19 = (void *)ck_log_facility_data_repair;
      if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
      {
        v51 = *(void **)(a1 + 40);
        v52 = v19;
        objc_msgSend_recordID(v51, v53, v54, v55);
        v56 = (void *)objc_claimAutoreleasedReturnValue();
        v57 = 138412290;
        v58 = v56;
        _os_log_debug_impl(&dword_18A5C5000, v52, OS_LOG_TYPE_DEBUG, "Sync engine: repair record %@ was fetched but is not actionable, deleting", (uint8_t *)&v57, 0xCu);

      }
      objc_msgSend_database(*(void **)(a1 + 32), v20, v21, v22);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_recordID(*(void **)(a1 + 40), v24, v25, v26);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_deleteRepairRecord_(v23, v28, (uint64_t)v27, v29);

      objc_msgSend_repairProcessor(*(void **)(a1 + 32), v30, v31, v32);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_recordID(*(void **)(a1 + 40), v33, v34, v35);
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_removeUploadRequestWithRecordID_(v11, v37, (uint64_t)v36, v38);

    }
    if ((objc_msgSend_ignoreUploadRequestPushNotifications(CKUploadRequestManager, v39, v40, v41) & 1) == 0)
      objc_msgSend_scheduleOrInvokeRepairsNow(*(void **)(a1 + 32), v42, v43, v44);
  }
  else
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v14 = (void *)ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
    {
      v15 = v14;
      objc_msgSend_nameFromFunction_(CKUploadRequestManagerStateMachine, v16, 0, v17);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v57 = 138543362;
      v58 = v18;
      _os_log_debug_impl(&dword_18A5C5000, v15, OS_LOG_TYPE_DEBUG, "Sync engine did fetch record attempted to perform function %{public}@, but failed to do so", (uint8_t *)&v57, 0xCu);

    }
  }
}

void sub_18A72D074(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_18A72D088(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  NSObject *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  NSObject *v20;
  const char *v21;
  uint64_t v22;
  void *v23;
  int v24;
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend_canPerformFunction_(*(void **)(a1 + 32), a2, 0, a4) & 1) != 0)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v5 = ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
    {
      v19 = *(void **)(a1 + 40);
      v24 = 138412290;
      v25 = v19;
      _os_log_debug_impl(&dword_18A5C5000, v5, OS_LOG_TYPE_DEBUG, "Sync engine: repair record %@ was deleted", (uint8_t *)&v24, 0xCu);
    }
    objc_msgSend_database(*(void **)(a1 + 32), v6, v7, v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_deleteRepairRecord_(v9, v10, *(_QWORD *)(a1 + 40), v11);

    objc_msgSend_repairProcessor(*(void **)(a1 + 32), v12, v13, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_removeUploadRequestWithRecordID_(v15, v16, *(_QWORD *)(a1 + 40), v17);

  }
  else
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v18 = (void *)ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
    {
      v20 = v18;
      objc_msgSend_nameFromFunction_(CKUploadRequestManagerStateMachine, v21, 0, v22);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = 138543362;
      v25 = v23;
      _os_log_debug_impl(&dword_18A5C5000, v20, OS_LOG_TYPE_DEBUG, "Sync engine record deleted attempted to perform function %{public}@, but failed to do so", (uint8_t *)&v24, 0xCu);

    }
  }
}

void sub_18A72D2E0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  const char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint8_t buf[4];
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend_canPerformFunction_(*(void **)(a1 + 32), a2, 0, a4) & 1) != 0)
  {
    objc_msgSend_database(*(void **)(a1 + 32), v5, v6, v7);
    v15 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend_persistSyncEngineMetadata_(v15, v8, *(_QWORD *)(a1 + 40), v9);

  }
  else
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v10 = (void *)ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
    {
      v11 = v10;
      objc_msgSend_nameFromFunction_(CKUploadRequestManagerStateMachine, v12, 0, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v17 = v14;
      _os_log_debug_impl(&dword_18A5C5000, v11, OS_LOG_TYPE_DEBUG, "Sync engine did update metadata attempted to perform function %{public}@, but failed to do so", buf, 0xCu);

    }
  }
}

void sub_18A72D528(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_18A72D53C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  int isEqualToString;
  NSObject *v17;
  uint8_t v18[16];

  objc_msgSend_zoneName(*(void **)(a1 + 32), a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_repairZoneID(*(void **)(a1 + 40), v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_zoneName(v9, v10, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v5, v14, (uint64_t)v13, v15);

  if (isEqualToString)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v17 = ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)v18 = 0;
      _os_log_debug_impl(&dword_18A5C5000, v17, OS_LOG_TYPE_DEBUG, "Sync engine: repair zone was changed", v18, 2u);
    }
  }
}

void sub_18A72D724(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_18A72D738(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  int isEqualToString;
  NSObject *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  void *v31;
  int v32;
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend_canPerformFunction_(*(void **)(a1 + 32), a2, 0, a4) & 1) != 0)
  {
    objc_msgSend_zoneName(*(void **)(a1 + 40), v5, v6, v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_repairZoneID(*(void **)(a1 + 32), v9, v10, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_zoneName(v12, v13, v14, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    isEqualToString = objc_msgSend_isEqualToString_(v8, v17, (uint64_t)v16, v18);

    if (isEqualToString)
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v20 = ck_log_facility_data_repair;
      if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(v32) = 0;
        _os_log_debug_impl(&dword_18A5C5000, v20, OS_LOG_TYPE_DEBUG, "Sync engine: repair zone was deleted", (uint8_t *)&v32, 2u);
      }
      objc_msgSend_database(*(void **)(a1 + 32), v21, v22, v23);
      v24 = objc_claimAutoreleasedReturnValue();
      objc_msgSend_clearRepairRecords(v24, v25, v26, v27);
      goto LABEL_8;
    }
  }
  else
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v28 = (void *)ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
    {
      v24 = v28;
      objc_msgSend_nameFromFunction_(CKUploadRequestManagerStateMachine, v29, 0, v30);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      v32 = 138543362;
      v33 = v31;
      _os_log_debug_impl(&dword_18A5C5000, v24, OS_LOG_TYPE_DEBUG, "Sync engine zone deleted attempted to perform function %{public}@, but failed to do so", (uint8_t *)&v32, 0xCu);

LABEL_8:
    }
  }
}

void sub_18A72DA2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_18A72DA40(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  int isEqualToString;
  NSObject *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  void *v31;
  int v32;
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend_canPerformFunction_(*(void **)(a1 + 32), a2, 0, a4) & 1) != 0)
  {
    objc_msgSend_zoneName(*(void **)(a1 + 40), v5, v6, v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_repairZoneID(*(void **)(a1 + 32), v9, v10, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_zoneName(v12, v13, v14, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    isEqualToString = objc_msgSend_isEqualToString_(v8, v17, (uint64_t)v16, v18);

    if (isEqualToString)
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v20 = ck_log_facility_data_repair;
      if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(v32) = 0;
        _os_log_debug_impl(&dword_18A5C5000, v20, OS_LOG_TYPE_DEBUG, "Sync engine: repair zone was purged", (uint8_t *)&v32, 2u);
      }
      objc_msgSend_database(*(void **)(a1 + 32), v21, v22, v23);
      v24 = objc_claimAutoreleasedReturnValue();
      objc_msgSend_clearRepairRecords(v24, v25, v26, v27);
      goto LABEL_8;
    }
  }
  else
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v28 = (void *)ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
    {
      v24 = v28;
      objc_msgSend_nameFromFunction_(CKUploadRequestManagerStateMachine, v29, 0, v30);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      v32 = 138543362;
      v33 = v31;
      _os_log_debug_impl(&dword_18A5C5000, v24, OS_LOG_TYPE_DEBUG, "Sync engine zone purged attempted to perform function %{public}@, but failed to do so", (uint8_t *)&v32, 0xCu);

LABEL_8:
    }
  }
}

void sub_18A72DD30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A72DD48(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  int isEqualToString;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  NSObject *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const char *v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  int v30;
  const char *v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const char *v49;
  uint64_t v50;
  int v51;
  void *v52;
  void *v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  const char *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  const char *v62;
  uint64_t v63;
  int v64;
  void *v65;
  void *v66;
  const char *v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  void *v71;
  NSObject *v72;
  const char *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  int v77;
  void *v78;
  uint64_t v79;

  v79 = *MEMORY[0x1E0C80C00];
  objc_msgSend_recordType(*(void **)(a1 + 32), a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v5, v6, (uint64_t)CFSTR("MissingAsset"), v7);

  v12 = *(void **)(a1 + 32);
  if (isEqualToString)
  {
    objc_msgSend_objectForKeyedSubscript_(v12, v9, (uint64_t)CFSTR("hasAssetRecovered"), v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend_integerValue(v13, v14, v15, v16) >= 1)
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v19 = (void *)ck_log_facility_data_repair;
      if (!os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
        goto LABEL_29;
      v20 = *(void **)(a1 + 32);
      v21 = v19;
      objc_msgSend_recordID(v20, v22, v23, v24);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v77 = 138412290;
      v78 = v25;
      v26 = "Skipping asset repair record, already recovered: %@";
LABEL_28:
      _os_log_debug_impl(&dword_18A5C5000, v21, OS_LOG_TYPE_DEBUG, v26, (uint8_t *)&v77, 0xCu);

LABEL_29:
      v70 = 0;
LABEL_30:
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = v70;

      return;
    }
    objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 32), v17, (uint64_t)CFSTR("confirmedUnrecoverableDevices"), v18);
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_deviceID(*(void **)(a1 + 40), v45, v46, v47);
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    v51 = objc_msgSend_containsObject_(v44, v49, (uint64_t)v48, v50);

    if (v51)
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v52 = (void *)ck_log_facility_data_repair;
      if (!os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
        goto LABEL_29;
      v53 = *(void **)(a1 + 32);
      v21 = v52;
      objc_msgSend_recordID(v53, v54, v55, v56);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v77 = 138412290;
      v78 = v25;
      v26 = "Skipping asset repair record, device identifier included: %@";
      goto LABEL_28;
    }
    goto LABEL_31;
  }
  objc_msgSend_recordType(v12, v9, v10, v11);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = objc_msgSend_isEqualToString_(v27, v28, (uint64_t)CFSTR("MissingPackage"), v29);

  if (v30)
  {
    objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 32), v31, (uint64_t)CFSTR("hasAssetRecovered"), v32);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend_integerValue(v13, v33, v34, v35) >= 1)
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v38 = (void *)ck_log_facility_data_repair;
      if (!os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
        goto LABEL_29;
      v39 = *(void **)(a1 + 32);
      v21 = v38;
      objc_msgSend_recordID(v39, v40, v41, v42);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v77 = 138412290;
      v78 = v25;
      v26 = "Skipping package repair record, already recovered: %@";
      goto LABEL_28;
    }
    objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 32), v36, (uint64_t)CFSTR("confirmedUnrecoverableDevices"), v37);
    v57 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_deviceID(*(void **)(a1 + 40), v58, v59, v60);
    v61 = (void *)objc_claimAutoreleasedReturnValue();
    v64 = objc_msgSend_containsObject_(v57, v62, (uint64_t)v61, v63);

    if (v64)
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v65 = (void *)ck_log_facility_data_repair;
      if (!os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
        goto LABEL_29;
      v66 = *(void **)(a1 + 32);
      v21 = v65;
      objc_msgSend_recordID(v66, v67, v68, v69);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v77 = 138412290;
      v78 = v25;
      v26 = "Skipping package repair record, device identifier included: %@";
      goto LABEL_28;
    }
LABEL_31:
    v70 = 1;
    goto LABEL_30;
  }
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v43 = (void *)ck_log_facility_data_repair;
  if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
  {
    v71 = *(void **)(a1 + 32);
    v72 = v43;
    objc_msgSend_recordType(v71, v73, v74, v75);
    v76 = (void *)objc_claimAutoreleasedReturnValue();
    v77 = 138543362;
    v78 = v76;
    _os_log_debug_impl(&dword_18A5C5000, v72, OS_LOG_TYPE_DEBUG, "Skipping unknown repair record with type %{public}@", (uint8_t *)&v77, 0xCu);

  }
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
}

void sub_18A72E2C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_18A72E2D4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  double v5;
  double v6;
  NSObject *v7;
  CKSchedulerActivity *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  NSObject *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  void *empty;
  const char *v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  int v37;
  double v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend_canPerformFunction_(*(void **)(a1 + 32), a2, 1, a4) & 1) != 0)
  {
    v5 = *(double *)(a1 + 40);
    if (v5 < 0.0)
      v5 = 0.0;
    if (v5 <= 0.0)
      v6 = v5;
    else
      v6 = v5 + 2.0;
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v7 = ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_INFO))
    {
      v37 = 134217984;
      v38 = v6;
      _os_log_impl(&dword_18A5C5000, v7, OS_LOG_TYPE_INFO, "Scheduling upload request in %.1f seconds", (uint8_t *)&v37, 0xCu);
    }
    v8 = [CKSchedulerActivity alloc];
    objc_msgSend_activityIdentifierForSchedulingRepairs(*(void **)(a1 + 32), v9, v10, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_container(*(void **)(a1 + 32), v13, v14, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = objc_msgSend_initWithIdentifier_container_priority_(v8, v17, (uint64_t)v12, (uint64_t)v16, 2);

    if (v6 > 0.0)
    {
      objc_msgSend_dateWithTimeIntervalSinceNow_(MEMORY[0x1E0C99D68], v19, v20, v21, v6);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setEarliestStartDate_(v18, v23, (uint64_t)v22, v24);

    }
    empty = xpc_dictionary_create_empty();
    xpc_dictionary_set_value(empty, (const char *)*MEMORY[0x1E0C80738], MEMORY[0x1E0C81238]);
    xpc_dictionary_set_value(empty, (const char *)*MEMORY[0x1E0C808C8], MEMORY[0x1E0C81240]);
    objc_msgSend_setXpcActivityCriteriaOverrides_(v18, v26, (uint64_t)empty, v27);
    objc_msgSend_sharedScheduler(CKScheduler, v28, v29, v30);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_submitActivity_(v31, v32, (uint64_t)v18, v33);

    goto LABEL_14;
  }
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v34 = (void *)ck_log_facility_data_repair;
  if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
  {
    v18 = v34;
    objc_msgSend_nameFromFunction_(CKUploadRequestManagerStateMachine, v35, 1, v36);
    empty = (void *)objc_claimAutoreleasedReturnValue();
    v37 = 138543362;
    v38 = *(double *)&empty;
    _os_log_debug_impl(&dword_18A5C5000, v18, OS_LOG_TYPE_DEBUG, "Upload request schedule repairs attempted to perform function %{public}@, but failed to do so", (uint8_t *)&v37, 0xCu);
LABEL_14:

  }
}

uint64_t sub_18A72E5F0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t v13[16];

  if (objc_msgSend_canPerformFunction_(*(void **)(a1 + 32), a2, 1, a4))
    return objc_msgSend_scheduleRepairsWithDelay_(*(void **)(a1 + 32), v5, v6, v7, 0.0);
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v9 = ck_log_facility_data_repair;
  if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v13 = 0;
    _os_log_debug_impl(&dword_18A5C5000, v9, OS_LOG_TYPE_DEBUG, "Not permitted to schedule upload requests in the current state, so attempting to process them right away", v13, 2u);
  }
  return objc_msgSend_performRepairs(*(void **)(a1 + 32), v10, v11, v12);
}

void sub_18A72E77C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  const char *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  void *v33;
  void *v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  void *v38;
  int v39;
  void *v40;
  __int16 v41;
  uint64_t v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend_canPerformFunction_(*(void **)(a1 + 32), a2, 0, a4) & 1) != 0)
  {
    objc_msgSend_date(MEMORY[0x1E0C99D68], v5, v6, v7);
    v8 = objc_claimAutoreleasedReturnValue();
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v9 = ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
    {
      v34 = *(void **)(a1 + 40);
      v35 = *(_QWORD *)(a1 + 48);
      v39 = 138412546;
      v40 = v34;
      v41 = 2048;
      v42 = v35;
      _os_log_debug_impl(&dword_18A5C5000, v9, OS_LOG_TYPE_DEBUG, "Persisting delayed repair for record %@ with a delay of %.1f seconds", (uint8_t *)&v39, 0x16u);
    }
    objc_msgSend_database(*(void **)(a1 + 32), v10, v11, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_recordName(*(void **)(a1 + 40), v14, v15, v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_dateByAddingTimeInterval_(v8, v18, v19, v20, *(double *)(a1 + 48));
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_persistDelayedSyncForRecordName_withDate_increasingCount_(v13, v22, (uint64_t)v17, (uint64_t)v21, *(unsigned __int8 *)(a1 + 56));

    objc_msgSend_nextRepairDateForDate_(*(void **)(a1 + 32), v23, (uint64_t)v8, v24);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v26 = *(void **)(a1 + 32);
    objc_msgSend_timeIntervalSinceDate_(v25, v27, (uint64_t)v8, v28);
    if (v32 < 0.0)
      v32 = 0.0;
    objc_msgSend_scheduleRepairsWithDelay_(v26, v29, v30, v31, v32);

    goto LABEL_9;
  }
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v33 = (void *)ck_log_facility_data_repair;
  if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
  {
    v8 = v33;
    objc_msgSend_nameFromFunction_(CKUploadRequestManagerStateMachine, v36, 0, v37);
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    v39 = 138543362;
    v40 = v38;
    _os_log_debug_impl(&dword_18A5C5000, v8, OS_LOG_TYPE_DEBUG, "Upload request schedule record repair attempted to perform function %{public}@, but failed to do so", (uint8_t *)&v39, 0xCu);

LABEL_9:
  }
}

void sub_18A72EAB4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  const char *v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t i;
  void *v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  char v42;
  void *v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  const char *v53;
  uint64_t v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t j;
  void *v61;
  void *v62;
  const char *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  const char *v67;
  uint64_t v68;
  char v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  _BYTE v78[128];
  _BYTE v79[128];
  uint64_t v80;

  v80 = *MEMORY[0x1E0C80C00];
  v5 = (void *)MEMORY[0x1E0C99E60];
  objc_msgSend_database(*(void **)(a1 + 32), a2, a3, a4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_delayedSyncRecordNamesAfterDate_(v6, v7, *(_QWORD *)(a1 + 40), v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setWithArray_(v5, v10, (uint64_t)v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_assetRequestCallback(*(void **)(a1 + 32), v13, v14, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  if (v16)
  {
    objc_msgSend_database(*(void **)(a1 + 32), v17, v18, v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_assetRepairMetadata(v20, v21, v22, v23);
    v24 = (void *)objc_claimAutoreleasedReturnValue();

    v76 = 0u;
    v77 = 0u;
    v74 = 0u;
    v75 = 0u;
    v25 = v24;
    v27 = objc_msgSend_countByEnumeratingWithState_objects_count_(v25, v26, (uint64_t)&v74, (uint64_t)v79, 16);
    if (v27)
    {
      v31 = v27;
      v32 = *(_QWORD *)v75;
      do
      {
        for (i = 0; i != v31; ++i)
        {
          if (*(_QWORD *)v75 != v32)
            objc_enumerationMutation(v25);
          v34 = *(void **)(*((_QWORD *)&v74 + 1) + 8 * i);
          objc_msgSend_repairZoneRecordID(v34, v28, v29, v30);
          v35 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_recordName(v35, v36, v37, v38);
          v39 = (void *)objc_claimAutoreleasedReturnValue();
          v42 = objc_msgSend_containsObject_(v12, v40, (uint64_t)v39, v41);

          if ((v42 & 1) == 0)
            objc_msgSend_addObject_(*(void **)(a1 + 48), v28, (uint64_t)v34, v30);
        }
        v31 = objc_msgSend_countByEnumeratingWithState_objects_count_(v25, v28, (uint64_t)&v74, (uint64_t)v79, 16);
      }
      while (v31);
    }

  }
  objc_msgSend_packageRequestCallback(*(void **)(a1 + 32), v17, v18, v19);
  v43 = (void *)objc_claimAutoreleasedReturnValue();

  if (v43)
  {
    objc_msgSend_database(*(void **)(a1 + 32), v44, v45, v46);
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_packageRepairMetadata(v47, v48, v49, v50);
    v51 = (void *)objc_claimAutoreleasedReturnValue();

    v72 = 0u;
    v73 = 0u;
    v70 = 0u;
    v71 = 0u;
    v52 = v51;
    v54 = objc_msgSend_countByEnumeratingWithState_objects_count_(v52, v53, (uint64_t)&v70, (uint64_t)v78, 16);
    if (v54)
    {
      v58 = v54;
      v59 = *(_QWORD *)v71;
      do
      {
        for (j = 0; j != v58; ++j)
        {
          if (*(_QWORD *)v71 != v59)
            objc_enumerationMutation(v52);
          v61 = *(void **)(*((_QWORD *)&v70 + 1) + 8 * j);
          objc_msgSend_repairZoneRecordID(v61, v55, v56, v57, (_QWORD)v70);
          v62 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_recordName(v62, v63, v64, v65);
          v66 = (void *)objc_claimAutoreleasedReturnValue();
          v69 = objc_msgSend_containsObject_(v12, v67, (uint64_t)v66, v68);

          if ((v69 & 1) == 0)
            objc_msgSend_addObject_(*(void **)(a1 + 48), v55, (uint64_t)v61, v57);
        }
        v58 = objc_msgSend_countByEnumeratingWithState_objects_count_(v52, v55, (uint64_t)&v70, (uint64_t)v78, 16);
      }
      while (v58);
    }

  }
}

void sub_18A72EE74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A72EE8C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18A72EE9C(uint64_t a1)
{

}

void sub_18A72EEA4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;

  objc_msgSend_repairableAssetsForDate_(*(void **)(a1 + 32), a2, *(_QWORD *)(a1 + 40), a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend_count(v5, v6, v7, v8);

  if (v9 < 1)
  {
    objc_msgSend_database(*(void **)(a1 + 32), v10, v11, v12);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_earliestDelayedSyncDateAfterDate_(v22, v17, *(_QWORD *)(a1 + 40), v18);
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v21 = *(void **)(v20 + 40);
    *(_QWORD *)(v20 + 40) = v19;

    v16 = v22;
  }
  else
  {
    v13 = *(void **)(a1 + 40);
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v15 = v13;
    v16 = *(void **)(v14 + 40);
    *(_QWORD *)(v14 + 40) = v15;
  }

}

void sub_18A72EFFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_18A72F010(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  char hasPendingWork;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  void *v34;
  NSObject *v35;
  const char *v36;
  uint64_t v37;
  void *v38;
  _QWORD v39[5];
  uint8_t buf[4];
  void *v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend_canPerformFunction_(*(void **)(a1 + 32), a2, 2, a4) & 1) != 0)
  {
    objc_msgSend_date(MEMORY[0x1E0C99D68], v5, v6, v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v9 = ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138543362;
      v41 = v8;
      _os_log_impl(&dword_18A5C5000, v9, OS_LOG_TYPE_INFO, "Performing asset repairs with date %{public}@", buf, 0xCu);
    }
    objc_msgSend_repairableAssetsForDate_(*(void **)(a1 + 32), v10, (uint64_t)v8, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v39[0] = MEMORY[0x1E0C809B0];
    v39[1] = 3221225472;
    v39[2] = sub_18A72F284;
    v39[3] = &unk_1E1F63070;
    v39[4] = *(_QWORD *)(a1 + 32);
    objc_msgSend_CKCompactMap_(v12, v13, (uint64_t)v39, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_repairProcessor(*(void **)(a1 + 32), v16, v17, v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    hasPendingWork = objc_msgSend_hasPendingWork(v19, v20, v21, v22);

    objc_msgSend_repairProcessor(*(void **)(a1 + 32), v24, v25, v26);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_addUploadRequestsWithMetadata_requestBlocks_(v27, v28, (uint64_t)v12, (uint64_t)v15);

    if ((hasPendingWork & 1) == 0 && !objc_msgSend_count(v12, v29, v30, v31))
      objc_msgSend_dispatchEvent_(*(void **)(a1 + 32), v32, 17, v33);

  }
  else
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v34 = (void *)ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
    {
      v35 = v34;
      objc_msgSend_nameFromFunction_(CKUploadRequestManagerStateMachine, v36, 2, v37);
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v41 = v38;
      _os_log_debug_impl(&dword_18A5C5000, v35, OS_LOG_TYPE_DEBUG, "Upload request perform repairs attempted to perform function %{public}@, but failed to do so", buf, 0xCu);

    }
  }
}

id sub_18A72F284(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;

  v3 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend_assetRequestCallback(*(void **)(a1 + 32), v4, v5, v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      v15 = 0;
      goto LABEL_7;
    }
    objc_msgSend_packageRequestCallback(*(void **)(a1 + 32), v11, v12, v13);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v14 = v7;
  v15 = (void *)objc_msgSend_copy(v7, v8, v9, v10);

LABEL_7:
  return v15;
}

void sub_18A72F45C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;

  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 72));
  _Unwind_Resume(a1);
}

void sub_18A72F4A0(uint64_t a1, uint64_t a2, void *a3)
{
  id *v4;
  id v5;
  const char *v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  id WeakRetained;

  v4 = (id *)(a1 + 32);
  v5 = a3;
  WeakRetained = objc_loadWeakRetained(v4);
  objc_msgSend_objectForKeyedSubscript_(v5, v6, (uint64_t)CFSTR("retry"), v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = objc_msgSend_BOOLValue(v8, v9, v10, v11);
  objc_msgSend_respondToStateMachineAction_isRetry_(WeakRetained, v13, a2, v12);

}

void sub_18A72F528(uint64_t a1, uint64_t a2)
{
  const char *v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_respondToStateMachineChangeState_enter_(WeakRetained, v3, a2, 1);

}

void sub_18A72F568(uint64_t a1, uint64_t a2)
{
  const char *v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_respondToStateMachineChangeState_enter_(WeakRetained, v3, a2, 0);

}

void sub_18A72F65C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  NSObject *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  CKAssetRepairScheduler *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const char *v36;
  void *v37;
  const char *v38;
  uint64_t v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const char *v48;
  uint64_t v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  const char *v70;
  uint64_t v71;
  void *v72;
  const char *v73;
  uint64_t v74;
  uint64_t v75;
  const char *v76;
  uint64_t v77;
  void *v78;
  const char *v79;
  uint64_t v80;
  const char *v81;
  uint64_t v82;
  const char *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  const char *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  void *v92;
  const char *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  const char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  const char *v102;
  uint64_t v103;
  uint64_t v104;
  const char *v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  const char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  const char *v113;
  const char *v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  const char *v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  const char *v122;
  uint64_t v123;
  const char *v124;
  uint64_t v125;
  const char *v126;
  uint64_t v127;
  uint64_t v128;
  const char *v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  NSObject *v133;
  const char *v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  const char *v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  id v142;
  const char *v143;
  uint64_t v144;
  id v145;
  _QWORD v146[4];
  id v147;
  id v148;
  uint8_t buf[4];
  void *v150;
  uint64_t v151;

  v151 = *MEMORY[0x1E0C80C00];
  switch(*(_QWORD *)(a1 + 40))
  {
    case 0:
      MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel_registerForRepairScheduler, a3, a4);
      return;
    case 2:
      MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel_openSyncEngine, a3, a4);
      return;
    case 3:
      MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel_closeSyncEngine, a3, a4);
      return;
    case 4:
      objc_msgSend_database(*(void **)(a1 + 32), a2, a3, a4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v5)
      {
        objc_msgSend_createDatabase(*(void **)(a1 + 32), v6, v7, v8);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_setDatabase_(*(void **)(a1 + 32), v10, (uint64_t)v9, v11);

        if (ck_log_initialization_predicate != -1)
          dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
        v12 = (void *)ck_log_facility_data_repair;
        if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
        {
          v13 = *(void **)(a1 + 32);
          v14 = v12;
          objc_msgSend_database(v13, v15, v16, v17);
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_databaseURL(v18, v19, v20, v21);
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_path(v22, v23, v24, v25);
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543362;
          v150 = v26;
          _os_log_debug_impl(&dword_18A5C5000, v14, OS_LOG_TYPE_DEBUG, "Upload request manager database initialized with path: %{public}@", buf, 0xCu);

        }
      }
      return;
    case 5:
      objc_msgSend_setDatabase_(*(void **)(a1 + 32), a2, 0, a4);
      return;
    case 6:
      v27 = [CKAssetRepairScheduler alloc];
      objc_msgSend_container(*(void **)(a1 + 32), v28, v29, v30);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_repairContainerOverrides(*(void **)(a1 + 32), v32, v33, v34);
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      v37 = (void *)objc_msgSend_initWithContainer_repairContainerOverrides_(v27, v36, (uint64_t)v31, (uint64_t)v35);
      objc_msgSend_setRepairProcessor_(*(void **)(a1 + 32), v38, (uint64_t)v37, v39);

      v43 = objc_msgSend_assetRepairSchedulerRepairBatchCountLimit(*(void **)(a1 + 32), v40, v41, v42);
      objc_msgSend_repairProcessor(*(void **)(a1 + 32), v44, v45, v46);
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setRepairBatchCountLimit_(v47, v48, v43, v49);

      objc_msgSend_assetRepairSchedulerDefaultSuspensionTime(*(void **)(a1 + 32), v50, v51, v52);
      v54 = v53;
      objc_msgSend_repairProcessor(*(void **)(a1 + 32), v55, v56, v57);
      v58 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setDefaultSuspensionTime_(v58, v59, v60, v61, v54);

      v65 = objc_msgSend_assetRepairSchedulerRepairRetryCount(*(void **)(a1 + 32), v62, v63, v64);
      objc_msgSend_repairProcessor(*(void **)(a1 + 32), v66, v67, v68);
      v69 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setRepairRetryCount_(v69, v70, v65, v71);

      v72 = *(void **)(a1 + 32);
      objc_msgSend_repairProcessor(v72, v73, v74, v75);
      v145 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setDelegate_(v145, v76, (uint64_t)v72, v77);
      goto LABEL_36;
    case 7:
      objc_msgSend_repairProcessor(*(void **)(a1 + 32), a2, a3, a4);
      v78 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setDelegate_(v78, v79, 0, v80);

      objc_msgSend_setRepairProcessor_(*(void **)(a1 + 32), v81, 0, v82);
      return;
    case 8:
      MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel_cancelScheduledEvent, a3, a4);
      return;
    case 9:
      objc_msgSend_repairProcessor(*(void **)(a1 + 32), a2, a3, a4);
      v145 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend_cancelAllOperations(v145, v83, v84, v85);
      goto LABEL_36;
    case 0xALL:
      objc_msgSend_database(*(void **)(a1 + 32), a2, a3, a4);
      v86 = (void *)objc_claimAutoreleasedReturnValue();
      v90 = v86;
      if (v86)
      {
        v91 = v86;
      }
      else
      {
        objc_msgSend_createDatabase(*(void **)(a1 + 32), v87, v88, v89);
        v91 = (id)objc_claimAutoreleasedReturnValue();
      }
      v145 = v91;

      objc_msgSend_deleteDatabase(v145, v102, v103, v104);
LABEL_36:

      return;
    case 0xBLL:
      objc_msgSend_repairZoneSyncEngine(*(void **)(a1 + 32), a2, a3, a4);
      v92 = (void *)objc_claimAutoreleasedReturnValue();

      if (v92)
      {
        objc_msgSend_repairZoneSyncEngine(*(void **)(a1 + 32), v93, v94, v95);
        v96 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_unregisterActivities(v96, v97, v98, v99);
      }
      else
      {
        objc_msgSend_container(*(void **)(a1 + 32), v93, v94, v95);
        v96 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_privateCloudDatabase(v96, v105, v106, v107);
        v108 = (void *)objc_claimAutoreleasedReturnValue();
        v112 = objc_msgSend_ignoringSystemConditions(*(void **)(a1 + 32), v109, v110, v111);
        objc_msgSend_unregisterActivitiesWithDatabase_ignoringSystemConditions_(CKSyncEngine, v113, (uint64_t)v108, v112);

      }
      objc_msgSend_sharedScheduler(CKScheduler, v114, v115, v116);
      v117 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_activityIdentifierForSchedulingRepairs(*(void **)(a1 + 32), v118, v119, v120);
      v121 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_unregisterActivityIdentifier_(v117, v122, (uint64_t)v121, v123);

      objc_msgSend_setHasRegisteredActivity_(*(void **)(a1 + 32), v124, 0, v125);
      objc_msgSend_machServiceName(*(void **)(a1 + 32), v126, v127, v128);
      v132 = (void *)objc_claimAutoreleasedReturnValue();
      if (v132)
      {
        objc_msgSend_stateQueue(*(void **)(a1 + 32), v129, v130, v131);
        v133 = objc_claimAutoreleasedReturnValue();
        dispatch_suspend(v133);

        objc_msgSend_stateQueue(*(void **)(a1 + 32), v134, v135, v136);
        v137 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_repairContainer(*(void **)(a1 + 32), v138, v139, v140);
        v141 = (void *)objc_claimAutoreleasedReturnValue();
        v146[0] = MEMORY[0x1E0C809B0];
        v146[1] = 3221225472;
        v146[2] = sub_18A72FF54;
        v146[3] = &unk_1E1F630E8;
        v147 = v132;
        v148 = v137;
        v142 = v137;
        objc_msgSend_pushEnvironmentWithCompletionHandler_(v141, v143, (uint64_t)v146, v144);

      }
      return;
    case 0xCLL:
      MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel_checkNetworkReachability, a3, a4);
      return;
    case 0xDLL:
      MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel_registerForNetworkReachability, a3, a4);
      return;
    case 0xELL:
      MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel_unregisterFromNetworkReachability, a3, a4);
      return;
    case 0xFLL:
      MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel_fetchRepairContainerMetadata, a3, a4);
      return;
    case 0x10:
      objc_msgSend_checkAccountStatus(*(void **)(a1 + 32), a2, a3, a4);
      return;
    case 0x11:
      MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel_checkAccountID, a3, a4);
      return;
    case 0x12:
      MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel_registerForAccountNotifications, a3, a4);
      return;
    case 0x13:
      MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel_unregisterFromAccountNotifications, a3, a4);
      return;
    case 0x14:
      objc_msgSend_fetchServerChanges_(*(void **)(a1 + 32), a2, 0, a4);
      return;
    case 0x15:
      v100 = *(_QWORD *)(a1 + 32);
      v101 = 0;
      goto LABEL_30;
    case 0x16:
      v100 = *(_QWORD *)(a1 + 32);
      v101 = 1;
LABEL_30:
      MEMORY[0x1E0DE7D20](v100, sel_finishSchedulerCallbackWithDeferral_, v101, a4);
      break;
    case 0x17:
      MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel_scheduleRecurringFetch, a3, a4);
      break;
    case 0x18:
      MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel_scheduleNextSync, a3, a4);
      break;
    case 0x19:
      objc_msgSend_performRepairs(*(void **)(a1 + 32), a2, a3, a4);
      break;
    default:
      return;
  }
}

void sub_18A72FF54(uint64_t a1, const char *a2)
{
  void *v3;
  const char *v4;
  uint64_t v5;
  NSObject *v6;
  int v7;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  if (a2)
    objc_msgSend_ck_singletonConnectionForEnvironmentName_namedDelegatePort_(MEMORY[0x1E0CFE148], a2, (uint64_t)a2, *(_QWORD *)(a1 + 32));
  else
    objc_msgSend_ck_singletonConnectionForEnvironmentName_namedDelegatePort_(MEMORY[0x1E0CFE148], 0, *MEMORY[0x1E0CFE130], *(_QWORD *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend__setEnabledTopics_(v3, v4, 0, v5);
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v6 = ck_log_facility_data_repair;
  if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_debug_impl(&dword_18A5C5000, v6, OS_LOG_TYPE_DEBUG, "Cleared all enabled topics from connection %@", (uint8_t *)&v7, 0xCu);
  }
  dispatch_resume(*(dispatch_object_t *)(a1 + 40));

}

uint64_t sub_18A730108(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  if (*(_QWORD *)(result + 40) == 2)
  {
    v4 = *(unsigned __int8 *)(result + 48);
    v5 = *(_QWORD *)(result + 32);
    if (v4)
      return MEMORY[0x1E0DE7D20](v5, sel_registerForFetchAllNotifications, a3, a4);
    else
      return MEMORY[0x1E0DE7D20](v5, sel_unregisterFromFetchAllNotifications, a3, a4);
  }
  return result;
}

void sub_18A7301BC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  id v7;

  objc_msgSend_stateMachine(*(void **)(a1 + 32), a2, a3, a4);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_dispatchEvent_(v7, v5, *(_QWORD *)(a1 + 40), v6);

}

void sub_18A7302C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7302D8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  id v7;

  objc_msgSend_stateMachine(*(void **)(a1 + 32), a2, a3, a4);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend_canPerformFunction_(v7, v5, *(_QWORD *)(a1 + 48), v6);

}

void sub_18A730454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location, os_activity_scope_state_s state)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_18A730488(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  const char *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  NSObject *v13;
  _QWORD block[5];
  id v15;
  id v16;
  uint8_t buf[16];

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_invokeCallbackForOverridePoint_withError_onCallbackQueue_(WeakRetained, v8, 5, 0, 0);
  if (WeakRetained)
  {
    objc_msgSend_stateQueue(WeakRetained, v9, v10, v11);
    v12 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_18A7305F0;
    block[3] = &unk_1E1F63138;
    block[4] = WeakRetained;
    v15 = v5;
    v16 = v6;
    dispatch_async(v12, block);

  }
  else
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v13 = ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_error_impl(&dword_18A5C5000, v13, OS_LOG_TYPE_ERROR, "Repair XPC activity was called, but self was nil", buf, 2u);
    }
    (*((void (**)(id, uint64_t))v6 + 2))(v6, 1);
  }

}

uint64_t sub_18A7305F0(uint64_t a1, const char *a2)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  NSObject *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  const char *v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  const char *v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  uint8_t v33[16];

  objc_msgSend_invokeCallbackForOverridePoint_withError_onCallbackQueue_(*(void **)(a1 + 32), a2, 6, 0, 0);
  objc_msgSend_observedRepairActivity(*(void **)(a1 + 32), v3, v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v9 = ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)v33 = 0;
      _os_log_fault_impl(&dword_18A5C5000, v9, OS_LOG_TYPE_FAULT, "Activity triggered while another activity was running", v33, 2u);
    }
    objc_msgSend_observedRepairActivity(*(void **)(a1 + 32), v10, v11, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = *(_QWORD *)(a1 + 32);
    NSStringFromSelector(sel_shouldDefer);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_removeObserver_forKeyPath_context_(v13, v16, v14, (uint64_t)v15, qword_1EDF6DB00);

    objc_msgSend_setObservedRepairActivity_(*(void **)(a1 + 32), v17, 0, v18);
    objc_msgSend_setRepairActivityHandler_(*(void **)(a1 + 32), v19, 0, v20);
  }
  objc_msgSend_setObservedRepairActivity_(*(void **)(a1 + 32), v7, *(_QWORD *)(a1 + 40), v8);
  objc_msgSend_observedRepairActivity(*(void **)(a1 + 32), v21, v22, v23);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = *(_QWORD *)(a1 + 32);
  NSStringFromSelector(sel_shouldDefer);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObserver_forKeyPath_options_context_(v24, v27, v25, (uint64_t)v26, 0, qword_1EDF6DB00);

  objc_msgSend_setRepairActivityHandler_(*(void **)(a1 + 32), v28, *(_QWORD *)(a1 + 48), v29);
  return objc_msgSend_dispatchEvent_(*(void **)(a1 + 32), v30, 15, v31);
}

void sub_18A730A14(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  NSObject *v9;
  uint8_t v10[16];

  objc_msgSend_observedRepairActivity(*(void **)(a1 + 32), a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = *(void **)(a1 + 40);

  if (v5 != v6)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v9 = ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)v10 = 0;
      _os_log_error_impl(&dword_18A5C5000, v9, OS_LOG_TYPE_ERROR, "Critical error: received KVO call for scheduler activity, but activity is different from the persisted one", v10, 2u);
    }
  }
  if (*(_BYTE *)(a1 + 48))
    objc_msgSend_dispatchEvent_(*(void **)(a1 + 32), v7, 16, v8);
}

void sub_18A730E40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18A730E64(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id *v7;
  id WeakRetained;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  _QWORD v14[4];
  id v15;
  void *v16;
  id v17;
  id v18;

  v5 = a2;
  v6 = a3;
  v7 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v12 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend_stateQueue(WeakRetained, v9, v10, v11);
    v13 = objc_claimAutoreleasedReturnValue();
    v14[0] = MEMORY[0x1E0C809B0];
    v14[1] = 3221225472;
    v14[2] = sub_18A730F54;
    v14[3] = &unk_1E1F631D8;
    v15 = v6;
    v16 = v12;
    v17 = v5;
    objc_copyWeak(&v18, v7);
    dispatch_async(v13, v14);

    objc_destroyWeak(&v18);
  }

}

void sub_18A730F54(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  NSObject *v5;
  const char *v6;
  uint64_t v7;
  void **v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[4];
  id v22;
  uint8_t buf[4];
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a1 + 32))
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v5 = ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
    {
      v20 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v24 = v20;
      _os_log_error_impl(&dword_18A5C5000, v5, OS_LOG_TYPE_ERROR, "Error fetching repair container device identifier: %@", buf, 0xCu);
    }
    v9 = *(void **)(a1 + 40);
    v8 = (void **)(a1 + 40);
    objc_msgSend_setDeviceID_(v9, v6, 0, v7);
    objc_msgSend_setCachesDirectory_(*v8, v10, 0, v11);
    objc_msgSend_dispatchEvent_(*v8, v12, 5, v13);
  }
  else
  {
    objc_msgSend_setDeviceID_(*(void **)(a1 + 40), a2, *(_QWORD *)(a1 + 48), a4);
    objc_msgSend_repairContainer(*(void **)(a1 + 40), v14, v15, v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v21[0] = MEMORY[0x1E0C809B0];
    v21[1] = 3221225472;
    v21[2] = sub_18A7310F0;
    v21[3] = &unk_1E1F631B0;
    objc_copyWeak(&v22, (id *)(a1 + 56));
    objc_msgSend_fetchFrameworkCachesDirectoryWithCompletionHandler_(v17, v18, (uint64_t)v21, v19);

    objc_destroyWeak(&v22);
  }
}

void sub_18A7310D4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_18A7310F0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  _QWORD block[4];
  id v14;
  void *v15;
  id v16;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v11 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend_stateQueue(WeakRetained, v8, v9, v10);
    v12 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_18A7311B8;
    block[3] = &unk_1E1F60DD8;
    v14 = v6;
    v15 = v11;
    v16 = v5;
    dispatch_async(v12, block);

  }
}

uint64_t sub_18A7311B8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  NSObject *v5;
  const char *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a1 + 32))
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v5 = ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
    {
      v15 = *(_QWORD *)(a1 + 32);
      v16 = 138412290;
      v17 = v15;
      _os_log_error_impl(&dword_18A5C5000, v5, OS_LOG_TYPE_ERROR, "Error fetching repair container caches directory: %@", (uint8_t *)&v16, 0xCu);
    }
    objc_msgSend_setDeviceID_(*(void **)(a1 + 40), v6, 0, v7);
    objc_msgSend_setCachesDirectory_(*(void **)(a1 + 40), v8, 0, v9);
    return objc_msgSend_dispatchEvent_(*(void **)(a1 + 40), v10, 5, v11);
  }
  else
  {
    objc_msgSend_setCachesDirectory_(*(void **)(a1 + 40), a2, *(_QWORD *)(a1 + 48), a4);
    return objc_msgSend_dispatchEvent_(*(void **)(a1 + 40), v13, 4, v14);
  }
}

void sub_18A7313B4(uint64_t a1, char a2, void *a3)
{
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  const char *v8;
  uint64_t v9;
  id v10;

  v10 = a3;
  objc_msgSend_stateQueue(v10, v4, v5, v6);
  v7 = objc_claimAutoreleasedReturnValue();
  dispatch_assert_queue_V2(v7);

  if ((a2 & 0x2A) != 0)
    objc_msgSend_dispatchEvent_(v10, v8, 6, v9);
  else
    objc_msgSend_dispatchEvent_(v10, v8, 7, v9);

}

void sub_18A731668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_18A7316A0(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  NSObject *v8;
  _QWORD block[5];
  id v10[2];

  v2 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v7 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend_stateQueue(WeakRetained, v4, v5, v6);
    v8 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_18A731760;
    block[3] = &unk_1E1F63200;
    block[4] = v7;
    objc_copyWeak(v10, v2);
    v10[1] = *(id *)(a1 + 40);
    dispatch_async(v8, block);

    objc_destroyWeak(v10);
  }

}

void sub_18A731760(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  dispatch_block_t v13;
  const char *v14;
  uint64_t v15;
  dispatch_time_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  _QWORD block[4];
  id v22;
  uint8_t buf[16];

  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v2 = ck_log_facility_data_repair;
  if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl(&dword_18A5C5000, v2, OS_LOG_TYPE_DEBUG, "Received account change notification, enqueueing", buf, 2u);
  }
  objc_msgSend_scheduledAccountStatusCheck(*(void **)(a1 + 32), v3, v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    objc_msgSend_scheduledAccountStatusCheck(*(void **)(a1 + 32), v7, v8, v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    dispatch_block_cancel(v10);

    objc_msgSend_setScheduledAccountStatusCheck_(*(void **)(a1 + 32), v11, 0, v12);
  }
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = sub_18A731900;
  block[3] = &unk_1E1F608C8;
  objc_copyWeak(&v22, (id *)(a1 + 40));
  v13 = dispatch_block_create((dispatch_block_flags_t)0, block);
  objc_msgSend_setScheduledAccountStatusCheck_(*(void **)(a1 + 32), v14, (uint64_t)v13, v15);
  v16 = dispatch_time(0, (uint64_t)(*(double *)(a1 + 48) * 1000000000.0));
  objc_msgSend_stateQueue(*(void **)(a1 + 32), v17, v18, v19);
  v20 = objc_claimAutoreleasedReturnValue();
  dispatch_after(v16, v20, v13);

  objc_destroyWeak(&v22);
}

void sub_18A7318EC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_18A731900(uint64_t a1)
{
  id WeakRetained;
  NSObject *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint8_t v8[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v2 = ck_log_facility_data_repair;
  if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_18A5C5000, v2, OS_LOG_TYPE_INFO, "Acting on account change notification", v8, 2u);
  }
  objc_msgSend_checkAccountStatus(WeakRetained, v3, v4, v5);
  objc_msgSend_setScheduledAccountStatusCheck_(WeakRetained, v6, 0, v7);

}

void sub_18A731BBC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_18A731BE0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  id WeakRetained;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  _QWORD block[4];
  id v13;
  void *v14;
  uint64_t v15;

  v5 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v10 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend_stateQueue(WeakRetained, v7, v8, v9);
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_18A731C90;
    block[3] = &unk_1E1F63250;
    v13 = v5;
    v14 = v10;
    v15 = a2;
    dispatch_async(v11, block);

  }
}

uint64_t sub_18A731C90(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  NSObject *v5;
  const char *v6;
  uint64_t v7;
  void *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a1 + 32))
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v5 = ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
    {
      v10 = *(_QWORD *)(a1 + 32);
      v11 = 138412290;
      v12 = v10;
      _os_log_error_impl(&dword_18A5C5000, v5, OS_LOG_TYPE_ERROR, "Error fetching account info in upload request manager: %@", (uint8_t *)&v11, 0xCu);
    }
    return objc_msgSend_dispatchEvent_(*(void **)(a1 + 40), v6, 10, v7);
  }
  else
  {
    v9 = *(void **)(a1 + 40);
    if (*(_QWORD *)(a1 + 48) == 1)
      return objc_msgSend_dispatchEvent_(v9, a2, 8, a4);
    else
      return objc_msgSend_dispatchEvent_(v9, a2, 9, a4);
  }
}

void sub_18A731E94(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_18A731EB8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  _QWORD v13[4];
  id v14;
  void *v15;
  uint64_t v16;
  id v17;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v11 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend_stateQueue(WeakRetained, v8, v9, v10);
    v12 = objc_claimAutoreleasedReturnValue();
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = sub_18A731F90;
    v13[3] = &unk_1E1F632A0;
    v14 = v6;
    v15 = v11;
    v16 = *(_QWORD *)(a1 + 32);
    v17 = v5;
    dispatch_async(v12, v13);

  }
}

void sub_18A731F90(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;

  v58 = *MEMORY[0x1E0C80C00];
  objc_msgSend_CKClientSuitableError(*(void **)(a1 + 32), a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_domain(v5, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_isEqualToString_(v9, v10, (uint64_t)CFSTR("CKErrorDomain"), v11))
  {
    if (objc_msgSend_code(v5, v12, v13, v14) == 9)
    {

LABEL_6:
      objc_msgSend_dispatchEvent_(*(void **)(a1 + 40), v18, 9, v19);
      goto LABEL_23;
    }
    v21 = objc_msgSend_code(v5, v15, v16, v17);

    if (v21 == 115)
      goto LABEL_6;
  }
  else
  {

  }
  objc_msgSend_domain(v5, v18, v20, v19);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_isEqualToString_(v23, v24, (uint64_t)CFSTR("CKErrorDomain"), v25))
  {
    if (objc_msgSend_code(v5, v26, v27, v28) == 4)
    {

LABEL_18:
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v39 = ck_log_facility_data_repair;
      if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_INFO))
      {
        v42 = *(_QWORD *)(a1 + 32);
        v56 = 138412290;
        v57 = v42;
        _os_log_impl(&dword_18A5C5000, v39, OS_LOG_TYPE_INFO, "Error fetching user record ID in upload request manager, treating as network unreachable: %@", (uint8_t *)&v56, 0xCu);
      }
      objc_msgSend_dispatchEvent_(*(void **)(a1 + 40), v40, 7, v41);
      goto LABEL_23;
    }
    v38 = objc_msgSend_code(v5, v29, v30, v31);

    if (v38 == 3)
      goto LABEL_18;
  }
  else
  {

  }
  if (v5)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v35 = ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
    {
      v55 = *(_QWORD *)(a1 + 32);
      v56 = 138412290;
      v57 = v55;
      _os_log_error_impl(&dword_18A5C5000, v35, OS_LOG_TYPE_ERROR, "Error fetching user record ID in upload request manager: %@", (uint8_t *)&v56, 0xCu);
    }
    objc_msgSend_dispatchEvent_(*(void **)(a1 + 40), v36, 11, v37);
  }
  else
  {
    objc_msgSend_database(*(void **)(a1 + 48), v32, v33, v34);
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_currentUser(v43, v44, v45, v46);
    v47 = (void *)objc_claimAutoreleasedReturnValue();

    v51 = *(_QWORD *)(a1 + 56);
    if (v51)
    {
      objc_msgSend_database(*(void **)(a1 + 48), v48, v49, v50);
      v52 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setCurrentUser_(v52, v53, v51, v54);

    }
    if (!v47 || objc_msgSend_isEqual_(v47, v48, *(_QWORD *)(a1 + 56), v50))
      objc_msgSend_dispatchEvent_(*(void **)(a1 + 40), v48, 12, v50);
    else
      objc_msgSend_dispatchEvent_(*(void **)(a1 + 40), v48, 13, v50);

  }
LABEL_23:
  objc_msgSend_invokeCallbackForOverridePoint_withError_onCallbackQueue_(*(void **)(a1 + 48), v22, 1, *(_QWORD *)(a1 + 32), 1);

}

void sub_18A7323A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18A7323D0(uint64_t a1)
{
  char *WeakRetained;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[5];

  WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_stateQueue(WeakRetained, v2, v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = sub_18A73244C;
  v6[3] = &unk_1E1F5FAA8;
  v6[4] = WeakRetained;
  ck_call_or_dispatch_sync_if_not_key(v5, WeakRetained + 232, v6);

}

uint64_t sub_18A73244C(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v7[16];

  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v2 = ck_log_facility_data_repair;
  if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v7 = 0;
    _os_log_debug_impl(&dword_18A5C5000, v2, OS_LOG_TYPE_DEBUG, "Manually fetching and scheduling changes via notification", v7, 2u);
  }
  return objc_msgSend_manuallyTriggerUploadRequests(*(void **)(a1 + 32), v3, v4, v5);
}

void sub_18A732EB0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A733008(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A73330C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void sub_18A73349C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A7334B4(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A7334DC(uint64_t a1)
{

}

void sub_18A7334E4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A733640(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 528) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 528);
    *(_QWORD *)(v8 + 528) = v7;

  }
}

void sub_18A7337D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7337E8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 528));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A733944(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 536) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 536);
    *(_QWORD *)(v8 + 536) = v7;

  }
}

void sub_18A733AD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A733AEC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 536));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A733C48(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 544) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 544);
    *(_QWORD *)(v8 + 544) = v7;

  }
}

void sub_18A733DD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A733DF0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 544));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id CKSQLiteContainerAttribution_None(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_ActivitySharing(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_Backup(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_Bluetooth(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_CloudDocs(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_CloudPhotos(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_Health(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_HomeKit(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_iAD(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_iWorkPages(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_iWorkNumbers(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_iWorkKeynote(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_KeyboardServices(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_KeychainSync(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_KeyValueService(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_MailDrop(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_Memoji(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_Messages(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_Moments(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_News(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_Notes(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_PhoneFaceTimeCallHistory(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_PhoneFaceTimeMessageStore(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_ProactivePredictions(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_Reminders(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_SafariBookmarks(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_SafariHistory(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_SafariTabGroups(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_Freeform(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_Sharingd(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_Siri(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_SocialGaming(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_TTYCallHistory(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_Wallet(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_SiriProfile(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_DugongTesting(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

id CKSQLiteContainerAttribution_Events(objc_super *a1, const char *a2)
{
  objc_msgSendSuper(a1, a2);
  return (id)objc_claimAutoreleasedReturnValue();
}

void sub_18A736908(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v2 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_FAULT))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = 138412290;
    v5 = v3;
    _os_log_fault_impl(&dword_18A5C5000, v2, OS_LOG_TYPE_FAULT, "No container attribution function for attributionName=%@. Using None instead.", (uint8_t *)&v4, 0xCu);
  }
}

void sub_18A736F30(uint64_t a1, void *a2, void *a3)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  id v10;

  v10 = a2;
  if ((objc_msgSend_unsignedIntegerValue(a3, v5, v6, v7) & 0x80) != 0)
    objc_msgSend_addObject_(*(void **)(a1 + 32), v8, (uint64_t)v10, v9);

}

void sub_18A73778C(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  id v11;

  v3 = a2;
  objc_msgSend_orderAscendingByProperty_(v3, v4, (uint64_t)CFSTR("expirationDate"), v5);
  objc_msgSend_primaryKeyProperties(*(void **)(a1 + 32), v6, v7, v8);
  v11 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setFetchedProperties_(v3, v9, (uint64_t)v11, v10);

}

void sub_18A737A44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A737A68(_QWORD *a1, const char *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD v8[6];
  id v9;

  v3 = (void *)a1[4];
  v9 = 0;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = sub_18A737AFC;
  v8[3] = &unk_1E1F61E30;
  v4 = a1[6];
  v8[4] = v3;
  v8[5] = v4;
  v5 = objc_msgSend_deleteEntriesMatching_label_error_predicate_(v3, a2, 0, 0, &v9, v8);
  v6 = v9;
  *(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 24) = v5;

  return 0;
}

id sub_18A737AFC(uint64_t a1, const char *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  _QWORD v14[4];
  void *v15;
  uint64_t v16;

  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = sub_18A737BBC;
  v14[3] = &unk_1E1F63580;
  v3 = *(_QWORD *)(a1 + 40);
  v15 = *(void **)(a1 + 32);
  v16 = v3;
  objc_msgSend_entriesWithValues_label_error_setupBlock_(v15, a2, 0, 0, 0, v14);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)MEMORY[0x1E0CB3880];
  objc_msgSend_primaryKeyProperty(*(void **)(a1 + 32), v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_predicateWithFormat_(v5, v10, (uint64_t)CFSTR("%@ IN %@"), v11, v9, v4);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

void sub_18A737BBC(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  id v16;

  v3 = a2;
  objc_msgSend_orderAscendingByProperty_(v3, v4, (uint64_t)CFSTR("expirationDate"), v5);
  objc_msgSend_primaryKeyProperties(*(void **)(a1 + 32), v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setFetchedProperties_(v3, v10, (uint64_t)v9, v11);

  objc_msgSend_numberWithLongLong_(MEMORY[0x1E0CB37E8], v12, *(_QWORD *)(a1 + 40), v13);
  v16 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setLimit_(v3, v14, (uint64_t)v16, v15);

}

void sub_18A737E40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A737E64(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  id v13;
  const char *v14;
  uint64_t v15;
  id v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;

  objc_msgSend_oldestFirstEnumerator(*(void **)(a1 + 32), a2, a3, a4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = 0;
  do
  {
    v10 = v9;
    objc_msgSend_nextObject(v8, v5, v6, v7);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v9)
      break;
    v13 = (id)objc_msgSend_deleteObject_(*(void **)(a1 + 32), v11, (uint64_t)v9, v12);
    v16 = (id)objc_msgSend_fetchAllProperties_(*(void **)(*(_QWORD *)(a1 + 32) + 104), v14, *(_QWORD *)(a1 + 40), v15);
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
    objc_msgSend_dataSize(*(void **)(a1 + 40), v17, v18, v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v24 = objc_msgSend_unsignedLongLongValue(v20, v21, v22, v23);
    v25 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 128);

  }
  while (v24 > v25);

  return 0;
}

void sub_18A738114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A738138(_QWORD *a1, const char *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  id v8;
  id v10;
  const __CFString *v11;
  _QWORD v12[2];

  v12[1] = *MEMORY[0x1E0C80C00];
  v3 = a1[4];
  v11 = CFSTR("EXPIRE_DATE");
  v12[0] = v3;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], a2, (uint64_t)v12, (uint64_t)&v11, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)a1[5];
  v10 = 0;
  v7 = objc_msgSend_deleteEntriesMatching_label_error_predicate_(v5, v6, (uint64_t)v4, (uint64_t)off_1E1F635C8, &v10, &unk_1E1F585D8);
  v8 = v10;
  *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24) = v7;

  return 0;
}

uint64_t sub_18A73820C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_predicateWithFormat_(MEMORY[0x1E0CB3880], a2, (uint64_t)CFSTR("expirationDate < $EXPIRE_DATE"), a4);
}

void sub_18A73838C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  double v24;
  double v25;
  _QWORD *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  void *v36;
  id v37;
  const char *v38;
  uint64_t v39;
  id v40;
  const char *v41;
  double *v42;
  void *v43;
  const char *v44;
  id v45;
  const char *v46;
  uint64_t v47;
  id v48;
  id v49;
  _QWORD v50[5];
  id v51;
  id v52;

  objc_msgSend_trackingEntry(*(void **)(a1 + 32), a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = *(_QWORD *)(a1 + 32);
  v49 = v5;
  if (*(_QWORD *)(v6 + 120))
  {
    v7 = (id)v6;
    objc_msgSend_entryCount(v49, v8, v9, v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend_unsignedLongLongValue(v11, v12, v13, v14);
    v16 = v7[15];

    v5 = v49;
    if (v15 > v16)
      goto LABEL_9;
    v6 = *(_QWORD *)(a1 + 32);
  }
  if (*(double *)(v6 + 136) == 0.0)
  {
LABEL_7:
    if (!*(_QWORD *)(v6 + 128))
      goto LABEL_14;
    v26 = (id)v6;
    objc_msgSend_dataSize(v49, v27, v28, v29);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    v34 = objc_msgSend_unsignedLongLongValue(v30, v31, v32, v33);
    v35 = v26[16];

    v5 = v49;
    if (v34 <= v35)
      goto LABEL_14;
    goto LABEL_9;
  }
  v17 = *(id *)(a1 + 40);
  objc_msgSend_oldestExpireDate(v49, v18, v19, v20);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_timeIntervalSinceDate_(v21, v22, (uint64_t)v17, v23);
  v25 = v24;

  v5 = v49;
  if (v25 >= 0.0)
  {
    v6 = *(_QWORD *)(a1 + 32);
    goto LABEL_7;
  }
LABEL_9:
  v36 = *(void **)(a1 + 32);
  v50[0] = MEMORY[0x1E0C809B0];
  v50[1] = 3221225472;
  v50[2] = sub_18A7385C4;
  v50[3] = &unk_1E1F63628;
  v50[4] = v36;
  v37 = v5;
  v51 = v37;
  v52 = *(id *)(a1 + 40);
  v40 = (id)objc_msgSend_performTransaction_(v36, v38, (uint64_t)v50, v39);
  v42 = *(double **)(a1 + 32);
  if (v42[17] != 0.0)
  {
    objc_msgSend_minimumValueOfProperty_label_error_(v42, v41, (uint64_t)CFSTR("expirationDate"), (uint64_t)off_1E1F63648, 0);
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    v45 = (id)objc_msgSend_updateEntryOldestExpireDate_oldestExpirationDate_(*(void **)(*(_QWORD *)(a1 + 32) + 104), v44, (uint64_t)v37, (uint64_t)v43);
    if (v43)
      v48 = (id)objc_msgSend_requestCallbackWithDate_coalescingInterval_minimumSeparation_(*(void **)(a1 + 32), v46, (uint64_t)v43, v47, *(double *)(*(_QWORD *)(a1 + 32) + 144), *(double *)(*(_QWORD *)(a1 + 32) + 144));

  }
  v5 = v49;
LABEL_14:

}

uint64_t sub_18A7385C4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  double v11;
  double v12;
  const char *v13;
  uint64_t v14;
  int v15;
  void *v16;
  _QWORD *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  const char *v27;
  uint64_t v28;
  id v29;
  _QWORD *v30;
  void *v31;
  _QWORD *v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  const char *v42;
  uint64_t v43;
  id v44;

  v2 = *(_QWORD *)(a1 + 32);
  if (*(double *)(v2 + 136) == 0.0)
    goto LABEL_4;
  v3 = *(void **)(a1 + 40);
  v4 = *(id *)(a1 + 48);
  objc_msgSend_oldestExpireDate(v3, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_timeIntervalSinceDate_(v8, v9, (uint64_t)v4, v10);
  v12 = v11;

  v2 = *(_QWORD *)(a1 + 32);
  if (v12 >= 0.0)
  {
LABEL_4:
    v15 = 0;
  }
  else
  {
    objc_msgSend_expireByTime_((void *)v2, v13, *(_QWORD *)(a1 + 48), v14);
    v2 = *(_QWORD *)(a1 + 32);
    v15 = 1;
  }
  if (*(_QWORD *)(v2 + 120))
  {
    v16 = *(void **)(a1 + 40);
    v17 = (id)v2;
    objc_msgSend_entryCount(v16, v18, v19, v20);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = objc_msgSend_unsignedLongLongValue(v21, v22, v23, v24);
    v26 = v17[15];

    if (v25 > v26)
    {
      if (v15)
        v29 = (id)objc_msgSend_fetchAllProperties_(*(void **)(*(_QWORD *)(a1 + 32) + 104), v27, *(_QWORD *)(a1 + 40), v28);
      objc_msgSend_expireByCount_(*(void **)(a1 + 32), v27, *(_QWORD *)(a1 + 40), v28);
      v15 = 1;
    }
  }
  v30 = *(_QWORD **)(a1 + 32);
  if (v30[16])
  {
    v31 = *(void **)(a1 + 40);
    v32 = v30;
    objc_msgSend_dataSize(v31, v33, v34, v35);
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    v40 = objc_msgSend_unsignedLongLongValue(v36, v37, v38, v39);
    v41 = v32[16];

    if (v40 > v41)
    {
      if (v15)
        v44 = (id)objc_msgSend_fetchAllProperties_(*(void **)(*(_QWORD *)(a1 + 32) + 104), v42, *(_QWORD *)(a1 + 40), v43);
      objc_msgSend_expireByDataSize_(*(void **)(a1 + 32), v42, *(_QWORD *)(a1 + 40), v43);
    }
  }
  return 0;
}

uint64_t sub_18A7387D0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  result = objc_msgSend_expire_(*(void **)(a1 + 32), a2, *(_QWORD *)(a1 + 40), a4);
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 113) = 0;
  return result;
}

uint64_t sub_18A738858(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 32) + 113) = 0;
  return result;
}

uint64_t sub_18A738B6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = result;
  if (!a2)
    result = objc_msgSend_periodicExpire(*(void **)(result + 32), 0, a3, a4);
  *(_BYTE *)(*(_QWORD *)(v4 + 32) + 112) = 0;
  return result;
}

id sub_18A738C88(uint64_t a1)
{
  uint64_t v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  objc_super v8;

  v2 = *(_QWORD *)(a1 + 32);
  v8.receiver = *(id *)(a1 + 40);
  v8.super_class = (Class)CKSQLiteCacheTable;
  objc_msgSendSuper2(&v8, sel_insertObject_, v2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v6)
    objc_msgSend_transactionExpireCheck(*(void **)(a1 + 40), v3, v4, v5);
  return v6;
}

id sub_18A738DEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  objc_super v10;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 56);
  v10.receiver = *(id *)(a1 + 48);
  v10.super_class = (Class)CKSQLiteCacheTable;
  objc_msgSendSuper2(&v10, sel_insertObject_orUpdateProperties_label_, v2, v3, v4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v8)
    objc_msgSend_transactionExpireCheck(*(void **)(a1 + 48), v5, v6, v7);
  return v8;
}

void sub_18A738FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_18A738FCC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  objc_super v13;
  id v14;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 64);
  v13.receiver = *(id *)(a1 + 56);
  v13.super_class = (Class)CKSQLiteCacheTable;
  v14 = 0;
  v7 = objc_msgSendSuper2(&v13, sel_setProperties_valuesToStore_inEntriesMatching_label_error_predicate_, v2, v3, v4, v5, &v14, v6);
  v11 = v14;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = v7;
  if (!v11)
    objc_msgSend_transactionExpireCheck(*(void **)(a1 + 56), v8, v9, v10);
  return v11;
}

void sub_18A7391C8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 512) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 512);
    *(_QWORD *)(v8 + 512) = v7;

  }
}

void sub_18A739358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A739370(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A739398(uint64_t a1)
{

}

void sub_18A7393A0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 512));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7394FC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void sub_18A73968C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7396A4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

uint64_t CKIndexedArrayKey(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], a2, (uint64_t)CFSTR("%@[%ld..<%ld]"), a4, a1, a2, a3);
}

BOOL CKIsIndexedArrayKey(void *a1)
{
  id v1;
  uint64_t v3;

  v3 = 0;
  v1 = CKProcessIndexedArrayKey(a1, &v3, 0, 0);
  return v3 != 0;
}

void sub_18A73A300()
{
  id v0;
  const char *v1;
  uint64_t v2;
  id v3;
  void *v4;
  NSObject *v5;
  id v6;
  uint8_t buf[4];
  const __CFString *v8;
  __int16 v9;
  id v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v0 = objc_alloc(MEMORY[0x1E0CB38E8]);
  v6 = 0;
  v2 = objc_msgSend_initWithPattern_options_error_(v0, v1, (uint64_t)CFSTR("^                                                      (.{1,255})                                             \\[                                                       (-?\\d{1,8})                                           (\\.\\.\\<|\\.\\.\\.)                                  (-?\\d{1,8})                                        \\]                                                    $"), 2, &v6);
  v3 = v6;
  v4 = (void *)qword_1ECD96BF0;
  qword_1ECD96BF0 = v2;

  if (v3)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v5 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 138543618;
      v8 = CFSTR("^                                                      (.{1,255})                                             \\[                                                       (-?\\d{1,8})                                           (\\.\\.\\<|\\.\\.\\.)                                  (-?\\d{1,8})                                        \\]                                                    $");
      v9 = 2112;
      v10 = v3;
      _os_log_fault_impl(&dword_18A5C5000, v5, OS_LOG_TYPE_FAULT, "Couldn't initialize indexed list key regular expression with pattern \"%{public}@\": %@", buf, 0x16u);
    }
  }

}

id CKValidateIndexedArrayKeys(void *a1, int a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  void *v11;
  void *v12;
  id v13;
  const char *v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  const char *v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  void *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  const char *v45;
  void *v46;
  const char *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  _BOOL4 v51;
  void *v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  const char *v58;
  const char *v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  const char *v65;
  void *v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;

  v3 = a1;
  if (!objc_msgSend_count(v3, v4, v5, v6))
    goto LABEL_49;
  v9 = 0;
  v10 = 0;
  do
  {
    v71 = 0;
    v72 = 0;
    objc_msgSend_objectAtIndexedSubscript_(v3, v7, v10, v8);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v70 = 0;
    CKProcessIndexedArrayKey(v11, &v70, &v72, &v71);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = v70;

    if (v12)
    {
      v63 = v12;
LABEL_52:

      goto LABEL_53;
    }
    if (v13)
    {
      v9 = 1;
      if (a2)
      {
        if (!v71)
        {
          objc_msgSend_objectAtIndexedSubscript_(v3, v14, v10, v15);
          v64 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v65, (uint64_t)CFSTR("CKErrorDomain"), 12, CFSTR("indexed list key (%@) has zero length"), v64);
          v63 = (id)objc_claimAutoreleasedReturnValue();

          goto LABEL_52;
        }
      }
    }

    ++v10;
  }
  while (v10 < objc_msgSend_count(v3, v16, v17, v18));
  if ((v9 & 1) == 0)
  {
LABEL_49:
    v63 = 0;
    goto LABEL_54;
  }
  objc_msgSend_set(MEMORY[0x1E0C99E20], v7, v19, v8);
  v13 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v20, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend_count(v3, v24, v25, v26))
  {
LABEL_48:

    v63 = 0;
    goto LABEL_53;
  }
  v29 = 0;
  v67 = v23;
  while (1)
  {
    objc_msgSend_objectAtIndexedSubscript_(v3, v27, v29, v28);
    v30 = (id)objc_claimAutoreleasedReturnValue();
    v71 = 0;
    v72 = 0;
    v69 = 0;
    CKProcessIndexedArrayKey(v30, &v69, &v72, &v71);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    v32 = v69;
    v33 = v32;
    if (v31)
    {
      v63 = v31;
      goto LABEL_59;
    }
    v34 = v32 ? v32 : v30;
    v35 = v34;

    if (!v33)
      break;
    if (objc_msgSend_containsObject_(v13, v36, (uint64_t)v33, v37))
      goto LABEL_58;
    objc_msgSend_objectForKey_(v23, v38, (uint64_t)v33, v39);
    v40 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v40)
    {
      objc_msgSend_indexSet(MEMORY[0x1E0CB3788], v41, v42, v43);
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setObject_forKeyedSubscript_(v23, v45, (uint64_t)v44, (uint64_t)v33);

    }
    objc_msgSend_objectForKeyedSubscript_(v23, v41, (uint64_t)v33, v43);
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    v48 = v46;
    if (v72 < 0)
    {
      if (v71 >= ~v72)
        v55 = ~v72;
      else
        v55 = v71;
      v56 = v71 + v72;
      if (v71 + v72 < 0 != __OFADD__(v71, v72))
        v56 = -1;
      v57 = v56 + 1;
      if (v55 < 1)
        v49 = 1;
      else
        v49 = 2 * v55;
      if (v55 >= 1)
        v50 = 2 * v72 - 0x7FFFFFFFFFFFFFFFLL;
      else
        v50 = (2 * v72) ^ 0x8000000000000000;
      v51 = v57 != 0;
      v68 = 2 * v57;
    }
    else
    {
      v68 = 0;
      if (v71)
        v49 = 2 * v71 - 1;
      else
        v49 = 1;
      if (v71)
        v50 = (2 * v72) | 1;
      else
        v50 = 2 * v72;
      v51 = 0;
    }
    if ((objc_msgSend_intersectsIndexesInRange_(v46, v47, v50, v49) & 1) != 0)
    {
LABEL_56:
      objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v58, (uint64_t)CFSTR("CKErrorDomain"), 12, CFSTR("Indexed list key (%@) overlaps with existing indexed list key"), v30);
      v63 = (id)objc_claimAutoreleasedReturnValue();

      v23 = v67;
      goto LABEL_59;
    }
    objc_msgSend_addIndexesInRange_(v48, v58, v50, v49);
    if (v51)
    {
      if ((objc_msgSend_intersectsIndexesInRange_(v48, v59, 0, v68) & 1) != 0)
        goto LABEL_56;
      objc_msgSend_addIndexesInRange_(v48, v58, 0, v68);
    }

    v23 = v67;
LABEL_47:

    if (++v29 >= (unint64_t)objc_msgSend_count(v3, v60, v61, v62))
      goto LABEL_48;
  }
  objc_msgSend_objectForKey_(v23, v36, (uint64_t)v30, v37);
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v52)
  {
    objc_msgSend_addObject_(v13, v53, (uint64_t)v30, v54);
    v33 = v30;
    goto LABEL_47;
  }

LABEL_58:
  objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v38, (uint64_t)CFSTR("CKErrorDomain"), 12, CFSTR("Cannot mix indexed and non-indexed list keys (%@)"), v30);
  v63 = (id)objc_claimAutoreleasedReturnValue();
  v33 = v35;
LABEL_59:

LABEL_53:
LABEL_54:

  return v63;
}

void sub_18A73A8A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_18A73A8B8(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_18A5E970C(a3);
}

void sub_18A73A934(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_18A73A948(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_18A5E970C(a3);
}

void sub_18A73A9BC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A73AA40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A73AAF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A73AC4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A73ACC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A73AD34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A73ADB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_18A73B200(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

uint64_t sub_18A73B30C(uint64_t a1)
{
  unsigned __int8 v2;

  v2 = 0;
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  return v2;
}

void sub_18A73B45C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A73B550(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A73BB80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

id sub_18A73BBD0(uint64_t a1, void *a2)
{
  id v3;
  CKEncryptedData *v4;
  const char *v5;
  uint64_t v6;
  void *v7;

  v3 = a2;
  v4 = [CKEncryptedData alloc];
  v7 = (void *)objc_msgSend_initWithValue_(v4, v5, (uint64_t)v3, v6);

  sub_18A5EF6C0(*(_QWORD *)(a1 + 32), v7, *(void **)(a1 + 40));
  return v7;
}

void sub_18A73C79C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_18A73C9D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A73C9F4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18A73CA04(uint64_t a1)
{

}

BOOL sub_18A73CA0C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  const char *v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  id obj;

  v5 = a2;
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  obj = *(id *)(v6 + 40);
  objc_msgSend_packageWithPackage_error_(CKPackage, v7, a3, (uint64_t)&obj);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_storeStrong((id *)(v6 + 40), obj);
  if (v8)
  {
    objc_msgSend_close(v8, v9, v10, v11);
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v12, (uint64_t)v8, (uint64_t)v5);
  }

  return v8 == 0;
}

void sub_18A73CFE0(uint64_t a1, uint64_t a2, void *a3)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  const char *v20;
  uint64_t v21;
  id v22;

  v22 = a3;
  objc_msgSend_deltasToSave(v22, v3, v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_allObjects(v6, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_pendingReplacementRequests(v22, v11, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = (void *)objc_msgSend_copy(v14, v15, v16, v17);
  objc_msgSend_didSaveDeltas_replacementRequests_(v22, v19, (uint64_t)v10, (uint64_t)v18);

  objc_msgSend_setIsValueIDKnownToServer_(v22, v20, 1, v21);
}

void sub_18A73D414(uint64_t a1, void *a2, unint64_t a3)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  id v13;

  v13 = a2;
  if (objc_msgSend_count(*(void **)(a1 + 32), v5, v6, v7) > a3)
  {
    objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v8, a3, v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_copyServerFieldsFromStreamingAsset_(v10, v11, (uint64_t)v13, v12);

  }
}

void sub_18A73D530(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A73D630(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A73D6D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A73E8AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A73E978(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A73EDA0(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t i;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  const __CFString *v31;
  id v32;
  void *v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  const char *v39;
  uint64_t v40;
  void *v41;
  const char *v42;
  uint64_t v43;
  id v44;
  void *v45;
  id obj;
  __CFString *v48;
  void *v49;
  id v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _BYTE v55[128];
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  v4 = a2;
  v44 = a3;
  v5 = v4;
  objc_sync_enter(v5);
  v6 = (void *)MEMORY[0x1E0C99E20];
  v50 = v5;
  objc_msgSend_allKeys(v5, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setWithArray_(v6, v11, (uint64_t)v10, v12);
  v45 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_changedKeysSet(v50, v13, v14, v15);
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setByAddingObjectsFromSet_(v45, v16, (uint64_t)v49, v17);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  if (v44)
  {
    objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v18, (uint64_t)CFSTR(" (%@)"), v19, v44);
    v48 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v48 = &stru_1E1F66ED0;
  }
  v53 = 0u;
  v54 = 0u;
  v51 = 0u;
  v52 = 0u;
  obj = v20;
  v24 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v21, (uint64_t)&v51, (uint64_t)v55, 16);
  if (v24)
  {
    v25 = *(_QWORD *)v52;
    do
    {
      for (i = 0; i != v24; ++i)
      {
        if (*(_QWORD *)v52 != v25)
          objc_enumerationMutation(obj);
        v27 = *(_QWORD *)(*((_QWORD *)&v51 + 1) + 8 * i);
        objc_msgSend_valueForKey_(v50, v22, v27, v23);
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend_containsObject_(v49, v29, v27, v30))
          v31 = CFSTR(" (modified)");
        else
          v31 = &stru_1E1F66ED0;
        if ((objc_opt_respondsToSelector() & 1) != 0)
        {
          v32 = v28;
          v33 = *(void **)(a1 + 32);
          CKStringWithObject(v32);
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          v38 = objc_msgSend_objCType(v32, v35, v36, v37);
          objc_msgSend_appendFormat_(v33, v39, (uint64_t)CFSTR("\t%@%@%@ -> %@ (type %s)\n"), v40, v27, v31, v48, v34, v38);

        }
        else
        {
          v41 = *(void **)(a1 + 32);
          CKStringWithObject(v28);
          v32 = (id)objc_claimAutoreleasedReturnValue();
          objc_msgSend_appendFormat_(v41, v42, (uint64_t)CFSTR("\t%@%@%@ -> %@\n"), v43, v27, v31, v48, v32);
        }

      }
      v24 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v22, (uint64_t)&v51, (uint64_t)v55, 16);
    }
    while (v24);
  }

  objc_sync_exit(v50);
}

void sub_18A73F060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_18A73F35C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A73F5FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

char *sub_18A73F760(char *a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t i;
  const char *v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  const char *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  const char *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  const char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  const char *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  const char *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  const char *v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  void *v94;
  id v95;
  void *v96;
  const char *v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  const char *v101;
  uint64_t v102;
  const char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t j;
  void *v109;
  const char *v110;
  uint64_t v111;
  id v112;
  const char *v113;
  uint64_t v114;
  const char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t k;
  void *v121;
  void *v122;
  const char *v123;
  uint64_t v124;
  unint64_t v125;
  int v126;
  uint64_t v127;
  const char *v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  const char *v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  const char *v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  void *v142;
  uint64_t v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  _BYTE v156[128];
  _BYTE v157[128];
  _BYTE v158[128];
  uint64_t v159;

  v159 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v9 = a3;
  if (!a1)
    goto LABEL_18;
  if (qword_1ECD96C08 != -1)
    dispatch_once(&qword_1ECD96C08, &unk_1E1F63878);
  v10 = objc_msgSend_length(v9, v6, v7, v8);
  v11 = v10 + 2;
  if (v10 >= 0x80)
  {
    do
    {
      ++v11;
      v12 = v10 >> 14;
      v10 >>= 7;
    }
    while (v12);
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v16 = objc_msgSend_length(v5, v13, v14, v15);
    v17 = v16 + 2;
    if (v16 >= 0x80)
    {
      do
      {
        ++v17;
        v18 = v16 >> 14;
        v16 >>= 7;
      }
      while (v18);
    }
LABEL_15:
    v11 += v17;
    goto LABEL_16;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
LABEL_11:
    v11 += 10;
    goto LABEL_16;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v22 = objc_msgSend_length(v5, v19, v20, v21);
    v17 = v22 + 2;
    if (v22 >= 0x80)
    {
      do
      {
        ++v17;
        v23 = v22 >> 14;
        v22 >>= 7;
      }
      while (v23);
    }
    goto LABEL_15;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v29 = qword_1ECD96C00 + v11;
    objc_msgSend_recordID(a1, v26, v27, v28);
    v30 = (id)objc_claimAutoreleasedReturnValue();
    v34 = objc_msgSend_size(v30, v31, v32, v33);
    v35 = v34 + 2;
    if (v34 >= 0x80)
    {
      do
      {
        ++v35;
        v36 = v34 >> 14;
        v34 >>= 7;
      }
      while (v36);
    }
    v11 = v29 + v35;
LABEL_27:

    goto LABEL_16;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend_recordID(v5, v37, v38, v39);
    v30 = (id)objc_claimAutoreleasedReturnValue();
    v43 = objc_msgSend_size(v30, v40, v41, v42);
    v44 = v43 + 2;
    if (v43 >= 0x80)
    {
      do
      {
        ++v44;
        v45 = v43 >> 14;
        v43 >>= 7;
      }
      while (v45);
    }
    v11 += v44;
    goto LABEL_27;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    goto LABEL_11;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v11 += 92;
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v154 = 0u;
      v155 = 0u;
      v152 = 0u;
      v153 = 0u;
      v46 = v5;
      v48 = objc_msgSend_countByEnumeratingWithState_objects_count_(v46, v47, (uint64_t)&v152, (uint64_t)v158, 16);
      if (v48)
      {
        v49 = v48;
        v50 = *(_QWORD *)v153;
        do
        {
          for (i = 0; i != v49; ++i)
          {
            if (*(_QWORD *)v153 != v50)
              objc_enumerationMutation(v46);
            v11 += sub_18A73F760(a1, *(_QWORD *)(*((_QWORD *)&v152 + 1) + 8 * i), v9);
          }
          v49 = objc_msgSend_countByEnumeratingWithState_objects_count_(v46, v52, (uint64_t)&v152, (uint64_t)v158, 16);
        }
        while (v49);
      }

      goto LABEL_16;
    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend_data(v5, v53, v54, v55);
      v56 = (void *)objc_claimAutoreleasedReturnValue();
      v60 = objc_msgSend_length(v56, v57, v58, v59);
      v61 = v60 + 2;
      if (v60 >= 0x80)
      {
        do
        {
          ++v61;
          v62 = v60 >> 14;
          v60 >>= 7;
        }
        while (v62);
      }

      v11 += v61 + 26;
      goto LABEL_16;
    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          v81 = v5;
          objc_msgSend_deltasToSave(v81, v82, v83, v84);
          v85 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_allObjects(v85, v86, v87, v88);
          v89 = (void *)objc_claimAutoreleasedReturnValue();
          v93 = (void *)objc_msgSend_mutableCopy(v89, v90, v91, v92);
          v94 = v93;
          if (v93)
            v95 = v93;
          else
            v95 = (id)objc_opt_new();
          v96 = v95;

          v150 = 0u;
          v151 = 0u;
          v148 = 0u;
          v149 = 0u;
          v142 = v81;
          objc_msgSend_pendingReplacementRequests(v81, v97, v98, v99);
          v100 = (void *)objc_claimAutoreleasedReturnValue();
          v102 = objc_msgSend_countByEnumeratingWithState_objects_count_(v100, v101, (uint64_t)&v148, (uint64_t)v157, 16);
          if (v102)
          {
            v106 = v102;
            v107 = *(_QWORD *)v149;
            do
            {
              for (j = 0; j != v106; ++j)
              {
                if (*(_QWORD *)v149 != v107)
                  objc_enumerationMutation(v100);
                objc_msgSend_replacementDeltas(*(void **)(*((_QWORD *)&v148 + 1) + 8 * j), v103, v104, v105);
                v109 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend_addObjectsFromArray_(v96, v110, (uint64_t)v109, v111);

              }
              v106 = objc_msgSend_countByEnumeratingWithState_objects_count_(v100, v103, (uint64_t)&v148, (uint64_t)v157, 16);
            }
            while (v106);
          }

          v146 = 0u;
          v147 = 0u;
          v144 = 0u;
          v145 = 0u;
          v112 = v96;
          v114 = objc_msgSend_countByEnumeratingWithState_objects_count_(v112, v113, (uint64_t)&v144, (uint64_t)v156, 16);
          if (v114)
          {
            v118 = v114;
            v119 = *(_QWORD *)v145;
            do
            {
              for (k = 0; k != v118; ++k)
              {
                if (*(_QWORD *)v145 != v119)
                  objc_enumerationMutation(v112);
                v121 = *(void **)(*((_QWORD *)&v144 + 1) + 8 * k);
                objc_msgSend_asset(v121, v115, v116, v117);
                v122 = (void *)objc_claimAutoreleasedReturnValue();

                v124 = qword_1ECD96C00;
                if (!v122)
                  v124 = 0;
                v125 = v124 + v11;
                v143 = 0;
                v126 = objc_msgSend_protobufSize_error_(v121, v123, (uint64_t)&v143, 0);
                v127 = v143;
                if (!v126)
                  v127 = 0;
                v11 = v125 + v127;
              }
              v118 = objc_msgSend_countByEnumeratingWithState_objects_count_(v112, v115, (uint64_t)&v144, (uint64_t)v156, 16);
            }
            while (v118);
          }

          objc_msgSend_valueID(v142, v128, v129, v130);
          v131 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_name(v131, v132, v133, v134);
          v135 = (void *)objc_claimAutoreleasedReturnValue();
          v139 = objc_msgSend_length(v135, v136, v137, v138);
          v140 = v139 + 2;
          if (v139 >= 0x80)
          {
            do
            {
              ++v140;
              v141 = v139 >> 14;
              v139 >>= 7;
            }
            while (v141);
          }

          v11 += v140 + 3;
        }
        goto LABEL_16;
      }
      v30 = v5;
      objc_msgSend_rootDatabasePath(v30, v63, v64, v65);
      v66 = (void *)objc_claimAutoreleasedReturnValue();
      v70 = objc_msgSend_length(v66, v67, v68, v69);
      v71 = v70 + 2;
      if (v70 >= 0x80)
      {
        do
        {
          ++v71;
          v72 = v70 >> 14;
          v70 >>= 7;
        }
        while (v72);
      }
      v73 = v71 + v11;

      if (objc_msgSend_sectionCount(v30, v74, v75, v76))
        v80 = objc_msgSend_sectionCount(v30, v77, v78, v79);
      else
        v80 = 3;
      v11 = v73 + qword_1ECD96C00 * v80;
      goto LABEL_27;
    }
    v11 += 3;
  }
LABEL_16:
  a1 = (char *)(v11 + 2);
  if (v11 >= 0x80)
  {
    do
    {
      ++a1;
      v24 = v11 >> 14;
      v11 >>= 7;
    }
    while (v24);
  }
LABEL_18:

  return a1;
}

void sub_18A73FE00()
{
  qword_1ECD96C00 += 134;
}

void sub_18A7401EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  void *v10;

  objc_sync_exit(v10);
  _Unwind_Resume(a1);
}

void sub_18A740234()
{
  qword_1ECD96C10 += 134;
}

void sub_18A7404B8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A740530(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7405A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A740630(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A740AE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A740B94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A740C5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_18A740C70(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_18A5E970C(a3);
}

void sub_18A740D14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7410C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_18A741188(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  id v6;

  objc_msgSend_valueForKey_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v5 = v4;
  else
    v5 = 0;
  v6 = v5;

  return v6;
}

void sub_18A741258(uint64_t a1, const char *a2)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  void *v5;
  const char *v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  void *v10;
  _QWORD v11[3];

  v11[2] = *MEMORY[0x1E0C80C00];
  objc_msgSend_expressionForBlock_arguments_(MEMORY[0x1E0CB35D0], a2, (uint64_t)&unk_1E1F63940, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = v2;
  objc_msgSend_expressionForConstantValue_(MEMORY[0x1E0CB35D0], v3, (uint64_t)CFSTR("cdl"), v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v11[1] = v5;
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v6, (uint64_t)v11, 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_expressionForFunction_arguments_(MEMORY[0x1E0CB35D0], v8, (uint64_t)CFSTR("tokenize:using:"), (uint64_t)v7);
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = (void *)qword_1ECD96C20;
  qword_1ECD96C20 = v9;

}

uint64_t sub_18A74133C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1E0DE7D20](a2, sel__allStrings, a3, a4);
}

uint64_t sub_18A74147C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t hasAssetBackedDeltas;
  const char *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    hasAssetBackedDeltas = 1;
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      hasAssetBackedDeltas = objc_msgSend_hasAssetBackedDeltas(v3, v6, v7, v8);
    else
      hasAssetBackedDeltas = 0;
  }

  return hasAssetBackedDeltas;
}

uint64_t sub_18A741514(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t hasAssetBackedDeltas;

  v3 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    hasAssetBackedDeltas = objc_msgSend_hasAssetBackedDeltas(v3, v4, v5, v6);
  else
    hasAssetBackedDeltas = 0;

  return hasAssetBackedDeltas;
}

uint64_t sub_18A74161C()
{
  return 1;
}

uint64_t sub_18A741750(void *a1)
{
  id v1;
  char isKindOfClass;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    isKindOfClass = 1;
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend_firstObject(v1, v3, v4, v5);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      isKindOfClass = objc_opt_isKindOfClass();

    }
    else
    {
      isKindOfClass = 0;
    }
  }

  return isKindOfClass & 1;
}

uint64_t sub_18A741960(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t hasAssetBackedDeltas;
  const char *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    hasAssetBackedDeltas = 1;
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      hasAssetBackedDeltas = objc_msgSend_hasAssetBackedDeltas(v3, v6, v7, v8);
    else
      hasAssetBackedDeltas = 0;
  }

  return hasAssetBackedDeltas;
}

uint64_t sub_18A741B80(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t hasAssetBackedDeltas;
  const char *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    hasAssetBackedDeltas = 1;
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      hasAssetBackedDeltas = objc_msgSend_hasAssetBackedDeltas(v3, v6, v7, v8);
    else
      hasAssetBackedDeltas = 0;
  }

  return hasAssetBackedDeltas;
}

uint64_t sub_18A741DE0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t hasAssetBackedDeltas;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    && (objc_msgSend_needsDecryption(v3, v6, v7, v8) & 1) != 0)
  {
    hasAssetBackedDeltas = 1;
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      hasAssetBackedDeltas = objc_msgSend_hasAssetBackedDeltas(v3, v9, v10, v11);
    else
      hasAssetBackedDeltas = 0;
  }

  return hasAssetBackedDeltas;
}

uint64_t sub_18A741EA0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v4 = 1;
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v4 = objc_msgSend_needsDecryption(v3, v5, v6, v7);
    else
      v4 = 0;
  }

  return v4;
}

uint64_t sub_18A742054()
{
  return 1;
}

uint64_t sub_18A742198()
{
  return 1;
}

void sub_18A742320(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A74258C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7427F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A74299C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_18A7432FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7434F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  _Unwind_Resume(exception_object);
}

void sub_18A743510(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  const char *v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  void *v33;
  id v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BYTE v43[128];
  _QWORD v44[2];
  _BYTE v45[128];
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v34 = v4;
      v5 = v4;
      v39 = 0u;
      v40 = 0u;
      v41 = 0u;
      v42 = 0u;
      objc_msgSend_deltasToSave(v5, v6, v7, v8);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v44[0] = v9;
      v33 = v5;
      objc_msgSend_unmergedDeltas(v5, v10, v11, v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v44[1] = v13;
      objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v14, (uint64_t)v44, 2);
      v15 = (void *)objc_claimAutoreleasedReturnValue();

      v17 = objc_msgSend_countByEnumeratingWithState_objects_count_(v15, v16, (uint64_t)&v39, (uint64_t)v45, 16);
      if (v17)
      {
        v18 = v17;
        v19 = *(_QWORD *)v40;
        do
        {
          v20 = 0;
          do
          {
            if (*(_QWORD *)v40 != v19)
              objc_enumerationMutation(v15);
            v21 = *(void **)(*((_QWORD *)&v39 + 1) + 8 * v20);
            v35 = 0u;
            v36 = 0u;
            v37 = 0u;
            v38 = 0u;
            v22 = v21;
            v24 = objc_msgSend_countByEnumeratingWithState_objects_count_(v22, v23, (uint64_t)&v35, (uint64_t)v43, 16);
            if (v24)
            {
              v28 = v24;
              v29 = *(_QWORD *)v36;
              do
              {
                v30 = 0;
                do
                {
                  if (*(_QWORD *)v36 != v29)
                    objc_enumerationMutation(v22);
                  objc_msgSend_asset(*(void **)(*((_QWORD *)&v35 + 1) + 8 * v30), v25, v26, v27);
                  v31 = (void *)objc_claimAutoreleasedReturnValue();

                  if (v31)
                    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
                  ++v30;
                }
                while (v28 != v30);
                v28 = objc_msgSend_countByEnumeratingWithState_objects_count_(v22, v25, (uint64_t)&v35, (uint64_t)v43, 16);
              }
              while (v28);
            }

            ++v20;
          }
          while (v20 != v18);
          v18 = objc_msgSend_countByEnumeratingWithState_objects_count_(v15, v32, (uint64_t)&v39, (uint64_t)v45, 16);
        }
        while (v18);
      }

      v4 = v34;
    }
  }

}

void sub_18A74389C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  _Unwind_Resume(exception_object);
}

void sub_18A7438BC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  void *v24;
  id v25;
  const char *v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t j;
  void *v34;
  void *v35;
  void *v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  const char *v40;
  void *v41;
  id v42;
  id obj;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _BYTE v52[128];
  _QWORD v53[2];
  _BYTE v54[128];
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += objc_msgSend_size(v4, v5, v6, v7);
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v42 = v4;
      v8 = v4;
      v48 = 0u;
      v49 = 0u;
      v50 = 0u;
      v51 = 0u;
      objc_msgSend_deltasToSave(v8, v9, v10, v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v53[0] = v12;
      v41 = v8;
      objc_msgSend_unmergedDeltas(v8, v13, v14, v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v53[1] = v16;
      objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v17, (uint64_t)v53, 2);
      v18 = (void *)objc_claimAutoreleasedReturnValue();

      obj = v18;
      v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(v18, v19, (uint64_t)&v48, (uint64_t)v54, 16);
      if (v20)
      {
        v21 = v20;
        v22 = *(_QWORD *)v49;
        do
        {
          for (i = 0; i != v21; ++i)
          {
            if (*(_QWORD *)v49 != v22)
              objc_enumerationMutation(obj);
            v24 = *(void **)(*((_QWORD *)&v48 + 1) + 8 * i);
            v44 = 0u;
            v45 = 0u;
            v46 = 0u;
            v47 = 0u;
            v25 = v24;
            v27 = objc_msgSend_countByEnumeratingWithState_objects_count_(v25, v26, (uint64_t)&v44, (uint64_t)v52, 16);
            if (v27)
            {
              v31 = v27;
              v32 = *(_QWORD *)v45;
              do
              {
                for (j = 0; j != v31; ++j)
                {
                  if (*(_QWORD *)v45 != v32)
                    objc_enumerationMutation(v25);
                  v34 = *(void **)(*((_QWORD *)&v44 + 1) + 8 * j);
                  objc_msgSend_asset(v34, v28, v29, v30);
                  v35 = (void *)objc_claimAutoreleasedReturnValue();

                  if (v35)
                  {
                    objc_msgSend_asset(v34, v28, v29, v30);
                    v36 = (void *)objc_claimAutoreleasedReturnValue();
                    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += objc_msgSend_size(v36, v37, v38, v39);

                  }
                }
                v31 = objc_msgSend_countByEnumeratingWithState_objects_count_(v25, v28, (uint64_t)&v44, (uint64_t)v52, 16);
              }
              while (v31);
            }

          }
          v21 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v40, (uint64_t)&v48, (uint64_t)v54, 16);
        }
        while (v21);
      }

      v4 = v42;
    }
  }

}

uint64_t sub_18A743C58(uint64_t a1, const char *a2, void *a3, uint64_t a4)
{
  return objc_msgSend_setRequestOptions_(a3, a2, *(_QWORD *)(a1 + 32), a4);
}

uint64_t sub_18A743D08(uint64_t a1, const char *a2, void *a3, uint64_t a4)
{
  return objc_msgSend_releaseDB(a3, a2, (uint64_t)a3, a4);
}

uint64_t sub_18A743DB0(uint64_t a1, const char *a2, void *a3, uint64_t a4)
{
  return objc_msgSend_removeDB(a3, a2, (uint64_t)a3, a4);
}

void sub_18A743F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A743FB0(uint64_t a1, void *a2, void *a3, _BYTE *a4)
{
  id v7;
  id v8;
  const char *v9;
  uint64_t v10;
  int v11;
  const char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;

  v7 = a2;
  v8 = a3;
  v17 = 0;
  v11 = objc_msgSend_claimOwnershipWithError_(v8, v9, (uint64_t)&v17, v10);
  v14 = v17;
  if (v11)
  {
    objc_msgSend_addObject_(*(void **)(a1 + 32), v12, (uint64_t)v8, v13);
    v15 = *(_QWORD *)(a1 + 48);
    if (!v15 || ((*(uint64_t (**)(uint64_t, id, id))(v15 + 16))(v15, v7, v8) & 1) == 0)
      goto LABEL_8;
LABEL_7:
    *a4 = 1;
    goto LABEL_8;
  }
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = 0;
  objc_msgSend_addObject_(*(void **)(a1 + 40), v12, (uint64_t)v8, v13);
  v16 = *(_QWORD *)(a1 + 56);
  if (v16 && (*(unsigned int (**)(uint64_t, id, id, id))(v16 + 16))(v16, v7, v8, v14))
    goto LABEL_7;
LABEL_8:

}

uint64_t sub_18A744210()
{
  return 1;
}

uint64_t sub_18A7442B4(uint64_t a1, const char *a2, void *a3, uint64_t a4)
{
  return objc_msgSend_hasAssetBackedDeltas(a3, a2, (uint64_t)a3, a4);
}

BOOL sub_18A744564(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;

  v3 = a3;
  objc_msgSend_deltasToSave(v3, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_count(v7, v8, v9, v10))
  {
    v14 = 1;
  }
  else
  {
    objc_msgSend_pendingReplacementRequests(v3, v11, v12, v13);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend_count(v15, v16, v17, v18) != 0;

  }
  return v14;
}

void sub_18A7446B0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t i;
  void *v29;
  const char *v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const char *v52;
  uint64_t v53;
  char isEqual;
  void *v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  const char *v65;
  uint64_t v66;
  __int128 v67;
  id obj;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint8_t buf[4];
  void *v78;
  __int16 v79;
  void *v80;
  _BYTE v81[128];
  _BYTE v82[128];
  uint64_t v83;

  v83 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend_deltasToSave(v4, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_allObjects(v8, v9, v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = (void *)objc_msgSend_mutableCopy(v12, v13, v14, v15);

  v75 = 0u;
  v76 = 0u;
  v73 = 0u;
  v74 = 0u;
  objc_msgSend_pendingReplacementRequests(v4, v17, v18, v19);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = objc_msgSend_countByEnumeratingWithState_objects_count_(v20, v21, (uint64_t)&v73, (uint64_t)v82, 16);
  if (v22)
  {
    v26 = v22;
    v27 = *(_QWORD *)v74;
    do
    {
      for (i = 0; i != v26; ++i)
      {
        if (*(_QWORD *)v74 != v27)
          objc_enumerationMutation(v20);
        objc_msgSend_replacementDeltas(*(void **)(*((_QWORD *)&v73 + 1) + 8 * i), v23, v24, v25);
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_addObjectsFromArray_(v16, v30, (uint64_t)v29, v31);

      }
      v26 = objc_msgSend_countByEnumeratingWithState_objects_count_(v20, v23, (uint64_t)&v73, (uint64_t)v82, 16);
    }
    while (v26);
  }

  v71 = 0u;
  v72 = 0u;
  v69 = 0u;
  v70 = 0u;
  obj = v16;
  v33 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v32, (uint64_t)&v69, (uint64_t)v81, 16);
  if (v33)
  {
    v38 = v33;
    v39 = *(_QWORD *)v70;
    *(_QWORD *)&v37 = 138412546;
    v67 = v37;
    do
    {
      v40 = 0;
      do
      {
        if (*(_QWORD *)v70 != v39)
          objc_enumerationMutation(obj);
        v41 = *(void **)(*((_QWORD *)&v69 + 1) + 8 * v40);
        objc_msgSend_valueID(v41, v34, v35, v36, v67);
        v42 = objc_claimAutoreleasedReturnValue();
        if (!v42)
          goto LABEL_15;
        v46 = (void *)v42;
        objc_msgSend_valueID(v41, v43, v44, v45);
        v47 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_valueID(v4, v48, v49, v50);
        v51 = (void *)objc_claimAutoreleasedReturnValue();
        isEqual = objc_msgSend_isEqual_(v47, v52, (uint64_t)v51, v53);

        if ((isEqual & 1) == 0)
        {
LABEL_15:
          if (ck_log_initialization_predicate != -1)
            dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
          v55 = (void *)ck_log_facility_distributed_sync;
          if (os_log_type_enabled((os_log_t)ck_log_facility_distributed_sync, OS_LOG_TYPE_INFO))
          {
            v59 = v55;
            objc_msgSend_valueID(v4, v60, v61, v62);
            v63 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = v67;
            v78 = v63;
            v79 = 2112;
            v80 = v41;
            _os_log_impl(&dword_18A5C5000, v59, OS_LOG_TYPE_INFO, "Delta was generated with a placeholder (or incorrect) value ID. Assigning value ID %@ to delta: %@", buf, 0x16u);

          }
          objc_msgSend_valueID(v4, v56, v57, v58);
          v64 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_setValueID_(v41, v65, (uint64_t)v64, v66);

        }
        if (!*(_BYTE *)(a1 + 32))
          objc_msgSend_unpopulateAsset(v41, v34, v35, v36);
        ++v40;
      }
      while (v38 != v40);
      v38 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v34, (uint64_t)&v69, (uint64_t)v81, 16);
    }
    while (v38);
  }

}

void sub_18A744B2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  _Unwind_Resume(exception_object);
}

void sub_18A744B64(_QWORD *a1, uint64_t a2, void *a3)
{
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  ++*(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24);
  objc_msgSend_unmergedDeltas(v4, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  *(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 24) += objc_msgSend_count(v8, v9, v10, v11);

  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  objc_msgSend_unmergedDeltas(v4, v12, v13, v14, 0);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend_countByEnumeratingWithState_objects_count_(v15, v16, (uint64_t)&v25, (uint64_t)v29, 16);
  if (v17)
  {
    v21 = v17;
    v22 = *(_QWORD *)v26;
    do
    {
      v23 = 0;
      do
      {
        if (*(_QWORD *)v26 != v22)
          objc_enumerationMutation(v15);
        objc_msgSend_asset(*(void **)(*((_QWORD *)&v25 + 1) + 8 * v23), v18, v19, v20);
        v24 = (void *)objc_claimAutoreleasedReturnValue();

        if (v24)
          ++*(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24);
        ++v23;
      }
      while (v21 != v23);
      v21 = objc_msgSend_countByEnumeratingWithState_objects_count_(v15, v18, (uint64_t)&v25, (uint64_t)v29, 16);
    }
    while (v21);
  }

}

void sub_18A744EE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A744EFC(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  if (*a4)
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
  return result;
}

void sub_18A74537C()
{
  CKPKPushRegistry *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  void *v5;

  v0 = [CKPKPushRegistry alloc];
  inited = objc_msgSend_initInternal(v0, v1, v2, v3);
  v5 = (void *)qword_1ECD96C48;
  qword_1ECD96C48 = inited;

}

void sub_18A74540C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A745484(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A745718(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A745734(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_18A74573C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_18A745F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_18A74737C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  objc_msgSend_sharedManager(CKProcessScopedStateManager, a2, a3, a4);
  v11 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_untrustedEntitlements(v11, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  byte_1ECD96C50 = objc_msgSend_hasVFSOpenByIDEntitlement(v7, v8, v9, v10);

}

void sub_18A7481C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A748244(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A748300(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A748AC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_18A74A920(void *a1, uint64_t a2, void *a3)
{
  void (**v4)(id, void *, unint64_t);
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99DE8];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_arrayWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_count(a1, v13, v14, v15))
  {
    v18 = 0;
    do
    {
      objc_msgSend_objectAtIndexedSubscript_(a1, v16, v18, v17);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v4[2](v4, v19, v18);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_addObject_(v12, v21, (uint64_t)v20, v22);

      ++v18;
    }
    while (v18 < objc_msgSend_count(a1, v23, v24, v25));
  }

  return v12;
}

id sub_18A74A9E8(void *a1, uint64_t a2, void *a3)
{
  void (**v4)(id, _QWORD);
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  const char *v29;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _BYTE v35[128];
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99E08];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_dictionaryWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  v13 = a1;
  v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v14, (uint64_t)&v31, (uint64_t)v35, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v32;
    do
    {
      v18 = 0;
      do
      {
        if (*(_QWORD *)v32 != v17)
          objc_enumerationMutation(v13);
        v4[2](v4, *(_QWORD *)(*((_QWORD *)&v31 + 1) + 8 * v18));
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_v2(v19, v20, v21, v22, (_QWORD)v31);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_v1(v19, v24, v25, v26);
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_setObject_forKeyedSubscript_(v12, v28, (uint64_t)v23, (uint64_t)v27);

        ++v18;
      }
      while (v16 != v18);
      v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v29, (uint64_t)&v31, (uint64_t)v35, 16);
    }
    while (v16);
  }

  return v12;
}

id sub_18A74AB5C(void *a1, uint64_t a2, void *a3)
{
  void (**v4)(id, _QWORD);
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99DE8];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_arrayWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v13 = a1;
  v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v14, (uint64_t)&v24, (uint64_t)v28, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v25;
    do
    {
      v18 = 0;
      do
      {
        if (*(_QWORD *)v25 != v17)
          objc_enumerationMutation(v13);
        v4[2](v4, *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * v18));
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        if (v21)
          objc_msgSend_addObject_(v12, v19, (uint64_t)v21, v20, (_QWORD)v24);

        ++v18;
      }
      while (v16 != v18);
      v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v22, (uint64_t)&v24, (uint64_t)v28, 16);
    }
    while (v16);
  }

  return v12;
}

id sub_18A74ACA4(void *a1, uint64_t a2, void *a3)
{
  void (**v4)(id, _QWORD);
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  const char *v30;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[128];
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99E08];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_dictionaryWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  v13 = a1;
  v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v14, (uint64_t)&v32, (uint64_t)v36, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v33;
    do
    {
      v18 = 0;
      do
      {
        if (*(_QWORD *)v33 != v17)
          objc_enumerationMutation(v13);
        v4[2](v4, *(_QWORD *)(*((_QWORD *)&v32 + 1) + 8 * v18));
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        v23 = v19;
        if (v19)
        {
          objc_msgSend_v2(v19, v20, v21, v22, (_QWORD)v32);
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_v1(v23, v25, v26, v27);
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKeyedSubscript_(v12, v29, (uint64_t)v24, (uint64_t)v28);

        }
        ++v18;
      }
      while (v16 != v18);
      v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v30, (uint64_t)&v32, (uint64_t)v36, 16);
    }
    while (v16);
  }

  return v12;
}

id sub_18A74AE20(void *a1, uint64_t a2, void *a3)
{
  void (**v4)(id, _QWORD);
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99DE8];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_arrayWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v13 = a1;
  v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v14, (uint64_t)&v24, (uint64_t)v28, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v25;
    do
    {
      v18 = 0;
      do
      {
        if (*(_QWORD *)v25 != v17)
          objc_enumerationMutation(v13);
        v4[2](v4, *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * v18));
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        if (v21)
          objc_msgSend_addObjectsFromArray_(v12, v19, (uint64_t)v21, v20, (_QWORD)v24);

        ++v18;
      }
      while (v16 != v18);
      v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v22, (uint64_t)&v24, (uint64_t)v28, 16);
    }
    while (v16);
  }

  return v12;
}

uint64_t sub_18A74AF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1E0DE7D20](a1, sel__CKReduceIntoDictionary_block_, 0, a3);
}

uint64_t sub_18A74AF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1E0DE7D20](a1, sel__CKReduceIntoDictionary_block_, 1, a3);
}

id sub_18A74AF80(void *a1, uint64_t a2, char a3, void *a4)
{
  void (**v6)(id, uint64_t);
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  const char *v27;
  const char *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _BYTE v40[128];
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v6 = a4;
  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v11 = a1;
  v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(v11, v12, (uint64_t)&v35, (uint64_t)v40, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v36;
    v34 = *MEMORY[0x1E0C99768];
    do
    {
      for (i = 0; i != v14; ++i)
      {
        if (*(_QWORD *)v36 != v15)
          objc_enumerationMutation(v11);
        v17 = *(_QWORD *)(*((_QWORD *)&v35 + 1) + 8 * i);
        v6[2](v6, v17);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        if (v20)
        {
          objc_msgSend_objectForKeyedSubscript_(v10, v18, (uint64_t)v20, v19);
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          v24 = v21;
          if (v21)
          {
            objc_msgSend_arrayByAddingObject_(v21, v22, v17, v23);
          }
          else
          {
            v39 = v17;
            objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v22, (uint64_t)&v39, 1);
          }
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKeyedSubscript_(v10, v27, (uint64_t)v26, (uint64_t)v20);

        }
        else if ((a3 & 1) == 0)
        {
          v25 = (id)objc_msgSend_exceptionWithName_reason_userInfo_(MEMORY[0x1E0C99DA0], v18, v34, (uint64_t)CFSTR("Returning a non-nil result from a non-compact map function"), 0);
        }

      }
      v14 = objc_msgSend_countByEnumeratingWithState_objects_count_(v11, v28, (uint64_t)&v35, (uint64_t)v40, 16);
    }
    while (v14);
  }

  v32 = (void *)objc_msgSend_copy(v10, v29, v30, v31);
  return v32;
}

uint64_t sub_18A74B16C(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  if ((_DWORD)result)
    *a4 = 1;
  return result;
}

id sub_18A74B1A0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  const char *v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  _QWORD v14[4];
  id v15;

  v6 = a4;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = sub_18A74B254;
  v14[3] = &unk_1E1F63CE8;
  v7 = v6;
  v15 = v7;
  v9 = objc_msgSend_indexOfObjectWithOptions_passingTest_(a1, v8, a3, (uint64_t)v14);
  if (v9 == 0x7FFFFFFFFFFFFFFFLL)
  {
    v12 = 0;
  }
  else
  {
    objc_msgSend_objectAtIndex_(a1, v10, v9, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v12;
}

uint64_t sub_18A74B254(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  if ((_DWORD)result)
    *a4 = 1;
  return result;
}

id sub_18A74B288(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD v20[4];
  id v21;
  id v22;

  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99DE8];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_arrayWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = sub_18A74B354;
  v20[3] = &unk_1E1F63D38;
  v22 = v4;
  v13 = v12;
  v21 = v13;
  v14 = v4;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(a1, v15, (uint64_t)v20, v16);
  v17 = v21;
  v18 = v13;

  return v18;
}

void sub_18A74B354(uint64_t a1)
{
  char *v2;
  uint64_t v3;
  char *v4;

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  v2 = (char *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    v4 = v2;
    objc_msgSend_addObject_(*(void **)(a1 + 32), v2, (uint64_t)v2, v3);
    v2 = v4;
  }

}

id sub_18A74B3A4(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  const char *v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  void *v25;
  id v26;
  id v27;

  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99DE8];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_arrayWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = MEMORY[0x1E0C809B0];
  v23 = 3221225472;
  v24 = sub_18A74B46C;
  v25 = &unk_1E1F63D38;
  v26 = v12;
  v27 = v4;
  v13 = v12;
  v14 = v4;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(a1, v15, (uint64_t)&v22, v16);
  v20 = (void *)objc_msgSend_copy(v13, v17, v18, v19, v22, v23, v24, v25);

  return v20;
}

void sub_18A74B46C(uint64_t a1)
{
  char *v2;
  uint64_t v3;
  char *v4;

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  v2 = (char *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    v4 = v2;
    objc_msgSend_addObjectsFromArray_(*(void **)(a1 + 32), v2, (uint64_t)v2, v3);
    v2 = v4;
  }

}

id sub_18A74B4BC(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD v20[4];
  id v21;
  id v22;

  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99E08];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_dictionaryWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = sub_18A74B584;
  v20[3] = &unk_1E1F63D10;
  v13 = v12;
  v21 = v13;
  v22 = v4;
  v14 = v4;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(a1, v15, (uint64_t)v20, v16);
  v17 = v22;
  v18 = v13;

  return v18;
}

void sub_18A74B584(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, id, uint64_t);
  id v7;
  const char *v8;
  id v9;

  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(void (**)(uint64_t, id, uint64_t))(v5 + 16);
  v7 = a2;
  v6(v5, v7, a3);
  v9 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v8, (uint64_t)v9, (uint64_t)v7);

}

id sub_18A74B5FC(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD v20[4];
  id v21;
  id v22;

  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99E08];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_dictionaryWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = sub_18A74B6C8;
  v20[3] = &unk_1E1F63D38;
  v22 = v4;
  v13 = v12;
  v21 = v13;
  v14 = v4;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(a1, v15, (uint64_t)v20, v16);
  v17 = v21;
  v18 = v13;

  return v18;
}

void sub_18A74B6C8(uint64_t a1, void *a2)
{
  const char *v3;
  void *v4;
  id v5;

  v5 = a2;
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v3, (uint64_t)v4, (uint64_t)v5);

}

id sub_18A74B730(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD v20[4];
  id v21;
  id v22;

  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99E08];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_dictionaryWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = sub_18A74B7FC;
  v20[3] = &unk_1E1F63D38;
  v22 = v4;
  v13 = v12;
  v21 = v13;
  v14 = v4;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(a1, v15, (uint64_t)v20, v16);
  v17 = v21;
  v18 = v13;

  return v18;
}

void sub_18A74B7FC(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  id v12;

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  v12 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_v2(v12, v2, v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = *(void **)(a1 + 32);
  objc_msgSend_v1(v12, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v6, v11, (uint64_t)v5, (uint64_t)v10);

}

id sub_18A74B878(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD v20[4];
  id v21;
  id v22;

  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99E08];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_dictionaryWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = sub_18A74B944;
  v20[3] = &unk_1E1F63D38;
  v22 = v4;
  v13 = v12;
  v21 = v13;
  v14 = v4;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(a1, v15, (uint64_t)v20, v16);
  v17 = v21;
  v18 = v13;

  return v18;
}

void sub_18A74B944(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  id v7;

  v7 = a2;
  v5 = a3;
  if ((*(unsigned int (**)(void))(*(_QWORD *)(a1 + 40) + 16))())
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v6, (uint64_t)v5, (uint64_t)v7);

}

id sub_18A74B9AC(void *a1, uint64_t a2, void *a3)
{
  void (**v4)(id, _QWORD);
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  const char *v22;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99DE8];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_arrayWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v13 = a1;
  v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v14, (uint64_t)&v24, (uint64_t)v28, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v25;
    do
    {
      v18 = 0;
      do
      {
        if (*(_QWORD *)v25 != v17)
          objc_enumerationMutation(v13);
        v4[2](v4, *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * v18));
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_addObject_(v12, v20, (uint64_t)v19, v21, (_QWORD)v24);

        ++v18;
      }
      while (v16 != v18);
      v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v22, (uint64_t)&v24, (uint64_t)v28, 16);
    }
    while (v16);
  }

  return v12;
}

id sub_18A74BAF0(void *a1, uint64_t a2, void *a3)
{
  void (**v4)(id, _QWORD);
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99DE8];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_arrayWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v13 = a1;
  v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v14, (uint64_t)&v24, (uint64_t)v28, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v25;
    do
    {
      v18 = 0;
      do
      {
        if (*(_QWORD *)v25 != v17)
          objc_enumerationMutation(v13);
        v4[2](v4, *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * v18));
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        if (v21)
          objc_msgSend_addObject_(v12, v19, (uint64_t)v21, v20, (_QWORD)v24);

        ++v18;
      }
      while (v16 != v18);
      v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v22, (uint64_t)&v24, (uint64_t)v28, 16);
    }
    while (v16);
  }

  return v12;
}

id sub_18A74BC38(void *a1, uint64_t a2, void *a3)
{
  unsigned int (**v4)(id, uint64_t);
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99DE8];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_arrayWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v13 = a1;
  v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v14, (uint64_t)&v23, (uint64_t)v27, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v24;
    do
    {
      for (i = 0; i != v16; ++i)
      {
        if (*(_QWORD *)v24 != v17)
          objc_enumerationMutation(v13);
        v19 = *(_QWORD *)(*((_QWORD *)&v23 + 1) + 8 * i);
        if (v4[2](v4, v19))
          objc_msgSend_addObject_(v12, v20, v19, v21, (_QWORD)v23);
      }
      v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v20, (uint64_t)&v23, (uint64_t)v27, 16);
    }
    while (v16);
  }

  return v12;
}

id sub_18A74BD78(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD v20[4];
  id v21;
  id v22;

  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99DE8];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_arrayWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = sub_18A74BE40;
  v20[3] = &unk_1E1F63D60;
  v13 = v12;
  v21 = v13;
  v22 = v4;
  v14 = v4;
  objc_msgSend_enumerateIndexesUsingBlock_(a1, v15, (uint64_t)v20, v16);
  v17 = v22;
  v18 = v13;

  return v18;
}

void sub_18A74BE40(uint64_t a1)
{
  void *v1;
  const char *v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)(a1 + 32);
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObject_(v1, v2, (uint64_t)v4, v3);

}

id sub_18A74BE84(void *a1, uint64_t a2, void *a3)
{
  void (**v4)(id, uint64_t, void *);
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  const char *v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  void *v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend_array(MEMORY[0x1E0C99DE8], v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  v9 = a1;
  v11 = objc_msgSend_countByEnumeratingWithState_objects_count_(v9, v10, (uint64_t)&v27, (uint64_t)v31, 16);
  if (v11)
  {
    v14 = v11;
    v15 = *(_QWORD *)v28;
    do
    {
      for (i = 0; i != v14; ++i)
      {
        if (*(_QWORD *)v28 != v15)
          objc_enumerationMutation(v9);
        v17 = *(_QWORD *)(*((_QWORD *)&v27 + 1) + 8 * i);
        objc_msgSend_objectForKey_(v9, v12, v17, v13, (_QWORD)v27);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v4[2](v4, v17, v18);
        v19 = (void *)objc_claimAutoreleasedReturnValue();

        if (v19)
          objc_msgSend_addObjectsFromArray_(v8, v20, (uint64_t)v19, v21);

      }
      v14 = objc_msgSend_countByEnumeratingWithState_objects_count_(v9, v12, (uint64_t)&v27, (uint64_t)v31, 16);
    }
    while (v14);
  }

  v25 = (void *)objc_msgSend_copy(v8, v22, v23, v24);
  return v25;
}

void sub_18A74C1D0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 504) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 504);
    *(_QWORD *)(v8 + 504) = v7;

  }
}

void sub_18A74C360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A74C378(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A74C3A0(uint64_t a1)
{

}

void sub_18A74C3A8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 504));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A74C504(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 512) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 512);
    *(_QWORD *)(v8 + 512) = v7;

  }
}

void sub_18A74C694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A74C6AC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 512));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A74F640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_Unwind_Exception *exception_objecta,void *a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,void *a50)
{
  void *v50;

  _Unwind_Resume(a1);
}

void sub_18A74FF80(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, __n128 a5, uint64_t a6, _BYTE *a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  void *v11;
  void *v12;
  const char *v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  _QWORD v20[4];
  id v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t buf[4];
  uint64_t v28;
  __int16 v29;
  uint64_t v30;
  __int16 v31;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  if (a3)
  {
    v7 = a3;
    v8 = (uint64_t)a2;
    v10 = MEMORY[0x1E0C809B0];
    a5.n128_u64[0] = 134218754;
    v18 = a5;
    do
    {
      v23 = 0;
      v24 = &v23;
      v25 = 0x2020000000;
      v26 = 0;
      v11 = *(void **)(a1 + 32);
      objc_msgSend_indexSetWithIndex_(MEMORY[0x1E0CB36B8], a2, v8, a4, *(_OWORD *)&v18);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v20[0] = v10;
      v20[1] = 3221225472;
      v20[2] = sub_18A7501B4;
      v20[3] = &unk_1E1F63D88;
      v21 = *(id *)(a1 + 40);
      v22 = &v23;
      objc_msgSend_enumerateObjectsForIndexes_usingBlock_(v11, v13, (uint64_t)v12, (uint64_t)v20);

      if (!v24[3])
      {
        if (ck_log_initialization_predicate != -1)
          dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
        v14 = ck_log_facility_distributed_sync;
        if (os_log_type_enabled((os_log_t)ck_log_facility_distributed_sync, OS_LOG_TYPE_DEBUG))
        {
          v15 = *(_QWORD *)(a1 + 48);
          v16 = *(_QWORD *)(a1 + 56);
          v17 = *(_QWORD *)(a1 + 64);
          *(_DWORD *)buf = v18.n128_u32[0];
          v28 = v8;
          v29 = 2112;
          v30 = v15;
          v31 = 2112;
          v32 = v16;
          v33 = 2112;
          v34 = v17;
          _os_log_debug_impl(&dword_18A5C5000, v14, OS_LOG_TYPE_DEBUG, "[Batch Replacement] Could not find causal batch for state changed clock value %lu in batch %@ with eligible removals vector %@ and current state vector %@", buf, 0x2Au);
        }
        *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = 1;
        *a7 = 1;
      }

      _Block_object_dispose(&v23, 8);
      ++v8;
      --v7;
    }
    while (v7);
  }
}

void sub_18A750180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, ...)
{
  void *v11;
  va_list va;

  va_start(va, a11);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A7501B4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  result = objc_msgSend_addObject_(*(void **)(a1 + 32), a2, a4, a4);
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  return result;
}

void sub_18A7501F0(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  void *v25;
  const char *v26;
  _QWORD v27[5];
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v3 = a2;
  v28 = 0;
  v29 = &v28;
  v30 = 0x2020000000;
  v31 = 0;
  objc_msgSend_vectors(v3, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_contents(v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_backingVector(v11, v12, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_attributeToSparseVector(v15, v16, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v27[0] = MEMORY[0x1E0C809B0];
  v27[1] = 3221225472;
  v27[2] = sub_18A750354;
  v27[3] = &unk_1E1F63EA0;
  v27[4] = &v28;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v19, v20, (uint64_t)v27, v21);

  v22 = *(void **)(a1 + 32);
  objc_msgSend_numberWithUnsignedInteger_(MEMORY[0x1E0CB37E8], v23, v29[3], v24);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKey_(v22, v26, (uint64_t)v25, (uint64_t)v3);

  _Block_object_dispose(&v28, 8);
}

void sub_18A750304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A750354(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v13 = a2;
  v5 = a3;
  v9 = objc_msgSend_unsignedShortValue(v13, v6, v7, v8);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += objc_msgSend_timestampCount(v5, v10, v11, v12) * v9;

}

void sub_18A7503C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

uint64_t sub_18A7503E0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  const char *v56;
  uint64_t v57;
  void *v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  unint64_t v66;
  const char *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  const char *v79;
  uint64_t v80;
  void *v82;
  const char *v83;
  void *v84;
  const char *v85;

  v5 = a2;
  v6 = a3;
  objc_msgSend_vectors(v5, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_contents(v10, v11, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = objc_msgSend_timestampCount(v14, v15, v16, v17);
  objc_msgSend_vectors(v6, v19, v20, v21);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_contents(v22, v23, v24, v25);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = objc_msgSend_timestampCount(v26, v27, v28, v29);

  if (v18 < v30)
  {
    v34 = 1;
    goto LABEL_13;
  }
  objc_msgSend_vectors(v5, v31, v32, v33);
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_contents(v35, v36, v37, v38);
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v43 = objc_msgSend_timestampCount(v39, v40, v41, v42);
  objc_msgSend_vectors(v6, v44, v45, v46);
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_contents(v47, v48, v49, v50);
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  v55 = objc_msgSend_timestampCount(v51, v52, v53, v54);

  if (v43 > v55)
  {
    v34 = -1;
    goto LABEL_13;
  }
  objc_msgSend_objectForKey_(*(void **)(a1 + 32), v56, (uint64_t)v5, v57);
  v58 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKey_(*(void **)(a1 + 32), v59, (uint64_t)v6, v60);
  v61 = objc_claimAutoreleasedReturnValue();
  v65 = (void *)v61;
  if (!v58)
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v62, v63, v64);
    v82 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(v82, v83, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), CFSTR("CKMergeableDeltaMetadata+DeltaMetadataCalculations.mm"), 305, CFSTR("Cached sum for delta1 not found"));

    if (v65)
      goto LABEL_7;
LABEL_15:
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v62, v63, v64);
    v84 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(v84, v85, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), CFSTR("CKMergeableDeltaMetadata+DeltaMetadataCalculations.mm"), 306, CFSTR("Cached sum for delta2 not found"));

    goto LABEL_7;
  }
  if (!v61)
    goto LABEL_15;
LABEL_7:
  v66 = objc_msgSend_unsignedIntegerValue(v58, v62, v63, v64);
  v70 = objc_msgSend_unsignedIntegerValue(v65, v67, v68, v69);
  if (v66 >= v70)
  {
    if (v66 > v70)
    {
      v34 = -1;
    }
    else
    {
      objc_msgSend_identifier(v5, v71, v72, v73);
      v74 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_identifier(v6, v75, v76, v77);
      v78 = (void *)objc_claimAutoreleasedReturnValue();
      v34 = objc_msgSend_compare_(v74, v79, (uint64_t)v78, v80);

    }
  }
  else
  {
    v34 = 1;
  }

LABEL_13:
  return v34;
}

void sub_18A75061C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18A75069C(void **a1, void *a2)
{
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const char *v37;
  uint64_t v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const char *v47;
  uint64_t v48;
  char hasAtomStateNotInStateVector;
  const char *v50;
  uint64_t v51;
  const char *v52;
  uint64_t v53;
  const char *v54;
  uint64_t v55;
  id obj;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  _BYTE v62[128];
  uint64_t v63;

  v63 = *MEMORY[0x1E0C80C00];
  v58 = 0u;
  v59 = 0u;
  v60 = 0u;
  v61 = 0u;
  obj = a2;
  v3 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v2, (uint64_t)&v58, (uint64_t)v62, 16);
  if (v3)
  {
    v55 = *(_QWORD *)v59;
    do
    {
      v4 = 0;
      do
      {
        if (*(_QWORD *)v59 != v55)
          objc_enumerationMutation(obj);
        v5 = *(_QWORD *)(*((_QWORD *)&v58 + 1) + 8 * v4);
        v6 = (void *)MEMORY[0x18D76DE4C]();
        objc_msgSend_objectForKeyedSubscript_(obj, v7, v5, v8);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_vectors(v9, v10, v11, v12);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_contents(v13, v14, v15, v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_vectorFilteredByAtomState_(v17, v18, 3, v19);
        v20 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend_vectors(v9, v21, v22, v23);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_contents(v24, v25, v26, v27);
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        v32 = (void *)objc_msgSend_mutableCopy(v28, v29, v30, v31);

        objc_msgSend_clockVector(v20, v33, v34, v35);
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_minusVector_(v32, v37, (uint64_t)v36, v38);

        objc_msgSend_vectors(a1[4], v39, v40, v41);
        v42 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_contents(v42, v43, v44, v45);
        v46 = (void *)objc_claimAutoreleasedReturnValue();
        hasAtomStateNotInStateVector = objc_msgSend_hasAtomStateNotInStateVector_(v32, v47, (uint64_t)v46, v48);

        if ((hasAtomStateNotInStateVector & 1) == 0)
        {
          objc_msgSend_addObject_(a1[5], v50, v5, v51);
          objc_msgSend_addObject_(a1[6], v52, (uint64_t)v9, v53);
        }

        objc_autoreleasePoolPop(v6);
        ++v4;
      }
      while (v3 != v4);
      v3 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v54, (uint64_t)&v58, (uint64_t)v62, 16);
    }
    while (v3);
  }

}

void sub_18A7508B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

  _Unwind_Resume(a1);
}

void sub_18A751864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, _Unwind_Exception *exception_objecta, void *a18, void *a19, void *a20,void *a21,void *a22,uint64_t a23,void *a24,void *a25,void *a26,void *a27,void *a28)
{
  void *v28;
  void *v29;

  _Unwind_Resume(a1);
}

void sub_18A751D40(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  const char *v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  void *v25;
  const char *v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const char *v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  id v54;
  const char *v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  const char *v59;
  uint64_t v60;
  id v61;
  _QWORD v62[4];
  id v63;
  id v64;
  uint64_t v65;
  id v66;

  v61 = a4;
  if ((objc_msgSend_containsObject_(*(void **)(a1 + 32), v5, (uint64_t)v61, v6) & 1) == 0)
  {
    v10 = *(void **)(a1 + 40);
    objc_msgSend_identifier(v61, v7, v8, v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v10, v12, (uint64_t)v11, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    v15 = *(void **)(a1 + 48);
    objc_msgSend_identifier(v61, v16, v17, v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v15, v20, (uint64_t)v19, v21);
    v22 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend_clockValuesForSiteIdentifier_(v14, v23, *(_QWORD *)(a1 + 56), v24);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_clockValuesForSiteIdentifier_(v22, v26, *(_QWORD *)(a1 + 56), v27);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_clockValuesForSiteIdentifier_(*(void **)(a1 + 64), v29, *(_QWORD *)(a1 + 56), v30);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    v32 = (void *)objc_opt_new();
    objc_msgSend_addIndexes_(v32, v33, (uint64_t)v25, v34);
    objc_msgSend_addIndexes_(v32, v35, (uint64_t)v28, v36);
    objc_msgSend_removeIndexes_(v32, v37, (uint64_t)v31, v38);
    v42 = (void *)objc_msgSend_mutableCopy(v32, v39, v40, v41);
    objc_msgSend_removeIndexes_(v42, v43, *(_QWORD *)(a1 + 72), v44);
    objc_msgSend_removeIndexes_(v32, v45, (uint64_t)v42, v46);
    v50 = (void *)objc_msgSend_mutableCopy(v32, v47, v48, v49);
    v51 = *(void **)(a1 + 80);
    v62[0] = MEMORY[0x1E0C809B0];
    v62[1] = 3221225472;
    v62[2] = sub_18A751FF8;
    v62[3] = &unk_1E1F63E50;
    v63 = *(id *)(a1 + 32);
    v52 = *(id *)(a1 + 88);
    v53 = *(_QWORD *)(a1 + 56);
    v64 = v52;
    v65 = v53;
    v54 = v50;
    v66 = v54;
    objc_msgSend_enumerateObjectsForIndexes_usingBlock_(v51, v55, (uint64_t)v32, (uint64_t)v62);
    if (objc_msgSend_count(v54, v56, v57, v58))
      objc_msgSend_addObject_(*(void **)(a1 + 32), v59, (uint64_t)v61, v60);

  }
}

void sub_18A751F44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  _Unwind_Resume(a1);
}

void sub_18A751FF8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  const char *v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  id v20;

  v20 = a4;
  if ((objc_msgSend_containsObject_(*(void **)(a1 + 32), v5, (uint64_t)v20, v6) & 1) == 0)
  {
    v10 = *(void **)(a1 + 40);
    objc_msgSend_identifier(v20, v7, v8, v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v10, v12, (uint64_t)v11, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend_clockValuesForSiteIdentifier_(v14, v15, *(_QWORD *)(a1 + 48), v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_removeIndexes_(*(void **)(a1 + 56), v18, (uint64_t)v17, v19);

  }
}

void sub_18A752094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18A752154(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7522B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t sub_18A752A28(uint64_t a1, uint64_t a2)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  void *v11;
  const char *v12;

  v4 = (void *)xpc_copy_short_description();
  objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v5, (uint64_t)v4, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = *(void **)(a1 + 32);
  objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v9, a2, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v8, v12, (uint64_t)v7, (uint64_t)v11);

  free(v4);
  return 1;
}

void sub_18A752B40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A752CC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A752D70(uint64_t a1, id a2, void *a3)
{
  void *v4;
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  xpc_object_t value;

  v4 = *(void **)(a1 + 32);
  v5 = objc_retainAutorelease(a2);
  value = a3;
  v9 = (const char *)objc_msgSend_UTF8String(v5, v6, v7, v8);
  xpc_dictionary_set_value(v4, v9, value);

}

uint64_t sub_18A752E6C(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  void *v5;
  id v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  const char *v10;

  v4 = *(void **)(a1 + 32);
  v5 = (void *)MEMORY[0x1E0CB3940];
  v6 = a3;
  objc_msgSend_stringWithUTF8String_(v5, v7, a2, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v4, v10, (uint64_t)v6, (uint64_t)v9);

  return 1;
}

void sub_18A752FB8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A753018(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A753470(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 512) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 512);
    *(_QWORD *)(v8 + 512) = v7;

  }
}

void sub_18A753600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A753618(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A753640(uint64_t a1)
{

}

void sub_18A753648(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 512));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7537A4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void sub_18A753934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A75394C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A753AA8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 528) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 528);
    *(_QWORD *)(v8 + 528) = v7;

  }
}

void sub_18A753C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A753C50(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 528));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

uint64_t sub_18A7544EC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;

  v4 = a3;
  objc_msgSend_assetReference(v4, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    objc_msgSend_assetReference(v4, v9, v10, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend_databaseScope(v12, v13, v14, v15) != 2 && objc_msgSend_databaseScope(v12, v16, v17, v18) != 3)
      goto LABEL_11;
    objc_msgSend_database(*(void **)(a1 + 32), v16, v17, v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend_databaseScope(v19, v20, v21, v22) == 2)
    {

    }
    else
    {
      objc_msgSend_database(*(void **)(a1 + 32), v23, v24, v25);
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      v34 = objc_msgSend_databaseScope(v30, v31, v32, v33);

      if (v34 != 3)
        goto LABEL_11;
    }
    objc_msgSend_configuration(*(void **)(a1 + 32), v26, v27, v28);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_container(v35, v36, v37, v38);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_options(v39, v40, v41, v42);
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend_bypassPCSEncryption(v43, v44, v45, v46))
    {

    }
    else
    {
      objc_msgSend_configuration(*(void **)(a1 + 32), v47, v48, v49);
      v50 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_container(v50, v51, v52, v53);
      v54 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_options(v54, v55, v56, v57);
      v58 = (void *)objc_claimAutoreleasedReturnValue();
      v62 = objc_msgSend_useClearAssetEncryption(v58, v59, v60, v61);

      if (!v62)
      {
        v29 = 1;
        goto LABEL_12;
      }
    }
LABEL_11:
    v29 = 0;
LABEL_12:

    goto LABEL_13;
  }
  v29 = 1;
LABEL_13:

  return v29 ^ 1u;
}

uint64_t sub_18A754854(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_addObject_(*(void **)(a1 + 32), a2, a3, a4);
}

id sub_18A754924(uint64_t a1, void *a2)
{
  id v2;
  CKTuple2 *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  void *v9;

  v2 = a2;
  v3 = [CKTuple2 alloc];
  objc_msgSend_sourceRecordID(v2, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend_initWithObject1_object2_(v3, v8, (uint64_t)v7, (uint64_t)v2);

  return v9;
}

id sub_18A754990(uint64_t a1, void *a2)
{
  id v2;
  CKTuple2 *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  void *v13;

  v2 = a2;
  v3 = [CKTuple2 alloc];
  objc_msgSend_destinationRecord(v2, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_recordID(v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = (void *)objc_msgSend_initWithObject1_object2_(v3, v12, (uint64_t)v11, (uint64_t)v2);

  return v13;
}

BOOL CKDPRecordIdentifierReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  CKDPIdentifier *v17;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(CKDPIdentifier);
        objc_storeStrong((id *)(a1 + 8), v17);
        if (!PBReaderPlaceMark() || (CKDPIdentifierReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_30;
LABEL_25:
        PBReaderRecallMark();

        goto LABEL_27;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_27:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v17 = objc_alloc_init(CKDPRecordZoneIdentifier);
    objc_storeStrong((id *)(a1 + 16), v17);
    if (!PBReaderPlaceMark() || (CKDPRecordZoneIdentifierReadFrom((uint64_t)v17, a2) & 1) == 0)
    {
LABEL_30:

      return 0;
    }
    goto LABEL_25;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id sub_18A7576E4(uint64_t a1, void *a2)
{
  id v2;
  CKUserIdentityLookupInfo *v3;
  const char *v4;
  uint64_t v5;
  void *v6;

  v2 = a2;
  v3 = [CKUserIdentityLookupInfo alloc];
  v6 = (void *)objc_msgSend_initWithEmailAddress_(v3, v4, (uint64_t)v2, v5);

  return v6;
}

id sub_18A757738(uint64_t a1, void *a2)
{
  id v2;
  CKUserIdentityLookupInfo *v3;
  const char *v4;
  uint64_t v5;
  void *v6;

  v2 = a2;
  v3 = [CKUserIdentityLookupInfo alloc];
  v6 = (void *)objc_msgSend_initWithUserRecordID_(v3, v4, (uint64_t)v2, v5);

  return v6;
}

id sub_18A75778C(uint64_t a1, void *a2)
{
  id v2;
  CKUserIdentityLookupInfo *v3;
  const char *v4;
  uint64_t v5;
  void *v6;

  v2 = a2;
  v3 = [CKUserIdentityLookupInfo alloc];
  v6 = (void *)objc_msgSend_initWithPhoneNumber_(v3, v4, (uint64_t)v2, v5);

  return v6;
}

void sub_18A757DAC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 528) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 528);
    *(_QWORD *)(v8 + 528) = v7;

  }
}

void sub_18A757F3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A757F54(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A757F7C(uint64_t a1)
{

}

void sub_18A757F84(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 528));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7580E0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 536) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 536);
    *(_QWORD *)(v8 + 536) = v7;

  }
}

void sub_18A758270(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A758288(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 536));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7583E4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 544) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 544);
    *(_QWORD *)(v8 + 544) = v7;

  }
}

void sub_18A758574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A75858C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 544));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7586E8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 552) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 552);
    *(_QWORD *)(v8 + 552) = v7;

  }
}

void sub_18A758878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A758890(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 552));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A758A48(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 560) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 560);
    *(_QWORD *)(v8 + 560) = v7;

  }
}

void sub_18A758BD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A758BF0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 560));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_18A759958(uint64_t a1, void *a2, unint64_t a3)
{
  id v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;

  v5 = a2;
  v6 = (void *)objc_opt_new();
  objc_msgSend_setWireSerialization_(v6, v7, (uint64_t)v5, v8);

  if (objc_msgSend_count(*(void **)(a1 + 32), v9, v10, v11) > a3)
  {
    objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v12, a3, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      objc_msgSend_setEncryptedMasterKey_(v6, v15, (uint64_t)v14, v16);

  }
  return v6;
}

void sub_18A75B584(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_18A75B59C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v6;
  uint64_t v7;

  objc_msgSend_addClockValues_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
  return objc_msgSend_addClockValueLengths_(*(void **)(a1 + 32), v6, a3, v7);
}

uint64_t sub_18A75B5D0(uint64_t a1, const char *a2, uint64_t a3, unsigned int a4)
{
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;

  v6 = objc_msgSend_pClockTypeAndAtomStateFromClockType_atomState_(*(void **)(a1 + 40), a2, a4 >> 8, a4);
  objc_msgSend_addStateValues_(*(void **)(a1 + 32), v7, v6, v8);
  return objc_msgSend_addStateValueLengths_(*(void **)(a1 + 32), v9, a3, v10);
}

void sub_18A75BB2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id obj, id a13, id a14)
{
  void *v14;

  objc_sync_exit(v14);
  objc_sync_exit(obj);
  objc_sync_exit(a13);
  objc_sync_exit(a14);
  _Unwind_Resume(a1);
}

void sub_18A75C098(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

BOOL CKDPDistributedTimestampsSiteVersionVectorsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  CKDPDistributedTimestampsVersionVector *v17;
  uint64_t v18;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = objc_alloc_init(CKDPDistributedTimestampsVersionVector);
        v18 = 24;
        goto LABEL_25;
      case 2u:
        v17 = objc_alloc_init(CKDPDistributedTimestampsVersionVector);
        v18 = 8;
        goto LABEL_25;
      case 3u:
        v17 = objc_alloc_init(CKDPDistributedTimestampsVersionVector);
        v18 = 32;
        goto LABEL_25;
      case 4u:
        v17 = objc_alloc_init(CKDPDistributedTimestampsVersionVector);
        v18 = 16;
LABEL_25:
        objc_storeStrong((id *)(a1 + v18), v17);
        if (PBReaderPlaceMark()
          && (CKDPDistributedTimestampsVersionVectorReadFrom((uint64_t)v17, a2) & 1) != 0)
        {
          PBReaderRecallMark();

LABEL_28:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_28;
    }
  }
}

void sub_18A75E064(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_18A75E158(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A75E1CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A75E604(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A75EBA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

const __CFString *CKStringFromShareParticipantVisibility(unint64_t a1)
{
  if (a1 > 3)
    return CFSTR("Unknown");
  else
    return off_1E1F642A0[a1];
}

const __CFString *CKStringFromShareParticipantSelfRemovalBehavior(unint64_t a1)
{
  if (a1 > 3)
    return CFSTR("Unknown");
  else
    return off_1E1F642C0[a1];
}

void sub_18A75EEC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A75EF30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A75EFA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A75F094(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_18A75F0AC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)(a1 + 32);
  objc_msgSend_participantID(a2, (const char *)a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend_containsObject_(v4, v6, (uint64_t)v5, v7) ^ 1;

  return v8;
}

void sub_18A75F138(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A75F1B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A75F20C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A75F284(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A75F2E0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A75F358(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A75F8F4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_18A75F91C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  const char *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  const char *v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  id v17;
  const char *v18;
  uint64_t v19;
  int v20;
  id v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v8 = a3;
  v11 = a4;
  if (v11)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v12 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
    {
      v20 = 138412290;
      v21 = v11;
      _os_log_error_impl(&dword_18A5C5000, v12, OS_LOG_TYPE_ERROR, "Error fetching share participant: %@", (uint8_t *)&v20, 0xCu);
    }
  }
  else if (v8)
  {
    objc_msgSend_setIsApprovedRequester_(v8, v9, 1, v10);
    objc_msgSend_setPermission_(v8, v13, *(_QWORD *)(a1 + 40), v14);
    objc_msgSend_setRole_(v8, v15, *(_QWORD *)(a1 + 48), v16);
    v17 = *(id *)(a1 + 32);
    objc_sync_enter(v17);
    objc_msgSend_addObject_(*(void **)(a1 + 32), v18, (uint64_t)v8, v19);
    objc_sync_exit(v17);

  }
}

void sub_18A75FA80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A75FA9C(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  NSObject *v5;
  uint64_t v6;
  id v7;
  id v8;
  const char *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  void **v15;
  const char *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint8_t v25[128];
  uint8_t buf[4];
  id v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (v3)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v5 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v27 = v3;
      _os_log_error_impl(&dword_18A5C5000, v5, OS_LOG_TYPE_ERROR, "Error fetching share participants: %@", buf, 0xCu);
    }
    v6 = *(_QWORD *)(a1 + 48);
    if (v6)
      (*(void (**)(uint64_t, id))(v6 + 16))(v6, v3);
  }
  else
  {
    v7 = *(id *)(a1 + 32);
    objc_sync_enter(v7);
    v21 = 0u;
    v22 = 0u;
    v23 = 0u;
    v24 = 0u;
    v8 = *(id *)(a1 + 32);
    v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v8, v9, (uint64_t)&v21, (uint64_t)v25, 16);
    if (v12)
    {
      v13 = *(_QWORD *)v22;
      do
      {
        for (i = 0; i != v12; ++i)
        {
          if (*(_QWORD *)v22 != v13)
            objc_enumerationMutation(v8);
          objc_msgSend_addParticipant_(WeakRetained, v10, *(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * i), v11, (_QWORD)v21);
        }
        v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v8, v10, (uint64_t)&v21, (uint64_t)v25, 16);
      }
      while (v12);
    }

    objc_sync_exit(v7);
    v15 = (void **)WeakRetained;
    objc_sync_enter(v15);
    objc_msgSend_removeObjectsInArray_(v15[54], v16, *(_QWORD *)(a1 + 40), v17);
    objc_msgSend_addObjectsFromArray_(v15[55], v18, *(_QWORD *)(a1 + 40), v19);
    objc_sync_exit(v15);

    v20 = *(_QWORD *)(a1 + 48);
    if (v20)
      (*(void (**)(uint64_t, _QWORD))(v20 + 16))(v20, 0);
  }

}

void sub_18A75FCC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A75FDC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7601F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_18A760214(uint64_t result, const char *a2, uint64_t a3, uint64_t a4)
{
  if (a2)
    return objc_msgSend_addObject_(*(void **)(result + 32), a2, (uint64_t)a2, a4);
  return result;
}

void sub_18A760AFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A76113C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_18A761360(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A761430(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7615B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A761AB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A761AF0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18A761B00(uint64_t a1)
{

}

void sub_18A761B08(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD v18[4];
  id v19;
  id v20;

  v3 = a2;
  v4 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = sub_18A761BF8;
  v18[3] = &unk_1E1F64128;
  v17 = v3;
  v20 = v17;
  v19 = *(id *)(a1 + 32);
  objc_msgSend_CKFilter_(v4, v5, (uint64_t)v18, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_count(v7, v8, v9, v10) == 1)
  {
    objc_msgSend_lastObject(v7, v11, v12, v13);
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v16 = *(void **)(v15 + 40);
    *(_QWORD *)(v15 + 40) = v14;

  }
  if (objc_msgSend_count(v7, v11, v12, v13))
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v7);

}

uint64_t sub_18A761BF8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), a2);
}

BOOL sub_18A761C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a2 == a3;
}

BOOL sub_18A761C18(uint64_t a1, void *a2, void *a3)
{
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a3;
  v8 = objc_msgSend_role(a2, v5, v6, v7);
  v12 = objc_msgSend_role(v4, v9, v10, v11);

  return v8 == v12;
}

uint64_t sub_18A761C68(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t isEqualToString;

  v4 = a2;
  v5 = a3;
  objc_msgSend_participantID(v4, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_participantID(v5, v10, v11, v12);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  if (v9 == v16)
  {
    isEqualToString = 1;
  }
  else
  {
    objc_msgSend_participantID(v4, v13, v14, v15);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_participantID(v5, v18, v19, v20);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    isEqualToString = objc_msgSend_isEqualToString_(v17, v22, (uint64_t)v21, v23);

  }
  return isEqualToString;
}

void *sub_18A761D28(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *isEqual;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const char *v37;
  uint64_t v38;

  v4 = a2;
  v5 = a3;
  objc_msgSend_userIdentity(v4, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_publicSharingKey(v9, v10, v11, v12);
  isEqual = (void *)objc_claimAutoreleasedReturnValue();
  if (isEqual)
  {
    objc_msgSend_userIdentity(v5, v13, v14, v15);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_publicSharingKey(v17, v18, v19, v20);
    v21 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v21)
    {
      isEqual = 0;
      goto LABEL_6;
    }
    objc_msgSend_userIdentity(v4, v22, v23, v24);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_publicSharingKey(v9, v25, v26, v27);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_userIdentity(v5, v29, v30, v31);
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_publicSharingKey(v32, v33, v34, v35);
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    isEqual = (void *)objc_msgSend_isEqual_(v28, v37, (uint64_t)v36, v38);

  }
LABEL_6:

  return isEqual;
}

uint64_t sub_18A761E28(uint64_t a1, void *a2, void *a3)
{
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t isEqual;

  v4 = a3;
  objc_msgSend_userIdentity(a2, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_userRecordID(v8, v9, v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_userIdentity(v4, v13, v14, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_userRecordID(v16, v17, v18, v19);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  isEqual = objc_msgSend_isEqual_(v12, v21, (uint64_t)v20, v22);

  return isEqual;
}

void sub_18A7622AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A762588(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A762634(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_18A762648(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend_addedParticipantIDs(v2, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_participantID(v3, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v14 = objc_msgSend_containsObject_(v7, v12, (uint64_t)v11, v13);
  return v14;
}

void sub_18A76274C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_18A762760(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend_removedParticipantIDs(v2, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_participantID(v3, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v14 = objc_msgSend_containsObject_(v7, v12, (uint64_t)v11, v13);
  return v14;
}

void sub_18A7628F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A762B98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_18A762C2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7632D0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A763590(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  objc_sync_exit(v2);
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A763840(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  id v9;

  if (a3)
  {
    if (*(_BYTE *)(a1 + 40))
      v4 = 3;
    else
      v4 = 2;
    v9 = a3;
    objc_msgSend_setPermission_(v9, v5, v4, v6);
    objc_msgSend_addParticipant_(*(void **)(a1 + 32), v7, (uint64_t)v9, v8);

  }
}

void sub_18A76389C(void **a1, void *a2)
{
  const char *v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  void (**v7)(void *, void *, id);
  CKModifyRecordsOperation *v8;
  const char *v9;
  void *v10;
  const char *v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  id v19;
  const char *v20;
  uint64_t v21;
  NSObject *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  void *v29;
  _QWORD v30[5];
  id v31;
  void *v32;
  uint8_t buf[4];
  id v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  if (v5)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v6 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138412290;
      v34 = v5;
      _os_log_debug_impl(&dword_18A5C5000, v6, OS_LOG_TYPE_DEBUG, "Fetching share participants UI, failed: %@", buf, 0xCu);
    }
    v7 = (void (**)(void *, void *, id))a1[6];
    if (v7)
      v7[2](v7, a1[4], v5);
  }
  else
  {
    objc_msgSend__setPublicPermissionNoSideEffects_(a1[4], v3, 1, v4);
    v8 = [CKModifyRecordsOperation alloc];
    v32 = a1[4];
    objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v9, (uint64_t)&v32, 1);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = (void *)objc_msgSend_initWithRecordsToSave_recordIDsToDelete_(v8, v11, (uint64_t)v10, 0);

    objc_msgSend_resolvedConfiguration(v12, v13, v14, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setRequestOriginator_(v16, v17, 5, v18);

    v30[0] = MEMORY[0x1E0C809B0];
    v30[1] = 3221225472;
    v30[2] = sub_18A763B10;
    v30[3] = &unk_1E1F64220;
    v19 = a1[6];
    v30[4] = a1[4];
    v31 = v19;
    objc_msgSend_setModifyRecordsCompletionBlock_(v12, v20, (uint64_t)v30, v21);
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v22 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
    {
      v29 = a1[4];
      *(_DWORD *)buf = 138412290;
      v34 = v29;
      _os_log_debug_impl(&dword_18A5C5000, v22, OS_LOG_TYPE_DEBUG, "Saving share to server for UI: %@", buf, 0xCu);
    }
    objc_msgSend_privateCloudDatabase(a1[5], v23, v24, v25);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_addOperation_(v26, v27, (uint64_t)v12, v28);

  }
}

uint64_t sub_18A763B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, *(_QWORD *)(a1 + 32), a4);
  return result;
}

void sub_18A763D88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A764450(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_18A764568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_18A764C20(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_18A765758(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  void *v9;

  if (a1)
  {
    v2 = a2;
    objc_msgSend_CKUserDefaults(CKUserDefaults, v3, v4, v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKey_(v6, v7, (uint64_t)v2, v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v9 = 0;
  }
  return v9;
}

void sub_18A765A74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A765B5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

double sub_18A766384(uint64_t a1)
{
  if (a1)
    return sub_18A5C7AC4(a1, CFSTR("PackageGCGracePeriodSeconds"), 259200.0);
  else
    return 0.0;
}

uint64_t sub_18A766C70(uint64_t result)
{
  if (result)
    return sub_18A5C7EC4(result, CFSTR("ForceUploadRequestActivitiesToRunImmediately"), 0);
  return result;
}

_QWORD *sub_18A767450(_QWORD *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], a2, (uint64_t)CFSTR("operationID=%@"), a4, a1[34]);
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
  }
  return a1;
}

void sub_18A7676C8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 344) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 344);
    *(_QWORD *)(v8 + 344) = v7;

  }
}

void sub_18A767854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A76786C(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A767894(uint64_t a1)
{

}

void sub_18A76789C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 344));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7678DC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 352) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 352);
    *(_QWORD *)(v8 + 352) = v7;

  }
}

id sub_18A76792C(void *a1)
{
  _QWORD *v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  id v10;

  if (a1)
  {
    v1 = a1;
    objc_sync_enter(v1);
    v5 = (void *)v1[42];
    if (!v5)
    {
      objc_msgSend_operationID(v1, v2, v3, v4);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v7, (uint64_t)CFSTR("CKErrorDomain"), 20, CFSTR("Operation %@ was cancelled internally by CloudKit"), v6);
      v8 = objc_claimAutoreleasedReturnValue();
      v9 = (void *)v1[42];
      v1[42] = v8;

      v5 = (void *)v1[42];
    }
    v10 = v5;
    objc_sync_exit(v1);

  }
  else
  {
    v10 = 0;
  }
  return v10;
}

void sub_18A7679F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A767D64(uint64_t a1, void *a2)
{
  _xpc_activity_s *v3;
  id WeakRetained;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  xpc_activity_state_t v8;
  _BOOL4 should_defer;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  NSObject *v14;
  objc_class *v15;
  id v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  NSObject *v21;
  _QWORD v22[7];
  BOOL v23;
  os_activity_scope_state_s state;
  uint8_t buf[4];
  id v26;
  __int16 v27;
  void *v28;
  __int16 v29;
  void *v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    state.opaque[0] = 0;
    state.opaque[1] = 0;
    sub_18A5E3B10(WeakRetained);
    v6 = objc_claimAutoreleasedReturnValue();
    os_activity_scope_enter(v6, &state);

    v7 = xpc_activity_copy_identifier();
    v8 = xpc_activity_get_state(v3);
    should_defer = xpc_activity_should_defer(v3);
    v13 = should_defer;
    if (should_defer)
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v14 = (id)ck_log_facility_ck;
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        v15 = (objc_class *)objc_opt_class();
        NSStringFromClass(v15);
        v16 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_ckShortDescription(v5, v17, v18, v19);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v26 = v16;
        v27 = 2048;
        v28 = v5;
        v29 = 2114;
        v30 = v20;
        _os_log_impl(&dword_18A5C5000, v14, OS_LOG_TYPE_INFO, "Should defer xpc_activity for operation <%{public}@: %p; %{public}@>",
          buf,
          0x20u);

      }
    }
    objc_msgSend_callbackQueue(v5, v10, v11, v12);
    v21 = objc_claimAutoreleasedReturnValue();
    v22[0] = MEMORY[0x1E0C809B0];
    v22[1] = 3221225472;
    v22[2] = sub_18A767F90;
    v22[3] = &unk_1E1F642F0;
    v22[4] = v5;
    v22[5] = v8;
    v23 = v13;
    v22[6] = v7;
    dispatch_async(v21, v22);

    os_activity_scope_leave(&state);
  }

}

void sub_18A767F64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_18A767F90(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  const char *v21;
  const char *v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  const char *v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  const char *v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  uint64_t v34;
  const char *v35;
  void *v36;
  const char *v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  const char *v44;
  NSObject *v45;
  objc_class *v46;
  void *v47;
  void *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  int v55;
  const __CFString *v56;
  void *v57;
  const char *v58;
  void *v59;
  uint64_t v60;
  void *v61;
  void *v62;
  const char *v63;
  uint64_t v64;
  uint64_t v65;
  const char *v66;
  const char *v67;
  void *v68;
  const char *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  objc_class *v73;
  void *v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  void *v79;
  uint64_t v80;
  __CFString *v81;
  NSObject *log;
  _QWORD v83[2];
  _QWORD v84[2];
  uint8_t buf[4];
  void *v86;
  __int16 v87;
  void *v88;
  __int16 v89;
  uint64_t v90;
  __int16 v91;
  uint64_t v92;
  __int16 v93;
  const __CFString *v94;
  _QWORD v95[2];
  _QWORD v96[4];

  v96[2] = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend_isCancelled(*(void **)(a1 + 32), a2, a3, a4) & 1) == 0
    && objc_msgSend_isExecuting(*(void **)(a1 + 32), v5, v6, v7))
  {
    objc_msgSend_resolvedConfiguration(*(void **)(a1 + 32), v8, v9, v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend_xpcActivityAutomaticallyDefer(v11, v12, v13, v14);

    objc_msgSend_operationMetric(*(void **)(a1 + 32), v16, v17, v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    CKStringForXPCActivityState(*(_QWORD *)(a1 + 40));
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v19, v21, (uint64_t)v20, (uint64_t)CFSTR("xpcActivity_state"));

    objc_msgSend_numberWithBool_(MEMORY[0x1E0CB37E8], v22, *(unsigned __int8 *)(a1 + 56), v23);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v19, v25, (uint64_t)v24, (uint64_t)CFSTR("xpcActivity_shouldDefer"));

    objc_msgSend_numberWithBool_(MEMORY[0x1E0CB37E8], v26, v15, v27);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v19, v29, (uint64_t)v28, (uint64_t)CFSTR("xpcActivity_autoDefer"));

    v32 = *(_QWORD *)(a1 + 40);
    if (v32 == 4)
    {
      if (!(_DWORD)v15 || !*(_BYTE *)(a1 + 56))
        goto LABEL_19;
      objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v30, (uint64_t)CFSTR("xpc_activity (%s) was deferred."), v31, *(_QWORD *)(a1 + 48));
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      v34 = *MEMORY[0x1E0CB2D50];
      v83[0] = CFSTR("CKErrorDescription");
      v83[1] = v34;
      v84[0] = v33;
      v84[1] = v33;
      objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v35, (uint64_t)v84, (uint64_t)v83, 2);
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x1E0CB35C8], v37, (uint64_t)CFSTR("CKInternalErrorDomain"), 1026, v36);
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_CKClientSuitableError(v38, v39, v40, v41);
      v42 = (void *)objc_claimAutoreleasedReturnValue();

      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v43 = (void *)ck_log_facility_op;
      if (!os_log_type_enabled((os_log_t)ck_log_facility_op, OS_LOG_TYPE_DEFAULT))
      {
LABEL_18:
        objc_msgSend_cancelWithUnderlyingError_message_(*(void **)(a1 + 32), v44, (uint64_t)v42, (uint64_t)v33);

LABEL_19:
        goto LABEL_20;
      }
      v45 = v43;
      v46 = (objc_class *)objc_opt_class();
      NSStringFromClass(v46);
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      v48 = *(void **)(a1 + 32);
      objc_msgSend_ckShortDescription(v48, v49, v50, v51);
      v52 = objc_claimAutoreleasedReturnValue();
      v53 = (void *)v52;
      v54 = *(_QWORD *)(a1 + 48);
      v55 = *(unsigned __int8 *)(a1 + 56);
      *(_DWORD *)buf = 138544386;
      if (v55)
        v56 = CFSTR("true");
      else
        v56 = CFSTR("false");
      v86 = v47;
      v87 = 2048;
      v88 = v48;
      v89 = 2114;
      v90 = v52;
      v91 = 2080;
      v92 = v54;
      v93 = 2114;
      v94 = v56;
      _os_log_impl(&dword_18A5C5000, v45, OS_LOG_TYPE_DEFAULT, "Operation <%{public}@: %p; %{public}@> cancelled because of xpcActivity(%s). Should Defer(%{public}@).",
        buf,
        0x34u);
    }
    else
    {
      CKStringForXPCActivityState(v32);
      v57 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setObject_forKeyedSubscript_(v19, v58, (uint64_t)v57, (uint64_t)CFSTR("xpcActivity_state"));

      v59 = (void *)MEMORY[0x1E0CB3940];
      v60 = *(_QWORD *)(a1 + 48);
      CKStringForXPCActivityState(4uLL);
      v61 = (void *)objc_claimAutoreleasedReturnValue();
      CKStringForXPCActivityState(*(_QWORD *)(a1 + 40));
      v62 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_stringWithFormat_(v59, v63, (uint64_t)CFSTR("xpc_activity (%s) should be in state '%@', but was in state '%@'"), v64, v60, v61, v62);
      v33 = (void *)objc_claimAutoreleasedReturnValue();

      v65 = *MEMORY[0x1E0CB2D50];
      v95[0] = CFSTR("CKErrorDescription");
      v95[1] = v65;
      v96[0] = v33;
      v96[1] = v33;
      objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v66, (uint64_t)v96, (uint64_t)v95, 2);
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x1E0CB35C8], v67, (uint64_t)CFSTR("CKInternalErrorDomain"), 1025, v36);
      v68 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_CKClientSuitableError(v68, v69, v70, v71);
      v42 = (void *)objc_claimAutoreleasedReturnValue();

      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v72 = (void *)ck_log_facility_op;
      if (!os_log_type_enabled((os_log_t)ck_log_facility_op, OS_LOG_TYPE_DEFAULT))
        goto LABEL_18;
      log = v72;
      v73 = (objc_class *)objc_opt_class();
      NSStringFromClass(v73);
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      v74 = *(void **)(a1 + 32);
      objc_msgSend_ckShortDescription(v74, v75, v76, v77);
      v53 = (void *)objc_claimAutoreleasedReturnValue();
      v78 = v42;
      v79 = v36;
      v80 = *(_QWORD *)(a1 + 48);
      CKStringForXPCActivityState(*(_QWORD *)(a1 + 40));
      v81 = (__CFString *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138544386;
      v86 = v47;
      v87 = 2048;
      v88 = v74;
      v89 = 2114;
      v90 = (uint64_t)v53;
      v91 = 2080;
      v92 = v80;
      v36 = v79;
      v42 = v78;
      v93 = 2114;
      v94 = v81;
      v45 = log;
      _os_log_impl(&dword_18A5C5000, log, OS_LOG_TYPE_DEFAULT, "Operation <%{public}@: %p; %{public}@> cancelled because of xpcActivity(%s). State(%{public}@).",
        buf,
        0x34u);

    }
    goto LABEL_18;
  }
LABEL_20:
  free(*(void **)(a1 + 48));
}

void sub_18A7684AC(uint64_t a1, void *a2)
{
  if (a1)
    objc_storeStrong((id *)(a1 + 408), a2);
}

void sub_18A76885C(uint64_t a1)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  const char *v10;
  _QWORD aBlock[5];

  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = sub_18A76891C;
  aBlock[3] = &unk_1E1F5FAA8;
  aBlock[4] = *(_QWORD *)(a1 + 32);
  v2 = _Block_copy(aBlock);
  v6 = v2;
  if (__sTestOverridesAvailable)
  {
    objc_msgSend_invokePlaceholderOperationFinishedCallback(*(void **)(a1 + 32), v3, v4, v5);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setPlaceholderOperationFinishedCallback_(*(void **)(a1 + 32), v8, 0, v9);
    objc_msgSend_takeActionOnOperation_proceedBlock_(v7, v10, *(_QWORD *)(a1 + 32), (uint64_t)v6);

  }
  else
  {
    (*((void (**)(void *))v2 + 2))(v2);
  }

}

void sub_18A76891C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  void *v6;

  objc_msgSend__finishDiscretionaryOperation(*(void **)(a1 + 32), a2, a3, a4);
  v6 = *(void **)(a1 + 32);
  if (v6)
    objc_setProperty_atomic(v6, v5, 0, 448);
}

void sub_18A768960(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  id v8;
  _QWORD v9[5];
  id v10;

  v3 = a2;
  objc_msgSend_callbackQueue(*(void **)(a1 + 32), v4, v5, v6);
  v7 = objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = sub_18A7689FC;
  v9[3] = &unk_1E1F61A48;
  v9[4] = *(_QWORD *)(a1 + 32);
  v10 = v3;
  v8 = v3;
  dispatch_async(v7, v9);

}

uint64_t sub_18A7689FC(uint64_t a1)
{
  return MEMORY[0x1E0DE7D20](*(_QWORD *)(a1 + 32), sel_handleDiscretionaryOperationShouldStart_nonDiscretionary_error_, 0, 0);
}

id sub_18A768A10(void *a1, void *a2)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void (**v6)(id, void *);
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void (**v16)(id, void *);
  void *v17;
  const char *v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const char *v50;
  NSObject *v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  NSObject *v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  const char *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void (**v78)(id, void *);
  _QWORD aBlock[4];
  void (**v80)(id, void *);
  uint8_t buf[4];
  void *v82;
  __int16 v83;
  void *v84;
  uint64_t v85;

  v85 = *MEMORY[0x1E0C80C00];
  v6 = a2;
  if (!a1)
  {
    v23 = 0;
    goto LABEL_19;
  }
  objc_msgSend_configuration(a1, v3, v4, v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_container(v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_discretionaryXPCConnection(v11, v12, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v15)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v37 = (void *)ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
    {
      v52 = v37;
      objc_msgSend_operationID(a1, v53, v54, v55);
      v56 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_configuration(a1, v57, v58, v59);
      v60 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_container(v60, v61, v62, v63);
      v64 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v82 = v56;
      v83 = 2112;
      v84 = v64;
      _os_log_error_impl(&dword_18A5C5000, v52, OS_LOG_TYPE_ERROR, "Couldn't get a discretionary connection for operation %{public}@ and container %@", buf, 0x16u);

    }
    objc_msgSend_operationID(a1, v38, v39, v40);
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_configuration(a1, v42, v43, v44);
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_container(v45, v46, v47, v48);
    v49 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v50, (uint64_t)CFSTR("CKInternalErrorDomain"), 2005, CFSTR("Couldn't get a discretionary connection for operation %@ and container %@"), v41, v49);
    v36 = (void *)objc_claimAutoreleasedReturnValue();

    if (v6)
      v6[2](v6, v36);
    v23 = 0;
    goto LABEL_18;
  }
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = sub_18A76A248;
  aBlock[3] = &unk_1E1F60910;
  v16 = v6;
  v80 = v16;
  v17 = _Block_copy(aBlock);
  objc_msgSend_remoteObjectProxyWithErrorHandler_(v15, v18, (uint64_t)v17, v19);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v23)
  {
    v78 = v6;
    objc_msgSend_operationID(a1, v20, v21, v22);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_configuration(a1, v25, v26, v27);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_container(v28, v29, v30, v31);
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v33, (uint64_t)CFSTR("CKInternalErrorDomain"), 2005, CFSTR("Couldn't get a discretionary connection for operation %@ and container %@"), v24, v32);
    v34 = (void *)objc_claimAutoreleasedReturnValue();

    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v35 = (void *)ck_log_facility_ck;
    v6 = v78;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
    {
      v65 = v35;
      objc_msgSend_operationID(a1, v66, v67, v68);
      v69 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_configuration(a1, v70, v71, v72);
      v73 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_container(v73, v74, v75, v76);
      v77 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v82 = v69;
      v83 = 2112;
      v84 = v77;
      _os_log_error_impl(&dword_18A5C5000, v65, OS_LOG_TYPE_ERROR, "Couldn't get a discretionary connection for operation %{public}@ and container %@", buf, 0x16u);

      if (!v16)
        goto LABEL_9;
    }
    else if (!v16)
    {
LABEL_9:

      goto LABEL_10;
    }
    v16[2](v16, v34);
    goto LABEL_9;
  }
LABEL_10:

  v36 = v80;
LABEL_18:

LABEL_19:
  return v23;
}

void sub_18A768E04()
{
  NSObject *v0;
  uint8_t v1[16];

  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v0 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v1 = 0;
    _os_log_debug_impl(&dword_18A5C5000, v0, OS_LOG_TYPE_DEBUG, "Queuing discretionary operation finished scheduling phase.", v1, 2u);
  }
}

void sub_18A768E9C(uint64_t a1)
{
  id WeakRetained;
  id v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  dispatch_block_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  void *v17;
  id v18;
  id v19;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v14 = MEMORY[0x1E0C809B0];
    v15 = 3221225472;
    v16 = sub_18A768F9C;
    v17 = &unk_1E1F61C78;
    v3 = *(id *)(a1 + 32);
    v18 = WeakRetained;
    v19 = v3;
    v4 = _Block_copy(&v14);
    v11 = __ROR8__(objc_msgSend_qualityOfService(WeakRetained, v5, v6, v7, v14, v15, v16, v17) - 9, 3);
    if (v11 <= 3)
    {
      v12 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, (dispatch_qos_class_t)(8 * v11 + 9), 0, v4);

      v4 = v12;
    }
    objc_msgSend_callbackQueue(WeakRetained, v8, v9, v10);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    ck_call_or_dispatch_async_if_not_key(v13, kCKOperationCallbackQueueName, v4);

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }

}

void sub_18A768F9C(uint64_t a1)
{
  const char *v2;
  id Property;

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  Property = *(id *)(a1 + 32);
  if (Property)
    Property = objc_getProperty(Property, v2, 448, 1);
  sub_18A5FAFC0(Property);
}

void sub_18A769410(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  NSObject *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  os_activity_scope_state_s v11;

  objc_msgSend__adoptPersonaIfNecessary(*(void **)(a1 + 32), a2, a3, a4);
  v11.opaque[0] = 0;
  v11.opaque[1] = 0;
  sub_18A5E3B10(*(id *)(a1 + 32));
  v5 = objc_claimAutoreleasedReturnValue();
  os_activity_scope_enter(v5, &v11);

  v9 = *(_QWORD *)(a1 + 32);
  if (v9)
  {
    if (!*(_BYTE *)(v9 + 276)
      || *(_BYTE *)(v9 + 277)
      || (objc_msgSend__finishDiscretionaryOperation(*(void **)(a1 + 32), v6, v7, v8, v11.opaque[0], v11.opaque[1]),
          (v9 = *(_QWORD *)(a1 + 32)) != 0))
    {
      if (*(_DWORD *)(v9 + 288))
      {
        objc_msgSend__cancelDaemonOperation((void *)v9, v6, v7, v8);
        v9 = *(_QWORD *)(a1 + 32);
      }
    }
  }
  sub_18A76792C((void *)v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A5CA978((_BYTE *)v9, v10);

  os_activity_scope_leave(&v11);
}

void sub_18A7694D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void sub_18A769590(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  NSObject *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  int v19;
  void *v20;
  __int16 v21;
  void *v22;
  __int16 v23;
  id v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v4 = (void *)ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
  {
    v5 = *(void **)(a1 + 32);
    v6 = v4;
    objc_msgSend_operationID(v5, v7, v8, v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_configuration(*(void **)(a1 + 32), v11, v12, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_container(v14, v15, v16, v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = 138543874;
    v20 = v10;
    v21 = 2112;
    v22 = v18;
    v23 = 2112;
    v24 = v3;
    _os_log_error_impl(&dword_18A5C5000, v6, OS_LOG_TYPE_ERROR, "Couldn't get a connection in order to cancel operation %{public}@ on container %@: %@", (uint8_t *)&v19, 0x20u);

  }
}

void sub_18A7696DC(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  _QWORD v10[5];

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend_operationID(v3, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = sub_18A769770;
  v10[3] = &unk_1E1F5FAA8;
  v10[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend_cancelOperationWithIdentifier_completionHandler_(v4, v9, (uint64_t)v8, (uint64_t)v10);

}

void sub_18A769770(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  const char *v7;
  id v8;

  if (__sTestOverridesAvailable)
  {
    objc_msgSend_invokeDaemonOperationDidCancelCallback(*(void **)(a1 + 32), a2, a3, a4);
    v8 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setDaemonOperationDidCancelCallback_(*(void **)(a1 + 32), v5, 0, v6);
    objc_msgSend_takeActionOnOperation_proceedBlock_(v8, v7, *(_QWORD *)(a1 + 32), (uint64_t)&unk_1E1F64360);

  }
}

void sub_18A7697EC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  NSObject *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  int v11;
  void *v12;
  __int16 v13;
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v4 = (void *)ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
  {
    v5 = *(void **)(a1 + 32);
    v6 = v4;
    objc_msgSend_operationID(v5, v7, v8, v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = 138412546;
    v12 = v10;
    v13 = 2112;
    v14 = v3;
    _os_log_debug_impl(&dword_18A5C5000, v6, OS_LOG_TYPE_DEBUG, "Error finishing discretionary operation %@: %@", (uint8_t *)&v11, 0x16u);

  }
}

void sub_18A769A78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_18A769A98(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  NSObject *v8;
  objc_class *v9;
  void *v10;
  const char *v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  void *v47;
  __int16 v48;
  void *v49;
  __int16 v50;
  void *v51;
  __int16 v52;
  void *v53;
  __int16 v54;
  void *v55;
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v6 = WeakRetained;
  if (WeakRetained)
  {
    if ((objc_msgSend_isFinished(WeakRetained, v3, v4, v5) & 1) == 0)
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v7 = (void *)ck_log_facility_ck;
      if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
      {
        v8 = v7;
        v9 = (objc_class *)objc_opt_class();
        NSStringFromClass(v9);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_CKDescriptionPropertiesWithPublic_private_shouldExpand_(v6, v11, 1, 0, 0);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_CKPropertiesStyleString(v12, v13, v14, v15);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_CKDescriptionPropertiesWithPublic_private_shouldExpand_(v6, v17, 0, 1, 0);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_CKPropertiesStyleString(v18, v19, v20, v21);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        CKDescriptionForTimeInterval(*(double *)(a1 + 40));
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        v46 = 138544386;
        v47 = v10;
        v48 = 2048;
        v49 = v6;
        v50 = 2114;
        v51 = v16;
        v52 = 2112;
        v53 = v22;
        v54 = 2112;
        v55 = v23;
        _os_log_impl(&dword_18A5C5000, v8, OS_LOG_TYPE_INFO, "Warn: ======================= Operation <%{public}@: %p; %{public}@, %@> has been running for %@.",
          (uint8_t *)&v46,
          0x34u);

        if (ck_log_initialization_predicate != -1)
          dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      }
      v24 = (void *)ck_log_facility_ck;
      if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
      {
        v28 = v24;
        objc_msgSend_configuration(v6, v29, v30, v31);
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_container(v32, v33, v34, v35);
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        sub_18A7011F8(v36);
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        v46 = 138412290;
        v47 = v37;
        _os_log_impl(&dword_18A5C5000, v28, OS_LOG_TYPE_INFO, "Timeout status report: %@", (uint8_t *)&v46, 0xCu);

      }
      objc_msgSend_configuration(v6, v25, v26, v27);
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_container(v38, v39, v40, v41);
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_dumpDaemonStatusReport(v42, v43, v44, v45);

    }
    sub_18A5FD144(v6);
  }

}

BOOL sub_18A76A184(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  char isLongLived;
  uint64_t v14;

  if ((objc_msgSend_isOutstandingOperation(*(void **)(a1 + 32), a2, a3, a4) & 1) != 0)
    return 0;
  objc_msgSend_configuration(*(void **)(a1 + 32), v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  isLongLived = objc_msgSend_isLongLived(v8, v9, v10, v11);

  if ((isLongLived & 1) != 0)
    return 0;
  v14 = *(_QWORD *)(a1 + 32);
  return !v14 || *(_DWORD *)(v14 + 288) == 0;
}

void sub_18A76A200(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  const char *v4;
  uint64_t v5;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend__handleRemoteProxyFailureWithError_(WeakRetained, v4, (uint64_t)v3, v5);

}

void sub_18A76A248(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  int v6;
  id v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v4 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
  {
    v6 = 138412290;
    v7 = v3;
    _os_log_error_impl(&dword_18A5C5000, v4, OS_LOG_TYPE_ERROR, "Error connecting to CloudKit Discretionary daemon: %@", (uint8_t *)&v6, 0xCu);
  }
  v5 = *(_QWORD *)(a1 + 32);
  if (v5)
    (*(void (**)(uint64_t, id))(v5 + 16))(v5, v3);

}

uint64_t sub_18A76B2B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_18A76B4DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_18A76B660(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  NSObject *v5;
  uint64_t v6;
  _BYTE *v7;
  os_activity_scope_state_s v8;

  objc_msgSend__adoptPersonaIfNecessary(*(void **)(a1 + 32), a2, a3, a4);
  v8.opaque[0] = 0;
  v8.opaque[1] = 0;
  sub_18A5E3B10(*(id *)(a1 + 32));
  v5 = objc_claimAutoreleasedReturnValue();
  os_activity_scope_enter(v5, &v8);

  v6 = *(_QWORD *)(a1 + 32);
  if (v6)
  {
    *(_BYTE *)(v6 + 282) = 1;
    v7 = *(_BYTE **)(a1 + 32);
  }
  else
  {
    v7 = 0;
  }
  sub_18A5CA978(v7, *(void **)(a1 + 40));
  os_activity_scope_leave(&v8);
}

void sub_18A76B6E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void sub_18A76B78C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  NSObject *v5;
  os_activity_scope_state_s v6;

  objc_msgSend__adoptPersonaIfNecessary(*(void **)(a1 + 32), a2, a3, a4);
  v6.opaque[0] = 0;
  v6.opaque[1] = 0;
  sub_18A5E3B10(*(id *)(a1 + 32));
  v5 = objc_claimAutoreleasedReturnValue();
  os_activity_scope_enter(v5, &v6);

  sub_18A5CA978(*(_BYTE **)(a1 + 32), *(void **)(a1 + 40));
  os_activity_scope_leave(&v6);
}

void sub_18A76B7E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

uint64_t CloudKit_Is_Slowing_Failing_Operations_Due_To_High_Error_Rate(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_sleepForTimeInterval_(MEMORY[0x1E0CB3978], a2, a3, a4);
}

void sub_18A76BF34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_18A76C168(uint64_t a1)
{
  id WeakRetained;
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t result;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend__handleBGSystemTaskExpiration_(WeakRetained, v4, (uint64_t)v3, v5);

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_18A76C450(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

uint64_t sub_18A76C88C(uint64_t result)
{
  if (result)
    return *(_QWORD *)(result + 496);
  return result;
}

void sub_18A76C8A0(uint64_t a1, void *a2)
{
  if (a1)
    objc_storeStrong((id *)(a1 + 496), a2);
}

void sub_18A76D210(uint64_t a1)
{
  void *v2;

  v2 = (void *)MEMORY[0x18D76DE4C]();
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  objc_autoreleasePoolPop(v2);
}

uint64_t sub_18A76DF60(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t isEqualToString;

  objc_msgSend_name(a2, (const char *)a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v5, v6, *(_QWORD *)(a1 + 32), v7);

  return isEqualToString;
}

void sub_18A76E5D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

uint64_t sub_18A76E5EC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const char *v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  void *v30;
  NSObject *v31;
  void *v32;
  void *v33;
  const char *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t v39[16];

  if (objc_msgSend_count(*(void **)(a1 + 32), a2, a3, a4))
  {
    v8 = 0;
    do
    {
      objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v5, v8, v7);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 40), v10, v8, v11);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = *(_QWORD *)(a1 + 48);
      if (v16)
        objc_msgSend_operations(*(void **)(v16 + 104), v12, v13, v14);
      else
        objc_msgSend_operations(0, v12, v13, v14);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_firstObject(v17, v18, v19, v20);
      v21 = (void *)objc_claimAutoreleasedReturnValue();

      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        objc_msgSend_includedMetadata(v21, v22, v23, v24);
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_msgSend_containsObject_(v25, v26, (uint64_t)v9, v27) & 1) != 0)
        {
          objc_msgSend_objectForKeyedSubscript_(*(void **)(*(_QWORD *)(a1 + 48) + 8), v28, (uint64_t)v9, v29);
          v30 = (void *)objc_claimAutoreleasedReturnValue();

          if (v30 != v15)
          {
            if (ck_log_initialization_predicate != -1)
              dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
            v31 = ck_log_facility_data_repair;
            if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
            {
              *(_WORD *)v39 = 0;
              _os_log_debug_impl(&dword_18A5C5000, v31, OS_LOG_TYPE_DEBUG, "Attempted to change upload request callback while operation was already running", v39, 2u);
            }
          }
        }
        else
        {

        }
      }
      v32 = _Block_copy(v15);
      sub_18A76E7CC(*(dispatch_queue_t **)(a1 + 48));
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setObject_forKeyedSubscript_(v33, v34, (uint64_t)v32, (uint64_t)v9);

      ++v8;
    }
    while (v8 < objc_msgSend_count(*(void **)(a1 + 32), v35, v36, v37));
  }
  return objc_msgSend_tickle(*(void **)(a1 + 48), v5, v6, v7);
}

dispatch_queue_t *sub_18A76E7CC(dispatch_queue_t *a1)
{
  dispatch_queue_t *v1;

  if (a1)
  {
    v1 = a1;
    dispatch_assert_queue_V2(a1[10]);
    a1 = v1[1];
  }
  return a1;
}

void sub_18A76E8EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_18A76E900(uint64_t a1)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  int isEqual;
  NSObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  int v23;
  NSObject *v24;
  void *v25;
  const char *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  int v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t j;
  void *v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const char *v56;
  uint64_t v57;
  int v58;
  void *v59;
  const char *v60;
  uint64_t v61;
  int v62;
  const char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  const char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t k;
  void *v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  const char *v78;
  uint64_t v79;
  uint64_t v80;
  const char *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  const char *v85;
  uint64_t v86;
  int v87;
  NSObject *v88;
  const char *v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  NSObject *v93;
  const char *v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  id obj;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  _BYTE v111[128];
  uint8_t v112[128];
  uint8_t buf[4];
  void *v114;
  _BYTE v115[128];
  uint64_t v116;

  v116 = *MEMORY[0x1E0C80C00];
  v107 = 0u;
  v108 = 0u;
  v109 = 0u;
  v110 = 0u;
  sub_18A76EF5C(*(dispatch_queue_t **)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v3, (uint64_t)&v107, (uint64_t)v115, 16);
  if (!v4)
    goto LABEL_65;
  v8 = v4;
  v9 = *(_QWORD *)v108;
  while (2)
  {
    for (i = 0; i != v8; ++i)
    {
      if (*(_QWORD *)v108 != v9)
        objc_enumerationMutation(v2);
      v11 = *(void **)(*((_QWORD *)&v107 + 1) + 8 * i);
      objc_msgSend_repairZoneRecordID(v11, v5, v6, v7);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      isEqual = objc_msgSend_isEqual_(v12, v13, *(_QWORD *)(a1 + 40), v14);

      if (isEqual)
      {
        if (ck_log_initialization_predicate != -1)
          dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
        v16 = ck_log_facility_data_repair;
        if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          v114 = v11;
          _os_log_debug_impl(&dword_18A5C5000, v16, OS_LOG_TYPE_DEBUG, "Attempting to cancel repairs for: %@", buf, 0xCu);
        }
        objc_msgSend_allRemainingRequestableAssets(*(void **)(a1 + 32), v17, v18, v19);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v23 = objc_msgSend_containsObject_(v20, v21, (uint64_t)v11, v22);

        if (v23)
        {
          if (ck_log_initialization_predicate != -1)
            dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
          v24 = ck_log_facility_data_repair;
          if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)buf = 0;
            _os_log_debug_impl(&dword_18A5C5000, v24, OS_LOG_TYPE_DEBUG, "Operation not yet started, cancelling", buf, 2u);
          }
          sub_18A76E7CC(*(dispatch_queue_t **)(a1 + 32));
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKeyedSubscript_(v25, v26, 0, (uint64_t)v11);

          v29 = *(_QWORD *)(a1 + 32);
          if (v29)
            objc_msgSend_removeObjectForKey_(*(void **)(v29 + 128), v27, (uint64_t)v11, v28);
          else
            objc_msgSend_removeObjectForKey_(0, v27, (uint64_t)v11, v28);
          goto LABEL_65;
        }
        sub_18A76EFC8(*(dispatch_queue_t **)(a1 + 32));
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        v33 = objc_msgSend_containsObject_(v30, v31, (uint64_t)v11, v32);

        if (v33)
        {
          v105 = 0u;
          v106 = 0u;
          v103 = 0u;
          v104 = 0u;
          v37 = *(_QWORD *)(a1 + 32);
          if (v37)
            objc_msgSend_operations(*(void **)(v37 + 96), v34, v35, v36, v2);
          else
            objc_msgSend_operations(0, v34, v35, v36, v2);
          obj = (id)objc_claimAutoreleasedReturnValue();
          v39 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v38, (uint64_t)&v103, (uint64_t)v112, 16);
          if (v39)
          {
            v40 = v39;
            v41 = *(_QWORD *)v104;
            while (2)
            {
              for (j = 0; j != v40; ++j)
              {
                if (*(_QWORD *)v104 != v41)
                  objc_enumerationMutation(obj);
                v43 = *(void **)(*((_QWORD *)&v103 + 1) + 8 * j);
                objc_opt_class();
                if ((objc_opt_isKindOfClass() & 1) != 0)
                {
                  objc_msgSend_metadata(v43, v44, v45, v46);
                  v47 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend_repairZoneRecordID(v47, v48, v49, v50);
                  v51 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend_repairZoneRecordID(v11, v52, v53, v54);
                  v55 = (void *)objc_claimAutoreleasedReturnValue();
                  v58 = objc_msgSend_isEqual_(v51, v56, (uint64_t)v55, v57);

                  if (v58)
                  {
                    if (ck_log_initialization_predicate != -1)
                      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
                    v2 = v97;
                    v88 = ck_log_facility_data_repair;
                    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
                    {
                      *(_WORD *)buf = 0;
                      _os_log_debug_impl(&dword_18A5C5000, v88, OS_LOG_TYPE_DEBUG, "Found operation in request queue, cancelling", buf, 2u);
                    }
                    objc_msgSend_cancel(v43, v89, v90, v91);

                    goto LABEL_65;
                  }
                }
              }
              v40 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v44, (uint64_t)&v103, (uint64_t)v112, 16);
              if (v40)
                continue;
              break;
            }
          }

        }
        else
        {
          sub_18A76EFF8(*(dispatch_queue_t **)(a1 + 32));
          v59 = (void *)objc_claimAutoreleasedReturnValue();
          v62 = objc_msgSend_containsObject_(v59, v60, (uint64_t)v11, v61);

          if (!v62)
          {
            if (ck_log_initialization_predicate != -1)
              dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
            v92 = ck_log_facility_data_repair;
            if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
            {
              *(_WORD *)buf = 0;
              _os_log_error_impl(&dword_18A5C5000, v92, OS_LOG_TYPE_ERROR, "Could not find operation for cancellation", buf, 2u);
            }
            goto LABEL_65;
          }
          v101 = 0u;
          v102 = 0u;
          v99 = 0u;
          v100 = 0u;
          v66 = *(_QWORD *)(a1 + 32);
          if (v66)
            objc_msgSend_operations(*(void **)(v66 + 104), v63, v64, v65, v2);
          else
            objc_msgSend_operations(0, v63, v64, v65, v2);
          v67 = (void *)objc_claimAutoreleasedReturnValue();
          v69 = objc_msgSend_countByEnumeratingWithState_objects_count_(v67, v68, (uint64_t)&v99, (uint64_t)v111, 16);
          if (v69)
          {
            v70 = v69;
            v71 = *(_QWORD *)v100;
            while (2)
            {
              for (k = 0; k != v70; ++k)
              {
                if (*(_QWORD *)v100 != v71)
                  objc_enumerationMutation(v67);
                v73 = *(void **)(*((_QWORD *)&v99 + 1) + 8 * k);
                objc_opt_class();
                if ((objc_opt_isKindOfClass() & 1) != 0)
                {
                  objc_msgSend_includedMetadata(v73, v74, v75, v76);
                  v77 = (void *)objc_claimAutoreleasedReturnValue();
                  if (objc_msgSend_count(v77, v78, v79, v80) == 1)
                  {
                    objc_msgSend_includedMetadata(v73, v81, v82, v83);
                    v84 = (void *)objc_claimAutoreleasedReturnValue();
                    v87 = objc_msgSend_containsObject_(v84, v85, (uint64_t)v11, v86);

                    if (v87)
                    {
                      if (ck_log_initialization_predicate != -1)
                        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
                      v2 = v97;
                      v93 = ck_log_facility_data_repair;
                      if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
                      {
                        *(_WORD *)buf = 0;
                        _os_log_debug_impl(&dword_18A5C5000, v93, OS_LOG_TYPE_DEBUG, "Found operation in upload queue, cancelling", buf, 2u);
                      }
                      objc_msgSend_cancel(v73, v94, v95, v96);

                      goto LABEL_65;
                    }
                  }
                  else
                  {

                  }
                }
              }
              v70 = objc_msgSend_countByEnumeratingWithState_objects_count_(v67, v74, (uint64_t)&v99, (uint64_t)v111, 16);
              if (v70)
                continue;
              break;
            }
          }

        }
        v2 = v97;
        goto LABEL_65;
      }
    }
    v8 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v5, (uint64_t)&v107, (uint64_t)v115, 16);
    if (v8)
      continue;
    break;
  }
LABEL_65:

}

id sub_18A76EF5C(dispatch_queue_t *a1)
{
  void *v1;
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  void *v9;

  if (a1)
  {
    v1 = (void *)MEMORY[0x1E0C99E60];
    sub_18A76E7CC(a1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_allKeys(v2, v3, v4, v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setWithArray_(v1, v7, (uint64_t)v6, v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v9 = 0;
  }
  return v9;
}

dispatch_queue_t *sub_18A76EFC8(dispatch_queue_t *a1)
{
  dispatch_queue_t *v1;

  if (a1)
  {
    v1 = a1;
    dispatch_assert_queue_V2(a1[10]);
    a1 = v1[4];
  }
  return a1;
}

dispatch_queue_t *sub_18A76EFF8(dispatch_queue_t *a1)
{
  dispatch_queue_t *v1;

  if (a1)
  {
    v1 = a1;
    dispatch_assert_queue_V2(a1[10]);
    a1 = v1[5];
  }
  return a1;
}

dispatch_queue_t *sub_18A76F028(dispatch_queue_t *a1)
{
  dispatch_queue_t *v1;

  if (a1)
  {
    v1 = a1;
    dispatch_assert_queue_V2(a1[10]);
    a1 = v1[2];
  }
  return a1;
}

id sub_18A76F058(dispatch_queue_t *a1)
{
  void *v1;
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  void *v9;

  if (a1)
  {
    v1 = (void *)MEMORY[0x1E0C99E60];
    sub_18A76F028(a1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_allKeys(v2, v3, v4, v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setWithArray_(v1, v7, (uint64_t)v6, v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v9 = 0;
  }
  return v9;
}

dispatch_queue_t *sub_18A76F0C4(dispatch_queue_t *a1)
{
  dispatch_queue_t *v1;

  if (a1)
  {
    v1 = a1;
    dispatch_assert_queue_V2(a1[10]);
    a1 = v1[3];
  }
  return a1;
}

void sub_18A76F100(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  _QWORD v8[5];
  id v9;
  uint64_t v10;

  v5 = a3;
  v6 = v5;
  if (a1)
  {
    v7 = *(void **)(a1 + 80);
    v8[0] = MEMORY[0x1E0C809B0];
    v8[1] = 3221225472;
    v8[2] = sub_18A76F1A4;
    v8[3] = &unk_1E1F63250;
    v8[4] = a1;
    v10 = a2;
    v9 = v5;
    ck_call_or_dispatch_sync_if_not_key(v7, (const void *)(a1 + 80), v8);

  }
}

void sub_18A76F1A4(uint64_t a1)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  dispatch_source_t *v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  void *v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  NSObject *v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  dispatch_time_t v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  id v51;
  const char *v52;
  uint64_t v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  const char *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  const char *v62;
  uint64_t v63;
  void *v64;
  const char *v65;
  uint64_t v66;
  uint64_t v67;
  const char *v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  double v72;
  double v73;
  uint64_t v74;
  NSObject *v75;
  NSObject *v76;
  dispatch_time_t v77;
  NSObject *v78;
  uint64_t v79;
  const char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  const char *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  const char *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  const char *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  const char *v97;
  uint64_t v98;
  uint64_t v99;
  const char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  const char *v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  dispatch_queue_t *v114;
  void *v115;
  const char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  const char *v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  const char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  const char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  const char *v132;
  uint64_t v133;
  uint64_t v134;
  const char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  NSObject *v142;
  id v143;
  uint64_t v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  NSObject *v149;
  id WeakRetained;
  id v151;
  NSObject *v152;
  void *v153;
  const char *v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  const __CFString *v158;
  const __CFString *v159;
  BOOL v160;
  const __CFString *v161;
  NSObject *v162;
  void *v163;
  const char *v164;
  uint64_t v165;
  uint64_t v166;
  const char *v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  BOOL v171;
  NSObject *v172;
  uint64_t v173;
  NSObject *v174;
  _QWORD block[5];
  _QWORD v176[4];
  id v177;
  _QWORD handler[4];
  id v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  os_activity_scope_state_s from;
  uint64_t v185;
  uint64_t v186;
  _BYTE v187[128];
  _BYTE location[24];
  const __CFString *v189;
  __int128 v190;
  uint64_t v191;

  v191 = *MEMORY[0x1E0C80C00];
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v2 = (void *)ck_log_facility_data_repair;
  if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
  {
    v152 = v2;
    v153 = (void *)objc_opt_class();
    objc_msgSend_nameForEvent_(v153, v154, *(_QWORD *)(a1 + 48), v155);
    v156 = objc_claimAutoreleasedReturnValue();
    v157 = (void *)v156;
    v158 = *(const __CFString **)(a1 + 40);
    v159 = CFSTR("with object ");
    v160 = v158 == 0;
    if (!v158)
    {
      v159 = &stru_1E1F66ED0;
      v158 = &stru_1E1F66ED0;
    }
    *(_DWORD *)location = 138544130;
    *(_QWORD *)&location[4] = v156;
    *(_WORD *)&location[12] = 2114;
    *(_QWORD *)&location[14] = v159;
    if (v160)
      v161 = &stru_1E1F66ED0;
    else
      v161 = CFSTR(" ");
    *(_WORD *)&location[22] = 2112;
    v189 = v158;
    LOWORD(v190) = 2112;
    *(_QWORD *)((char *)&v190 + 2) = v161;
    _os_log_debug_impl(&dword_18A5C5000, v152, OS_LOG_TYPE_DEBUG, "Received %{public}@ event %{public}@%@%@in repair scheduler", location, 0x2Au);

  }
  switch(*(_QWORD *)(a1 + 48))
  {
    case 0:
      goto LABEL_50;
    case 1:
      v6 = *(dispatch_source_t **)(a1 + 32);
      if (v6 && v6[14])
      {
        dispatch_source_cancel(v6[14]);
        sub_18A76FDBC(*(_QWORD *)(a1 + 32), 0);
        v6 = *(dispatch_source_t **)(a1 + 32);
      }
      objc_msgSend_allRemainingUploadableAssets(v6, v3, v4, v5);
      v182 = 0u;
      v183 = 0u;
      v181 = 0u;
      v180 = 0u;
      v7 = (id)objc_claimAutoreleasedReturnValue();
      v9 = 0;
      v10 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v8, (uint64_t)&v180, (uint64_t)v187, 16);
      if (v10)
      {
        v11 = *(_QWORD *)v181;
        do
        {
          for (i = 0; i != v10; ++i)
          {
            if (*(_QWORD *)v181 != v11)
              objc_enumerationMutation(v7);
            v13 = *(_QWORD *)(*((_QWORD *)&v180 + 1) + 8 * i);
            v14 = (void *)objc_opt_class();
            sub_18A76F028(*(dispatch_queue_t **)(a1 + 32));
            v15 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_objectForKeyedSubscript_(v15, v16, v13, v17);
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            v21 = objc_msgSend_estimatedSizeForAssetOrPackage_(v14, v19, (uint64_t)v18, v20);

            v9 += v21;
          }
          v10 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v22, (uint64_t)&v180, (uint64_t)v187, 16);
        }
        while (v10);
      }

      sub_18A76EFC8(*(dispatch_queue_t **)(a1 + 32));
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend_count(v23, v24, v25, v26))
      {
        v27 = *(_QWORD **)(a1 + 32);
        if (v27)
          v27 = (_QWORD *)v27[13];
        v28 = v27;
        if (objc_msgSend_operationCount(v28, v29, v30, v31)
          || (v35 = objc_msgSend_count(v7, v32, v33, v34),
              v35 >= objc_msgSend_repairBatchCountLimit(*(void **)(a1 + 32), v36, v37, v38)))
        {

        }
        else
        {
          objc_opt_self();

          if (v9 < 104857600)
          {
            objc_initWeak((id *)location, *(id *)(a1 + 32));
            v39 = *(_QWORD *)(a1 + 32);
            if (v39)
              v40 = *(NSObject **)(v39 + 80);
            else
              v40 = 0;
            v41 = dispatch_source_create(MEMORY[0x1E0C80DD0], 0, 0, v40);
            objc_msgSend_requestTimeout(*(void **)(a1 + 32), v42, v43, v44);
            v46 = dispatch_time(0, (uint64_t)(v45 * 1000000000.0));
            objc_msgSend_requestTimeout(*(void **)(a1 + 32), v47, v48, v49);
            dispatch_source_set_timer(v41, v46, (unint64_t)(v50 * 1000000000.0), 0x3B9ACA00uLL);
            handler[0] = MEMORY[0x1E0C809B0];
            handler[1] = 3221225472;
            handler[2] = sub_18A76FDCC;
            handler[3] = &unk_1E1F608C8;
            objc_copyWeak(&v179, (id *)location);
            dispatch_source_set_event_handler(v41, handler);
            dispatch_resume(v41);
            sub_18A76FDBC(*(_QWORD *)(a1 + 32), v41);
            objc_destroyWeak(&v179);

            objc_destroyWeak((id *)location);
          }
        }
      }
      else
      {

      }
LABEL_50:
      v108 = *(_QWORD *)(a1 + 32);
      if (!v108)
        goto LABEL_93;
      from.opaque[0] = 0;
      from.opaque[1] = (uint64_t)&from;
      v185 = 0x2020000000;
      v186 = 0;
      v109 = *(id *)(v108 + 80);
      v110 = MEMORY[0x1E0C809B0];
      *(_QWORD *)location = MEMORY[0x1E0C809B0];
      *(_QWORD *)&location[8] = 3221225472;
      *(_QWORD *)&location[16] = sub_18A773248;
      v189 = (const __CFString *)&unk_1E1F64580;
      *(_QWORD *)&v190 = v108;
      *((_QWORD *)&v190 + 1) = &from;
      ck_call_or_dispatch_sync_if_not_key(v109, (const void *)(v108 + 80), location);

      v108 = *(_QWORD *)(from.opaque[1] + 24);
      _Block_object_dispose(&from, 8);
      v111 = *(_QWORD *)(a1 + 32);
      if (v111)
      {
        from.opaque[0] = 0;
        from.opaque[1] = (uint64_t)&from;
        v185 = 0x2020000000;
        v186 = 0;
        v112 = *(id *)(v111 + 80);
        *(_QWORD *)location = v110;
        *(_QWORD *)&location[8] = 3221225472;
        *(_QWORD *)&location[16] = sub_18A773388;
        v189 = (const __CFString *)&unk_1E1F5F758;
        *(_QWORD *)&v190 = v111;
        *((_QWORD *)&v190 + 1) = &from;
        ck_call_or_dispatch_sync_if_not_key(v112, (const void *)(v111 + 80), location);

        v113 = *(_QWORD *)(from.opaque[1] + 24);
        _Block_object_dispose(&from, 8);
        v114 = *(dispatch_queue_t **)(a1 + 32);
      }
      else
      {
LABEL_93:
        v114 = 0;
        v113 = 0;
      }
      sub_18A76EFC8(v114);
      v115 = (void *)objc_claimAutoreleasedReturnValue();
      v119 = objc_msgSend_count(v115, v116, v117, v118);

      objc_msgSend_allRemainingUploadableAssets(*(void **)(a1 + 32), v120, v121, v122);
      v123 = (void *)objc_claimAutoreleasedReturnValue();
      v127 = objc_msgSend_count(v123, v124, v125, v126);

      v131 = objc_msgSend_repairBatchCountLimit(*(void **)(a1 + 32), v128, v129, v130);
      if (v119 + v113 < objc_msgSend_cacheCountLimit(*(void **)(a1 + 32), v132, v133, v134))
      {
        objc_opt_self();
        objc_opt_self();
        if (v108 <= 104857599)
        {
          v138 = objc_msgSend_cacheCountLimit(*(void **)(a1 + 32), v135, v136, v137);
          v139 = *(_QWORD *)(a1 + 32);
          if (v139)
          {
            v140 = (v131 - (v127 + v119)) & ~((v131 - (v127 + v119)) >> 63);
            if ((unint64_t)v140 <= 1)
              v140 = 1;
            if (v140 >= v138)
              v141 = v138;
            else
              v141 = v140;
            v142 = _os_activity_create(&dword_18A5C5000, "client/data-repair-enqueue-requests", MEMORY[0x1E0C80FC8], OS_ACTIVITY_FLAG_DEFAULT);
            from.opaque[0] = 0;
            from.opaque[1] = 0;
            os_activity_scope_enter(v142, &from);
            v143 = *(id *)(v139 + 80);
            *(_QWORD *)location = MEMORY[0x1E0C809B0];
            *(_QWORD *)&location[8] = 3221225472;
            *(_QWORD *)&location[16] = sub_18A76FF28;
            v189 = (const __CFString *)&unk_1E1F62FA8;
            *(_QWORD *)&v190 = v139;
            *((_QWORD *)&v190 + 1) = v141;
            ck_call_or_dispatch_sync_if_not_key(v143, (const void *)(v139 + 80), location);

            os_activity_scope_leave(&from);
          }
        }
      }
      v144 = *(_QWORD *)(a1 + 32);
      if (!v144)
        goto LABEL_94;
      v145 = *(id *)(v144 + 112);
      if (v145)
      {

      }
      else
      {
        v146 = *(_QWORD *)(a1 + 32);
        if (v146)
          v147 = objc_msgSend_operationCount(*(void **)(v146 + 104), v135, v136, v137);
        else
LABEL_94:
          v147 = objc_msgSend_operationCount(0, v135, v136, v137);
        if (!v147)
        {
          v148 = *(_QWORD *)(a1 + 32);
          if (v148)
          {
            v149 = _os_activity_create(&dword_18A5C5000, "client/data-repair-enqueue-uploads", MEMORY[0x1E0C80FC8], OS_ACTIVITY_FLAG_DEFAULT);
            from.opaque[0] = 0;
            from.opaque[1] = 0;
            os_activity_scope_enter(v149, &from);
            WeakRetained = objc_loadWeakRetained((id *)(v148 + 64));
            if (WeakRetained)
            {
              v151 = *(id *)(v148 + 80);
              *(_QWORD *)location = MEMORY[0x1E0C809B0];
              *(_QWORD *)&location[8] = 3221225472;
              *(_QWORD *)&location[16] = sub_18A7707F0;
              v189 = (const __CFString *)&unk_1E1F61A48;
              *(_QWORD *)&v190 = v148;
              *((_QWORD *)&v190 + 1) = WeakRetained;
              ck_call_or_dispatch_sync_if_not_key(v151, (const void *)(v148 + 80), location);

            }
            else
            {
              if (ck_log_initialization_predicate != -1)
                dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
              v162 = ck_log_facility_data_repair;
              if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
              {
                *(_WORD *)location = 0;
                _os_log_debug_impl(&dword_18A5C5000, v162, OS_LOG_TYPE_DEBUG, "Not scheduling upload batch due to nil container", location, 2u);
              }
            }

            os_activity_scope_leave(&from);
          }
        }
      }
LABEL_82:
      sub_18A76EF5C(*(dispatch_queue_t **)(a1 + 32));
      v163 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend_count(v163, v164, v165, v166))
      {

      }
      else
      {
        objc_msgSend_delegate(*(void **)(a1 + 32), v167, v168, v169);
        v170 = (void *)objc_claimAutoreleasedReturnValue();
        v171 = v170 == 0;

        if (!v171)
        {
          if (ck_log_initialization_predicate != -1)
            dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
          v172 = ck_log_facility_data_repair;
          if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)location = 0;
            _os_log_debug_impl(&dword_18A5C5000, v172, OS_LOG_TYPE_DEBUG, "Completed all enqueued repairs", location, 2u);
          }
          v173 = *(_QWORD *)(a1 + 32);
          if (v173)
            v174 = *(NSObject **)(v173 + 88);
          else
            v174 = 0;
          block[0] = MEMORY[0x1E0C809B0];
          block[1] = 3221225472;
          block[2] = sub_18A76FEE8;
          block[3] = &unk_1E1F5FAA8;
          block[4] = v173;
          dispatch_async(v174, block);
        }
      }
      return;
    case 2:
      v51 = *(id *)(a1 + 40);
      if (objc_msgSend_errorIsRetriableInNearFuture_(CKAssetRepairOperationUtilities, v52, (uint64_t)v51, v53))
      {
        v56 = *(_QWORD *)(a1 + 32);
        if (v56
          && ((v57 = *(NSObject **)(v56 + 120)) == 0
           || (dispatch_source_cancel(v57), sub_18A76FE04(*(_QWORD *)(a1 + 32), 0), (v56 = *(_QWORD *)(a1 + 32)) != 0)))
        {
          objc_msgSend_setSuspended_(*(void **)(v56 + 104), v54, 1, v55);
        }
        else
        {
          objc_msgSend_setSuspended_(0, v54, 1, v55);
        }
        objc_msgSend_userInfo(v51, v58, v59, v60);
        v61 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_objectForKeyedSubscript_(v61, v62, (uint64_t)CFSTR("CKRetryAfter"), v63);
        v64 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_doubleValue(v64, v65, v66, v67);
        v72 = v71;
        if (v71 == 0.0)
        {
          objc_msgSend_defaultSuspensionTime(*(void **)(a1 + 32), v68, v69, v70);
          v72 = v73;
        }

        objc_initWeak((id *)&from, *(id *)(a1 + 32));
        v74 = *(_QWORD *)(a1 + 32);
        if (v74)
          v75 = *(NSObject **)(v74 + 80);
        else
          v75 = 0;
        v76 = dispatch_source_create(MEMORY[0x1E0C80DD0], 0, 0, v75);
        v77 = dispatch_time(0, (uint64_t)(v72 * 1000000000.0));
        dispatch_source_set_timer(v76, v77, (unint64_t)(v72 * 1000000000.0), 0x3B9ACA00uLL);
        v176[0] = MEMORY[0x1E0C809B0];
        v176[1] = 3221225472;
        v176[2] = sub_18A76FE14;
        v176[3] = &unk_1E1F608C8;
        objc_copyWeak(&v177, (id *)&from);
        dispatch_source_set_event_handler(v76, v176);
        if (ck_log_initialization_predicate != -1)
          dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
        v78 = ck_log_facility_data_repair;
        if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)location = 134217984;
          *(double *)&location[4] = v72;
          _os_log_debug_impl(&dword_18A5C5000, v78, OS_LOG_TYPE_DEBUG, "Suspending upload queue for %f", location, 0xCu);
        }
        dispatch_resume(v76);
        sub_18A76FE04(*(_QWORD *)(a1 + 32), v76);
        objc_destroyWeak(&v177);

        objc_destroyWeak((id *)&from);
      }

      goto LABEL_82;
    case 3:
      v79 = *(_QWORD *)(a1 + 32);
      if (v79)
        objc_msgSend_cancelAllOperations(*(void **)(v79 + 104), v3, v4, v5);
      else
        objc_msgSend_cancelAllOperations(0, v3, v4, v5);
      v83 = *(_QWORD *)(a1 + 32);
      if (v83)
        objc_msgSend_cancelAllOperations(*(void **)(v83 + 96), v80, v81, v82);
      else
        objc_msgSend_cancelAllOperations(0, v80, v81, v82);
      sub_18A76EFC8(*(dispatch_queue_t **)(a1 + 32));
      v84 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_removeAllObjects(v84, v85, v86, v87);

      sub_18A76EFF8(*(dispatch_queue_t **)(a1 + 32));
      v88 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_removeAllObjects(v88, v89, v90, v91);

      sub_18A76E7CC(*(dispatch_queue_t **)(a1 + 32));
      v92 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_removeAllObjects(v92, v93, v94, v95);

      sub_18A76F0C4(*(dispatch_queue_t **)(a1 + 32));
      v96 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_removeAllObjects(v96, v97, v98, v99);

      v103 = *(_QWORD *)(a1 + 32);
      if (v103)
        objc_msgSend_removeAllObjects(*(void **)(v103 + 128), v100, v101, v102);
      else
        objc_msgSend_removeAllObjects(0, v100, v101, v102);
      v106 = *(_QWORD *)(a1 + 32);
      if (v106)
      {
        v107 = *(void **)(v106 + 104);
        *(_QWORD *)location = MEMORY[0x1E0C809B0];
        *(_QWORD *)&location[8] = 3221225472;
        *(_QWORD *)&location[16] = sub_18A771C54;
        v189 = (const __CFString *)&unk_1E1F5FAA8;
        *(_QWORD *)&v190 = v106;
        objc_msgSend_addOperationWithBlock_(v107, v104, (uint64_t)location, v105);
      }
      goto LABEL_82;
    default:
      goto LABEL_82;
  }
}

void sub_18A76FD64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,os_activity_scope_state_s state)
{
  uint64_t v33;

  objc_destroyWeak((id *)(v33 - 176));
  _Unwind_Resume(a1);
}

void sub_18A76FDBC(uint64_t a1, void *a2)
{
  if (a1)
    objc_storeStrong((id *)(a1 + 112), a2);
}

void sub_18A76FDCC(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  sub_18A76FDBC((uint64_t)WeakRetained, 0);
  objc_msgSend_tickle(WeakRetained, v1, v2, v3);

}

void sub_18A76FE04(uint64_t a1, void *a2)
{
  if (a1)
    objc_storeStrong((id *)(a1 + 120), a2);
}

void sub_18A76FE14(uint64_t a1)
{
  void **WeakRetained;
  NSObject *v2;
  const char *v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8[16];

  WeakRetained = (void **)objc_loadWeakRetained((id *)(a1 + 32));
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v2 = ck_log_facility_data_repair;
  if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v8 = 0;
    _os_log_debug_impl(&dword_18A5C5000, v2, OS_LOG_TYPE_DEBUG, "Resuming upload queue", v8, 2u);
    if (WeakRetained)
      goto LABEL_5;
LABEL_8:
    objc_msgSend_setSuspended_(0, v3, 0, v4);
    goto LABEL_6;
  }
  if (!WeakRetained)
    goto LABEL_8;
LABEL_5:
  objc_msgSend_setSuspended_(WeakRetained[13], v3, 0, v4);
LABEL_6:
  sub_18A76FE04((uint64_t)WeakRetained, 0);
  objc_msgSend_tickle(WeakRetained, v5, v6, v7);

}

void sub_18A76FEE8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  id v7;

  objc_msgSend_delegate(*(void **)(a1 + 32), a2, a3, a4);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_assetRepairSchedulerAllRequestsComplete_(v7, v5, *(_QWORD *)(a1 + 32), v6);

}

void sub_18A76FF28(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  CKRequestAssetOperation *v17;
  const char *v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  NSObject *v24;
  _QWORD *v25;
  _QWORD *v26;
  const char *v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  id obj;
  uint64_t v32;
  _QWORD v33[5];
  id v34;
  id v35;
  id from;
  id location;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint8_t buf[4];
  uint64_t v43;
  _BYTE v44[128];
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  objc_msgSend_allRemainingRequestableAssets(*(void **)(a1 + 32), a2, a3, a4);
  v40 = 0u;
  v41 = 0u;
  v38 = 0u;
  v39 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v5, (uint64_t)&v38, (uint64_t)v44, 16);
  if (v6)
  {
    v7 = 0;
    v32 = *(_QWORD *)v39;
LABEL_3:
    v8 = 0;
    v30 = v6 + v7;
    while (1)
    {
      if (*(_QWORD *)v39 != v32)
        objc_enumerationMutation(obj);
      if (v7 + v8 >= *(_QWORD *)(a1 + 40))
        break;
      v9 = *(_QWORD *)(*((_QWORD *)&v38 + 1) + 8 * v8);
      sub_18A76E7CC(*(dispatch_queue_t **)(a1 + 32));
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v10, v11, v9, v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue();

      objc_initWeak(&location, *(id *)(a1 + 32));
      sub_18A76EFC8(*(dispatch_queue_t **)(a1 + 32));
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_addObject_(v14, v15, v9, v16);

      v17 = [CKRequestAssetOperation alloc];
      v19 = (void *)objc_msgSend_initWithAssetMetadata_requestCallback_(v17, v18, v9, (uint64_t)v13);
      objc_initWeak(&from, v19);
      v33[0] = MEMORY[0x1E0C809B0];
      v33[1] = 3221225472;
      v33[2] = sub_18A770264;
      v33[3] = &unk_1E1F644E8;
      objc_copyWeak(&v34, &location);
      objc_copyWeak(&v35, &from);
      v33[4] = v9;
      objc_msgSend_setAssetRequestCompletionBlock_(v19, v20, (uint64_t)v33, v21);
      objc_msgSend_setCompletionBlock_(v19, v22, (uint64_t)&unk_1E1F58718, v23);
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v24 = ck_log_facility_data_repair;
      if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v43 = v9;
        _os_log_impl(&dword_18A5C5000, v24, OS_LOG_TYPE_INFO, "Enqueueing asset request for %@", buf, 0xCu);
      }
      v25 = *(_QWORD **)(a1 + 32);
      if (v25)
        v25 = (_QWORD *)v25[12];
      v26 = v25;
      objc_msgSend_addOperation_(v26, v27, (uint64_t)v19, v28);

      objc_destroyWeak(&v35);
      objc_destroyWeak(&v34);
      objc_destroyWeak(&from);

      objc_destroyWeak(&location);
      if (v6 == ++v8)
      {
        v6 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v29, (uint64_t)&v38, (uint64_t)v44, 16);
        v7 = v30;
        if (v6)
          goto LABEL_3;
        break;
      }
    }
  }

}

void sub_18A770220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location,id a24)
{
  id *v24;
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a24);
  _Unwind_Resume(a1);
}

void sub_18A770264(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v7;
  id v8;
  _QWORD *WeakRetained;
  id v10;
  NSObject *v11;
  uint64_t v12;
  NSObject *v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  NSObject *v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[7];
  _QWORD v29[6];
  _QWORD block[6];
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint8_t buf[4];
  uint64_t v36;
  __int16 v37;
  id v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v8 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v10 = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (v8)
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v11 = ck_log_facility_data_repair;
      if (!os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
        goto LABEL_9;
      v12 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      v36 = v12;
      v37 = 2112;
      v38 = v8;
      _os_log_error_impl(&dword_18A5C5000, v11, OS_LOG_TYPE_ERROR, "Asset request operation for %@ completed with error: %@", buf, 0x16u);
    }
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
LABEL_9:
    v13 = ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
    {
      v26 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v36 = v26;
      _os_log_debug_impl(&dword_18A5C5000, v13, OS_LOG_TYPE_DEBUG, "Asset request operation for %@ completed", buf, 0xCu);
    }
    v14 = WeakRetained[10];
    v15 = MEMORY[0x1E0C809B0];
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_18A7705B0;
    block[3] = &unk_1E1F644C0;
    v16 = *(_QWORD *)(a1 + 32);
    block[4] = WeakRetained;
    block[5] = v16;
    v34 = a3;
    v31 = v10;
    v32 = v8;
    v33 = v7;
    dispatch_sync(v14, block);
    v17 = WeakRetained[10];
    v29[0] = v15;
    v29[1] = 3221225472;
    v29[2] = sub_18A770708;
    v29[3] = &unk_1E1F61A48;
    v18 = *(_QWORD *)(a1 + 32);
    v29[4] = WeakRetained;
    v29[5] = v18;
    dispatch_async(v17, v29);
    objc_msgSend_delegate(WeakRetained, v19, v20, v21);
    v22 = (void *)objc_claimAutoreleasedReturnValue();

    if (v22)
    {
      v23 = WeakRetained[11];
      v28[0] = v15;
      v28[1] = 3221225472;
      v28[2] = sub_18A770718;
      v28[3] = &unk_1E1F63250;
      v24 = *(_QWORD *)(a1 + 32);
      v28[4] = WeakRetained;
      v28[5] = v24;
      v28[6] = a3;
      dispatch_async(v23, v28);
    }

    goto LABEL_18;
  }
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v25 = ck_log_facility_data_repair;
  if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
  {
    v27 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    v36 = v27;
    _os_log_error_impl(&dword_18A5C5000, v25, OS_LOG_TYPE_ERROR, "Asset request operation for %@ no longer has a reference to self", buf, 0xCu);
  }
LABEL_18:

}

void sub_18A7705B0(uint64_t a1)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  const char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  id v22;
  _QWORD v23[4];
  id v24;
  uint64_t v25;
  id v26;

  sub_18A76EFC8(*(dispatch_queue_t **)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_removeObject_(v2, v3, *(_QWORD *)(a1 + 40), v4);

  v5 = *(_QWORD *)(a1 + 72);
  if ((objc_msgSend_isCancelled(*(void **)(a1 + 48), v6, v7, v8) & 1) != 0
    || (objc_msgSend_code(*(void **)(a1 + 56), v9, v10, v11) != 1 ? (v12 = v5 == 2) : (v12 = 1), v12))
  {
    sub_18A76E7CC(*(dispatch_queue_t **)(a1 + 32));
    v22 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend_removeObjectForKey_(v22, v13, *(_QWORD *)(a1 + 40), v14);
LABEL_8:

    return;
  }
  if (v5 == 1)
  {
    sub_18A76F0C4(*(dispatch_queue_t **)(a1 + 32));
    v22 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend_addObject_(v22, v20, *(_QWORD *)(a1 + 40), v21);
    goto LABEL_8;
  }
  if (!v5)
  {
    v16 = *(_QWORD *)(a1 + 32);
    v15 = *(void **)(a1 + 40);
    v17 = *(id *)(a1 + 64);
    v18 = v15;
    if (v16)
    {
      v19 = *(void **)(v16 + 80);
      v23[0] = MEMORY[0x1E0C809B0];
      v23[1] = 3221225472;
      v23[2] = sub_18A77264C;
      v23[3] = &unk_1E1F60DD8;
      v24 = v17;
      v25 = v16;
      v26 = v18;
      ck_call_or_dispatch_sync_if_not_key(v19, (const void *)(v16 + 80), v23);

    }
  }
}

uint64_t sub_18A770708(uint64_t a1)
{
  return sub_18A76F100(*(_QWORD *)(a1 + 32), 1, *(_QWORD *)(a1 + 40));
}

void sub_18A770718(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  id v6;

  objc_msgSend_delegate(*(void **)(a1 + 32), a2, a3, a4);
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_assetRepairScheduler_completedRequestWithMetadata_result_(v6, v5, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

}

void sub_18A77075C()
{
  NSObject *v0;
  uint8_t v1[16];

  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v0 = ck_log_facility_data_repair;
  if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v1 = 0;
    _os_log_impl(&dword_18A5C5000, v0, OS_LOG_TYPE_INFO, "Asset request completed", v1, 2u);
  }
}

void sub_18A7707F0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  unint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t i;
  uint64_t v44;
  void *v45;
  const char *v46;
  uint64_t v47;
  void *v48;
  const char *v49;
  uint64_t v50;
  char isKindOfClass;
  void *v52;
  void *v53;
  char v54;
  const char *v55;
  uint64_t v56;
  void *v57;
  const char *v58;
  uint64_t v59;
  int v60;
  const char *v61;
  CKRepairAssetsOperation *v62;
  const char *v63;
  void *v64;
  const char *v65;
  uint64_t v66;
  void *v67;
  const char *v68;
  uint64_t v69;
  const char *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  const char *v74;
  uint64_t v75;
  const char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  const char *v80;
  uint64_t v81;
  const char *v82;
  uint64_t v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  const char *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  const char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  void *v98;
  const char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t j;
  uint64_t v103;
  void *v104;
  const char *v105;
  uint64_t v106;
  const char *v107;
  NSObject *v108;
  const char *v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  _QWORD *v113;
  _QWORD *v114;
  const char *v115;
  uint64_t v116;
  id obj;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  _QWORD block[6];
  _QWORD v130[6];
  id v131;
  _QWORD v132[6];
  id v133;
  id v134;
  _QWORD v135[3];
  char v136;
  _QWORD v137[5];
  id v138;
  id from;
  id location;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  uint8_t buf[4];
  void *v150;
  _BYTE v151[128];
  _BYTE v152[128];
  _BYTE v153[128];
  uint64_t v154;

  v154 = *MEMORY[0x1E0C80C00];
  objc_msgSend_allRemainingUploadableAssets(*(void **)(a1 + 32), a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_set(MEMORY[0x1E0C99E20], v6, v7, v8);
  v119 = (void *)objc_claimAutoreleasedReturnValue();
  v147 = 0u;
  v148 = 0u;
  v145 = 0u;
  v146 = 0u;
  obj = v5;
  v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v9, (uint64_t)&v145, (uint64_t)v153, 16);
  if (v13)
  {
    v14 = 0;
    v15 = *(_QWORD *)v146;
LABEL_3:
    v16 = 0;
    while (1)
    {
      if (*(_QWORD *)v146 != v15)
        objc_enumerationMutation(obj);
      v17 = *(_QWORD *)(*((_QWORD *)&v145 + 1) + 8 * v16);
      v18 = objc_msgSend_count(v119, v10, v11, v12);
      if (v18 >= objc_msgSend_repairBatchCountLimit(*(void **)(a1 + 32), v19, v20, v21))
        break;
      objc_opt_self();
      sub_18A76F028(*(dispatch_queue_t **)(a1 + 32));
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v22, v23, v17, v24);
      v25 = (void *)objc_claimAutoreleasedReturnValue();

      v26 = (void *)objc_opt_class();
      v29 = objc_msgSend_estimatedSizeForAssetOrPackage_(v26, v27, (uint64_t)v25, v28);
      objc_msgSend_count(v119, v30, v31, v32);
      objc_opt_self();
      v35 = v29 + v14;
      if (v35 >> 22 <= 0x18)
      {
        objc_msgSend_addObject_(v119, v33, v17, v34);
        v14 = v35;
      }

      if (v13 == ++v16)
      {
        v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v10, (uint64_t)&v145, (uint64_t)v153, 16);
        if (v13)
          goto LABEL_3;
        break;
      }
    }
  }

  if (!objc_msgSend_count(v119, v36, v37, v38))
    goto LABEL_47;
  v124 = (void *)objc_opt_new();
  v122 = (void *)objc_opt_new();
  v123 = (void *)objc_opt_new();
  v121 = (void *)objc_opt_new();
  v120 = (void *)objc_opt_new();
  v118 = (void *)objc_opt_new();
  v143 = 0u;
  v144 = 0u;
  v141 = 0u;
  v142 = 0u;
  v39 = v119;
  v41 = objc_msgSend_countByEnumeratingWithState_objects_count_(v39, v40, (uint64_t)&v141, (uint64_t)v152, 16);
  if (!v41)
    goto LABEL_27;
  v42 = *(_QWORD *)v142;
  do
  {
    for (i = 0; i != v41; ++i)
    {
      if (*(_QWORD *)v142 != v42)
        objc_enumerationMutation(v39);
      v44 = *(_QWORD *)(*((_QWORD *)&v141 + 1) + 8 * i);
      sub_18A76F028(*(dispatch_queue_t **)(a1 + 32));
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v45, v46, v44, v47);
      v48 = (void *)objc_claimAutoreleasedReturnValue();

      if (v48)
      {
        objc_opt_class();
        isKindOfClass = objc_opt_isKindOfClass();
        v53 = v123;
        v52 = v124;
        if ((isKindOfClass & 1) != 0
          || (objc_opt_class(), v54 = objc_opt_isKindOfClass(), v53 = v121, v52 = v122, (v54 & 1) != 0))
        {
          objc_msgSend_addObject_(v52, v49, (uint64_t)v48, v50);
LABEL_21:
          objc_msgSend_addObject_(v53, v55, v44, v56);
        }
      }
      else
      {
        sub_18A76F0C4(*(dispatch_queue_t **)(a1 + 32));
        v57 = (void *)objc_claimAutoreleasedReturnValue();
        v60 = objc_msgSend_containsObject_(v57, v58, v44, v59);

        if (v60)
        {
          objc_opt_class();
          v53 = v120;
          if ((objc_opt_isKindOfClass() & 1) != 0)
            goto LABEL_21;
          objc_opt_class();
          v53 = v118;
          if ((objc_opt_isKindOfClass() & 1) != 0)
            goto LABEL_21;
        }
      }

    }
    v41 = objc_msgSend_countByEnumeratingWithState_objects_count_(v39, v61, (uint64_t)&v141, (uint64_t)v152, 16);
  }
  while (v41);
LABEL_27:

  v62 = [CKRepairAssetsOperation alloc];
  v64 = (void *)objc_msgSend_initWithAssets_packages_assetMetadata_packageMetadata_unavailableAssets_unavailablePackages_(v62, v63, (uint64_t)v124, (uint64_t)v122, v123, v121, v120, v118);
  objc_msgSend_createRepairOperationGroupWithName_(CKAssetRepairOperationUtilities, v65, (uint64_t)CFSTR("Data Repair"), v66);
  v67 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setGroup_(v64, v68, (uint64_t)v67, v69);

  objc_msgSend_privateCloudDatabase(*(void **)(a1 + 40), v70, v71, v72);
  v73 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setDatabase_(v64, v74, (uint64_t)v73, v75);

  v78 = *(_QWORD *)(a1 + 32);
  if (v78)
    objc_msgSend_setUploadRequestConfiguration_(v64, v76, *(_QWORD *)(v78 + 72), v77);
  else
    objc_msgSend_setUploadRequestConfiguration_(v64, v76, 0, v77);
  objc_initWeak(&location, *(id *)(a1 + 32));
  objc_initWeak(&from, v64);
  v137[0] = 0;
  v137[1] = v137;
  v137[2] = 0x3032000000;
  v137[3] = sub_18A770FF4;
  v137[4] = sub_18A771004;
  v138 = 0;
  v135[0] = 0;
  v135[1] = v135;
  v135[2] = 0x2020000000;
  v136 = 1;
  v79 = MEMORY[0x1E0C809B0];
  v132[0] = MEMORY[0x1E0C809B0];
  v132[2] = sub_18A77100C;
  v132[3] = &unk_1E1F64510;
  v132[1] = 3221225472;
  objc_copyWeak(&v133, &location);
  objc_copyWeak(&v134, &from);
  v132[4] = v137;
  v132[5] = v135;
  objc_msgSend_setRepairAssetsCompletionBlock_(v64, v80, (uint64_t)v132, v81);
  v130[0] = v79;
  v130[1] = 3221225472;
  v130[2] = sub_18A771B30;
  v130[3] = &unk_1E1F64538;
  objc_copyWeak(&v131, &location);
  v130[4] = v135;
  v130[5] = v137;
  objc_msgSend_setCompletionBlock_(v64, v82, (uint64_t)v130, v83);
  objc_msgSend_delegate(*(void **)(a1 + 32), v84, v85, v86);
  v87 = (void *)objc_claimAutoreleasedReturnValue();

  if (v87)
  {
    objc_msgSend_includedMetadata(v64, v88, v89, v90);
    v91 = (void *)objc_claimAutoreleasedReturnValue();
    v95 = objc_msgSend_count(v91, v92, v93, v94);

    v96 = *(_QWORD *)(a1 + 32);
    if (v96)
      v97 = *(NSObject **)(v96 + 88);
    else
      v97 = 0;
    block[0] = v79;
    block[1] = 3221225472;
    block[2] = sub_18A771C14;
    block[3] = &unk_1E1F62FA8;
    block[4] = v96;
    block[5] = v95;
    dispatch_async(v97, block);
  }
  v127 = 0u;
  v128 = 0u;
  v125 = 0u;
  v126 = 0u;
  objc_msgSend_includedMetadata(v64, v88, v89, v90);
  v98 = (void *)objc_claimAutoreleasedReturnValue();
  v100 = objc_msgSend_countByEnumeratingWithState_objects_count_(v98, v99, (uint64_t)&v125, (uint64_t)v151, 16);
  if (v100)
  {
    v101 = *(_QWORD *)v126;
    do
    {
      for (j = 0; j != v100; ++j)
      {
        if (*(_QWORD *)v126 != v101)
          objc_enumerationMutation(v98);
        v103 = *(_QWORD *)(*((_QWORD *)&v125 + 1) + 8 * j);
        sub_18A76EFF8(*(dispatch_queue_t **)(a1 + 32));
        v104 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_addObject_(v104, v105, v103, v106);

      }
      v100 = objc_msgSend_countByEnumeratingWithState_objects_count_(v98, v107, (uint64_t)&v125, (uint64_t)v151, 16);
    }
    while (v100);
  }

  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v108 = (id)ck_log_facility_data_repair;
  if (os_log_type_enabled(v108, OS_LOG_TYPE_INFO))
  {
    objc_msgSend_includedMetadata(v64, v109, v110, v111);
    v112 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412290;
    v150 = v112;
    _os_log_impl(&dword_18A5C5000, v108, OS_LOG_TYPE_INFO, "Enqueueing asset upload for %@", buf, 0xCu);

  }
  v113 = *(_QWORD **)(a1 + 32);
  if (v113)
    v113 = (_QWORD *)v113[13];
  v114 = v113;
  objc_msgSend_addOperation_(v114, v115, (uint64_t)v64, v116);

  objc_destroyWeak(&v131);
  objc_destroyWeak(&v134);
  objc_destroyWeak(&v133);
  _Block_object_dispose(v135, 8);
  _Block_object_dispose(v137, 8);

  objc_destroyWeak(&from);
  objc_destroyWeak(&location);

LABEL_47:
}

void sub_18A770F80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,id a59,id a60)
{
  id *v60;
  id *v61;

  objc_destroyWeak(location);
  objc_destroyWeak(v61);
  objc_destroyWeak(v60);
  _Block_object_dispose(&a49, 8);
  _Block_object_dispose(&a53, 8);
  objc_destroyWeak(&a59);
  objc_destroyWeak(&a60);
  _Unwind_Resume(a1);
}

uint64_t sub_18A770FF4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18A771004(uint64_t a1)
{

}

void sub_18A77100C(uint64_t a1, void *a2)
{
  char *WeakRetained;
  id *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t j;
  uint64_t v35;
  void *v36;
  id v37;
  const char *v38;
  uint64_t v39;
  void *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  void *v47;
  const char *v48;
  const char *v49;
  void *v50;
  NSObject *v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  NSObject *v57;
  const char *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  int v63;
  const void *v64;
  id v65;
  uint64_t v66;
  id *v67;
  const char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  NSObject *v72;
  NSObject *v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  id *from;
  uint64_t v79;
  id v80;
  id v81;
  char *v82;
  _QWORD v83[5];
  id v84;
  _QWORD block[4];
  id v86;
  id v87;
  char *v88;
  _QWORD v89[5];
  id v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  uint8_t buf[4];
  void *v100;
  __int16 v101;
  id v102;
  _BYTE v103[128];
  _BYTE v104[128];
  uint64_t v105;

  v105 = *MEMORY[0x1E0C80C00];
  v81 = a2;
  WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 48));
  v79 = a1;
  v5 = (id *)(a1 + 56);
  v80 = objc_loadWeakRetained(v5);
  v82 = WeakRetained;
  if (WeakRetained)
  {
    from = v5;
    if (v81)
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(v79 + 32) + 8) + 40), a2);
      v97 = 0u;
      v98 = 0u;
      v95 = 0u;
      v96 = 0u;
      objc_msgSend_includedMetadata(v80, v6, v7, v8, v5);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = 0;
      v14 = objc_msgSend_countByEnumeratingWithState_objects_count_(v9, v10, (uint64_t)&v95, (uint64_t)v104, 16);
      if (v14)
      {
        v15 = *(_QWORD *)v96;
        do
        {
          for (i = 0; i != v14; ++i)
          {
            if (*(_QWORD *)v96 != v15)
              objc_enumerationMutation(v9);
            objc_msgSend_objectForKeyedSubscript_(*((void **)v82 + 16), v12, *(_QWORD *)(*((_QWORD *)&v95 + 1) + 8 * i), v13);
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            v21 = objc_msgSend_integerValue(v17, v18, v19, v20);

            if (v11 <= v21)
              v11 = v21;
          }
          v14 = objc_msgSend_countByEnumeratingWithState_objects_count_(v9, v12, (uint64_t)&v95, (uint64_t)v104, 16);
        }
        while (v14);
      }

      if (objc_msgSend_errorIsRetriableInNearFuture_(CKAssetRepairOperationUtilities, v22, (uint64_t)v81, v23)&& v11 < objc_msgSend_repairRetryCount(v82, v24, v25, v26))
      {
        *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v79 + 40) + 8) + 24) = 0;
        v93 = 0u;
        v94 = 0u;
        v91 = 0u;
        v92 = 0u;
        objc_msgSend_includedMetadata(v80, v27, v28, v29);
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        v32 = objc_msgSend_countByEnumeratingWithState_objects_count_(v30, v31, (uint64_t)&v91, (uint64_t)v103, 16);
        if (v32)
        {
          v33 = *(_QWORD *)v92;
          do
          {
            for (j = 0; j != v32; ++j)
            {
              if (*(_QWORD *)v92 != v33)
                objc_enumerationMutation(v30);
              v35 = *(_QWORD *)(*((_QWORD *)&v91 + 1) + 8 * j);
              v36 = (void *)MEMORY[0x1E0CB37E8];
              v37 = *((id *)v82 + 16);
              objc_msgSend_objectForKeyedSubscript_(v37, v38, v35, v39);
              v40 = (void *)objc_claimAutoreleasedReturnValue();
              v44 = objc_msgSend_integerValue(v40, v41, v42, v43);
              objc_msgSend_numberWithInteger_(v36, v45, v44 + 1, v46);
              v47 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_setObject_forKeyedSubscript_(*((void **)v82 + 16), v48, (uint64_t)v47, v35);

            }
            v32 = objc_msgSend_countByEnumeratingWithState_objects_count_(v30, v49, (uint64_t)&v91, (uint64_t)v103, 16);
          }
          while (v32);
        }

        if (ck_log_initialization_predicate != -1)
          dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
        v50 = (void *)ck_log_facility_data_repair;
        if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
        {
          v51 = v50;
          objc_msgSend_includedMetadata(v80, v52, v53, v54);
          v55 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          v100 = v55;
          v101 = 2112;
          v102 = v81;
          _os_log_error_impl(&dword_18A5C5000, v51, OS_LOG_TYPE_ERROR, "Could not upload assets for %@, but will try again: %@", buf, 0x16u);

        }
      }
      else
      {
        if (ck_log_initialization_predicate != -1)
          dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
        v56 = (void *)ck_log_facility_data_repair;
        if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
        {
          v57 = v56;
          objc_msgSend_includedMetadata(v80, v58, v59, v60);
          v61 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          v100 = v61;
          v101 = 2112;
          v102 = v81;
          _os_log_error_impl(&dword_18A5C5000, v57, OS_LOG_TYPE_ERROR, "Could not upload assets for %@: %@", buf, 0x16u);

        }
      }
    }
    else
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v62 = (void *)ck_log_facility_data_repair;
      if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
      {
        v73 = v62;
        objc_msgSend_includedMetadata(v80, v74, v75, v76, v5);
        v77 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v100 = v77;
        _os_log_debug_impl(&dword_18A5C5000, v73, OS_LOG_TYPE_DEBUG, "Completed upload for assets %@", buf, 0xCu);

      }
    }
    v63 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v79 + 40) + 8) + 24);
    v64 = v82 + 80;
    v65 = *((id *)v82 + 10);
    if (v63)
    {
      v66 = MEMORY[0x1E0C809B0];
      v89[0] = MEMORY[0x1E0C809B0];
      v89[1] = 3221225472;
      v89[2] = sub_18A771664;
      v89[3] = &unk_1E1F61580;
      v67 = &v90;
      objc_copyWeak(&v90, from);
      v89[4] = v82;
      ck_call_or_dispatch_async_if_not_key(v65, v64, v89);

      objc_msgSend_delegate(v82, v68, v69, v70);
      v71 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v71)
      {
LABEL_38:
        objc_destroyWeak(v67);
        goto LABEL_39;
      }
      v72 = *((_QWORD *)v82 + 11);
      block[0] = v66;
      block[1] = 3221225472;
      block[2] = sub_18A771860;
      block[3] = &unk_1E1F60DD8;
      v86 = v80;
      v87 = v81;
      v88 = v82;
      dispatch_async(v72, block);

      v65 = v86;
    }
    else
    {
      v83[0] = MEMORY[0x1E0C809B0];
      v83[1] = 3221225472;
      v83[2] = sub_18A771A10;
      v83[3] = &unk_1E1F61580;
      v67 = &v84;
      objc_copyWeak(&v84, from);
      v83[4] = v82;
      ck_call_or_dispatch_async_if_not_key(v65, v64, v83);
    }

    goto LABEL_38;
  }
LABEL_39:

}

void sub_18A771640(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_18A771664(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  id obj;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _QWORD v36[5];
  id v37;
  _BYTE v38[128];
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend_includedMetadata(WeakRetained, v3, v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  obj = v6;
  v8 = objc_msgSend_countByEnumeratingWithState_objects_count_(v6, v7, (uint64_t)&v32, (uint64_t)v38, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v33;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v33 != v10)
          objc_enumerationMutation(obj);
        v12 = *(void **)(*((_QWORD *)&v32 + 1) + 8 * v11);
        sub_18A76EFF8(*(dispatch_queue_t **)(a1 + 32));
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_removeObject_(v13, v14, (uint64_t)v12, v15);

        sub_18A76E7CC(*(dispatch_queue_t **)(a1 + 32));
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_removeObjectForKey_(v16, v17, (uint64_t)v12, v18);

        v19 = *(_QWORD *)(a1 + 32);
        v20 = v12;
        v21 = v20;
        if (v19)
        {
          v22 = *(void **)(v19 + 80);
          v36[0] = MEMORY[0x1E0C809B0];
          v36[1] = 3221225472;
          v36[2] = sub_18A772974;
          v36[3] = &unk_1E1F61A48;
          v36[4] = v19;
          v37 = v20;
          ck_call_or_dispatch_sync_if_not_key(v22, (const void *)(v19 + 80), v36);

        }
        sub_18A76F0C4(*(dispatch_queue_t **)(a1 + 32));
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_removeObject_(v23, v24, (uint64_t)v21, v25);

        v28 = *(_QWORD *)(a1 + 32);
        if (v28)
          objc_msgSend_removeObjectForKey_(*(void **)(v28 + 128), v26, (uint64_t)v21, v27);
        else
          objc_msgSend_removeObjectForKey_(0, v26, (uint64_t)v21, v27);
        ++v11;
      }
      while (v9 != v11);
      v30 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v29, (uint64_t)&v32, (uint64_t)v38, 16);
      v9 = v30;
    }
    while (v30);
  }

}

void sub_18A771860(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  id v31;
  void *v32;
  const char *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[128];
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  objc_msgSend_includedMetadata(*(void **)(a1 + 32), a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend_countByEnumeratingWithState_objects_count_(v5, v6, (uint64_t)&v34, (uint64_t)v38, 16);
  if (v7)
  {
    v11 = v7;
    v12 = *(_QWORD *)v35;
    do
    {
      for (i = 0; i != v11; ++i)
      {
        if (*(_QWORD *)v35 != v12)
          objc_enumerationMutation(v5);
        v14 = *(void **)(*((_QWORD *)&v34 + 1) + 8 * i);
        v15 = *(void **)(a1 + 40);
        if (v15)
        {
          v19 = objc_msgSend_code(v15, v8, v9, v10);
          v20 = *(void **)(a1 + 40);
          if (v19 == 2)
          {
            objc_msgSend_userInfo(v20, v16, v17, v18);
            v21 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_objectForKeyedSubscript_(v21, v22, (uint64_t)CFSTR("CKPartialErrors"), v23);
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_repairZoneRecordID(v14, v25, v26, v27);
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_objectForKeyedSubscript_(v24, v29, (uint64_t)v28, v30);
            v31 = (id)objc_claimAutoreleasedReturnValue();

          }
          else
          {
            v31 = v20;
          }
        }
        else
        {
          v31 = 0;
        }
        objc_msgSend_delegate(*(void **)(a1 + 48), v8, v9, v10);
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_assetRepairScheduler_completedRepairWithMetadata_error_(v32, v33, *(_QWORD *)(a1 + 48), (uint64_t)v14, v31);

      }
      v11 = objc_msgSend_countByEnumeratingWithState_objects_count_(v5, v8, (uint64_t)&v34, (uint64_t)v38, 16);
    }
    while (v11);
  }

}

void sub_18A771A10(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  const char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend_includedMetadata(WeakRetained, v3, v4, v5, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v8 = objc_msgSend_countByEnumeratingWithState_objects_count_(v6, v7, (uint64_t)&v17, (uint64_t)v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v18;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v18 != v10)
          objc_enumerationMutation(v6);
        v12 = *(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * v11);
        sub_18A76EFF8(*(dispatch_queue_t **)(a1 + 32));
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_removeObject_(v13, v14, v12, v15);

        ++v11;
      }
      while (v9 != v11);
      v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(v6, v16, (uint64_t)&v17, (uint64_t)v21, 16);
    }
    while (v9);
  }

}

void sub_18A771B30(uint64_t a1)
{
  id WeakRetained;
  NSObject *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t v7[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v3 = ck_log_facility_data_repair;
  if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_18A5C5000, v3, OS_LOG_TYPE_INFO, "Asset upload completed", v7, 2u);
  }
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    objc_msgSend_tickle(WeakRetained, v4, v5, v6);
  else
    sub_18A76F100(WeakRetained, 2, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));

}

void sub_18A771C14(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  id v6;

  objc_msgSend_delegate(*(void **)(a1 + 32), a2, a3, a4);
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_assetRepairScheduler_preparingRepairWithIncludedMetadataCount_(v6, v5, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

uint64_t sub_18A771C54(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_clearAssetCache(*(void **)(a1 + 32), a2, a3, a4);
}

void sub_18A771CC4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  void *v15;
  id v16;
  const char *v17;
  uint64_t v18;
  const char *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char v25;
  id v26;
  void *v27;
  NSObject *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  __int128 v33;
  id v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint8_t buf[4];
  void *v40;
  __int16 v41;
  id v42;
  _BYTE v43[128];
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  objc_msgSend_temporaryAssetDirectory(*(void **)(a1 + 32), a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    objc_msgSend_defaultManager(MEMORY[0x1E0CB3620], v6, v7, v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_temporaryAssetDirectory(*(void **)(a1 + 32), v10, v11, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_enumeratorAtURL_includingPropertiesForKeys_options_errorHandler_(v9, v14, (uint64_t)v13, 0, 0, &unk_1E1F597B8);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    v37 = 0u;
    v38 = 0u;
    v35 = 0u;
    v36 = 0u;
    v16 = v15;
    v18 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v17, (uint64_t)&v35, (uint64_t)v43, 16);
    if (v18)
    {
      v21 = v18;
      v22 = *(_QWORD *)v36;
      *(_QWORD *)&v20 = 138543618;
      v33 = v20;
      do
      {
        v23 = 0;
        do
        {
          if (*(_QWORD *)v36 != v22)
            objc_enumerationMutation(v16);
          v24 = *(void **)(*((_QWORD *)&v35 + 1) + 8 * v23);
          v34 = 0;
          v25 = objc_msgSend_removeItemAtURL_error_(v9, v19, (uint64_t)v24, (uint64_t)&v34, v33);
          v26 = v34;
          if (v26 || (v25 & 1) == 0)
          {
            if (ck_log_initialization_predicate != -1)
              dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
            v27 = (void *)ck_log_facility_data_repair;
            if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
            {
              v28 = v27;
              objc_msgSend_CKSanitizedPath(v24, v29, v30, v31);
              v32 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = v33;
              v40 = v32;
              v41 = 2112;
              v42 = v26;
              _os_log_error_impl(&dword_18A5C5000, v28, OS_LOG_TYPE_ERROR, "Error removing repair scheduler cache file at %{public}@: %@", buf, 0x16u);

            }
          }

          ++v23;
        }
        while (v21 != v23);
        v21 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v19, (uint64_t)&v35, (uint64_t)v43, 16);
      }
      while (v21);
    }

  }
}

uint64_t sub_18A771F0C(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  void *v6;
  NSObject *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  int v13;
  void *v14;
  __int16 v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v4 = a2;
  v5 = a3;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v6 = (void *)ck_log_facility_data_repair;
  if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
  {
    v8 = v6;
    objc_msgSend_CKSanitizedPath(v4, v9, v10, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = 138543618;
    v14 = v12;
    v15 = 2112;
    v16 = v5;
    _os_log_error_impl(&dword_18A5C5000, v8, OS_LOG_TYPE_ERROR, "Error enumerating repair scheduler cache directory at %{public}@: %@", (uint8_t *)&v13, 0x16u);

  }
  return 1;
}

void sub_18A7720A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void sub_18A77264C(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  const char *v5;
  void *v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  id v11;
  NSObject *v12;
  void *v13;
  const char *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint8_t buf[4];
  void *v30;
  __int16 v31;
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v2 = *(id *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  v28 = 0;
  objc_msgSend_clonedAsset_withError_(v3, v5, v4, (uint64_t)&v28);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v28;
  if (v7)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v8 = ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
    {
      v9 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      v30 = v9;
      v31 = 2112;
      v32 = v7;
      _os_log_error_impl(&dword_18A5C5000, v8, OS_LOG_TYPE_ERROR, "Unexpected error when cloning asset or package %@: %@", buf, 0x16u);
    }
  }
  else if (v6)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v10 = (void *)ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
    {
      v18 = *(void **)(a1 + 40);
      v19 = v10;
      objc_msgSend_temporaryAssetDirectory(v18, v20, v21, v22);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_CKSanitizedPath(v23, v24, v25, v26);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v30 = v6;
      v31 = 2114;
      v32 = v27;
      _os_log_debug_impl(&dword_18A5C5000, v19, OS_LOG_TYPE_DEBUG, "Cloned asset or package %@ to directory %{public}@", buf, 0x16u);

    }
    v11 = v6;

    v2 = v11;
  }
  if (v2 == *(id *)(a1 + 32))
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v12 = ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_error_impl(&dword_18A5C5000, v12, OS_LOG_TYPE_ERROR, "Repair scheduler will attempt to upload non-cloned asset", buf, 2u);
    }
  }
  sub_18A76F028(*(dispatch_queue_t **)(a1 + 40));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v13, v14, (uint64_t)v2, *(_QWORD *)(a1 + 48));

  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v15 = ck_log_facility_data_repair;
  if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
  {
    v16 = *(void **)(a1 + 32);
    v17 = *(void **)(a1 + 48);
    *(_DWORD *)buf = 138412546;
    v30 = v16;
    v31 = 2112;
    v32 = v17;
    _os_log_debug_impl(&dword_18A5C5000, v15, OS_LOG_TYPE_DEBUG, "Repair scheduler cached asset %@ for metadata %@", buf, 0x16u);
  }

}

void sub_18A772974(uint64_t a1)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  int hasPrefix;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  const char *v38;
  id v39;
  NSObject *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  void *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  const char *v65;
  uint64_t v66;
  int v67;
  const char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  const char *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  const char *v76;
  uint64_t v77;
  const char *v78;
  NSObject *v79;
  uint32_t v80;
  uint64_t v81;
  NSObject *v82;
  const char *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  const char *v87;
  uint64_t v88;
  void *v89;
  int v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint8_t buf[4];
  _BYTE v96[18];
  uint64_t v97;

  v97 = *MEMORY[0x1E0C80C00];
  sub_18A76F028(*(dispatch_queue_t **)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v2, v3, *(_QWORD *)(a1 + 40), v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_temporaryAssetDirectory(*(void **)(a1 + 32), v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v10 = v5;
      objc_msgSend_fileURL(v10, v11, v12, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_path(v14, v15, v16, v17);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_temporaryAssetDirectory(*(void **)(a1 + 32), v19, v20, v21);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_path(v22, v23, v24, v25);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      hasPrefix = objc_msgSend_hasPrefix_(v18, v27, (uint64_t)v26, v28);

      if (hasPrefix)
      {
        objc_msgSend_defaultManager(MEMORY[0x1E0CB3620], v30, v31, v32);
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_fileURL(v10, v34, v35, v36);
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        v94 = 0;
        objc_msgSend_removeItemAtURL_error_(v33, v38, (uint64_t)v37, (uint64_t)&v94);
        v39 = v94;

        if (v39)
        {
          if (ck_log_initialization_predicate != -1)
            dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
          v40 = ck_log_facility_data_repair;
          if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412546;
            *(_QWORD *)v96 = v10;
            *(_WORD *)&v96[8] = 2112;
            *(_QWORD *)&v96[10] = v39;
            _os_log_error_impl(&dword_18A5C5000, v40, OS_LOG_TYPE_ERROR, "Error deleting cached asset %@: %@", buf, 0x16u);
          }
          goto LABEL_32;
        }
        if (ck_log_initialization_predicate != -1)
          dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
        v77 = ck_log_facility_data_repair;
        if (!os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
        {
LABEL_26:
          v39 = 0;
          goto LABEL_32;
        }
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)v96 = v10;
        v78 = "Deleted cached asset %@";
        v79 = v77;
        v80 = 12;
LABEL_40:
        _os_log_debug_impl(&dword_18A5C5000, v79, OS_LOG_TYPE_DEBUG, v78, buf, v80);
        goto LABEL_26;
      }
    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
        goto LABEL_34;
      v89 = v5;
      v93 = 0;
      v91 = v5;
      v43 = objc_msgSend_itemCountWithError_(v91, v41, (uint64_t)&v93, v42);
      v46 = v93;
      if (v43)
      {
        v47 = 0;
        v90 = 0;
        while (1)
        {
          objc_msgSend_itemAtIndex_(v91, v44, v47, v45, v89);
          v48 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_fileURL(v48, v49, v50, v51);
          v52 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_path(v52, v53, v54, v55);
          v56 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_temporaryAssetDirectory(*(void **)(a1 + 32), v57, v58, v59);
          v60 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_path(v60, v61, v62, v63);
          v64 = (void *)objc_claimAutoreleasedReturnValue();
          v67 = objc_msgSend_hasPrefix_(v56, v65, (uint64_t)v64, v66);

          if (v67)
          {
            objc_msgSend_defaultManager(MEMORY[0x1E0CB3620], v68, v69, v70);
            v71 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_fileURL(v48, v72, v73, v74);
            v75 = (void *)objc_claimAutoreleasedReturnValue();
            v92 = v46;
            objc_msgSend_removeItemAtURL_error_(v71, v76, (uint64_t)v75, (uint64_t)&v92);
            v39 = v92;

            if (v39)
            {
              if (ck_log_initialization_predicate != -1)
                dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
              v5 = v89;
              v82 = ck_log_facility_data_repair;
              if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)buf = 138412546;
                *(_QWORD *)v96 = v48;
                *(_WORD *)&v96[8] = 2112;
                *(_QWORD *)&v96[10] = v39;
                _os_log_error_impl(&dword_18A5C5000, v82, OS_LOG_TYPE_ERROR, "Error deleting cached package item %@: %@", buf, 0x16u);
              }

              goto LABEL_32;
            }
            v46 = 0;
            ++v90;
          }

          if (v43 == ++v47)
            goto LABEL_22;
        }
      }
      v90 = 0;
LABEL_22:
      v39 = v46;
      v5 = v89;
      if (!v46)
      {
        if (ck_log_initialization_predicate != -1)
          dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
        v81 = ck_log_facility_data_repair;
        if (!os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
          goto LABEL_26;
        *(_DWORD *)buf = 67109378;
        *(_DWORD *)v96 = v90;
        *(_WORD *)&v96[4] = 2112;
        *(_QWORD *)&v96[6] = v91;
        v78 = "Deleted %d items from cached package %@";
        v79 = v81;
        v80 = 18;
        goto LABEL_40;
      }
LABEL_32:

    }
  }
LABEL_34:
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    objc_msgSend_removeDB(v5, v83, v84, v85);
  if (v5)
  {
    sub_18A76F028(*(dispatch_queue_t **)(a1 + 32));
    v86 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_removeObjectForKey_(v86, v87, *(_QWORD *)(a1 + 40), v88);

  }
}

void sub_18A772FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A773000(uint64_t a1)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;

  sub_18A76EF5C(*(dispatch_queue_t **)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend_mutableCopy(v2, v3, v4, v5);

  sub_18A76F058(*(dispatch_queue_t **)(a1 + 32));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_minusSet_(v6, v8, (uint64_t)v7, v9);

  sub_18A76F0C4(*(dispatch_queue_t **)(a1 + 32));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_minusSet_(v6, v11, (uint64_t)v10, v12);

  sub_18A76EFC8(*(dispatch_queue_t **)(a1 + 32));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_minusSet_(v6, v14, (uint64_t)v13, v15);

  v16 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v17 = *(void **)(v16 + 40);
  *(_QWORD *)(v16 + 40) = v6;

}

void sub_18A773188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7731A0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  objc_msgSend_set(MEMORY[0x1E0C99E20], a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A76F058(*(dispatch_queue_t **)(a1 + 32));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_unionSet_(v5, v7, (uint64_t)v6, v8);

  sub_18A76F0C4(*(dispatch_queue_t **)(a1 + 32));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_unionSet_(v5, v10, (uint64_t)v9, v11);

  sub_18A76EFF8(*(dispatch_queue_t **)(a1 + 32));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_minusSet_(v5, v13, (uint64_t)v12, v14);

  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v16 = *(void **)(v15 + 40);
  *(_QWORD *)(v15 + 40) = v5;

}

void sub_18A773248(uint64_t a1)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  const char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  sub_18A76F028(*(dispatch_queue_t **)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v3, (uint64_t)&v17, (uint64_t)v21, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v18;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v18 != v6)
          objc_enumerationMutation(v2);
        v8 = *(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * v7);
        sub_18A76F028(*(dispatch_queue_t **)(a1 + 32));
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_objectForKeyedSubscript_(v9, v10, v8, v11, (_QWORD)v17);
        v12 = (void *)objc_claimAutoreleasedReturnValue();

        v13 = (void *)objc_opt_class();
        *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) += objc_msgSend_estimatedSizeForAssetOrPackage_(v13, v14, (uint64_t)v12, v15);

        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v16, (uint64_t)&v17, (uint64_t)v21, 16);
    }
    while (v5);
  }

}

void sub_18A773388(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  sub_18A76F028(*(dispatch_queue_t **)(a1 + 32));
  v5 = (id)objc_claimAutoreleasedReturnValue();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend_count(v5, v2, v3, v4);

}

void sub_18A7734A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7734C0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  void *v6;
  void *v7;
  char v8;
  id v9;
  NSObject *v10;
  void *v11;
  id WeakRetained;
  void *v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  NSObject *v29;
  id v30;
  uint8_t buf[4];
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(void **)(v5 + 48);
  if (v6)
    goto LABEL_2;
  WeakRetained = objc_loadWeakRetained((id *)(v5 + 64));
  if (WeakRetained)
  {
    v13 = WeakRetained;
    NSTemporaryDirectory();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringByAppendingPathComponent_(v14, v15, (uint64_t)CFSTR("com.apple.cloudkit.upload-request.cache"), v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend_primaryIdentifier(v13, v18, v19, v20);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringByAppendingPathComponent_(v17, v22, (uint64_t)v21, v23);
    v24 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend_fileURLWithPath_isDirectory_(MEMORY[0x1E0C99E98], v25, (uint64_t)v24, 1);
    v26 = objc_claimAutoreleasedReturnValue();
    v27 = *(_QWORD *)(a1 + 32);
    v28 = *(void **)(v27 + 48);
    *(_QWORD *)(v27 + 48) = v26;

    v6 = *(void **)(*(_QWORD *)(a1 + 32) + 48);
    if (!v6)
    {
      v11 = 0;
LABEL_8:
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v11);
      return;
    }
LABEL_2:
    objc_msgSend_path(v6, a2, a3, a4);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v30 = 0;
    v8 = CKCreateDirectoryAtPathWithAttributes(v7, 0, &v30);
    v9 = v30;

    if ((v8 & 1) == 0)
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v10 = ck_log_facility_data_repair;
      if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)buf = 138412290;
        v32 = v9;
        _os_log_fault_impl(&dword_18A5C5000, v10, OS_LOG_TYPE_FAULT, "Could not create temporary asset directory: %@", buf, 0xCu);
      }
    }

    v11 = *(void **)(*(_QWORD *)(a1 + 32) + 48);
    goto LABEL_8;
  }
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v29 = ck_log_facility_data_repair;
  if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl(&dword_18A5C5000, v29, OS_LOG_TYPE_DEBUG, "Not returning temporary asset directory due to nil container", buf, 2u);
  }
}

void sub_18A773E4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_18A773FE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18A77400C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  id WeakRetained;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  NSObject *v20;
  const char *v21;
  void *v22;
  objc_class *v23;
  void *v24;
  const char *v25;
  NSObject *v26;
  const char *v27;
  void *v28;
  objc_class *v29;
  const char *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  void (**v34)(_QWORD, _QWORD, _QWORD, _QWORD);
  NSObject *v35;
  objc_class *v36;
  void *v37;
  NSObject *v38;
  objc_class *v39;
  void *v40;
  uint8_t buf[4];
  void *v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v10 = WeakRetained;
  if (WeakRetained)
  {
    if (objc_msgSend_isCancelled(WeakRetained, v7, v8, v9))
    {
      objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v11, (uint64_t)CFSTR("CKInternalErrorDomain"), 1, CFSTR("Asset request operation was cancelled"));
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_msgSend_metadata(v10, v11, v12, v13);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    switch(a3)
    {
      case 2:
        if (ck_log_initialization_predicate != -1)
          dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
        v20 = ck_log_facility_data_repair;
        if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          v21 = "Requested asset delayed with try again later";
          a3 = 2;
LABEL_47:
          _os_log_impl(&dword_18A5C5000, v20, OS_LOG_TYPE_INFO, v21, buf, 2u);
          break;
        }
        a3 = 2;
        break;
      case 1:
        goto LABEL_43;
      case 0:
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
        {
          if (ck_log_initialization_predicate != -1)
            dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
          v22 = (void *)ck_log_facility_data_repair;
          if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
          {
            v35 = v22;
            v36 = (objc_class *)objc_opt_class();
            NSStringFromClass(v36);
            v37 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543362;
            v42 = v37;
            _os_log_error_impl(&dword_18A5C5000, v35, OS_LOG_TYPE_ERROR, "Expected asset in asset request response, but received %{public}@, so treating as unavailable", buf, 0xCu);

            if (v14)
              goto LABEL_43;
          }
          else if (v14)
          {
            goto LABEL_43;
          }
          v23 = (objc_class *)objc_opt_class();
          NSStringFromClass(v23);
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v25, (uint64_t)CFSTR("CKInternalErrorDomain"), 10004, CFSTR("Expected asset in asset request response, but received %@"), v24);
        }
        else
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
          {
            if (v5)
            {
              if (ck_log_initialization_predicate != -1)
                dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
              v19 = ck_log_facility_data_repair;
              if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)buf = 0;
                _os_log_impl(&dword_18A5C5000, v19, OS_LOG_TYPE_INFO, "Requested asset available", buf, 2u);
              }
              a3 = 0;
              break;
            }
            if (ck_log_initialization_predicate != -1)
              dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
            v26 = ck_log_facility_data_repair;
            if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
            {
              *(_WORD *)buf = 0;
              _os_log_error_impl(&dword_18A5C5000, v26, OS_LOG_TYPE_ERROR, "Expected asset or package in asset request response, but received nil, so treating as unavailable", buf, 2u);
              if (v14)
                goto LABEL_43;
              goto LABEL_36;
            }
            if (!v14)
            {
LABEL_36:
              objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v27, (uint64_t)CFSTR("CKInternalErrorDomain"), 10004, CFSTR("Expected package in asset request response, but received nil"));
              v14 = (void *)objc_claimAutoreleasedReturnValue();
            }
LABEL_43:
            if (ck_log_initialization_predicate != -1)
              dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
            v20 = ck_log_facility_data_repair;
            a3 = 1;
            if (!os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_INFO))
              break;
            *(_WORD *)buf = 0;
            v21 = "Requested asset not available";
            a3 = 1;
            goto LABEL_47;
          }
          if (ck_log_initialization_predicate != -1)
            dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
          v28 = (void *)ck_log_facility_data_repair;
          if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
          {
            v38 = v28;
            v39 = (objc_class *)objc_opt_class();
            NSStringFromClass(v39);
            v40 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543362;
            v42 = v40;
            _os_log_error_impl(&dword_18A5C5000, v38, OS_LOG_TYPE_ERROR, "Expected package in asset request response, but received %{public}@, so treating as unavailable", buf, 0xCu);

            if (v14)
              goto LABEL_43;
          }
          else if (v14)
          {
            goto LABEL_43;
          }
          v29 = (objc_class *)objc_opt_class();
          NSStringFromClass(v29);
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v30, (uint64_t)CFSTR("CKInternalErrorDomain"), 10004, CFSTR("Expected package in asset request response, but received %@"), v24);
        }
        v14 = (void *)objc_claimAutoreleasedReturnValue();

        goto LABEL_43;
    }
    objc_msgSend_setState_(v10, v16, 2, v17);
    objc_msgSend_assetRequestCompletionBlock(v10, v31, v32, v33);
    v34 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
    ((void (**)(_QWORD, id, uint64_t, void *))v34)[2](v34, v5, a3, v14);

    goto LABEL_49;
  }
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v15 = ck_log_facility_data_repair;
  if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_error_impl(&dword_18A5C5000, v15, OS_LOG_TYPE_ERROR, "Attempted to process asset request response, but operation was nil", buf, 2u);
  }
LABEL_49:

}

void sub_18A774704(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void *sub_18A774754(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A77477C(uint64_t a1)
{

}

void sub_18A774784(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7747C4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 528) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 528);
    *(_QWORD *)(v8 + 528) = v7;

  }
}

void sub_18A774954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A77496C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 528));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7749AC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 536) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 536);
    *(_QWORD *)(v8 + 536) = v7;

  }
}

void sub_18A7749FC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 536));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A774A3C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 544) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 544);
    *(_QWORD *)(v8 + 544) = v7;

  }
}

void sub_18A774BCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A774BE4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 544));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

uint64_t sub_18A775214(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(result + 32);
  if (v4)
  {
    *(_QWORD *)(v4 + 592) += a2;
    v5 = *(_QWORD *)(result + 32);
    if (v5)
    {
      *(_QWORD *)(v5 + 600) += a3;
      v6 = *(_QWORD *)(result + 32);
      if (v6)
        *(_QWORD *)(v6 + 608) += a4;
    }
  }
  return result;
}

void sub_18A7762BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  _Block_object_dispose(&a35, 8);
  _Block_object_dispose(&a57, 8);
  _Block_object_dispose(&a61, 8);
  _Block_object_dispose(&STACK[0x280], 8);
  _Block_object_dispose(&STACK[0x340], 8);
  _Block_object_dispose(&STACK[0x360], 8);
  _Block_object_dispose(&STACK[0x380], 8);
  _Block_object_dispose(&STACK[0x3A0], 8);
  _Block_object_dispose(&STACK[0x3C0], 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A77635C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v5;
  void (**v6)(id, uint64_t, void *);
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  int isEqualToString;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  void *v33;
  NSObject *v34;
  const char *v35;
  const char *v36;
  NSObject *v38;
  const char *v39;
  uint64_t v40;
  void *v41;
  const __CFString *v42;
  void *v43;
  const __CFString *v44;
  void *v45;
  uint8_t buf[4];
  id v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = a4;
  objc_msgSend_name(v5, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v11, 18, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v10, v14, (uint64_t)v13, v15);

  if (isEqualToString)
  {
    objc_msgSend_userInfo(v5, v17, v18, v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v20, v21, (uint64_t)CFSTR("function"), v22);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = objc_msgSend_integerValue(v23, v24, v25, v26);

    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v28 = (void *)ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
    {
      v38 = v28;
      objc_msgSend_nameFromFunction_(CKUploadRequestManagerStateMachine, v39, v27, v40);
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v47 = v41;
      _os_log_error_impl(&dword_18A5C5000, v38, OS_LOG_TYPE_ERROR, "Warning: requested permission for function %{public}@, but not allowed in current state", buf, 0xCu);

    }
    v44 = CFSTR("function");
    objc_msgSend_numberWithInteger_(MEMORY[0x1E0CB37E8], v29, v27, v30);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    v45 = v31;
    objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v32, (uint64_t)&v45, (uint64_t)&v44, 1);
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v6[2](v6, 28, v33);
  }
  else
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v34 = ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v47 = v5;
      _os_log_error_impl(&dword_18A5C5000, v34, OS_LOG_TYPE_ERROR, "Unhandled event %@ in state machine", buf, 0xCu);
    }
    objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v35, (uint64_t)CFSTR("CKErrorDomain"), 10002, CFSTR("Unhandled event %@ in state machine"), v5);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    v42 = CFSTR("error");
    v43 = v31;
    objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v36, (uint64_t)&v43, (uint64_t)&v42, 1);
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v6[2](v6, 26, v33);
  }

  return 2;
}

uint64_t sub_18A776654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a3 + 16))(a3, 0);
}

uint64_t sub_18A776664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a3 + 16))(a3, 0);
}

uint64_t sub_18A776674(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  char isEqualToString;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  int v26;
  const char *v27;
  uint64_t v28;

  v5 = a2;
  v6 = a3;
  objc_msgSend_name(v6, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v11, 1, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v10, v14, (uint64_t)v13, v15);

  if ((isEqualToString & 1) == 0)
  {
    objc_msgSend_name(v6, v17, v18, v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v21, 0, v22);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v26 = objc_msgSend_isEqualToString_(v20, v24, (uint64_t)v23, v25);

    if (!v26)
    {
      v28 = 1;
      goto LABEL_6;
    }
    objc_msgSend_transitionToState_withEvent_(v5, v27, *(_QWORD *)(a1 + 32), (uint64_t)v6);
  }
  v28 = 2;
LABEL_6:

  return v28;
}

uint64_t sub_18A77676C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  int isEqualToString;
  const char *v17;
  uint64_t v18;

  v5 = a2;
  v6 = a3;
  objc_msgSend_name(v6, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v11, 2, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v10, v14, (uint64_t)v13, v15);

  if (isEqualToString)
  {
    objc_msgSend_transitionToState_withEvent_(v5, v17, *(_QWORD *)(a1 + 32), (uint64_t)v6);
    v18 = 2;
  }
  else
  {
    v18 = 1;
  }

  return v18;
}

uint64_t sub_18A776814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a4 + 16))(a4, 11, 0);
}

uint64_t sub_18A77682C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  void (**v5)(id, uint64_t, _QWORD);
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  int isEqualToString;
  uint64_t v16;

  v5 = a4;
  objc_msgSend_name(a3, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v10, 2, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v9, v13, (uint64_t)v12, v14);

  if (isEqualToString)
  {
    v5[2](v5, 11, 0);
    v16 = 2;
  }
  else
  {
    v16 = 1;
  }

  return v16;
}

uint64_t sub_18A7768C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, 1);
}

uint64_t sub_18A7768D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, 1);
}

uint64_t sub_18A7768E4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  int isEqualToString;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  int v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;

  v5 = a2;
  v6 = a3;
  objc_msgSend_name(v6, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v11, 1, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v10, v14, (uint64_t)v13, v15);

  if (isEqualToString)
  {
    v20 = (uint64_t *)(a1 + 32);
LABEL_6:
    objc_msgSend_transitionToState_withEvent_(v5, v17, *v20, (uint64_t)v6);
    goto LABEL_7;
  }
  objc_msgSend_name(v6, v17, v18, v19);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v22, 0, v23);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v27 = objc_msgSend_isEqualToString_(v21, v25, (uint64_t)v24, v26);

  if ((v27 & 1) == 0)
  {
    objc_msgSend_name(v6, v28, v29, v30);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v32, 2, v33);
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    v37 = objc_msgSend_isEqualToString_(v31, v35, (uint64_t)v34, v36);

    if (!v37)
    {
      v38 = 1;
      goto LABEL_8;
    }
    v20 = (uint64_t *)(a1 + 40);
    goto LABEL_6;
  }
LABEL_7:
  v38 = 2;
LABEL_8:

  return v38;
}

void sub_18A776A20(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  void (*v5)(void);
  _QWORD *v6;

  *(_BYTE *)(*(_QWORD *)(a1[4] + 8) + 24) = 0;
  *(_BYTE *)(*(_QWORD *)(a1[5] + 8) + 24) = 0;
  *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 0;
  *(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24) = 0;
  *(_BYTE *)(*(_QWORD *)(a1[8] + 8) + 24) = 0;
  v5 = (void (*)(void))a4[2];
  v6 = a4;
  v5();
  ((void (*)(id, uint64_t, _QWORD))a4[2])(v6, 16, 0);
  ((void (*)(id, uint64_t, _QWORD))a4[2])(v6, 12, 0);

}

uint64_t sub_18A776AC8(_QWORD *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  void (**v9)(id, uint64_t, void *);
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  int isEqualToString;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  void *v25;
  const char *v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  int v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  const char *v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const char *v47;
  uint64_t v48;
  void *v49;
  const char *v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v58;
  const char *v59;
  uint64_t v60;
  void *v61;
  const char *v62;
  uint64_t v63;
  int v64;
  const char *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  const char *v69;
  uint64_t v70;
  void *v71;
  const char *v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  const char *v78;
  uint64_t v79;
  void *v80;
  const char *v81;
  uint64_t v82;
  int v83;
  const __CFString *v84;
  uint64_t v85;
  const __CFString *v86;
  _QWORD v87[2];

  v87[1] = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v8 = a3;
  v9 = a4;
  objc_msgSend_name(v8, v10, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v14, 4, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v13, v17, (uint64_t)v16, v18);

  if (isEqualToString)
  {
    v23 = *(_QWORD *)(a1[6] + 8);
LABEL_3:
    *(_BYTE *)(v23 + 24) = 1;
LABEL_4:
    if (*(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24)
      && *(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24)
      && *(_BYTE *)(*(_QWORD *)(a1[8] + 8) + 24))
    {
      if (*(_BYTE *)(*(_QWORD *)(a1[9] + 8) + 24) && *(_BYTE *)(*(_QWORD *)(a1[10] + 8) + 24))
        v24 = a1 + 4;
      else
        v24 = a1 + 5;
      objc_msgSend_transitionToState_withEvent_(v7, v20, *v24, (uint64_t)v8);
    }
    goto LABEL_21;
  }
  objc_msgSend_name(v8, v20, v21, v22);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v26, 5, v27);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v31 = objc_msgSend_isEqualToString_(v25, v29, (uint64_t)v28, v30);

  if (!v31)
  {
    objc_msgSend_name(v8, v32, v33, v34);
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v37, 9, v38);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    v42 = objc_msgSend_isEqualToString_(v36, v40, (uint64_t)v39, v41);

    if (v42)
    {
      *(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24) = 1;
      v45 = a1[9];
LABEL_16:
      *(_BYTE *)(*(_QWORD *)(v45 + 8) + 24) = 0;
      goto LABEL_4;
    }
    objc_msgSend_name(v8, v20, v43, v44);
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v47, 8, v48);
    v49 = (void *)objc_claimAutoreleasedReturnValue();
    v52 = objc_msgSend_isEqualToString_(v46, v50, (uint64_t)v49, v51);

    if (v52)
    {
      *(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24) = 1;
      v55 = a1[9];
    }
    else
    {
      objc_msgSend_name(v8, v20, v53, v54);
      v58 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v59, 10, v60);
      v61 = (void *)objc_claimAutoreleasedReturnValue();
      v64 = objc_msgSend_isEqualToString_(v58, v62, (uint64_t)v61, v63);

      if (v64)
      {
        if (*(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24))
          goto LABEL_21;
        v84 = CFSTR("retry");
        v85 = MEMORY[0x1E0C9AAB0];
        objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v65, (uint64_t)&v85, (uint64_t)&v84, 1);
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        v9[2](v9, 16, v35);
        goto LABEL_13;
      }
      objc_msgSend_name(v8, v65, v66, v67);
      v68 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v69, 6, v70);
      v71 = (void *)objc_claimAutoreleasedReturnValue();
      v74 = objc_msgSend_isEqualToString_(v68, v72, (uint64_t)v71, v73);

      if (!v74)
      {
        objc_msgSend_name(v8, v20, v75, v76);
        v77 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v78, 7, v79);
        v80 = (void *)objc_claimAutoreleasedReturnValue();
        v83 = objc_msgSend_isEqualToString_(v77, v81, (uint64_t)v80, v82);

        v56 = 1;
        if (!v83)
          goto LABEL_22;
        *(_BYTE *)(*(_QWORD *)(a1[8] + 8) + 24) = 1;
        v45 = a1[10];
        goto LABEL_16;
      }
      *(_BYTE *)(*(_QWORD *)(a1[8] + 8) + 24) = 1;
      v55 = a1[10];
    }
    v23 = *(_QWORD *)(v55 + 8);
    goto LABEL_3;
  }
  if (!*(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24))
  {
    v86 = CFSTR("retry");
    v87[0] = MEMORY[0x1E0C9AAB0];
    objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v32, (uint64_t)v87, (uint64_t)&v86, 1);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    v9[2](v9, 15, v35);
LABEL_13:

  }
LABEL_21:
  v56 = 2;
LABEL_22:

  return v56;
}

void sub_18A776ECC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  void (*v5)(void);
  _QWORD *v6;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 0;
  v5 = (void (*)(void))a4[2];
  v6 = a4;
  v5();
  ((void (*)(id, uint64_t, _QWORD))a4[2])(v6, 4, 0);
  ((void (*)(id, _QWORD, _QWORD))a4[2])(v6, 0, 0);
  ((void (*)(id, uint64_t, _QWORD))a4[2])(v6, 2, 0);

}

void sub_18A776F54(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void (**v5)(id, uint64_t, _QWORD);

  v5 = a4;
  v5[2](v5, 19, 0);
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    v5[2](v5, 10, 0);
  v5[2](v5, 5, 0);
  v5[2](v5, 1, 0);
  v5[2](v5, 3, 0);

}

uint64_t sub_18A776FF4(uint64_t *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  void (**v9)(id, uint64_t, void *);
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  int isEqualToString;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  int v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  void *v37;
  const char *v38;
  uint64_t v39;
  int v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v46;
  const char *v47;
  uint64_t v48;
  void *v49;
  const char *v50;
  uint64_t v51;
  int v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const char *v57;
  uint64_t v58;
  void *v59;
  const char *v60;
  uint64_t v61;
  int v62;
  const char *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  const char *v67;
  uint64_t v68;
  void *v69;
  const char *v70;
  uint64_t v71;
  int v72;
  const char *v73;
  uint64_t v74;
  uint64_t v75;
  const char *v76;
  void *v77;
  const char *v78;
  uint64_t v79;
  void *v80;
  const char *v81;
  uint64_t v82;
  int v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  const char *v88;
  uint64_t v89;
  void *v90;
  const char *v91;
  uint64_t v92;
  int v93;
  const char *v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  const char *v98;
  uint64_t v99;
  void *v100;
  const char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  const char *v105;
  uint64_t v106;
  const char *v107;
  void *v108;
  const __CFString *v109;
  void *v110;
  const __CFString *v111;
  uint64_t v112;
  const __CFString *v113;
  _QWORD v114[2];

  v114[1] = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v8 = a3;
  v9 = a4;
  objc_msgSend_name(v8, v10, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v14, 13, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v13, v17, (uint64_t)v16, v18);

  if (isEqualToString)
  {
    *(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24) = 1;
    objc_msgSend_transitionToState_withEvent_(v7, v20, a1[4], (uint64_t)v8);
    goto LABEL_9;
  }
  objc_msgSend_name(v8, v20, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v24, 10, v25);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v29 = objc_msgSend_isEqualToString_(v23, v27, (uint64_t)v26, v28);

  if (v29)
  {
    v113 = CFSTR("retry");
    v114[0] = MEMORY[0x1E0C9AAB0];
    objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v30, (uint64_t)v114, (uint64_t)&v113, 1);
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v9[2](v9, 16, v33);
LABEL_8:

    goto LABEL_9;
  }
  objc_msgSend_name(v8, v30, v31, v32);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v35, 11, v36);
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v40 = objc_msgSend_isEqualToString_(v34, v38, (uint64_t)v37, v39);

  if (v40)
  {
    v111 = CFSTR("retry");
    v112 = MEMORY[0x1E0C9AAB0];
    objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v41, (uint64_t)&v112, (uint64_t)&v111, 1);
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v9[2](v9, 17, v33);
    goto LABEL_8;
  }
  objc_msgSend_name(v8, v41, v42, v43);
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v47, 7, v48);
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  v52 = objc_msgSend_isEqualToString_(v46, v50, (uint64_t)v49, v51);

  if (v52)
  {
    objc_msgSend_transitionToState_withEvent_(v7, v53, a1[5], (uint64_t)v8);
    goto LABEL_9;
  }
  objc_msgSend_name(v8, v53, v54, v55);
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v57, 15, v58);
  v59 = (void *)objc_claimAutoreleasedReturnValue();
  v62 = objc_msgSend_isEqualToString_(v56, v60, (uint64_t)v59, v61);

  if (v62)
  {
    v9[2](v9, 21, 0);
    goto LABEL_9;
  }
  objc_msgSend_name(v8, v63, v64, v65);
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v67, 2, v68);
  v69 = (void *)objc_claimAutoreleasedReturnValue();
  v72 = objc_msgSend_isEqualToString_(v66, v70, (uint64_t)v69, v71);

  if (v72)
  {
    v9[2](v9, 8, 0);
    objc_msgSend_transitionToState_withEvent_(v7, v76, a1[6], (uint64_t)v8);
    goto LABEL_9;
  }
  objc_msgSend_name(v8, v73, v74, v75);
  v77 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v78, 14, v79);
  v80 = (void *)objc_claimAutoreleasedReturnValue();
  v83 = objc_msgSend_isEqualToString_(v77, v81, (uint64_t)v80, v82);

  if (v83)
  {
    v9[2](v9, 20, 0);
    goto LABEL_9;
  }
  objc_msgSend_name(v8, v84, v85, v86);
  v87 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v88, 18, v89);
  v90 = (void *)objc_claimAutoreleasedReturnValue();
  v93 = objc_msgSend_isEqualToString_(v87, v91, (uint64_t)v90, v92);

  if (!v93)
  {
    v44 = 1;
    goto LABEL_10;
  }
  objc_msgSend_userInfo(v8, v94, v95, v96);
  v97 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v97, v98, (uint64_t)CFSTR("function"), v99);
  v100 = (void *)objc_claimAutoreleasedReturnValue();
  v104 = objc_msgSend_integerValue(v100, v101, v102, v103);

  if (!v104)
  {
    v109 = CFSTR("function");
    objc_msgSend_numberWithInteger_(MEMORY[0x1E0CB37E8], v105, 0, v106);
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v110 = v33;
    objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v107, (uint64_t)&v110, (uint64_t)&v109, 1);
    v108 = (void *)objc_claimAutoreleasedReturnValue();
    v9[2](v9, 27, v108);

    goto LABEL_8;
  }
LABEL_9:
  v44 = 2;
LABEL_10:

  return v44;
}

uint64_t sub_18A77743C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a4 + 16))(a4, 17, 0);
}

uint64_t sub_18A777454(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  void (**v9)(id, uint64_t, _QWORD);
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  int isEqualToString;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  int v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const char *v34;
  uint64_t v35;
  void *v36;
  const char *v37;
  uint64_t v38;
  int v39;
  const char *v40;
  uint64_t v41;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  objc_msgSend_name(v8, v10, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v14, 9, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v13, v17, (uint64_t)v16, v18);

  if (isEqualToString)
  {
    objc_msgSend_transitionToState_withEvent_(v7, v20, *(_QWORD *)(a1 + 32), (uint64_t)v8);
  }
  else
  {
    objc_msgSend_name(v8, v20, v21, v22);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v24, 8, v25);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v29 = objc_msgSend_isEqualToString_(v23, v27, (uint64_t)v26, v28);

    if (v29)
    {
      v9[2](v9, 17, 0);
    }
    else
    {
      objc_msgSend_name(v8, v30, v31, v32);
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v34, 12, v35);
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      v39 = objc_msgSend_isEqualToString_(v33, v37, (uint64_t)v36, v38);

      if (!v39)
      {
        v41 = 1;
        goto LABEL_8;
      }
      objc_msgSend_transitionToState_withEvent_(v7, v40, *(_QWORD *)(a1 + 40), (uint64_t)v8);
    }
  }
  v41 = 2;
LABEL_8:

  return v41;
}

void sub_18A7775B8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  void (*v5)(void);
  _QWORD *v6;

  v5 = (void (*)(void))a4[2];
  v6 = a4;
  v5();
  ((void (*)(id, uint64_t, _QWORD))a4[2])(v6, 16, 0);
  ((void (*)(id, uint64_t, _QWORD))a4[2])(v6, 12, 0);

}

uint64_t sub_18A777620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a4 + 16))(a4, 14, 0);
}

uint64_t sub_18A777634(uint64_t *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  int isEqualToString;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  int v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  int v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v43;
  const char *v44;
  uint64_t v45;
  void *v46;
  const char *v47;
  uint64_t v48;
  int v49;

  v5 = a2;
  v6 = a3;
  objc_msgSend_name(v6, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v11, 9, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v10, v14, (uint64_t)v13, v15);

  if (!isEqualToString)
  {
    objc_msgSend_name(v6, v17, v18, v19);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v22, 8, v23);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = objc_msgSend_isEqualToString_(v21, v25, (uint64_t)v24, v26);

    if (v27)
    {
      *(_BYTE *)(*(_QWORD *)(a1[5] + 8) + 24) = 1;
    }
    else
    {
      objc_msgSend_name(v6, v28, v29, v30);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v32, 7, v33);
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      v37 = objc_msgSend_isEqualToString_(v31, v35, (uint64_t)v34, v36);

      if (v37)
      {
        v20 = a1[6];
        goto LABEL_7;
      }
      objc_msgSend_name(v6, v38, v39, v40);
      v43 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v44, 6, v45);
      v46 = (void *)objc_claimAutoreleasedReturnValue();
      v49 = objc_msgSend_isEqualToString_(v43, v47, (uint64_t)v46, v48);

      v41 = 1;
      if (!v49)
        goto LABEL_9;
      *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 1;
    }
    if (*(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) && *(_BYTE *)(*(_QWORD *)(a1[5] + 8) + 24))
      objc_msgSend_transitionToState_withEvent_(v5, v28, a1[4], (uint64_t)v6);
    goto LABEL_8;
  }
  v20 = a1[5];
LABEL_7:
  *(_BYTE *)(*(_QWORD *)(v20 + 8) + 24) = 0;
LABEL_8:
  v41 = 2;
LABEL_9:

  return v41;
}

void sub_18A7777F8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void (*v5)(uint64_t, uint64_t);
  void (**v6)(id, uint64_t, _QWORD);

  v5 = *(void (**)(uint64_t, uint64_t))(a3 + 16);
  v6 = a4;
  v5(a3, 2);
  v6[2](v6, 6, 0);
  v6[2](v6, 23, 0);

}

void sub_18A777860(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4)
{
  void (*v6)(_QWORD *, uint64_t, _QWORD);
  _QWORD *v7;
  void (**v8)(id, uint64_t);

  v6 = (void (*)(_QWORD *, uint64_t, _QWORD))a4[2];
  v7 = a4;
  v8 = a3;
  v6(v7, 9, 0);
  ((void (*)(id, uint64_t, _QWORD))a4[2])(v7, 7, 0);

  v8[2](v8, 2);
}

uint64_t sub_18A7778E0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  void (**v9)(id, uint64_t, _QWORD);
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  int isEqualToString;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  int v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const char *v34;
  uint64_t v35;
  void *v36;
  const char *v37;
  uint64_t v38;
  int v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const char *v44;
  uint64_t v45;
  void *v46;
  const char *v47;
  uint64_t v48;
  char v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v55;
  const char *v56;
  uint64_t v57;
  void *v58;
  const char *v59;
  uint64_t v60;
  int v61;
  const char *v62;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  objc_msgSend_name(v8, v10, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v14, 9, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v13, v17, (uint64_t)v16, v18);

  if (isEqualToString)
  {
    objc_msgSend_transitionToState_withEvent_(v7, v20, *(_QWORD *)(a1 + 32), (uint64_t)v8);
  }
  else
  {
    objc_msgSend_name(v8, v20, v21, v22);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v24, 8, v25);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v29 = objc_msgSend_isEqualToString_(v23, v27, (uint64_t)v26, v28);

    if (v29)
    {
      v9[2](v9, 17, 0);
    }
    else
    {
      objc_msgSend_name(v8, v30, v31, v32);
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v34, 12, v35);
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      v39 = objc_msgSend_isEqualToString_(v33, v37, (uint64_t)v36, v38);

      if ((v39 & 1) == 0)
      {
        objc_msgSend_name(v8, v40, v41, v42);
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v44, 17, v45);
        v46 = (void *)objc_claimAutoreleasedReturnValue();
        v49 = objc_msgSend_isEqualToString_(v43, v47, (uint64_t)v46, v48);

        if ((v49 & 1) == 0)
        {
          objc_msgSend_name(v8, v50, v51, v52);
          v55 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v56, 3, v57);
          v58 = (void *)objc_claimAutoreleasedReturnValue();
          v61 = objc_msgSend_isEqualToString_(v55, v59, (uint64_t)v58, v60);

          if (!v61)
          {
            v53 = 1;
            goto LABEL_9;
          }
          v9[2](v9, 9, 0);
          v9[2](v9, 8, 0);
          objc_msgSend_transitionToState_withEvent_(v7, v62, *(_QWORD *)(a1 + 40), (uint64_t)v8);
        }
      }
    }
  }
  v53 = 2;
LABEL_9:

  return v53;
}

void sub_18A777AF0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  void (**v5)(id, uint64_t, _QWORD);
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  char isEqualToString;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  char v25;
  id v26;

  v26 = a2;
  v5 = a4;
  objc_msgSend_name(v26, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v10, 16, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v9, v13, (uint64_t)v12, v14);

  if ((isEqualToString & 1) != 0
    || (objc_msgSend_name(v26, v16, v17, v18),
        v19 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v20, 3, v21),
        v22 = (void *)objc_claimAutoreleasedReturnValue(),
        v25 = objc_msgSend_isEqualToString_(v19, v23, (uint64_t)v22, v24),
        v22,
        v19,
        (v25 & 1) == 0))
  {
    v5[2](v5, 24, 0);
  }

}

uint64_t sub_18A777BD8(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  void (**v9)(id, uint64_t, void *);
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  int isEqualToString;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  int v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const char *v34;
  uint64_t v35;
  void *v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  void *v43;
  const char *v44;
  void *v45;
  uint64_t v46;
  const __CFString *v48;
  _QWORD v49[2];

  v49[1] = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v8 = a3;
  v9 = a4;
  objc_msgSend_name(v8, v10, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v14, 15, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v13, v17, (uint64_t)v16, v18);

  if (isEqualToString)
  {
    objc_msgSend_transitionToState_withEvent_(v7, v20, *(_QWORD *)(a1 + 32), (uint64_t)v8);
  }
  else
  {
    objc_msgSend_name(v8, v20, v21, v22);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v24, 18, v25);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v29 = objc_msgSend_isEqualToString_(v23, v27, (uint64_t)v26, v28);

    if (!v29
      || (objc_msgSend_userInfo(v8, v30, v31, v32),
          v33 = (void *)objc_claimAutoreleasedReturnValue(),
          objc_msgSend_objectForKeyedSubscript_(v33, v34, (uint64_t)CFSTR("function"), v35),
          v36 = (void *)objc_claimAutoreleasedReturnValue(),
          v40 = objc_msgSend_integerValue(v36, v37, v38, v39),
          v36,
          v33,
          v40 != 1))
    {
      v46 = 1;
      goto LABEL_8;
    }
    v48 = CFSTR("function");
    objc_msgSend_numberWithInteger_(MEMORY[0x1E0CB37E8], v41, 1, v42);
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    v49[0] = v43;
    objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v44, (uint64_t)v49, (uint64_t)&v48, 1);
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    v9[2](v9, 27, v45);

  }
  v46 = 2;
LABEL_8:

  return v46;
}

void sub_18A777DB0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void (*v5)(uint64_t, uint64_t);
  void (**v6)(id, uint64_t, _QWORD);

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 0;
  v5 = *(void (**)(uint64_t, uint64_t))(a3 + 16);
  v6 = a4;
  v5(a3, 3);
  v6[2](v6, 25, 0);

}

void sub_18A777E10(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4)
{
  int v6;
  void (*v7)(_QWORD *, uint64_t, _QWORD);
  _QWORD *v8;
  void (**v9)(id, uint64_t);

  v6 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  v7 = (void (*)(_QWORD *, uint64_t, _QWORD))a4[2];
  v8 = a4;
  v9 = a3;
  if (v6)
  {
    v7(v8, 9, 0);
    v7 = (void (*)(_QWORD *, uint64_t, _QWORD))a4[2];
  }
  v7(v8, 21, 0);

  v9[2](v9, 3);
}

uint64_t sub_18A777EA8(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  void (**v9)(id, uint64_t, void *);
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  int isEqualToString;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v34;
  const char *v35;
  uint64_t v36;
  void *v37;
  const char *v38;
  uint64_t v39;
  int v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  const char *v45;
  uint64_t v46;
  void *v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  const char *v52;
  uint64_t v53;
  void *v54;
  const char *v55;
  void *v56;
  void *v57;
  const char *v58;
  uint64_t v59;
  void *v60;
  const char *v61;
  uint64_t v62;
  int v63;
  const __CFString *v64;
  _QWORD v65[2];

  v65[1] = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v8 = a3;
  v9 = a4;
  objc_msgSend_name(v8, v10, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v14, 17, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v13, v17, (uint64_t)v16, v18);

  if (isEqualToString)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
  }
  else
  {
    objc_msgSend_name(v8, v20, v21, v22);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v24, 16, v25);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v29 = objc_msgSend_isEqualToString_(v23, v27, (uint64_t)v26, v28);

    if (!v29)
    {
      objc_msgSend_name(v8, v20, v30, v31);
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v35, 18, v36);
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      v40 = objc_msgSend_isEqualToString_(v34, v38, (uint64_t)v37, v39);

      if (v40)
      {
        objc_msgSend_userInfo(v8, v41, v42, v43);
        v44 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_objectForKeyedSubscript_(v44, v45, (uint64_t)CFSTR("function"), v46);
        v47 = (void *)objc_claimAutoreleasedReturnValue();
        v51 = objc_msgSend_integerValue(v47, v48, v49, v50);

        if (v51 == 2)
        {
          v64 = CFSTR("function");
          v32 = 2;
          objc_msgSend_numberWithInteger_(MEMORY[0x1E0CB37E8], v52, 2, v53);
          v54 = (void *)objc_claimAutoreleasedReturnValue();
          v65[0] = v54;
          objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v55, (uint64_t)v65, (uint64_t)&v64, 1);
          v56 = (void *)objc_claimAutoreleasedReturnValue();
          v9[2](v9, 27, v56);

          goto LABEL_7;
        }
      }
      else
      {
        objc_msgSend_name(v8, v41, v42, v43);
        v57 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v58, 15, v59);
        v60 = (void *)objc_claimAutoreleasedReturnValue();
        v63 = objc_msgSend_isEqualToString_(v57, v61, (uint64_t)v60, v62);

        if ((v63 & 1) != 0)
          goto LABEL_6;
      }
      v32 = 1;
      goto LABEL_7;
    }
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
  }
  objc_msgSend_transitionToState_withEvent_(v7, v20, *(_QWORD *)(a1 + 32), (uint64_t)v8);
LABEL_6:
  v32 = 2;
LABEL_7:

  return v32;
}

void sub_18A778520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  id *v17;
  uint64_t v18;

  objc_destroyWeak(v17);
  _Block_object_dispose(&a17, 8);
  objc_destroyWeak((id *)(v18 - 64));
  _Unwind_Resume(a1);
}

void sub_18A778554(uint64_t a1, uint64_t a2, void *a3)
{
  id *v5;
  id v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char v16;
  id WeakRetained;

  v5 = (id *)(a1 + 40);
  v6 = a3;
  WeakRetained = objc_loadWeakRetained(v5);
  objc_msgSend_objectForKeyedSubscript_(v6, v7, (uint64_t)CFSTR("function"), v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v13 = objc_msgSend_integerValue(v9, v10, v11, v12);
  v15 = WeakRetained;
  if (v13 == *(_QWORD *)(a1 + 48))
  {
    if (a2 == 27)
    {
      v16 = 1;
      goto LABEL_6;
    }
    if (a2 == 28)
    {
      v16 = 0;
LABEL_6:
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = v16;
      objc_msgSend_setInternalActionHandler_(WeakRetained, (const char *)WeakRetained, 0, v14);
      v15 = WeakRetained;
    }
  }

}

void sub_18A7787D4(uint64_t a1, uint64_t a2, void *a3)
{
  __CFString *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  id WeakRetained;
  void *v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void (**v15)(_QWORD, _QWORD, _QWORD);
  void (**v16)(_QWORD, _QWORD, _QWORD);
  NSObject *v17;
  const char *v18;
  uint64_t v19;
  void *v20;
  const __CFString *v21;
  const __CFString *v22;
  _BYTE v23[22];
  __int16 v24;
  const __CFString *v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (a2 <= 26)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v10 = (void *)ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
    {
      v17 = v10;
      objc_msgSend_nameFromResponseAction_(CKUploadRequestManagerStateMachine, v18, a2, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = CFSTR(" with userInfo ");
      v22 = &stru_1E1F66ED0;
      *(_DWORD *)v23 = 138543874;
      *(_QWORD *)&v23[4] = v20;
      if (v5)
        v22 = v5;
      else
        v21 = &stru_1E1F66ED0;
      *(_WORD *)&v23[12] = 2114;
      *(_QWORD *)&v23[14] = v21;
      v24 = 2112;
      v25 = v22;
      _os_log_debug_impl(&dword_18A5C5000, v17, OS_LOG_TYPE_DEBUG, "Invoking state action %{public}@%{public}@%@", v23, 0x20u);

    }
  }
  objc_msgSend_internalActionHandler(WeakRetained, v6, v7, v8, *(_OWORD *)v23);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  if (v11)
  {
    objc_msgSend_internalActionHandler(WeakRetained, v12, v13, v14);
    v15 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
    ((void (**)(_QWORD, uint64_t, __CFString *))v15)[2](v15, a2, v5);

  }
  objc_msgSend_actionHandler(WeakRetained, v12, v13, v14);
  v16 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, uint64_t, __CFString *))v16)[2](v16, a2, v5);

}

uint64_t sub_18A7789A0(uint64_t a1, void *a2)
{
  id v2;
  id v4;
  id WeakRetained;
  id v6;
  unint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  char isEqualToString;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  const char *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  const char *v63;
  uint64_t v64;
  uint64_t v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  NSObject *v71;
  const char *v72;
  uint64_t v73;
  uint64_t v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  const char *v79;
  uint64_t v80;
  uint64_t v81;
  const char *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  NSObject *v87;
  const char *v88;
  uint64_t v89;
  uint64_t v90;
  const char *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  __CFString *v95;
  const char *v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  __CFString *v100;
  void *v101;
  const char *v102;
  uint64_t v103;
  void *v104;
  const char *v105;
  uint64_t v106;
  uint8_t buf[4];
  id v108;
  __int16 v109;
  uint64_t v110;
  __int16 v111;
  id v112;
  uint64_t v113;

  v113 = *MEMORY[0x1E0C80C00];
  v4 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  v6 = objc_loadWeakRetained((id *)(a1 + 72));
  v7 = 0x1E0D1B000uLL;
  objc_msgSend_enterState(MEMORY[0x1E0D1B440], v8, v9, v10);
  v14 = (id)objc_claimAutoreleasedReturnValue();
  if (v14 == v4)
  {
    isEqualToString = 1;
  }
  else
  {
    objc_msgSend_exitState(MEMORY[0x1E0D1B440], v11, v12, v13);
    v18 = (id)objc_claimAutoreleasedReturnValue();
    if (v18 == v4)
    {
      isEqualToString = 1;
    }
    else
    {
      objc_msgSend_initialTransition(MEMORY[0x1E0D1B440], v15, v16, v17);
      v2 = (id)objc_claimAutoreleasedReturnValue();
      if (v2 == v4)
      {
        isEqualToString = 1;
      }
      else
      {
        objc_msgSend_name(v4, v19, v20, v21);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_nameFromStateEvent_(CKUploadRequestManagerStateMachine, v23, 18, v24);
        v25 = a1;
        v26 = WeakRetained;
        v27 = v6;
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        isEqualToString = objc_msgSend_isEqualToString_(v22, v29, (uint64_t)v28, v30);

        v6 = v27;
        WeakRetained = v26;
        a1 = v25;
        v7 = 0x1E0D1B000;

      }
    }

  }
  objc_msgSend_userInfo(v4, v32, v33, v34);
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v35, v36, (uint64_t)CFSTR("uuid"), v37);
  v38 = (void *)objc_claimAutoreleasedReturnValue();

  if ((isEqualToString & 1) == 0)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v42 = (void *)ck_log_facility_data_repair;
    if (os_log_type_enabled((os_log_t)ck_log_facility_data_repair, OS_LOG_TYPE_DEBUG))
    {
      v87 = v42;
      *(_DWORD *)buf = 138412802;
      v108 = v4;
      v109 = 2048;
      v110 = objc_msgSend_hash(v38, v88, v89, v90);
      v111 = 2112;
      v112 = v6;
      _os_log_debug_impl(&dword_18A5C5000, v87, OS_LOG_TYPE_DEBUG, "Processing event %@ (hash %lu) in state %@", buf, 0x20u);

    }
  }
  objc_msgSend_initialTransition(*(void **)(v7 + 1088), v39, v40, v41);
  v43 = (id)objc_claimAutoreleasedReturnValue();

  if (v43 == v4)
  {
    objc_msgSend_setEventCausingTransition_(WeakRetained, v44, 0, v46);
LABEL_37:
    v53 = 2;
    goto LABEL_38;
  }
  objc_msgSend_enterState(*(void **)(v7 + 1088), v44, v45, v46);
  v47 = (id)objc_claimAutoreleasedReturnValue();

  if (v47 == v4)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v54 = (id)ck_log_facility_data_repair;
    if (os_log_type_enabled(v54, OS_LOG_TYPE_DEBUG))
    {
      objc_msgSend_eventCausingTransition(WeakRetained, v55, v56, v57);
      v94 = (void *)objc_claimAutoreleasedReturnValue();
      if (v94)
      {
        v101 = (void *)MEMORY[0x1E0CB3940];
        objc_msgSend_eventCausingTransition(WeakRetained, v91, v92, v93);
        v2 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_stringWithFormat_(v101, v102, (uint64_t)CFSTR(" with event %@"), v103, v2);
        v95 = (__CFString *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v95 = &stru_1E1F66ED0;
      }
      *(_DWORD *)buf = 138412546;
      v108 = v6;
      v109 = 2112;
      v110 = (uint64_t)v95;
      _os_log_debug_impl(&dword_18A5C5000, v54, OS_LOG_TYPE_DEBUG, "Entering state %@%@", buf, 0x16u);
      if (v94)
      {

      }
    }

    if (!*(_QWORD *)(a1 + 32))
      goto LABEL_37;
    objc_msgSend_enterStateHandler(WeakRetained, v58, v59, v60);
    v61 = (void *)objc_claimAutoreleasedReturnValue();

    v62 = *(_QWORD *)(a1 + 32);
    objc_msgSend_eventCausingTransition(WeakRetained, v63, v64, v65);
    v69 = (void *)objc_claimAutoreleasedReturnValue();
    if (v61)
    {
      objc_msgSend_enterStateHandler(WeakRetained, v66, v67, v68);
      v70 = objc_claimAutoreleasedReturnValue();
LABEL_33:
      v85 = (void *)v70;
      (*(void (**)(uint64_t, void *, uint64_t, _QWORD))(v62 + 16))(v62, v69, v70, *(_QWORD *)(a1 + 40));

LABEL_36:
      goto LABEL_37;
    }
LABEL_35:
    (*(void (**)(uint64_t, void *, void *, _QWORD))(v62 + 16))(v62, v69, &unk_1E1F64868, *(_QWORD *)(a1 + 40));
    goto LABEL_36;
  }
  objc_msgSend_exitState(*(void **)(v7 + 1088), v48, v49, v50);
  v51 = (id)objc_claimAutoreleasedReturnValue();

  if (v51 == v4)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v71 = (id)ck_log_facility_data_repair;
    if (os_log_type_enabled(v71, OS_LOG_TYPE_DEBUG))
    {
      objc_msgSend_eventCausingTransition(WeakRetained, v72, v73, v74);
      v99 = (void *)objc_claimAutoreleasedReturnValue();
      if (v99)
      {
        v104 = (void *)MEMORY[0x1E0CB3940];
        objc_msgSend_eventCausingTransition(WeakRetained, v96, v97, v98);
        v2 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend_stringWithFormat_(v104, v105, (uint64_t)CFSTR(" with event %@"), v106, v2);
        v100 = (__CFString *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v100 = &stru_1E1F66ED0;
      }
      *(_DWORD *)buf = 138412546;
      v108 = v6;
      v109 = 2112;
      v110 = (uint64_t)v100;
      _os_log_debug_impl(&dword_18A5C5000, v71, OS_LOG_TYPE_DEBUG, "Exiting state %@%@", buf, 0x16u);
      if (v99)
      {

      }
    }

    if (!*(_QWORD *)(a1 + 48))
      goto LABEL_37;
    objc_msgSend_exitStateHandler(WeakRetained, v75, v76, v77);
    v78 = (void *)objc_claimAutoreleasedReturnValue();

    v62 = *(_QWORD *)(a1 + 48);
    objc_msgSend_eventCausingTransition(WeakRetained, v79, v80, v81);
    v69 = (void *)objc_claimAutoreleasedReturnValue();
    if (v78)
    {
      objc_msgSend_exitStateHandler(WeakRetained, v82, v83, v84);
      v70 = objc_claimAutoreleasedReturnValue();
      goto LABEL_33;
    }
    goto LABEL_35;
  }
  v52 = *(_QWORD *)(a1 + 56);
  if (v52)
    v53 = (*(uint64_t (**)(uint64_t, id, id, _QWORD))(v52 + 16))(v52, WeakRetained, v4, *(_QWORD *)(a1 + 40));
  else
    v53 = 1;
LABEL_38:

  return v53;
}

uint64_t sub_18A7797C8(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_CKMap_(a1, a2, (uint64_t)&unk_1E1F58758, a4);
}

id sub_18A7797D4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  objc_msgSend_equivalencyProperties(a2, (const char *)a2, a3, a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_dictionary(v4, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

void sub_18A779AB8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  const char *v19;
  _QWORD v20[5];
  id v21;

  v5 = a3;
  v6 = *(_QWORD **)(a1 + 32);
  v7 = v6[2];
  v8 = v6[3];
  v9 = v6[4];
  v10 = v6[5];
  v11 = v6[6];
  v12 = (void *)MEMORY[0x1E0CB37E8];
  v13 = v6[9];
  v14 = a2;
  objc_msgSend_numberWithUnsignedInteger_(v12, v15, v13, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = sub_18A779BDC;
  v20[3] = &unk_1E1F64A90;
  v20[4] = *(_QWORD *)(a1 + 32);
  v21 = v5;
  v18 = v5;
  objc_msgSend_select_from_where_bindings_orderBy_limit_offset_block_(v14, v19, v7, v8, v9, v10, v11, &unk_1E1FC4AA8, v17, v20);

}

void sub_18A779BDC(uint64_t a1, void *a2, _BYTE *a3)
{
  const char *v5;
  uint64_t v6;
  id v7;

  v7 = a2;
  if ((*(unsigned int (**)(void))(*(_QWORD *)(a1 + 40) + 16))())
    *a3 = 1;
  else
    objc_msgSend_addObject_(*(void **)(*(_QWORD *)(a1 + 32) + 56), v5, (uint64_t)v7, v6);

}

const __CFString *CKStringFromParticipantPermission(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3)
    return CFSTR("unknown");
  else
    return off_1E1F64B18[a1 - 1];
}

__CFString *CKStringFromParticipantRole(unint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 5)
    return off_1E1F64AF0[a1];
  objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], a2, (uint64_t)CFSTR("unknown %ld"), a4, a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

const __CFString *CKStringFromParticipantAcceptanceStatus(unint64_t a1)
{
  if (a1 > 4)
    return CFSTR("Removed");
  else
    return off_1E1F64B38[a1];
}

const __CFString *CKStringFromParticipantInvitationTokenStatus(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("Unknown");
  else
    return off_1E1F64B60[a1 - 1];
}

void sub_18A77AAD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_18A77B014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_18A77B048(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  id v5;
  _QWORD v7[5];
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v8 = 0;
  v9 = &v8;
  v10 = 0x2050000000;
  v4 = (void *)qword_1EDF75380;
  v11 = qword_1EDF75380;
  if (!qword_1EDF75380)
  {
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 3221225472;
    v7[2] = sub_18A77BAD4;
    v7[3] = &unk_1E1F5F618;
    v7[4] = &v8;
    sub_18A77BAD4((uint64_t)v7, a2, a3, a4);
    v4 = (void *)v9[3];
  }
  v5 = v4;
  _Block_object_dispose(&v8, 8);
  return v5;
}

void sub_18A77B0E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A77B100(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18A77B110(uint64_t a1)
{

}

id sub_18A77B118(_QWORD *a1, const char *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id obj;

  v3 = (void *)a1[4];
  v2 = a1[5];
  v4 = *(_QWORD *)(a1[6] + 8);
  obj = *(id *)(v4 + 40);
  objc_msgSend_unifiedContactsMatchingPredicate_keysToFetch_error_(v3, a2, (uint64_t)a2, v2, &obj);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_storeStrong((id *)(v4 + 40), obj);
  return v5;
}

void sub_18A77BAD4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  void *v11;
  const char *v12;

  sub_18A77BB98(a1, a2, a3, a4);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("CNContact");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1EDF75380 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v5, v6, v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v9, (uint64_t)"Class getCNContactClass(void)_block_invoke", v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v8, v12, (uint64_t)v11, (uint64_t)CFSTR("CKShareParticipant.m"), 25, CFSTR("Unable to find class %s"), "CNContact");

    __break(1u);
  }
}

void *sub_18A77BB98(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  const char *v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  void *v10;

  if (!qword_1EDF75388)
    qword_1EDF75388 = _sl_dlopen();
  v4 = (void *)qword_1EDF75388;
  if (!qword_1EDF75388)
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], a2, a3, a4);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v6, (uint64_t)"void *ContactsLibrary(void)", v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v4, v9, (uint64_t)v8, (uint64_t)CFSTR("CKShareParticipant.m"), 24, CFSTR("%s"), 0);

    __break(1u);
    free(v10);
  }
  return v4;
}

void sub_18A77BC9C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  void *v11;
  const char *v12;

  sub_18A77BB98(a1, a2, a3, a4);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("CNPhoneNumber");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD96C88 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v5, v6, v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v9, (uint64_t)"Class getCNPhoneNumberClass(void)_block_invoke", v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v8, v12, (uint64_t)v11, (uint64_t)CFSTR("CKShareParticipant.m"), 26, CFSTR("Unable to find class %s"), "CNPhoneNumber");

    __break(1u);
  }
}

uint64_t CKDPDistributedTimestampsVersionVectorReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  int v14;
  int v15;
  uint64_t result;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v6 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v3;
      v11 = *(_QWORD *)(a2 + v10);
      if (v11 == -1 || v11 >= *(_QWORD *)(a2 + *v4))
        break;
      v12 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v11);
      *(_QWORD *)(a2 + v10) = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      v13 = v8++ >= 9;
      if (v13)
      {
        v9 = 0;
        v14 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v14 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v9 = 0;
LABEL_14:
    v15 = v9 & 7;
    if (v14 || v15 == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v9 >> 3))
    {
      case 2u:
        if (v15 != 2)
        {
          v42 = 0;
          v43 = 0;
          v44 = 0;
          while (1)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
              break;
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v44 |= (unint64_t)(v47 & 0x7F) << v42;
            if (v47 < 0)
            {
              v42 += 7;
              v13 = v43++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_89;
          }
LABEL_88:
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_89:
          PBRepeatedUInt64Add();
LABEL_108:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        result = PBReaderPlaceMark();
        if ((_DWORD)result)
        {
          while (1)
          {
            if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4) || *(_BYTE *)(a2 + *v5))
              goto LABEL_73;
            v18 = 0;
            v19 = 0;
            v20 = 0;
            while (1)
            {
              v21 = *v3;
              v22 = *(_QWORD *)(a2 + v21);
              if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
                break;
              v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v22);
              *(_QWORD *)(a2 + v21) = v22 + 1;
              v20 |= (unint64_t)(v23 & 0x7F) << v18;
              if (v23 < 0)
              {
                v18 += 7;
                v13 = v19++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_31;
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
            PBRepeatedUInt64Add();
          }
        }
        return result;
      case 3u:
        if (v15 != 2)
        {
          v48 = 0;
          v49 = 0;
          v50 = 0;
          while (1)
          {
            v51 = *v3;
            v52 = *(_QWORD *)(a2 + v51);
            if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
              goto LABEL_88;
            v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v52);
            *(_QWORD *)(a2 + v51) = v52 + 1;
            v50 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              v13 = v49++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_89;
          }
        }
        result = PBReaderPlaceMark();
        if (!(_DWORD)result)
          return result;
        while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
        {
          v24 = 0;
          v25 = 0;
          v26 = 0;
          while (1)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
              break;
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              v13 = v25++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_46;
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_46:
          PBRepeatedUInt64Add();
        }
        goto LABEL_73;
      case 4u:
        if (v15 != 2)
        {
          v54 = 0;
          v55 = 0;
          v56 = 0;
          while (1)
          {
            v57 = *v3;
            v58 = *(_QWORD *)(a2 + v57);
            if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
              break;
            v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v58);
            *(_QWORD *)(a2 + v57) = v58 + 1;
            v56 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              v13 = v55++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_105;
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_105:
          PBRepeatedInt32Add();
          goto LABEL_108;
        }
        result = PBReaderPlaceMark();
        if (!(_DWORD)result)
          return result;
        while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
        {
          v30 = 0;
          v31 = 0;
          v32 = 0;
          while (1)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
              break;
            v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v34);
            *(_QWORD *)(a2 + v33) = v34 + 1;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if (v35 < 0)
            {
              v30 += 7;
              v13 = v31++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_59;
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_59:
          PBRepeatedInt32Add();
        }
        goto LABEL_73;
      case 5u:
        if (v15 == 2)
        {
          result = PBReaderPlaceMark();
          if (!(_DWORD)result)
            return result;
          while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
          {
            v36 = 0;
            v37 = 0;
            v38 = 0;
            while (1)
            {
              v39 = *v3;
              v40 = *(_QWORD *)(a2 + v39);
              if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
                break;
              v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v40);
              *(_QWORD *)(a2 + v39) = v40 + 1;
              v38 |= (unint64_t)(v41 & 0x7F) << v36;
              if (v41 < 0)
              {
                v36 += 7;
                v13 = v37++ >= 9;
                if (!v13)
                  continue;
              }
              goto LABEL_72;
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_72:
            PBRepeatedUInt32Add();
          }
LABEL_73:
          PBReaderRecallMark();
        }
        else
        {
          v60 = 0;
          v61 = 0;
          v62 = 0;
          while (1)
          {
            v63 = *v3;
            v64 = *(_QWORD *)(a2 + v63);
            if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
              break;
            v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v6) + v64);
            *(_QWORD *)(a2 + v63) = v64 + 1;
            v62 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              v13 = v61++ >= 9;
              if (!v13)
                continue;
            }
            goto LABEL_107;
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_107:
          PBRepeatedUInt32Add();
        }
        goto LABEL_108;
      default:
        if ((PBReaderSkipValueWithTag() & 1) != 0)
          goto LABEL_108;
        return 0;
    }
  }
}

uint64_t sub_18A77D3B8()
{
  return 1;
}

uint64_t sub_18A77DCB8()
{
  return 1;
}

void sub_18A77E724(uint64_t a1, void *a2)
{
  if (a1)
    objc_storeStrong((id *)(a1 + 16), a2);
}

BOOL sub_18A77EA60(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_indegree(a2, (const char *)a2, a3, a4) == 0;
}

void sub_18A77ED3C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 512) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 512);
    *(_QWORD *)(v8 + 512) = v7;

  }
}

void sub_18A77EECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A77EEE4(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A77EF0C(uint64_t a1)
{

}

void sub_18A77EF14(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 512));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A77FE38(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void sub_18A77FFC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A77FFE0(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A780008(uint64_t a1)
{

}

void sub_18A780010(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A78016C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 528) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 528);
    *(_QWORD *)(v8 + 528) = v7;

  }
}

void sub_18A7802FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A780314(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 528));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A781718(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 504) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 504);
    *(_QWORD *)(v8 + 504) = v7;

  }
}

void sub_18A7818A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A7818C0(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A7818E8(uint64_t a1)
{

}

void sub_18A7818F0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 504));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A781A4C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 512) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 512);
    *(_QWORD *)(v8 + 512) = v7;

  }
}

void sub_18A781BDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A781BF4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 512));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A78201C(uint64_t a1, void *a2)
{
  __CFString *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  int v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  NSObject *v27;
  double v28;
  NSObject *v29;
  dispatch_time_t v30;
  id v31;
  uint64_t v32;
  NSObject *v33;
  double v34;
  _QWORD v35[4];
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint8_t buf[4];
  const __CFString *v45;
  __int16 v46;
  double v47;
  __int16 v48;
  _QWORD v49[3];

  v49[2] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend_userInfo(v3, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_allKeys(v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend_containsObject_(v11, v12, (uint64_t)CFSTR("CKRetryAfter"), v13);

  if (!v14)
  {
LABEL_19:
    (*(void (**)(void))(*(_QWORD *)(a1 + 72) + 16))();
    goto LABEL_20;
  }
  if (!*(_QWORD *)(a1 + 88))
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v33 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138412290;
      v45 = v3;
      _os_log_debug_impl(&dword_18A5C5000, v33, OS_LOG_TYPE_DEBUG, "Got a retryable error %@, but no more retries left, reporting it", buf, 0xCu);
    }
    goto LABEL_19;
  }
  objc_msgSend_userInfo(v3, v15, v16, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v18, v19, (uint64_t)CFSTR("CKRetryAfter"), v20);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_doubleValue(v21, v22, v23, v24);
  v26 = v25;

  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v27 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 138544130;
    v45 = CFSTR("CKRetryAfter");
    v46 = 2048;
    v47 = v26;
    v48 = 1024;
    LODWORD(v49[0]) = 0;
    WORD2(v49[0]) = 1024;
    *(_DWORD *)((char *)v49 + 6) = 60;
    _os_log_debug_impl(&dword_18A5C5000, v27, OS_LOG_TYPE_DEBUG, "Got a retryable error, found a %{public}@ header with a value %.1f, will now clip it to [%d, %d] range", buf, 0x22u);
  }
  v28 = 0.0;
  if (v26 >= 0.0)
  {
    v28 = v26;
    if (v26 > 60.0)
      v28 = 60.0;
  }
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v29 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
  {
    v34 = *(double *)(a1 + 88);
    *(_DWORD *)buf = 134218498;
    v45 = *(const __CFString **)&v28;
    v46 = 2048;
    v47 = v34;
    v48 = 2112;
    v49[0] = v3;
    _os_log_debug_impl(&dword_18A5C5000, v29, OS_LOG_TYPE_DEBUG, "Got a retryable error, delay is %.1f seconds, retries left %lu, scheduling retry. The error was %@", buf, 0x20u);
  }
  v30 = dispatch_time(0, (uint64_t)(v28 * 1000000000.0));
  v35[0] = MEMORY[0x1E0C809B0];
  v35[1] = 3221225472;
  v35[2] = sub_18A7823E8;
  v35[3] = &unk_1E1F64C28;
  v36 = *(id *)(a1 + 32);
  v37 = *(id *)(a1 + 40);
  v38 = *(id *)(a1 + 48);
  v31 = *(id *)(a1 + 56);
  v32 = *(_QWORD *)(a1 + 88);
  v39 = v31;
  v43 = v32;
  v40 = *(id *)(a1 + 64);
  v41 = *(id *)(a1 + 80);
  v42 = *(id *)(a1 + 72);
  dispatch_after(v30, MEMORY[0x1E0C80D38], v35);

LABEL_20:
}

void sub_18A7823E8(_QWORD *a1)
{
  NSObject *v2;
  CKInitiateParticipantVettingOperation *v3;
  const char *v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v2 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
  {
    v7 = a1[4];
    v8 = 138412290;
    v9 = v7;
    _os_log_debug_impl(&dword_18A5C5000, v2, OS_LOG_TYPE_DEBUG, "Calling into a retry block for operation %@", (uint8_t *)&v8, 0xCu);
  }
  v3 = [CKInitiateParticipantVettingOperation alloc];
  v5 = (void *)objc_msgSend_initWithShareMetadata_participantID_address_(v3, v4, a1[5], a1[6], a1[7]);
  objc_msgSend_retryTimes_container_participantVettingInitiatedBlock_participantVettingInitiationCompletionBlock_(v5, v6, a1[11], a1[8], a1[9], a1[10]);

}

uint64_t sub_18A783BA8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_recordID(a2, (const char *)a2, a3, a4);
}

uint64_t sub_18A783BB0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_recordID(a2, (const char *)a2, a3, a4);
}

uint64_t sub_18A783BB8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_recordID(a2, (const char *)a2, a3, a4);
}

uint64_t sub_18A783E00(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_zoneID(a2, (const char *)a2, a3, a4);
}

uint64_t sub_18A783E08(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_zoneID(a2, (const char *)a2, a3, a4);
}

uint64_t sub_18A783E10(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_zoneID(a2, (const char *)a2, a3, a4);
}

uint64_t sub_18A783E18(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_zoneID(a2, (const char *)a2, a3, a4);
}

uint64_t sub_18A783E20(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_zoneID(a2, (const char *)a2, a3, a4);
}

uint64_t sub_18A783E28(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_zoneID(a2, (const char *)a2, a3, a4);
}

void sub_18A784050(uint64_t a1)
{
  objc_class *v1;
  id v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  void *v7;

  if (byte_1EDF6A0E0)
    v1 = *(objc_class **)(a1 + 32);
  else
    v1 = NSClassFromString(CFSTR("CKDThrottleManager"));
  v2 = [v1 alloc];
  inited = objc_msgSend_initInternal(v2, v3, v4, v5);
  v7 = (void *)qword_1ECD96C98;
  qword_1ECD96C98 = inited;

}

void sub_18A784590(void **a1, void *a2)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  NSObject *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const __CFString *v23;
  const char *v24;
  uint64_t v25;
  const char *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id obj;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint8_t buf[4];
  const __CFString *v46;
  _BYTE v47[128];
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v6 = a2;
  if (a1)
  {
    v7 = (void *)objc_msgSend_mutableCopy(a1[1], v3, v4, v5);
    v41 = 0u;
    v42 = 0u;
    v43 = 0u;
    v44 = 0u;
    v39 = v6;
    obj = v6;
    v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v8, (uint64_t)&v41, (uint64_t)v47, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v42;
      do
      {
        v12 = 0;
        do
        {
          if (*(_QWORD *)v42 != v11)
            objc_enumerationMutation(obj);
          v13 = *(void **)(*((_QWORD *)&v41 + 1) + 8 * v12);
          if (ck_log_initialization_predicate != -1)
            dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
          v14 = (void *)ck_log_facility_ck;
          if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
          {
            v17 = v14;
            objc_msgSend_throttleID(v13, v18, v19, v20);
            v21 = objc_claimAutoreleasedReturnValue();
            v22 = (void *)v21;
            v23 = CFSTR("<throttleID unset>");
            if (v21)
              v23 = (const __CFString *)v21;
            *(_DWORD *)buf = 138543362;
            v46 = v23;
            _os_log_impl(&dword_18A5C5000, v17, OS_LOG_TYPE_INFO, "removing throttle: %{public}@", buf, 0xCu);

          }
          objc_msgSend_throttleWillBeRemoved_(a1, v15, (uint64_t)v13, v16);
          objc_msgSend_removeObject_(v7, v24, (uint64_t)v13, v25);
          ++v12;
        }
        while (v10 != v12);
        v10 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v26, (uint64_t)&v41, (uint64_t)v47, 16);
      }
      while (v10);
    }

    if (objc_msgSend_count(v7, v27, v28, v29))
    {
      v33 = objc_msgSend_copy(v7, v30, v31, v32);
      v34 = a1[1];
      a1[1] = (void *)v33;

    }
    else
    {
      v35 = a1[1];
      a1[1] = 0;

      objc_msgSend_throttleListBecameEmpty(a1, v36, v37, v38);
    }

    v6 = v39;
  }

}

uint64_t sub_18A784804(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_description(a2, (const char *)a2, a3, a4);
}

void sub_18A784F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A784F80(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18A784F90(uint64_t a1)
{

}

void sub_18A784F98(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v12 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;
  v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_18A785410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_18A785430(uint64_t a1, const char *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;

  objc_msgSend_errorWithDomain_code_format_(CKPrettyError, a2, (uint64_t)CFSTR("CKErrorDomain"), 12, CFSTR("Cannot append a zero-length segment to a streaming asset."));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    v5 = v3;
    (*(void (**)(uint64_t, _QWORD))(v4 + 16))(v4, 0);
    v3 = v5;
  }

}

void sub_18A78549C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  const char *v9;
  void *v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  void *v20;
  NSObject *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  id v26;
  id v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  const char *v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  const char *v57;
  uint64_t v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  const char *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  id v68;
  void *v69;
  uint64_t v70;
  const char *v71;
  uint64_t v72;
  void *v73;
  const char *v74;
  uint64_t v75;
  const char *v76;
  uint64_t v77;
  const char *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  const char *v82;
  void *v83;
  const char *v84;
  uint64_t v85;
  const char *v86;
  uint64_t v87;
  const char *v88;
  uint64_t v89;
  void *v90;
  const char *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  const char *v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  NSObject *v99;
  const char *v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  void *v104;
  NSObject *v105;
  const char *v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  _QWORD block[4];
  id v111;
  id v112;
  uint8_t buf[4];
  void *v114;
  uint64_t v115;

  v115 = *MEMORY[0x1E0C80C00];
  if (objc_msgSend_isAppending(*(void **)(a1 + 32), a2, a3, a4))
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v8 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
    {
      v10 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v114 = v10;
      _os_log_impl(&dword_18A5C5000, v8, OS_LOG_TYPE_INFO, "Trying to append to streaming asset while already appending %@", buf, 0xCu);
    }
    objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v9, (uint64_t)CFSTR("CKErrorDomain"), 1, CFSTR("An append is already in progress. Please wait until the current append has finished before appending again."));
  }
  else
  {
    objc_msgSend_streamingAsset(*(void **)(a1 + 32), v5, v6, v7);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_uploadURL(v11, v12, v13, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    if (v15)
      goto LABEL_19;
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v18 = (void *)ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
    {
      v104 = *(void **)(a1 + 32);
      v105 = v18;
      objc_msgSend_streamingAsset(v104, v106, v107, v108);
      v109 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v114 = v109;
      _os_log_error_impl(&dword_18A5C5000, v105, OS_LOG_TYPE_ERROR, "Missing uploadURL appending to streaming asset %@", buf, 0xCu);

    }
    objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v19, (uint64_t)CFSTR("CKErrorDomain"), 12, CFSTR("Missing upload URL for streaming asset. Try saving the streaming asset in a record to the server."));
  }
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  if (v20)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v21 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v114 = v20;
      _os_log_impl(&dword_18A5C5000, v21, OS_LOG_TYPE_INFO, "Error before starting streaming asset append: %@", buf, 0xCu);
    }
    objc_msgSend_callbackQueue(*(void **)(a1 + 32), v22, v23, v24);
    v25 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = sub_18A7859FC;
    block[3] = &unk_1E1F61C78;
    v26 = *(id *)(a1 + 64);
    v111 = v20;
    v112 = v26;
    v27 = v20;
    dispatch_async(v25, block);

    v28 = v112;
    goto LABEL_27;
  }
LABEL_19:
  objc_msgSend_setAppending_(*(void **)(a1 + 32), v16, 1, v17);
  objc_msgSend_setCurrentAppendCancelled_(*(void **)(a1 + 32), v29, 0, v30);
  objc_msgSend_setCompletionHandler_(*(void **)(a1 + 32), v31, *(_QWORD *)(a1 + 64), v32);
  v33 = (void *)objc_opt_class();
  v34 = *(_QWORD *)(a1 + 40);
  objc_msgSend_streamingAsset(*(void **)(a1 + 32), v35, v36, v37);
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_uploadURL(v38, v39, v40, v41);
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v43 = *(_QWORD *)(a1 + 48);
  objc_msgSend_streamingAsset(*(void **)(a1 + 32), v44, v45, v46);
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  v51 = objc_msgSend_bytesUploaded(v47, v48, v49, v50);
  objc_msgSend_requestToAppendSegmentData_uploadURL_requestUUID_offset_(v33, v52, v34, (uint64_t)v42, v43, v51);
  v27 = (id)objc_claimAutoreleasedReturnValue();

  v56 = objc_msgSend_length(*(void **)(a1 + 40), v53, v54, v55);
  objc_msgSend_setCurrentSegmentLength_(*(void **)(a1 + 32), v57, v56, v58);
  objc_msgSend_streamingAsset(*(void **)(a1 + 32), v59, v60, v61);
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_requestOptions(v62, v63, v64, v65);
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  v67 = v66;
  if (v66)
    v68 = v66;
  else
    v68 = objc_alloc_init(MEMORY[0x1E0D03788]);
  v28 = v68;

  v69 = (void *)MEMORY[0x1E0CB3940];
  v70 = objc_opt_class();
  objc_msgSend_stringWithFormat_(v69, v71, (uint64_t)CFSTR("%@ requestUUID:%@"), v72, v70, *(_QWORD *)(a1 + 48));
  v73 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setIdentifier_(v28, v74, (uint64_t)v73, v75);

  objc_msgSend_setTlsPinning_(v28, v76, 1, v77);
  objc_msgSend_sharedManager(MEMORY[0x1E0D03780], v78, v79, v80);
  v81 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_createDataTaskWithRequest_options_delegate_sessionHandle_(v81, v82, (uint64_t)v27, (uint64_t)v28, *(_QWORD *)(a1 + 32), 0);
  v83 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setDataTask_(*(void **)(a1 + 32), v84, (uint64_t)v83, v85);

  objc_msgSend_setRequestUUID_(*(void **)(a1 + 32), v86, *(_QWORD *)(a1 + 48), v87);
  objc_msgSend_setOsActivity_(*(void **)(a1 + 32), v88, *(_QWORD *)(a1 + 56), v89);
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v90 = (void *)ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
  {
    v98 = *(void **)(a1 + 32);
    v99 = v90;
    objc_msgSend_dataTask(v98, v100, v101, v102);
    v103 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412290;
    v114 = v103;
    _os_log_debug_impl(&dword_18A5C5000, v99, OS_LOG_TYPE_DEBUG, "Will resume streaming asset append data task: %@", buf, 0xCu);

  }
  objc_msgSend_dataTask(*(void **)(a1 + 32), v91, v92, v93);
  v94 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_resume(v94, v95, v96, v97);

LABEL_27:
}

uint64_t sub_18A7859FC(uint64_t a1)
{
  NSObject *v2;
  uint8_t v4[16];

  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v2 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v4 = 0;
    _os_log_debug_impl(&dword_18A5C5000, v2, OS_LOG_TYPE_DEBUG, "On callback queue about to call completion handler for before starting append", v4, 2u);
  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_18A785EA0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  NSObject *v5;
  NSObject *v6;
  NSObject *v7;
  NSObject *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  void *v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  void *v22;
  char isKindOfClass;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  void *v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const char *v51;
  uint64_t v52;
  void *v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  const char *v58;
  uint64_t v59;
  void *v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  const char *v68;
  uint64_t v69;
  void *v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  const char *v75;
  uint64_t v76;
  void *v77;
  const char *v78;
  uint64_t v79;
  uint64_t v80;
  const char *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  const char *v85;
  uint64_t v86;
  const char *v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  const char *v91;
  uint64_t v92;
  uint64_t v93;
  const char *v94;
  uint64_t v95;
  uint64_t v96;
  const char *v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  void *v101;
  const char *v102;
  uint64_t v103;
  void *v104;
  const char *v105;
  uint64_t v106;
  uint64_t v107;
  NSObject *v108;
  NSObject *v109;
  const char *v110;
  uint64_t v111;
  uint64_t v112;
  const char *v113;
  NSObject *v114;
  const char *v115;
  void *v116;
  NSObject *v117;
  const char *v118;
  uint64_t v119;
  uint64_t v120;
  const char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  NSObject *v126;
  const char *v127;
  uint64_t v128;
  NSObject *v129;
  const char *v130;
  uint64_t v131;
  NSObject *v132;
  const char *v133;
  uint64_t v134;
  NSObject *v135;
  const char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  const char *v141;
  uint64_t v142;
  void *v143;
  const char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  NSObject *v148;
  const char *v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  const char *v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  const char *v157;
  uint64_t v158;
  const char *v159;
  const char *v160;
  uint64_t v161;
  uint64_t v162;
  const char *v163;
  uint64_t v164;
  NSObject *v165;
  const char *v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  const char *v170;
  uint64_t v171;
  const char *v172;
  uint64_t v173;
  uint64_t v174;
  void *v175;
  const char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  const char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  const char *v184;
  uint64_t v185;
  const char *v186;
  uint64_t v187;
  NSObject *v188;
  const char *v189;
  void *v190;
  const __CFString *v191;
  const __CFString *v192;
  NSObject *v193;
  const char *v194;
  uint64_t v195;
  NSObject *v196;
  const char *v197;
  uint64_t v198;
  NSObject *v199;
  const char *v200;
  uint64_t v201;
  const char *v202;
  uint64_t v203;
  const char *v204;
  uint64_t v205;
  const char *v206;
  uint64_t v207;
  uint64_t v208;
  void *v209;
  const char *v210;
  uint64_t v211;
  const char *v212;
  uint64_t v213;
  uint64_t v214;
  void *v215;
  void *v216;
  const char *v217;
  uint64_t v218;
  uint64_t v219;
  NSObject *v220;
  const char *v221;
  uint64_t v222;
  uint64_t v223;
  NSObject *v224;
  uint64_t v225;
  __CFString *v226;
  int v227;
  __CFString *v228;
  __CFString *v229;
  void *v230;
  uint64_t v231;
  __CFString *v232;
  uint64_t v233;
  void *v234;
  _QWORD block[4];
  id v236;
  id v237;
  id v238;
  os_activity_scope_state_s state;
  const __CFString *v240;
  void *v241;
  uint8_t buf[4];
  uint64_t v243;
  __int16 v244;
  _BYTE v245[14];
  __int16 v246;
  __CFString *v247;
  __int16 v248;
  const __CFString *v249;
  __int16 v250;
  const __CFString *v251;
  uint64_t v252;

  v252 = *MEMORY[0x1E0C80C00];
  state.opaque[0] = 0;
  state.opaque[1] = 0;
  objc_msgSend_osActivity(*(void **)(a1 + 32), a2, a3, a4);
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
  {
    os_activity_scope_enter(v5, &state);
  }
  else
  {
    v7 = _os_activity_create(&dword_18A5C5000, "client/streaming-asset-didComplete", MEMORY[0x1E0C80FC8], OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

  }
  if (*(_QWORD *)(a1 + 40))
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v8 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
    {
      v13 = *(_QWORD *)(a1 + 40);
      v12 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 138412546;
      v243 = v12;
      v244 = 2112;
      *(_QWORD *)v245 = v13;
      _os_log_error_impl(&dword_18A5C5000, v8, OS_LOG_TYPE_ERROR, "Append task completed with error %@: %@", buf, 0x16u);
    }
  }
  else
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v14 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
    {
      v124 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 138412290;
      v243 = v124;
      _os_log_debug_impl(&dword_18A5C5000, v14, OS_LOG_TYPE_DEBUG, "Append task completed %@", buf, 0xCu);
    }
  }
  v15 = *(void **)(a1 + 48);
  objc_msgSend_dataTask(*(void **)(a1 + 32), v9, v10, v11);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v15) = v15 == v16;

  if ((v15 & 1) == 0)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v20 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
    {
      v21 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 138412290;
      v243 = v21;
      _os_log_impl(&dword_18A5C5000, v20, OS_LOG_TYPE_INFO, "Received completion callback for task that is not ours: %@", buf, 0xCu);
    }
    goto LABEL_136;
  }
  objc_msgSend_response(*(void **)(a1 + 48), v17, v18, v19);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) == 0
    || (objc_msgSend_response(*(void **)(a1 + 48), v24, v25, v26),
        v27 = (void *)objc_claimAutoreleasedReturnValue(),
        (v31 = v27) == 0))
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v109 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
    {
      v125 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v243 = v125;
      _os_log_error_impl(&dword_18A5C5000, v109, OS_LOG_TYPE_ERROR, "No response for %@", buf, 0xCu);
    }
    if (objc_msgSend_isCurrentAppendCancelled(*(void **)(a1 + 32), v110, v111, v112))
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v114 = ck_log_facility_ck;
      if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_debug_impl(&dword_18A5C5000, v114, OS_LOG_TYPE_DEBUG, "Sending error back that the current append was cancelled", buf, 2u);
      }
      objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v115, (uint64_t)CFSTR("CKErrorDomain"), 20, CFSTR("Append was cancelled"));
    }
    else
    {
      objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v113, (uint64_t)CFSTR("CKErrorDomain"), 34, CFSTR("No response appending to streaming asset"));
    }
    v116 = (void *)objc_claimAutoreleasedReturnValue();
    v31 = 0;
    goto LABEL_122;
  }
  objc_msgSend_allHeaderFields(v27, v28, v29, v30);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v32, v33, (uint64_t)CFSTR("x-apple-sa-status"), v34);
  v35 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_allHeaderFields(v31, v36, v37, v38);
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v39, v40, (uint64_t)CFSTR("x-apple-sa-status"), v41);
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v46 = objc_msgSend_integerValue(v42, v43, v44, v45);

  objc_msgSend_allHeaderFields(v31, v47, v48, v49);
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v50, v51, (uint64_t)CFSTR("x-apple-sa-content-status"), v52);
  v53 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_allHeaderFields(v31, v54, v55, v56);
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v57, v58, (uint64_t)CFSTR("x-apple-sa-content-status"), v59);
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  v231 = objc_msgSend_integerValue(v60, v61, v62, v63);

  objc_msgSend_allHeaderFields(v31, v64, v65, v66);
  v67 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v67, v68, (uint64_t)CFSTR("x-apple-sa-error-code"), v69);
  v70 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_allHeaderFields(v31, v71, v72, v73);
  v74 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v74, v75, (uint64_t)CFSTR("x-apple-sa-error-code"), v76);
  v77 = (void *)objc_claimAutoreleasedReturnValue();
  v233 = objc_msgSend_integerValue(v77, v78, v79, v80);

  objc_msgSend_allHeaderFields(v31, v81, v82, v83);
  v84 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v84, v85, (uint64_t)CFSTR("x-apple-sa-error-description"), v86);
  v234 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_valueForHTTPHeaderField_(v31, v87, (uint64_t)CFSTR("X-Apple-Request-UUID"), v88);
  v89 = objc_claimAutoreleasedReturnValue();
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v90 = (id)ck_log_facility_ck;
  if (os_log_type_enabled(v90, OS_LOG_TYPE_DEBUG))
  {
    objc_msgSend_requestUUID(*(void **)(a1 + 32), v91, v92, v93);
    v230 = (void *)objc_claimAutoreleasedReturnValue();
    v227 = objc_msgSend_statusCode(v31, v160, v161, v162);
    if (v89)
    {
      objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v163, (uint64_t)CFSTR(" requestUUID=%@"), v164, v89);
      v229 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v229 = &stru_1E1F66ED0;
    }
    if (v35)
    {
      objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v163, (uint64_t)CFSTR(" edgeStatus=%d"), v164, v46);
      v228 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v228 = &stru_1E1F66ED0;
    }
    if (v53)
    {
      objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v163, (uint64_t)CFSTR(" contentStatus=%d"), v164, v231);
      v191 = (const __CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v191 = &stru_1E1F66ED0;
    }
    v232 = (__CFString *)v191;
    if (v70)
    {
      objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v163, (uint64_t)CFSTR(" errorCode=%d errorDescription=\"%@\""), v164, v233, v234);
      v192 = (const __CFString *)objc_claimAutoreleasedReturnValue();
      v191 = v232;
    }
    else
    {
      v192 = &stru_1E1F66ED0;
    }
    v226 = (__CFString *)v192;
    *(_DWORD *)buf = 138544642;
    v243 = (uint64_t)v230;
    v244 = 1024;
    *(_DWORD *)v245 = v227;
    *(_WORD *)&v245[4] = 2114;
    *(_QWORD *)&v245[6] = v229;
    v246 = 2114;
    v247 = v228;
    v248 = 2114;
    v249 = v191;
    v250 = 2114;
    v251 = v192;
    _os_log_debug_impl(&dword_18A5C5000, v90, OS_LOG_TYPE_DEBUG, "Append request %{public}@ finished with httpStatus=%d%{public}@%{public}@%{public}@%{public}@", buf, 0x3Au);
    if (v70)

    if (v53)
    if (v35)

    if (v89)
  }

  if (objc_msgSend_statusCode(v31, v94, v95, v96) != 200)
  {
    v100 = (void *)v89;
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v117 = (id)ck_log_facility_ck;
    if (os_log_type_enabled(v117, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend_allHeaderFields(v31, v118, v119, v120);
      v190 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v243 = (uint64_t)v190;
      _os_log_error_impl(&dword_18A5C5000, v117, OS_LOG_TYPE_ERROR, "Received unknown error appending to streaming asset. Headers=%@", buf, 0xCu);

    }
    CKErrorFromHTTPResponse(v31);
    v104 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_CKClientSuitableError(v104, v121, v122, v123);
    v116 = (void *)objc_claimAutoreleasedReturnValue();
    goto LABEL_48;
  }
  v100 = (void *)v89;
  switch(v46)
  {
    case 0:
      objc_msgSend_allHeaderFields(v31, v97, v98, v99);
      v101 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v101, v102, (uint64_t)CFSTR("x-apple-sa-receipt"), v103);
      v104 = (void *)objc_claimAutoreleasedReturnValue();

      if (objc_msgSend_fakeMissingUploadReceipt(*(void **)(a1 + 32), v105, v106, v107))
      {
        if (ck_log_initialization_predicate != -1)
          dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
        v108 = ck_log_facility_ck;
        if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_18A5C5000, v108, OS_LOG_TYPE_INFO, "Pretending like we didn't get an upload receipt", buf, 2u);
        }

      }
      else if (v104)
      {
        if (ck_log_initialization_predicate != -1)
          dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
        v165 = ck_log_facility_ck;
        if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
        {
          v225 = *(_QWORD *)(a1 + 32);
          *(_DWORD *)buf = 138412290;
          v243 = v225;
          _os_log_debug_impl(&dword_18A5C5000, v165, OS_LOG_TYPE_DEBUG, "Successfully appended to streaming asset %@", buf, 0xCu);
        }
        objc_msgSend_streamingAsset(*(void **)(a1 + 32), v166, v167, v168);
        v169 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_setUploadReceipt_(v169, v170, (uint64_t)v104, v171);

        objc_msgSend_streamingAsset(*(void **)(a1 + 32), v172, v173, v174);
        v175 = (void *)objc_claimAutoreleasedReturnValue();
        v179 = objc_msgSend_currentSegmentLength(*(void **)(a1 + 32), v176, v177, v178);
        v183 = objc_msgSend_size(v175, v180, v181, v182);
        objc_msgSend_setSize_(v175, v184, v183 + v179, v185);

        v116 = 0;
        goto LABEL_90;
      }
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v188 = ck_log_facility_ck;
      if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_error_impl(&dword_18A5C5000, v188, OS_LOG_TYPE_ERROR, "No upload receipt after appending to streaming asset", buf, 2u);
      }
      objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v189, (uint64_t)CFSTR("CKErrorDomain"), 1, CFSTR("Missing upload receipt after appending to streaming asset. Create a new streaming asset to continue: requestUUID=%@"), v89);
      v116 = (void *)objc_claimAutoreleasedReturnValue();
      v104 = 0;
LABEL_90:
      objc_msgSend_setCurrentSegmentLength_(*(void **)(a1 + 32), v186, 0, v187);
      goto LABEL_48;
    case 1:
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v126 = ck_log_facility_ck;
      if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
      {
        v128 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        v243 = v128;
        _os_log_impl(&dword_18A5C5000, v126, OS_LOG_TYPE_INFO, "Upload was terminated by the uploader for %@", buf, 0xCu);
      }
      objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v127, (uint64_t)CFSTR("CKErrorDomain"), 20, CFSTR("Streaming asset upload terminated: requestUUID=%@"), v89);
      goto LABEL_120;
    case 2:
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v129 = ck_log_facility_ck;
      if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
      {
        v131 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        v243 = v131;
        _os_log_impl(&dword_18A5C5000, v129, OS_LOG_TYPE_INFO, "Segment signature mismatch for %@", buf, 0xCu);
      }
      objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v130, (uint64_t)CFSTR("CKErrorDomain"), 1, CFSTR("Segment signature mismatch: requestUUID=%@"), v89);
      goto LABEL_120;
    case 3:
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v132 = ck_log_facility_ck;
      if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
      {
        v134 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        v243 = v134;
        _os_log_impl(&dword_18A5C5000, v132, OS_LOG_TYPE_INFO, "Vendor upload error for %@", buf, 0xCu);
      }
      objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v133, (uint64_t)CFSTR("CKErrorDomain"), 1, CFSTR("Vendor upload error: requestUUID=%@"), v89);
      goto LABEL_120;
    case 4:
      if (v233 == 48)
      {
        if (ck_log_initialization_predicate != -1)
          dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
        v193 = ck_log_facility_ck;
        if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
        {
          v195 = *(_QWORD *)(a1 + 32);
          *(_DWORD *)buf = 138412290;
          v243 = v195;
          _os_log_impl(&dword_18A5C5000, v193, OS_LOG_TYPE_INFO, "Append would exceed max length for %@", buf, 0xCu);
        }
        objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v194, (uint64_t)CFSTR("CKErrorDomain"), 27, CFSTR("Append would exceed max length of streaming asset: requestUUID=%@"), v89);
        goto LABEL_120;
      }
      if (v233 != 42)
      {
        if (ck_log_initialization_predicate != -1)
          dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
        v196 = ck_log_facility_ck;
        if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
        {
          v198 = *(_QWORD *)(a1 + 32);
          *(_DWORD *)buf = 138412290;
          v243 = v198;
          _os_log_impl(&dword_18A5C5000, v196, OS_LOG_TYPE_INFO, "Content error for %@", buf, 0xCu);
        }
        objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v197, (uint64_t)CFSTR("CKErrorDomain"), 1, CFSTR("Content error: requestUUID=%@"), v89);
LABEL_120:
        v116 = (void *)objc_claimAutoreleasedReturnValue();
        v100 = (void *)v89;
        goto LABEL_121;
      }
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v135 = ck_log_facility_ck;
      if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
      {
        v139 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        v243 = v139;
        _os_log_impl(&dword_18A5C5000, v135, OS_LOG_TYPE_INFO, "Stream offset invalid for %@", buf, 0xCu);
      }
      objc_msgSend_allHeaderFields(v31, v136, v137, v138);
      v140 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v140, v141, (uint64_t)CFSTR("x-apple-sa-current-length"), v142);
      v143 = (void *)objc_claimAutoreleasedReturnValue();

      if ((objc_opt_respondsToSelector() & 1) != 0)
      {
        v147 = objc_msgSend_integerValue(v143, v144, v145, v146);
        if (ck_log_initialization_predicate != -1)
          dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
        v148 = ck_log_facility_ck;
        if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 134217984;
          v243 = v147;
          _os_log_debug_impl(&dword_18A5C5000, v148, OS_LOG_TYPE_DEBUG, "Offset was invalid, and we have a new length of the streaming asset (%ld)", buf, 0xCu);
        }
        objc_msgSend_streamingAsset(*(void **)(a1 + 32), v149, v150, v151);
        v152 = (void *)objc_claimAutoreleasedReturnValue();
        v156 = (void *)objc_msgSend_copy(v152, v153, v154, v155);

        objc_msgSend_setSize_(v156, v157, v147, v158);
        v240 = CFSTR("CKServerStreamingAsset");
        v241 = v156;
        objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v159, (uint64_t)&v241, (uint64_t)&v240, 1);
        v104 = (void *)objc_claimAutoreleasedReturnValue();

      }
      else
      {
        v104 = 0;
      }
      objc_msgSend_errorWithDomain_code_userInfo_format_(CKPrettyError, v144, (uint64_t)CFSTR("CKErrorDomain"), 124, v104, CFSTR("Local streaming asset bytes uploaded doesn't match server: requestUUID=%@"), v89);
      v116 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_48:
LABEL_121:

LABEL_122:
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v199 = ck_log_facility_ck;
      if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_debug_impl(&dword_18A5C5000, v199, OS_LOG_TYPE_DEBUG, "Finishing streaming asset append", buf, 2u);
      }
      objc_msgSend_setAppending_(*(void **)(a1 + 32), v200, 0, v201);
      objc_msgSend_setRequestUUID_(*(void **)(a1 + 32), v202, 0, v203);
      objc_msgSend_setOsActivity_(*(void **)(a1 + 32), v204, 0, v205);
      objc_msgSend_completionHandler(*(void **)(a1 + 32), v206, v207, v208);
      v209 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setCompletionHandler_(*(void **)(a1 + 32), v210, 0, v211);
      if (v116)
      {
        v215 = 0;
      }
      else
      {
        objc_msgSend_streamingAsset(*(void **)(a1 + 32), v212, v213, v214);
        v216 = (void *)objc_claimAutoreleasedReturnValue();
        v215 = (void *)objc_msgSend_copy(v216, v217, v218, v219);

      }
      if (v209)
      {
        if (ck_log_initialization_predicate != -1)
          dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
        v220 = ck_log_facility_ck;
        if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_debug_impl(&dword_18A5C5000, v220, OS_LOG_TYPE_DEBUG, "About to call back to adopter for streaming asset append completion", buf, 2u);
        }
        objc_msgSend_callbackQueue(*(void **)(a1 + 32), v221, v222, v223);
        v224 = objc_claimAutoreleasedReturnValue();
        block[0] = MEMORY[0x1E0C809B0];
        block[1] = 3221225472;
        block[2] = sub_18A786FEC;
        block[3] = &unk_1E1F61508;
        v236 = v116;
        v238 = v209;
        v237 = v215;
        dispatch_async(v224, block);

      }
LABEL_136:
      os_activity_scope_leave(&state);
      return;
    default:
      v116 = 0;
      goto LABEL_121;
  }
}

void sub_18A786F74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

uint64_t sub_18A786FEC(uint64_t a1)
{
  NSObject *v2;
  const __CFString *v4;
  const __CFString *v5;
  int v6;
  const __CFString *v7;
  __int16 v8;
  const __CFString *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v2 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
  {
    v4 = *(const __CFString **)(a1 + 32);
    v5 = CFSTR(" with error: ");
    if (!v4)
    {
      v5 = &stru_1E1F66ED0;
      v4 = &stru_1E1F66ED0;
    }
    v6 = 138543618;
    v7 = v5;
    v8 = 2112;
    v9 = v4;
    _os_log_debug_impl(&dword_18A5C5000, v2, OS_LOG_TYPE_DEBUG, "On callback queue for streaming asset append completion%{public}@%@", (uint8_t *)&v6, 0x16u);
  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
}

void sub_18A7871F4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  NSObject *v5;
  NSObject *v6;
  NSObject *v7;
  const char *v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _BOOL4 v14;
  NSObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  NSObject *v33;
  void *v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  void *v40;
  void *v41;
  os_activity_scope_state_s v42;
  uint8_t buf[4];
  void *v44;
  __int16 v45;
  uint64_t v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  objc_msgSend_osActivity(*(void **)(a1 + 32), a2, a3, a4, 0, 0);
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
  {
    os_activity_scope_enter(v5, &v42);
  }
  else
  {
    v7 = _os_activity_create(&dword_18A5C5000, "client/streaming-asset-abort", MEMORY[0x1E0C80FC8], OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &v42);

  }
  objc_msgSend_setCurrentAppendCancelled_(*(void **)(a1 + 32), v8, 1, v9);
  objc_msgSend_dataTask(*(void **)(a1 + 32), v10, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v13 == 0;

  if (v14)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v33 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
    {
      v34 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v44 = v34;
      _os_log_impl(&dword_18A5C5000, v33, OS_LOG_TYPE_INFO, "Trying to abort a streaming asset append with no data task %@", buf, 0xCu);
    }
  }
  else
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v15 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
    {
      v40 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v44 = v40;
      _os_log_debug_impl(&dword_18A5C5000, v15, OS_LOG_TYPE_DEBUG, "Aborting streaming asset append %@", buf, 0xCu);
    }
    objc_msgSend_dataTask(*(void **)(a1 + 32), v16, v17, v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = objc_msgSend_state(v19, v20, v21, v22) == 0;

    if (v23)
    {
      objc_msgSend_dataTask(*(void **)(a1 + 32), v24, v25, v26);
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_cancel(v35, v36, v37, v38);

      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v39 = ck_log_facility_ck;
      if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
      {
        v41 = *(void **)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        v44 = v41;
        _os_log_debug_impl(&dword_18A5C5000, v39, OS_LOG_TYPE_DEBUG, "Did cancel data task for %@", buf, 0xCu);
      }
    }
    else
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v27 = (id)ck_log_facility_ck;
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_dataTask(*(void **)(a1 + 32), v28, v29, v30);
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        v32 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138412546;
        v44 = v31;
        v45 = 2112;
        v46 = v32;
        _os_log_impl(&dword_18A5C5000, v27, OS_LOG_TYPE_INFO, "Trying to cancel a data task that isn't running %@ for %@", buf, 0x16u);

      }
    }
  }
  os_activity_scope_leave(&v42);
}

void sub_18A787518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

uint64_t CKCodeRecordTransportReadFrom(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int *v5;
  int *v6;
  int *v7;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v17;
  uint64_t v18;
  BOOL v19;
  const char *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  void *v30;

  v5 = (int *)MEMORY[0x1E0D82BF0];
  v6 = (int *)MEMORY[0x1E0D82BD8];
  v7 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v9 = (int *)MEMORY[0x1E0D82BB8];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v7))
      {
        v10 = 0;
        v11 = 0;
        v12 = 0;
        while (1)
        {
          v13 = *v5;
          v14 = *(_QWORD *)(a2 + v13);
          if (v14 == -1 || v14 >= *(_QWORD *)(a2 + *v6))
            break;
          v15 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v14);
          *(_QWORD *)(a2 + v13) = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0)
            goto LABEL_12;
          v10 += 7;
          if (v11++ >= 9)
          {
            v12 = 0;
            v17 = *(unsigned __int8 *)(a2 + *v7);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v7) = 1;
LABEL_12:
        v17 = *(unsigned __int8 *)(a2 + *v7);
        if (*(_BYTE *)(a2 + *v7))
          v12 = 0;
LABEL_14:
        v18 = v12 & 7;
        if (v17)
          v19 = 1;
        else
          v19 = (_DWORD)v18 == 4;
        if (!v19)
        {
          v20 = (const char *)(v12 >> 3);
          switch((v12 >> 3))
          {
            case 0u:
              v21 = 0;
              do
              {
                v22 = *v5;
                v23 = *(_QWORD *)(a2 + v22);
                if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v6))
                {
                  *(_BYTE *)(a2 + *v7) = 1;
                  goto LABEL_32;
                }
                v24 = v23 + 1;
                v25 = *(char *)(*(_QWORD *)(a2 + *v9) + v23);
                *(_QWORD *)(a2 + v22) = v24;
                if ((v25 & 0x80000000) == 0)
                  break;
              }
              while (v21++ <= 8);
              goto LABEL_32;
            case 1u:
              objc_msgSend_clearOneofValuesForContents((void *)a1, v20, v18, a4);
              *(_BYTE *)(a1 + 40) |= 1u;
              *(_DWORD *)(a1 + 8) = 1;
              PBReaderReadData();
              v28 = objc_claimAutoreleasedReturnValue();
              v29 = 24;
              goto LABEL_31;
            case 2u:
              objc_msgSend_clearOneofValuesForContents((void *)a1, v20, v18, a4);
              *(_BYTE *)(a1 + 40) |= 1u;
              *(_DWORD *)(a1 + 8) = 2;
              PBReaderReadData();
              v28 = objc_claimAutoreleasedReturnValue();
              v29 = 32;
              goto LABEL_31;
            case 3u:
              PBReaderReadData();
              v28 = objc_claimAutoreleasedReturnValue();
              v29 = 16;
LABEL_31:
              v30 = *(void **)(a1 + v29);
              *(_QWORD *)(a1 + v29) = v28;

              goto LABEL_32;
            default:
              result = PBReaderSkipValueWithTag();
              if (!(_DWORD)result)
                return result;
LABEL_32:
              if (*(_QWORD *)(a2 + *v5) >= *(_QWORD *)(a2 + *v6))
                return *(_BYTE *)(a2 + *v7) == 0;
              continue;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v7) == 0;
}

void sub_18A788700(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 512) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 512);
    *(_QWORD *)(v8 + 512) = v7;

  }
}

void sub_18A788890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A7888A8(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A7888D0(uint64_t a1)
{

}

void sub_18A7888D8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 512));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A789E2C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void sub_18A789FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A789FD4(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A789FFC(uint64_t a1)
{

}

void sub_18A78A004(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A78A160(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 528) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 528);
    *(_QWORD *)(v8 + 528) = v7;

  }
}

void sub_18A78A2F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A78A308(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 528));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A78A464(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 536) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 536);
    *(_QWORD *)(v8 + 536) = v7;

  }
}

void sub_18A78A5F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A78A60C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 536));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A78A768(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 544) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 544);
    *(_QWORD *)(v8 + 544) = v7;

  }
}

void sub_18A78A8F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A78A910(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 544));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A78AA6C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 552) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 552);
    *(_QWORD *)(v8 + 552) = v7;

  }
}

void sub_18A78ABFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A78AC14(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 552));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A78D6B8(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  const char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  const char *v26;
  uint64_t v27;
  id v28;
  const char *v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  const char *v35;
  CKException *v36;
  const char *v37;
  id v38;
  _QWORD v39[4];
  id v40;
  id v41;
  id v42;
  id v43;
  _QWORD v44[4];
  id v45;
  _QWORD v46[4];
  id v47;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (!v8)
  {
    v36 = [CKException alloc];
    v38 = (id)objc_msgSend_initWithName_format_(v36, v37, *MEMORY[0x1E0C99778], (uint64_t)CFSTR("Container cannot be nil"));
    objc_exception_throw(v38);
  }
  v14 = v10;
  if (!v9)
  {
    objc_msgSend_standardOptions(CKAllowedSharingOptions, v11, v12, v13);
    v9 = (id)objc_claimAutoreleasedReturnValue();
  }
  objc_msgSend_containerID(v8, v11, v12, v13);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = objc_msgSend_specialContainerType(v15, v16, v17, v18);
  if (v19 <= 0x19 && ((1 << v19) & 0x2200010) != 0)
  {

    objc_msgSend_setSupportAllowingAddedParticipantsToInviteOthers_(v9, v20, 1, v21);
  }
  else
  {

  }
  CKContainerSetupInfoWithBundleIDOverridesForOOPUIFromContainer(v8);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = objc_opt_class();
  v24 = MEMORY[0x1E0C809B0];
  v46[0] = MEMORY[0x1E0C809B0];
  v46[1] = 3221225472;
  v46[2] = sub_18A78D904;
  v46[3] = &unk_1E1F64DB8;
  v25 = v9;
  v47 = v25;
  objc_msgSend_registerObjectOfClass_visibility_loadHandler_(a1, v26, v23, 0, v46);
  v27 = objc_opt_class();
  v44[0] = v24;
  v44[1] = 3221225472;
  v44[2] = sub_18A78D930;
  v44[3] = &unk_1E1F64DB8;
  v28 = v22;
  v45 = v28;
  objc_msgSend_registerObjectOfClass_visibility_loadHandler_(a1, v29, v27, 0, v44);
  v30 = objc_opt_class();
  v39[0] = v24;
  v39[1] = 3221225472;
  v39[2] = sub_18A78D95C;
  v39[3] = &unk_1E1F64E08;
  v40 = v8;
  v41 = v28;
  v42 = v25;
  v43 = v14;
  v31 = v25;
  v32 = v28;
  v33 = v8;
  v34 = v14;
  objc_msgSend_registerObjectOfClass_visibility_loadHandler_(a1, v35, v30, 0, v39);

}

uint64_t sub_18A78D904(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, _QWORD, _QWORD))(a2 + 16))(a2, *(_QWORD *)(a1 + 32), 0);
  return 0;
}

uint64_t sub_18A78D930(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, _QWORD, _QWORD))(a2 + 16))(a2, *(_QWORD *)(a1 + 32), 0);
  return 0;
}

uint64_t sub_18A78D95C(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD *);
  id v6;
  _QWORD v8[4];
  id v9;
  id v10;
  id v11;
  id v12;

  v3 = a2;
  v4 = *(_QWORD *)(a1 + 56);
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = sub_18A78DA24;
  v8[3] = &unk_1E1F64DE0;
  v9 = *(id *)(a1 + 32);
  v10 = *(id *)(a1 + 40);
  v11 = *(id *)(a1 + 48);
  v12 = v3;
  v5 = *(void (**)(uint64_t, _QWORD *))(v4 + 16);
  v6 = v3;
  v5(v4, v8);

  return 0;
}

void sub_18A78DA24(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  CKPreSharingContext *v6;
  const char *v7;
  void *v8;
  uint64_t v9;
  id v10;

  v10 = a2;
  v5 = a3;
  if (v10 && a1[4])
  {
    v6 = [CKPreSharingContext alloc];
    v8 = (void *)objc_msgSend_initWithShare_containerSetupInfo_allowedOptions_(v6, v7, (uint64_t)v10, a1[5], a1[6]);
    (*(void (**)(_QWORD, void *, _QWORD))(a1[7] + 16))(a1[7], v8, 0);
  }
  else
  {
    v9 = a1[7];
    CKXPCSuitableError(v5);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, void *))(v9 + 16))(v9, 0, v8);
  }

}

void sub_18A78DAD8(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  const char *v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  const char *v29;
  uint64_t v30;
  id v31;
  const char *v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  const char *v37;
  CKException *v38;
  const char *v39;
  id v40;
  _QWORD v41[4];
  id v42;
  id v43;
  id v44;
  _QWORD v45[4];
  id v46;
  _QWORD v47[4];
  id v48;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (!v8 || !v9)
  {
    v38 = [CKException alloc];
    v40 = (id)objc_msgSend_initWithName_format_(v38, v39, *MEMORY[0x1E0C99778], (uint64_t)CFSTR("Non-nil share and container are required"));
    objc_exception_throw(v40);
  }
  v14 = v10;
  if (!v10)
  {
    objc_msgSend_standardOptions(CKAllowedSharingOptions, v11, v12, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
  }
  objc_msgSend_containerID(v9, v11, v12, v13);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = objc_msgSend_specialContainerType(v15, v16, v17, v18);
  if (v19 <= 0x19 && ((1 << v19) & 0x2200010) != 0)
  {

    objc_msgSend_setSupportAllowingAddedParticipantsToInviteOthers_(v14, v20, 1, v21);
  }
  else
  {

  }
  v22 = (void *)objc_opt_class();
  objc_msgSend_resolvedOptionsFromOptions_forExistingShare_(v22, v23, (uint64_t)v14, (uint64_t)v8);
  v24 = (void *)objc_claimAutoreleasedReturnValue();

  CKContainerSetupInfoWithBundleIDOverridesForOOPUIFromContainer(v9);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v26 = objc_opt_class();
  v27 = MEMORY[0x1E0C809B0];
  v47[0] = MEMORY[0x1E0C809B0];
  v47[1] = 3221225472;
  v47[2] = sub_18A78DD40;
  v47[3] = &unk_1E1F64DB8;
  v28 = v24;
  v48 = v28;
  objc_msgSend_registerObjectOfClass_visibility_loadHandler_(a1, v29, v26, 0, v47);
  v30 = objc_opt_class();
  v45[0] = v27;
  v45[1] = 3221225472;
  v45[2] = sub_18A78DD6C;
  v45[3] = &unk_1E1F64DB8;
  v31 = v25;
  v46 = v31;
  objc_msgSend_registerObjectOfClass_visibility_loadHandler_(a1, v32, v30, 0, v45);
  v33 = objc_opt_class();
  v41[0] = v27;
  v41[1] = 3221225472;
  v41[2] = sub_18A78DD98;
  v41[3] = &unk_1E1F64E30;
  v42 = v8;
  v43 = v31;
  v44 = v28;
  v34 = v28;
  v35 = v31;
  v36 = v8;
  objc_msgSend_registerObjectOfClass_visibility_loadHandler_(a1, v37, v33, 0, v41);

}

uint64_t sub_18A78DD40(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, _QWORD, _QWORD))(a2 + 16))(a2, *(_QWORD *)(a1 + 32), 0);
  return 0;
}

uint64_t sub_18A78DD6C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, _QWORD, _QWORD))(a2 + 16))(a2, *(_QWORD *)(a1 + 32), 0);
  return 0;
}

uint64_t sub_18A78DD98(uint64_t *a1, void *a2)
{
  void (**v3)(id, void *, _QWORD);
  CKPostSharingContext *v4;
  const char *v5;
  void *v6;

  v3 = a2;
  v4 = [CKPostSharingContext alloc];
  v6 = (void *)objc_msgSend_initWithShare_containerSetupInfo_allowedOptions_(v4, v5, a1[4], a1[5], a1[6]);
  v3[2](v3, v6, 0);

  return 0;
}

void sub_18A78F638(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_18A78FC38(void *a1)
{
  id v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  const char *v12;
  uint64_t v13;
  const char *ArgumentTypeAtIndex;
  void *v15;

  v2 = objc_alloc_init(MEMORY[0x1E0CB3788]);
  v6 = objc_msgSend_numberOfArguments(a1, v3, v4, v5);
  if (v6 - 1 >= 2)
  {
    v10 = v6;
    do
    {
      --v10;
      v11 = objc_retainAutorelease(a1);
      ArgumentTypeAtIndex = (const char *)objc_msgSend_getArgumentTypeAtIndex_(v11, v12, v10, v13);
      if (!strncmp("@?", ArgumentTypeAtIndex, 2uLL))
        objc_msgSend_addIndex_(v2, v7, v10, v9);
    }
    while (v10 > 2);
  }
  v15 = (void *)objc_msgSend_copy(v2, v7, v8, v9);

  return v15;
}

BOOL sub_18A78FCDC(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  BOOL v4;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  int isSubclassOfClass;

  v8 = objc_msgSend_numberOfArguments(a1, a2, a3, a4);
  while (--v8 >= 2)
  {
    objc_msgSend__signatureForBlockAtArgumentIndex_(a1, v6, v8, v7);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = v9;
    if (v9)
    {
      v15 = objc_msgSend_numberOfArguments(v9, v10, v11, v12) - 1;
      do
      {
        v4 = v15 > 0;
        v17 = v15 - 1;
        if (v15 < 1)
          break;
        v18 = (void *)objc_msgSend__classForObjectAtArgumentIndex_(v13, v14, v15, v16);
        v19 = objc_opt_class();
        isSubclassOfClass = objc_msgSend_isSubclassOfClass_(v18, v20, v19, v21);
        v15 = v17;
      }
      while (!isSubclassOfClass);
    }

    if (v13)
      return v4;
  }
  return 1;
}

id CKExtendedMethodSignatureForProtocolSelector(void *a1, uint64_t a2)
{
  Protocol *v3;
  uint64_t MethodTypeEncoding;
  const char *v5;
  uint64_t v6;
  void *v7;
  Protocol **v8;
  Protocol **v9;
  uint64_t v10;
  uint64_t v11;
  void *v13;
  unsigned int outCount;

  v3 = a1;
  MethodTypeEncoding = _protocol_getMethodTypeEncoding();
  if (!MethodTypeEncoding
    || (objc_msgSend_signatureWithObjCTypes_(MEMORY[0x1E0C99DD8], v5, MethodTypeEncoding, v6),
        (v7 = (void *)objc_claimAutoreleasedReturnValue()) == 0))
  {
    outCount = 0;
    v8 = protocol_copyProtocolList(v3, &outCount);
    v9 = v8;
    if (outCount)
    {
      v10 = 0;
      do
      {
        CKExtendedMethodSignatureForProtocolSelector(v9[v10], a2);
        v11 = objc_claimAutoreleasedReturnValue();
      }
      while (++v10 < (unint64_t)outCount && v11 == 0);
      v13 = (void *)v11;
      goto LABEL_11;
    }
    v13 = 0;
    v7 = 0;
    if (v8)
    {
LABEL_11:
      free(v9);
      v7 = v13;
    }
  }

  return v7;
}

id CKSelectorAndSignaturesIncludingParentProtocols(void *a1, int a2)
{
  Protocol *v3;
  void *v4;
  objc_method_description *v5;
  objc_method_description *v6;
  unint64_t v7;
  uint64_t *v8;
  const char *v9;
  void *v10;
  CKTuple2 *v11;
  void *v12;
  const char *v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  Protocol **v17;
  Protocol **v18;
  unint64_t i;
  void *v20;
  const char *v21;
  uint64_t v22;
  unsigned int outCount;

  v3 = a1;
  v4 = (void *)objc_opt_new();
  outCount = 0;
  v5 = protocol_copyMethodDescriptionList(v3, 1, 1, &outCount);
  v6 = v5;
  if (outCount)
  {
    v7 = 0;
    v8 = (uint64_t *)v5;
    do
    {
      v9 = (const char *)*v8;
      CKExtendedMethodSignatureForProtocolSelector(v3, *v8);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      if (v10)
      {
        v11 = [CKTuple2 alloc];
        NSStringFromSelector(v9);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = (void *)objc_msgSend_initWithObject1_object2_(v11, v13, (uint64_t)v12, (uint64_t)v10);
        objc_msgSend_addObject_(v4, v15, (uint64_t)v14, v16);

      }
      ++v7;
      v8 += 2;
    }
    while (v7 < outCount);
  }
  else if (!v5)
  {
    goto LABEL_9;
  }
  free(v6);
LABEL_9:
  if (a2)
  {
    v17 = protocol_copyProtocolList(v3, &outCount);
    v18 = v17;
    if (outCount)
    {
      for (i = 0; i < outCount; ++i)
      {
        CKSelectorAndSignaturesIncludingParentProtocols(v18[i], 1);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_addObjectsFromArray_(v4, v21, (uint64_t)v20, v22);

      }
      goto LABEL_15;
    }
    if (v17)
LABEL_15:
      free(v18);
  }

  return v4;
}

void sub_18A78FFF0(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  NSObject *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  const char *v17;
  uint64_t v18;
  const char *ArgumentTypeAtIndex;
  const char *v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  void *v49;
  void *v50;
  void *v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  const char *v55;
  void *v56;
  const char *v57;
  os_log_t log;
  NSObject *loga;
  void *v60;
  void *aBlock;
  id v62;
  _BYTE buf[12];
  __int16 v64;
  void *v65;
  __int16 v66;
  id v67;
  uint64_t v68;

  v68 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v62 = v6;
  v7 = a4;
  objc_msgSend_methodSignature(a1, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_msgSend_numberOfArguments(v11, v12, v13, v14);
  while (--v15 >= 2)
  {
    v16 = objc_retainAutorelease(v11);
    ArgumentTypeAtIndex = (const char *)objc_msgSend_getArgumentTypeAtIndex_(v16, v17, v15, v18);
    if (!strncmp("@?", ArgumentTypeAtIndex, 2uLL))
    {
      aBlock = 0;
      objc_msgSend_getArgument_atIndex_(a1, v20, (uint64_t)&aBlock, v15);
      _Block_signature(aBlock);
      v21 = aBlock;
      v25 = objc_msgSend_selector(a1, v22, v23, v24);
      log = v7;
      CKExtendedMethodSignatureForProtocolSelector(v7, v25);
      v60 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend__signatureForBlockAtArgumentIndex_(v60, v26, v15, v27);
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_invocationWithMethodSignature_(MEMORY[0x1E0C99DB8], v29, (uint64_t)v28, v30);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_retainArguments(v31, v32, v33, v34);
      v35 = v21;
      objc_msgSend_setTarget_(v31, v36, (uint64_t)v21, v37);
      v44 = objc_msgSend_numberOfArguments(v28, v38, v39, v40);
      while (--v44 >= 1)
      {
        v45 = (void *)objc_msgSend__classForObjectAtArgumentIndex_(v28, v41, v44, v43);
        v46 = objc_opt_class();
        if (objc_msgSend_isSubclassOfClass_(v45, v47, v46, v48))
        {
          objc_msgSend_setArgument_atIndex_(v31, v41, (uint64_t)&v62, v44);
LABEL_13:
          objc_msgSend_invoke(v31, v41, v42, v43);
          v49 = v35;
          v7 = log;
          goto LABEL_14;
        }
      }
      if (!v6)
        goto LABEL_13;
      v49 = v35;
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v7 = log;
      v50 = (void *)ck_log_facility_ck;
      if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
      {
        loga = v50;
        NSStringFromProtocol((Protocol *)v7);
        v51 = (void *)objc_claimAutoreleasedReturnValue();
        v55 = (const char *)objc_msgSend_selector(a1, v52, v53, v54);
        NSStringFromSelector(v55);
        v56 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        *(_QWORD *)&buf[4] = v51;
        v64 = 2114;
        v65 = v56;
        v66 = 2112;
        v67 = v6;
        _os_log_error_impl(&dword_18A5C5000, loga, OS_LOG_TYPE_ERROR, "Asked to invoke reply block of -[%{public}@ %{public}@] with an error, but that reply block doesn't take an error.  Dropping this invocation on the floor.  Error: %@", buf, 0x20u);

      }
LABEL_14:
      *(_QWORD *)buf = __NSMakeSpecialForwardingCaptureBlock();
      objc_msgSend_setArgument_atIndex_(a1, v57, (uint64_t)buf, v15);

      break;
    }
  }

}

void sub_18A7902F0(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5, void *a6, void *a7)
{
  void (**v12)(id, unint64_t);
  void (**v13)(id, unint64_t);
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  const char *v19;
  uint64_t v20;
  char *ArgumentTypeAtIndex;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int v26;
  void (*v27)(void);
  void *v28;
  const char *v29;
  _QWORD *v31;

  v31 = a5;
  v12 = a6;
  v13 = a7;
  objc_msgSend_methodSignature(a1, v14, v15, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  if (a3 < a3 + a4)
  {
    do
    {
      v18 = objc_retainAutorelease(v17);
      ArgumentTypeAtIndex = (char *)objc_msgSend_getArgumentTypeAtIndex_(v18, v19, a3, v20);
      v25 = ArgumentTypeAtIndex;
      v26 = *ArgumentTypeAtIndex;
      if (v26 > 82)
      {
        switch(*ArgumentTypeAtIndex)
        {
          case 'c':
LABEL_10:
            if (v31)
            {
              v27 = (void (*)(void))v31[2];
              goto LABEL_19;
            }
            break;
          case 'd':
          case 'l':
          case 'q':
LABEL_14:
            if (v31)
            {
              v27 = (void (*)(void))v31[2];
              goto LABEL_19;
            }
            break;
          case 'e':
          case 'g':
          case 'h':
          case 'j':
          case 'k':
          case 'm':
          case 'n':
          case 'o':
          case 'p':
          case 'r':
            goto LABEL_22;
          case 'f':
          case 'i':
LABEL_8:
            if (!v31)
              break;
            v27 = (void (*)(void))v31[2];
            goto LABEL_19;
          case 's':
            goto LABEL_17;
          default:
            if (v26 == 83)
            {
LABEL_17:
              if (v31)
              {
                v27 = (void (*)(void))v31[2];
LABEL_19:
                v27();
              }
            }
            else
            {
LABEL_22:
              objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v22, v23, v24);
              v28 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(v28, v29, a2, (uint64_t)a1, CFSTR("CKInvocationUtilities.m"), 181, CFSTR("Unsuitable argument type %s"), v25);

            }
            break;
        }
      }
      else
      {
        switch(*ArgumentTypeAtIndex)
        {
          case '@':
            if (ArgumentTypeAtIndex[1] == 63)
            {
              if (v13)
                v13[2](v13, a3);
            }
            else if (v12)
            {
              v12[2](v12, a3);
            }
            break;
          case 'A':
          case 'D':
          case 'E':
          case 'F':
          case 'G':
          case 'H':
            goto LABEL_22;
          case 'B':
          case 'C':
            goto LABEL_10;
          case 'I':
            goto LABEL_8;
          default:
            if (v26 == 76 || v26 == 81)
              goto LABEL_14;
            goto LABEL_22;
        }
      }
      ++a3;
      --a4;
    }
    while (a4);
  }

}

id sub_18A790500(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  NSString *v21;
  Class v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  void *v46;
  NSObject *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint8_t buf[4];
  void *v55;
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v53 = a4;
  objc_msgSend_callbackProxyEndpoint(v5, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_interface(v9, v10, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_protocol(v13, v14, v15, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_ckOperationClassName(v5, v18, v19, v20);
  v21 = (NSString *)objc_claimAutoreleasedReturnValue();
  v22 = NSClassFromString(v21);

  if (v22)
  {
    v26 = objc_msgSend_daemonCallbackCompletionSelector(v22, v23, v24, v25);
    CKExtendedMethodSignatureForProtocolSelector(v17, v26);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_invocationWithMethodSignature_(MEMORY[0x1E0C99DB8], v28, (uint64_t)v27, v29);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_retainArguments(v30, v31, v32, v33);
    objc_msgSend_setSelector_(v30, v34, v26, v35);
    v41 = objc_msgSend_numberOfArguments(v27, v36, v37, v38);
    while (--v41 >= 2)
    {
      v42 = (void *)objc_msgSend__classForObjectAtArgumentIndex_(v27, v39, v41, v40);
      v43 = objc_opt_class();
      if (objc_msgSend_isSubclassOfClass_(v42, v44, v43, v45))
      {
        objc_msgSend_setArgument_atIndex_(v30, v39, (uint64_t)&v53, v41);
        break;
      }
    }

  }
  else
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v46 = (void *)ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_FAULT))
    {
      v48 = v46;
      objc_msgSend_ckOperationClassName(v5, v49, v50, v51);
      v52 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v55 = v52;
      _os_log_fault_impl(&dword_18A5C5000, v48, OS_LOG_TYPE_FAULT, "Class %@ couldn't be created in the daemon", buf, 0xCu);

    }
    v30 = 0;
  }

  return v30;
}

uint64_t CKDatabaseScopeFromString(void *a1)
{
  id v1;
  uint64_t v2;
  const char *v3;
  const char *v4;
  const char *v5;
  const char *v6;

  v1 = a1;
  v2 = 1;
  if (objc_msgSend_compare_options_(v1, v3, (uint64_t)CFSTR("Public"), 1))
  {
    if (objc_msgSend_compare_options_(v1, v4, (uint64_t)CFSTR("Private"), 1))
    {
      if (objc_msgSend_compare_options_(v1, v5, (uint64_t)CFSTR("Shared"), 1))
        v2 = 4 * (objc_msgSend_compare_options_(v1, v6, (uint64_t)CFSTR("Organization"), 1) == 0);
      else
        v2 = 3;
    }
    else
    {
      v2 = 2;
    }
  }

  return v2;
}

uint64_t CKIsValidOperationForScope()
{
  return 1;
}

void sub_18A790924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A79093C(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  int v4;
  id v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v3 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
  {
    v4 = 138412290;
    v5 = v2;
    _os_log_error_impl(&dword_18A5C5000, v3, OS_LOG_TYPE_ERROR, "Couldn't talk to daemon while counting asset cache items, check your syslog.  Error %@", (uint8_t *)&v4, 0xCu);
  }

}

void sub_18A790A18(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  _QWORD v10[5];

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v8 = objc_msgSend_scope(v3, v5, v6, v7);
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = sub_18A790AA0;
  v10[3] = &unk_1E1F64E78;
  v10[4] = *(_QWORD *)(a1 + 40);
  objc_msgSend_countAssetCacheItemsWithDatabaseScope_completionHandler_(v4, v9, v8, (uint64_t)v10);

}

void sub_18A790AA0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  NSObject *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (v5)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v6 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
    {
      v7 = 138412290;
      v8 = v5;
      _os_log_error_impl(&dword_18A5C5000, v6, OS_LOG_TYPE_ERROR, "Error while counting asset cache items, check your syslog %@", (uint8_t *)&v7, 0xCu);
    }
  }
  else
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  }

}

void sub_18A790C24(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = a2;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v3 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v4 = 0;
    _os_log_error_impl(&dword_18A5C5000, v3, OS_LOG_TYPE_ERROR, "Couldn't talk to daemon while clearing asset cache, check your syslog", v4, 2u);
  }

}

void sub_18A790CC8(uint64_t a1, void *a2)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  id v8;

  v2 = *(void **)(a1 + 32);
  v8 = a2;
  v6 = objc_msgSend_scope(v2, v3, v4, v5);
  objc_msgSend_clearAssetCacheWithDatabaseScope_completionHandler_(v8, v7, v6, (uint64_t)&unk_1E1F58FB8);

}

void sub_18A790D14(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  int v4;
  id v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  if (v2)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v3 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
    {
      v4 = 138412290;
      v5 = v2;
      _os_log_error_impl(&dword_18A5C5000, v3, OS_LOG_TYPE_ERROR, "Error while clearing record cache, check your syslog %@", (uint8_t *)&v4, 0xCu);
    }
  }

}

void sub_18A790E7C(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = a2;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v3 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v4 = 0;
    _os_log_error_impl(&dword_18A5C5000, v3, OS_LOG_TYPE_ERROR, "Couldn't talk to daemon while showing asset cache, check your syslog", v4, 2u);
  }

}

void sub_18A790F20(uint64_t a1, void *a2)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  id v9;

  v2 = *(void **)(a1 + 32);
  v9 = a2;
  v6 = objc_msgSend_scope(v2, v3, v4, v5);
  objc_msgSend_showAssetCacheWithDatabaseScope_(v9, v7, v6, v8);

}

void sub_18A790FEC(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = a2;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v3 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v4 = 0;
    _os_log_error_impl(&dword_18A5C5000, v3, OS_LOG_TYPE_ERROR, "Couldn't talk to daemon while clearing record cache, check your syslog", v4, 2u);
  }

}

void sub_18A791090(uint64_t a1, void *a2)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  id v9;

  v2 = *(void **)(a1 + 32);
  v9 = a2;
  v6 = objc_msgSend_scope(v2, v3, v4, v5);
  objc_msgSend_clearRecordCacheWithDatabaseScope_(v9, v7, v6, v8);

}

void sub_18A7911B4(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v4 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
  {
    v5 = *(_QWORD *)(a1 + 32);
    v6 = 138412290;
    v7 = v5;
    _os_log_error_impl(&dword_18A5C5000, v4, OS_LOG_TYPE_ERROR, "Couldn't talk to daemon while clearing auth tokens for record with id %@, check your syslog", (uint8_t *)&v6, 0xCu);
  }

}

void sub_18A7912A0(uint64_t a1, void *a2)
{
  uint64_t v2;
  void *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  id v9;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  v9 = a2;
  v7 = objc_msgSend_scope(v3, v4, v5, v6);
  objc_msgSend_clearAuthTokensWithRecordID_databaseScope_(v9, v8, v2, v7);

}

void sub_18A791390(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = a2;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v3 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v4 = 0;
    _os_log_error_impl(&dword_18A5C5000, v3, OS_LOG_TYPE_ERROR, "Couldn't talk to daemon while getting Record PCS diagnostics for zones. Check your syslog", v4, 2u);
  }

}

uint64_t sub_18A791434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1E0DE7D20](a2, sel_getRecordPCSDiagnosticsForZonesWithCompletionHandler_, *(_QWORD *)(a1 + 32), a4);
}

void sub_18A7914F8(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = a2;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v3 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v4 = 0;
    _os_log_error_impl(&dword_18A5C5000, v3, OS_LOG_TYPE_ERROR, "Couldn't talk to daemon while clearing record cache, check your syslog", v4, 2u);
  }

}

void sub_18A79159C(_QWORD *a1, void *a2)
{
  uint64_t v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  id v10;

  v3 = a1[6];
  v4 = (void *)a1[4];
  v10 = a2;
  v8 = objc_msgSend_scope(v4, v5, v6, v7);
  objc_msgSend_clearCachesWithOptions_databaseScope_completionHandler_(v10, v9, v3, v8, a1[5]);

}

void sub_18A7916CC(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = a2;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v3 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v4 = 0;
    _os_log_error_impl(&dword_18A5C5000, v3, OS_LOG_TYPE_ERROR, "Couldn't talk to daemon while clearing record cache, check your syslog", v4, 2u);
  }

}

void sub_18A791770(_QWORD *a1, void *a2)
{
  uint64_t v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  id v10;

  v3 = a1[4];
  v4 = (void *)a1[5];
  v10 = a2;
  v8 = objc_msgSend_scope(v4, v5, v6, v7);
  objc_msgSend_clearCachesForRecordWithRecordID_databaseScope_completionHandler_(v10, v9, v3, v8, a1[6]);

}

void sub_18A79189C(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = a2;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v3 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v4 = 0;
    _os_log_error_impl(&dword_18A5C5000, v3, OS_LOG_TYPE_ERROR, "Couldn't talk to daemon while clearing record cache, check your syslog", v4, 2u);
  }

}

void sub_18A791940(_QWORD *a1, void *a2)
{
  uint64_t v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  id v10;

  v3 = a1[4];
  v4 = (void *)a1[5];
  v10 = a2;
  v8 = objc_msgSend_scope(v4, v5, v6, v7);
  objc_msgSend_clearCachesForZoneWithZoneID_databaseScope_completionHandler_(v10, v9, v3, v8, a1[6]);

}

void sub_18A791A7C(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = a2;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v3 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v4 = 0;
    _os_log_error_impl(&dword_18A5C5000, v3, OS_LOG_TYPE_ERROR, "Couldn't talk to daemon while fetching zone PCS from cache, check your syslog", v4, 2u);
  }

}

void sub_18A791B20(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  id v10;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(a1 + 40);
  v10 = a2;
  v8 = objc_msgSend_scope(v4, v5, v6, v7);
  objc_msgSend_fetchPCSFromCacheForZoneWithZoneID_databaseScope_localCacheOnly_completionHandler_(v10, v9, v3, v8, *(unsigned __int8 *)(a1 + 56), *(_QWORD *)(a1 + 48));

}

void sub_18A791C50(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = a2;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v3 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v4 = 0;
    _os_log_error_impl(&dword_18A5C5000, v3, OS_LOG_TYPE_ERROR, "Couldn't talk to daemon while fetching share PCS from cache, check your syslog", v4, 2u);
  }

}

void sub_18A791CF4(_QWORD *a1, void *a2)
{
  uint64_t v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  id v10;

  v3 = a1[4];
  v4 = (void *)a1[5];
  v10 = a2;
  v8 = objc_msgSend_scope(v4, v5, v6, v7);
  objc_msgSend_fetchPCSFromCacheForShareWithRecordID_databaseScope_completionHandler_(v10, v9, v3, v8, a1[6]);

}

void sub_18A791E20(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = a2;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v3 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v4 = 0;
    _os_log_error_impl(&dword_18A5C5000, v3, OS_LOG_TYPE_ERROR, "Couldn't talk to daemon while fetching record PCS from cache, check your syslog", v4, 2u);
  }

}

void sub_18A791EC4(_QWORD *a1, void *a2)
{
  uint64_t v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  id v10;

  v3 = a1[4];
  v4 = (void *)a1[5];
  v10 = a2;
  v8 = objc_msgSend_scope(v4, v5, v6, v7);
  objc_msgSend_fetchPCSFromCacheForRecordWithRecordID_databaseScope_completionHandler_(v10, v9, v3, v8, a1[6]);

}

void sub_18A791F68(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = a2;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v3 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v4 = 0;
    _os_log_error_impl(&dword_18A5C5000, v3, OS_LOG_TYPE_ERROR, "Couldn't talk to daemon while fetching zone PCS from cache, check your syslog", v4, 2u);
  }

}

uint64_t sub_18A79200C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1E0DE7D20](a2, sel_clearInvalidatedPCSCacheEntriesIfNeeded, a3, a4);
}

void sub_18A792488(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  NSObject *v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  int v34;
  uint64_t v35;
  __int16 v36;
  void *v37;
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  objc_msgSend_allValues(v5, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend_count(v10, v11, v12, v13);

  if (v14 >= 2)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v18 = (void *)ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
    {
      v28 = *(_QWORD *)(a1 + 32);
      v29 = v18;
      objc_msgSend_allValues(v5, v30, v31, v32);
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      v34 = 138412546;
      v35 = v28;
      v36 = 2112;
      v37 = v33;
      _os_log_error_impl(&dword_18A5C5000, v29, OS_LOG_TYPE_ERROR, "Fetching record %@, got too many results %@", (uint8_t *)&v34, 0x16u);

    }
  }
  v19 = *(_QWORD *)(a1 + 40);
  if (v19)
  {
    objc_msgSend_allValues(v5, v15, v16, v17);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_firstObject(v20, v21, v22, v23);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_CKItemErrorForID_(v6, v25, *(_QWORD *)(a1 + 32), v26);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *, void *))(v19 + 16))(v19, v24, v27);

  }
}

void sub_18A792828(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  NSObject *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  int v30;
  void *v31;
  __int16 v32;
  id v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v6 = a2;
  v7 = a4;
  if ((unint64_t)objc_msgSend_count(v6, v8, v9, v10) >= 2)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v14 = (void *)ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
    {
      v24 = *(void **)(a1 + 32);
      v25 = v14;
      objc_msgSend_recordID(v24, v26, v27, v28);
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      v30 = 138412546;
      v31 = v29;
      v32 = 2112;
      v33 = v6;
      _os_log_error_impl(&dword_18A5C5000, v25, OS_LOG_TYPE_ERROR, "Saving record %@, got too many results %@", (uint8_t *)&v30, 0x16u);

    }
  }
  v15 = *(_QWORD *)(a1 + 40);
  if (v15)
  {
    objc_msgSend_firstObject(v6, v11, v12, v13);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_recordID(*(void **)(a1 + 32), v17, v18, v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_CKItemErrorForID_(v7, v21, (uint64_t)v20, v22);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *, void *))(v15 + 16))(v15, v16, v23);

  }
}

void sub_18A792BB8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  __int16 v23;
  id v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  if ((unint64_t)objc_msgSend_count(v6, v8, v9, v10) >= 2)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v14 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
    {
      v20 = *(_QWORD *)(a1 + 32);
      v21 = 138412546;
      v22 = v20;
      v23 = 2112;
      v24 = v6;
      _os_log_error_impl(&dword_18A5C5000, v14, OS_LOG_TYPE_ERROR, "Deleting record with id %@, got too many results %@", (uint8_t *)&v21, 0x16u);
    }
  }
  v15 = *(_QWORD *)(a1 + 40);
  if (v15)
  {
    objc_msgSend_firstObject(v6, v11, v12, v13);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_CKItemErrorForID_(v7, v17, *(_QWORD *)(a1 + 32), v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *, void *))(v15 + 16))(v15, v16, v19);

  }
}

void sub_18A792F30(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  const char *v10;
  uint64_t v11;
  id v12;

  v12 = a2;
  v7 = a3;
  v8 = a4;
  if (v7)
  {
    v9 = *(id *)(a1 + 32);
    objc_sync_enter(v9);
    objc_msgSend_addObject_(*(void **)(a1 + 32), v10, (uint64_t)v7, v11);
    objc_sync_exit(v9);

  }
}

void sub_18A792FB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_18A792FC8(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, *(_QWORD *)(a1 + 32));
  return result;
}

void sub_18A7930C0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v3 = *(_QWORD *)(a1 + 32);
  if (v3)
  {
    v5 = a3;
    objc_msgSend_allValues(a2, v6, v7, v8);
    v9 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, id, id))(v3 + 16))(v3, v9, v5);

  }
}

void sub_18A79332C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;
  id v7;
  const char *v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;

  v3 = *(_QWORD *)(a1 + 40);
  if (v3)
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = a3;
    objc_msgSend_objectForKeyedSubscript_(a2, v8, v6, v9);
    v13 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend_CKItemErrorForID_(v7, v10, *(_QWORD *)(a1 + 32), v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    (*(void (**)(uint64_t, id, void *))(v3 + 16))(v3, v13, v12);
  }
}

void sub_18A7935CC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  id v18;

  v4 = *(_QWORD *)(a1 + 40);
  if (v4)
  {
    v7 = a4;
    objc_msgSend_firstObject(a2, v8, v9, v10);
    v18 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend_zoneID(*(void **)(a1 + 32), v11, v12, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_CKItemErrorForID_(v7, v15, (uint64_t)v14, v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    (*(void (**)(uint64_t, id, void *))(v4 + 16))(v4, v18, v17);
  }
}

void sub_18A79386C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  void *v13;
  id v14;

  v4 = *(_QWORD *)(a1 + 40);
  if (v4)
  {
    v7 = a4;
    objc_msgSend_firstObject(a3, v8, v9, v10);
    v14 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend_CKItemErrorForID_(v7, v11, *(_QWORD *)(a1 + 32), v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    (*(void (**)(uint64_t, id, void *))(v4 + 16))(v4, v14, v13);
  }
}

void sub_18A793AF8(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  __int16 v27;
  id v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v6 = a2;
  v7 = a4;
  if ((unint64_t)objc_msgSend_count(v6, v8, v9, v10) >= 2)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v14 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
    {
      v24 = *(_QWORD *)(a1 + 32);
      v25 = 138412546;
      v26 = v24;
      v27 = 2112;
      v28 = v6;
      _os_log_error_impl(&dword_18A5C5000, v14, OS_LOG_TYPE_ERROR, "Saving subscription %@, got too many results %@", (uint8_t *)&v25, 0x16u);
    }
  }
  v15 = *(_QWORD *)(a1 + 40);
  if (v15)
  {
    objc_msgSend_firstObject(v6, v11, v12, v13);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_subscriptionID(*(void **)(a1 + 32), v17, v18, v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_CKItemErrorForID_(v7, v21, (uint64_t)v20, v22);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *, void *))(v15 + 16))(v15, v16, v23);

  }
}

void sub_18A793ED8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  void *v15;
  char *v16;

  v16 = a2;
  v7 = a3;
  v8 = *(_QWORD *)(a1 + 48);
  if (v8)
  {
    if (v16)
    {
      objc_msgSend_zoneID(*(void **)(a1 + 32), v16, v5, v6);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v16, v10, (uint64_t)v9, v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v12, v13, *(_QWORD *)(a1 + 40), v14);
      v15 = (void *)objc_claimAutoreleasedReturnValue();

      v8 = *(_QWORD *)(a1 + 48);
    }
    else
    {
      v15 = 0;
    }
    (*(void (**)(uint64_t, void *, id))(v8 + 16))(v8, v15, v7);

  }
}

void sub_18A794188(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  __int16 v23;
  id v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  if ((unint64_t)objc_msgSend_count(v6, v8, v9, v10) >= 2)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v14 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
    {
      v20 = *(_QWORD *)(a1 + 32);
      v21 = 138412546;
      v22 = v20;
      v23 = 2112;
      v24 = v6;
      _os_log_error_impl(&dword_18A5C5000, v14, OS_LOG_TYPE_ERROR, "Deleting subscription %@, got too many results %@", (uint8_t *)&v21, 0x16u);
    }
  }
  v15 = *(_QWORD *)(a1 + 40);
  if (v15)
  {
    objc_msgSend_firstObject(v6, v11, v12, v13);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_CKItemErrorForID_(v7, v17, *(_QWORD *)(a1 + 32), v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *, void *))(v15 + 16))(v15, v16, v19);

  }
}

void sub_18A7944E0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  __int16 v21;
  id v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if ((unint64_t)objc_msgSend_count(v5, v7, v8, v9) >= 2)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v12 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
    {
      v18 = *(_QWORD *)(a1 + 32);
      v19 = 138412546;
      v20 = v18;
      v21 = 2112;
      v22 = v5;
      _os_log_error_impl(&dword_18A5C5000, v12, OS_LOG_TYPE_ERROR, "Fetching subscription with id %@, got too many results %@", (uint8_t *)&v19, 0x16u);
    }
  }
  v13 = *(_QWORD *)(a1 + 40);
  if (v13)
  {
    objc_msgSend_objectForKeyedSubscript_(v5, v10, *(_QWORD *)(a1 + 32), v11);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_CKItemErrorForID_(v6, v15, *(_QWORD *)(a1 + 32), v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *, void *))(v13 + 16))(v13, v14, v17);

  }
}

void sub_18A794728(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v3 = *(_QWORD *)(a1 + 32);
  if (v3)
  {
    v5 = a3;
    objc_msgSend_allValues(a2, v6, v7, v8);
    v9 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, id, id))(v3 + 16))(v3, v9, v5);

  }
}

void sub_18A795368(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 504) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 504);
    *(_QWORD *)(v8 + 504) = v7;

  }
}

void sub_18A7954F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A795510(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A795538(uint64_t a1)
{

}

void sub_18A795540(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 504));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A79569C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 512) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 512);
    *(_QWORD *)(v8 + 512) = v7;

  }
}

void sub_18A79582C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A795844(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 512));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7975E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18A7976E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_18A7977F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18A7979BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  if (v12 != v13)
  {

  }
  _Unwind_Resume(a1);
}

void sub_18A797AA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A797BD4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A797CDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v2;

  _Unwind_Resume(a1);
}

void sub_18A797E78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18A797F8C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A79805C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7980A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A798224(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18A79836C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_18A798484(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18A798560(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7985E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7988DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

uint64_t sub_18A798900(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_addTimestamp_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
}

void sub_18A798B08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18A798B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  CKDistributedTimestamp *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  const char *v11;
  uint64_t v12;
  id v13;

  if (a3)
  {
    v4 = a3 + a2 - 1;
    v5 = [CKDistributedTimestamp alloc];
    objc_msgSend_identifier(*(void **)(a1 + 32), v6, v7, v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = (id)objc_msgSend_initWithSiteIdentifier_clockValue_(v5, v10, (uint64_t)v9, v4);

    objc_msgSend_addTimestamp_(*(void **)(a1 + 40), v11, (uint64_t)v13, v12);
  }
}

void sub_18A798C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_18A798D1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_18A798DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18A798E44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A798E94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A798F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A798FA0(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  const char *v8;
  uint64_t v9;
  int isEqual;

  objc_msgSend_siteIdentifier(a2, (const char *)a2, a3, (uint64_t)a4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  isEqual = objc_msgSend_isEqual_(v7, v8, *(_QWORD *)(a1 + 32), v9);

  if (isEqual)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a3;
    *a4 = 1;
  }
}

void sub_18A79900C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A799098(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A799154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_18A799178(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  id v7;

  v4 = *(void **)(a1 + 32);
  objc_msgSend_siteIdentifier(a2, (const char *)a2, a3, a4);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObject_(v4, v5, (uint64_t)v7, v6);

}

void sub_18A7991BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A799204(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A799314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A79935C(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;

  v22 = a2;
  v9 = objc_msgSend_clockValue(v22, v6, v7, v8);
  v10 = *(void **)(a1 + 32);
  objc_msgSend_siteIdentifier(v22, v11, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_timestampForSiteIdentifier_(v10, v15, (uint64_t)v14, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = objc_msgSend_clockValue(v17, v18, v19, v20);

  if (v9 > v21)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    *a4 = 1;
  }

}

void sub_18A7993FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18A7994A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7995F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18A7996C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;

  _Unwind_Resume(a1);
}

void sub_18A7996EC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  id v7;

  v4 = *(void **)(a1 + 32);
  objc_msgSend_timestampAtIndex_(*(void **)(a1 + 40), a2, a3, a4);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addTimestamp_(v4, v5, (uint64_t)v7, v6);

}

void sub_18A79972C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A79987C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18A7998C4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  id v23;

  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v23 = v3;
  objc_msgSend_siteIdentifier(v3, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_timestampForSiteIdentifier_(v4, v9, (uint64_t)v8, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  if (v11)
  {
    v15 = objc_msgSend_clockValue(v23, v12, v13, v14);
    v21 = objc_msgSend_clockValue(v11, v16, v17, v18);
    v22 = *(void **)(a1 + 40);
    if (v15 >= v21)
      objc_msgSend_addTimestamp_(v22, v19, (uint64_t)v11, v20);
    else
      objc_msgSend_addTimestamp_(v22, v19, (uint64_t)v23, v20);
  }

}

void sub_18A799964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18A799A28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A799AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A799AF4(uint64_t a1, void *a2)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v6 = a2;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) ^= objc_msgSend_hash(v6, v3, v4, v5);

}

void sub_18A799B3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A799C78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

uint64_t sub_18A799CDC(uint64_t a1, void *a2, void *a3)
{
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a3;
  objc_msgSend_siteIdentifier(a2, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_siteIdentifier(v4, v9, v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_msgSend_CKCompare_(v8, v13, (uint64_t)v12, v14);

  return v15;
}

void sub_18A799D48(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_18A799D74(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  id v18;

  v5 = a2;
  v6 = *(void **)(a1 + 32);
  v18 = v5;
  objc_msgSend_description(v5, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_appendString_(v6, v11, (uint64_t)v10, v12);

  if (objc_msgSend_count(*(void **)(a1 + 40), v13, v14, v15) - 1 != a3)
    objc_msgSend_appendString_(*(void **)(a1 + 32), v16, (uint64_t)CFSTR("|"), v17);

}

void sub_18A799DF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18A799E74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A79A068(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 512) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 512);
    *(_QWORD *)(v8 + 512) = v7;

  }
}

void sub_18A79A1F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A79A210(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A79A238(uint64_t a1)
{

}

void sub_18A79A240(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 512));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A79A39C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void sub_18A79A52C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A79A544(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_18A79B6D8(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _BOOL4 v16;
  id v17;
  CKAPSMachServiceConnectionKey *v18;
  const char *v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  NSObject *v26;
  id v27;
  const char *v28;
  void *v29;
  CKAPSMachServiceConnectionDelegate *v30;
  const char *v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  const char *v35;
  const char *v36;
  void *v37;
  int v39;
  id v40;
  __int16 v41;
  id v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  objc_msgSend_sharedManager(CKProcessScopedStateManager, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_untrustedEntitlements(v11, v12, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = sub_18A5CD440(v15);

  if (v16)
  {
    if (qword_1ECD96CC0 != -1)
      dispatch_once(&qword_1ECD96CC0, &unk_1E1F58838);
    v17 = a1;
    objc_sync_enter(v17);
    v18 = [CKAPSMachServiceConnectionKey alloc];
    v20 = (void *)objc_msgSend_initWithEnvironmentName_namedDelegatePort_(v18, v19, (uint64_t)v6, (uint64_t)v7);
    objc_msgSend_objectForKeyedSubscript_((void *)qword_1ECD96CA8, v21, (uint64_t)v20, v22);
    v23 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v23)
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v26 = ck_log_facility_ck;
      if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_DEBUG))
      {
        v39 = 138543618;
        v40 = v7;
        v41 = 2114;
        v42 = v6;
        _os_log_debug_impl(&dword_18A5C5000, v26, OS_LOG_TYPE_DEBUG, "Creating new singleton APSConnection on port %{public}@ with environment %{public}@", (uint8_t *)&v39, 0x16u);
      }
      v27 = objc_alloc(MEMORY[0x1E0CFE148]);
      v29 = (void *)objc_msgSend_initWithEnvironmentName_namedDelegatePort_queue_(v27, v28, (uint64_t)v6, (uint64_t)v7, qword_1ECD96CB8);
      v30 = [CKAPSMachServiceConnectionDelegate alloc];
      v32 = (void *)objc_msgSend_initWithConnection_key_(v30, v31, (uint64_t)v29, (uint64_t)v20);
      objc_msgSend_setDelegate_(v29, v33, (uint64_t)v32, v34);
      objc_msgSend_setObject_forKeyedSubscript_((void *)qword_1ECD96CA8, v35, (uint64_t)v29, (uint64_t)v20);
      objc_msgSend_setObject_forKeyedSubscript_((void *)qword_1ECD96CB0, v36, (uint64_t)v32, (uint64_t)v20);

    }
    objc_msgSend_objectForKeyedSubscript_((void *)qword_1ECD96CA8, v24, (uint64_t)v20, v25);
    v37 = (void *)objc_claimAutoreleasedReturnValue();

    objc_sync_exit(v17);
  }
  else
  {
    v37 = 0;
  }

  return v37;
}

void sub_18A79B938(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A79B95C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  dispatch_queue_t v11;
  void *v12;
  NSObject *v13;

  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], a2, a3, a4);
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = (void *)qword_1ECD96CA8;
  qword_1ECD96CA8 = v4;

  objc_msgSend_dictionary(MEMORY[0x1E0C99E08], v6, v7, v8);
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = (void *)qword_1ECD96CB0;
  qword_1ECD96CB0 = v9;

  dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  v13 = objc_claimAutoreleasedReturnValue();
  v11 = dispatch_queue_create("com.apple.cloudkit.apsconnection.machservice", v13);
  v12 = (void *)qword_1ECD96CB8;
  qword_1ECD96CB8 = (uint64_t)v11;

}

uint64_t CKOperationGroupTransferSizeForBytes(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = HIDWORD(a1);
  v2 = 6;
  v3 = a1 >> 31;
  v4 = 5;
  v5 = a1 >> 30;
  v6 = 4;
  v7 = a1 >> 22;
  v8 = 3;
  v9 = a1 >> 21;
  v10 = a1 >> 20 == 0;
  v11 = 1;
  if (!v10)
    v11 = 2;
  if (v9 <= 4)
    v8 = v11;
  if (v7 <= 0x18)
    v6 = v8;
  if (!v5)
    v4 = v6;
  if (v3 <= 4)
    v2 = v4;
  if (v1 <= 0x18)
    return v2;
  else
    return 7;
}

void sub_18A79C784(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_18A79C878(uint64_t a1, void *a2, void *a3)
{
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int isUplink;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  void *v21;

  v4 = a2;
  v8 = objc_msgSend_unsignedIntegerValue(a3, v5, v6, v7);
  v9 = (void *)MEMORY[0x1E0CB3940];
  isUplink = objc_msgSend_isUplink(v4, v10, v11, v12);
  v17 = objc_msgSend_allowsCellularAccess(v4, v14, v15, v16);

  CKStringForNetworkServiceType(v8);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_stringWithFormat_(v9, v19, (uint64_t)CFSTR("(uplink:%d, allowsCellularAccess:%d, ServiceType: %@)"), v20, isUplink, v17, v18);
  v21 = (void *)objc_claimAutoreleasedReturnValue();

  return v21;
}

void sub_18A79D03C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_18A79D0DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A79D240(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A79D410(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

CKAnyPredicateValidator *sub_18A79DB20(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  id *v19;
  id v20;
  CKAnyPredicateValidator *v21;
  void *v23;
  const char *v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  id *v28;

  v13 = a1;
  if (!v13)
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v10, v11, v12);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v24, (uint64_t)"id<CKObjectValidating> any(__strong id<CKObjectValidating>, ...)", v25);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v23, v27, (uint64_t)v26, (uint64_t)CFSTR("CKPredicateValidatorConvenienceFunctions.m"), 14, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("validator != nil"));

  }
  objc_msgSend_arrayWithObject_(MEMORY[0x1E0C99DE8], v10, (uint64_t)v13, v12);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = (id *)&a10;
  v15 = a9;
  if (v15)
  {
    v18 = v15;
    do
    {
      objc_msgSend_addObject_(v14, v16, (uint64_t)v18, v17);
      v19 = v28++;
      v20 = *v19;

      v18 = v20;
    }
    while (v20);
  }
  v21 = objc_alloc_init(CKAnyPredicateValidator);
  sub_18A7D08D8((uint64_t)v21, v14);

  return v21;
}

id sub_18A79DC44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  id *v19;
  id v20;
  CKAllPredicateValidator *v21;
  const char *v22;
  uint64_t v23;
  void *v24;
  void *v26;
  const char *v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  id *v31;

  v13 = a1;
  if (!v13)
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v10, v11, v12);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v27, (uint64_t)"id<CKObjectValidating> all(__strong id<CKObjectValidating>, ...)", v28);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v26, v30, (uint64_t)v29, (uint64_t)CFSTR("CKPredicateValidatorConvenienceFunctions.m"), 33, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("validator != nil"));

  }
  objc_msgSend_arrayWithObject_(MEMORY[0x1E0C99DE8], v10, (uint64_t)v13, v12);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v31 = (id *)&a10;
  v15 = a9;
  if (v15)
  {
    v18 = v15;
    do
    {
      objc_msgSend_addObject_(v14, v16, (uint64_t)v18, v17);
      v19 = v31++;
      v20 = *v19;

      v18 = v20;
    }
    while (v20);
  }
  v21 = [CKAllPredicateValidator alloc];
  v24 = (void *)objc_msgSend_initWithValidators_(v21, v22, (uint64_t)v14, v23);

  return v24;
}

id sub_18A79DD68(void *a1)
{
  id v1;
  CKRecursivePredicateValidator *v2;
  const char *v3;
  uint64_t v4;
  void *v5;

  v1 = a1;
  v2 = [CKRecursivePredicateValidator alloc];
  v5 = (void *)objc_msgSend_initWithValidator_(v2, v3, (uint64_t)v1, v4);

  return v5;
}

id sub_18A79DDAC()
{
  if (qword_1ECD96CD0 != -1)
    dispatch_once(&qword_1ECD96CD0, &unk_1E1F58878);
  return (id)qword_1ECD96CC8;
}

void sub_18A79DDEC()
{
  CKCompoundTypePredicateValidator *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [CKCompoundTypePredicateValidator alloc];
  v3 = objc_msgSend_initWithType_(v0, v1, 1, v2);
  v4 = (void *)qword_1ECD96CC8;
  qword_1ECD96CC8 = v3;

}

id sub_18A79DE1C()
{
  if (qword_1ECD96CE0 != -1)
    dispatch_once(&qword_1ECD96CE0, &unk_1E1F58C38);
  return (id)qword_1ECD96CD8;
}

void sub_18A79DE5C()
{
  CKCompoundTypePredicateValidator *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [CKCompoundTypePredicateValidator alloc];
  v3 = objc_msgSend_initWithType_(v0, v1, 0, v2);
  v4 = (void *)qword_1ECD96CD8;
  qword_1ECD96CD8 = v3;

}

CKTruePredicateValidator *sub_18A79DE8C()
{
  return objc_alloc_init(CKTruePredicateValidator);
}

id sub_18A79DEA8(void *a1)
{
  CKCompoundSubpredicateValidator *v2;
  id *v3;
  const char *v4;
  uint64_t v5;
  void *v6;

  v2 = [CKCompoundSubpredicateValidator alloc];
  v3 = sub_18A7D4B04([CKKindOfClassValidator alloc], a1);
  v6 = (void *)objc_msgSend_initWithValidator_(v2, v4, (uint64_t)v3, v5);

  return v6;
}

id sub_18A79DF04(void *a1)
{
  id v1;
  CKFlipFlopPredicateValidator *v2;
  const char *v3;
  uint64_t v4;
  void *v5;

  v1 = a1;
  v2 = [CKFlipFlopPredicateValidator alloc];
  v5 = (void *)objc_msgSend_initWithValidator_(v2, v3, (uint64_t)v1, v4);

  return v5;
}

CKComparisonPredicateValidator *sub_18A79DF48(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  CKComparisonPredicateValidator *v17;
  const char *v18;
  uint64_t v19;
  CKComparisonPredicateValidator *v20;
  const char *v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  void *v36;
  const char *v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  void *v41;
  const char *v42;
  uint64_t v43;
  void *v44;
  const char *v45;
  void *v46;
  const char *v47;
  uint64_t v48;
  void *v49;
  const char *v50;

  v9 = a1;
  v10 = a2;
  v11 = a3;
  v12 = a4;
  v16 = a5;
  if (v10)
  {
    if (v11)
      goto LABEL_3;
LABEL_12:
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v13, v14, v15);
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v42, (uint64_t)"id<CKObjectValidating> comparison(__strong id<CKObjectValidating>, __strong id<CKObjectValidating>, __strong id<CKObjectValidating>, __strong id<CKObjectValidating>, __strong id<CKObjectValidating>)", v43);
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v41, v45, (uint64_t)v44, (uint64_t)CFSTR("CKPredicateValidatorConvenienceFunctions.m"), 93, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("op"));

    if (v16)
      goto LABEL_4;
    goto LABEL_13;
  }
  objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v13, v14, v15);
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v37, (uint64_t)"id<CKObjectValidating> comparison(__strong id<CKObjectValidating>, __strong id<CKObjectValidating>, __strong id<CKObjectValidating>, __strong id<CKObjectValidating>, __strong id<CKObjectValidating>)", v38);
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v36, v40, (uint64_t)v39, (uint64_t)CFSTR("CKPredicateValidatorConvenienceFunctions.m"), 92, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("lhs"));

  if (!v11)
    goto LABEL_12;
LABEL_3:
  if (v16)
    goto LABEL_4;
LABEL_13:
  objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v13, v14, v15);
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v47, (uint64_t)"id<CKObjectValidating> comparison(__strong id<CKObjectValidating>, __strong id<CKObjectValidating>, __strong id<CKObjectValidating>, __strong id<CKObjectValidating>, __strong id<CKObjectValidating>)", v48);
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v46, v50, (uint64_t)v49, (uint64_t)CFSTR("CKPredicateValidatorConvenienceFunctions.m"), 94, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("rhs"));

LABEL_4:
  v17 = objc_alloc_init(CKComparisonPredicateValidator);
  v20 = v17;
  if (v9)
  {
    objc_msgSend_setModifierValidator_(v17, v18, (uint64_t)v9, v19);
  }
  else
  {
    sub_18A79E1A8();
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setModifierValidator_(v20, v24, (uint64_t)v23, v25);

  }
  objc_msgSend_setLeftExpressionValidator_(v20, v21, (uint64_t)v10, v22);
  objc_msgSend_setOperatorValidator_(v20, v26, (uint64_t)v11, v27);
  if (v12)
  {
    objc_msgSend_setOptionsValidator_(v20, v28, (uint64_t)v12, v29);
  }
  else
  {
    sub_18A79E1A8();
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setOptionsValidator_(v20, v33, (uint64_t)v32, v34);

  }
  objc_msgSend_setRightExpressionValidator_(v20, v30, (uint64_t)v16, v31);

  return v20;
}

id sub_18A79E1A8()
{
  if (qword_1ECD96E70 != -1)
    dispatch_once(&qword_1ECD96E70, &unk_1E1F59918);
  return (id)qword_1ECD96E68;
}

id sub_18A79E1E8()
{
  if (qword_1ECD96CF0 != -1)
    dispatch_once(&qword_1ECD96CF0, &unk_1E1F58DF8);
  return (id)qword_1ECD96CE8;
}

void sub_18A79E228()
{
  CKComparisonOperatorValidator *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [CKComparisonOperatorValidator alloc];
  v3 = objc_msgSend_initWithOperatorType_(v0, v1, 4, v2);
  v4 = (void *)qword_1ECD96CE8;
  qword_1ECD96CE8 = v3;

}

id sub_18A79E258()
{
  if (qword_1ECD96D00 != -1)
    dispatch_once(&qword_1ECD96D00, &unk_1E1F58E58);
  return (id)qword_1ECD96CF8;
}

void sub_18A79E298()
{
  CKComparisonOperatorValidator *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [CKComparisonOperatorValidator alloc];
  v3 = objc_msgSend_initWithOperatorType_(v0, v1, 5, v2);
  v4 = (void *)qword_1ECD96CF8;
  qword_1ECD96CF8 = v3;

}

id sub_18A79E2C8()
{
  if (qword_1ECD96D10 != -1)
    dispatch_once(&qword_1ECD96D10, &unk_1E1F58ED8);
  return (id)qword_1ECD96D08;
}

void sub_18A79E308()
{
  CKComparisonOperatorValidator *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [CKComparisonOperatorValidator alloc];
  v3 = objc_msgSend_initWithOperatorType_(v0, v1, 0, v2);
  v4 = (void *)qword_1ECD96D08;
  qword_1ECD96D08 = v3;

}

id sub_18A79E338()
{
  if (qword_1ECD96D20 != -1)
    dispatch_once(&qword_1ECD96D20, &unk_1E1F651B0);
  return (id)qword_1ECD96D18;
}

void sub_18A79E378()
{
  CKComparisonOperatorValidator *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [CKComparisonOperatorValidator alloc];
  v3 = objc_msgSend_initWithOperatorType_(v0, v1, 1, v2);
  v4 = (void *)qword_1ECD96D18;
  qword_1ECD96D18 = v3;

}

id sub_18A79E3A8()
{
  if (qword_1ECD96D30 != -1)
    dispatch_once(&qword_1ECD96D30, &unk_1E1F58FD8);
  return (id)qword_1ECD96D28;
}

void sub_18A79E3E8()
{
  CKComparisonOperatorValidator *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [CKComparisonOperatorValidator alloc];
  v3 = objc_msgSend_initWithOperatorType_(v0, v1, 2, v2);
  v4 = (void *)qword_1ECD96D28;
  qword_1ECD96D28 = v3;

}

id sub_18A79E418()
{
  if (qword_1ECD96D40 != -1)
    dispatch_once(&qword_1ECD96D40, &unk_1E1F651D0);
  return (id)qword_1ECD96D38;
}

void sub_18A79E458()
{
  CKComparisonOperatorValidator *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [CKComparisonOperatorValidator alloc];
  v3 = objc_msgSend_initWithOperatorType_(v0, v1, 3, v2);
  v4 = (void *)qword_1ECD96D38;
  qword_1ECD96D38 = v3;

}

id sub_18A79E488()
{
  if (qword_1ECD96D50 != -1)
    dispatch_once(&qword_1ECD96D50, &unk_1E1F590F8);
  return (id)qword_1ECD96D48;
}

void sub_18A79E4C8()
{
  CKComparisonOperatorValidator *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [CKComparisonOperatorValidator alloc];
  v3 = objc_msgSend_initWithOperatorType_(v0, v1, 8, v2);
  v4 = (void *)qword_1ECD96D48;
  qword_1ECD96D48 = v3;

}

id sub_18A79E4F8()
{
  if (qword_1ECD96D60 != -1)
    dispatch_once(&qword_1ECD96D60, &unk_1E1F591D8);
  return (id)qword_1ECD96D58;
}

void sub_18A79E538()
{
  CKComparisonOperatorValidator *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [CKComparisonOperatorValidator alloc];
  v3 = objc_msgSend_initWithOperatorType_(v0, v1, 10, v2);
  v4 = (void *)qword_1ECD96D58;
  qword_1ECD96D58 = v3;

}

id sub_18A79E568()
{
  if (qword_1ECD96D70 != -1)
    dispatch_once(&qword_1ECD96D70, &unk_1E1F591F8);
  return (id)qword_1ECD96D68;
}

void sub_18A79E5A8()
{
  CKComparisonOperatorValidator *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [CKComparisonOperatorValidator alloc];
  v3 = objc_msgSend_initWithOperatorType_(v0, v1, 99, v2);
  v4 = (void *)qword_1ECD96D68;
  qword_1ECD96D68 = v3;

}

id sub_18A79E5D8()
{
  if (qword_1ECD96D80 != -1)
    dispatch_once(&qword_1ECD96D80, &unk_1E1F59278);
  return (id)qword_1ECD96D78;
}

void sub_18A79E618()
{
  CKComparisonOperatorValidator *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [CKComparisonOperatorValidator alloc];
  v3 = objc_msgSend_initWithOperatorType_(v0, v1, 100, v2);
  v4 = (void *)qword_1ECD96D78;
  qword_1ECD96D78 = v3;

}

id sub_18A79E648()
{
  if (qword_1ECD96D90 != -1)
    dispatch_once(&qword_1ECD96D90, &unk_1E1F592F8);
  return (id)qword_1ECD96D88;
}

void sub_18A79E688()
{
  CKComparisonOperatorValidator *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [CKComparisonOperatorValidator alloc];
  v3 = objc_msgSend_initWithOperatorType_(v0, v1, 1000, v2);
  v4 = (void *)qword_1ECD96D88;
  qword_1ECD96D88 = v3;

}

id sub_18A79E6B8()
{
  if (qword_1ECD96DA0 != -1)
    dispatch_once(&qword_1ECD96DA0, &unk_1E1F59378);
  return (id)qword_1ECD96D98;
}

void sub_18A79E6F8()
{
  CKComparisonModifierValidator *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [CKComparisonModifierValidator alloc];
  v3 = objc_msgSend_initWithModifier_(v0, v1, 0, v2);
  v4 = (void *)qword_1ECD96D98;
  qword_1ECD96D98 = v3;

}

id sub_18A79E728()
{
  if (qword_1ECD96DB0 != -1)
    dispatch_once(&qword_1ECD96DB0, &unk_1E1F593B8);
  return (id)qword_1ECD96DA8;
}

void sub_18A79E768()
{
  CKComparisonModifierValidator *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [CKComparisonModifierValidator alloc];
  v3 = objc_msgSend_initWithModifier_(v0, v1, 2, v2);
  v4 = (void *)qword_1ECD96DA8;
  qword_1ECD96DA8 = v3;

}

id sub_18A79E798()
{
  if (qword_1ECD96DC0 != -1)
    dispatch_once(&qword_1ECD96DC0, &unk_1E1F593F8);
  return (id)qword_1ECD96DB8;
}

void sub_18A79E7D8()
{
  CKComparisonModifierValidator *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = [CKComparisonModifierValidator alloc];
  v3 = objc_msgSend_initWithModifier_(v0, v1, 1, v2);
  v4 = (void *)qword_1ECD96DB8;
  qword_1ECD96DB8 = v3;

}

_QWORD *sub_18A79E808(uint64_t a1)
{
  return sub_18A7D2D1C([CKComparisonOptionsValidator alloc], a1);
}

id sub_18A79E838()
{
  if (qword_1ECD96DD0 != -1)
    dispatch_once(&qword_1ECD96DD0, &unk_1E1F651F0);
  return (id)qword_1ECD96DC8;
}

void sub_18A79E878()
{
  uint64_t v0;
  void *v1;

  sub_18A79E808(0);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)qword_1ECD96DC8;
  qword_1ECD96DC8 = v0;

}

id sub_18A79E8A0()
{
  if (qword_1ECD96DE0 != -1)
    dispatch_once(&qword_1ECD96DE0, &unk_1E1F59478);
  return (id)qword_1ECD96DD8;
}

void sub_18A79E8E0()
{
  uint64_t v0;
  void *v1;

  sub_18A79E808(11);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)qword_1ECD96DD8;
  qword_1ECD96DD8 = v0;

}

id *sub_18A79E908(void *a1)
{
  return sub_18A7D4B04([CKKindOfClassValidator alloc], a1);
}

id sub_18A79E938()
{
  if (qword_1ECD96DF0 != -1)
    dispatch_once(&qword_1ECD96DF0, &unk_1E1F594F8);
  return (id)qword_1ECD96DE8;
}

void sub_18A79E978()
{
  CKConstantValueExpressionValidator *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v0 = [CKConstantValueExpressionValidator alloc];
  sub_18A79E1A8();
  v5 = (id)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend_initWithValidator_(v0, v1, (uint64_t)v5, v2);
  v4 = (void *)qword_1ECD96DE8;
  qword_1ECD96DE8 = v3;

}

id sub_18A79E9D4()
{
  if (qword_1ECD96E00 != -1)
    dispatch_once(&qword_1ECD96E00, &unk_1E1F595D8);
  return (id)qword_1ECD96DF8;
}

void sub_18A79EA14()
{
  CKConstantValueExpressionValidator *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  CKKindOfCollectionClassValidator *v5;

  v0 = [CKConstantValueExpressionValidator alloc];
  v5 = objc_alloc_init(CKKindOfCollectionClassValidator);
  v3 = objc_msgSend_initWithValidator_(v0, v1, (uint64_t)v5, v2);
  v4 = (void *)qword_1ECD96DF8;
  qword_1ECD96DF8 = v3;

}

id sub_18A79EA74(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  CKConstantValueExpressionValidator *v5;
  id *v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  void *v11;
  const char *v12;
  uint64_t v13;
  void *v14;
  const char *v15;

  if (!a1)
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], a2, a3, a4);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v12, (uint64_t)"id<CKObjectValidating> cv(__unsafe_unretained Class)", v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v11, v15, (uint64_t)v14, (uint64_t)CFSTR("CKPredicateValidatorConvenienceFunctions.m"), 299, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("c != nil"));

  }
  v5 = [CKConstantValueExpressionValidator alloc];
  v6 = sub_18A7D4B04([CKKindOfClassValidator alloc], a1);
  v9 = (void *)objc_msgSend_initWithValidator_(v5, v7, (uint64_t)v6, v8);

  return v9;
}

id sub_18A79EB4C(void *a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  CKConstantValueExpressionValidator *v5;
  CKCustomBlockValidator *v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  void *v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  const char *v18;

  v4 = a1;
  if (!v4)
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v1, v2, v3);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v15, (uint64_t)"id<CKObjectValidating> cv_Val(NSError *(^__strong)(__strong id))", v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v14, v18, (uint64_t)v17, (uint64_t)CFSTR("CKPredicateValidatorConvenienceFunctions.m"), 303, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("validator != nil"));

  }
  v5 = [CKConstantValueExpressionValidator alloc];
  v6 = [CKCustomBlockValidator alloc];
  v9 = (void *)objc_msgSend_initWithBlock_(v6, v7, (uint64_t)v4, v8);
  v12 = (void *)objc_msgSend_initWithValidator_(v5, v10, (uint64_t)v9, v11);

  return v12;
}

id sub_18A79EC2C()
{
  if (qword_1ECD96E10 != -1)
    dispatch_once(&qword_1ECD96E10, &unk_1E1F59718);
  return (id)qword_1ECD96E08;
}

void sub_18A79EC6C()
{
  void *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v0 = (void *)objc_opt_class();
  sub_18A79EA74(v0, v1, v2, v3);
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = (void *)qword_1ECD96E08;
  qword_1ECD96E08 = v4;

}

id sub_18A79EC9C()
{
  if (qword_1ECD96E20 != -1)
    dispatch_once(&qword_1ECD96E20, &unk_1E1F559C0);
  return (id)qword_1ECD96E18;
}

void sub_18A79ECDC()
{
  void *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v0 = (void *)objc_opt_class();
  sub_18A79EA74(v0, v1, v2, v3);
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = (void *)qword_1ECD96E18;
  qword_1ECD96E18 = v4;

}

id sub_18A79ED0C()
{
  if (qword_1ECD96E30 != -1)
    dispatch_once(&qword_1ECD96E30, &unk_1E1F59798);
  return (id)qword_1ECD96E28;
}

void sub_18A79ED4C()
{
  void *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v0 = (void *)objc_opt_class();
  sub_18A79EA74(v0, v1, v2, v3);
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = (void *)qword_1ECD96E28;
  qword_1ECD96E28 = v4;

}

id sub_18A79ED7C()
{
  if (qword_1ECD96E40 != -1)
    dispatch_once(&qword_1ECD96E40, &unk_1E1F65210);
  return (id)qword_1ECD96E38;
}

void sub_18A79EDBC()
{
  CKKeyPathExpressionValidator *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v0 = [CKKeyPathExpressionValidator alloc];
  sub_18A79E1A8();
  v5 = (id)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend_initWithValidator_(v0, v1, (uint64_t)v5, v2);
  v4 = (void *)qword_1ECD96E38;
  qword_1ECD96E38 = v3;

}

id sub_18A79EE18(void *a1)
{
  id v1;
  CKKeyPathExpressionValidator *v2;
  CKStringValueValidator *v3;
  const char *v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  void *v9;

  v1 = a1;
  v2 = [CKKeyPathExpressionValidator alloc];
  v3 = [CKStringValueValidator alloc];
  v6 = (void *)objc_msgSend_initWithValue_(v3, v4, (uint64_t)v1, v5);

  v9 = (void *)objc_msgSend_initWithValidator_(v2, v7, (uint64_t)v6, v8);
  return v9;
}

id sub_18A79EE88()
{
  if (qword_1ECD96E50 != -1)
    dispatch_once(&qword_1ECD96E50, &unk_1E1F59858);
  return (id)qword_1ECD96E48;
}

void sub_18A79EEC8()
{
  uint64_t v0;
  void *v1;

  sub_18A79EE18(CFSTR("allTokens"));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)qword_1ECD96E48;
  qword_1ECD96E48 = v0;

}

id sub_18A79EEF4()
{
  if (qword_1ECD96E60 != -1)
    dispatch_once(&qword_1ECD96E60, &unk_1E1F598B8);
  return (id)qword_1ECD96E58;
}

void sub_18A79EF34()
{
  CKEvaluatedObjectExpressionValidator *v0;
  void *v1;

  v0 = objc_alloc_init(CKEvaluatedObjectExpressionValidator);
  v1 = (void *)qword_1ECD96E58;
  qword_1ECD96E58 = (uint64_t)v0;

}

id *sub_18A79EF5C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  id v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  void *v19;
  id v20;
  const char *v21;
  uint64_t v22;
  void *v23;
  id *v24;
  id v25;
  id *v26;
  void *v28;
  const char *v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  id *v33;

  v11 = a1;
  v15 = a2;
  if (!v11)
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v12, v13, v14);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v29, (uint64_t)"id<CKObjectValidating> func(NSString *__strong, __strong id<CKObjectValidating>, ...)", v30);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v28, v32, (uint64_t)v31, (uint64_t)CFSTR("CKPredicateValidatorConvenienceFunctions.m"), 364, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("functionName != nil"));

  }
  objc_msgSend_array(MEMORY[0x1E0C99DE8], v12, v13, v14);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = v16;
  if (v15)
  {
    objc_msgSend_addObject_(v16, v17, (uint64_t)v15, v18);
    v33 = (id *)&a10;
    v20 = a9;
    if (v20)
    {
      v23 = v20;
      do
      {
        objc_msgSend_addObject_(v19, v21, (uint64_t)v23, v22);
        v24 = v33++;
        v25 = *v24;

        v23 = v25;
      }
      while (v25);
    }
  }
  v26 = sub_18A7D40F4([CKFunctionExpressionValidator alloc], v11, v19);

  return v26;
}

id sub_18A79F0A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  id v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  const char *v19;
  uint64_t v20;
  void *v21;
  id *v22;
  id v23;
  CKAggregateExpressionValidator *v24;
  const char *v25;
  uint64_t v26;
  void *v27;
  id *v29;

  v10 = a1;
  objc_msgSend_array(MEMORY[0x1E0C99DE8], v11, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = v14;
  if (v10)
  {
    objc_msgSend_addObject_(v14, v15, (uint64_t)v10, v16);
    v29 = (id *)&a10;
    v18 = a9;
    if (v18)
    {
      v21 = v18;
      do
      {
        objc_msgSend_addObject_(v17, v19, (uint64_t)v21, v20);
        v22 = v29++;
        v23 = *v22;

        v21 = v23;
      }
      while (v23);
    }
  }
  v24 = [CKAggregateExpressionValidator alloc];
  v27 = (void *)objc_msgSend_initWithValidators_(v24, v25, (uint64_t)v17, v26);

  return v27;
}

void sub_18A79F16C()
{
  CKTrueValidator *v0;
  void *v1;

  v0 = objc_alloc_init(CKTrueValidator);
  v1 = (void *)qword_1ECD96E68;
  qword_1ECD96E68 = (uint64_t)v0;

}

id sub_18A79F194()
{
  if (qword_1ECD96E80 != -1)
    dispatch_once(&qword_1ECD96E80, &unk_1E1F59978);
  return (id)qword_1ECD96E78;
}

void sub_18A79F1D4()
{
  CKNilValidator *v0;
  void *v1;

  v0 = objc_alloc_init(CKNilValidator);
  v1 = (void *)qword_1ECD96E78;
  qword_1ECD96E78 = (uint64_t)v0;

}

uint64_t CKDPLocationCoordinateReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  char v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  int v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int *v37;
  int *v38;
  int *v39;
  CKDPDate *v40;
  uint64_t v41;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = &OBJC_IVAR___CKProcessScopedDaemonProxy__hasValidProcessScopedDaemonProxyCreator;
  v8 = &OBJC_IVAR___CKProcessScopedDaemonProxy__hasValidProcessScopedDaemonProxyCreator;
  v9 = (int *)MEMORY[0x1E0D82BB8];
  v10 = &OBJC_IVAR___CKProcessScopedDaemonProxy__hasValidProcessScopedDaemonProxyCreator;
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    while (1)
    {
      v14 = *v3;
      v15 = *(_QWORD *)(a2 + v14);
      v16 = v15 + 1;
      if (v15 == -1 || v16 > *(_QWORD *)(a2 + *v4))
        break;
      v17 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v15);
      *(_QWORD *)(a2 + v14) = v16;
      v13 |= (unint64_t)(v17 & 0x7F) << v11;
      if ((v17 & 0x80) == 0)
        goto LABEL_12;
      v11 += 7;
      if (v12++ >= 9)
      {
        v13 = 0;
        v19 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v19 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v13 = 0;
LABEL_14:
    if (v19 || (v13 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v13 >> 3))
    {
      case 1u:
        *(_BYTE *)(a1 + v7[646]) |= 8u;
        v21 = *v3;
        v22 = *(_QWORD *)(a2 + v21);
        if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v23 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v23 = 0;
        }
        v41 = v8[647];
        goto LABEL_59;
      case 2u:
        *(_BYTE *)(a1 + v7[646]) |= 0x10u;
        v25 = *v3;
        v26 = *(_QWORD *)(a2 + v25);
        if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v23 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v26);
          *(_QWORD *)(a2 + v25) = v26 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v23 = 0;
        }
        v41 = v10[648];
        goto LABEL_59;
      case 3u:
        *(_BYTE *)(a1 + v7[646]) |= 4u;
        v27 = *v3;
        v28 = *(_QWORD *)(a2 + v27);
        if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v23 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v28);
          *(_QWORD *)(a2 + v27) = v28 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v23 = 0;
        }
        v41 = 24;
        goto LABEL_59;
      case 4u:
        *(_BYTE *)(a1 + v7[646]) |= 1u;
        v29 = *v3;
        v30 = *(_QWORD *)(a2 + v29);
        if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v23 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v30);
          *(_QWORD *)(a2 + v29) = v30 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v23 = 0;
        }
        v41 = 8;
        goto LABEL_59;
      case 5u:
        *(_BYTE *)(a1 + v7[646]) |= 0x40u;
        v31 = *v3;
        v32 = *(_QWORD *)(a2 + v31);
        if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v23 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v32);
          *(_QWORD *)(a2 + v31) = v32 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v23 = 0;
        }
        v41 = 56;
        goto LABEL_59;
      case 6u:
        *(_BYTE *)(a1 + v7[646]) |= 2u;
        v33 = *v3;
        v34 = *(_QWORD *)(a2 + v33);
        if (v34 <= 0xFFFFFFFFFFFFFFF7 && v34 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v23 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v34);
          *(_QWORD *)(a2 + v33) = v34 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v23 = 0;
        }
        v41 = 16;
        goto LABEL_59;
      case 7u:
        *(_BYTE *)(a1 + v7[646]) |= 0x20u;
        v35 = *v3;
        v36 = *(_QWORD *)(a2 + v35);
        if (v36 <= 0xFFFFFFFFFFFFFFF7 && v36 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v23 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v36);
          *(_QWORD *)(a2 + v35) = v36 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v23 = 0;
        }
        v41 = 48;
LABEL_59:
        *(_QWORD *)(a1 + v41) = v23;
        goto LABEL_60;
      case 8u:
        v37 = v10;
        v38 = v7;
        v39 = v8;
        v40 = objc_alloc_init(CKDPDate);
        objc_storeStrong((id *)(a1 + 64), v40);
        if (PBReaderPlaceMark() && (CKDPDateReadFrom((uint64_t)v40, a2) & 1) != 0)
        {
          PBReaderRecallMark();

          v8 = v39;
          v7 = v38;
          v10 = v37;
LABEL_60:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_60;
    }
  }
}

uint64_t sub_18A7A2504(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (void *)MEMORY[0x1E0C99D68];
  objc_msgSend_time(a2, (const char *)a2, a3, a4);
  return objc_msgSend_dateWithTimeIntervalSinceReferenceDate_(v4, v5, v6, v7);
}

uint64_t sub_18A7A2748(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_CKLocationFromPLocationCoordinate_(MEMORY[0x1E0C9E3B8], a2, (uint64_t)a2, a4);
}

void sub_18A7A2D04(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  const char *v28;
  id v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v29 = v5;
  if (a1)
  {
    v6 = (void *)MEMORY[0x1E0C99DB8];
    v7 = *(void **)(a1 + 8);
    v8 = *(_QWORD *)(a1 + 48);
    v9 = a3;
    objc_msgSend_instanceMethodSignatureForSelector_(v7, v10, v8, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_invocationWithMethodSignature_(v6, v13, (uint64_t)v12, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend_setTarget_(v15, v16, (uint64_t)v9, v17);
    objc_msgSend_setSelector_(v15, v18, *(_QWORD *)(a1 + 48), v19);
    v23 = *(_QWORD **)(a1 + 16);
    if (v23 && v23[1] == 15)
    {
      objc_msgSend_setArgument_atIndex_(v15, v20, (uint64_t)&v29, 2);
    }
    else
    {
      v27 = (char *)&v29 - ((objc_msgSend_size(v23, v20, v21, v22, v29, v30) + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_18A7EF19C(*(void **)(a1 + 16), (uint64_t)v27, v5);
      objc_msgSend_setArgument_atIndex_(v15, v28, (uint64_t)v27, 2);
    }
    objc_msgSend_invoke(v15, v24, v25, v26, v29);

    v5 = v29;
  }

}

id sub_18A7A2EB4()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)qword_1EDF75BE8;
  v7 = qword_1EDF75BE8;
  if (!qword_1EDF75BE8)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = sub_18A7A2F6C;
    v3[3] = &unk_1E1F5F618;
    v3[4] = &v4;
    sub_18A7A2F6C(v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18A7A2F54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_18A7A2F6C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  Class result;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  void *v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v21 = 0;
  v22 = &v21;
  v23 = 0x2020000000;
  v2 = qword_1EDF75390;
  v24 = qword_1EDF75390;
  if (!qword_1EDF75390)
  {
    v25 = xmmword_1E1F652B8;
    v26 = *(_OWORD *)&off_1E1F652C8;
    v3 = _sl_dlopen();
    v22[3] = v3;
    qword_1EDF75390 = v3;
    v2 = v3;
  }
  _Block_object_dispose(&v21, 8);
  if (!v2)
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v4, v5, v6);
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v11, (uint64_t)"void *BackgroundSystemTasksLibrary(void)", v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInFunction_file_lineNumber_description_(a1, v14, (uint64_t)v13, (uint64_t)CFSTR("CKBackgroundSystemTasks.m"), 11, CFSTR("%s"), 0);

    __break(1u);
    free(v15);
  }
  result = objc_getClass("BGSystemTaskScheduler");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24))
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v8, v9, v10);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v17, (uint64_t)"Class getBGSystemTaskSchedulerClass(void)_block_invoke", v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v16, v20, (uint64_t)v19, (uint64_t)CFSTR("CKBackgroundSystemTasks.m"), 13, CFSTR("Unable to find class %s"), "BGSystemTaskScheduler");

    __break(1u);
  }
  qword_1EDF75BE8 = *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

void sub_18A7A3138(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A7A32B8(uint64_t a1)
{
  uint64_t v2;

  pthread_mutex_lock((pthread_mutex_t *)(*(_QWORD *)(a1 + 32) + 8));
  v2 = *(_QWORD *)(a1 + 40);
  if (v2)
    (*(void (**)(uint64_t, uint64_t, void *))(v2 + 16))(v2, 1, &unk_1E1F588B8);
  return pthread_mutex_unlock((pthread_mutex_t *)(*(_QWORD *)(a1 + 32) + 8));
}

void sub_18A7A3E94(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  const char *v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  id v8;

  v2 = (void *)MEMORY[0x1E0CB3880];
  v3 = a2;
  objc_msgSend_predicateWithFormat_(v2, v4, (uint64_t)CFSTR("uniquingKey = $KEY"), v5);
  v8 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setSearchPredicate_(v3, v6, (uint64_t)v8, v7);

}

void sub_18A7A4104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A7A411C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18A7A412C(uint64_t a1)
{

}

uint64_t sub_18A7A4134(uint64_t a1, const char *a2)
{
  uint64_t v3;
  void *v4;
  const char *v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const __CFString *v14;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(a1 + 32);
  v14 = CFSTR("DATE");
  v15[0] = v3;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], a2, (uint64_t)v15, (uint64_t)&v14, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_entriesWithValues_label_error_setupBlock_(*(void **)(a1 + 40), v5, (uint64_t)v4, (uint64_t)off_1E1F65320, 0, &unk_1E1F65338);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_allObjects(v6, v7, v8, v9);
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v12 = *(void **)(v11 + 40);
  *(_QWORD *)(v11 + 40) = v10;

  return 0;
}

void sub_18A7A420C(uint64_t a1, void *a2)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  id v12;

  v2 = (void *)MEMORY[0x1E0CB3880];
  v12 = a2;
  objc_msgSend_predicateWithFormat_(v2, v3, (uint64_t)CFSTR("activityEarliestDate < $DATE"), v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setSearchPredicate_(v12, v6, (uint64_t)v5, v7);

  objc_msgSend_orderAscendingByProperty_(v12, v8, (uint64_t)CFSTR("databaseID"), v9);
  objc_msgSend_orderAscendingByProperty_(v12, v10, (uint64_t)CFSTR("groupID"), v11);

}

uint64_t sub_18A7A438C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_predicateWithFormat_(MEMORY[0x1E0CB3880], a2, (uint64_t)CFSTR("activityEarliestDate = NULL AND activityNotBeforeDate < $NOW"), a4);
}

uint64_t sub_18A7A446C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_predicateWithFormat_(MEMORY[0x1E0CB3880], a2, (uint64_t)CFSTR("databaseID = $DATABASEID"), a4);
}

void sub_18A7A452C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_18A7A4544(uint64_t a1, const char *a2)
{
  void *v3;
  void *v4;
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v11;

  v3 = *(void **)(a1 + 32);
  v11 = 0;
  objc_msgSend_entriesWithValues_label_error_setupBlock_(v3, a2, 0, (uint64_t)off_1E1F653F8, &v11, &unk_1E1F58CF8);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v11;
  objc_msgSend_nextObject(v4, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v9 != 0;

  return v5;
}

void sub_18A7A45D4(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  id v11;

  v2 = a2;
  objc_msgSend_setLimit_(v2, v3, (uint64_t)&unk_1E1FC4BC8, v4);
  objc_msgSend_setFetchedProperties_(v2, v5, MEMORY[0x1E0C9AA60], v6);
  objc_msgSend_predicateWithFormat_(MEMORY[0x1E0CB3880], v7, (uint64_t)CFSTR("activityEarliestDate != NULL"), v8);
  v11 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setSearchPredicate_(v2, v9, (uint64_t)v11, v10);

}

void sub_18A7A4BA8(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_runActivities(WeakRetained, v1, v2, v3);

}

void sub_18A7A4CDC(uint64_t a1)
{
  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 16));
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *(id *)(*(_QWORD *)(a1 + 32) + 32));
  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 16));
}

id sub_18A7A5468(uint64_t a1, const char *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  void *v34;
  NSObject *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  NSObject *v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, const char *, uint64_t, uint64_t);
  void *v53;
  id v54;
  id v55;
  uint8_t buf[4];
  void *v57;
  __int16 v58;
  void *v59;
  __int16 v60;
  id v61;
  uint64_t v62;

  v62 = *MEMORY[0x1E0C80C00];
  v3 = *(void **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v55 = 0;
  objc_msgSend_activityEntryForTarget_error_(v3, a2, v4, (uint64_t)&v55);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v55;
  if (!v9)
  {
    objc_msgSend_activityEarliestDate(v5, v6, v7, v8);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = *(void **)(a1 + 48);
    objc_msgSend_activityNotBeforeDate(v5, v12, v13, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_laterDate_(v11, v16, (uint64_t)v15, v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();

    if (v10 && objc_msgSend_compare_(v10, v19, (uint64_t)v18, v20) != 1)
    {
LABEL_9:
      v9 = 0;
LABEL_19:

      goto LABEL_20;
    }
    objc_msgSend_setSchedulingDataInActivity_date_coalescingInterval_minimumSeparation_(*(void **)(a1 + 32), v19, (uint64_t)v5, (uint64_t)v18, *(double *)(a1 + 56), *(double *)(a1 + 64));
    objc_msgSend_activityStartDate(v5, v21, v22, v23);
    v24 = (void *)objc_claimAutoreleasedReturnValue();

    if (v24)
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v27 = (void *)ck_log_facility_sql;
      if (os_log_type_enabled((os_log_t)ck_log_facility_sql, OS_LOG_TYPE_DEBUG))
      {
        v42 = v27;
        objc_msgSend_targetDescription(v5, v43, v44, v45);
        v46 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v57 = v18;
        v58 = 2114;
        v59 = v46;
        _os_log_debug_impl(&dword_18A5C5000, v42, OS_LOG_TYPE_DEBUG, "CKSQLiteDatabaseManager scheduled repeating activity: %{public}@ for %{public}@", buf, 0x16u);

      }
      goto LABEL_9;
    }
    objc_msgSend_insertOrUpdateActivityDate_(*(void **)(*(_QWORD *)(a1 + 32) + 152), v25, (uint64_t)v5, v26);
    v9 = (id)objc_claimAutoreleasedReturnValue();
    v28 = *(void **)(a1 + 40);
    v29 = *(void **)(*(_QWORD *)(a1 + 32) + 152);
    v50 = MEMORY[0x1E0C809B0];
    v51 = 3221225472;
    v52 = sub_18A7A5820;
    v53 = &unk_1E1F5F958;
    v54 = v28;
    objc_msgSend_addTransactionCompletionHandler_(v29, v30, (uint64_t)&v50, v31);
    if (v9)
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v34 = (void *)ck_log_facility_sql;
      if (!os_log_type_enabled((os_log_t)ck_log_facility_sql, OS_LOG_TYPE_ERROR))
        goto LABEL_18;
      v35 = v34;
      objc_msgSend_targetDescription(v5, v36, v37, v38, v50, v51, v52, v53);
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v57 = v18;
      v58 = 2114;
      v59 = v39;
      v60 = 2112;
      v61 = v9;
      _os_log_error_impl(&dword_18A5C5000, v35, OS_LOG_TYPE_ERROR, "CKSQLiteDatabaseManager failed scheduling: %{public}@ for %{public}@ error = %@", buf, 0x20u);
    }
    else
    {
      objc_msgSend_scheduleActivityDate_(*(void **)(a1 + 32), v32, (uint64_t)v18, v33, v50, v51, v52, v53);
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v40 = (void *)ck_log_facility_sql;
      if (!os_log_type_enabled((os_log_t)ck_log_facility_sql, OS_LOG_TYPE_DEBUG))
        goto LABEL_18;
      v35 = v40;
      objc_msgSend_targetDescription(v5, v47, v48, v49);
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v57 = v18;
      v58 = 2114;
      v59 = v39;
      _os_log_debug_impl(&dword_18A5C5000, v35, OS_LOG_TYPE_DEBUG, "CKSQLiteDatabaseManager scheduled: %{public}@ for %{public}@", buf, 0x16u);
    }

LABEL_18:
    goto LABEL_19;
  }
LABEL_20:

  return v9;
}

uint64_t sub_18A7A5820(uint64_t result, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2)
  {
    v4 = result;
    objc_msgSend_setDatabaseManagerData_(*(void **)(result + 32), a2, 0, a4);
    return MEMORY[0x1E0DE7D20](*(_QWORD *)(v4 + 32), sel_activityTriggerWasRolledBack, v5, v6);
  }
  return result;
}

void sub_18A7A59A8(_Unwind_Exception *exception_object)
{
  pthread_mutex_t *v1;

  if (v1)
  {
    v1[1].__sig = 0;
    pthread_mutex_unlock(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_18A7A5CB4(_Unwind_Exception *exception_object)
{
  pthread_mutex_t *v1;

  if (v1)
  {
    v1[1].__sig = 0;
    pthread_mutex_unlock(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_18A7A5D6C(_Unwind_Exception *exception_object)
{
  pthread_mutex_t *v1;

  if (v1)
  {
    v1[1].__sig = 0;
    pthread_mutex_unlock(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_18A7A6528(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  pthread_mutex_t *v6;
  void *v7;
  uint64_t v8;
  const char *v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  const char *v19;
  id v20;

  objc_msgSend_db(*(void **)(a1 + 32), a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = _CKSQLDBSerializerLock((uint64_t)v5 + 8);

  v7 = *(void **)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v20 = 0;
  objc_msgSend_activityEntryForTarget_error_(v7, v9, v8, (uint64_t)&v20);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v20;
  if (v14)
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v11, v12, v13);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(v18, v19, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 32), CFSTR("CKSQLiteDatabaseManager.m"), 771, CFSTR("Unexpected error: %@"), v14);

  }
  objc_msgSend_activityEarliestDate(v10, v11, v12, v13);
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v17 = *(void **)(v16 + 40);
  *(_QWORD *)(v16 + 40) = v15;

  if (v6)
  {
    v6[1].__sig = 0;
    pthread_mutex_unlock(v6);
  }
}

void sub_18A7A661C(_Unwind_Exception *exception_object)
{
  pthread_mutex_t *v1;

  if (v1)
  {
    v1[1].__sig = 0;
    pthread_mutex_unlock(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_18A7A6E04(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  id v7;

  v4 = *(void **)(a1 + 32);
  objc_msgSend_distantFuture(MEMORY[0x1E0C99D68], a2, a3, a4);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_runActivities_(v4, v5, (uint64_t)v7, v6);

}

void sub_18A7A8534(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7A85E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7A869C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7A8750(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7A9CFC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 512) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 512);
    *(_QWORD *)(v8 + 512) = v7;

  }
}

void sub_18A7A9E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A7A9EA4(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A7A9ECC(uint64_t a1)
{

}

void sub_18A7A9ED4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 512));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7AA030(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void sub_18A7AA1C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7AA1D8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7AA334(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 528) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 528);
    *(_QWORD *)(v8 + 528) = v7;

  }
}

void sub_18A7AA4C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7AA4DC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 528));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7ABDD4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void sub_18A7ABF64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A7ABF7C(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A7ABFA4(uint64_t a1)
{

}

void sub_18A7ABFAC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7ABFEC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 528) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 528);
    *(_QWORD *)(v8 + 528) = v7;

  }
}

void sub_18A7AC17C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7AC194(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 528));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7AC2F0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 536) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 536);
    *(_QWORD *)(v8 + 536) = v7;

  }
}

void sub_18A7AC480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7AC498(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 536));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7AC4D8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 544) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 544);
    *(_QWORD *)(v8 + 544) = v7;

  }
}

void sub_18A7AC668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7AC680(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 544));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7AC6C0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 552) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 552);
    *(_QWORD *)(v8 + 552) = v7;

  }
}

void sub_18A7AC850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7AC868(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 552));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7AC8A8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 560) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 560);
    *(_QWORD *)(v8 + 560) = v7;

  }
}

void sub_18A7ACA38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7ACA50(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 560));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7ACA90(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 568) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 568);
    *(_QWORD *)(v8 + 568) = v7;

  }
}

void sub_18A7ACAE0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 568));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7ACB20(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 576) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 576);
    *(_QWORD *)(v8 + 576) = v7;

  }
}

void sub_18A7ACB70(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 576));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

uint64_t sub_18A7AD6B4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(result + 32);
  if (v4)
  {
    *(_QWORD *)(v4 + 648) += a2;
    v5 = *(_QWORD *)(result + 32);
    if (v5)
    {
      *(_QWORD *)(v5 + 656) += a3;
      v6 = *(_QWORD *)(result + 32);
      if (v6)
        *(_QWORD *)(v6 + 664) += a4;
    }
  }
  return result;
}

id sub_18A7ADEB0(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  int isEqual;
  const char *v11;
  uint64_t v12;
  CKTuple2 *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  void *v22;

  v3 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    && (objc_msgSend_zoneID(v3, v4, v5, v6),
        v7 = (void *)objc_claimAutoreleasedReturnValue(),
        isEqual = objc_msgSend_isEqual_(v7, v8, *(_QWORD *)(a1 + 32), v9),
        v7,
        isEqual)
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    && objc_msgSend_isEqual_(v3, v11, *(_QWORD *)(a1 + 32), v12))
  {
    v13 = [CKTuple2 alloc];
    objc_msgSend_perItemErrors(*(void **)(a1 + 40), v14, v15, v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v17, v18, (uint64_t)v3, v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = (void *)objc_msgSend_initWithObject1_object2_(v13, v21, (uint64_t)v3, (uint64_t)v20);

  }
  else
  {
    v22 = 0;
  }

  return v22;
}

id sub_18A7AE7F0(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  const char *v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  CKTuple2 *v11;
  const char *v12;
  void *v13;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend_objectForKeyedSubscript_(v2, v4, (uint64_t)v3, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_zoneConfiguration(v6, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = [CKTuple2 alloc];
  v13 = (void *)objc_msgSend_initWithObject1_object2_(v11, v12, (uint64_t)v3, (uint64_t)v10);

  return v13;
}

id sub_18A7AE918(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  void *v10;
  CKTuple2 *v11;
  CKFetchRecordZoneChangesOptions *v12;
  const char *v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  void *v17;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend_configurationsByRecordZoneID(v2, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v7, v8, (uint64_t)v3, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = [CKTuple2 alloc];
  v12 = [CKFetchRecordZoneChangesOptions alloc];
  v15 = (void *)objc_msgSend_initWithZoneConfiguration_(v12, v13, (uint64_t)v10, v14);
  v17 = (void *)objc_msgSend_initWithObject1_object2_(v11, v16, (uint64_t)v3, (uint64_t)v15);

  return v17;
}

uint64_t sub_18A7AEA1C(uint64_t a1, const char *a2, void *a3, uint64_t a4)
{
  return objc_msgSend_zoneConfiguration(a3, a2, (uint64_t)a3, a4);
}

void sub_18A7AECDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7AF004(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void sub_18A7AF194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A7AF1AC(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A7AF1D4(uint64_t a1)
{

}

void sub_18A7AF1DC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7AF338(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 528) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 528);
    *(_QWORD *)(v8 + 528) = v7;

  }
}

void sub_18A7AF4C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7AF4E0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 528));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7AF63C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 536) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 536);
    *(_QWORD *)(v8 + 536) = v7;

  }
}

void sub_18A7AF7CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7AF7E4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 536));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7AF940(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 544) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 544);
    *(_QWORD *)(v8 + 544) = v7;

  }
}

void sub_18A7AFAD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7AFAE8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 544));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7AFC44(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 552) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 552);
    *(_QWORD *)(v8 + 552) = v7;

  }
}

void sub_18A7AFDD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7AFDEC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 552));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7AFF48(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 560) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 560);
    *(_QWORD *)(v8 + 560) = v7;

  }
}

void sub_18A7B00D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7B00F0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 560));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

uint64_t sub_18A7B1EC0(uint64_t a1, void *a2, _QWORD *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const char *v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  const char *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  const char *v78;
  int v80;

  v5 = a2;
  objc_msgSend_configuration(*(void **)(a1 + 32), v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_container(v9, v10, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_options(v13, v14, v15, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = objc_msgSend_useAnonymousToServerShareParticipants(v17, v18, v19, v20);

  if (!v21)
  {
    objc_msgSend_assetReference(v5, v22, v23, v24);
    v28 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v28)
    {
      v27 = 1;
      goto LABEL_19;
    }
    objc_msgSend_assetReference(v5, v29, v30, v31);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend_databaseScope(v25, v32, v33, v34) == 2 || objc_msgSend_databaseScope(v25, v35, v36, v37) == 3)
    {
      objc_msgSend_database(*(void **)(a1 + 32), v35, v36, v37);
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend_databaseScope(v38, v39, v40, v41) == 2)
      {

      }
      else
      {
        objc_msgSend_database(*(void **)(a1 + 32), v42, v43, v44);
        v45 = (void *)objc_claimAutoreleasedReturnValue();
        v49 = objc_msgSend_databaseScope(v45, v46, v47, v48);

        if (v49 != 3)
          goto LABEL_15;
      }
      objc_msgSend_configuration(*(void **)(a1 + 32), v35, v36, v37);
      v50 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_container(v50, v51, v52, v53);
      v54 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_options(v54, v55, v56, v57);
      v58 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend_bypassPCSEncryption(v58, v59, v60, v61))
      {

      }
      else
      {
        objc_msgSend_configuration(*(void **)(a1 + 32), v62, v63, v64);
        v65 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_container(v65, v66, v67, v68);
        v69 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_options(v69, v70, v71, v72);
        v73 = (void *)objc_claimAutoreleasedReturnValue();
        v80 = objc_msgSend_useClearAssetEncryption(v73, v74, v75, v76);

        if (!v80)
        {
          v27 = 1;
          goto LABEL_18;
        }
      }
    }
LABEL_15:
    if (a3)
    {
      objc_msgSend_recordID(*(void **)(a1 + 40), v35, v36, v37);
      v77 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v78, (uint64_t)CFSTR("CKErrorDomain"), 12, CFSTR("Invalid CKAssetReference on record %@"), v77);
      *a3 = (id)objc_claimAutoreleasedReturnValue();

    }
    v27 = 0;
    goto LABEL_18;
  }
  if (a3)
  {
    objc_msgSend_recordID(*(void **)(a1 + 40), v22, v23, v24);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v26, (uint64_t)CFSTR("CKErrorDomain"), 12, CFSTR("Assets not permitted when using anonymous to server share participants: %@"), v25);
    v27 = 0;
    *a3 = (id)objc_claimAutoreleasedReturnValue();
LABEL_18:

    goto LABEL_19;
  }
  v27 = 0;
LABEL_19:

  return v27;
}

void sub_18A7B25E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
  _Block_object_dispose(&a34, 8);
  _Block_object_dispose(&a38, 8);
  _Block_object_dispose(&a42, 8);
  _Block_object_dispose(&a46, 8);
  _Block_object_dispose(&a50, 8);
  _Unwind_Resume(a1);
}

void sub_18A7B2640(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  const char *v5;
  uint64_t v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t j;
  void *v36;
  void *v37;
  const char *v38;
  uint64_t v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t k;
  void *v46;
  void *v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  const char *v53;
  uint64_t v54;
  void *v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  const char *v63;
  uint64_t v64;
  uint64_t v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  const char *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  id obj;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  _BYTE v89[128];
  _BYTE v90[128];
  _BYTE v91[128];
  uint64_t v92;

  v92 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    objc_msgSend_addObject_(*(void **)(a1 + 32), v5, (uint64_t)v4, v6);
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v74 = v4;
      v7 = v4;
      v85 = 0u;
      v86 = 0u;
      v87 = 0u;
      v88 = 0u;
      objc_msgSend_deltasToSave(v7, v8, v9, v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(v11, v12, (uint64_t)&v85, (uint64_t)v91, 16);
      if (v13)
      {
        v17 = v13;
        v18 = *(_QWORD *)v86;
        do
        {
          for (i = 0; i != v17; ++i)
          {
            if (*(_QWORD *)v86 != v18)
              objc_enumerationMutation(v11);
            v20 = *(void **)(*((_QWORD *)&v85 + 1) + 8 * i);
            objc_msgSend_asset(v20, v14, v15, v16);
            v21 = (void *)objc_claimAutoreleasedReturnValue();

            if (v21)
            {
              v22 = *(void **)(a1 + 32);
              objc_msgSend_asset(v20, v14, v15, v16);
              v23 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_addObject_(v22, v24, (uint64_t)v23, v25);

              ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
            }
          }
          v17 = objc_msgSend_countByEnumeratingWithState_objects_count_(v11, v14, (uint64_t)&v85, (uint64_t)v91, 16);
        }
        while (v17);
      }

      v83 = 0u;
      v84 = 0u;
      v81 = 0u;
      v82 = 0u;
      v73 = v7;
      objc_msgSend_pendingReplacementRequests(v7, v26, v27, v28);
      obj = (id)objc_claimAutoreleasedReturnValue();
      v30 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v29, (uint64_t)&v81, (uint64_t)v90, 16);
      if (v30)
      {
        v34 = v30;
        v76 = *(_QWORD *)v82;
        do
        {
          for (j = 0; j != v34; ++j)
          {
            if (*(_QWORD *)v82 != v76)
              objc_enumerationMutation(obj);
            v36 = *(void **)(*((_QWORD *)&v81 + 1) + 8 * j);
            v77 = 0u;
            v78 = 0u;
            v79 = 0u;
            v80 = 0u;
            objc_msgSend_replacementDeltas(v36, v31, v32, v33);
            v37 = (void *)objc_claimAutoreleasedReturnValue();
            v39 = objc_msgSend_countByEnumeratingWithState_objects_count_(v37, v38, (uint64_t)&v77, (uint64_t)v89, 16);
            if (v39)
            {
              v43 = v39;
              v44 = *(_QWORD *)v78;
              do
              {
                for (k = 0; k != v43; ++k)
                {
                  if (*(_QWORD *)v78 != v44)
                    objc_enumerationMutation(v37);
                  v46 = *(void **)(*((_QWORD *)&v77 + 1) + 8 * k);
                  objc_msgSend_asset(v46, v40, v41, v42);
                  v47 = (void *)objc_claimAutoreleasedReturnValue();

                  if (v47)
                  {
                    v51 = *(void **)(a1 + 32);
                    objc_msgSend_asset(v46, v48, v49, v50);
                    v52 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend_addObject_(v51, v53, (uint64_t)v52, v54);

                    ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
                  }
                  objc_msgSend_replacementDeltas(v36, v48, v49, v50);
                  v55 = (void *)objc_claimAutoreleasedReturnValue();
                  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) += objc_msgSend_count(v55, v56, v57, v58);

                  objc_msgSend_deltaIdentifiersToReplace(v36, v59, v60, v61);
                  v62 = (void *)objc_claimAutoreleasedReturnValue();
                  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) += objc_msgSend_count(v62, v63, v64, v65);

                }
                v43 = objc_msgSend_countByEnumeratingWithState_objects_count_(v37, v40, (uint64_t)&v77, (uint64_t)v89, 16);
              }
              while (v43);
            }

          }
          v34 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v31, (uint64_t)&v81, (uint64_t)v90, 16);
        }
        while (v34);
      }

      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24);
      objc_msgSend_deltasToSave(v73, v66, v67, v68);
      v69 = (void *)objc_claimAutoreleasedReturnValue();
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) += objc_msgSend_count(v69, v70, v71, v72);

      v4 = v74;
    }
  }

}

id sub_18A7B2BD4(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v3;
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  void *v15;

  v2 = (objc_class *)MEMORY[0x1E0CB3940];
  v3 = a2;
  v4 = [v2 alloc];
  objc_msgSend_recordID(v3, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_recordChangeTag(v3, v9, v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  v15 = (void *)objc_msgSend_initWithFormat_(v4, v13, (uint64_t)CFSTR("%@ etag=%@"), v14, v8, v12);
  return v15;
}

void sub_18A7B2DD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A7B2E00(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18A7B2E10(uint64_t a1)
{

}

uint64_t sub_18A7B2E18(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;

  v3 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  v4 = a3;
  objc_msgSend_packagesToDestroy(v3, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObject_(v8, v9, (uint64_t)v4, v10);

  return 0;
}

uint64_t sub_18A7B2E68(uint64_t a1, int a2, int a3, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 0;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
  return 1;
}

uint64_t sub_18A7B7A60(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_vectors(a2, (const char *)a2, a3, a4);
}

void sub_18A7B8220(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7B82D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7B9698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7B97E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7B9928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7B9AA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7B9B4C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  const char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  void *v21;

  v18 = 0;
  v19 = &v18;
  v20 = 0x2020000000;
  v7 = off_1EDF753B8;
  v21 = off_1EDF753B8;
  if (!off_1EDF753B8)
  {
    v8 = sub_18A7BA544(a1, a2, a3, a4);
    v7 = dlsym(v8, "MMCSSignatureGeneratorUpdate");
    v19[3] = (uint64_t)v7;
    off_1EDF753B8 = v7;
  }
  _Block_object_dispose(&v18, 8);
  if (v7)
  {
    ((void (*)(uint64_t, const char *, uint64_t, uint64_t))v7)(a1, a2, a3, 1);
  }
  else
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v9, v10, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v13, (uint64_t)"void __MMCSSignatureGeneratorUpdate(void *, const void *, size_t, Boolean)", v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = dlerror();
    objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v12, v17, (uint64_t)v15, (uint64_t)CFSTR("CKSignatureGenerator.m"), 37, CFSTR("%s"), v16);

    __break(1u);
  }
}

void sub_18A7B9C58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7B9D70(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  const char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  void *v19;

  v16 = 0;
  v17 = &v16;
  v18 = 0x2020000000;
  v5 = off_1EDF6EF08;
  v19 = off_1EDF6EF08;
  if (!off_1EDF6EF08)
  {
    v6 = sub_18A7BA544(a1, a2, a3, a4);
    v5 = dlsym(v6, "MMCSSignatureAndSchemeSize");
    v17[3] = (uint64_t)v5;
    off_1EDF6EF08 = v5;
  }
  _Block_object_dispose(&v16, 8);
  if (v5)
  {
    ((void (*)(uint64_t))v5)(a1);
  }
  else
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v7, v8, v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v11, (uint64_t)"size_t __MMCSSignatureAndSchemeSize(const unsigned char *)", v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = dlerror();
    objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v10, v15, (uint64_t)v13, (uint64_t)CFSTR("CKSignatureGenerator.m"), 49, CFSTR("%s"), v14);

    __break(1u);
  }
}

void sub_18A7B9E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7B9FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7BA170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7BA2D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7BA430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A7BA544(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  const char *v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  void *v10;

  if (!qword_1EDF6EF00)
    qword_1EDF6EF00 = _sl_dlopen();
  v4 = (void *)qword_1EDF6EF00;
  if (!qword_1EDF6EF00)
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], a2, a3, a4);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v6, (uint64_t)"void *MMCSLibrary(void)", v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v4, v9, (uint64_t)v8, (uint64_t)CFSTR("CKSignatureGenerator.m"), 22, CFSTR("%s"), 0);

    __break(1u);
    free(v10);
  }
  return v4;
}

void sub_18A7BA648(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void *v6;
  uint64_t v7;
  objc_class *v8;
  const char *v9;
  void *v10;
  _QWORD *v11;

  v11 = a3;
  v6 = (void *)MEMORY[0x1E0C99DA0];
  v7 = *MEMORY[0x1E0C99778];
  v8 = (objc_class *)objc_opt_class();
  NSStringFromClass(v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
    objc_msgSend_raise_format_(v6, v9, v7, (uint64_t)CFSTR("Can't bind object %p of type %@ in statement %@ at index %ld"), a1, v10, v11[3], a4);
  else
    objc_msgSend_raise_format_(v6, v9, v7, (uint64_t)CFSTR("Can't bind object %p of type %@ in statement %@ at index %ld"), a1, v10, 0, a4);

}

uint64_t sub_18A7BA6E8(uint64_t result, const char *a2, uint64_t a3, uint64_t a4)
{
  int v5;
  _QWORD *v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  const char *v10;

  if (result)
  {
    v5 = (int)a2;
    v6 = (_QWORD *)result;
    if (!*(_BYTE *)(result + 8))
    {
      objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], a2, a3, a4);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(v9, v10, (uint64_t)sel_bindInt_atIndex_, (uint64_t)v6, CFSTR("CKSQLiteStatement.m"), 203, CFSTR("Statement is not reset: \"%@\""), v6[3]);

    }
    result = v6[4];
    if (result)
    {
      result = sqlite3_bind_int((sqlite3_stmt *)result, a3 + 1, v5);
      if ((_DWORD)result)
        return objc_msgSend_invalidate_(v6, v7, (uint64_t)CFSTR("Error binding int at %ld: \"%@\""), v8, a3, v6[3]);
    }
  }
  return result;
}

void sub_18A7BA7AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_18A7BA7BC(a3, a1, a4);
}

void sub_18A7BA7BC(uint64_t a1, void *a2, uint64_t a3)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  sqlite3_stmt *v10;
  char *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  char *v24;

  v5 = a2;
  v8 = (char *)v5;
  if (!a1)
    goto LABEL_10;
  v24 = (char *)v5;
  if (!*(_BYTE *)(a1 + 8))
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v5, v6, v7);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(v22, v23, (uint64_t)sel_bindBlob_atIndex_, a1, CFSTR("CKSQLiteStatement.m"), 227, CFSTR("Statement is not reset: \"%@\""), *(_QWORD *)(a1 + 24));

    if (v24)
      goto LABEL_4;
LABEL_8:
    sub_18A7BA9A0(a1, a3);
    goto LABEL_9;
  }
  if (!v5)
    goto LABEL_8;
LABEL_4:
  v9 = sub_18A5D6504((_QWORD *)a1, v24);
  v8 = v24;
  v10 = *(sqlite3_stmt **)(a1 + 32);
  if (v10)
  {
    v11 = objc_retainAutorelease(v24);
    v15 = (const void *)objc_msgSend_bytes(v11, v12, v13, v14);
    v19 = objc_msgSend_length(v11, v16, v17, v18);
    v20 = sqlite3_bind_blob(v10, a3 + 1, v15, v19, 0);
    v8 = v24;
    if (v20)
    {
      objc_msgSend_invalidate_((void *)a1, v24, (uint64_t)CFSTR("Error binding blob at %ld: \"%@\""), v21, a3, *(_QWORD *)(a1 + 24));
LABEL_9:
      v8 = v24;
    }
  }
LABEL_10:

}

void sub_18A7BA8EC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  const char *v7;
  uint64_t v8;
  const char *v9;
  void *v10;
  _QWORD v11[3];

  v11[2] = *MEMORY[0x1E0C80C00];
  v11[0] = 0;
  v11[1] = 0;
  v6 = a3;
  objc_msgSend_getUUIDBytes_(a1, v7, (uint64_t)v11, v8);
  objc_msgSend_dataWithBytes_length_(MEMORY[0x1E0C99D50], v9, (uint64_t)v11, 16);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A7BA7BC((uint64_t)v6, v10, a4);

}

uint64_t sub_18A7BA994(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return sub_18A7BA9A0(a3, a4);
}

uint64_t sub_18A7BA9A0(uint64_t result, int a2)
{
  void *v2;
  const char *v3;
  uint64_t v4;

  if (result)
  {
    v2 = (void *)result;
    result = *(_QWORD *)(result + 32);
    if (result)
    {
      result = sqlite3_bind_null((sqlite3_stmt *)result, a2 + 1);
      if ((_BYTE)result)
        return objc_msgSend_invalidate_(v2, v3, (uint64_t)CFSTR("sqlite3_bind_null error"), v4);
    }
  }
  return result;
}

void sub_18A7BA9F0(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  _QWORD *v12;
  double v13;
  sqlite3_stmt *v14;
  int v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  _QWORD *v19;

  v19 = a3;
  objc_msgSend_timeIntervalSinceReferenceDate(a1, v6, v7, v8);
  v12 = v19;
  if (v19)
  {
    v13 = v11;
    if (!*((_BYTE *)v19 + 8))
    {
      objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], (const char *)v19, v9, v10);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(v17, v18, (uint64_t)sel_bindDouble_atIndex_, (uint64_t)v19, CFSTR("CKSQLiteStatement.m"), 219, CFSTR("Statement is not reset: \"%@\""), v19[3]);

      v12 = v19;
    }
    v14 = (sqlite3_stmt *)v12[4];
    if (v14)
    {
      v15 = sqlite3_bind_double(v14, a4 + 1, v13);
      v12 = v19;
      if (v15)
      {
        objc_msgSend_invalidate_(v19, (const char *)v19, (uint64_t)CFSTR("Error binding double at %ld: \"%@\""), v16, a4, v19[3]);
        v12 = v19;
      }
    }
  }

}

void sub_18A7BAADC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void *v6;
  id v7;
  const char *v8;
  id v9;

  v6 = (void *)MEMORY[0x1E0CB36F8];
  v7 = a3;
  objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(v6, v8, a1, 1, 0);
  v9 = (id)objc_claimAutoreleasedReturnValue();
  sub_18A7BA7BC((uint64_t)v7, v9, a4);

}

void sub_18A7BAB50(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  id v11;

  v6 = a3;
  objc_msgSend_absoluteString(a1, v7, v8, v9);
  v11 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_bindText_atIndex_(v6, v10, (uint64_t)v11, a4);

}

uint64_t sub_18A7BACFC(uint64_t result, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  sqlite3_stmt *v5;
  sqlite3_stmt *v6;

  if (result)
  {
    v4 = result;
    if (!*(_BYTE *)(result + 8))
    {
      v5 = *(sqlite3_stmt **)(result + 32);
      if (v5)
      {
        if (sqlite3_reset(v5))
          objc_msgSend_invalidate_((void *)v4, a2, (uint64_t)CFSTR("Error resetting prepared statement: \"%@\""), a4, *(_QWORD *)(v4 + 24));
        v6 = *(sqlite3_stmt **)(v4 + 32);
        if (v6)
        {
          if (sqlite3_clear_bindings(v6))
            objc_msgSend_invalidate_((void *)v4, a2, (uint64_t)CFSTR("Error clearing prepared statement bindings: \"%@\""), a4, *(_QWORD *)(v4 + 24));
        }
      }
      result = objc_msgSend_removeAllObjects(*(void **)(v4 + 48), a2, a3, a4);
      *(_BYTE *)(v4 + 8) = 1;
    }
  }
  return result;
}

uint64_t sub_18A7BAD8C(uint64_t a1, const char *iCol, uint64_t a3, uint64_t a4)
{
  int v4;
  sqlite3_stmt *v6;
  void *v8;
  const char *v9;

  if (!a1)
    return 0;
  v4 = (int)iCol;
  if (*(_BYTE *)(a1 + 8))
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], iCol, a3, a4);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(v8, v9, (uint64_t)sel_intAtIndex_, a1, CFSTR("CKSQLiteStatement.m"), 293, CFSTR("Statement is reset: \"%@\""), *(_QWORD *)(a1 + 24));

  }
  v6 = *(sqlite3_stmt **)(a1 + 32);
  if (v6)
    return sqlite3_column_int(v6, v4);
  else
    return 0;
}

void sub_18A7BB2B0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  CKRecordZoneID *v12;
  const char *v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  void *v20;
  NSObject *v21;
  CKModifyRecordZonesOperation *v22;
  const char *v23;
  void *v24;
  const char *v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  NSObject *v29;
  const char *v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, int, int, id);
  void *v42;
  NSObject *v43;
  _QWORD *v44;
  _QWORD v45[5];
  id v46;
  _QWORD v47[2];

  v47[1] = *MEMORY[0x1E0C80C00];
  v45[0] = 0;
  v45[1] = v45;
  v45[2] = 0x3032000000;
  v45[3] = sub_18A7BB52C;
  v45[4] = sub_18A7BB53C;
  v46 = 0;
  objc_msgSend_createRepairOperationGroupWithName_(*(void **)(a1 + 56), a2, (uint64_t)CFSTR("Touch Repair Zone"), a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_repairZoneID(*(void **)(a1 + 32), v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v9;
  if (v9)
  {
    v11 = v9;
  }
  else
  {
    v12 = [CKRecordZoneID alloc];
    v11 = (id)objc_msgSend_initWithZoneName_ownerName_(v12, v13, (uint64_t)CFSTR("RepairZone"), (uint64_t)CFSTR("__defaultOwner__"));
  }
  v14 = v11;

  objc_msgSend_container(*(void **)(a1 + 40), v15, v16, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_createRepairContainerFromContainer_withOverrides_(*(void **)(a1 + 56), v19, (uint64_t)v18, *(_QWORD *)(a1 + 32));
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = dispatch_group_create();
  dispatch_group_enter(v21);
  v22 = [CKModifyRecordZonesOperation alloc];
  v47[0] = v14;
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v23, (uint64_t)v47, 1);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v26 = (void *)objc_msgSend_initWithRecordZonesToSave_recordZoneIDsToDelete_(v22, v25, 0, (uint64_t)v24);

  objc_msgSend_setGroup_(v26, v27, (uint64_t)v5, v28);
  v39 = MEMORY[0x1E0C809B0];
  v40 = 3221225472;
  v41 = sub_18A7BB544;
  v42 = &unk_1E1F65550;
  v44 = v45;
  v29 = v21;
  v43 = v29;
  objc_msgSend_setModifyRecordZonesCompletionBlock_(v26, v30, (uint64_t)&v39, v31);
  objc_msgSend_privateCloudDatabase(v20, v32, v33, v34, v39, v40, v41, v42);
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addOperation_(v35, v36, (uint64_t)v26, v37);

  dispatch_group_wait(v29, 0xFFFFFFFFFFFFFFFFLL);
  v38 = (id)objc_opt_self();

  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  _Block_object_dispose(v45, 8);

}

void sub_18A7BB4FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A7BB52C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18A7BB53C(uint64_t a1)
{

}

void sub_18A7BB544(uint64_t a1, int a2, int a3, id obj)
{
  id v6;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
  v6 = obj;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_18A7BD380(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 512) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 512);
    *(_QWORD *)(v8 + 512) = v7;

  }
}

void sub_18A7BD510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A7BD528(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A7BD550(uint64_t a1)
{

}

void sub_18A7BD558(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 512));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7BD6B4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void sub_18A7BD844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7BD85C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

uint64_t sub_18A7C01EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1E0DE7D20](a2, sel_clearAllClouddThrottles, a3, a4);
}

void sub_18A7C02BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A7C02D4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18A7C02E4(uint64_t a1)
{

}

uint64_t sub_18A7C02F0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD v6[5];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = sub_18A7C0368;
  v6[3] = &unk_1E1F655E0;
  v6[4] = *(_QWORD *)(a1 + 40);
  objc_msgSend_allClouddThrottlesWithCompletionHandler_(a2, (const char *)a2, (uint64_t)v6, a4);
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_18A7C0368(uint64_t a1, void *a2)
{
  if (!a2)
    a2 = (void *)MEMORY[0x1E0C9AA60];
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

uint64_t sub_18A7C0410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1E0DE7D20](a2, sel_addClouddThrottle_, *(_QWORD *)(a1 + 32), a4);
}

uint64_t sub_18A7C0438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1E0DE7D20](a2, sel_postClouddWalrusUpdateNotification, a3, a4);
}

void sub_18A7C04F0(uint64_t a1, void *a2, void *a3)
{
  const char *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  v11 = a2;
  v7 = a3;
  if (v11)
  {
    v9 = *(_QWORD *)(a1 + 32);
    v8 = *(_QWORD *)(a1 + 40);
    if (*(_BYTE *)(a1 + 48))
      objc_msgSend_synchronousRemoteObjectProxyWithErrorHandler_(v11, v5, v8, v6);
    else
      objc_msgSend_remoteObjectProxyWithErrorHandler_(v11, v5, v8, v6);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }

}

void sub_18A7C07B4(_Unwind_Exception *a1)
{
  void *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v3 - 72));
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7C07EC(uint64_t a1)
{
  id WeakRetained;
  NSObject *v2;
  const char *v3;
  uint64_t v4;
  int v5;
  id v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v2 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
    {
      v5 = 138412290;
      v6 = WeakRetained;
      _os_log_impl(&dword_18A5C5000, v2, OS_LOG_TYPE_INFO, "Warn: Connection became invalid: %@", (uint8_t *)&v5, 0xCu);
    }
    objc_msgSend_setHasValidLogicalDeviceScopedDaemonProxyCreator_(WeakRetained, v3, 0, v4);
  }

}

void sub_18A7C08D8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char hasValidLogicalDeviceScopedDaemonProxyCreator;
  NSObject *v16;
  uint64_t v17;
  const char *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  __int16 v26;
  id v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v5)
  {
    v7 = *(id *)(a1 + 32);
    objc_sync_enter(v7);
    objc_msgSend_logicalDeviceScopedDaemonProxyCreator(*(void **)(a1 + 32), v8, v9, v10);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    if (v14
      && (hasValidLogicalDeviceScopedDaemonProxyCreator = objc_msgSend_hasValidLogicalDeviceScopedDaemonProxyCreator(*(void **)(a1 + 32), v11, v12, v13), v14, (hasValidLogicalDeviceScopedDaemonProxyCreator & 1) != 0))
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v16 = ck_log_facility_ck;
      if (!os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
        goto LABEL_13;
      v17 = *(_QWORD *)(a1 + 32);
      v24 = 138412546;
      v25 = v17;
      v26 = 2112;
      v27 = v5;
      v18 = "Ignoring superfluous logical device proxy for %@: %@";
    }
    else
    {
      objc_msgSend_setLogicalDeviceScopedDaemonProxyCreator_(*(void **)(a1 + 32), v11, (uint64_t)v5, v13);
      objc_msgSend_setHasValidLogicalDeviceScopedDaemonProxyCreator_(*(void **)(a1 + 32), v19, 1, v20);
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v16 = ck_log_facility_ck;
      if (!os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
        goto LABEL_13;
      v21 = *(_QWORD *)(a1 + 32);
      v24 = 138412546;
      v25 = v21;
      v26 = 2112;
      v27 = v5;
      v18 = "Got a logical device proxy for %@: %@";
    }
    _os_log_impl(&dword_18A5C5000, v16, OS_LOG_TYPE_INFO, v18, (uint8_t *)&v24, 0x16u);
LABEL_13:
    objc_sync_exit(v7);

    goto LABEL_18;
  }
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v22 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
  {
    v23 = *(_QWORD *)(a1 + 32);
    v24 = 138412546;
    v25 = v23;
    v26 = 2112;
    v27 = v6;
    _os_log_impl(&dword_18A5C5000, v22, OS_LOG_TYPE_INFO, "Ignoring failed attempt to get logical device proxy for %@: %@", (uint8_t *)&v24, 0x16u);
  }
LABEL_18:
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_18A7C0B6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7C0C54()
{
  uint64_t v0;
  void *v1;

  v0 = objc_opt_new();
  v1 = (void *)qword_1ECD96EA8;
  qword_1ECD96EA8 = v0;

}

void sub_18A7C0E4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7C0F88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7C12F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_18A7C1310(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  int isEqual;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  int v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  const char *v66;
  uint64_t v67;
  int isEqualToString;
  void *v69;
  const char *v70;
  void *v71;
  _QWORD v73[2];

  v73[1] = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  objc_msgSend_containerInfo(v5, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setupInfo(*(void **)(a1 + 32), v11, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = v10;
  objc_msgSend_containerID(v15, v16, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_containerID(v14, v20, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  isEqual = objc_msgSend_isEqual_(v19, v24, (uint64_t)v23, v25);

  if (!isEqual)
    goto LABEL_9;
  objc_msgSend_containerOptions(v15, v27, v28, v29);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_containerOptions(v14, v31, v32, v33);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_accountOverrideInfo(v30, v35, v36, v37);
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_accountOverrideInfo(v34, v39, v40, v41);
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v43 = CKObjectsAreBothNilOrEqual(v38, v42);

  if (!v43)
  {

LABEL_9:
    goto LABEL_10;
  }
  objc_msgSend_personaIdentifier(v30, v44, v45, v46);
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_personaIdentifier(v34, v48, v49, v50);
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  v52 = CKObjectsAreBothNilOrEqual(v47, v51);

  if ((v52 & 1) == 0)
  {
LABEL_10:
    v71 = (void *)MEMORY[0x1E0C9AA60];
    goto LABEL_11;
  }
  objc_msgSend_record(*(void **)(a1 + 40), v53, v54, v55);
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_recordType(v5, v57, v58, v59);
  v60 = objc_claimAutoreleasedReturnValue();
  v64 = (void *)v60;
  if (v56
    && v60
    && (objc_msgSend_recordType(v56, v61, v62, v63),
        v65 = (void *)objc_claimAutoreleasedReturnValue(),
        isEqualToString = objc_msgSend_isEqualToString_(v64, v66, (uint64_t)v65, v67),
        v65,
        !isEqualToString))
  {
    v71 = (void *)MEMORY[0x1E0C9AA60];
  }
  else
  {
    v69 = _Block_copy(v6);
    v73[0] = v69;
    objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], v70, (uint64_t)v73, 1);
    v71 = (void *)objc_claimAutoreleasedReturnValue();

  }
LABEL_11:

  return v71;
}

void sub_18A7C1560(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v2 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = 138412290;
    v5 = v3;
    _os_log_impl(&dword_18A5C5000, v2, OS_LOG_TYPE_INFO, "Invoking record change handler with record change: %@", (uint8_t *)&v4, 0xCu);
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

uint64_t sub_18A7C164C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

_QWORD *sub_18A7C1978(_QWORD *a1)
{
  if (a1)
  {
    if ((a1[22] & 8) == 0)
      a1 = (_QWORD *)a1[20];
    a1 = a1;
  }
  return a1;
}

BOOL sub_18A7C22DC()
{
  _BOOL8 result;

  result = _CKUseSystemInstalledBinaries();
  _sCKUseSystemInstalledBinaries = result;
  return result;
}

id sub_18A7C31D0(void **a1, const char *a2)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  const char *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  NSString *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  void *v25;
  const char *v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  BOOL v50;
  unint64_t v51;
  void *v52;
  const char *v53;
  uint64_t v54;
  void *v55;
  const char *v56;
  uint64_t v57;
  const char *v58;
  const char *v60;
  id v61;
  id v62;
  id v63;
  const char *v64;
  const char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  const char *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  const char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  const char *v81;
  uint64_t v82;
  const char *v83;
  uint64_t v84;
  NSObject *v85;
  const char *v86;
  uint64_t v87;
  void *v88;
  const char *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  const char *v93;
  uint64_t v94;
  void *v95;
  void *v96;
  id v97;
  const char *v98;
  const char *v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  void *v104;
  _BOOL4 v105;
  NSObject *v106;
  const char *v107;
  uint64_t v108;
  void *v109;
  void *v111;
  void *v112;
  void *v113;
  id v115;
  id v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  id v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  id v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  id v131;
  _BYTE v132[128];
  uint8_t v133[128];
  uint8_t buf[4];
  uint64_t v135;
  _BYTE v136[128];
  uint64_t v137;

  v137 = *MEMORY[0x1E0C80C00];
  v2 = a1[4];
  v131 = 0;
  objc_msgSend_entriesWithValues_label_error_setupBlock_(v2, a2, 0, 0, &v131, &unk_1E1F598D8);
  v113 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v131;
  if (v3)
  {
    v4 = v3;
    v5 = v4;
    goto LABEL_66;
  }
  v115 = objc_alloc_init(MEMORY[0x1E0CB3788]);
  v116 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v6 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v129 = 0u;
  v130 = 0u;
  v127 = 0u;
  v128 = 0u;
  v7 = v113;
  v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v8, (uint64_t)&v127, (uint64_t)v136, 16);
  if (v12)
  {
    v13 = *(_QWORD *)v128;
    do
    {
      for (i = 0; i != v12; ++i)
      {
        if (*(_QWORD *)v128 != v13)
          objc_enumerationMutation(v7);
        v15 = *(void **)(*((_QWORD *)&v127 + 1) + 8 * i);
        objc_msgSend_creatingClass(v15, v9, v10, v11);
        v16 = (NSString *)objc_claimAutoreleasedReturnValue();
        if (NSClassFromString(v16))
        {
          if (objc_msgSend_isExpired(v15, v17, v18, v19))
          {
            objc_msgSend_addObject_(v116, v20, (uint64_t)v15, v22);
            objc_msgSend_addObject_(v6, v23, (uint64_t)CFSTR("expired"), v24);
            goto LABEL_14;
          }
          objc_msgSend_groupID(v15, v20, v21, v22);
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          v33 = objc_msgSend_unsignedIntegerValue(v25, v30, v31, v32);
          objc_msgSend_addIndex_(v115, v34, v33, v35);
        }
        else
        {
          objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v17, (uint64_t)CFSTR("Creating class %@ not found"), v19, v16);
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_addObject_(v116, v26, (uint64_t)v15, v27);
          objc_msgSend_addObject_(v6, v28, (uint64_t)v25, v29);
        }

LABEL_14:
      }
      v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v7, v9, (uint64_t)&v127, (uint64_t)v136, 16);
    }
    while (v12);
  }

  objc_msgSend_error(v7, v36, v37, v38);
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_invalidate(v7, v40, v41, v42);
  v49 = objc_msgSend_count(v116, v43, v44, v45);
  v50 = v39 == 0;
  if (v49 && !v39)
  {
    v51 = 1;
    do
    {
      objc_msgSend_objectAtIndex_(v116, v46, v51 - 1, v48);
      v52 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectAtIndex_(v6, v53, v51 - 1, v54);
      v55 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_fetchAllProperties_(a1[4], v56, (uint64_t)v52, v57);
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      v50 = v39 == 0;
      if (!v39)
        objc_msgSend_expireGroup_reason_database_(CKSQLiteTableGroup, v58, (uint64_t)v52, (uint64_t)v55, a1[5]);

    }
    while (v51++ < v49 && v39 == 0);
  }
  if (v50)
  {
    objc_msgSend_tocTable(a1[6], v46, v47, v48);
    v112 = (void *)objc_claimAutoreleasedReturnValue();
    v126 = 0;
    objc_msgSend_entriesWithValues_label_error_setupBlock_(v112, v60, 0, 0, &v126, &unk_1E1F59998);
    v111 = (void *)objc_claimAutoreleasedReturnValue();
    v61 = v126;
    if (v61)
    {
      v4 = v61;
      v5 = v4;
    }
    else
    {
      v62 = objc_alloc_init(MEMORY[0x1E0C99E20]);
      v124 = 0u;
      v125 = 0u;
      v122 = 0u;
      v123 = 0u;
      v63 = v111;
      v68 = objc_msgSend_countByEnumeratingWithState_objects_count_(v63, v64, (uint64_t)&v122, (uint64_t)v133, 16);
      if (v68)
      {
        v69 = *(_QWORD *)v123;
        while (2)
        {
          v70 = 0;
          do
          {
            if (*(_QWORD *)v123 != v69)
              objc_enumerationMutation(v63);
            v71 = *(void **)(*((_QWORD *)&v122 + 1) + 8 * v70);
            objc_msgSend_groupID(v71, v65, v66, v67);
            v72 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_dbTableName(v71, v73, v74, v75);
            v76 = (void *)objc_claimAutoreleasedReturnValue();
            v80 = objc_msgSend_unsignedIntegerValue(v72, v77, v78, v79);
            if ((objc_msgSend_containsIndex_(v115, v81, v80, v82) & 1) != 0)
            {
              objc_msgSend_addObject_(v62, v83, (uint64_t)v76, v84);
            }
            else
            {
              if (ck_log_initialization_predicate != -1)
                dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
              v85 = ck_log_facility_sql;
              if (os_log_type_enabled((os_log_t)ck_log_facility_sql, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)buf = 138543362;
                v135 = (uint64_t)v76;
                _os_log_impl(&dword_18A5C5000, v85, OS_LOG_TYPE_INFO, "Removing TOC entry for table: %{public}@", buf, 0xCu);
              }
              objc_msgSend_deleteObject_(v112, v86, (uint64_t)v71, v87);
              v88 = (void *)objc_claimAutoreleasedReturnValue();
              if (v88)
              {
                v4 = v88;

                v5 = v4;
                goto LABEL_63;
              }
            }

            ++v70;
          }
          while (v68 != v70);
          v68 = objc_msgSend_countByEnumeratingWithState_objects_count_(v63, v65, (uint64_t)&v122, (uint64_t)v133, 16);
          if (v68)
            continue;
          break;
        }
      }

      objc_msgSend_error(v63, v89, v90, v91);
      v92 = (void *)objc_claimAutoreleasedReturnValue();
      if (v92)
      {
        v4 = v92;
        v5 = v4;
      }
      else
      {
        v95 = a1[5];
        v121 = 0;
        objc_msgSend_allTableNames_(v95, v93, (uint64_t)&v121, v94);
        v96 = (void *)objc_claimAutoreleasedReturnValue();
        v4 = v121;
        v117 = 0u;
        v118 = 0u;
        v119 = 0u;
        v120 = 0u;
        v97 = v96;
        v5 = (void *)objc_msgSend_countByEnumeratingWithState_objects_count_(v97, v98, (uint64_t)&v117, (uint64_t)v132, 16);
        if (v5)
        {
          v101 = *(_QWORD *)v118;
          while (2)
          {
            v102 = 0;
            do
            {
              if (*(_QWORD *)v118 != v101)
                objc_enumerationMutation(v97);
              v103 = *(_QWORD *)(*((_QWORD *)&v117 + 1) + 8 * (_QWORD)v102);
              objc_msgSend_member_(v62, v99, v103, v100);
              v104 = (void *)objc_claimAutoreleasedReturnValue();
              v105 = v104 == 0;

              if (v105)
              {
                if (ck_log_initialization_predicate != -1)
                  dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
                v106 = ck_log_facility_sql;
                if (os_log_type_enabled((os_log_t)ck_log_facility_sql, OS_LOG_TYPE_INFO))
                {
                  *(_DWORD *)buf = 138543362;
                  v135 = v103;
                  _os_log_impl(&dword_18A5C5000, v106, OS_LOG_TYPE_INFO, "Dropping db table due to no TOC entry: %{public}@", buf, 0xCu);
                }
                objc_msgSend_dropTable_(a1[5], v107, v103, v108);
                v109 = (void *)objc_claimAutoreleasedReturnValue();

                if (v109)
                {
                  v4 = v109;
                  v5 = v4;
                  goto LABEL_62;
                }
                v4 = 0;
              }
              v102 = (char *)v102 + 1;
            }
            while (v5 != v102);
            v5 = (void *)objc_msgSend_countByEnumeratingWithState_objects_count_(v97, v99, (uint64_t)&v117, (uint64_t)v132, 16);
            if (v5)
              continue;
            break;
          }
        }
LABEL_62:

      }
LABEL_63:

    }
  }
  else
  {
    v4 = v39;
    v5 = v4;
  }

LABEL_66:
  return v5;
}

void sub_18A7C3A34(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  const char *v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v8 = CKSQLiteTOCTableGroupTableGroupIDPropertyName;
  v9 = CKSQLiteTOCTableGroupTableLastUsedPropertyName;
  v10 = CKSQLiteTOCTableGroupTableCreatingClassPropertyName;
  v2 = (void *)MEMORY[0x1E0C99D20];
  v3 = a2;
  objc_msgSend_arrayWithObjects_count_(v2, v4, (uint64_t)&v8, 3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setFetchedProperties_(v3, v6, (uint64_t)v5, v7, v8, v9, v10, v11);

}

void sub_18A7C3AE8(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  const char *v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  _QWORD v8[3];

  v8[2] = *MEMORY[0x1E0C80C00];
  v8[0] = CKSQLiteTOCTableEntryGroupIDPropertyName;
  v8[1] = CKSQLiteTOCTableEntryDbTablePropertyName;
  v2 = (void *)MEMORY[0x1E0C99D20];
  v3 = a2;
  objc_msgSend_arrayWithObjects_count_(v2, v4, (uint64_t)v8, 2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setFetchedProperties_(v3, v6, (uint64_t)v5, v7);

}

id sub_18A7C47BC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  int v8;
  id v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  BOOL v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  int v20;
  id v21;
  _QWORD v23[4];
  id v24;
  id v25;

  objc_msgSend_statementForFetchingAllTableNamesInDatabase_(CKSQLiteCompiledStatement, a2, *(_QWORD *)(a1 + 32), a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = 0;
  v8 = objc_msgSend_step_(v5, v6, (uint64_t)&v25, v7);
  v9 = v25;
  v13 = v9;
  if (v8)
    v14 = v9 == 0;
  else
    v14 = 0;
  if (v14)
  {
    v15 = MEMORY[0x1E0C809B0];
    do
    {
      v23[0] = v15;
      v23[1] = 3221225472;
      v23[2] = sub_18A7C48C4;
      v23[3] = &unk_1E1F5FB40;
      v24 = *(id *)(a1 + 40);
      objc_msgSend_enumerateResultColumnsWithBlock_(v5, v16, (uint64_t)v23, v17);

      v25 = 0;
      v20 = objc_msgSend_step_(v5, v18, (uint64_t)&v25, v19);
      v21 = v25;
      v13 = v21;
    }
    while (v20 && !v21);
  }
  objc_msgSend_invalidate(v5, v10, v11, v12);

  return v13;
}

uint64_t sub_18A7C48C4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_addObject_(*(void **)(a1 + 32), a2, a4, a4);
}

uint64_t sub_18A7C4C5C(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSObject *v6;
  int v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  if (a1 == 1)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v6 = ck_log_facility_sql;
    if (os_log_type_enabled((os_log_t)ck_log_facility_sql, OS_LOG_TYPE_DEBUG))
    {
      v8 = 134218242;
      v9 = a2;
      v10 = 2080;
      v11 = a4;
      _os_log_debug_impl(&dword_18A5C5000, v6, OS_LOG_TYPE_DEBUG, "SQLitDatabase(%p) statement executing: %s", (uint8_t *)&v8, 0x16u);
    }
  }
  return 0;
}

void sub_18A7C590C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, pthread_mutex_t *a12)
{
  pthread_mutex_t *v12;

  if (v12)
  {
    v12[1].__sig = 0;
    pthread_mutex_unlock(v12);
  }
  _Unwind_Resume(exception_object);
}

void sub_18A7C59D8(_Unwind_Exception *exception_object)
{
  pthread_mutex_t *v1;

  if (v1)
  {
    v1[1].__sig = 0;
    pthread_mutex_unlock(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_18A7C5B34(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7C5BC0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7C5C4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7C5E84(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 512) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 512);
    *(_QWORD *)(v8 + 512) = v7;

  }
}

void sub_18A7C6014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A7C602C(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A7C6054(uint64_t a1)
{

}

void sub_18A7C605C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 512));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7C61B8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void sub_18A7C6348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7C6360(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7C64BC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 528) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 528);
    *(_QWORD *)(v8 + 528) = v7;

  }
}

void sub_18A7C664C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7C6664(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 528));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

uint64_t sub_18A7C7110(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t isEqual;

  objc_msgSend_metadata(a2, (const char *)a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_identifier(v5, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  isEqual = objc_msgSend_isEqual_(v9, v10, *(_QWORD *)(a1 + 32), v11);

  return isEqual;
}

void sub_18A7C7A34(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 504) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 504);
    *(_QWORD *)(v8 + 504) = v7;

  }
}

void sub_18A7C7BC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A7C7BDC(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A7C7C04(uint64_t a1)
{

}

void sub_18A7C7C0C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 504));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7C8DA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7C8E30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7C8EAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7C9194(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7C9228(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

const __CFString *CKPCSKeyToRemoveKeyTypeString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("INVALID");
  else
    return off_1E1F657B0[a1 - 1];
}

uint64_t CKPCSKeyToRemoveKeyTypeFromString(void *a1)
{
  id v1;
  uint64_t v2;
  const char *v3;
  const char *v4;
  const char *v5;

  v1 = a1;
  v2 = 1;
  if (objc_msgSend_compare_options_(v1, v3, (uint64_t)CFSTR("Primary"), 1))
  {
    if (objc_msgSend_compare_options_(v1, v4, (uint64_t)CFSTR("KeyPair"), 1))
    {
      if (objc_msgSend_compare_options_(v1, v5, (uint64_t)CFSTR("Sharee"), 1))
        v2 = 2;
      else
        v2 = 3;
    }
    else
    {
      v2 = 2;
    }
  }

  return v2;
}

uint64_t sub_18A7C9B84(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  const void *v21;
  id v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  const void *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  size_t v35;
  int v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;

  v4 = a2;
  v5 = a3;
  v9 = objc_msgSend_length(v4, v6, v7, v8);
  v13 = objc_msgSend_length(v5, v10, v11, v12);
  if (v9)
  {
    if (v13)
    {
      if ((objc_msgSend_isEqualToData_(v4, v14, (uint64_t)v5, v15) & 1) != 0)
      {
        v16 = 0;
        goto LABEL_16;
      }
      v17 = objc_retainAutorelease(v4);
      v21 = (const void *)objc_msgSend_bytes(v17, v18, v19, v20);
      v22 = objc_retainAutorelease(v5);
      v26 = (const void *)objc_msgSend_bytes(v22, v23, v24, v25);
      v30 = objc_msgSend_length(v17, v27, v28, v29);
      v34 = objc_msgSend_length(v22, v31, v32, v33);
      if (v30 >= v34)
        v35 = v34;
      else
        v35 = v30;
      v36 = memcmp(v21, v26, v35);
      if (v36 < 0
        || !v36 && (v40 = objc_msgSend_length(v17, v37, v38, v39), v40 < objc_msgSend_length(v22, v41, v42, v43)))
      {
        v16 = -1;
        goto LABEL_16;
      }
    }
    v16 = 1;
    goto LABEL_16;
  }
  if (v13)
    v16 = -1;
  else
    v16 = 0;
LABEL_16:

  return v16;
}

void sub_18A7CA1E0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void sub_18A7CA370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A7CA388(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A7CA3B0(uint64_t a1)
{

}

void sub_18A7CA3B8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7CA514(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 528) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 528);
    *(_QWORD *)(v8 + 528) = v7;

  }
}

void sub_18A7CA6A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7CA6BC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 528));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7CC08C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 528) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 528);
    *(_QWORD *)(v8 + 528) = v7;

  }
}

void sub_18A7CC21C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A7CC234(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A7CC25C(uint64_t a1)
{

}

void sub_18A7CC264(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 528));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7CC3C0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 536) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 536);
    *(_QWORD *)(v8 + 536) = v7;

  }
}

void sub_18A7CC550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7CC568(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 536));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7CC6C4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 544) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 544);
    *(_QWORD *)(v8 + 544) = v7;

  }
}

void sub_18A7CC854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7CC86C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 544));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7CC9C8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 552) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 552);
    *(_QWORD *)(v8 + 552) = v7;

  }
}

void sub_18A7CCB58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7CCB70(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 552));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7CD5A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A7CD5D8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18A7CD5E8(uint64_t a1)
{

}

uint64_t sub_18A7CD5F0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  if (v4)
    objc_msgSend_addObject_(*(void **)(v4 + 576), a2, a3, a4);
  else
    objc_msgSend_addObject_(0, a2, a3, a4);
  return 0;
}

uint64_t sub_18A7CD62C(uint64_t a1, int a2, int a3, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 0;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
  return 1;
}

uint64_t sub_18A7CE0A4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(result + 32);
  if (v4)
  {
    *(_QWORD *)(v4 + 584) += a2;
    v5 = *(_QWORD *)(result + 32);
    if (v5)
    {
      *(_QWORD *)(v5 + 592) += a3;
      v6 = *(_QWORD *)(result + 32);
      if (v6)
        *(_QWORD *)(v6 + 600) += a4;
    }
  }
  return result;
}

void sub_18A7CFBB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_18A7D05B8(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  objc_msgSend_userInfo(a1, a2, a3, a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v4, v5, (uint64_t)CFSTR("ck_isComparisonError"), v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend_BOOLValue(v7, v8, v9, v10);

  return v11;
}

void sub_18A7D08D8(uint64_t a1, void *a2)
{
  if (a1)
    objc_storeStrong((id *)(a1 + 8), a2);
}

__CFString *sub_18A7D10A4(unint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if (a1 <= 2)
    return off_1E1F657C8[a1];
  objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], a2, (uint64_t)CFSTR("%lu"), a4, a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *sub_18A7D280C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  __CFString *v4;
  __CFString *result;

  if (a1 > 98)
  {
    switch(a1)
    {
      case 99:
        return CFSTR("CONTAINS");
      case 100:
        return CFSTR("BETWEEN");
      case 1000:
        return CFSTR("TOKENMATCHES");
      default:
LABEL_22:
        objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], a2, (uint64_t)CFSTR("%lu"), a4, a1);
        v4 = (__CFString *)objc_claimAutoreleasedReturnValue();
        return v4;
    }
  }
  else
  {
    switch(a1)
    {
      case 0:
        v4 = CFSTR("<");
        return v4;
      case 1:
        result = CFSTR("<=");
        break;
      case 2:
        result = CFSTR(">");
        break;
      case 3:
        result = CFSTR(">=");
        break;
      case 4:
        result = CFSTR("==");
        break;
      case 5:
        result = CFSTR("!=");
        break;
      case 6:
        result = CFSTR("MATCHES");
        break;
      case 7:
        result = CFSTR("LIKE");
        break;
      case 8:
        result = CFSTR("BEGINSWITH");
        break;
      case 9:
        result = CFSTR("ENDSWITH");
        break;
      case 10:
        result = CFSTR("IN");
        break;
      default:
        goto LABEL_22;
    }
  }
  return result;
}

__CFString *sub_18A7D2C50(unint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 3)
    return off_1E1F657E0[a1];
  objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], a2, (uint64_t)CFSTR("%lu"), a4, a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

_QWORD *sub_18A7D2D1C(_QWORD *result, uint64_t a2)
{
  objc_super v3;

  if (result)
  {
    v3.receiver = result;
    v3.super_class = (Class)CKComparisonOptionsValidator;
    result = objc_msgSendSuper2(&v3, sel_init);
    if (result)
      result[1] = a2;
  }
  return result;
}

__CFString *sub_18A7D2FEC(char a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  const char *v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  __CFString *v15;

  objc_msgSend_array(MEMORY[0x1E0C99DE8], a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v5;
  if ((a1 & 1) != 0)
  {
    objc_msgSend_addObject_(v5, v6, (uint64_t)CFSTR("c"), v8);
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_3;
  }
  objc_msgSend_addObject_(v9, v6, (uint64_t)CFSTR("d"), v8);
  if ((a1 & 4) == 0)
  {
LABEL_4:
    if ((a1 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_10:
  objc_msgSend_addObject_(v9, v6, (uint64_t)CFSTR("n"), v8);
  if ((a1 & 8) != 0)
LABEL_5:
    objc_msgSend_addObject_(v9, v6, (uint64_t)CFSTR("l"), v8);
LABEL_6:
  if (objc_msgSend_count(v9, v6, v7, v8))
  {
    objc_msgSend_insertObject_atIndex_(v9, v10, (uint64_t)CFSTR("["), 0);
    objc_msgSend_addObject_(v9, v11, (uint64_t)CFSTR("]"), v12);
    objc_msgSend_componentsJoinedByString_(v9, v13, (uint64_t)&stru_1E1F66ED0, v14);
    v15 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v15 = CFSTR("(none)");
  }

  return v15;
}

id *sub_18A7D40F4(void *a1, void *a2, void *a3)
{
  id v4;
  id v5;
  id *v6;
  id *v7;
  id v8;
  objc_super v10;

  if (!a1)
    return 0;
  v10.receiver = a1;
  v10.super_class = (Class)CKFunctionExpressionValidator;
  v4 = a3;
  v5 = a2;
  v6 = (id *)objc_msgSendSuper2(&v10, sel_init);
  v7 = v6;
  if (v6)
  {
    objc_storeStrong(v6 + 1, a2);

    v8 = v4;
    v5 = v7[2];
    v7[2] = v8;
  }

  return v7;
}

id *sub_18A7D4B04(void *a1, void *a2)
{
  id *v3;
  id *v4;
  objc_super v6;

  if (!a1)
    return 0;
  v6.receiver = a1;
  v6.super_class = (Class)CKKindOfClassValidator;
  v3 = (id *)objc_msgSendSuper2(&v6, sel_init);
  v4 = v3;
  if (v3)
    objc_storeStrong(v3 + 1, a2);
  return v4;
}

void sub_18A7D58DC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 504) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 504);
    *(_QWORD *)(v8 + 504) = v7;

  }
}

void sub_18A7D5A6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A7D5A84(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A7D5AAC(uint64_t a1)
{

}

void sub_18A7D5AB4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 504));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7D65CC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7D66C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7D6948(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7D6A6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

BOOL CKDPDistributedTimestampsReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  CKDPSiteIdentifier *v17;
  const char *v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(CKDPSiteIdentifier);
        objc_msgSend_addSiteIdentifiers_(a1, v18, (uint64_t)v17, v19);
        if (!PBReaderPlaceMark() || !CKDPSiteIdentifierReadFrom((uint64_t)v17, a2))
          goto LABEL_30;
LABEL_25:
        PBReaderRecallMark();

        goto LABEL_27;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_27:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v17 = objc_alloc_init(CKDPDistributedTimestampsSiteVersionVectors);
    objc_msgSend_addSiteVersionVectors_(a1, v20, (uint64_t)v17, v21);
    if (!PBReaderPlaceMark() || !CKDPDistributedTimestampsSiteVersionVectorsReadFrom((uint64_t)v17, a2))
    {
LABEL_30:

      return 0;
    }
    goto LABEL_25;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id sub_18A7D7F30()
{
  void *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void *v174;
  void *v175;
  void *v176;
  void *v177;
  void *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  void *v186;
  void *v187;
  void *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  void *v203;
  void *v204;
  void *v205;
  void *v206;
  void *v207;
  void *v208;
  void *v209;
  void *v210;
  void *v211;
  void *v212;
  void *v213;
  void *v214;
  void *v215;
  void *v216;
  void *v217;
  void *v218;
  void *v219;
  void *v220;
  void *v221;
  void *v222;
  void *v223;
  void *v224;
  void *v225;
  void *v226;
  void *v227;
  void *v228;
  void *v229;
  void *v230;
  void *v231;
  void *v232;
  void *v233;
  void *v234;
  void *v235;
  void *v236;
  void *v237;
  void *v238;
  void *v239;
  void *v240;
  void *v241;
  void *v242;
  void *v243;
  void *v244;
  void *v245;
  void *v246;
  void *v247;
  void *v248;
  void *v249;
  void *v250;
  void *v251;
  void *v252;
  void *v253;
  void *v254;
  void *v255;
  void *v256;
  void *v257;
  void *v258;
  void *v259;
  void *v260;
  void *v261;
  void *v262;
  void *v263;
  void *v264;
  id v265;
  void *v266;
  void *v267;
  void *v268;
  void *v269;
  void *v270;
  void *v271;
  void *v272;
  void *v273;
  void *v274;
  void *v275;
  void *v276;
  void *v277;
  void *v278;
  void *v279;
  void *v280;
  void *v281;
  void *v282;
  void *v283;
  void *v284;
  void *v285;
  void *v286;
  void *v287;
  void *v288;
  void *v289;
  void *v290;
  void *v291;
  void *v292;
  void *v293;
  void *v294;
  void *v295;
  void *v296;
  void *v297;
  void *v298;
  void *v299;
  void *v300;
  void *v301;
  void *v302;
  void *v303;
  void *v304;
  void *v305;
  void *v306;
  void *v307;
  void *v308;
  void *v309;
  void *v310;
  void *v311;
  void *v312;
  void *v313;
  void *v314;
  void *v315;
  void *v316;
  void *v317;
  void *v318;
  void *v319;
  void *v320;
  void *v321;
  void *v322;
  void *v323;
  void *v324;
  void *v325;
  void *v326;
  void *v327;
  void *v328;
  void *v329;
  void *v330;
  void *v331;
  void *v332;
  void *v333;
  void *v334;
  void *v335;
  void *v336;
  void *v337;
  void *v338;
  void *v339;
  void *v340;
  void *v341;
  void *v342;
  void *v343;
  void *v344;
  void *v345;
  void *v346;
  void *v347;
  void *v348;
  void *v349;
  void *v350;
  void *v351;
  void *v352;
  void *v353;
  void *v354;
  void *v355;
  void *v356;
  void *v357;
  void *v358;
  void *v359;
  void *v360;
  void *v361;
  void *v362;
  void *v363;
  void *v364;
  void *v365;
  void *v366;
  void *v367;
  void *v368;
  void *v369;
  void *v370;
  void *v371;
  void *v372;
  void *v373;
  void *v374;
  void *v375;
  void *v376;
  void *v377;
  void *v378;
  void *v379;

  v0 = (void *)objc_opt_class();
  sub_18A79EA74(v0, v1, v2, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79EB4C(&unk_1E1F589F8);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DC44(v4, v6, v7, v8, v9, v10, v11, v12, v5, 0);
  v356 = (void *)objc_claimAutoreleasedReturnValue();

  sub_18A79EC2C();
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79EF5C(CFSTR("tokenize:using:"), v13, v14, v15, v16, v17, v18, v19, v356, 0);
  v20 = (void *)objc_claimAutoreleasedReturnValue();

  sub_18A79ED7C();
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = (void *)objc_opt_class();
  sub_18A79EA74(v22, v23, v24, v25);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DB20(v21, v27, v28, v29, v30, v31, v32, v33, v26, 0);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79ED7C();
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v36 = (void *)objc_opt_class();
  sub_18A79EA74(v36, v37, v38, v39);
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DB20(v35, v41, v42, v43, v44, v45, v46, v47, v40, 0);
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79EF5C(CFSTR("distanceToLocation:fromLocation:"), v34, v49, v50, v51, v52, v53, v54, v48, 0);
  v290 = (void *)objc_claimAutoreleasedReturnValue();

  sub_18A79EF5C(CFSTR("now"), 0, v55, v56, v57, v58, v59, v60, v197, v198);
  v364 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E6B8();
  v355 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79EC2C();
  v354 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E648();
  v353 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E8A0();
  v352 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79EE88();
  v351 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v355, v354, v353, v352, v351);
  v379 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E6B8();
  v350 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E728();
  v349 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DB20(v350, v61, v62, v63, v64, v65, v66, v67, v349, 0);
  v348 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79EE88();
  v347 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E648();
  v346 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E8A0();
  v345 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79EC2C();
  v344 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v348, v347, v346, v345, v344);
  v378 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E728();
  v342 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79EE88();
  v341 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E4F8();
  v340 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v339 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v342, v341, v340, v339, v20);
  v377 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E798();
  v338 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E728();
  v337 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DB20(v338, v68, v69, v70, v71, v72, v73, v74, v337, 0);
  v336 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E4F8();
  v335 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v334 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79EE88();
  v333 = (void *)objc_claimAutoreleasedReturnValue();
  v343 = v20;
  sub_18A79DF48(v336, v20, v335, v334, v333);
  v376 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E798();
  v332 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E648();
  v331 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E8A0();
  v330 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79EE88();
  v329 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v332, v20, v331, v330, v329);
  v375 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E6B8();
  v328 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E728();
  v327 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E798();
  v326 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DB20(v328, v75, v76, v77, v78, v79, v80, v81, v327, (uint64_t)v326);
  v325 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79EEF4();
  v324 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E568();
  v323 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v322 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79EC2C();
  v321 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v325, v324, v323, v322, v321);
  v374 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E6B8();
  v320 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E938();
  v319 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E4F8();
  v318 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v317 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79ED7C();
  v316 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v320, v319, v318, v317, v316);
  v373 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E6B8();
  v315 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79ED7C();
  v314 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E568();
  v313 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v312 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E938();
  v311 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v315, v314, v313, v312, v311);
  v372 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E728();
  v310 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79ED7C();
  v309 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E1E8();
  v308 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v307 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E938();
  v306 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v310, v309, v308, v307, v306);
  v371 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E6B8();
  v305 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E728();
  v304 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DB20(v305, v82, v83, v84, v85, v86, v87, v88, v304, 0);
  v303 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79ED7C();
  v302 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E4F8();
  v301 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v300 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E9D4();
  v299 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v303, v302, v301, v300, v299);
  v370 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E6B8();
  v298 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E728();
  v297 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DB20(v298, v89, v90, v91, v92, v93, v94, v95, v297, 0);
  v296 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79ED7C();
  v295 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E4F8();
  v294 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v292 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E938();
  v293 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79F0A8(v293, v96, v97, v98, v99, v100, v101, v102, 0, v199);
  v291 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v296, v295, v294, v292, v291);
  v369 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E728();
  v289 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E9D4();
  v288 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E1E8();
  v287 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v286 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79ED7C();
  v285 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v289, v288, v287, v286, v285);
  v368 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E728();
  v283 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E938();
  v284 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79F0A8(v284, v103, v104, v105, v106, v107, v108, v109, 0, v200);
  v282 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E1E8();
  v281 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v280 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79ED7C();
  v279 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v283, v282, v281, v280, v279);
  v367 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E6B8();
  v278 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E9D4();
  v277 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E568();
  v276 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v275 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79ED7C();
  v274 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v278, v277, v276, v275, v274);
  v366 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E6B8();
  v272 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E938();
  v273 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79F0A8(v273, v110, v111, v112, v113, v114, v115, v116, 0, v201);
  v271 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E568();
  v270 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v269 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79ED7C();
  v268 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v272, v271, v270, v269, v268);
  v365 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E728();
  v267 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E798();
  v266 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DB20(v267, v117, v118, v119, v120, v121, v122, v123, v266, 0);
  v264 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E9D4();
  v263 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E4F8();
  v262 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v261 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79ED7C();
  v260 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v264, v263, v262, v261, v260);
  v363 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E728();
  v259 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E798();
  v258 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DB20(v259, v124, v125, v126, v127, v128, v129, v130, v258, 0);
  v256 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E938();
  v257 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79F0A8(v257, v131, v132, v133, v134, v135, v136, v137, 0, v202);
  v255 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E4F8();
  v254 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v253 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79ED7C();
  v252 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v256, v255, v254, v253, v252);
  v362 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E6B8();
  v251 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79ED7C();
  v250 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E488();
  v249 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v246 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79EC2C();
  v248 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79EC9C();
  v247 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DB20(v248, v138, v139, v140, v141, v142, v143, v144, v247, 0);
  v245 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v251, v250, v249, v246, v245);
  v361 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E6B8();
  v244 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79ED7C();
  v243 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E5D8();
  v242 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v239 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79ED0C();
  v241 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79ED0C();
  v240 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79F0A8(v241, v145, v146, v147, v148, v149, v150, v151, v240, 0);
  v238 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v244, v243, v242, v239, v238);
  v360 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E6B8();
  v237 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E2C8();
  v236 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v235 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79ED0C();
  v234 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v237, v290, v236, v235, v234);
  v233 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF04(v233);
  v359 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E6B8();
  v232 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79EE18(CFSTR("___share"));
  v231 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E258();
  v230 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v229 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79F194();
  v228 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v232, v231, v230, v229, v228);
  v358 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E6B8();
  v227 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79EE18(CFSTR("___parent"));
  v226 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E258();
  v225 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v224 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79F194();
  v223 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v227, v226, v225, v224, v223);
  v357 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E6B8();
  v220 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79ED7C();
  v222 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79EEF4();
  v221 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DB20(v222, v152, v153, v154, v155, v156, v157, v158, v221, 0);
  v215 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E1E8();
  v219 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E258();
  v218 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E2C8();
  v217 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E338();
  v216 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E3A8();
  v214 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E418();
  v213 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DB20(v219, v159, v160, v161, v162, v163, v164, v165, v218, (uint64_t)v217);
  v212 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v211 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E938();
  v210 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v220, v215, v212, v211, v210);
  v209 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF04(v209);
  v166 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E6B8();
  v206 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79ED7C();
  v208 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79EEF4();
  v207 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DB20(v208, v167, v168, v169, v170, v171, v172, v173, v207, 0);
  v204 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E1E8();
  v205 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E258();
  v174 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E2C8();
  v175 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E338();
  v176 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E3A8();
  v177 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E418();
  v178 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DB20(v205, v179, v180, v181, v182, v183, v184, v185, v174, (uint64_t)v175);
  v186 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79E838();
  v187 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF48(v206, v204, v186, v187, v364);
  v188 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DF04(v188);
  v203 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A79DB20(v379, v189, v190, v191, v192, v193, v194, v195, v378, (uint64_t)v377);
  v265 = (id)objc_claimAutoreleasedReturnValue();

  return v265;
}

id sub_18A7D943C(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  const char *v21;
  void *v22;
  const char *v23;
  uint64_t v25;
  _QWORD v26[2];

  v26[1] = *MEMORY[0x1E0C80C00];
  v2 = a2;
  objc_msgSend_lowercaseString(v2, v3, v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend_rangeOfString_(v6, v7, (uint64_t)CFSTR("c"), v8);
  v12 = objc_msgSend_rangeOfString_(v6, v10, (uint64_t)CFSTR("d"), v11);
  v15 = objc_msgSend_rangeOfString_(v6, v13, (uint64_t)CFSTR("l"), v14);
  if (v9 == 0x7FFFFFFFFFFFFFFFLL || v12 == 0x7FFFFFFFFFFFFFFFLL || v15 == 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v16, (uint64_t)CFSTR("Invalid argument value: %@"), v17, v2);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = (void *)MEMORY[0x1E0CB35C8];
    v25 = *MEMORY[0x1E0CB2D50];
    v26[0] = v19;
    objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v21, (uint64_t)v26, (uint64_t)&v25, 1);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_errorWithDomain_code_userInfo_(v20, v23, (uint64_t)CFSTR("CKErrorDomain"), 12, v22);
    v18 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v18 = 0;
  }

  return v18;
}

void sub_18A7D9A7C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 512) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 512);
    *(_QWORD *)(v8 + 512) = v7;

  }
}

void sub_18A7D9C0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A7D9C24(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A7D9C4C(uint64_t a1)
{

}

void sub_18A7D9C54(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 512));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7D9DB0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void sub_18A7D9F40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7D9F58(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7DAED4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7DB184(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7DB1F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7DB274(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7DB33C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7DB3F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7DB460(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7DB534(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_18A7DB548(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;

  objc_msgSend_errorInducerID(a2, (const char *)a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend_isEqualToString_(v5, v6, *(_QWORD *)(a1 + 32), v7) ^ 1;

  return v8;
}

uint64_t sub_18A7DB588(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_hasFired(a2, (const char *)a2, a3, a4);
}

uint64_t sub_18A7DB590(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_hasFired(a2, (const char *)a2, a3, a4) ^ 1;
}

void sub_18A7DB604(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7DB6D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_18A7DB6EC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;

  objc_msgSend_testResultOverlayID(a2, (const char *)a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend_isEqualToString_(v5, v6, *(_QWORD *)(a1 + 32), v7) ^ 1;

  return v8;
}

void sub_18A7DBA10(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void sub_18A7DBBA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A7DBBB8(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A7DBBE0(uint64_t a1)
{

}

void sub_18A7DBBE8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

uint64_t sub_18A7DF6B8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_objectForKey_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
}

uint64_t sub_18A7E00F8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_replacementDeltas(a2, (const char *)a2, a3, a4);
}

uint64_t sub_18A7E0100(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_metadata(a2, (const char *)a2, a3, a4);
}

void sub_18A7E045C(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v2 = (void *)ck_log_facility_distributed_sync;
  if (os_log_type_enabled((os_log_t)ck_log_facility_distributed_sync, OS_LOG_TYPE_FAULT))
  {
    v3 = *(void **)(a1 + 32);
    v4 = v2;
    objc_msgSend_valueID(v3, v5, v6, v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = 138412546;
    v10 = v8;
    v11 = 2048;
    v12 = 300;
    _os_log_fault_impl(&dword_18A5C5000, v4, OS_LOG_TYPE_FAULT, "Mergeable %@ exceeded high limit of %lu site identifiers", (uint8_t *)&v9, 0x16u);

  }
}

void sub_18A7E0564(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v2 = (void *)ck_log_facility_distributed_sync;
  if (os_log_type_enabled((os_log_t)ck_log_facility_distributed_sync, OS_LOG_TYPE_FAULT))
  {
    v3 = *(void **)(a1 + 32);
    v4 = v2;
    objc_msgSend_valueID(v3, v5, v6, v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = 138412546;
    v10 = v8;
    v11 = 2048;
    v12 = 100;
    _os_log_fault_impl(&dword_18A5C5000, v4, OS_LOG_TYPE_FAULT, "Mergeable %@ exceeded medium limit of %lu site identifiers", (uint8_t *)&v9, 0x16u);

  }
}

void sub_18A7E066C(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v2 = (void *)ck_log_facility_distributed_sync;
  if (os_log_type_enabled((os_log_t)ck_log_facility_distributed_sync, OS_LOG_TYPE_FAULT))
  {
    v3 = *(void **)(a1 + 32);
    v4 = v2;
    objc_msgSend_valueID(v3, v5, v6, v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = 138412546;
    v10 = v8;
    v11 = 2048;
    v12 = 50;
    _os_log_fault_impl(&dword_18A5C5000, v4, OS_LOG_TYPE_FAULT, "Mergeable %@ exceeded low limit of %lu site identifiers", (uint8_t *)&v9, 0x16u);

  }
}

void sub_18A7E24C4(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x260], 8);
  _Block_object_dispose(&STACK[0x280], 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A7E2588(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18A7E2598(uint64_t a1)
{

}

void sub_18A7E25A0(uint64_t a1, void *a2, void *a3, _BYTE *a4)
{
  id v7;
  id v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  int v15;
  NSObject *v16;
  NSObject *v17;
  const char *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  const char *v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t i;
  void *v35;
  const char *v36;
  uint64_t v37;
  CKReplaceDeltasRequest *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const char *v47;
  void *v48;
  const char *v49;
  uint64_t v50;
  void *v51;
  NSObject *v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  id obj;
  uint8_t v63[128];
  uint8_t buf[4];
  id v65;
  __int16 v66;
  id v67;
  uint64_t v68;

  v68 = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v8 = a3;
  objc_msgSend_removableDeltaMetadatas(*(void **)(a1 + 32), v9, v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_msgSend_containsObject_(v12, v13, (uint64_t)v7, v14);

  if (v15)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v16 = ck_log_facility_distributed_sync;
    if (os_log_type_enabled((os_log_t)ck_log_facility_distributed_sync, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138412290;
      v65 = v7;
      _os_log_debug_impl(&dword_18A5C5000, v16, OS_LOG_TYPE_DEBUG, "Will fold delta %@ into new delta", buf, 0xCu);
    }
  }
  else
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v17 = ck_log_facility_distributed_sync;
    if (os_log_type_enabled((os_log_t)ck_log_facility_distributed_sync, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138412546;
      v65 = v7;
      v66 = 2112;
      v67 = v8;
      _os_log_debug_impl(&dword_18A5C5000, v17, OS_LOG_TYPE_DEBUG, "Generating replacement for delta %@: %@", buf, 0x16u);
    }
    v19 = *(void **)(a1 + 40);
    v20 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    obj = *(id *)(v20 + 40);
    objc_msgSend_mergeableDeltasForMetadata_error_(v19, v18, (uint64_t)v8, (uint64_t)&obj);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_storeStrong((id *)(v20 + 40), obj);
    if (v21 && !*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40))
    {
      objc_msgSend_setWithObject_(MEMORY[0x1E0C99E60], v22, (uint64_t)v7, v23);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v58 = 0u;
      v59 = 0u;
      v60 = 0u;
      v61 = 0u;
      v26 = v21;
      v28 = objc_msgSend_countByEnumeratingWithState_objects_count_(v26, v27, (uint64_t)&v58, (uint64_t)v63, 16);
      if (v28)
      {
        v32 = v28;
        v33 = *(_QWORD *)v59;
        do
        {
          for (i = 0; i != v32; ++i)
          {
            if (*(_QWORD *)v59 != v33)
              objc_enumerationMutation(v26);
            objc_msgSend_metadata(*(void **)(*((_QWORD *)&v58 + 1) + 8 * i), v29, v30, v31, (_QWORD)v58);
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_setReplacedDeltaIdentifiers_(v35, v36, (uint64_t)v25, v37);

          }
          v32 = objc_msgSend_countByEnumeratingWithState_objects_count_(v26, v29, (uint64_t)&v58, (uint64_t)v63, 16);
        }
        while (v32);
      }

      v38 = [CKReplaceDeltasRequest alloc];
      objc_msgSend_valueID(*(void **)(a1 + 48), v39, v40, v41);
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_allObjects(v25, v43, v44, v45);
      v46 = (void *)objc_claimAutoreleasedReturnValue();
      v48 = (void *)objc_msgSend_initWithValueID_deltaIdentifiersToReplace_replacementDeltas_replacementDeltasContainNewData_(v38, v47, (uint64_t)v42, (uint64_t)v46, v26, 1);

      objc_msgSend_addObject_(*(void **)(a1 + 56), v49, (uint64_t)v48, v50);
    }
    else
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v24 = (void *)ck_log_facility_distributed_sync;
      if (os_log_type_enabled((os_log_t)ck_log_facility_distributed_sync, OS_LOG_TYPE_ERROR))
      {
        v51 = *(void **)(a1 + 48);
        v52 = v24;
        objc_msgSend_valueID(v51, v53, v54, v55);
        v56 = (void *)objc_claimAutoreleasedReturnValue();
        v57 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40);
        *(_DWORD *)buf = 138412546;
        v65 = v56;
        v66 = 2112;
        v67 = v57;
        _os_log_error_impl(&dword_18A5C5000, v52, OS_LOG_TYPE_ERROR, "Error generating replacement deltas for %@: %@", buf, 0x16u);

      }
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = 0;
      *a4 = 1;
    }

  }
}

void sub_18A7E34A8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 512) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 512);
    *(_QWORD *)(v8 + 512) = v7;

  }
}

void sub_18A7E3638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A7E3650(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A7E3678(uint64_t a1)
{

}

void sub_18A7E3680(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 512));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7E37DC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void sub_18A7E396C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7E3984(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7E3AE0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 528) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 528);
    *(_QWORD *)(v8 + 528) = v7;

  }
}

void sub_18A7E3C70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7E3C88(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 528));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

uint64_t sub_18A7E5AB8(uint64_t a1, void *a2)
{
  return objc_msgSend_CKDescriptionPropertiesWithPublic_private_shouldExpand_(a2, (const char *)a2, 1, 1, 1);
}

uint64_t sub_18A7E5ACC(uint64_t a1, void *a2)
{
  return objc_msgSend_CKDescriptionPropertiesWithPublic_private_shouldExpand_(a2, (const char *)a2, 1, 1, 1);
}

void sub_18A7E73A0(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v2 = a2;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = sub_18A7E7420;
  v6[3] = &unk_1E1F65A28;
  v7 = v2;
  v8 = &unk_1E1FC4DB0;
  v5 = v2;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(&unk_1E1FC4D88, v3, (uint64_t)v6, v4);

}

void sub_18A7E7420(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  id v8;
  _QWORD v9[4];
  id v10;
  id v11;
  id v12;

  v5 = a2;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = sub_18A7E74CC;
  v9[3] = &unk_1E1F65A00;
  v10 = *(id *)(a1 + 32);
  v11 = v5;
  v12 = *(id *)(a1 + 40);
  v8 = v5;
  objc_msgSend_enumerateObjectsUsingBlock_(a3, v6, (uint64_t)v9, v7);

}

void sub_18A7E74CC(uint64_t a1, void *a2)
{
  const char *v3;
  uint64_t v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  char v8;
  const char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  id v16;

  v16 = a2;
  objc_msgSend_columnNamesForTable_(*(void **)(a1 + 32), v3, *(_QWORD *)(a1 + 40), v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend_containsObject_(v5, v6, (uint64_t)v16, v7);

  if ((v8 & 1) == 0)
  {
    v11 = *(void **)(a1 + 32);
    v12 = *(_QWORD *)(a1 + 40);
    objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 48), v9, (uint64_t)v16, v10);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_executeSQL_(v11, v14, (uint64_t)CFSTR("ALTER TABLE %@ ADD COLUMN %@ %@"), v15, v12, v16, v13);

  }
}

void sub_18A7E86BC(uint64_t a1)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  int isEqualToString;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  const char *v17;
  id v18;

  NSHomeDirectory();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v2, v3, (uint64_t)CFSTR("/var/empty"), v4);

  if (isEqualToString)
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v6, v7, v8);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(v16, v17, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), CFSTR("CKPackage.m"), 457, CFSTR("You cannot use CKPackage from a process with $HOME=/var/empty"));

    __break(1u);
  }
  else
  {
    NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
    v18 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectAtIndexedSubscript_(v18, v9, 0, v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringByAppendingPathComponent_(v11, v12, (uint64_t)CFSTR("CloudKit"), v13);
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = (void *)qword_1ECD96EE8;
    qword_1ECD96EE8 = v14;

  }
}

id sub_18A7E8794(uint64_t a1, void *a2, unint64_t a3)
{
  id v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  const char *v12;
  uint64_t v13;
  NSObject *v14;
  void *v15;
  uint8_t buf[4];
  unint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v4 = a2;
  v5 = objc_opt_self();
  if (a3 <= 0xC && ((1 << a3) & 0x19E6) != 0)
  {
    if ((a3 & 0xFFFFFFFFFFFFFFFBLL) - 1 >= 2)
    {
      v9 = v5;
      if (a3 - 7 < 6 && ((0x33u >> (a3 - 7)) & 1) != 0)
      {
        objc_msgSend_stringByAppendingPathComponent_(v4, v6, (uint64_t)CFSTR("DaemonPackages"), v8);
      }
      else
      {
        objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v6, v7, v8);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(v10, v11, (uint64_t)sel__packageDatabaseDirectoryWithBasePath_state_, v9, CFSTR("CKPackage.m"), 496, CFSTR("Missing states in _packageDatabasePath entry assert, for package: %@"), v9);

        objc_msgSend_stringByAppendingPathComponent_(v4, v12, 0, v13);
      }
    }
    else
    {
      objc_msgSend_stringByAppendingPathComponent_(v4, v6, (uint64_t)CFSTR("ClientPackages"), v8);
    }
    v15 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v14 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 134217984;
      v18 = a3;
      _os_log_fault_impl(&dword_18A5C5000, v14, OS_LOG_TYPE_FAULT, "CKPackage (%ld) in bad state. Package needs to be claimed", buf, 0xCu);
    }
    v15 = 0;
  }

  return v15;
}

id sub_18A7E894C(uint64_t a1, void *a2, void *a3, unint64_t a4)
{
  id v6;
  id v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  void *v11;
  NSObject *v13;
  int v14;
  id v15;
  __int16 v16;
  unint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v6 = a2;
  v7 = a3;
  objc_opt_self();
  if (a4 <= 0xC && ((1 << a4) & 0x19E6) != 0)
  {
    sub_18A7E8794((uint64_t)CKPackage, v6, a4);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringByAppendingPathComponent_(v8, v9, (uint64_t)v7, v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v13 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_FAULT))
    {
      v14 = 138412546;
      v15 = v7;
      v16 = 2048;
      v17 = a4;
      _os_log_fault_impl(&dword_18A5C5000, v13, OS_LOG_TYPE_FAULT, "CKPackage (%@, %ld) in bad state. Package needs to be claimed", (uint8_t *)&v14, 0x16u);
    }
    v11 = 0;
  }

  return v11;
}

void sub_18A7E96E0(uint64_t a1, void *a2)
{
  id v4;
  uint64_t v5;
  const char *v6;
  _QWORD v7[4];
  id v8;
  uint64_t v9;

  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = sub_18A7E9760;
  v7[3] = &unk_1E1F62B48;
  v4 = *(id *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v8 = v4;
  v9 = v5;
  objc_msgSend_usingStatementForSQL_performBlock_(a2, v6, (uint64_t)CFSTR("update Packages set archiverInfo = ? where packageID = ?"), (uint64_t)v7);

}

void sub_18A7E9760(uint64_t a1, void *a2)
{
  void *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  id v9;

  v3 = *(void **)(a1 + 32);
  v9 = a2;
  sub_18A7BA7BC((uint64_t)v9, v3, 0);
  v7 = (const char *)objc_msgSend_packageID(*(void **)(a1 + 40), v4, v5, v6);
  sub_18A7BA6E8((uint64_t)v9, v7, 1, v8);
  sub_18A5D6074((uint64_t)v9);

}

void sub_18A7E98B8(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  void *v14;
  const char *v15;
  _QWORD v16[2];
  _QWORD v17[3];

  v17[2] = *MEMORY[0x1E0C80C00];
  v16[0] = CFSTR("packageID");
  v3 = (void *)MEMORY[0x1E0CB37E8];
  v4 = *(void **)(a1 + 32);
  v5 = a2;
  v9 = objc_msgSend_packageID(v4, v6, v7, v8);
  objc_msgSend_numberWithInteger_(v3, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v16[1] = CFSTR("archiverInfo");
  v17[0] = v12;
  v17[1] = *(_QWORD *)(a1 + 40);
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v13, (uint64_t)v17, (uint64_t)v16, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_insertOrReplaceInto_values_(v5, v15, (uint64_t)CFSTR("Packages"), (uint64_t)v14);

}

id sub_18A7E99A0(uint64_t a1, void *a2)
{
  id v2;
  CKSQLite *v3;
  const char *v4;
  void *v5;
  void *v6;
  const char *v7;
  uint64_t v8;

  v2 = a2;
  objc_opt_self();
  v3 = [CKSQLite alloc];
  v5 = (void *)objc_msgSend_initWithPath_schema_(v3, v4, (uint64_t)v2, (uint64_t)CFSTR("create table if not exists Packages (\n    packageID      integer primary key,\n    signature      blob,\n    verificationKey   blob,\n    archiverInfo   blob\n);\ncreate table if not exists Sections (\n    packageID      integer,\n    packageIndex   integer,\n    signature      blob,\n    verificationKey   blob,\n    size           integer,\n    paddedSize           integer,\n    foreign key (packageID) references Packages(packageID),\n    primary key (packageID, packageIndex)\n);\ncreate table if not exists Items (\n    packageID      integer,\n    packageIndex   integer primary key,\n    itemID         integer,\n    fileURL        text,\n    signature      blob,\n    deviceID       integer,\n    fileID         integer,\n    generationID   integer,\n    size           integer,\n    paddedSize     integer,\n    offset         integer,\n    sectionIndex   integer,\n    itemTypeHint   text,\n    foreign key (packageID) references Packages(packageID)\n);\n"));

  v6 = (void *)objc_opt_new();
  objc_msgSend_setDelegate_(v5, v7, (uint64_t)v6, v8);

  return v5;
}

void sub_18A7EA238(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7EA4A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7EA548(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

uint64_t sub_18A7EAE20(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend__itemWithColumnsByName_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
}

uint64_t sub_18A7EB004(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend__itemWithColumnsByName_(*(void **)(a1 + 32), a2, (uint64_t)a2, a4);
}

void sub_18A7EB1E8(_QWORD *a1, void *a2)
{
  uint64_t v3;
  void *v4;
  const char *v5;
  _QWORD v6[5];
  id v7;
  uint64_t v8;

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = sub_18A7EB26C;
  v6[3] = &unk_1E1F65A98;
  v4 = (void *)a1[5];
  v3 = a1[6];
  v6[4] = a1[4];
  v8 = v3;
  v7 = v4;
  objc_msgSend_usingStatementForSQL_performBlock_(a2, v5, (uint64_t)CFSTR("insert into Items (packageID, packageIndex, itemID, fileURL, signature, deviceID, fileID, generationID, size, paddedSize, offset, sectionIndex, itemTypeHint) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"), (uint64_t)v6);

}

void sub_18A7EB26C(uint64_t a1, void *a2)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  const char *v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  const char *v52;
  uint64_t v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  const char *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  const char *v65;
  uint64_t v66;
  const char *v67;
  uint64_t v68;
  uint64_t v69;
  const char *v70;
  uint64_t v71;
  const char *v72;
  uint64_t v73;
  uint64_t v74;
  const char *v75;
  uint64_t v76;
  const char *v77;
  uint64_t v78;
  uint64_t v79;
  const char *v80;
  uint64_t v81;
  const char *v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  const char *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  const char *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  const char *v95;
  id v96;

  v96 = a2;
  v6 = (const char *)objc_msgSend_packageID(*(void **)(a1 + 32), v3, v4, v5);
  sub_18A5F8768((uint64_t)v96, v6, 0, v7);
  sub_18A5F8768((uint64_t)v96, *(const char **)(a1 + 48), 1, v8);
  v12 = (const char *)objc_msgSend_itemID(*(void **)(a1 + 40), v9, v10, v11);
  sub_18A5F8768((uint64_t)v96, v12, 2, v13);
  objc_msgSend_fileURL(*(void **)(a1 + 40), v14, v15, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_absoluteString(v17, v18, v19, v20);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_bindText_atIndex_(v96, v22, (uint64_t)v21, 3);

  objc_msgSend_signature(*(void **)(a1 + 40), v23, v24, v25);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A7BA7BC((uint64_t)v96, v26, 4);

  objc_msgSend_deviceID(*(void **)(a1 + 40), v27, v28, v29);
  v30 = objc_claimAutoreleasedReturnValue();
  if (v30
    && (v34 = (void *)v30,
        objc_msgSend_fileID(*(void **)(a1 + 40), v31, v32, v33),
        v35 = (void *)objc_claimAutoreleasedReturnValue(),
        v35,
        v34,
        v35))
  {
    objc_msgSend_deviceID(*(void **)(a1 + 40), v36, v37, v38);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    v43 = (const char *)objc_msgSend_unsignedLongLongValue(v39, v40, v41, v42);
    sub_18A5F8768((uint64_t)v96, v43, 5, v44);

    objc_msgSend_fileID(*(void **)(a1 + 40), v45, v46, v47);
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    v52 = (const char *)objc_msgSend_unsignedLongLongValue(v48, v49, v50, v51);
    sub_18A5F8768((uint64_t)v96, v52, 6, v53);

  }
  else
  {
    sub_18A7BA9A0((uint64_t)v96, 5);
    sub_18A7BA9A0((uint64_t)v96, 6);
  }
  objc_msgSend_generationID(*(void **)(a1 + 40), v54, v55, v56);
  v57 = (void *)objc_claimAutoreleasedReturnValue();

  if (v57)
  {
    objc_msgSend_generationID(*(void **)(a1 + 40), v58, v59, v60);
    v61 = (void *)objc_claimAutoreleasedReturnValue();
    v65 = (const char *)objc_msgSend_unsignedLongLongValue(v61, v62, v63, v64);
    sub_18A5F8768((uint64_t)v96, v65, 7, v66);

  }
  else
  {
    sub_18A7BA9A0((uint64_t)v96, 7);
  }
  v70 = (const char *)objc_msgSend_size(*(void **)(a1 + 40), v67, v68, v69);
  sub_18A5F8768((uint64_t)v96, v70, 8, v71);
  v75 = (const char *)objc_msgSend_paddedSize(*(void **)(a1 + 40), v72, v73, v74);
  sub_18A5F8768((uint64_t)v96, v75, 9, v76);
  v80 = (const char *)objc_msgSend_offset(*(void **)(a1 + 40), v77, v78, v79);
  sub_18A5F8768((uint64_t)v96, v80, 10, v81);
  v85 = objc_msgSend_sectionIndex(*(void **)(a1 + 40), v82, v83, v84);
  sub_18A5F8768((uint64_t)v96, (const char *)v85, 11, v86);
  objc_msgSend_itemTypeHint(*(void **)(a1 + 40), v87, v88, v89);
  v90 = (void *)objc_claimAutoreleasedReturnValue();

  if (v90)
  {
    objc_msgSend_itemTypeHint(*(void **)(a1 + 40), v91, v92, v93);
    v94 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_bindText_atIndex_(v96, v95, (uint64_t)v94, 12);

  }
  else
  {
    sub_18A7BA9A0((uint64_t)v96, 12);
  }
  sub_18A5D6074((uint64_t)v96);

}

void sub_18A7EB69C(uint64_t a1, void *a2)
{
  id v4;
  __int128 v5;
  uint64_t v6;
  const char *v7;
  _QWORD v8[4];
  id v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = sub_18A7EB730;
  v8[3] = &unk_1E1F65AE8;
  v4 = *(id *)(a1 + 32);
  v5 = *(_OWORD *)(a1 + 64);
  v11 = *(_OWORD *)(a1 + 48);
  v12 = v5;
  v6 = *(_QWORD *)(a1 + 40);
  v9 = v4;
  v10 = v6;
  v13 = *(_QWORD *)(a1 + 80);
  objc_msgSend_usingStatementForSQL_performBlock_(a2, v7, (uint64_t)CFSTR("update Items set signature = ?, size = ?, paddedSize = ?, itemID = ?, sectionIndex = ? where packageID = ? and packageIndex = ?"), (uint64_t)v8);

}

void sub_18A7EB730(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v3 = *(void **)(a1 + 32);
  v14 = a2;
  sub_18A7BA7BC((uint64_t)v14, v3, 0);
  sub_18A5F8768((uint64_t)v14, *(const char **)(a1 + 48), 1, v4);
  sub_18A5F8768((uint64_t)v14, *(const char **)(a1 + 56), 2, v5);
  sub_18A5F8768((uint64_t)v14, *(const char **)(a1 + 64), 3, v6);
  sub_18A7BA6E8((uint64_t)v14, (const char *)*(unsigned int *)(a1 + 72), 4, v7);
  v11 = (const char *)objc_msgSend_packageID(*(void **)(a1 + 40), v8, v9, v10);
  sub_18A7BA6E8((uint64_t)v14, v11, 5, v12);
  sub_18A7BA6E8((uint64_t)v14, (const char *)*(unsigned int *)(a1 + 80), 6, v13);
  sub_18A5D6074((uint64_t)v14);

}

void sub_18A7EB978(uint64_t a1, void *a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  _QWORD v8[4];
  id v9;
  uint64_t v10;
  uint64_t v11;

  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = sub_18A7EB9FC;
  v8[3] = &unk_1E1F65A98;
  v4 = *(id *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v9 = v4;
  v10 = v5;
  v11 = v6;
  objc_msgSend_usingStatementForSQL_performBlock_(a2, v7, (uint64_t)CFSTR("update Items set fileURL = ? where packageID = ? and packageIndex = ?"), (uint64_t)v8);

}

void sub_18A7EB9FC(uint64_t a1, void *a2)
{
  void *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;

  v3 = *(void **)(a1 + 32);
  v18 = a2;
  objc_msgSend_absoluteString(v3, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_bindText_atIndex_(v18, v8, (uint64_t)v7, 0);

  v12 = (const char *)objc_msgSend_packageID(*(void **)(a1 + 40), v9, v10, v11);
  sub_18A7BA6E8((uint64_t)v18, v12, 1, v13);
  sub_18A7BA6E8((uint64_t)v18, (const char *)*(unsigned int *)(a1 + 48), 2, v14);
  sub_18A5D6074((uint64_t)v18);
  sub_18A7BACFC((uint64_t)v18, v15, v16, v17);

}

void sub_18A7EBCA4(uint64_t a1, void *a2)
{
  id v4;
  uint64_t v5;
  const char *v6;
  _QWORD v7[4];
  id v8;
  id v9;
  uint64_t v10;

  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = sub_18A7EBD38;
  v7[3] = &unk_1E1F65B38;
  v8 = *(id *)(a1 + 32);
  v4 = *(id *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v9 = v4;
  v10 = v5;
  objc_msgSend_usingStatementForSQL_performBlock_(a2, v6, (uint64_t)CFSTR("update Items set fileURL = ? where packageID = ? and packageIndex = ?"), (uint64_t)v7);

}

void sub_18A7EBD38(id *a1, void *a2)
{
  id v3;
  id v4;
  const char *v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[128];
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v4 = a1[4];
  v6 = objc_msgSend_countByEnumeratingWithState_objects_count_(v4, v5, (uint64_t)&v33, (uint64_t)v37, 16);
  if (v6)
  {
    v9 = v6;
    v10 = 0;
    v11 = *(_QWORD *)v34;
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v34 != v11)
          objc_enumerationMutation(v4);
        v13 = *(void **)(*((_QWORD *)&v33 + 1) + 8 * v12);
        objc_msgSend_objectAtIndex_(a1[5], v7, v10 + v12, v8, (_QWORD)v33);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        sub_18A7BACFC((uint64_t)v3, v15, v16, v17);
        objc_msgSend_absoluteString(v14, v18, v19, v20);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_bindText_atIndex_(v3, v22, (uint64_t)v21, 0);

        v26 = (const char *)objc_msgSend_packageID(a1[6], v23, v24, v25);
        sub_18A7BA6E8((uint64_t)v3, v26, 1, v27);
        v31 = (const char *)objc_msgSend_unsignedIntegerValue(v13, v28, v29, v30);
        sub_18A7BA6E8((uint64_t)v3, v31, 2, v32);
        sub_18A5D6074((uint64_t)v3);

        ++v12;
      }
      while (v9 != v12);
      v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(v4, v7, (uint64_t)&v33, (uint64_t)v37, 16);
      v10 += v12;
    }
    while (v9);
  }

}

uint64_t sub_18A7EC790(uint64_t a1, void *a2)
{
  return objc_msgSend_insertOrReplaceInto_values_(a2, (const char *)a2, (uint64_t)CFSTR("Sections"), *(_QWORD *)(a1 + 32));
}

uint64_t sub_18A7ECBE0(uint64_t a1, void *a2)
{
  return objc_msgSend_insertOrReplaceInto_values_(a2, (const char *)a2, (uint64_t)CFSTR("Sections"), *(_QWORD *)(a1 + 32));
}

void sub_18A7ECCC0(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  id v8;
  id v9;

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  v9 = (id)objc_claimAutoreleasedReturnValue();
  if (v9)
  {
    objc_msgSend_sqlite(*(void **)(a1 + 32), v2, v3, v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (id)objc_msgSend_handleError_(v5, v6, (uint64_t)v9, v7);

  }
}

void sub_18A7ECEDC(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  id v5;
  const char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  const char *v11;
  _QWORD v12[4];
  id v13;
  uint64_t v14;

  v3 = (void *)MEMORY[0x1E0CB3940];
  v4 = *(_QWORD *)(a1 + 32);
  v5 = a2;
  objc_msgSend_stringWithFormat_(v3, v6, (uint64_t)CFSTR("update Packages set %@ = ? where packageID = ?"), v7, v4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = sub_18A7ECF94;
  v12[3] = &unk_1E1F62B48;
  v9 = *(id *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v13 = v9;
  v14 = v10;
  objc_msgSend_usingStatementForSQL_performBlock_(v5, v11, (uint64_t)v8, (uint64_t)v12);

}

void sub_18A7ECF94(uint64_t a1, void *a2)
{
  void *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  id v9;

  v3 = *(void **)(a1 + 32);
  v9 = a2;
  sub_18A7BA7BC((uint64_t)v9, v3, 0);
  v7 = (const char *)objc_msgSend_packageID(*(void **)(a1 + 40), v4, v5, v6);
  sub_18A7BA6E8((uint64_t)v9, v7, 1, v8);
  sub_18A5D6074((uint64_t)v9);

}

uint64_t sub_18A7EDC84(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  NSObject *v6;
  int v8;
  id v9;
  __int16 v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v4 = a2;
  v5 = a3;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v6 = ck_log_facility_ck;
  if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
  {
    v8 = 138543618;
    v9 = v4;
    v10 = 2112;
    v11 = v5;
    _os_log_error_impl(&dword_18A5C5000, v6, OS_LOG_TYPE_ERROR, "Failed to enumerate package URL: %{public}@, error: %@. Ignoring.", (uint8_t *)&v8, 0x16u);
  }

  return 1;
}

id sub_18A7EDD88(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  const char *v10;
  void *v11;

  v2 = a2;
  objc_msgSend_objectForKeyedSubscript_(v2, v3, (uint64_t)CFSTR("packageID"), v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v2, v6, (uint64_t)CFSTR("archiverInfo"), v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v11 = v9;
  if (v5)
    objc_msgSend_setObject_forKey_(v9, v10, (uint64_t)v5, (uint64_t)CFSTR("packageID"));
  if (v8)
    objc_msgSend_setObject_forKey_(v11, v10, (uint64_t)v8, (uint64_t)CFSTR("archiverInfo"));

  return v11;
}

void sub_18A7EE294(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 504) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 504);
    *(_QWORD *)(v8 + 504) = v7;

  }
}

void sub_18A7EE424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A7EE43C(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A7EE464(uint64_t a1)
{

}

void sub_18A7EE46C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 504));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7EF19C(void *a1, uint64_t a2, void *a3)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  id v12;

  v12 = a3;
  if (a1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend_getValue_(v12, v5, a2, v7);
    }
    else
    {
      v8 = (void *)MEMORY[0x1E0C99DA0];
      v9 = *MEMORY[0x1E0C99768];
      objc_msgSend_name(a1, v5, v6, v7);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_raise_format_(v8, v11, v9, (uint64_t)CFSTR("Unsupported unboxing type: %@"), v10);

    }
  }

}

void sub_18A7EF5C8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 512) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 512);
    *(_QWORD *)(v8 + 512) = v7;

  }
}

void sub_18A7EF758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A7EF770(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A7EF798(uint64_t a1)
{

}

void sub_18A7EF7A0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 512));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7EF8FC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void sub_18A7EFA8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A7EFAA4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A7F1540(uint64_t a1, void *a2)
{
  if (a1)
    objc_storeStrong((id *)(a1 + 40), a2);
}

void sub_18A7F1550(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  _QWORD *v11;
  const char *v12;
  uint64_t v13;
  void *v14;
  BOOL v15;
  const char *v16;
  uint64_t v17;
  NSObject *v18;
  int v19;
  const __CFString *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  if ((CKCurrentProcessIsDaemon() & 1) == 0)
  {
    objc_msgSend_mainBundle(MEMORY[0x1E0CB34D0], v2, v3, v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_bundleIdentifier(v5, v6, v7, v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    v10 = *(_QWORD **)(a1 + 32);
    if (v10)
      v10 = (_QWORD *)v10[2];
    v11 = v10;
    v14 = v11;
    if (v9)
      v15 = v11 == 0;
    else
      v15 = 1;
    if (!v15
      && (objc_msgSend_isEqual_(v9, v12, (uint64_t)v11, v13) & 1) == 0
      && objc_msgSend_hasSuffix_(v9, v16, (uint64_t)CFSTR(".xctrunner"), v17))
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v18 = ck_log_facility_notification_listener;
      if (os_log_type_enabled((os_log_t)ck_log_facility_notification_listener, OS_LOG_TYPE_FAULT))
      {
        v19 = 138412290;
        v20 = CFSTR("application-identifier");
        _os_log_fault_impl(&dword_18A5C5000, v18, OS_LOG_TYPE_FAULT, "BUG IN CLIENT OF CLOUDKIT: Trying to listen for push notifications in an XCTestRunner, but the bundle identifier does not match your entitlements. Please append '.xctrunner' to your %@ entitlement, otherwise you may not properly receive push notifications.", (uint8_t *)&v19, 0xCu);
      }
    }

  }
}

void sub_18A7F18CC()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.cloudkit", "Telemetry");
  v1 = (void *)qword_1ECD96EF8;
  qword_1ECD96EF8 = (uint64_t)v0;

}

void sub_18A7F1ED4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7F1F6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F20B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18A7F2190(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A7F2214(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A7F22B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7F240C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  objc_sync_exit(v3);
  objc_sync_exit(v2);

  _Unwind_Resume(a1);
}

void sub_18A7F252C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  objc_sync_exit(v7);

  _Unwind_Resume(a1);
}

void sub_18A7F255C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v12 = a2;
  v5 = a3;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) ^= objc_msgSend_hash(v12, v6, v7, v8);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) ^= objc_msgSend_hash(v5, v9, v10, v11);

}

void sub_18A7F25D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18A7F2668(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7F2754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  objc_sync_exit(v7);

  _Unwind_Resume(a1);
}

void sub_18A7F2784(uint64_t a1, uint64_t a2, void *a3)
{
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v7 = a3;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += objc_msgSend_count(v7, v4, v5, v6);

}

void sub_18A7F27CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A7F2864(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  objc_sync_exit(v2);
  _Unwind_Resume(a1);
}

void sub_18A7F2940(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  objc_sync_exit(v2);
  _Unwind_Resume(a1);
}

void sub_18A7F2A68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  objc_sync_exit(v14);
  _Unwind_Resume(a1);
}

void sub_18A7F2AC4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  id v17;

  v17 = a2;
  v5 = a3;
  if (objc_msgSend_containsObject_(*(void **)(a1 + 32), v6, (uint64_t)v17, v7))
  {
    v11 = (void *)objc_msgSend_mutableCopy(v5, v8, v9, v10);
    objc_msgSend_clockValues(*(void **)(a1 + 40), v12, v13, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v15, v16, (uint64_t)v11, (uint64_t)v17);

  }
}

void sub_18A7F2B4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v12;

  _Unwind_Resume(a1);
}

void sub_18A7F2C70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  objc_sync_exit(v14);
  _Unwind_Resume(a1);
}

void sub_18A7F2CCC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  int isEqual;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  id v22;

  v22 = a2;
  v5 = a3;
  objc_msgSend_modifier(v22, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  isEqual = objc_msgSend_isEqual_(v9, v10, *(_QWORD *)(a1 + 32), v11);

  if (isEqual)
  {
    v16 = (void *)objc_msgSend_mutableCopy(v5, v13, v14, v15);
    objc_msgSend_clockValues(*(void **)(a1 + 40), v17, v18, v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v20, v21, (uint64_t)v16, (uint64_t)v22);

  }
}

void sub_18A7F2D68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v11;

  _Unwind_Resume(a1);
}

void sub_18A7F2E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

id sub_18A7F2E2C(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v2 = a2;
  if (objc_msgSend_conformsToProtocol_(v2, v3, (uint64_t)&unk_1EDFA4460, v4))
    v8 = objc_msgSend_mutableCopy(v2, v5, v6, v7);
  else
    v8 = objc_msgSend_copy(v2, v5, v6, v7);
  v9 = (void *)v8;

  return v9;
}

void sub_18A7F2E7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7F2EF8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7F2FFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  objc_sync_exit(v15);
  objc_sync_exit(v14);

  _Unwind_Resume(a1);
}

void sub_18A7F3034(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  const char *v29;
  uint64_t v30;
  id obj;
  _QWORD v32[4];
  id v33;
  id v34;
  id v35;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  obj = v5;
  objc_sync_enter(obj);
  v8 = v6;
  objc_sync_enter(v8);
  if (objc_msgSend_timestampCount(obj, v9, v10, v11) || objc_msgSend_timestampCount(v8, v12, v13, v14))
  {
    objc_msgSend_allSiteIdentifiers(obj, v12, v13, v14, obj);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_allSiteIdentifiers(v8, v16, v17, v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = (void *)objc_msgSend_mutableCopy(v15, v20, v21, v22);
    v26 = v23;
    if (v19)
      objc_msgSend_unionSet_(v23, v24, (uint64_t)v19, v25);
    v32[0] = MEMORY[0x1E0C809B0];
    v32[1] = 3221225472;
    v32[2] = sub_18A7FCF68;
    v32[3] = &unk_1E1F66178;
    v35 = v7;
    v27 = v15;
    v33 = v27;
    v28 = v19;
    v34 = v28;
    objc_msgSend_enumerateObjectsUsingBlock_(v26, v29, (uint64_t)v32, v30);

  }
  objc_sync_exit(v8);

  objc_sync_exit(obj);
}

void sub_18A7F319C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id obj, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  objc_sync_exit(v17);
  objc_sync_exit(obj);

  _Unwind_Resume(a1);
}

void sub_18A7F321C(uint64_t a1, void *a2, int a3, int a4)
{
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  id v31;

  v31 = a2;
  if (a3 && a4)
  {
    objc_msgSend_clockValues(*(void **)(a1 + 32), v7, v8, v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v10, v11, (uint64_t)v31, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend_clockValues(*(void **)(a1 + 40), v14, v15, v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v17, v18, (uint64_t)v31, v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_removeIndexes_(v13, v21, (uint64_t)v20, v22);

    if (!objc_msgSend_count(v13, v23, v24, v25))
    {
      objc_msgSend_clockValues(*(void **)(a1 + 32), v26, v27, v28);
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setObject_forKeyedSubscript_(v29, v30, 0, (uint64_t)v31);

    }
  }

}

void sub_18A7F32EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18A7F3420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  objc_sync_exit(v15);
  objc_sync_exit(v14);

  _Unwind_Resume(a1);
}

void sub_18A7F3464(uint64_t a1, void *a2, int a3, int a4)
{
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  const char *v33;
  id v34;

  v7 = a2;
  if (a3)
  {
    v34 = v7;
    v11 = *(void **)(a1 + 32);
    if (a4)
    {
      objc_msgSend_clockValues(v11, v8, v9, v10);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v12, v13, (uint64_t)v34, v14);
      v15 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend_clockValues(*(void **)(a1 + 40), v16, v17, v18);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v19, v20, (uint64_t)v34, v21);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_CKIntersectIndexes_(v15, v23, (uint64_t)v22, v24);

      if (!objc_msgSend_count(v15, v25, v26, v27))
      {
        objc_msgSend_clockValues(*(void **)(a1 + 32), v28, v29, v30);
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_setObject_forKeyedSubscript_(v31, v32, 0, (uint64_t)v34);

      }
    }
    else
    {
      objc_msgSend_clockValues(v11, v8, v9, v10);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setObject_forKeyedSubscript_(v15, v33, 0, (uint64_t)v34);
    }

    v7 = v34;
  }

}

void sub_18A7F3550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18A7F361C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18A7F3634(uint64_t a1, void *a2, int a3, int a4)
{
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  id v32;

  v32 = a2;
  if (!a3)
  {
    objc_msgSend_clockValues(*(void **)(a1 + 40), v7, v8, v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v10, v23, (uint64_t)v32, v24);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = (void *)objc_msgSend_mutableCopy(v13, v25, v26, v27);
    objc_msgSend_clockValues(*(void **)(a1 + 32), v28, v29, v30);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v20, v31, (uint64_t)v17, (uint64_t)v32);
    goto LABEL_5;
  }
  if (a4)
  {
    objc_msgSend_clockValues(*(void **)(a1 + 32), v7, v8, v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v10, v11, (uint64_t)v32, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_clockValues(*(void **)(a1 + 40), v14, v15, v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v17, v18, (uint64_t)v32, v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_addIndexes_(v13, v21, (uint64_t)v20, v22);
LABEL_5:

  }
}

void sub_18A7F3720(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  v14 = v13;

  _Unwind_Resume(a1);
}

void sub_18A7F3888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  v14 = v12;

  objc_sync_exit(v11);
  _Unwind_Resume(a1);
}

void sub_18A7F39B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  v14 = v13;

  objc_sync_exit(v11);
  _Unwind_Resume(a1);
}

void sub_18A7F3ABC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7F3B54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F3C9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18A7F3D78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A7F3DFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A7F3E9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7F3FF8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  objc_sync_exit(v3);
  objc_sync_exit(v2);

  _Unwind_Resume(a1);
}

void sub_18A7F4118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  objc_sync_exit(v7);

  _Unwind_Resume(a1);
}

void sub_18A7F4148(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v12 = a2;
  v5 = a3;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) ^= objc_msgSend_hash(v12, v6, v7, v8);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) ^= objc_msgSend_hash(v5, v9, v10, v11);

}

void sub_18A7F41C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18A7F428C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  objc_sync_exit(v14);
  _Unwind_Resume(a1);
}

void sub_18A7F42C4(uint64_t a1, const char *a2, void *a3, uint64_t a4)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  id v7;

  v4 = *(void **)(a1 + 32);
  objc_msgSend_allSiteIdentifiers(a3, a2, (uint64_t)a3, a4);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_unionSet_(v4, v5, (uint64_t)v7, v6);

}

void sub_18A7F4308(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A7F4448(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F4540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  objc_sync_exit(v7);

  _Unwind_Resume(a1);
}

void sub_18A7F4570(uint64_t a1, uint64_t a2, void *a3)
{
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v7 = a3;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += objc_msgSend_timestampCount(v7, v4, v5, v6);

}

void sub_18A7F45B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A7F46B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  void *v9;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  objc_sync_exit(v7);

  _Unwind_Resume(a1);
}

void sub_18A7F46EC(uint64_t a1, uint64_t a2, void *a3)
{
  const char *v4;
  uint64_t v5;
  id v6;

  v6 = a3;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) += objc_msgSend_timestampCountForSiteIdentifier_(v6, v4, *(_QWORD *)(a1 + 32), v5);

}

void sub_18A7F4738(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A7F48FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;

  objc_sync_exit(v11);
  _Unwind_Resume(a1);
}

void sub_18A7F4A60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  objc_sync_exit(v14);
  _Unwind_Resume(a1);
}

void sub_18A7F4AA4(uint64_t a1, const char *a2, void *a3, uint64_t a4)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  id v7;

  v4 = *(void **)(a1 + 32);
  objc_msgSend_clockValuesForSiteIdentifier_(a3, a2, *(_QWORD *)(a1 + 40), a4);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addIndexes_(v4, v5, (uint64_t)v7, v6);

}

void sub_18A7F4AEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A7F4D54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, id obj, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  void *v32;
  void *v33;
  uint64_t v34;

  _Block_object_dispose(&a24, 8);
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose((const void *)(v34 - 152), 8);

  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

__n128 sub_18A7F4DF0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = a2[3];
  a1[3] = result;
  return result;
}

void sub_18A7F4E00(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  id v12;
  _QWORD v13[4];
  id v14;
  __int128 v15;
  uint64_t v16;

  v5 = a2;
  objc_msgSend_clockValuesForSiteIdentifier_(a3, v6, *(_QWORD *)(a1 + 32), v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = sub_18A7F4EEC;
  v13[3] = &unk_1E1F65E40;
  v15 = *(_OWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 56);
  v12 = v5;
  v14 = v12;
  objc_msgSend_enumerateRangesInRange_options_usingBlock_(v8, v11, v10, v9, 0, v13);

}

void sub_18A7F4EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

uint64_t sub_18A7F4EEC(uint64_t result, const char *a2, uint64_t a3, _BYTE *a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7 = (_QWORD *)result;
  v8 = *(_QWORD *)(*(_QWORD *)(result + 40) + 8);
  if (*(_BYTE *)(v8 + 24) || (unint64_t)a2 < *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 48) + 8) + 48))
  {
    result = objc_msgSend_unsignedShortValue(*(void **)(result + 32), a2, a3, (uint64_t)a4);
    *(_WORD *)(*(_QWORD *)(v7[7] + 8) + 24) = result;
    v9 = *(_QWORD *)(v7[6] + 8);
    *(_QWORD *)(v9 + 48) = a2;
    *(_QWORD *)(v9 + 56) = a3;
    v8 = *(_QWORD *)(v7[5] + 8);
  }
  *(_BYTE *)(v8 + 24) = 0;
  *a4 = 1;
  return result;
}

void sub_18A7F5134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;
  void *v10;

  objc_sync_exit(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_18A7F5194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
    *a5 = 1;
  return result;
}

void sub_18A7F52B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  objc_sync_exit(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_18A7F5304(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_unionVector_(*(void **)(a1 + 32), a2, a3, a4);
}

void sub_18A7F53FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  objc_sync_exit(v14);
  _Unwind_Resume(a1);
}

void sub_18A7F5458(uint64_t a1, void *a2, void *a3)
{
  const char *v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  id v20;

  v20 = a2;
  objc_msgSend_vectorFilteredBySiteIdentifiers_(a3, v5, *(_QWORD *)(a1 + 32), v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_timestampCount(v7, v8, v9, v10))
  {
    v14 = (void *)objc_msgSend_mutableCopy(v7, v11, v12, v13);
    objc_msgSend_mutableAttributeToSparseVector(*(void **)(a1 + 40), v15, v16, v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v18, v19, (uint64_t)v14, (uint64_t)v20);

  }
}

void sub_18A7F54E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v12;

  _Unwind_Resume(a1);
}

void sub_18A7F5610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  objc_sync_exit(v14);
  _Unwind_Resume(a1);
}

void sub_18A7F566C(uint64_t a1, void *a2, void *a3)
{
  const char *v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  id v20;

  v20 = a2;
  objc_msgSend_vectorFilteredByModifier_(a3, v5, *(_QWORD *)(a1 + 32), v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_timestampCount(v7, v8, v9, v10))
  {
    v14 = (void *)objc_msgSend_mutableCopy(v7, v11, v12, v13);
    objc_msgSend_mutableAttributeToSparseVector(*(void **)(a1 + 40), v15, v16, v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v18, v19, (uint64_t)v14, (uint64_t)v20);

  }
}

void sub_18A7F56F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v12;

  _Unwind_Resume(a1);
}

void sub_18A7F583C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v9 = v6;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7F599C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  objc_sync_exit(v14);
  _Unwind_Resume(a1);
}

void sub_18A7F59F8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  id v33;

  v33 = a2;
  v5 = a3;
  v6 = *(_QWORD *)(a1 + 40);
  v10 = objc_msgSend_shortValue(v33, v7, v8, v9);
  v11 = (*(uint64_t (**)(uint64_t, _QWORD))(v6 + 16))(v6, v10);
  objc_msgSend_mutableAttributeToSparseVector(*(void **)(a1 + 32), v12, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v16, v11, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v15, v19, (uint64_t)v18, v20);
  v21 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v21)
  {
    v24 = objc_opt_new();
    objc_msgSend_mutableAttributeToSparseVector(*(void **)(a1 + 32), v25, v26, v27);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_numberWithUnsignedShort_(MEMORY[0x1E0CB37E8], v29, v11, v30);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v28, v32, v24, (uint64_t)v31);

    v21 = (void *)v24;
  }
  objc_msgSend_unionVector_(v21, v22, (uint64_t)v5, v23);

}

void sub_18A7F5B1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

id sub_18A7F5B7C(void *a1, int a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  id v7;
  id v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  const char *v25;
  void *v26;
  id v27;
  const char *v28;
  uint64_t v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  void *v42;
  void *v43;
  const char *v44;
  uint64_t v45;
  const char *v46;
  uint64_t v47;
  const char *v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  const char *v53;
  const char *v54;
  uint64_t v55;
  const char *v56;
  uint64_t v57;
  const char *v58;
  const char *v59;
  uint64_t v60;
  void *v62;
  void *v63;
  id v64;
  id obj;
  id v66;
  void *v67;
  id v68;
  _QWORD v69[4];
  id v70;
  uint64_t v71;
  id v72;
  _QWORD *v73;
  _QWORD v74[3];
  char v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  _QWORD v80[4];
  id v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  _BYTE v86[128];
  _BYTE v87[128];
  uint64_t v88;

  v88 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v66 = a3;
  v8 = v7;
  objc_sync_enter(v8);
  v68 = v8;
  objc_msgSend_allSiteIdentifiers(v8, v9, v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_allObjects(v12, v13, v14, v15);
  v63 = (void *)objc_claimAutoreleasedReturnValue();

  v67 = (void *)objc_opt_new();
  v84 = 0u;
  v85 = 0u;
  v82 = 0u;
  v83 = 0u;
  obj = v63;
  v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v16, (uint64_t)&v82, (uint64_t)v87, 16);
  if (v20)
  {
    v21 = *(_QWORD *)v83;
    do
    {
      v22 = 0;
      do
      {
        if (*(_QWORD *)v83 != v21)
          objc_enumerationMutation(obj);
        v23 = *(_QWORD *)(*((_QWORD *)&v82 + 1) + 8 * v22);
        if (a2)
        {
          objc_msgSend_descriptionWithStringSiteIdentifiers(*(void **)(*((_QWORD *)&v82 + 1) + 8 * v22), v17, v18, v19);
          v4 = objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKeyedSubscript_(v67, v24, v4, v23);
        }
        else
        {
          objc_msgSend_description(*(void **)(*((_QWORD *)&v82 + 1) + 8 * v22), v17, v18, v19);
          v3 = objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKeyedSubscript_(v67, v25, v3, v23);
        }
        if (a2)
          v26 = (void *)v4;
        else
          v26 = (void *)v3;

        ++v22;
      }
      while (v20 != v22);
      v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v17, (uint64_t)&v82, (uint64_t)v87, 16);
    }
    while (v20);
  }

  v80[0] = MEMORY[0x1E0C809B0];
  v80[1] = 3221225472;
  v80[2] = sub_18A7FCFEC;
  v80[3] = &unk_1E1F661A0;
  v27 = v67;
  v81 = v27;
  objc_msgSend_sortedArrayUsingComparator_(obj, v28, (uint64_t)v80, v29);
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = (void *)objc_opt_new();
  objc_msgSend_appendFormat_(v30, v31, (uint64_t)CFSTR("["), v32);
  v78 = 0u;
  v79 = 0u;
  v76 = 0u;
  v77 = 0u;
  v64 = v62;
  v34 = objc_msgSend_countByEnumeratingWithState_objects_count_(v64, v33, (uint64_t)&v76, (uint64_t)v86, 16);
  if (v34)
  {
    v35 = *(_QWORD *)v77;
    v36 = 1;
    do
    {
      v37 = 0;
      do
      {
        if (*(_QWORD *)v77 != v35)
          objc_enumerationMutation(v64);
        v38 = *(_QWORD *)(*((_QWORD *)&v76 + 1) + 8 * v37);
        v39 = (void *)objc_opt_new();
        v42 = v39;
        if ((v36 & 1) == 0)
          objc_msgSend_appendFormat_(v39, v40, (uint64_t)CFSTR("|"), v41);
        objc_msgSend_objectForKeyedSubscript_(v27, v40, v38, v41);
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_appendFormat_(v42, v44, (uint64_t)CFSTR("%@:"), v45, v43);

        if (objc_msgSend_timestampCountForSiteIdentifier_(v68, v46, v38, v47))
        {
          v50 = (void *)objc_opt_new();
          v74[0] = 0;
          v74[1] = v74;
          v74[2] = 0x2020000000;
          v75 = 1;
          v69[0] = MEMORY[0x1E0C809B0];
          v69[1] = 3221225472;
          v69[2] = sub_18A7FD090;
          v69[3] = &unk_1E1F661C8;
          v73 = v74;
          v51 = v50;
          v70 = v51;
          v52 = v66;
          v71 = v38;
          v72 = v52;
          objc_msgSend_enumerateClockValuesForSiteIdentifier_usingBlock_(v68, v53, v38, (uint64_t)v69);
          objc_msgSend_appendString_(v42, v54, (uint64_t)v51, v55);

          _Block_object_dispose(v74, 8);
        }
        else
        {
          objc_msgSend_appendFormat_(v42, v48, (uint64_t)CFSTR("∅"), v49);
        }
        objc_msgSend_appendString_(v30, v56, (uint64_t)v42, v57);

        v36 = 0;
        ++v37;
      }
      while (v34 != v37);
      v34 = objc_msgSend_countByEnumeratingWithState_objects_count_(v64, v58, (uint64_t)&v76, (uint64_t)v86, 16);
      v36 = 0;
    }
    while (v34);
  }

  objc_msgSend_appendFormat_(v30, v59, (uint64_t)CFSTR("]"), v60);
  objc_sync_exit(v68);

  return v30;
}

void sub_18A7F5F90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, void *a14, void *a15, id obj, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42)
{
  void *v42;

  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

id sub_18A7F60B0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], a2, (uint64_t)CFSTR("(%d)"), a4, a5);
  return (id)objc_claimAutoreleasedReturnValue();
}

void sub_18A7F6168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

id sub_18A7F6184(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v2 = a2;
  if (objc_msgSend_conformsToProtocol_(v2, v3, (uint64_t)&unk_1EDFA4460, v4))
    v8 = objc_msgSend_mutableCopy(v2, v5, v6, v7);
  else
    v8 = objc_msgSend_copy(v2, v5, v6, v7);
  v9 = (void *)v8;

  return v9;
}

void sub_18A7F61D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7F6250(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7F62E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7F63B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v12;

  objc_sync_exit(obj);
  objc_sync_exit(v10);

  _Unwind_Resume(a1);
}

void sub_18A7F64D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  void *v15;

  objc_sync_exit(v14);

  _Unwind_Resume(a1);
}

uint64_t sub_18A7F6518(uint64_t a1, const char *a2, void *a3, uint64_t a4)
{
  return objc_msgSend_intersectVector_(a3, a2, *(_QWORD *)(a1 + 32), a4);
}

void sub_18A7F65FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  void *v15;

  objc_sync_exit(v14);

  _Unwind_Resume(a1);
}

uint64_t sub_18A7F6644(uint64_t a1, const char *a2, void *a3, uint64_t a4)
{
  return objc_msgSend_minusVector_(a3, a2, *(_QWORD *)(a1 + 32), a4);
}

void sub_18A7F6700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  v14 = v13;

  objc_sync_exit(v10);
  _Unwind_Resume(a1);
}

void sub_18A7F681C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  void *v15;

  objc_sync_exit(v14);

  _Unwind_Resume(a1);
}

void sub_18A7F6864(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  id v18;

  v18 = a2;
  v5 = a3;
  objc_msgSend_mutableAttributeToSparseVector(*(void **)(a1 + 32), v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v9, v10, (uint64_t)v18, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (v12)
  {
    objc_msgSend_intersectVector_(v5, v13, (uint64_t)v12, v14);
  }
  else
  {
    v15 = (void *)objc_opt_new();
    objc_msgSend_intersectVector_(v5, v16, (uint64_t)v15, v17);

  }
}

void sub_18A7F6908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v12;

  _Unwind_Resume(a1);
}

void sub_18A7F6AF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  objc_sync_exit(v16);
  _Unwind_Resume(a1);
}

uint64_t sub_18A7F6B7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1E0DE7D20](a3, sel_removeClockValuesInIndexSet_forSiteIdentifier_, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

void sub_18A7F6C64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id obj)
{
  void *v9;

  objc_sync_exit(v9);

  _Unwind_Resume(a1);
}

void sub_18A7F6CB0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  id v22;

  v22 = a2;
  v5 = a3;
  objc_msgSend_mutableAttributeToSparseVector(*(void **)(a1 + 32), v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v9, v10, (uint64_t)v22, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (v12)
  {
    objc_msgSend_unionVector_(v12, v13, (uint64_t)v5, v15);
  }
  else
  {
    v16 = (void *)objc_msgSend_mutableCopy(v5, v13, v14, v15);
    objc_msgSend_mutableAttributeToSparseVector(*(void **)(a1 + 32), v17, v18, v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v20, v21, (uint64_t)v16, (uint64_t)v22);

  }
}

void sub_18A7F6D64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  v14 = v12;

  _Unwind_Resume(a1);
}

void sub_18A7F6EA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  void *v20;
  void *v21;
  void *v22;

  v22 = v21;

  _Block_object_dispose(&a15, 8);
  objc_sync_exit(v20);

  _Unwind_Resume(a1);
}

uint64_t sub_18A7F6EE8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18A7F6EF8(uint64_t a1)
{

}

void sub_18A7F6F00(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  id v17;

  v17 = a2;
  v5 = a3;
  if (!objc_msgSend_timestampCount(v5, v6, v7, v8))
  {
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    v10 = *(void **)(v9 + 40);
    if (v10)
    {
      v11 = v10;
      v12 = *(void **)(v9 + 40);
      *(_QWORD *)(v9 + 40) = v11;
    }
    else
    {
      v13 = objc_opt_new();
      v14 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
      v12 = *(void **)(v14 + 40);
      *(_QWORD *)(v14 + 40) = v13;
    }

    objc_msgSend_addObject_(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), v15, (uint64_t)v17, v16);
  }

}

void sub_18A7F6FA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18A7F706C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7F7104(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F7344(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18A7F7458(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A7F74D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A7F7560(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F76B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  objc_sync_exit(v4);
  objc_sync_exit(v3);

  _Unwind_Resume(a1);
}

void sub_18A7F7760(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7F77A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7F77EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7F7850(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F78C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F7934(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t CKDistributedTimestampVectorClockTypeFromTuple(unsigned int a1)
{
  return a1 >> 8;
}

void sub_18A7F79D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F7A8C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F7B14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F7BDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

uint64_t sub_18A7F7C08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_18A7F7CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_18A7F7CD4(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_18A7F7D44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A7F7DD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_18A7F7E80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_18A7F7F28(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_18A7F7FBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7F8074(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_18A7F8084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  void *v7;
  const char *v8;
  uint64_t v9;
  void *v10;
  int v11;
  __CFString *v12;
  const char *v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;

  v7 = (void *)objc_opt_new();
  v10 = v7;
  v11 = *(unsigned __int8 *)(a1 + 32);
  if ((a5 & 0xFF00) != 0x200 || *(_BYTE *)(a1 + 32))
  {
    if ((a5 & 0xFF00) != 0x200)
      return v10;
  }
  else
  {
    objc_msgSend_appendString_(v7, v8, (uint64_t)CFSTR("("), v9);
    v11 = *(unsigned __int8 *)(a1 + 32);
  }
  if (v11)
  {
    objc_msgSend_CKSuperscriptForLetter_(MEMORY[0x1E0CB3940], v8, 76, v9);
    v12 = (__CFString *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_appendString_(v10, v13, (uint64_t)v12, v14);
  }
  else
  {
    v12 = CFSTR("L");
    objc_msgSend_appendString_(v10, v8, (uint64_t)CFSTR("L"), v9);
  }
  if (v11)

  if (!*(_BYTE *)(a1 + 32))
    objc_msgSend_appendString_(v10, v15, (uint64_t)CFSTR(")"), v16);
  return v10;
}

void sub_18A7F8158(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  int v3;

  if (v3)

  _Unwind_Resume(a1);
}

void sub_18A7F81E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A7F8250(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F82E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18A7F8388(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18A7F84B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  objc_sync_exit(v10);
  _Unwind_Resume(a1);
}

void sub_18A7F85F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  objc_sync_exit(v11);
  _Unwind_Resume(a1);
}

uint64_t CKDistributedTimestampVectorTuple(int a1, int a2)
{
  return __rev16(a1 | (a2 << 8));
}

void sub_18A7F86FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7F8794(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F8858(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v5;

  _Unwind_Resume(a1);
}

void sub_18A7F8AB4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18A7F8BC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A7F8C44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A7F8CD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F8E28(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  objc_sync_exit(v4);
  objc_sync_exit(v3);

  _Unwind_Resume(a1);
}

void sub_18A7F8ED0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7F8F18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7F8F5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7F8FC0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F9030(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F90A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F9114(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t CKDistributedTimestampVectorAtomStateFromTuple(uint64_t result)
{
  return result;
}

void sub_18A7F91B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F926C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F92F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7F936C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F9434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

uint64_t sub_18A7F9460(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_18A7F9514(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_18A7F9538(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_18A7F95AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A7F9600(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7F9688(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_18A7F9738(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_18A7F97E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_18A7F987C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_18A7F9910(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7F99AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

uint64_t sub_18A7F99E8(uint64_t a1, __int16 a2)
{
  return a2 & 0xFF00;
}

void sub_18A7F9A78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_18A7F9A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  void *v7;
  const char *v8;
  uint64_t v9;
  void *v10;
  int v11;
  __CFString *v12;
  const char *v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;

  v7 = (void *)objc_opt_new();
  v10 = v7;
  if (!*(_BYTE *)(a1 + 32))
    objc_msgSend_appendString_(v7, v8, (uint64_t)CFSTR("("), v9);
  if ((a5 & 0xFF00) == 0x200)
  {
    v11 = *(unsigned __int8 *)(a1 + 32);
    if (*(_BYTE *)(a1 + 32))
    {
      objc_msgSend_CKSuperscriptForLetter_(MEMORY[0x1E0CB3940], v8, 76, v9);
      v12 = (__CFString *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_appendString_(v10, v13, (uint64_t)v12, v14);
    }
    else
    {
      v12 = CFSTR("L");
      objc_msgSend_appendString_(v10, v8, (uint64_t)CFSTR("L"), v9);
    }
    if (v11)

  }
  if (*(_BYTE *)(a1 + 32))
    objc_msgSend_CKSuperscriptForNumber_(MEMORY[0x1E0CB3940], v8, a5, v9);
  else
    objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v8, (uint64_t)CFSTR("%lu"), v9, a5);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_appendString_(v10, v16, (uint64_t)v15, v17);

  if (!*(_BYTE *)(a1 + 32))
    objc_msgSend_appendString_(v10, v18, (uint64_t)CFSTR(")"), v19);
  return v10;
}

void sub_18A7F9B9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7F9C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18A7F9CA4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7F9D38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18A7F9DDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18A7FA120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id obj, id a10, uint64_t a11, uint64_t a12)
{
  void *v12;
  void *v13;

  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

uint64_t sub_18A7FA250(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;

  v4 = a2;
  v5 = a3;
  v9 = (unsigned __int16)objc_msgSend_shortValue(v4, v6, v7, v8) >> 8;
  v13 = (unsigned __int16)objc_msgSend_shortValue(v5, v10, v11, v12) >> 8;
  v17 = objc_msgSend_shortValue(v4, v14, v15, v16);
  v21 = objc_msgSend_shortValue(v5, v18, v19, v20);
  v22 = v9 > v13;
  if (v9 < v13)
    v22 = -1;
  if (v17 > v21)
    v22 = 1;
  if (v17 >= v21)
    v23 = v22;
  else
    v23 = -1;

  return v23;
}

void sub_18A7FA2FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7FA64C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj, id a11, uint64_t a12, void *a13, uint64_t a14)
{
  void *v14;

  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

uint64_t sub_18A7FA78C(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;

  v4 = a2;
  v5 = a3;
  v9 = (unsigned __int16)objc_msgSend_shortValue(v4, v6, v7, v8) >> 8;
  v13 = (unsigned __int16)objc_msgSend_shortValue(v5, v10, v11, v12) >> 8;
  v17 = objc_msgSend_shortValue(v4, v14, v15, v16);
  v21 = objc_msgSend_shortValue(v5, v18, v19, v20);
  v22 = v9 > v13;
  if (v9 < v13)
    v22 = -1;
  if (v17 > v21)
    v22 = 1;
  if (v17 >= v21)
    v23 = v22;
  else
    v23 = -1;

  return v23;
}

void sub_18A7FA838(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7FA9F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  objc_sync_exit(v10);
  _Unwind_Resume(a1);
}

void sub_18A7FAB8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18A7FAC8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;

  objc_sync_exit(v13);
  _Unwind_Resume(a1);
}

void sub_18A7FACD4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  id v18;

  v18 = a2;
  v5 = a3;
  if (*(unsigned __int8 *)(a1 + 40) == (objc_msgSend_shortValue(v18, v6, v7, v8) & 0xFF00) >> 8)
  {
    v12 = (void *)objc_msgSend_mutableCopy(v5, v9, v10, v11);
    objc_msgSend_mutableAttributeToSparseVector(*(void **)(a1 + 32), v13, v14, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v16, v17, (uint64_t)v12, (uint64_t)v18);

  }
}

void sub_18A7FAD64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v12;

  _Unwind_Resume(a1);
}

void sub_18A7FAE64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;

  objc_sync_exit(v13);
  _Unwind_Resume(a1);
}

void sub_18A7FAEAC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  id v18;

  v18 = a2;
  v5 = a3;
  if (*(unsigned __int8 *)(a1 + 40) == objc_msgSend_shortValue(v18, v6, v7, v8))
  {
    v12 = (void *)objc_msgSend_mutableCopy(v5, v9, v10, v11);
    objc_msgSend_mutableAttributeToSparseVector(*(void **)(a1 + 32), v13, v14, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v16, v17, (uint64_t)v12, (uint64_t)v18);

  }
}

void sub_18A7FAF38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v12;

  _Unwind_Resume(a1);
}

void sub_18A7FB0D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  _Unwind_Resume(a1);
}

void sub_18A7FB128()
{
  JUMPOUT(0x18A7FB114);
}

void sub_18A7FB130()
{
  JUMPOUT(0x18A7FB118);
}

void sub_18A7FB138()
{
  JUMPOUT(0x18A7FB11CLL);
}

void sub_18A7FB140(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  id v21;

  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v21 = v3;
  objc_msgSend_modifier(v3, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v4, v9, (uint64_t)v8, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v11)
  {
    v14 = objc_opt_new();
    v15 = *(void **)(a1 + 32);
    objc_msgSend_modifier(v21, v16, v17, v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v15, v20, v14, (uint64_t)v19);

    v11 = (void *)v14;
  }
  objc_msgSend_addObject_(v11, v12, (uint64_t)v21, v13);

}

void sub_18A7FB1F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v10;

  _Unwind_Resume(a1);
}

void sub_18A7FB230(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t i;
  void *v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  const char *v36;
  id obj;
  id v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BYTE v43[128];
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v7 = a2;
  if (a4)
  {
    v11 = *(void **)(a1 + 32);
    v38 = v7;
    objc_msgSend_modifier(v7, v8, v9, v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v11, v13, (uint64_t)v12, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    v41 = 0u;
    v42 = 0u;
    v39 = 0u;
    v40 = 0u;
    obj = v15;
    v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v16, (uint64_t)&v39, (uint64_t)v43, 16);
    if (v20)
    {
      v21 = a3 + a4;
      v22 = a3 + a4 - 1;
      v23 = *(_QWORD *)v40;
      do
      {
        for (i = 0; i != v20; ++i)
        {
          if (*(_QWORD *)v40 != v23)
            objc_enumerationMutation(obj);
          v25 = *(void **)(*((_QWORD *)&v39 + 1) + 8 * i);
          objc_msgSend_identifier(v25, v17, v18, v19);
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_identifier(v38, v27, v28, v29);
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          v31 = CKDistributedTimestampLWWCompare(v26, 0, v30, 0);

          if (v31 == -1)
            v33 = v21;
          else
            v33 = v22;
          v34 = *(void **)(a1 + 40);
          objc_msgSend_indexSetWithIndexesInRange_(MEMORY[0x1E0CB36B8], v32, 0, v33);
          v35 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_addClockValuesInIndexSet_withAttribute_forSiteIdentifier_(v34, v36, (uint64_t)v35, bswap32((*(unsigned __int8 *)(a1 + 48) << 8) | 2) >> 16, v25);

        }
        v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v17, (uint64_t)&v39, (uint64_t)v43, 16);
      }
      while (v20);
    }

    v7 = v38;
  }

}

void sub_18A7FB408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{

  _Unwind_Resume(a1);
}

uint64_t CKDistributedTimestampLWWCompare(void *a1, unint64_t a2, void *a3, unint64_t a4)
{
  id v7;
  const char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  v7 = a1;
  v10 = a3;
  if (a2 <= a4)
  {
    if (a4 <= a2)
      v11 = objc_msgSend_CKCompare_(v7, v8, (uint64_t)v10, v9);
    else
      v11 = -1;
  }
  else
  {
    v11 = 1;
  }

  return v11;
}

void sub_18A7FB4F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18A7FB5CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  objc_sync_exit(v7);

  _Unwind_Resume(a1);
}

void sub_18A7FB5FC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v12 = a2;
  v5 = a3;
  if (*(unsigned __int8 *)(a1 + 40) == objc_msgSend_shortValue(v12, v6, v7, v8))
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += objc_msgSend_timestampCount(v5, v9, v10, v11);

}

void sub_18A7FB66C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18A7FB814(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  objc_sync_exit(v2);
  _Unwind_Resume(a1);
}

void sub_18A7FB988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  void *v9;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  objc_sync_exit(v7);

  _Unwind_Resume(a1);
}

void sub_18A7FB9C4(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  id v17;
  _QWORD v18[4];
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;

  v7 = a2;
  v8 = a3;
  objc_sync_enter(v8);
  objc_msgSend_clockValues(v8, v9, v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = sub_18A7FBAE4;
  v18[3] = &unk_1E1F66100;
  v19 = *(id *)(a1 + 32);
  v13 = v7;
  v14 = *(_QWORD *)(a1 + 40);
  v17 = v13;
  v20 = v13;
  v21 = v14;
  v22 = a4;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v12, v15, (uint64_t)v18, v16);

  objc_sync_exit(v8);
}

void sub_18A7FBAA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;

  objc_sync_exit(v16);
  _Unwind_Resume(a1);
}

void sub_18A7FBAE4(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  int isEqual;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;

  objc_msgSend_modifier(a2, (const char *)a2, a3, (uint64_t)a4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  isEqual = objc_msgSend_isEqual_(v6, v7, *(_QWORD *)(a1 + 32), v8);

  if (isEqual)
  {
    v13 = objc_msgSend_shortValue(*(void **)(a1 + 40), v10, v11, v12);
    v14 = *(_BYTE **)(a1 + 56);
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = BYTE1(v13);
    *v14 = 1;
    *a4 = 1;
  }
}

void sub_18A7FBB54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7FBC18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  objc_sync_exit(v14);
  _Unwind_Resume(a1);
}

void sub_18A7FBC50(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  id v13;
  _QWORD v14[4];
  id v15;
  id v16;

  v5 = a2;
  v6 = a3;
  objc_sync_enter(v6);
  objc_msgSend_clockValues(v6, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = sub_18A7FBD5C;
  v14[3] = &unk_1E1F65D80;
  v13 = v5;
  v15 = v13;
  v16 = *(id *)(a1 + 32);
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v10, v11, (uint64_t)v14, v12);

  objc_sync_exit(v6);
}

void sub_18A7FBD20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;

  objc_sync_exit(v16);
  _Unwind_Resume(a1);
}

void sub_18A7FBD5C(uint64_t a1, void *a2)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  void *v25;
  const char *v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  id v32;

  v32 = a2;
  v6 = (unsigned __int16)objc_msgSend_shortValue(*(void **)(a1 + 32), v3, v4, v5) >> 8;
  v7 = *(void **)(a1 + 40);
  objc_msgSend_modifier(v32, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v7, v12, (uint64_t)v11, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = v6;

  if (!v14)
  {
    objc_msgSend_numberWithUnsignedChar_(MEMORY[0x1E0CB37E8], v16, v15, v18);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = *(void **)(a1 + 40);
    objc_msgSend_modifier(v32, v28, v29, v30);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v27, v31, (uint64_t)v22, (uint64_t)v25);
    goto LABEL_5;
  }
  if (objc_msgSend_shortValue(v14, v16, v17, v18) != (_DWORD)v15)
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v19, v20, v21);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v23, (uint64_t)"-[CKDistributedTimestampAttributedVector(ClockVectorSupport) clockVector_clockTypesForAllModifiers]_block_invoke_2", v24);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v22, v26, (uint64_t)v25, (uint64_t)CFSTR("CKDistributedTimestampVector.mm"), 1754, CFSTR("It is not possible to mix and match regular and lwwPerModifier clock types for a given site identifier modifier (rdar://84695941)"));
LABEL_5:

  }
}

void sub_18A7FBE80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v12;

  _Unwind_Resume(a1);
}

void sub_18A7FC098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id a34)
{
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;

  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a29, 8);

  _Block_object_dispose((const void *)(v37 - 128), 8);
  _Block_object_dispose((const void *)(v37 - 96), 8);

  _Unwind_Resume(a1);
}

void sub_18A7FC108(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, __int16 a5, _BYTE *a6)
{
  id v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  unint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  id v29;

  v12 = a2;
  if (a4)
  {
    v29 = v12;
    if ((a5 & 0xFF00) == 0x200)
      v16 = a1[5];
    else
      v16 = a1[6];
    *(_BYTE *)(*(_QWORD *)(v16 + 8) + 24) = 1;
    if (*(_BYTE *)(*(_QWORD *)(a1[5] + 8) + 24) && *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24))
    {
      objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v13, v14, v15);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(v27, v28, a1[10], a1[4], CFSTR("CKDistributedTimestampVector.mm"), 1792, CFSTR("It is not possible to mix and match regular and lwwPerModifier clock types for a given site identifier modifier (rdar://84695941)"));

    }
    if ((a5 & 0xFF00) != 0x200)
    {
      *a6 = 1;
      goto LABEL_14;
    }
    v17 = a4 + a3 - 1;
    v18 = *(_QWORD *)(a1[7] + 8);
    v19 = *(void **)(v18 + 40);
    if (!v19)
    {
LABEL_12:
      objc_storeStrong((id *)(v18 + 40), a2);
      *(_QWORD *)(*(_QWORD *)(a1[8] + 8) + 24) = v17;
      *(_WORD *)(*(_QWORD *)(a1[9] + 8) + 24) = a5;
LABEL_14:
      v12 = v29;
      goto LABEL_15;
    }
    objc_msgSend_identifier(v19, v13, v14, v15);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = *(_QWORD *)(*(_QWORD *)(a1[8] + 8) + 24);
    objc_msgSend_identifier(v29, v22, v23, v24);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v26 = CKDistributedTimestampLWWCompare(v20, v21, v25, v17);

    v12 = v29;
    if (v26 == -1)
    {
      v18 = *(_QWORD *)(a1[7] + 8);
      goto LABEL_12;
    }
  }
LABEL_15:

}

void sub_18A7FC294(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18A7FC390(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  objc_sync_exit(v2);

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A7FC420(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18A7FC560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  void *v10;

  objc_sync_exit(v10);

  _Unwind_Resume(a1);
}

void sub_18A7FC708(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  void *v10;

  objc_sync_exit(v10);

  _Unwind_Resume(a1);
}

void sub_18A7FC978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;

  objc_sync_exit(v9);
  _Unwind_Resume(a1);
}

void sub_18A7FCC68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, void *a11, void *a12, void *a13, id obj)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  objc_sync_exit(obj);
  objc_sync_exit(a10);

  _Unwind_Resume(a1);
}

void sub_18A7FCDF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_18A7FCE34(void *a1, uint64_t a2, void *a3)
{
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  id v12;

  v12 = a3;
  v7 = (void *)objc_msgSend_mutableCopy(a1, v4, v5, v6);
  objc_msgSend_removeIndexes_(v7, v8, (uint64_t)v12, v9);
  objc_msgSend_removeIndexes_(a1, v10, (uint64_t)v7, v11);

}

void sub_18A7FCE88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

__CFString *sub_18A7FCEA8(uint64_t a1, const char *a2, unint64_t a3, uint64_t a4)
{
  if (a3 < 0xA)
    return off_1E1F661E8[a3];
  objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], a2, (uint64_t)CFSTR("(%lu)"), a4, a3);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *sub_18A7FCEF4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __CFString *v5;

  v4 = (int)a3 - 65;
  if (v4 < 0x37 && ((0x7AFFDB007AFFDBuLL >> v4) & 1) != 0)
  {
    v5 = off_1E1F66238[v4];
  }
  else
  {
    objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], a2, (uint64_t)CFSTR("(%c)"), a4, a3);
    v5 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v5;
}

void sub_18A7FCF68(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v3 = a2;
  v4 = *(_QWORD *)(a1 + 48);
  v11 = v3;
  v7 = objc_msgSend_containsObject_(*(void **)(a1 + 32), v5, (uint64_t)v3, v6);
  v10 = objc_msgSend_containsObject_(*(void **)(a1 + 40), v8, (uint64_t)v11, v9);
  (*(void (**)(uint64_t, id, uint64_t, uint64_t))(v4 + 16))(v4, v11, v7, v10);

}

void sub_18A7FCFD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t sub_18A7FCFEC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = a3;
  objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 32), v6, a2, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 32), v9, (uint64_t)v5, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend_compare_(v8, v12, (uint64_t)v11, v13);

  return v14;
}

void sub_18A7FD064(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_18A7FD090(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  id v10;

  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  if (*(_BYTE *)(v7 + 24))
    *(_BYTE *)(v7 + 24) = 0;
  else
    objc_msgSend_appendFormat_(*(void **)(a1 + 32), a2, (uint64_t)CFSTR(","), a4);
  if (a3 == 1)
    objc_msgSend_appendFormat_(*(void **)(a1 + 32), a2, (uint64_t)CFSTR("%lu"), a4, a2);
  else
    objc_msgSend_appendFormat_(*(void **)(a1 + 32), a2, (uint64_t)CFSTR("%lu-%lu"), a4, a2, &a2[a3 - 1]);
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  v10 = (id)objc_claimAutoreleasedReturnValue();
  if (v10)
    objc_msgSend_appendString_(*(void **)(a1 + 32), v8, (uint64_t)v10, v9);

}

void sub_18A7FD15C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{

  _Unwind_Resume(a1);
}

void sub_18A7FE848()
{
  int v0;
  __objc2_class **v1;
  id v2;
  void *v3;

  v0 = CKShouldUseNewPredicateValidation();
  v1 = off_1E1F53E10;
  if (!v0)
    v1 = off_1E1F54038;
  v2 = objc_alloc_init(*v1);
  v3 = (void *)qword_1ECD96F08;
  qword_1ECD96F08 = (uint64_t)v2;

}

const __CFString *stringForCKUnderlyingErrorCode(uint64_t a1)
{
  const __CFString *result;

  if (a1 > 2999)
  {
    if (a1 > 5999)
    {
      if (a1 > 8999)
      {
        switch(a1)
        {
          case 10000:
            result = CFSTR("UploadRequestCacheOpenFailed");
            break;
          case 10001:
            result = CFSTR("UploadRequestNotEnoughSpace");
            break;
          case 10002:
            result = CFSTR("UploadRequestInvalidStateTransition");
            break;
          case 10003:
            result = CFSTR("UploadRequestTryAgainLater");
            break;
          case 10004:
            result = CFSTR("UploadRequestInvalidRetrievedAsset");
            break;
          case 10005:
            result = CFSTR("UploadRequestZeroLengthAsset");
            break;
          default:
            if (a1 == 9000)
            {
              result = CFSTR("PCCServerDidNotSendAttestation");
            }
            else if (a1 == 9001)
            {
              result = CFSTR("PCCAttestationVerificationFailed");
            }
            else
            {
LABEL_188:
              result = CFSTR("Unknown Error");
            }
            break;
        }
      }
      else
      {
        switch(a1)
        {
          case 8000:
            result = CFSTR("EmailVettingRequired");
            break;
          case 8001:
            result = CFSTR("EmailVettingFailed");
            break;
          case 8002:
            result = CFSTR("EmailVettingTokenInvalid");
            break;
          case 8003:
            result = CFSTR("EmailVettingRecordInvalid");
            break;
          case 8004:
            result = CFSTR("EmailVettingRecordMissing");
            break;
          case 8005:
            result = CFSTR("EmailVettingEmailMismatch");
            break;
          case 8006:
            result = CFSTR("EmailVettingAccountDenied");
            break;
          case 8007:
            result = CFSTR("EmailVettingVettedToCaller");
            break;
          case 8008:
            result = CFSTR("EmailVettingVettedToOther");
            break;
          case 8009:
            result = CFSTR("EmailVettingDryrunKeyswapFailed");
            break;
          case 8010:
            result = CFSTR("EmailVettingServerError");
            break;
          case 8011:
            result = CFSTR("EmailVettingTokenAuthFailed");
            break;
          case 8012:
            result = CFSTR("EmailVettingForcedShareMetedataFetchFailed");
            break;
          case 8013:
            result = CFSTR("OONMetadataWithheld");
            break;
          case 8014:
            result = CFSTR("OONUserUnsupported");
            break;
          default:
            switch(a1)
            {
              case 7000:
                result = CFSTR("PackageDBOpenFailed");
                break;
              case 7001:
                result = CFSTR("PackageDBBusy");
                break;
              case 7002:
                result = CFSTR("PackageDBCopyFailed");
                break;
              case 7003:
                result = CFSTR("PackageDBCheckpointFailed");
                break;
              case 7004:
                result = CFSTR("PackageDBCloseFailed");
                break;
              default:
                if (a1 != 6000)
                  goto LABEL_188;
                result = CFSTR("PluginError");
                break;
            }
            break;
        }
      }
    }
    else if (a1 <= 4001)
    {
      switch(a1)
      {
        case 3000:
          result = CFSTR("MMCSChunkingError");
          break;
        case 3001:
          result = CFSTR("MMCSGenericError");
          break;
        case 3002:
          result = CFSTR("MMCSItemNotFound");
          break;
        case 3003:
          result = CFSTR("MMCSItemModified");
          break;
        case 3004:
          result = CFSTR("MMCSAuthMissing");
          break;
        case 3005:
          result = CFSTR("PutReceiptExpired");
          break;
        case 3006:
          result = CFSTR("MMCSItemStale");
          break;
        case 3007:
          result = CFSTR("MMCSDiscQuotaExceeded");
          break;
        case 3008:
          result = CFSTR("MMCSNoSpaceLeftOnDevice");
          break;
        case 3009:
          result = CFSTR("MMCSItemNotValid");
          break;
        case 3010:
          result = CFSTR("MMCSItemNotAvailable");
          break;
        case 3011:
          result = CFSTR("ReferencedAssetNotFound");
          break;
        case 3012:
          result = CFSTR("RepairAssetSignatureMismatch");
          break;
        case 3013:
          result = CFSTR("MMCSInsufficientDiskSpace");
          break;
        case 3014:
          result = CFSTR("ParticipantIDMismatch");
          break;
        case 3015:
          result = CFSTR("AssetHandleUnregistered");
          break;
        default:
          if (a1 == 4000)
          {
            result = CFSTR("CouldntInitializeMescal");
          }
          else
          {
            if (a1 != 4001)
              goto LABEL_188;
            result = CFSTR("BadSignature");
          }
          break;
      }
    }
    else
    {
      switch(a1)
      {
        case 5000:
          result = CFSTR("PCSNoPublicIdentity");
          break;
        case 5001:
          result = CFSTR("CouldntFetchPCSData");
          break;
        case 5002:
          result = CFSTR("CouldntSavePCSData");
          break;
        case 5003:
          result = CFSTR("CouldntWrapPCSData");
          break;
        case 5004:
          result = CFSTR("PCSDecryptFailed");
          break;
        case 5005:
          result = CFSTR("CouldntCreatePCSData");
          break;
        case 5006:
          result = CFSTR("iCDPRequired");
          break;
        case 5007:
          result = CFSTR("PCSDataNotFoundLocally");
          break;
        case 5008:
          result = CFSTR("UnsyncedKeychain");
          break;
        case 5009:
          result = CFSTR("KeyRegistrySyncFailed");
          break;
        case 5010:
          result = CFSTR("RequiredPCSDataNotFoundLocally");
          break;
        case 5011:
          result = CFSTR("MissingManateeIdentity");
          break;
        case 5012:
          result = CFSTR("PCSKeySyncStateThrottled");
          break;
        case 5013:
          result = CFSTR("WalrusEnabled");
          break;
        case 5014:
          result = CFSTR("WalrusIdentityICDPRequired");
          break;
        case 5015:
          result = CFSTR("MissingAnonymousID");
          break;
        case 5016:
          result = CFSTR("PerRecordPCSKeyRollFailed");
          break;
        case 5017:
          result = CFSTR("ZoneishPCSKeyRollFailed");
          break;
        case 5018:
          result = CFSTR("ZonePCSKeyRollFailed");
          break;
        case 5019:
          result = CFSTR("SharePCSKeyRollFailed");
          break;
        case 5020:
          result = CFSTR("GenericPCSKeyRollFailed");
          break;
        case 5021:
          result = CFSTR("IncompatibleOSVersion");
          break;
        case 5022:
          result = CFSTR("SignatureValidationFailed");
          break;
        default:
          if (a1 != 4002)
            goto LABEL_188;
          result = CFSTR("MescalNotInitialized");
          break;
      }
    }
  }
  else if (a1 <= 1999)
  {
    switch(a1)
    {
      case 1000:
        return CFSTR("GenericError");
      case 1001:
        return CFSTR("NotImplemented");
      case 1002:
        return CFSTR("NoAccountExists");
      case 1003:
        return CFSTR("AccountMoved");
      case 1004:
        return CFSTR("AuthenticationSkipped");
      case 1005:
        return CFSTR("ParseError");
      case 1006:
        return CFSTR("BadValueClass");
      case 1007:
        return CFSTR("InvalidRecordBatch");
      case 1008:
        return CFSTR("FailedIDFetch");
      case 1009:
        return CFSTR("InvalidPredicate");
      case 1010:
        return CFSTR("UserRejectedLogin");
      case 1011:
        return CFSTR("PartialFailure");
      case 1012:
        return CFSTR("NetworkUnavailable");
      case 1013:
        return CFSTR("NetworkFailure");
      case 1014:
        return CFSTR("BadContainer");
      case 1015:
        return CFSTR("NoPushToken");
      case 1016:
        return CFSTR("ChangeTokenExpired");
      case 1017:
        return CFSTR("InvalidArguments");
      case 1018:
        return CFSTR("AccountAccessRestricted");
      case 1019:
        return CFSTR("BadDatabase");
      case 1020:
        return CFSTR("BatchTooLarge");
      case 1021:
        return CFSTR("AssetSaveFailed");
      case 1022:
        return CFSTR("ParticipantsListConflict");
      case 1023:
        return CFSTR("AppDisabledInSettings");
      case 1024:
        return CFSTR("AppNotInAppStore");
      case 1025:
        return CFSTR("XPCActivityNotContinue");
      case 1026:
        return CFSTR("XPCActivityShouldDefer");
      case 1027:
        return CFSTR("SQLiteError");
      case 1028:
        return CFSTR("AccountUnavailableDueToBadAuthToken");
      case 1029:
        return CFSTR("InvalidDSID");
      case 1030:
      case 1031:
      case 1032:
      case 1033:
      case 1034:
      case 1035:
      case 1036:
      case 1037:
      case 1038:
      case 1039:
      case 1040:
      case 1041:
      case 1042:
      case 1043:
      case 1044:
      case 1045:
      case 1046:
      case 1047:
      case 1048:
      case 1049:
        goto LABEL_188;
      case 1050:
        return CFSTR("NoMatchingRow");
      case 1051:
        return CFSTR("NoUniqueRow");
      default:
        if (a1)
        {
          if (a1 != 1)
            goto LABEL_188;
          result = CFSTR("Cancelled");
        }
        else
        {
          result = CFSTR("Success");
        }
        break;
    }
  }
  else
  {
    switch(a1)
    {
      case 2000:
        result = CFSTR("ServerInternalError");
        break;
      case 2001:
        result = CFSTR("ServerHTTPError");
        break;
      case 2002:
        result = CFSTR("ServerOverloaded");
        break;
      case 2003:
        result = CFSTR("ObjectNotFound");
        break;
      case 2004:
        result = CFSTR("OpLockFailed");
        break;
      case 2005:
        result = CFSTR("ClientInternalError");
        break;
      case 2006:
        result = CFSTR("BadSyntax");
        break;
      case 2007:
        result = CFSTR("Forbidden");
        break;
      case 2008:
        result = CFSTR("Throttled");
        break;
      case 2009:
        result = CFSTR("ServerThrottled");
        break;
      case 2010:
        result = CFSTR("Refused");
        break;
      case 2011:
        result = CFSTR("AuthTokenError");
        break;
      case 2012:
        result = CFSTR("AuthenticationNeeded");
        break;
      case 2013:
        result = CFSTR("ExpiredAppConfig");
        break;
      case 2014:
        result = CFSTR("ExpiredGlobalConfig");
        break;
      case 2015:
        result = CFSTR("FieldNotQueryable");
        break;
      case 2016:
        result = CFSTR("FieldNotSortable");
        break;
      case 2017:
        result = CFSTR("ObjectAlreadyExists");
        break;
      case 2018:
        result = CFSTR("BadKeyName");
        break;
      case 2019:
        result = CFSTR("BadFieldValue");
        break;
      case 2020:
        result = CFSTR("BadIdentifier");
        break;
      case 2021:
        result = CFSTR("FieldsPerTypeExceeded");
        break;
      case 2022:
        result = CFSTR("ServerBusy");
        break;
      case 2023:
        result = CFSTR("LimitExceeded");
        break;
      case 2024:
        result = CFSTR("AtomicFailure");
        break;
      case 2025:
        result = CFSTR("ValidatingReferenceFailure");
        break;
      case 2026:
        result = CFSTR("ContainerReset");
        break;
      case 2027:
        result = CFSTR("NotSupported");
        break;
      case 2028:
        result = CFSTR("AlreadyShared");
        break;
      case 2029:
        result = CFSTR("ZoneBusy");
        break;
      case 2030:
        result = CFSTR("ZoneUnavailable");
        break;
      case 2031:
        result = CFSTR("ContainerUnavailable");
        break;
      case 2032:
        result = CFSTR("DuplicateSubscription");
        break;
      case 2033:
        result = CFSTR("EmailOutOfNetwork");
        break;
      case 2034:
        result = CFSTR("ExpiredPutReceipt");
        break;
      case 2035:
        result = CFSTR("QuotaExceeded");
        break;
      case 2036:
        result = CFSTR("ZoneNotFound");
        break;
      case 2037:
        result = CFSTR("PCSOplockFailed");
        break;
      case 2038:
        result = CFSTR("AssetTooLarge");
        break;
      case 2039:
        result = CFSTR("DeviceNotSupported");
        break;
      case 2040:
        result = CFSTR("RequestAlreadyProcessed");
        break;
      case 2041:
        result = CFSTR("StaleRecordUpdate");
        break;
      case 2042:
        result = CFSTR("UserDeletedData");
        break;
      case 2043:
        result = CFSTR("ShareParticipantMissing");
        break;
      case 2044:
        result = CFSTR("InvalidPCSChain");
        break;
      case 2045:
        result = CFSTR("TooManyParticipants");
        break;
      case 2046:
        result = CFSTR("HierarchyAlreadyShared");
        break;
      case 2047:
        result = CFSTR("U13Restricted");
        break;
      case 2048:
        result = CFSTR("ManagedAppleIDRestricted");
        break;
      case 2049:
        result = CFSTR("InvalidEmailAddress");
        break;
      case 2050:
        result = CFSTR("RecordArchived");
        break;
      case 2051:
        result = CFSTR("DatabaseAccessDenied");
        break;
      case 2052:
        result = CFSTR("ParentHierarchyDepthLimitExceeded");
        break;
      case 2053:
        result = CFSTR("ZonePCSUserIdentityUnknown");
        break;
      case 2054:
        result = CFSTR("ManagedAppleIdBackupBlocked");
        break;
      case 2055:
        result = CFSTR("RetryableModificationFailure");
        break;
      case 2056:
        result = CFSTR("UserDidResetEncryptedData");
        break;
      case 2057:
        result = CFSTR("ShareRegionUnsupported");
        break;
      case 2060:
        result = CFSTR("a2aSignatureValidationError");
        break;
      case 2061:
        result = CFSTR("ThrottledByHTTP503");
        break;
      case 2062:
        result = CFSTR("ThrottledByHTTP429");
        break;
      case 2063:
        result = CFSTR("ThrottledByServer");
        break;
      default:
        goto LABEL_188;
    }
  }
  return result;
}

void sub_18A800188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a10);
  va_start(va, a10);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A8001B8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18A8001C8(uint64_t a1)
{

}

void sub_18A8001D0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  NSObject *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (objc_msgSend_code(v6, v7, v8, v9) == 2)
  {
    if (objc_msgSend_code(v6, v10, v11, v12) == 2)
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
      objc_msgSend_userInfo(v6, v13, v14, v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v16, v17, (uint64_t)CFSTR("CKPartialErrors"), v18);
      v19 = (void *)objc_claimAutoreleasedReturnValue();

      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        objc_msgSend_objectForKeyedSubscript_(v19, v20, (uint64_t)v5, v21);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend_code(v22, v23, v24, v25) == 2)
        {
          if (ck_log_initialization_predicate != -1)
            dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
          v27 = ck_log_facility_ck;
          if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_FAULT))
          {
            v39 = 138412290;
            v40 = v22;
            _os_log_fault_impl(&dword_18A5C5000, v27, OS_LOG_TYPE_FAULT, "There are too many layers of nested partial failure errors to fully flatten. Adding this error without flattening: %@", (uint8_t *)&v39, 0xCu);
          }
        }
        objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v26, (uint64_t)v22, (uint64_t)v5);

      }
    }
  }
  else
  {
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v10, (uint64_t)v6, (uint64_t)v5);
    v31 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v34 = *(void **)(v31 + 40);
    v32 = (id *)(v31 + 40);
    v33 = v34;
    if (v34)
    {
      v35 = objc_msgSend_code(v33, v28, v29, v30);
      if (v35 != objc_msgSend_code(v6, v36, v37, v38))
        *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
    }
    else
    {
      objc_storeStrong(v32, a3);
    }
  }

}

uint64_t CKErrorCodeForNSURLErrorCode(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = 3;
  if ((unint64_t)(a1 + 1020) > 0x11 || ((1 << (a1 - 4)) & 0x34805) == 0)
  {
    v3 = 4;
    if (a1 == -1)
      v3 = 3;
    if (a1 != -2000)
      return v3;
  }
  return result;
}

BOOL sub_18A800560(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL8 v20;

  objc_msgSend_domain(a1, a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_isEqualToString_(v5, v6, (uint64_t)CFSTR("CKInternalErrorDomain"), v7))
    v20 = objc_msgSend_code(a1, v8, v9, v10) == 2003
       || objc_msgSend_code(a1, v11, v12, v13) == 2036
       || objc_msgSend_code(a1, v14, v15, v16) == 2042
       || objc_msgSend_code(a1, v17, v18, v19) == 2056;
  else
    v20 = 0;

  return v20;
}

BOOL sub_18A8005F0(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 v11;

  objc_msgSend_domain(a1, a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_isEqualToString_(v5, v6, (uint64_t)CFSTR("CKInternalErrorDomain"), v7))
    v11 = objc_msgSend_code(a1, v8, v9, v10) == 2003;
  else
    v11 = 0;

  return v11;
}

uint64_t sub_18A800648(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  const char *v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;

  objc_msgSend_userInfo(a1, a2, a3, a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v4, v5, *MEMORY[0x1E0CB3388], v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_domain(v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_isEqualToString_(v11, v12, (uint64_t)CFSTR("CKInternalErrorDomain"), v13))
  {
    CKTopLevelUnderlyingErrorCodes();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = (void *)MEMORY[0x1E0CB37E8];
    v19 = objc_msgSend_code(v7, v16, v17, v18);
    objc_msgSend_numberWithInteger_(v15, v20, v19, v21);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = objc_msgSend_containsObject_(v14, v23, (uint64_t)v22, v24);

  }
  else
  {
    v25 = 0;
  }

  return v25;
}

id sub_18A800714(void *a1, uint64_t a2, void *a3)
{
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  void *v24;
  id v25;
  const char *v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  const char *v49;
  id v50;
  _QWORD v52[4];
  id v53;

  v4 = a3;
  objc_msgSend_domain(a1, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend_isEqualToString_(v8, v9, (uint64_t)CFSTR("CKErrorDomain"), v10))
  {

    goto LABEL_6;
  }
  v14 = objc_msgSend_code(a1, v11, v12, v13);

  if (v14 != 2)
  {
LABEL_6:
    v50 = a1;
    goto LABEL_9;
  }
  objc_msgSend_setWithArray_(MEMORY[0x1E0C99E60], v15, (uint64_t)v4, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_userInfo(a1, v18, v19, v20);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v21, v22, (uint64_t)CFSTR("CKPartialErrors"), v23);
  v24 = (void *)objc_claimAutoreleasedReturnValue();

  v52[0] = MEMORY[0x1E0C809B0];
  v52[1] = 3221225472;
  v52[2] = sub_18A8008CC;
  v52[3] = &unk_1E1F664C8;
  v25 = v17;
  v53 = v25;
  objc_msgSend_CKFilter_(v24, v26, (uint64_t)v52, v27);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_count(v28, v29, v30, v31))
  {
    objc_msgSend_userInfo(a1, v32, v33, v34);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    v39 = (void *)objc_msgSend_mutableCopy(v35, v36, v37, v38);

    objc_msgSend_setObject_forKeyedSubscript_(v39, v40, (uint64_t)v28, (uint64_t)CFSTR("CKPartialErrors"));
    objc_msgSend_domain(a1, v41, v42, v43);
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    v48 = objc_msgSend_code(a1, v45, v46, v47);
    objc_msgSend_errorWithDomain_code_userInfo_(CKPrettyError, v49, (uint64_t)v44, v48, v39);
    v50 = (id)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v50 = 0;
  }

LABEL_9:
  return v50;
}

uint64_t sub_18A8008CC(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  const char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v3 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend_zoneID(v3, v4, v5, v6);
    v7 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
LABEL_7:
      v11 = 0;
      goto LABEL_8;
    }
    v7 = v3;
  }
  v10 = v7;
  if (!v7)
    goto LABEL_7;
  v11 = objc_msgSend_containsObject_(*(void **)(a1 + 32), v8, (uint64_t)v7, v9);

LABEL_8:
  return v11;
}

id sub_18A800970(void *a1, uint64_t a2, void *a3)
{
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  char isEqualToString;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const char *v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  id v31;

  v7 = a3;
  if (!v7)
    goto LABEL_7;
  objc_msgSend_domain(a1, v4, v5, v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v8, v9, (uint64_t)CFSTR("CKErrorDomain"), v10);

  if ((isEqualToString & 1) == 0 || objc_msgSend_code(a1, v12, v13, v14) != 2)
  {
    v31 = a1;
    goto LABEL_8;
  }
  objc_msgSend_userInfo(a1, v15, v16, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v18, v19, (uint64_t)CFSTR("CKPartialErrors"), v20);
  v21 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v21)
  {
LABEL_7:
    v31 = 0;
    goto LABEL_8;
  }
  objc_msgSend_userInfo(a1, v22, v23, v24);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v25, v26, (uint64_t)CFSTR("CKPartialErrors"), v27);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v28, v29, (uint64_t)v7, v30);
  v31 = (id)objc_claimAutoreleasedReturnValue();

LABEL_8:
  return v31;
}

id sub_18A800A60(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  int isEqualToString;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  int v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  objc_msgSend_domain(a1, a2, a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v5, v6, (uint64_t)CFSTR("CKErrorDomain"), v7);

  if (isEqualToString)
  {
    v12 = objc_msgSend_code(a1, v9, v10, v11);
    stringForCKErrorCode(v12, v13, v14, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend_domain(a1, v9, v10, v11);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = objc_msgSend_isEqualToString_(v17, v18, (uint64_t)CFSTR("CKInternalErrorDomain"), v19);

    if (v20)
    {
      v24 = objc_msgSend_code(a1, v21, v22, v23);
      stringForCKUnderlyingErrorCode(v24);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v16 = 0;
    }
  }
  return v16;
}

BOOL CKErrorIsCode(void *a1, uint64_t a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  int isEqualToString;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  int v25;

  v3 = a1;
  v7 = objc_msgSend_code(v3, v4, v5, v6);
  objc_msgSend_domain(v3, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v11, v12, (uint64_t)CFSTR("CKInternalErrorDomain"), v13);

  if (isEqualToString)
  {
    v18 = objc_msgSend_code(v3, v15, v16, v17);

    v7 = CKErrorCodeForUnderlyingErrorCode(v18, v19, v20, v21);
    return v7 == a2;
  }
  objc_msgSend_domain(v3, v15, v16, v17);
  v22 = (void *)objc_claimAutoreleasedReturnValue();

  v25 = objc_msgSend_isEqualToString_(v22, v23, (uint64_t)CFSTR("CKErrorDomain"), v24);
  if (v25)
    return v7 == a2;
  return 0;
}

uint64_t CKCanRetryForError(void *a1)
{
  id v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  int isEqualToString;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  int v23;
  uint64_t result;

  v1 = a1;
  v5 = objc_msgSend_code(v1, v2, v3, v4);
  objc_msgSend_domain(v1, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v9, v10, (uint64_t)CFSTR("CKInternalErrorDomain"), v11);

  if (isEqualToString)
  {
    v16 = objc_msgSend_code(v1, v13, v14, v15);

    v5 = CKErrorCodeForUnderlyingErrorCode(v16, v17, v18, v19);
  }
  else
  {
    objc_msgSend_domain(v1, v13, v14, v15);
    v20 = (void *)objc_claimAutoreleasedReturnValue();

    v23 = objc_msgSend_isEqualToString_(v20, v21, (uint64_t)CFSTR("CKErrorDomain"), v22);
    if (!v23)
      return 0;
  }
  result = 1;
  if ((v5 > 0x19 || ((1 << v5) & 0x29002F8) == 0) && v5 != 115)
    return 0;
  return result;
}

double CKRetryAfterSecondsForError(void *a1)
{
  id v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  int isEqualToString;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  double v26;
  double v27;
  _QWORD v29[5];
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  void (*v34)(uint64_t);
  id v35;

  v1 = a1;
  v30 = 0;
  v31 = &v30;
  v32 = 0x3032000000;
  v33 = sub_18A8001B8;
  v34 = sub_18A8001C8;
  v35 = 0;
  objc_msgSend_domain(v1, v2, v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v5, v6, (uint64_t)CFSTR("CKErrorDomain"), v7);

  if (isEqualToString)
  {
    if (objc_msgSend_code(v1, v9, v10, v11) == 2)
    {
      objc_msgSend_userInfo(v1, v12, v13, v14);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v15, v16, (uint64_t)CFSTR("CKPartialErrors"), v17);
      v18 = (void *)objc_claimAutoreleasedReturnValue();

      v29[0] = MEMORY[0x1E0C809B0];
      v29[1] = 3221225472;
      v29[2] = sub_18A800E20;
      v29[3] = &unk_1E1F664F0;
      v29[4] = &v30;
      objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v18, v19, (uint64_t)v29, v20);
    }
    else
    {
      objc_msgSend_userInfo(v1, v12, v13, v14);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v18, v21, (uint64_t)CFSTR("CKRetryAfter"), v22);
      v23 = objc_claimAutoreleasedReturnValue();
      v24 = (void *)v31[5];
      v31[5] = v23;

    }
  }
  v25 = (void *)v31[5];
  if (v25)
  {
    objc_msgSend_doubleValue(v25, v9, v10, v11);
    v27 = v26;
  }
  else
  {
    v27 = 0.0;
  }
  _Block_object_dispose(&v30, 8);

  return v27;
}

void sub_18A800E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A800E20(uint64_t a1, const char *a2, void *a3, uint64_t a4)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  double v13;
  double v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  id obj;

  objc_msgSend_userInfo(a3, a2, (uint64_t)a3, a4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v5, v6, (uint64_t)CFSTR("CKRetryAfter"), v7);
  obj = (id)objc_claimAutoreleasedReturnValue();

  v11 = obj;
  if (obj)
  {
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    if (!*(_QWORD *)(v12 + 40))
    {
LABEL_5:
      objc_storeStrong((id *)(v12 + 40), obj);
      v11 = obj;
      goto LABEL_6;
    }
    objc_msgSend_doubleValue(obj, v8, v9, v10);
    v14 = v13;
    objc_msgSend_doubleValue(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), v15, v16, v17);
    v11 = obj;
    if (v14 < v18)
    {
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
      goto LABEL_5;
    }
  }
LABEL_6:

}

id CKEarliestStartDateAfterError(void *a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  if (CKRetryAfterSecondsForError(a1) <= 0.0)
  {
    v4 = 0;
  }
  else
  {
    objc_msgSend_dateWithTimeIntervalSinceNow_(MEMORY[0x1E0C99D68], v1, v2, v3);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v4;
}

id sub_18A800EFC(uint64_t a1, void *a2)
{
  id v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  void *v20;

  v2 = a2;
  objc_msgSend_CKStringForWellKnownCKErrors(v2, v3, v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_stringByReplacingOccurrencesOfString_withString_(v6, v7, (uint64_t)CFSTR(" "), (uint64_t)&stru_1E1F66ED0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v8)
  {
    v12 = (void *)MEMORY[0x1E0CB3940];
    v13 = objc_msgSend_code(v2, v9, v10, v11);
    objc_msgSend_stringWithFormat_(v12, v14, (uint64_t)CFSTR("%ld"), v15, v13);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v16 = (void *)MEMORY[0x1E0CB3940];
  objc_msgSend_domain(v2, v9, v10, v11);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_stringWithFormat_(v16, v18, (uint64_t)CFSTR("%@.%@"), v19, v17, v8);
  v20 = (void *)objc_claimAutoreleasedReturnValue();

  return v20;
}

void sub_18A800FE0(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[10];

  v9[9] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0C99E60];
  v3 = *MEMORY[0x1E0CB3388];
  v9[0] = CFSTR("CKPartialErrors");
  v9[1] = v3;
  v9[2] = *MEMORY[0x1E0CB2F70];
  v9[3] = CFSTR("CKFunctionError");
  v9[4] = CFSTR("AncestorRecord");
  v9[5] = CFSTR("ServerRecord");
  v9[6] = CFSTR("ClientRecord");
  v9[7] = CFSTR("NotFoundItemID");
  v9[8] = CFSTR("CKRecordMovedDestinationID");
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x1E0C99D20], a2, (uint64_t)v9, 9);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setWithArray_(v2, v5, (uint64_t)v4, v6);
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = (void *)qword_1ECD96F20;
  qword_1ECD96F20 = v7;

}

uint64_t CKShouldWrapErrorFetchingRecords(void *a1)
{
  id v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  int isEqualToString;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = a1;
  objc_msgSend_domain(v1, v2, v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v5, v6, (uint64_t)CFSTR("CKInternalErrorDomain"), v7);

  if (isEqualToString)
  {
    v12 = objc_msgSend_code(v1, v9, v10, v11);
    if ((unint64_t)(v12 - 5006) <= 8)
      v13 = (0xF2u >> (v12 + 114)) & 1;
    else
      v13 = 1;
  }
  else
  {
    v13 = 0;
  }

  return v13;
}

void CKAddResponseHeaderValuesToUserInfoDictionary(void *a1, void *a2)
{
  id v3;
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  int v18;
  const char *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  NSObject *v23;
  void *v24;
  const char *v25;
  void *v26;
  const char *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  int v33;
  void *v34;
  __int16 v35;
  int v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v10 = objc_msgSend_statusCode(v3, v5, v6, v7);
  if ((unint64_t)(v10 - 200) >= 0x64)
  {
    objc_msgSend_numberWithInteger_(MEMORY[0x1E0CB37E8], v8, v10, v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v4, v12, (uint64_t)v11, (uint64_t)CFSTR("CKHTTPStatus"));

  }
  objc_msgSend_valueForHTTPHeaderField_(v3, v8, (uint64_t)CFSTR("Retry-After"), v9);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = v13;
  if (v13 || v10 == 503 || v10 == 429)
  {
    v18 = objc_msgSend_intValue(v13, v14, v15, v16);
    if (v18 >= 86400)
      v21 = 86400;
    else
      v21 = v18;
    if (v21 <= 1)
      v22 = 1;
    else
      v22 = v21;
    if ((_DWORD)v22 != v18)
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v23 = ck_log_facility_ck;
      if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
      {
        v33 = 138412546;
        v34 = v17;
        v35 = 1024;
        v36 = v22;
        _os_log_error_impl(&dword_18A5C5000, v23, OS_LOG_TYPE_ERROR, "Invalid or out of range Retry-After header value: %@. Used %d", (uint8_t *)&v33, 0x12u);
      }
    }
    objc_msgSend_numberWithInt_(MEMORY[0x1E0CB37E8], v19, v22, v20);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v4, v25, (uint64_t)v24, (uint64_t)CFSTR("CKRetryAfter"));

  }
  objc_msgSend_valueForHTTPHeaderField_(v3, v14, (uint64_t)CFSTR("X-Apple-Request-UUID"), v16);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v4, v27, (uint64_t)v26, (uint64_t)CFSTR("RequestUUID"));

  objc_msgSend_allHeaderFields(v3, v28, v29, v30);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v4, v32, (uint64_t)v31, (uint64_t)CFSTR("CKDHTTPHeaders"));

}

id CKErrorFromHTTPResponse(void *a1)
{
  id v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v8;
  void *v9;
  const char *v10;
  void *v11;
  uint8_t buf[4];
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v5 = objc_msgSend_statusCode(v1, v2, v3, v4);
  if ((unint64_t)(v5 - 200) <= 0x63)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v6 = ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 134217984;
      v14 = v5;
      _os_log_fault_impl(&dword_18A5C5000, v6, OS_LOG_TYPE_FAULT, "Expected failure HTTP status code (%ld)", buf, 0xCu);
    }
  }
  if (v5 == 503 || v5 == 429)
    v8 = 2009;
  else
    v8 = 2001;
  v9 = (void *)objc_opt_new();
  CKAddResponseHeaderValuesToUserInfoDictionary(v1, v9);

  objc_msgSend_errorWithDomain_code_userInfo_format_(CKPrettyError, v10, (uint64_t)CFSTR("CKInternalErrorDomain"), v8, v9, CFSTR("Request failed with http status code %ld"), v5);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

uint64_t CKErrorShouldDefer(void *a1)
{
  id v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t isEqualToString;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  int v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = a1;
  objc_msgSend_domain(v1, v2, v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v5, v6, (uint64_t)CFSTR("CKErrorDomain"), v7);

  if ((_DWORD)isEqualToString)
  {
    v12 = objc_msgSend_code(v1, v9, v10, v11);
    if (v12 == 132)
    {
      isEqualToString = 1;
    }
    else
    {
      if (v12 == 20)
      {
        objc_msgSend_userInfo(v1, v13, v14, v15);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_objectForKeyedSubscript_(v16, v17, *MEMORY[0x1E0CB3388], v18);
        v19 = (void *)objc_claimAutoreleasedReturnValue();

        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          objc_msgSend_domain(v19, v20, v21, v22);
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          v26 = objc_msgSend_isEqualToString_(v23, v24, (uint64_t)CFSTR("CKErrorDomain"), v25);

          if (v26)
          {
            v30 = objc_msgSend_code(v19, v27, v28, v29);
            if (v30 == 131)
            {
              isEqualToString = 1;
              goto LABEL_14;
            }
            if (v30 == 130)
            {
              isEqualToString = 0;
LABEL_14:

              goto LABEL_12;
            }
          }
        }

      }
      isEqualToString = 0;
    }
  }
LABEL_12:

  return isEqualToString;
}

void sub_18A803E84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A805160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  void *v19;
  uint64_t v20;

  objc_sync_exit(v19);
  os_activity_scope_leave((os_activity_scope_state_t)(v20 - 80));
  _Unwind_Resume(a1);
}

uint64_t sub_18A805198(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18A8051A8(uint64_t a1)
{

}

void sub_18A8051B0(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  int v4;
  id v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v3 = ck_log_facility_distributed_sync;
  if (os_log_type_enabled((os_log_t)ck_log_facility_distributed_sync, OS_LOG_TYPE_ERROR))
  {
    v4 = 138412290;
    v5 = v2;
    _os_log_error_impl(&dword_18A5C5000, v3, OS_LOG_TYPE_ERROR, "Error getting proxy for max mergeable delta size: %@", (uint8_t *)&v4, 0xCu);
  }

}

void sub_18A80528C(uint64_t a1, void *a2)
{
  const char *v4;
  uint64_t v5;
  _QWORD v6[4];
  id v7;
  id v8;
  uint64_t v9;

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = sub_18A80531C;
  v6[3] = &unk_1E1F66568;
  v9 = *(_QWORD *)(a1 + 48);
  v7 = *(id *)(a1 + 32);
  v8 = *(id *)(a1 + 40);
  objc_msgSend_suggestedMergeableDeltaSizeWithCompletionHandler_(a2, v4, (uint64_t)v6, v5);

}

void sub_18A80531C(uint64_t *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  NSObject *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  void *v48;
  __int16 v49;
  uint64_t v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  objc_msgSend_numberWithInteger_(MEMORY[0x1E0CB37E8], a2, (uint64_t)a2, a4);
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = *(_QWORD *)(a1[6] + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

  v11 = (void *)objc_msgSend_mutableCopy((void *)qword_1ECD969D0, v8, v9, v10);
  objc_msgSend_setObject_forKeyedSubscript_(v11, v12, *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40), a1[4]);
  v16 = objc_msgSend_copy(v11, v13, v14, v15);
  v17 = (void *)qword_1ECD969D0;
  qword_1ECD969D0 = v16;

  v21 = (void *)objc_msgSend_mutableCopy((void *)qword_1ECD969D8, v18, v19, v20);
  v22 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend_timeIntervalSinceReferenceDate(MEMORY[0x1E0C99D68], v23, v24, v25);
  objc_msgSend_numberWithDouble_(v22, v26, v27, v28);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v21, v30, (uint64_t)v29, a1[4]);

  v34 = objc_msgSend_copy(v21, v31, v32, v33);
  v35 = (void *)qword_1ECD969D8;
  qword_1ECD969D8 = v34;

  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v36 = (void *)ck_log_facility_distributed_sync;
  if (os_log_type_enabled((os_log_t)ck_log_facility_distributed_sync, OS_LOG_TYPE_INFO))
  {
    v37 = (void *)a1[5];
    v38 = v36;
    objc_msgSend_containerIdentifier(v37, v39, v40, v41);
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    v46 = objc_msgSend_integerValue(*(void **)(*(_QWORD *)(a1[6] + 8) + 40), v43, v44, v45);
    v47 = 138412546;
    v48 = v42;
    v49 = 2048;
    v50 = v46;
    _os_log_impl(&dword_18A5C5000, v38, OS_LOG_TYPE_INFO, "Fetched suggested delta size from daemon for container %@: %ld", (uint8_t *)&v47, 0x16u);

  }
}

void sub_18A805BB8(uint64_t a1)
{
  NSObject *v2;
  dispatch_queue_t v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = dispatch_queue_create("com.apple.cloudkit.sync-engine.state", v2);
  v4 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v3;

  objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v5, (uint64_t)CFSTR(" %p"), v6, a1);
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = *(void **)(a1 + 160);
  *(_QWORD *)(a1 + 160) = v7;

  dispatch_queue_set_specific(*(dispatch_queue_t *)(a1 + 56), (const void *)(a1 + 56), (void *)1, 0);
}

uint64_t sub_18A805CF0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) += objc_msgSend_count(*(void **)(*(_QWORD *)(a1 + 32) + 64), a2, a3, a4);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) += objc_msgSend_count(*(void **)(*(_QWORD *)(a1 + 32) + 32), v5, v6, v7);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) += objc_msgSend_count(*(void **)(*(_QWORD *)(a1 + 32) + 80), v8, v9, v10);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) += objc_msgSend_count(*(void **)(*(_QWORD *)(a1 + 32) + 88), v11, v12, v13);
  result = objc_msgSend_count(*(void **)(*(_QWORD *)(a1 + 32) + 72), v14, v15, v16);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) += result;
  return result;
}

void sub_18A805F24(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;

  v2 = objc_alloc_init(MEMORY[0x1E0C99E10]);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 64);
  *(_QWORD *)(v3 + 64) = v2;

  v5 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(void **)(v6 + 32);
  *(_QWORD *)(v6 + 32) = v5;

  v8 = objc_alloc_init(MEMORY[0x1E0C99E10]);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(void **)(v9 + 80);
  *(_QWORD *)(v9 + 80) = v8;

  v11 = objc_alloc_init(MEMORY[0x1E0C99E10]);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(void **)(v12 + 88);
  *(_QWORD *)(v12 + 88) = v11;

  v14 = objc_alloc_init(MEMORY[0x1E0C99E10]);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(void **)(v15 + 72);
  *(_QWORD *)(v15 + 72) = v14;

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 11) = 0;
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 12) = 0;
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(void **)(v17 + 16);
  *(_QWORD *)(v17 + 16) = 0;

  v19 = *(_QWORD *)(a1 + 32);
  v20 = *(void **)(v19 + 24);
  *(_QWORD *)(v19 + 24) = 0;

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 10) = 0;
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 8) = 1;
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 9) = 1;
}

void sub_18A8060F0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t DatabaseChanges;
  const char *v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t hasPendingUntrackedChanges;
  const char *v28;
  uint64_t v29;
  void *v30;
  const char *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  void *v41;
  void *v42;
  const char *v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  const char *v52;
  uint64_t v53;
  void *v54;
  const char *v55;
  void *v56;
  void *v57;
  const char *v58;
  void *v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  const char *v64;
  void *v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  const char *v70;
  void *v71;
  const char *v72;
  _QWORD *v73;
  void *v74;
  _QWORD *v75;
  const char *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  const char *v80;
  void *v81;
  const char *v82;
  void *v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  const char *v88;
  void *v89;
  const char *v90;
  _QWORD *v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  const char *v97;
  void *v98;
  const char *v99;
  const char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  const char *v111;
  void *v112;
  const char *v113;
  _QWORD *v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  const char *v120;
  const char *v121;
  void *v122;
  _QWORD *v123;
  const char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  const char *v128;
  uint64_t v129;
  void *v130;
  const char *v131;
  void *v132;
  const char *v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  const char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  const char *v141;
  uint64_t v142;
  void *v143;
  const char *v144;
  void *v145;
  _QWORD *v146;
  _QWORD *v147;
  const char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  const char *v152;
  uint64_t v153;
  void *v154;
  const char *v155;
  const char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  const char *v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  _QWORD *v165;
  _QWORD *v166;
  const char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  const char *v171;
  uint64_t v172;
  void *v173;
  const char *v174;
  void *v175;
  const char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  const char *v180;
  uint64_t v181;
  const char *v182;
  id v183;

  v5 = (void *)MEMORY[0x1E0CB37E8];
  DatabaseChanges = objc_msgSend_needsToFetchDatabaseChanges(*(void **)(a1 + 40), a2, a3, a4);
  objc_msgSend_numberWithBool_(v5, v7, DatabaseChanges, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v10, (uint64_t)v9, (uint64_t)CFSTR("needsToFetchDatabaseChanges"));

  v11 = (void *)MEMORY[0x1E0CB37E8];
  v15 = objc_msgSend_needsToSaveDatabaseSubscription(*(void **)(a1 + 40), v12, v13, v14);
  objc_msgSend_numberWithBool_(v11, v16, v15, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v19, (uint64_t)v18, (uint64_t)CFSTR("needsToSaveDatabaseSubscription"));

  if (objc_msgSend_hasPendingUntrackedChanges(*(void **)(a1 + 40), v20, v21, v22))
  {
    v26 = (void *)MEMORY[0x1E0CB37E8];
    hasPendingUntrackedChanges = objc_msgSend_hasPendingUntrackedChanges(*(void **)(a1 + 40), v23, v24, v25);
    objc_msgSend_numberWithBool_(v26, v28, hasPendingUntrackedChanges, v29);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v31, (uint64_t)v30, (uint64_t)CFSTR("hasPendingUntrackedChanges"));

  }
  if (objc_msgSend_hasInFlightUntrackedChanges(*(void **)(a1 + 40), v23, v24, v25))
  {
    v35 = (void *)MEMORY[0x1E0CB37E8];
    v36 = objc_msgSend_hasInFlightUntrackedChanges(*(void **)(a1 + 40), v32, v33, v34);
    objc_msgSend_numberWithBool_(v35, v37, v36, v38);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v40, (uint64_t)v39, (uint64_t)CFSTR("hasInFlightUntrackedChanges"));

  }
  v41 = *(void **)(a1 + 32);
  objc_msgSend_serverChangeTokenForDatabase(*(void **)(a1 + 40), v32, v33, v34);
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_CKAddPropertySafelyForKey_value_(v41, v43, (uint64_t)CFSTR("serverChangeTokenForDatabase"), (uint64_t)v42);

  if ((objc_msgSend_didPerformInitialUserRecordIDFetch(*(void **)(a1 + 40), v44, v45, v46) & 1) == 0)
  {
    v50 = (void *)MEMORY[0x1E0CB37E8];
    v51 = objc_msgSend_didPerformInitialUserRecordIDFetch(*(void **)(a1 + 40), v47, v48, v49);
    objc_msgSend_numberWithBool_(v50, v52, v51, v53);
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v55, (uint64_t)v54, (uint64_t)CFSTR("didPerformInitialUserRecordIDFetch"));

  }
  v56 = *(void **)(a1 + 32);
  objc_msgSend_lastFetchDatabaseChangesDate(*(void **)(a1 + 40), v47, v48, v49);
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_CKAddPropertySafelyForKey_value_(v56, v58, (uint64_t)CFSTR("lastFetchDatabaseChangesDate"), (uint64_t)v57);

  v59 = *(void **)(a1 + 32);
  objc_msgSend_existingDatabaseSubscriptionID(*(void **)(a1 + 40), v60, v61, v62);
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_CKAddPropertySafelyForKey_value_(v59, v64, (uint64_t)CFSTR("existingDatabaseSubscriptionID"), (uint64_t)v63);

  v65 = *(void **)(a1 + 32);
  objc_msgSend_lastKnownUserRecordID(*(void **)(a1 + 40), v66, v67, v68);
  v69 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_CKDescriptionPropertiesWithPublic_private_shouldExpand_(v69, v70, *(unsigned __int8 *)(a1 + 48), *(unsigned __int8 *)(a1 + 49), *(unsigned __int8 *)(a1 + 50));
  v71 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_CKAddPropertySafelyForKey_value_(v65, v72, (uint64_t)CFSTR("lastKnownUserRecordID"), (uint64_t)v71);

  v73 = *(_QWORD **)(a1 + 40);
  if (*(_BYTE *)(a1 + 50))
  {
    v74 = *(void **)(a1 + 32);
    if (v73)
      v73 = (_QWORD *)v73[8];
    v75 = v73;
    objc_msgSend_array(v75, v76, v77, v78);
    v79 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_CKDescriptionPropertiesWithPublic_private_shouldExpand_(v79, v80, *(unsigned __int8 *)(a1 + 48), *(unsigned __int8 *)(a1 + 49), *(unsigned __int8 *)(a1 + 50));
    v81 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_CKAddPropertySafelyForKey_value_(v74, v82, (uint64_t)CFSTR("zoneIDsWithUnfetchedServerChanges"), (uint64_t)v81);

    v83 = *(void **)(a1 + 32);
    objc_msgSend_mServerChangeTokensByZoneID(*(void **)(a1 + 40), v84, v85, v86);
    v87 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_CKDescriptionPropertiesWithPublic_private_shouldExpand_(v87, v88, *(unsigned __int8 *)(a1 + 48), *(unsigned __int8 *)(a1 + 49), *(unsigned __int8 *)(a1 + 50));
    v89 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_CKAddPropertySafelyForKey_value_(v83, v90, (uint64_t)CFSTR("serverChangeTokensByZoneID"), (uint64_t)v89);

    v92 = *(void **)(a1 + 32);
    v91 = *(_QWORD **)(a1 + 40);
    if (v91)
      v91 = (_QWORD *)v91[10];
    v93 = *(unsigned __int8 *)(a1 + 48);
    v94 = *(unsigned __int8 *)(a1 + 49);
    v95 = *(unsigned __int8 *)(a1 + 50);
    v96 = v91;
    objc_msgSend_CKDescriptionPropertiesWithPublic_private_shouldExpand_(v96, v97, v93, v94, v95);
    v98 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_CKAddPropertySafelyForKey_value_(v92, v99, (uint64_t)CFSTR("pendingRecordZoneChanges"), (uint64_t)v98);

    v103 = *(_QWORD *)(a1 + 40);
    if (v103)
      v104 = objc_msgSend_count(*(void **)(v103 + 88), v100, v101, v102);
    else
      v104 = objc_msgSend_count(0, v100, v101, v102);
    if (v104)
    {
      v106 = *(void **)(a1 + 32);
      v105 = *(_QWORD **)(a1 + 40);
      if (v105)
        v105 = (_QWORD *)v105[11];
      v107 = *(unsigned __int8 *)(a1 + 48);
      v108 = *(unsigned __int8 *)(a1 + 49);
      v109 = *(unsigned __int8 *)(a1 + 50);
      v110 = v105;
      objc_msgSend_CKDescriptionPropertiesWithPublic_private_shouldExpand_(v110, v111, v107, v108, v109);
      v112 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_CKAddPropertySafelyForKey_value_(v106, v113, (uint64_t)CFSTR("inFlightRecordZoneChanges"), (uint64_t)v112);

    }
    v115 = *(void **)(a1 + 32);
    v114 = *(_QWORD **)(a1 + 40);
    if (v114)
      v114 = (_QWORD *)v114[9];
    v116 = *(unsigned __int8 *)(a1 + 48);
    v117 = *(unsigned __int8 *)(a1 + 49);
    v118 = *(unsigned __int8 *)(a1 + 50);
    v119 = v114;
    objc_msgSend_CKDescriptionPropertiesWithPublic_private_shouldExpand_(v119, v120, v116, v117, v118);
    v183 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend_CKAddPropertySafelyForKey_value_(v115, v121, (uint64_t)CFSTR("pendingDatabaseChanges"), (uint64_t)v183);
  }
  else
  {
    v122 = (void *)MEMORY[0x1E0CB37E8];
    if (v73)
      v73 = (_QWORD *)v73[8];
    v123 = v73;
    v127 = objc_msgSend_count(v123, v124, v125, v126);
    objc_msgSend_numberWithUnsignedInteger_(v122, v128, v127, v129);
    v130 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v131, (uint64_t)v130, (uint64_t)CFSTR("zoneIDsWithUnfetchedServerChanges.count"));

    v132 = (void *)MEMORY[0x1E0CB37E8];
    objc_msgSend_mServerChangeTokensByZoneID(*(void **)(a1 + 40), v133, v134, v135);
    v136 = (void *)objc_claimAutoreleasedReturnValue();
    v140 = objc_msgSend_count(v136, v137, v138, v139);
    objc_msgSend_numberWithUnsignedInteger_(v132, v141, v140, v142);
    v143 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v144, (uint64_t)v143, (uint64_t)CFSTR("serverChangeTokensByZoneID.count"));

    v145 = (void *)MEMORY[0x1E0CB37E8];
    v146 = *(_QWORD **)(a1 + 40);
    if (v146)
      v146 = (_QWORD *)v146[10];
    v147 = v146;
    v151 = objc_msgSend_count(v147, v148, v149, v150);
    objc_msgSend_numberWithUnsignedInteger_(v145, v152, v151, v153);
    v154 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v155, (uint64_t)v154, (uint64_t)CFSTR("pendingRecordZoneChanges.count"));

    v159 = *(_QWORD *)(a1 + 40);
    if (v159)
      v160 = objc_msgSend_count(*(void **)(v159 + 88), v156, v157, v158);
    else
      v160 = objc_msgSend_count(0, v156, v157, v158);
    if (v160)
    {
      v164 = (void *)MEMORY[0x1E0CB37E8];
      v165 = *(_QWORD **)(a1 + 40);
      if (v165)
        v165 = (_QWORD *)v165[11];
      v166 = v165;
      v170 = objc_msgSend_count(v166, v167, v168, v169);
      objc_msgSend_numberWithUnsignedInteger_(v164, v171, v170, v172);
      v173 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v174, (uint64_t)v173, (uint64_t)CFSTR("inFlightRecordZoneChanges.count"));

    }
    v175 = (void *)MEMORY[0x1E0CB37E8];
    objc_msgSend_pendingDatabaseChanges(*(void **)(a1 + 40), v161, v162, v163);
    v183 = (id)objc_claimAutoreleasedReturnValue();
    v179 = objc_msgSend_count(v183, v176, v177, v178);
    objc_msgSend_numberWithUnsignedInteger_(v175, v180, v179, v181);
    v119 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v182, (uint64_t)v119, (uint64_t)CFSTR("pendingDatabaseChanges.count"));
  }

}

id sub_18A806F50(uint64_t a1, void *a2)
{
  id v2;
  CKSyncEnginePendingZoneSave *v3;
  CKRecordZone *v4;
  const char *v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  void *v10;

  v2 = a2;
  v3 = [CKSyncEnginePendingZoneSave alloc];
  v4 = [CKRecordZone alloc];
  v7 = (void *)objc_msgSend_initWithZoneID_(v4, v5, (uint64_t)v2, v6);

  v10 = (void *)objc_msgSend_initWithZone_(v3, v8, (uint64_t)v7, v9);
  return v10;
}

id sub_18A806FC0(uint64_t a1, void *a2)
{
  id v2;
  CKSyncEnginePendingZoneDelete *v3;
  const char *v4;
  uint64_t v5;
  void *v6;

  v2 = a2;
  v3 = [CKSyncEnginePendingZoneDelete alloc];
  v6 = (void *)objc_msgSend_initWithZoneID_(v3, v4, (uint64_t)v2, v5);

  return v6;
}

uint64_t sub_18A807004(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18A807014(uint64_t a1)
{

}

void sub_18A807114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A80712C(uint64_t *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  char isSubsetOfSet;
  void *v14;
  void *v15;
  NSObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  NSObject *v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  int v43;
  void *v44;
  __int16 v45;
  uint64_t v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  objc_msgSend_setWithArray_(MEMORY[0x1E0C99E60], a2, a1[4], a4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = a1[5];
  if (v9)
    objc_msgSend_set(*(void **)(v9 + 80), v5, v6, v7);
  else
    objc_msgSend_set(0, v5, v6, v7);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  isSubsetOfSet = objc_msgSend_isSubsetOfSet_(v8, v11, (uint64_t)v10, v12);

  if ((isSubsetOfSet & 1) == 0)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v22 = (void *)ck_log_facility_engine;
    if (os_log_type_enabled((os_log_t)ck_log_facility_engine, OS_LOG_TYPE_DEBUG))
    {
      v36 = (void *)a1[5];
      v37 = v22;
      objc_msgSend_shortDescription(v36, v38, v39, v40);
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      v42 = a1[4];
      v43 = 138543618;
      v44 = v41;
      v45 = 2112;
      v46 = v42;
      _os_log_debug_impl(&dword_18A5C5000, v37, OS_LOG_TYPE_DEBUG, "%{public}@ adding pending record zone changes: %@", (uint8_t *)&v43, 0x16u);

    }
    v25 = (void *)MEMORY[0x1E0C99E60];
    objc_msgSend_recordChangesWithOppositeTypeFromRecordChanges_(CKSyncEnginePendingRecordZoneChange, v23, a1[4], v24);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setWithArray_(v25, v27, (uint64_t)v26, v28);
    v16 = objc_claimAutoreleasedReturnValue();

    v31 = a1[5];
    if (v31)
      objc_msgSend_minusSet_(*(void **)(v31 + 80), v29, (uint64_t)v16, v30);
    else
      objc_msgSend_minusSet_(0, v29, (uint64_t)v16, v30);
    v34 = a1[5];
    if (v34)
      objc_msgSend_addObjectsFromArray_(*(void **)(v34 + 80), v32, a1[4], v33);
    else
      objc_msgSend_addObjectsFromArray_(0, v32, a1[4], v33);
    v35 = a1[5];
    if (v35)
      ++*(_QWORD *)(v35 + 96);
    *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 1;
    goto LABEL_19;
  }
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v14 = (void *)ck_log_facility_engine;
  if (os_log_type_enabled((os_log_t)ck_log_facility_engine, OS_LOG_TYPE_DEBUG))
  {
    v15 = (void *)a1[5];
    v16 = v14;
    objc_msgSend_shortDescription(v15, v17, v18, v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = a1[4];
    v43 = 138543618;
    v44 = v20;
    v45 = 2112;
    v46 = v21;
    _os_log_debug_impl(&dword_18A5C5000, v16, OS_LOG_TYPE_DEBUG, "%{public}@ no new record zone changes to add: %@", (uint8_t *)&v43, 0x16u);

LABEL_19:
  }

}

void sub_18A807488(uint64_t a1)
{
  void *v2;
  id v3;
  const char *v4;
  uint64_t v5;
  void *v6;
  int v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  const char *v42;
  uint64_t v43;
  void *v44;
  const char *v45;
  uint64_t v46;
  void *v47;
  const char *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  const char *v61;
  void *v62;
  const char *v63;
  uint64_t v64;
  void *v65;
  NSObject *v66;
  const char *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  int v71;
  uint64_t v72;
  void *v73;
  NSObject *v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  void *v79;
  NSObject *v80;
  const char *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  int v85;
  void *v86;
  __int16 v87;
  _WORD v88[17];

  *(_QWORD *)&v88[13] = *MEMORY[0x1E0C80C00];
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v2 = (void *)ck_log_facility_engine;
  if (os_log_type_enabled((os_log_t)ck_log_facility_engine, OS_LOG_TYPE_DEBUG))
  {
    v65 = *(void **)(a1 + 32);
    v66 = v2;
    objc_msgSend_shortDescription(v65, v67, v68, v69);
    v70 = (void *)objc_claimAutoreleasedReturnValue();
    v71 = *(unsigned __int8 *)(a1 + 48);
    v72 = *(_QWORD *)(a1 + 40);
    v85 = 138543874;
    v86 = v70;
    v87 = 1024;
    *(_DWORD *)v88 = v71;
    v88[2] = 2112;
    *(_QWORD *)&v88[3] = v72;
    _os_log_debug_impl(&dword_18A5C5000, v66, OS_LOG_TYPE_DEBUG, "%{public}@ marking record zone changes inFlight=%d: %@", (uint8_t *)&v85, 0x1Cu);

  }
  v3 = objc_alloc(MEMORY[0x1E0C99E10]);
  v6 = (void *)objc_msgSend_initWithArray_(v3, v4, *(_QWORD *)(a1 + 40), v5);
  v7 = *(unsigned __int8 *)(a1 + 48);
  v13 = objc_msgSend_count(v6, v8, v9, v10);
  v14 = *(_QWORD *)(a1 + 32);
  if (v7)
  {
    if (v14)
      objc_msgSend_intersectOrderedSet_(v6, v11, *(_QWORD *)(v14 + 80), v12);
    else
      objc_msgSend_intersectOrderedSet_(v6, v11, 0, v12);
    v18 = objc_msgSend_count(v6, v15, v16, v17);
    v21 = v18 - v13;
    if (v18 != v13)
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v22 = (void *)ck_log_facility_engine;
      if (os_log_type_enabled((os_log_t)ck_log_facility_engine, OS_LOG_TYPE_DEBUG))
      {
        v73 = *(void **)(a1 + 32);
        v74 = v22;
        objc_msgSend_shortDescription(v73, v75, v76, v77);
        v78 = (void *)objc_claimAutoreleasedReturnValue();
        v85 = 138543618;
        v86 = v78;
        v87 = 2048;
        *(_QWORD *)v88 = v21;
        _os_log_debug_impl(&dword_18A5C5000, v74, OS_LOG_TYPE_DEBUG, "%{public}@ trying to mark %ld changes in flight that aren't pending", (uint8_t *)&v85, 0x16u);

      }
    }
    v23 = *(_QWORD *)(a1 + 32);
    if (v23)
      objc_msgSend_minusOrderedSet_(*(void **)(v23 + 80), v19, (uint64_t)v6, v20);
    else
      objc_msgSend_minusOrderedSet_(0, v19, (uint64_t)v6, v20);
    v26 = *(_QWORD *)(a1 + 32);
    if (v26)
      objc_msgSend_unionOrderedSet_(*(void **)(v26 + 88), v24, (uint64_t)v6, v25);
    else
      objc_msgSend_unionOrderedSet_(0, v24, (uint64_t)v6, v25);
  }
  else
  {
    if (v14)
      objc_msgSend_intersectOrderedSet_(v6, v11, *(_QWORD *)(v14 + 88), v12);
    else
      objc_msgSend_intersectOrderedSet_(v6, v11, 0, v12);
    v30 = objc_msgSend_count(v6, v27, v28, v29);
    v33 = v30 - v13;
    if (v30 != v13)
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v34 = (void *)ck_log_facility_engine;
      if (os_log_type_enabled((os_log_t)ck_log_facility_engine, OS_LOG_TYPE_DEBUG))
      {
        v79 = *(void **)(a1 + 32);
        v80 = v34;
        objc_msgSend_shortDescription(v79, v81, v82, v83);
        v84 = (void *)objc_claimAutoreleasedReturnValue();
        v85 = 138543618;
        v86 = v84;
        v87 = 2048;
        *(_QWORD *)v88 = v33;
        _os_log_debug_impl(&dword_18A5C5000, v80, OS_LOG_TYPE_DEBUG, "%{public}@ trying to mark %ld changes as no longer in flight that aren't in flight", (uint8_t *)&v85, 0x16u);

      }
    }
    v35 = *(_QWORD *)(a1 + 32);
    if (v35)
      objc_msgSend_minusOrderedSet_(*(void **)(v35 + 88), v31, (uint64_t)v6, v32);
    else
      objc_msgSend_minusOrderedSet_(0, v31, (uint64_t)v6, v32);
    v39 = (void *)MEMORY[0x1E0C99E60];
    v40 = *(_QWORD *)(a1 + 32);
    if (v40)
      objc_msgSend_array(*(void **)(v40 + 80), v36, v37, v38);
    else
      objc_msgSend_array(0, v36, v37, v38);
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_recordChangesWithOppositeTypeFromRecordChanges_(CKSyncEnginePendingRecordZoneChange, v42, (uint64_t)v41, v43);
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setWithArray_(v39, v45, (uint64_t)v44, v46);
    v47 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend_minusSet_(v6, v48, (uint64_t)v47, v49);
    v50 = *(_QWORD **)(a1 + 32);
    if (v50)
      v50 = (_QWORD *)v50[10];
    v51 = v50;
    objc_msgSend_array(v6, v52, v53, v54);
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    v56 = (void *)MEMORY[0x1E0CB36B8];
    v60 = objc_msgSend_count(v6, v57, v58, v59);
    objc_msgSend_indexSetWithIndexesInRange_(v56, v61, 0, v60);
    v62 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_insertObjects_atIndexes_(v51, v63, (uint64_t)v55, (uint64_t)v62);

  }
  v64 = *(_QWORD *)(a1 + 32);
  if (v64)
    ++*(_QWORD *)(v64 + 96);

}

void sub_18A8078BC(uint64_t *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  int v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  void *v27;
  __int16 v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  objc_msgSend_setWithArray_(MEMORY[0x1E0C99E60], a2, a1[4], a4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = a1[5];
  if (v9)
    objc_msgSend_set(*(void **)(v9 + 80), v5, v6, v7);
  else
    objc_msgSend_set(0, v5, v6, v7);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_msgSend_intersectsSet_(v8, v11, (uint64_t)v10, v12);

  if (v13)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v14 = (void *)ck_log_facility_engine;
    if (os_log_type_enabled((os_log_t)ck_log_facility_engine, OS_LOG_TYPE_DEFAULT))
    {
      v17 = (void *)a1[5];
      v18 = v14;
      objc_msgSend_shortDescription(v17, v19, v20, v21);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = a1[4];
      v26 = 138543618;
      v27 = v22;
      v28 = 2112;
      v29 = v23;
      _os_log_impl(&dword_18A5C5000, v18, OS_LOG_TYPE_DEFAULT, "%{public}@ removing pending record zone changes: %@", (uint8_t *)&v26, 0x16u);

    }
    v24 = a1[5];
    if (v24)
      objc_msgSend_minusSet_(*(void **)(v24 + 80), v15, (uint64_t)v8, v16);
    else
      objc_msgSend_minusSet_(0, v15, (uint64_t)v8, v16);
    v25 = a1[5];
    if (v25)
      ++*(_QWORD *)(v25 + 96);
    *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 1;
  }

}

uint64_t sub_18A807B10(uint64_t a1)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  int v15;
  void *v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v2 = (void *)ck_log_facility_engine;
  if (os_log_type_enabled((os_log_t)ck_log_facility_engine, OS_LOG_TYPE_DEBUG))
  {
    v8 = *(void **)(a1 + 32);
    v9 = v2;
    objc_msgSend_shortDescription(v8, v10, v11, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = *(_QWORD *)(a1 + 40);
    v15 = 138543618;
    v16 = v13;
    v17 = 2112;
    v18 = v14;
    _os_log_debug_impl(&dword_18A5C5000, v9, OS_LOG_TYPE_DEBUG, "%{public}@ removing in flight record zone changes: %@", (uint8_t *)&v15, 0x16u);

  }
  v5 = *(_QWORD *)(a1 + 32);
  if (v5)
    result = objc_msgSend_removeObjectsInArray_(*(void **)(v5 + 88), v3, *(_QWORD *)(a1 + 40), v4);
  else
    result = objc_msgSend_removeObjectsInArray_(0, v3, *(_QWORD *)(a1 + 40), v4);
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    ++*(_QWORD *)(v7 + 96);
  return result;
}

void sub_18A807D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A807D50(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = (_QWORD *)a1[4];
  if (v2)
    v2 = (_QWORD *)v2[11];
  v3 = a1[5];
  v6 = v2;
  *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = objc_msgSend_containsObject_(v6, v4, v3, v5);

}

void sub_18A807E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A807EA4(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = (_QWORD *)a1[4];
  if (v2)
    v2 = (_QWORD *)v2[10];
  v3 = a1[5];
  v6 = v2;
  *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = objc_msgSend_containsObject_(v6, v4, v3, v5);

}

void sub_18A80807C(uint64_t a1)
{
  void *v2;
  id v3;
  const char *v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  void *v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  NSObject *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint8_t v36[128];
  uint8_t buf[4];
  void *v38;
  __int16 v39;
  uint64_t v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v2 = (void *)ck_log_facility_engine;
  if (os_log_type_enabled((os_log_t)ck_log_facility_engine, OS_LOG_TYPE_DEBUG))
  {
    v25 = *(void **)(a1 + 32);
    v26 = v2;
    objc_msgSend_shortDescription(v25, v27, v28, v29);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    v31 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)buf = 138543618;
    v38 = v30;
    v39 = 2112;
    v40 = v31;
    _os_log_debug_impl(&dword_18A5C5000, v26, OS_LOG_TYPE_DEBUG, "%{public}@ setting pending record zone changes: %@", buf, 0x16u);

  }
  v3 = objc_alloc(MEMORY[0x1E0C99E10]);
  v6 = (void *)objc_msgSend_initWithArray_(v3, v4, *(_QWORD *)(a1 + 40), v5);
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  objc_msgSend_reverseObjectEnumerator(*(void **)(a1 + 40), v7, v8, v9, 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v11, (uint64_t)&v32, (uint64_t)v36, 16);
  if (v12)
  {
    v15 = v12;
    v16 = *(_QWORD *)v33;
    do
    {
      for (i = 0; i != v15; ++i)
      {
        if (*(_QWORD *)v33 != v16)
          objc_enumerationMutation(v10);
        v18 = *(void **)(*((_QWORD *)&v32 + 1) + 8 * i);
        if (objc_msgSend_containsObject_(v6, v13, (uint64_t)v18, v14))
        {
          objc_msgSend_oppositeTypeChange(v18, v13, v19, v14);
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_removeObject_(v6, v21, (uint64_t)v20, v22);

        }
      }
      v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v13, (uint64_t)&v32, (uint64_t)v36, 16);
    }
    while (v15);
  }

  v23 = *(_QWORD *)(a1 + 32);
  v24 = *(void **)(v23 + 80);
  *(_QWORD *)(v23 + 80) = v6;

}

void sub_18A80835C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A808374(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;

  v2 = *(_QWORD **)(a1 + 32);
  if (v2)
    v2 = (_QWORD *)v2[11];
  v3 = v2;
  objc_msgSend_array(v3, v4, v5, v6);
  v13 = (id)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend_copy(v13, v7, v8, v9);
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v12 = *(void **)(v11 + 40);
  *(_QWORD *)(v11 + 40) = v10;

}

uint64_t sub_18A808440(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  const char *v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  const char *v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  int v27;
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v2 = (void *)ck_log_facility_engine;
  if (os_log_type_enabled((os_log_t)ck_log_facility_engine, OS_LOG_TYPE_INFO))
  {
    v3 = *(void **)(a1 + 32);
    v4 = v2;
    objc_msgSend_shortDescription(v3, v5, v6, v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = 138543362;
    v28 = v8;
    _os_log_impl(&dword_18A5C5000, v4, OS_LOG_TYPE_INFO, "%{public}@ moving in flight changes to pending", (uint8_t *)&v27, 0xCu);

  }
  v9 = *(_QWORD *)(a1 + 32);
  if (v9)
  {
    v10 = *(void **)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 88);
  }
  else
  {
    v10 = 0;
    v11 = 0;
  }
  v12 = v10;
  objc_msgSend_unionOrderedSet_(v12, v13, v11, v14);

  v18 = *(_QWORD *)(a1 + 32);
  if (v18)
    objc_msgSend_removeAllObjects(*(void **)(v18 + 88), v15, v16, v17);
  else
    objc_msgSend_removeAllObjects(0, v15, v16, v17);
  result = objc_msgSend_hasInFlightUntrackedChanges(*(void **)(a1 + 32), v19, v20, v21);
  if ((_DWORD)result)
  {
    objc_msgSend_setHasPendingUntrackedChanges_(*(void **)(a1 + 32), v23, 1, v24);
    return objc_msgSend_setHasInFlightUntrackedChanges_(*(void **)(a1 + 32), v25, 0, v26);
  }
  return result;
}

void sub_18A80867C(_QWORD *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  const char *v10;
  void *v11;
  NSObject *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  int v23;
  void *v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  objc_msgSend_objectForKeyedSubscript_(*(void **)(a1[4] + 32), a2, a1[5], a4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)a1[6];
  if (v8 != v7 && (objc_msgSend_isEqual_(v8, v5, (uint64_t)v7, v6) & 1) == 0)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v9 = (void *)ck_log_facility_engine;
    if (os_log_type_enabled((os_log_t)ck_log_facility_engine, OS_LOG_TYPE_INFO))
    {
      v11 = (void *)a1[4];
      v12 = v9;
      objc_msgSend_shortDescription(v11, v13, v14, v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = a1[6];
      objc_msgSend_ckShortDescription((void *)a1[5], v18, v19, v20);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = 138543874;
      v24 = v16;
      v25 = 2112;
      v26 = v17;
      v27 = 2112;
      v28 = v21;
      _os_log_impl(&dword_18A5C5000, v12, OS_LOG_TYPE_INFO, "%{public}@ setting server change token %@ for zone ID %@", (uint8_t *)&v23, 0x20u);

    }
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1[4] + 32), v10, a1[6], a1[5]);
    v22 = a1[4];
    if (v22)
      ++*(_QWORD *)(v22 + 96);
  }

}

void sub_18A808908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A808920(_QWORD *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  objc_msgSend_objectForKeyedSubscript_(*(void **)(a1[4] + 32), a2, a1[5], a4);
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = *(_QWORD *)(a1[6] + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_18A808A44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A808A5C(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = (_QWORD *)a1[4];
  if (v2)
    v2 = (_QWORD *)v2[8];
  v3 = a1[5];
  v6 = v2;
  *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = objc_msgSend_containsObject_(v6, v4, v3, v5);

}

void sub_18A808C34(uint64_t a1)
{
  void *v2;
  id v3;
  const char *v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  void *v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  NSObject *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint8_t v36[128];
  uint8_t buf[4];
  void *v38;
  __int16 v39;
  uint64_t v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  if (ck_log_initialization_predicate != -1)
    dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
  v2 = (void *)ck_log_facility_engine;
  if (os_log_type_enabled((os_log_t)ck_log_facility_engine, OS_LOG_TYPE_DEBUG))
  {
    v25 = *(void **)(a1 + 32);
    v26 = v2;
    objc_msgSend_shortDescription(v25, v27, v28, v29);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    v31 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)buf = 138543618;
    v38 = v30;
    v39 = 2112;
    v40 = v31;
    _os_log_debug_impl(&dword_18A5C5000, v26, OS_LOG_TYPE_DEBUG, "%{public}@ setting pending zone changes: %@", buf, 0x16u);

  }
  v3 = objc_alloc(MEMORY[0x1E0C99E10]);
  v6 = (void *)objc_msgSend_initWithArray_(v3, v4, *(_QWORD *)(a1 + 40), v5);
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  objc_msgSend_reverseObjectEnumerator(*(void **)(a1 + 40), v7, v8, v9, 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v11, (uint64_t)&v32, (uint64_t)v36, 16);
  if (v12)
  {
    v15 = v12;
    v16 = *(_QWORD *)v33;
    do
    {
      for (i = 0; i != v15; ++i)
      {
        if (*(_QWORD *)v33 != v16)
          objc_enumerationMutation(v10);
        v18 = *(void **)(*((_QWORD *)&v32 + 1) + 8 * i);
        if (objc_msgSend_containsObject_(v6, v13, (uint64_t)v18, v14))
        {
          objc_msgSend_oppositeTypeChange(v18, v13, v19, v14);
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_removeObject_(v6, v21, (uint64_t)v20, v22);

        }
      }
      v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v13, (uint64_t)&v32, (uint64_t)v36, 16);
    }
    while (v15);
  }

  v23 = *(_QWORD *)(a1 + 32);
  v24 = *(void **)(v23 + 72);
  *(_QWORD *)(v23 + 72) = v6;

}

void sub_18A809008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A809028(uint64_t *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  char isSubsetOfSet;
  void *v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  const char *v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  void *v37;
  __int16 v38;
  uint64_t v39;
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  objc_msgSend_setWithArray_(MEMORY[0x1E0C99E60], a2, a1[4], a4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = a1[5];
  if (v9)
    objc_msgSend_set(*(void **)(v9 + 72), v5, v6, v7);
  else
    objc_msgSend_set(0, v5, v6, v7);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  isSubsetOfSet = objc_msgSend_isSubsetOfSet_(v8, v11, (uint64_t)v10, v12);

  if ((isSubsetOfSet & 1) == 0)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v14 = (void *)ck_log_facility_engine;
    if (os_log_type_enabled((os_log_t)ck_log_facility_engine, OS_LOG_TYPE_DEFAULT))
    {
      v17 = (void *)a1[5];
      v18 = v14;
      objc_msgSend_shortDescription(v17, v19, v20, v21);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = a1[4];
      v36 = 138543618;
      v37 = v22;
      v38 = 2112;
      v39 = v23;
      _os_log_impl(&dword_18A5C5000, v18, OS_LOG_TYPE_DEFAULT, "%{public}@ adding pending database changes: %@", (uint8_t *)&v36, 0x16u);

    }
    v24 = (void *)MEMORY[0x1E0C99E60];
    objc_msgSend_databaseChangesWithOppositeTypeFromDatabaseChanges_(CKSyncEnginePendingDatabaseChange, v15, a1[4], v16);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setWithArray_(v24, v26, (uint64_t)v25, v27);
    v28 = (void *)objc_claimAutoreleasedReturnValue();

    v31 = a1[5];
    if (v31)
      objc_msgSend_minusSet_(*(void **)(v31 + 72), v29, (uint64_t)v28, v30);
    else
      objc_msgSend_minusSet_(0, v29, (uint64_t)v28, v30);
    v34 = a1[5];
    if (v34)
      objc_msgSend_addObjectsFromArray_(*(void **)(v34 + 72), v32, a1[4], v33);
    else
      objc_msgSend_addObjectsFromArray_(0, v32, a1[4], v33);
    v35 = a1[5];
    if (v35)
      ++*(_QWORD *)(v35 + 96);
    *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 1;

  }
}

void sub_18A8093F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A809410(uint64_t *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  int v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  void *v27;
  __int16 v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  objc_msgSend_setWithArray_(MEMORY[0x1E0C99E60], a2, a1[4], a4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = a1[5];
  if (v9)
    objc_msgSend_set(*(void **)(v9 + 72), v5, v6, v7);
  else
    objc_msgSend_set(0, v5, v6, v7);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_msgSend_intersectsSet_(v8, v11, (uint64_t)v10, v12);

  if (v13)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v14 = (void *)ck_log_facility_engine;
    if (os_log_type_enabled((os_log_t)ck_log_facility_engine, OS_LOG_TYPE_DEFAULT))
    {
      v17 = (void *)a1[5];
      v18 = v14;
      objc_msgSend_shortDescription(v17, v19, v20, v21);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = a1[4];
      v26 = 138543618;
      v27 = v22;
      v28 = 2112;
      v29 = v23;
      _os_log_impl(&dword_18A5C5000, v18, OS_LOG_TYPE_DEFAULT, "%{public}@ removing pending database changes: %@", (uint8_t *)&v26, 0x16u);

    }
    v24 = a1[5];
    if (v24)
      objc_msgSend_minusSet_(*(void **)(v24 + 72), v15, (uint64_t)v8, v16);
    else
      objc_msgSend_minusSet_(0, v15, (uint64_t)v8, v16);
    v25 = a1[5];
    if (v25)
      ++*(_QWORD *)(v25 + 96);
    *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 1;
  }

}

void sub_18A8098A8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  int v10;
  int v11;
  void *v12;
  __int16 v13;
  int v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  if (*(unsigned __int8 *)(a1 + 40) != *(unsigned __int8 *)(*(_QWORD *)(a1 + 32) + 9))
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v2 = (void *)ck_log_facility_engine;
    if (os_log_type_enabled((os_log_t)ck_log_facility_engine, OS_LOG_TYPE_DEBUG))
    {
      v4 = *(void **)(a1 + 32);
      v5 = v2;
      objc_msgSend_shortDescription(v4, v6, v7, v8);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = *(unsigned __int8 *)(a1 + 40);
      v11 = 138543618;
      v12 = v9;
      v13 = 1024;
      v14 = v10;
      _os_log_debug_impl(&dword_18A5C5000, v5, OS_LOG_TYPE_DEBUG, "%{public}@ setting needs to save database subscription %d", (uint8_t *)&v11, 0x12u);

    }
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 9) = *(_BYTE *)(a1 + 40);
    v3 = *(_QWORD *)(a1 + 32);
    if (v3)
      ++*(_QWORD *)(v3 + 96);
  }
}

void sub_18A809A94(uint64_t a1)
{
  id v2;
  const char *v3;
  uint64_t v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  NSObject *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  int v23;
  void *v24;
  __int16 v25;
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 24);
  if ((objc_msgSend_isEqual_(*(void **)(a1 + 40), v3, (uint64_t)v2, v4) & 1) == 0)
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v5 = (void *)ck_log_facility_engine;
    if (os_log_type_enabled((os_log_t)ck_log_facility_engine, OS_LOG_TYPE_DEFAULT))
    {
      v9 = *(void **)(a1 + 32);
      v10 = v5;
      objc_msgSend_shortDescription(v9, v11, v12, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_recordName(*(void **)(a1 + 40), v15, v16, v17);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = 138543618;
      v24 = v14;
      v25 = 2112;
      v26 = v18;
      _os_log_impl(&dword_18A5C5000, v10, OS_LOG_TYPE_DEFAULT, "%{public}@ setting lastKnownUserRecordID %@", (uint8_t *)&v23, 0x16u);

    }
    v19 = objc_msgSend_copy(*(void **)(a1 + 40), v6, v7, v8);
    v20 = *(_QWORD *)(a1 + 32);
    v21 = *(void **)(v20 + 24);
    *(_QWORD *)(v20 + 24) = v19;

    v22 = *(_QWORD *)(a1 + 32);
    if (v22)
      ++*(_QWORD *)(v22 + 96);
  }

}

void sub_18A809CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A809CE4(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  int v9;
  uint64_t v10;
  int v11;
  void *v12;
  __int16 v13;
  int v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(*(_QWORD *)(a1 + 32) + 11))
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v2 = (void *)ck_log_facility_engine;
    if (os_log_type_enabled((os_log_t)ck_log_facility_engine, OS_LOG_TYPE_DEFAULT))
    {
      v3 = *(void **)(a1 + 32);
      v4 = v2;
      objc_msgSend_shortDescription(v3, v5, v6, v7);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = *(unsigned __int8 *)(a1 + 48);
      v11 = 138543618;
      v12 = v8;
      v13 = 1024;
      v14 = v9;
      _os_log_impl(&dword_18A5C5000, v4, OS_LOG_TYPE_DEFAULT, "%{public}@ setting has pending untracked changes %d", (uint8_t *)&v11, 0x12u);

    }
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 11) = *(_BYTE *)(a1 + 48);
    v10 = *(_QWORD *)(a1 + 32);
    if (v10)
      ++*(_QWORD *)(v10 + 96);
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = *(_BYTE *)(a1 + 48);
  }
}

void sub_18A809EB0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  int v10;
  int v11;
  void *v12;
  __int16 v13;
  int v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  if (*(unsigned __int8 *)(a1 + 40) != *(unsigned __int8 *)(*(_QWORD *)(a1 + 32) + 12))
  {
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v2 = (void *)ck_log_facility_engine;
    if (os_log_type_enabled((os_log_t)ck_log_facility_engine, OS_LOG_TYPE_DEBUG))
    {
      v4 = *(void **)(a1 + 32);
      v5 = v2;
      objc_msgSend_shortDescription(v4, v6, v7, v8);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = *(unsigned __int8 *)(a1 + 40);
      v11 = 138543618;
      v12 = v9;
      v13 = 1024;
      v14 = v10;
      _os_log_debug_impl(&dword_18A5C5000, v5, OS_LOG_TYPE_DEBUG, "%{public}@ setting has in-flight untracked changes %d", (uint8_t *)&v11, 0x12u);

    }
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 12) = *(_BYTE *)(a1 + 40);
    v3 = *(_QWORD *)(a1 + 32);
    if (v3)
      ++*(_QWORD *)(v3 + 96);
  }
}

void sub_18A80A08C(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 48), *(id *)(a1 + 40));
}

BOOL CKSyncEnginePendingRecordZoneChangeTypeOpposite(uint64_t a1)
{
  return a1 == 0;
}

const __CFString *CKSyncEnginePendingRecordZoneChangeTypeString(uint64_t a1)
{
  if (a1)
    return CFSTR("Delete");
  else
    return CFSTR("Save");
}

uint64_t sub_18A80A4CC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_oppositeTypeChange(a2, (const char *)a2, a3, a4);
}

BOOL CKSyncEnginePendingDatabaseChangeTypeOpposite(uint64_t a1)
{
  return a1 == 0;
}

const __CFString *CKSyncEnginePendingDatabaseChangeTypeString(uint64_t a1)
{
  if (a1)
    return CFSTR("Delete");
  else
    return CFSTR("Save");
}

uint64_t sub_18A80A97C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend_oppositeTypeChange(a2, (const char *)a2, a3, a4);
}

id sub_18A80B08C(void *a1)
{
  const char *v2;
  uint64_t v3;

  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend_CKShortDescriptionRedact_(a1, v2, 1, v3);
  else
    objc_msgSend_stringWithFormat_(MEMORY[0x1E0CB3940], v2, (uint64_t)CFSTR("<%@: %p>"), v3, a1, a1);
  return (id)objc_claimAutoreleasedReturnValue();
}

uint64_t sub_18A80B0F0(void *a1, const char *a2, uint64_t a3)
{
  return objc_msgSend_CKObjectDescriptionRedact_avoidShortDescription_(a1, a2, a3, 0);
}

id sub_18A80B220(uint64_t a1, void *a2, void *a3)
{
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v4 = a2;
  if (objc_msgSend_BOOLValue(a3, v5, v6, v7))
    v8 = v4;
  else
    v8 = 0;
  v9 = v8;

  return v9;
}

uint64_t sub_18A80B2C4(uint64_t a1, const char *a2, uint64_t a3)
{
  return objc_msgSend__propertyDescriptionForProperty_shouldRedact_(*(void **)(a1 + 32), a2, a3, *(unsigned __int8 *)(a1 + 40));
}

__CFString *sub_18A80B97C(uint64_t a1, const char *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  __CFString *v5;

  if ((a3 & 1) != 0)
  {
    v5 = CFSTR("<private>");
  }
  else
  {
    objc_msgSend_localizedStringFromPersonNameComponents_style_options_(MEMORY[0x1E0CB3858], a2, a1, 1, 0, v3, v4);
    v5 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v5;
}

void sub_18A80B9BC(void *a1, uint64_t a2, void *a3)
{
  id v4;
  const char *v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  NSString *v12;
  SEL v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  const char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend_setPrintAsDictionary_(v4, v5, 1, v6);
  v21 = 0u;
  v22 = 0u;
  v19 = 0u;
  v20 = 0u;
  v8 = objc_msgSend_countByEnumeratingWithState_objects_count_(&unk_1E1FC4370, v7, (uint64_t)&v19, (uint64_t)v23, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v20;
    do
    {
      for (i = 0; i != v9; ++i)
      {
        if (*(_QWORD *)v20 != v10)
          objc_enumerationMutation(&unk_1E1FC4370);
        v12 = *(NSString **)(*((_QWORD *)&v19 + 1) + 8 * i);
        v13 = NSSelectorFromString(v12);
        v16 = objc_msgSend_performSelector_(a1, v14, (uint64_t)v13, v15);
        objc_msgSend_addProperty_value_shouldRedact_(v4, v17, (uint64_t)v12, v16, 1);
      }
      v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(&unk_1E1FC4370, v18, (uint64_t)&v19, (uint64_t)v23, 16);
    }
    while (v9);
  }

}

void sub_18A80C178()
{
  CKRecordZoneID *v0;
  const char *v1;
  id v2;
  void *v3;
  id v4;

  v0 = [CKRecordZoneID alloc];
  v4 = (id)objc_msgSend_initWithZoneName_ownerName_(v0, v1, (uint64_t)CFSTR("_systemZone"), (uint64_t)CFSTR("__defaultOwner__"));
  v2 = sub_18A5F8D5C([CKRecordZone alloc], v4, 0);
  v3 = (void *)qword_1ECD96F38;
  qword_1ECD96F38 = (uint64_t)v2;

}

void sub_18A80C614(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A80C684(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A80C838(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A80D914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A80D92C(uint64_t result, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = 1;
  *a4 = 1;
  return result;
}

void sub_18A80DF70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18A80DF88(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18A80DF98(uint64_t a1)
{

}

void sub_18A80DFA0(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  void *v8;
  id v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  const char *v16;
  uint64_t v17;
  id v18;
  _QWORD v19[4];
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v7 = a2;
  v8 = *(void **)(a1 + 32);
  v9 = a3;
  objc_msgSend_objectForKey_(v8, v10, (uint64_t)v7, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 3221225472;
  v19[2] = sub_18A80E0B0;
  v19[3] = &unk_1E1F66738;
  v20 = v12;
  v21 = v7;
  v26 = *(_BYTE *)(a1 + 56);
  v22 = *(id *)(a1 + 40);
  v13 = *(id *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 48);
  v23 = v13;
  v24 = v14;
  v25 = a4;
  v15 = v12;
  v18 = v7;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v9, v16, (uint64_t)v19, v17);

}

void sub_18A80E0B0(uint64_t a1, void *a2, void *a3, _BYTE *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  id v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  const char *v41;
  void *v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  const char *v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const char *v56;
  uint64_t v57;
  const char *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  const char *v66;
  void *v67;
  void *v68;
  NSObject *v69;
  const char *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint8_t buf[4];
  void *v78;
  __int16 v79;
  id v80;
  uint64_t v81;

  v81 = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v8 = a3;
  v9 = v7;
  v10 = v8;
  objc_msgSend_assetContent(v10, v11, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v14)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v15 = *(id *)(a1 + 32);
      if (objc_msgSend_integerValue(v9, v16, v17, v18) < 0
        || (v22 = objc_msgSend_integerValue(v9, v19, v20, v21), v22 >= objc_msgSend_count(v15, v23, v24, v25)))
      {
        objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v19, (uint64_t)CFSTR("CKErrorDomain"), 1, CFSTR("arrayIndex out of bounds"));
        v46 = (id)objc_claimAutoreleasedReturnValue();

        if (v46)
        {
          v31 = 0;
          goto LABEL_24;
        }
        goto LABEL_16;
      }
      v28 = objc_msgSend_integerValue(v9, v19, v26, v27);
      objc_msgSend_objectAtIndexedSubscript_(v15, v29, v28, v30);
      v31 = (id)objc_claimAutoreleasedReturnValue();

      if (!v31)
      {
LABEL_16:
        objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v32, (uint64_t)CFSTR("CKInternalErrorDomain"), 1, CFSTR("Record has orphaned asset content for field %@"), *(_QWORD *)(a1 + 40));
        v46 = (id)objc_claimAutoreleasedReturnValue();
        v31 = 0;
        if (!v46)
          goto LABEL_29;
        goto LABEL_24;
      }
    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
        goto LABEL_16;
      v31 = *(id *)(a1 + 32);
      if (!v31)
        goto LABEL_16;
    }
    objc_msgSend_signature(v31, v32, v33, v34);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    v39 = v35;
    if (!*(_BYTE *)(a1 + 80))
    {

      v39 = 0;
    }
    objc_msgSend_verificationKey(v31, v36, v37, v38);
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    v76 = 0;
    objc_msgSend_assetContentWithExpectedSignature_verificationKey_error_(v10, v41, (uint64_t)v39, (uint64_t)v40, &v76);
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    v46 = v76;
    if (__sTestOverridesAvailable
      && objc_msgSend_shouldFailInMemoryAssets(*(void **)(a1 + 48), v43, v44, v45))
    {
      objc_msgSend_setAssetContent_(v31, v43, 0, v45);

      objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v47, (uint64_t)CFSTR("CKErrorDomain"), 4, &stru_1E1F66ED0);
      v42 = v46;
      v46 = (id)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      if (!v42)
        goto LABEL_23;
      v48 = objc_msgSend_length(v42, v43, v44, v45);
      if (v48 == objc_msgSend_size(v31, v49, v50, v51))
      {
        objc_msgSend_assetContent(v10, v52, v53, v54);
        v55 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_setAssetContent_(v31, v56, (uint64_t)v55, v57);

      }
      else
      {
        v74 = objc_msgSend_size(v31, v52, v53, v54);
        objc_msgSend_assetContent(v31, v58, v59, v60);
        v61 = (void *)objc_claimAutoreleasedReturnValue();
        v65 = objc_msgSend_length(v61, v62, v63, v64);
        objc_msgSend_errorWithDomain_code_format_(CKPrettyError, v66, (uint64_t)CFSTR("CKInternalErrorDomain"), 1, CFSTR("asset size differs; got %llu expected %lu"),
          v74,
          v65);
        v75 = objc_claimAutoreleasedReturnValue();

        v46 = (id)v75;
      }
    }

LABEL_23:
    if (!v46)
    {
LABEL_29:

      goto LABEL_30;
    }
LABEL_24:
    if (ck_log_initialization_predicate != -1)
      dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
    v67 = (void *)ck_log_facility_ck;
    if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_ERROR))
    {
      v68 = *(void **)(a1 + 56);
      v69 = v67;
      objc_msgSend_recordID(v68, v70, v71, v72);
      v73 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v78 = v73;
      v79 = 2112;
      v80 = v46;
      _os_log_error_impl(&dword_18A5C5000, v69, OS_LOG_TYPE_ERROR, "Error wiring up asset content for recordID %@: %@", buf, 0x16u);

    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v46);
    **(_BYTE **)(a1 + 72) = 1;
    *a4 = 1;
    goto LABEL_29;
  }
LABEL_30:

}

void sub_18A80E740(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 8) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 8);
    *(_QWORD *)(v8 + 8) = v7;

  }
}

void sub_18A80E874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A80E88C(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A80E8B4(uint64_t a1)
{

}

void sub_18A80E8BC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 8));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A80E9BC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 16) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 16);
    *(_QWORD *)(v8 + 16) = v7;

  }
}

void sub_18A80EAF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A80EB08(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 16));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

uint64_t sub_18A80EC2C(_QWORD *a1)
{
  return MEMORY[0x1E0DE7D20](a1[4], sel__locked_handleSharingUIUpdatedShare_recordID_isDeleted_error_, a1[5], a1[6]);
}

void sub_18A80FC80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

id sub_18A80FE38(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  id v19;
  id v20;
  const char *v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  const char *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v40;
  objc_class *v41;
  void *v42;
  void *v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  objc_class *v48;
  const char *v49;
  uint64_t v50;
  CKException *v51;
  const char *v52;
  id v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _BYTE v58[128];
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99DE8];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_arrayWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v54 = 0u;
  v55 = 0u;
  v56 = 0u;
  v57 = 0u;
  v13 = a1;
  v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v14, (uint64_t)&v54, (uint64_t)v58, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v55;
    do
    {
      for (i = 0; i != v16; ++i)
      {
        if (*(_QWORD *)v55 != v17)
          objc_enumerationMutation(v13);
        v19 = *(id *)(*((_QWORD *)&v54 + 1) + 8 * i);
        v20 = v4;
        if (objc_msgSend_conformsToProtocol_(v19, v21, (uint64_t)&unk_1EDFA0B08, v22))
        {
          objc_msgSend_CKDeepCopy(v19, v23, v24, v25);
          v26 = objc_claimAutoreleasedReturnValue();
LABEL_14:
          v29 = (void *)v26;
          goto LABEL_15;
        }
        if (objc_msgSend_conformsToProtocol_(v19, v23, (uint64_t)&unk_1EDF7DED8, v25))
        {
          v40 = (void *)MEMORY[0x1E0CB3940];
          v41 = (objc_class *)objc_opt_class();
          NSStringFromClass(v41);
          v42 = (void *)objc_claimAutoreleasedReturnValue();
          NSStringFromProtocol((Protocol *)&unk_1EDFA0B08);
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_stringWithFormat_(v40, v44, (uint64_t)CFSTR("Collection with class %@ does not support %@"), v45, v42, v43, (_QWORD)v54);
          v46 = objc_claimAutoreleasedReturnValue();

          goto LABEL_20;
        }
        if (!v4)
        {
          if (!objc_msgSend_conformsToProtocol_(v19, v27, (uint64_t)&unk_1EDF77860, v28))
          {
LABEL_19:
            v47 = (void *)MEMORY[0x1E0CB3940];
            v48 = (objc_class *)objc_opt_class();
            NSStringFromClass(v48);
            v42 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_stringWithFormat_(v47, v49, (uint64_t)CFSTR("Object with class %@ cannot be copied"), v50, v42);
            v46 = objc_claimAutoreleasedReturnValue();
LABEL_20:

            v51 = [CKException alloc];
            v53 = (id)objc_msgSend_initWithName_format_(v51, v52, *MEMORY[0x1E0C99778], (uint64_t)CFSTR("%@"), v46);
            objc_exception_throw(v53);
          }
          v26 = objc_msgSend_copyWithZone_(v19, v30, 0, v31);
          goto LABEL_14;
        }
        (*((void (**)(id, id))v4 + 2))(v20, v19);
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        if (!v29)
          goto LABEL_19;
LABEL_15:

        objc_msgSend_addObject_(v12, v32, (uint64_t)v29, v33);
      }
      v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v34, (uint64_t)&v54, (uint64_t)v58, 16);
    }
    while (v16);
  }

  v38 = (void *)objc_msgSend_copy(v12, v35, v36, v37);
  return v38;
}

id sub_18A8100D4(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  const char *v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, void *, void *);
  void *v25;
  id v26;
  id v27;

  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99E08];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_dictionaryWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = MEMORY[0x1E0C809B0];
  v23 = 3221225472;
  v24 = sub_18A8101A0;
  v25 = &unk_1E1F63D10;
  v26 = v12;
  v27 = v4;
  v13 = v4;
  v14 = v12;
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(a1, v15, (uint64_t)&v22, v16);
  v20 = (void *)objc_msgSend_copy(v14, v17, v18, v19, v22, v23, v24, v25);

  return v20;
}

void sub_18A8101A0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  void (**v9)(id, id);
  const char *v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void (**v23)(id, id);
  const char *v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  const char *v35;
  void *v36;
  void *v37;
  objc_class *v38;
  void *v39;
  void *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  objc_class *v44;
  const char *v45;
  uint64_t v46;
  CKException *v47;
  const char *v48;
  id v49;
  id v50;

  v5 = a2;
  v6 = a3;
  v7 = *(void **)(a1 + 40);
  v8 = v6;
  v9 = v7;
  if (!objc_msgSend_conformsToProtocol_(v8, v10, (uint64_t)&unk_1EDFA0B08, v11))
  {
    if (objc_msgSend_conformsToProtocol_(v8, v12, (uint64_t)&unk_1EDF7DED8, v14))
    {
      v36 = (void *)MEMORY[0x1E0CB3940];
LABEL_23:
      v38 = (objc_class *)objc_opt_class();
      NSStringFromClass(v38);
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      NSStringFromProtocol((Protocol *)&unk_1EDFA0B08);
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_stringWithFormat_(v36, v41, (uint64_t)CFSTR("Collection with class %@ does not support %@"), v42, v39, v40);
      v43 = objc_claimAutoreleasedReturnValue();

      goto LABEL_26;
    }
    if (v9)
    {
      v9[2](v9, v8);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      if (v18)
        goto LABEL_10;
    }
    else if (objc_msgSend_conformsToProtocol_(v8, v16, (uint64_t)&unk_1EDF77860, v17))
    {
      v15 = objc_msgSend_copyWithZone_(v8, v19, 0, v20);
      goto LABEL_9;
    }
    v37 = (void *)MEMORY[0x1E0CB3940];
LABEL_25:
    v44 = (objc_class *)objc_opt_class();
    NSStringFromClass(v44);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringWithFormat_(v37, v45, (uint64_t)CFSTR("Object with class %@ cannot be copied"), v46, v39);
    v43 = objc_claimAutoreleasedReturnValue();
LABEL_26:

    v47 = [CKException alloc];
    v49 = (id)objc_msgSend_initWithName_format_(v47, v48, *MEMORY[0x1E0C99778], (uint64_t)CFSTR("%@"), v43);
    objc_exception_throw(v49);
  }
  objc_msgSend_CKDeepCopy(v8, v12, v13, v14);
  v15 = objc_claimAutoreleasedReturnValue();
LABEL_9:
  v18 = (void *)v15;
LABEL_10:

  v22 = *(void **)(a1 + 32);
  v21 = *(void **)(a1 + 40);
  v50 = v5;
  v23 = v21;
  if (objc_msgSend_conformsToProtocol_(v50, v24, (uint64_t)&unk_1EDFA0B08, v25))
  {
    objc_msgSend_CKDeepCopy(v50, v26, v27, v28);
    v29 = objc_claimAutoreleasedReturnValue();
LABEL_18:
    v32 = (void *)v29;
    goto LABEL_19;
  }
  if (objc_msgSend_conformsToProtocol_(v50, v26, (uint64_t)&unk_1EDF7DED8, v28))
  {
    v36 = (void *)MEMORY[0x1E0CB3940];
    goto LABEL_23;
  }
  if (!v23)
  {
    if (objc_msgSend_conformsToProtocol_(v50, v30, (uint64_t)&unk_1EDF77860, v31))
    {
      v29 = objc_msgSend_copyWithZone_(v50, v33, 0, v34);
      goto LABEL_18;
    }
    goto LABEL_24;
  }
  v23[2](v23, v50);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v32)
  {
LABEL_24:
    v37 = (void *)MEMORY[0x1E0CB3940];
    goto LABEL_25;
  }
LABEL_19:

  objc_msgSend_setObject_forKeyedSubscript_(v22, v35, (uint64_t)v18, (uint64_t)v32);
}

id sub_18A810418(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  const char *v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  const char *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v36;
  objc_class *v37;
  void *v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  objc_class *v44;
  const char *v45;
  uint64_t v46;
  CKException *v47;
  const char *v48;
  id v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _BYTE v54[128];
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  v5 = (void *)MEMORY[0x1E0C99E20];
  v6 = objc_msgSend_count(a1, a2, a3, a4);
  objc_msgSend_setWithCapacity_(v5, v7, v6, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v50 = 0u;
  v51 = 0u;
  v52 = 0u;
  v53 = 0u;
  v10 = a1;
  v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v11, (uint64_t)&v50, (uint64_t)v54, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v51;
    do
    {
      v15 = 0;
      do
      {
        if (*(_QWORD *)v51 != v14)
          objc_enumerationMutation(v10);
        v16 = *(id *)(*((_QWORD *)&v50 + 1) + 8 * v15);
        if (objc_msgSend_conformsToProtocol_(v16, v17, (uint64_t)&unk_1EDFA0B08, v18))
        {
          objc_msgSend_CKDeepCopy(v16, v19, v20, v21);
          v22 = objc_claimAutoreleasedReturnValue();
        }
        else
        {
          if (objc_msgSend_conformsToProtocol_(v16, v19, (uint64_t)&unk_1EDF7DED8, v21))
          {
            v36 = (void *)MEMORY[0x1E0CB3940];
            v37 = (objc_class *)objc_opt_class();
            NSStringFromClass(v37);
            v38 = (void *)objc_claimAutoreleasedReturnValue();
            NSStringFromProtocol((Protocol *)&unk_1EDFA0B08);
            v39 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_stringWithFormat_(v36, v40, (uint64_t)CFSTR("Collection with class %@ does not support %@"), v41, v38, v39, (_QWORD)v50);
            v42 = objc_claimAutoreleasedReturnValue();

            goto LABEL_16;
          }
          if (!objc_msgSend_conformsToProtocol_(v16, v23, (uint64_t)&unk_1EDF77860, v24))
          {
            v43 = (void *)MEMORY[0x1E0CB3940];
            v44 = (objc_class *)objc_opt_class();
            NSStringFromClass(v44);
            v38 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_stringWithFormat_(v43, v45, (uint64_t)CFSTR("Object with class %@ cannot be copied"), v46, v38);
            v42 = objc_claimAutoreleasedReturnValue();
LABEL_16:

            v47 = [CKException alloc];
            v49 = (id)objc_msgSend_initWithName_format_(v47, v48, *MEMORY[0x1E0C99778], (uint64_t)CFSTR("%@"), v42);
            objc_exception_throw(v49);
          }
          v22 = objc_msgSend_copyWithZone_(v16, v25, 0, v26);
        }
        v27 = (void *)v22;

        objc_msgSend_addObject_(v9, v28, (uint64_t)v27, v29);
        ++v15;
      }
      while (v13 != v15);
      v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v30, (uint64_t)&v50, (uint64_t)v54, 16);
    }
    while (v13);
  }

  v34 = (void *)objc_msgSend_copy(v9, v31, v32, v33);
  return v34;
}

id sub_18A810670(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  id v19;
  id v20;
  const char *v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  const char *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v40;
  objc_class *v41;
  void *v42;
  void *v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  objc_class *v48;
  const char *v49;
  uint64_t v50;
  CKException *v51;
  const char *v52;
  id v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _BYTE v58[128];
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99E20];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_setWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v54 = 0u;
  v55 = 0u;
  v56 = 0u;
  v57 = 0u;
  v13 = a1;
  v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v14, (uint64_t)&v54, (uint64_t)v58, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v55;
    do
    {
      for (i = 0; i != v16; ++i)
      {
        if (*(_QWORD *)v55 != v17)
          objc_enumerationMutation(v13);
        v19 = *(id *)(*((_QWORD *)&v54 + 1) + 8 * i);
        v20 = v4;
        if (objc_msgSend_conformsToProtocol_(v19, v21, (uint64_t)&unk_1EDFA0B08, v22))
        {
          objc_msgSend_CKDeepCopy(v19, v23, v24, v25);
          v26 = objc_claimAutoreleasedReturnValue();
LABEL_14:
          v29 = (void *)v26;
          goto LABEL_15;
        }
        if (objc_msgSend_conformsToProtocol_(v19, v23, (uint64_t)&unk_1EDF7DED8, v25))
        {
          v40 = (void *)MEMORY[0x1E0CB3940];
          v41 = (objc_class *)objc_opt_class();
          NSStringFromClass(v41);
          v42 = (void *)objc_claimAutoreleasedReturnValue();
          NSStringFromProtocol((Protocol *)&unk_1EDFA0B08);
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_stringWithFormat_(v40, v44, (uint64_t)CFSTR("Collection with class %@ does not support %@"), v45, v42, v43, (_QWORD)v54);
          v46 = objc_claimAutoreleasedReturnValue();

          goto LABEL_20;
        }
        if (!v4)
        {
          if (!objc_msgSend_conformsToProtocol_(v19, v27, (uint64_t)&unk_1EDF77860, v28))
          {
LABEL_19:
            v47 = (void *)MEMORY[0x1E0CB3940];
            v48 = (objc_class *)objc_opt_class();
            NSStringFromClass(v48);
            v42 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_stringWithFormat_(v47, v49, (uint64_t)CFSTR("Object with class %@ cannot be copied"), v50, v42);
            v46 = objc_claimAutoreleasedReturnValue();
LABEL_20:

            v51 = [CKException alloc];
            v53 = (id)objc_msgSend_initWithName_format_(v51, v52, *MEMORY[0x1E0C99778], (uint64_t)CFSTR("%@"), v46);
            objc_exception_throw(v53);
          }
          v26 = objc_msgSend_copyWithZone_(v19, v30, 0, v31);
          goto LABEL_14;
        }
        (*((void (**)(id, id))v4 + 2))(v20, v19);
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        if (!v29)
          goto LABEL_19;
LABEL_15:

        objc_msgSend_addObject_(v12, v32, (uint64_t)v29, v33);
      }
      v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v34, (uint64_t)&v54, (uint64_t)v58, 16);
    }
    while (v16);
  }

  v38 = (void *)objc_msgSend_copy(v12, v35, v36, v37);
  return v38;
}

id sub_18A81090C(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  const char *v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  const char *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v36;
  objc_class *v37;
  void *v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  objc_class *v44;
  const char *v45;
  uint64_t v46;
  CKException *v47;
  const char *v48;
  id v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _BYTE v54[128];
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  v5 = (void *)MEMORY[0x1E0C99E10];
  v6 = objc_msgSend_count(a1, a2, a3, a4);
  objc_msgSend_orderedSetWithCapacity_(v5, v7, v6, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v50 = 0u;
  v51 = 0u;
  v52 = 0u;
  v53 = 0u;
  v10 = a1;
  v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v11, (uint64_t)&v50, (uint64_t)v54, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v51;
    do
    {
      v15 = 0;
      do
      {
        if (*(_QWORD *)v51 != v14)
          objc_enumerationMutation(v10);
        v16 = *(id *)(*((_QWORD *)&v50 + 1) + 8 * v15);
        if (objc_msgSend_conformsToProtocol_(v16, v17, (uint64_t)&unk_1EDFA0B08, v18))
        {
          objc_msgSend_CKDeepCopy(v16, v19, v20, v21);
          v22 = objc_claimAutoreleasedReturnValue();
        }
        else
        {
          if (objc_msgSend_conformsToProtocol_(v16, v19, (uint64_t)&unk_1EDF7DED8, v21))
          {
            v36 = (void *)MEMORY[0x1E0CB3940];
            v37 = (objc_class *)objc_opt_class();
            NSStringFromClass(v37);
            v38 = (void *)objc_claimAutoreleasedReturnValue();
            NSStringFromProtocol((Protocol *)&unk_1EDFA0B08);
            v39 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_stringWithFormat_(v36, v40, (uint64_t)CFSTR("Collection with class %@ does not support %@"), v41, v38, v39, (_QWORD)v50);
            v42 = objc_claimAutoreleasedReturnValue();

            goto LABEL_16;
          }
          if (!objc_msgSend_conformsToProtocol_(v16, v23, (uint64_t)&unk_1EDF77860, v24))
          {
            v43 = (void *)MEMORY[0x1E0CB3940];
            v44 = (objc_class *)objc_opt_class();
            NSStringFromClass(v44);
            v38 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_stringWithFormat_(v43, v45, (uint64_t)CFSTR("Object with class %@ cannot be copied"), v46, v38);
            v42 = objc_claimAutoreleasedReturnValue();
LABEL_16:

            v47 = [CKException alloc];
            v49 = (id)objc_msgSend_initWithName_format_(v47, v48, *MEMORY[0x1E0C99778], (uint64_t)CFSTR("%@"), v42);
            objc_exception_throw(v49);
          }
          v22 = objc_msgSend_copyWithZone_(v16, v25, 0, v26);
        }
        v27 = (void *)v22;

        objc_msgSend_addObject_(v9, v28, (uint64_t)v27, v29);
        ++v15;
      }
      while (v13 != v15);
      v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v30, (uint64_t)&v50, (uint64_t)v54, 16);
    }
    while (v13);
  }

  v34 = (void *)objc_msgSend_copy(v9, v31, v32, v33);
  return v34;
}

id sub_18A810B64(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  id v19;
  id v20;
  const char *v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  const char *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v40;
  objc_class *v41;
  void *v42;
  void *v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  objc_class *v48;
  const char *v49;
  uint64_t v50;
  CKException *v51;
  const char *v52;
  id v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _BYTE v58[128];
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x1E0C99E10];
  v9 = objc_msgSend_count(a1, v6, v7, v8);
  objc_msgSend_orderedSetWithCapacity_(v5, v10, v9, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v54 = 0u;
  v55 = 0u;
  v56 = 0u;
  v57 = 0u;
  v13 = a1;
  v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v14, (uint64_t)&v54, (uint64_t)v58, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v55;
    do
    {
      for (i = 0; i != v16; ++i)
      {
        if (*(_QWORD *)v55 != v17)
          objc_enumerationMutation(v13);
        v19 = *(id *)(*((_QWORD *)&v54 + 1) + 8 * i);
        v20 = v4;
        if (objc_msgSend_conformsToProtocol_(v19, v21, (uint64_t)&unk_1EDFA0B08, v22))
        {
          objc_msgSend_CKDeepCopy(v19, v23, v24, v25);
          v26 = objc_claimAutoreleasedReturnValue();
LABEL_14:
          v29 = (void *)v26;
          goto LABEL_15;
        }
        if (objc_msgSend_conformsToProtocol_(v19, v23, (uint64_t)&unk_1EDF7DED8, v25))
        {
          v40 = (void *)MEMORY[0x1E0CB3940];
          v41 = (objc_class *)objc_opt_class();
          NSStringFromClass(v41);
          v42 = (void *)objc_claimAutoreleasedReturnValue();
          NSStringFromProtocol((Protocol *)&unk_1EDFA0B08);
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_stringWithFormat_(v40, v44, (uint64_t)CFSTR("Collection with class %@ does not support %@"), v45, v42, v43, (_QWORD)v54);
          v46 = objc_claimAutoreleasedReturnValue();

          goto LABEL_20;
        }
        if (!v4)
        {
          if (!objc_msgSend_conformsToProtocol_(v19, v27, (uint64_t)&unk_1EDF77860, v28))
          {
LABEL_19:
            v47 = (void *)MEMORY[0x1E0CB3940];
            v48 = (objc_class *)objc_opt_class();
            NSStringFromClass(v48);
            v42 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_stringWithFormat_(v47, v49, (uint64_t)CFSTR("Object with class %@ cannot be copied"), v50, v42);
            v46 = objc_claimAutoreleasedReturnValue();
LABEL_20:

            v51 = [CKException alloc];
            v53 = (id)objc_msgSend_initWithName_format_(v51, v52, *MEMORY[0x1E0C99778], (uint64_t)CFSTR("%@"), v46);
            objc_exception_throw(v53);
          }
          v26 = objc_msgSend_copyWithZone_(v19, v30, 0, v31);
          goto LABEL_14;
        }
        (*((void (**)(id, id))v4 + 2))(v20, v19);
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        if (!v29)
          goto LABEL_19;
LABEL_15:

        objc_msgSend_addObject_(v12, v32, (uint64_t)v29, v33);
      }
      v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v34, (uint64_t)&v54, (uint64_t)v58, 16);
    }
    while (v16);
  }

  v38 = (void *)objc_msgSend_copy(v12, v35, v36, v37);
  return v38;
}

void sub_18A8111B0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 504) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 504);
    *(_QWORD *)(v8 + 504) = v7;

  }
}

void sub_18A811340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A811358(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A811380(uint64_t a1)
{

}

void sub_18A811388(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 504));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A8114E4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 512) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 512);
    *(_QWORD *)(v8 + 512) = v7;

  }
}

void sub_18A811674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A81168C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 512));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A8117E8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void sub_18A811978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A811990(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A813130(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A813730(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 512) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 512);
    *(_QWORD *)(v8 + 512) = v7;

  }
}

void sub_18A8138C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A8138D8(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A813900(uint64_t a1)
{

}

void sub_18A813908(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 512));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

BOOL CKCodeProto2AnyReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 8;
LABEL_22:
        v19 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadData();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = 16;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_18A815294(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_18A8152F0(void *a1, _BYTE *a2)
{
  id *v3;
  id v4;
  id v5;

  if (a1)
  {
    v3 = a1;
    objc_sync_enter(v3);
    if (a2)
    {
      v4 = v3[2];
      if (v4)
        LOBYTE(v4) = (_BYTE)v3[1] & 1;
      *a2 = (_BYTE)v4;
    }
    v5 = v3[2];
    objc_sync_exit(v3);

  }
  else
  {
    v5 = 0;
  }
  return v5;
}

uint64_t sub_18A815448(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_18A81545C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_18A815570(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_18A815584(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_18A815594(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_18A8156EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_18A815700(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

BOOL sub_18A815788()
{
  _BOOL8 result;

  result = _CKUseSystemInstalledBinaries();
  _sCKUseSystemInstalledBinaries = result;
  return result;
}

void sub_18A8157A8(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  _BYTE *v4;
  NSObject *v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  int v12;
  _BYTE *v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = WeakRetained;
    objc_sync_enter(v4);
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    {
      if (ck_log_initialization_predicate != -1)
        dispatch_once(&ck_log_initialization_predicate, ck_log_initialization_block);
      v5 = ck_log_facility_ck;
      if (os_log_type_enabled((os_log_t)ck_log_facility_ck, OS_LOG_TYPE_INFO))
      {
        v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
        v12 = 138543618;
        v13 = v4;
        v14 = 2048;
        v15 = v6;
        _os_log_impl(&dword_18A5C5000, v5, OS_LOG_TYPE_INFO, "Warn: %{public}@: NSXPCConnection %p was interrupted", (uint8_t *)&v12, 0x16u);
      }
      v4[8] = 0;
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 0;
      objc_sync_exit(v4);

      objc_msgSend_defaultCenter(MEMORY[0x1E0CB37D0], v7, v8, v9);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_postNotificationName_object_(v10, v11, (uint64_t)CFSTR("CKXPCConnectionInterrupted"), (uint64_t)v4);

    }
    else
    {
      objc_sync_exit(v4);

    }
  }

}

void sub_18A815920(uint64_t a1, void *a2)
{
  if (a1)
    objc_storeStrong((id *)(a1 + 32), a2);
}

void sub_18A815A54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A815CE4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 512) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 512);
    *(_QWORD *)(v8 + 512) = v7;

  }
}

void sub_18A815E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A815E8C(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A815EB4(uint64_t a1)
{

}

void sub_18A815EBC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 512));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A816018(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 520) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 520);
    *(_QWORD *)(v8 + 520) = v7;

  }
}

void sub_18A8161A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A8161C0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 520));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A81769C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A817AA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_18A8182FC(uint64_t a1, void *a2)
{
  _QWORD *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  int v11;
  CKTuple2 *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  CKTuple2 *v16;
  uint64_t v17;
  const char *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;

  v3 = a2;
  objc_msgSend_name(v3, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  sub_18A5DF660(v3, *(void **)(a1 + 32));
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    v11 = objc_msgSend_conformsToProtocol_(v8, v9, (uint64_t)&unk_1EDFA91D0, v10);
    v12 = [CKTuple2 alloc];
    v16 = v12;
    if (!v11)
    {
      v23 = (void *)objc_msgSend_initWithObject1_object2_(v12, v13, (uint64_t)v7, (uint64_t)v8);
      goto LABEL_7;
    }
    objc_msgSend_dictionaryPropertyEncoding(v8, v13, v14, v15);
    v17 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v16 = [CKTuple2 alloc];
    objc_msgSend_null(MEMORY[0x1E0C99E38], v19, v20, v21);
    v17 = objc_claimAutoreleasedReturnValue();
  }
  v22 = (void *)v17;
  v23 = (void *)objc_msgSend_initWithObject1_object2_(v16, v18, (uint64_t)v7, v17);

LABEL_7:
  return v23;
}

void sub_18A8187C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A818CA4()
{
  CKTapToRadarManager *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  void *v5;

  v0 = [CKTapToRadarManager alloc];
  inited = objc_msgSend_initInternal(v0, v1, v2, v3);
  v5 = (void *)qword_1ECD96F78;
  qword_1ECD96F78 = inited;

}

void sub_18A8195BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_18A8195D0(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend__lockedTriggerTapToRadarWithRequest_(WeakRetained, v2, *(_QWORD *)(a1 + 32), v3);

}

void sub_18A819880(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 504) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 504);
    *(_QWORD *)(v8 + 504) = v7;

  }
}

void sub_18A819A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_18A819A28(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_18A819A50(uint64_t a1)
{

}

void sub_18A819A58(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 504));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_18A819BB4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  if (*(void **)(v6 + 512) != v5)
  {
    v7 = objc_msgSend_copy(v5, a2, a3, a4);
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 512);
    *(_QWORD *)(v8 + 512) = v7;

  }
}

void sub_18A819D44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18A819D5C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = _Block_copy(*(const void **)(*(_QWORD *)(a1 + 32) + 512));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

uint64_t URLRequest.init(url:cachePolicy:timeoutInterval:)()
{
  return MEMORY[0x1E0CADF10]();
}

uint64_t type metadata accessor for URLRequest()
{
  return MEMORY[0x1E0CADF50]();
}

uint64_t dispatch thunk of JSONDecoder.decode<A>(_:from:)()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t JSONDecoder.init()()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t type metadata accessor for JSONDecoder()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t dispatch thunk of JSONEncoder.encode<A>(_:)()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t JSONEncoder.init()()
{
  return MEMORY[0x1E0CAE1D8]();
}

uint64_t type metadata accessor for JSONEncoder()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t static Notification._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CAE618]();
}

uint64_t Notification.object.getter()
{
  return MEMORY[0x1E0CAE630]();
}

uint64_t type metadata accessor for Notification()
{
  return MEMORY[0x1E0CAE648]();
}

uint64_t __DataStorage.init(bytes:length:copy:deallocator:offset:)()
{
  return MEMORY[0x1E0CAE8A8]();
}

uint64_t __DataStorage._bytes.getter()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t __DataStorage.init(length:)()
{
  return MEMORY[0x1E0CAE8D8]();
}

uint64_t __DataStorage._length.getter()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t __DataStorage._offset.getter()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t __DataStorage.init(capacity:)()
{
  return MEMORY[0x1E0CAE908]();
}

uint64_t type metadata accessor for __DataStorage()
{
  return MEMORY[0x1E0CAE910]();
}

uint64_t dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)()
{
  return MEMORY[0x1E0CAEE50]();
}

uint64_t _BridgedStoredNSError._getEmbeddedNSError()()
{
  return MEMORY[0x1E0CAF8D8]();
}

uint64_t _BridgedStoredNSError.init(_bridgedNSError:)()
{
  return MEMORY[0x1E0CAF8E8]();
}

uint64_t _BridgedStoredNSError.errorUserInfo.getter()
{
  return MEMORY[0x1E0CAF8F8]();
}

uint64_t static _BridgedStoredNSError.== infix(_:_:)()
{
  return MEMORY[0x1E0CAF900]();
}

uint64_t _BridgedStoredNSError.code.getter()
{
  return MEMORY[0x1E0CAF910]();
}

uint64_t _BridgedStoredNSError.hash(into:)()
{
  return MEMORY[0x1E0CAF920]();
}

uint64_t _BridgedStoredNSError.userInfo.getter()
{
  return MEMORY[0x1E0CAF928]();
}

uint64_t _BridgedStoredNSError.errorCode.getter()
{
  return MEMORY[0x1E0CAF930]();
}

uint64_t _BridgedStoredNSError.init(_:userInfo:)()
{
  return MEMORY[0x1E0CAF940]();
}

uint64_t _convertErrorToNSError(_:)()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t _convertNSErrorToError(_:)()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t NSFastEnumerationIterator.next()()
{
  return MEMORY[0x1E0CAFB50]();
}

uint64_t type metadata accessor for NSFastEnumerationIterator()
{
  return MEMORY[0x1E0CAFB58]();
}

uint64_t type metadata accessor for URL.DirectoryHint()
{
  return MEMORY[0x1E0CAFD90]();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
  MEMORY[0x1E0CAFE38](retstr);
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t URL.init(string:)()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t URL.init(filePath:directoryHint:relativeTo:)()
{
  return MEMORY[0x1E0CAFF98]();
}

uint64_t URL.appending<A>(component:directoryHint:)()
{
  return MEMORY[0x1E0CAFFE0]();
}

uint64_t type metadata accessor for URL()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t Data.InlineData.init(_:)()
{
  return MEMORY[0x1E0CB0080]();
}

Swift::Void __swiftcall Data.LargeSlice.ensureUniqueReference()()
{
  MEMORY[0x1E0CB0088]();
}

uint64_t Data.LargeSlice.init(_:)()
{
  return MEMORY[0x1E0CB0098]();
}

uint64_t Data.InlineSlice.init(_:)()
{
  return MEMORY[0x1E0CB00F8]();
}

uint64_t Data._Representation.replaceSubrange(_:with:count:)()
{
  return MEMORY[0x1E0CB0160]();
}

uint64_t Data._Representation.subscript.getter()
{
  return MEMORY[0x1E0CB01B0]();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)MEMORY[0x1E0CB01F0]();
}

Swift::String __swiftcall Data.base64EncodedString(options:)(NSDataBase64EncodingOptions options)
{
  uint64_t v1;
  void *v2;
  Swift::String result;

  v1 = MEMORY[0x1E0CB01F8](options);
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t Data.init(count:)()
{
  return MEMORY[0x1E0CB0258]();
}

uint64_t Data.count.getter()
{
  return MEMORY[0x1E0CB0260]();
}

uint64_t Data.write(to:options:)()
{
  return MEMORY[0x1E0CB0270]();
}

uint64_t Data.append(_:)()
{
  return MEMORY[0x1E0CB0298]();
}

uint64_t Data.subdata(in:)()
{
  return MEMORY[0x1E0CB02B0]();
}

uint64_t static Date.distantPast.getter()
{
  return MEMORY[0x1E0CB0588]();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)MEMORY[0x1E0CB06B8]();
}

uint64_t static Date.< infix(_:_:)()
{
  return MEMORY[0x1E0CB06D8]();
}

uint64_t static Date.+ infix(_:_:)()
{
  return MEMORY[0x1E0CB06E8]();
}

uint64_t Date.timeIntervalSinceNow.getter()
{
  return MEMORY[0x1E0CB0708]();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t static Date.now.getter()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t Date.init()()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t type metadata accessor for Date()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t UUID.uuidString.getter()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t UUID.init()()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t type metadata accessor for UUID()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t static URLError.Code.badURL.getter()
{
  return MEMORY[0x1E0CB1540]();
}

uint64_t type metadata accessor for URLError.Code()
{
  return MEMORY[0x1E0CB1578]();
}

uint64_t URLError._nsError.getter()
{
  return MEMORY[0x1E0CB15A0]();
}

uint64_t type metadata accessor for URLError()
{
  return MEMORY[0x1E0CB15C0]();
}

uint64_t dispatch thunk of static PlayerItem.makePlayerItem(with:delegate:)()
{
  return MEMORY[0x1E0D10A10]();
}

uint64_t type metadata accessor for PlayerItem()
{
  return MEMORY[0x1E0D10A18]();
}

uint64_t StreamHandle.readAll(in:)()
{
  return MEMORY[0x1E0D10A20]();
}

uint64_t static AssetStreamHandle.makeAssetStreamHandle(partition:owner:accessToken:requestorID:signature:referenceSignature:size:assetKey:filenameExtension:applicationID:)()
{
  return MEMORY[0x1E0D10A30]();
}

uint64_t AssetStreamHandle.inputStream(for:)()
{
  return MEMORY[0x1E0D10A38]();
}

uint64_t AssetStreamHandle.makeAVPlayerItem(with:options:)()
{
  return MEMORY[0x1E0D10A50]();
}

uint64_t AssetStreamHandle.makeAVAssetExportSession(with:options:presetName:)()
{
  return MEMORY[0x1E0D10A58]();
}

uint64_t AssetStreamHandle.init(from:)()
{
  return MEMORY[0x1E0D10A60]();
}

uint64_t AssetStreamHandle.size.getter()
{
  return MEMORY[0x1E0D10A68]();
}

uint64_t AssetExportSession.init(avAsset:presetName:delegate:)()
{
  return MEMORY[0x1E0D10A90]();
}

uint64_t type metadata accessor for AssetExportSession()
{
  return MEMORY[0x1E0D10A98]();
}

uint64_t LoadingRequestHandler.init(streamHandle:type:)()
{
  return MEMORY[0x1E0D10AA0]();
}

uint64_t type metadata accessor for LoadingRequestHandler()
{
  return MEMORY[0x1E0D10AA8]();
}

uint64_t DataRepresentation.init(exportedContentType:exporting:)()
{
  return MEMORY[0x1E0CA8768]();
}

uint64_t type metadata accessor for DataRepresentation()
{
  return MEMORY[0x1E0CA8770]();
}

uint64_t ProxyRepresentation.init(exporting:)()
{
  return MEMORY[0x1E0CA87B0]();
}

uint64_t type metadata accessor for ProxyRepresentation()
{
  return MEMORY[0x1E0CA87B8]();
}

uint64_t static TransferRepresentation._decomposedTransferRepresentation(_:inputs:)()
{
  return MEMORY[0x1E0CA8808]();
}

uint64_t TransferRepresentation.exportingCondition(_:)()
{
  return MEMORY[0x1E0CA8810]();
}

uint64_t type metadata accessor for TupleTransferRepresentation()
{
  return MEMORY[0x1E0CA8828]();
}

uint64_t TupleTransferRepresentation.init(_:)()
{
  return MEMORY[0x1E0CA8838]();
}

uint64_t type metadata accessor for _ConditionalTransferRepresentation()
{
  return MEMORY[0x1E0CA88B8]();
}

uint64_t _HashTable.UnsafeHandle._startIterator(bucket:)()
{
  return MEMORY[0x1E0D12E30]();
}

uint64_t _HashTable.UnsafeHandle.firstOccupiedBucketInChain(with:)()
{
  return MEMORY[0x1E0D12E38]();
}

uint64_t _HashTable.UnsafeHandle.subscript.setter()
{
  return MEMORY[0x1E0D12E40]();
}

uint64_t _HashTable.BucketIterator.currentValue.getter()
{
  return MEMORY[0x1E0D12E48]();
}

uint64_t _HashTable.BucketIterator.currentValue.setter()
{
  return MEMORY[0x1E0D12E50]();
}

Swift::Void __swiftcall _HashTable.BucketIterator.advance()()
{
  MEMORY[0x1E0D12E58]();
}

uint64_t static _HashTable.maximumCapacity(forScale:)()
{
  return MEMORY[0x1E0D12E60]();
}

uint64_t static _HashTable.minimumCapacity(forScale:)()
{
  return MEMORY[0x1E0D12E68]();
}

uint64_t _HashTable.copy()()
{
  return MEMORY[0x1E0D12E70]();
}

uint64_t static _HashTable.scale(forCapacity:)()
{
  return MEMORY[0x1E0D12E78]();
}

uint64_t _HashTable.init(scale:reservedScale:)()
{
  return MEMORY[0x1E0D12E80]();
}

uint64_t _emptyDequeStorage.unsafeMutableAddressor()
{
  return MEMORY[0x1E0D12FB0]();
}

Swift::Int __swiftcall Deque._Storage._growCapacity(to:linearly:)(Swift::Int to, Swift::Bool linearly)
{
  return MEMORY[0x1E0D12FE8](to, linearly);
}

uint64_t UTType.init(exportedAs:conformingTo:)()
{
  return MEMORY[0x1E0DF0188]();
}

uint64_t type metadata accessor for UTType()
{
  return MEMORY[0x1E0DF0340]();
}

uint64_t OSSignpostID.rawValue.getter()
{
  return MEMORY[0x1E0DF2108]();
}

uint64_t static OSSignpostID.exclusive.getter()
{
  return MEMORY[0x1E0DF2110]();
}

uint64_t type metadata accessor for OSSignpostID()
{
  return MEMORY[0x1E0DF2118]();
}

uint64_t OSSignposter.init(logger:)()
{
  return MEMORY[0x1E0DF2130]();
}

uint64_t OSSignposter.logHandle.getter()
{
  return MEMORY[0x1E0DF2150]();
}

uint64_t type metadata accessor for OSSignposter()
{
  return MEMORY[0x1E0DF2170]();
}

uint64_t type metadata accessor for OSSignpostError()
{
  return MEMORY[0x1E0DF2198]();
}

uint64_t OSSignpostIntervalState.signpostID.getter()
{
  return MEMORY[0x1E0DF2218]();
}

uint64_t OSSignpostIntervalState.init(id:isOpen:)()
{
  return MEMORY[0x1E0DF2220]();
}

uint64_t type metadata accessor for OSSignpostIntervalState()
{
  return MEMORY[0x1E0DF2228]();
}

uint64_t checkForErrorAndConsumeState(state:)()
{
  return MEMORY[0x1E0DF2238]();
}

uint64_t Logger.logObject.getter()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t Logger.init(subsystem:category:)()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t type metadata accessor for Logger()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t dispatch thunk of HashFunction.update(bufferPointer:)()
{
  return MEMORY[0x1E0CA92A8]();
}

uint64_t dispatch thunk of HashFunction.finalize()()
{
  return MEMORY[0x1E0CA92B0]();
}

uint64_t dispatch thunk of HashFunction.init()()
{
  return MEMORY[0x1E0CA92C8]();
}

uint64_t type metadata accessor for SHA256Digest()
{
  return MEMORY[0x1E0CA92F8]();
}

uint64_t type metadata accessor for SHA256()
{
  return MEMORY[0x1E0CA9940]();
}

uint64_t Dictionary.init()()
{
  return MEMORY[0x1E0DE9D60]();
}

uint64_t Array.init()()
{
  return MEMORY[0x1E0DE9D70]();
}

uint64_t CancellationError.init()()
{
  return MEMORY[0x1E0DF05B0]();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)MEMORY[0x1E0CB17D8]();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t Dictionary.description.getter()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t Dictionary.removeValue(forKey:)()
{
  return MEMORY[0x1E0DE9E40]();
}

Swift::Void __swiftcall Dictionary.reserveCapacity(_:)(Swift::Int a1)
{
  MEMORY[0x1E0DE9E60](a1);
}

uint64_t Dictionary.init(dictionaryLiteral:)()
{
  return MEMORY[0x1E0DE9E78]();
}

uint64_t Dictionary.count.getter()
{
  return MEMORY[0x1E0DE9F38]();
}

uint64_t Dictionary.isEmpty.getter()
{
  return MEMORY[0x1E0DE9FC8]();
}

uint64_t Dictionary.mapValues<A>(_:)()
{
  return MEMORY[0x1E0DEA038]();
}

uint64_t type metadata accessor for Dictionary()
{
  return MEMORY[0x1E0DEA048]();
}

uint64_t Dictionary.subscript.modify()
{
  return MEMORY[0x1E0DEA098]();
}

uint64_t Dictionary.subscript.getter()
{
  return MEMORY[0x1E0DEA0A0]();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return MEMORY[0x1E0DEA568]();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)MEMORY[0x1E0CB1940]();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t String.data(using:allowLossyConversion:)()
{
  return MEMORY[0x1E0CB1988]();
}

uint64_t String.init(data:encoding:)()
{
  return MEMORY[0x1E0CB1990]();
}

uint64_t String.init(format:_:)()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t static String.Encoding.utf8.getter()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t type metadata accessor for String.Encoding()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t String.init<A>(describing:)()
{
  return MEMORY[0x1E0DEA5F8]();
}

Swift::String __swiftcall String.lowercased()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = MEMORY[0x1E0DEA610]();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t String.init<A>(reflecting:)()
{
  return MEMORY[0x1E0DEA618]();
}

uint64_t static String._fromSubstring(_:)()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t static String._uncheckedFromUTF8(_:)()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t String.hash(into:)()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t String.count.getter()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t String.index(after:)()
{
  return MEMORY[0x1E0DEA7C0]();
}

uint64_t String.index(_:offsetBy:limitedBy:)()
{
  return MEMORY[0x1E0DEA7D0]();
}

uint64_t String.index(_:offsetBy:)()
{
  return MEMORY[0x1E0DEA7D8]();
}

uint64_t String.append<A>(contentsOf:)()
{
  return MEMORY[0x1E0DEA7F0]();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
  MEMORY[0x1E0DEA800](a1._countAndFlagsBits, a1._object);
}

Swift::String_optional __swiftcall String.Iterator.next()()
{
  uint64_t v0;
  void *v1;
  Swift::String_optional result;

  v0 = MEMORY[0x1E0DEA840]();
  result.value._object = v1;
  result.value._countAndFlagsBits = v0;
  return result;
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t String.UTF8View._foreignIndex(after:)()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t String.UTF8View._foreignIndex(_:offsetBy:limitedBy:)()
{
  return MEMORY[0x1E0DEA868]();
}

uint64_t String.UTF8View._foreignIndex(_:offsetBy:)()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t String.UTF8View._foreignDistance(from:to:)()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t String.UTF8View._foreignSubscript(position:)()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t String.UTF8View.subscript.getter()
{
  return MEMORY[0x1E0DEA8B0]();
}

uint64_t String.UTF16View.index(_:offsetBy:)()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t String.subscript.getter()
{
  return MEMORY[0x1E0DEAA08]();
}

{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t String.init(_:)()
{
  return MEMORY[0x1E0DEAA18]();
}

uint64_t String.init<A>(_:)()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t dispatch thunk of Sequence.makeIterator()()
{
  return MEMORY[0x1E0DEAA58]();
}

uint64_t Sequence._copyContents(initializing:)()
{
  return MEMORY[0x1E0DEAAB8]();
}

uint64_t Sequence.underestimatedCount.getter()
{
  return MEMORY[0x1E0DEAAC8]();
}

uint64_t Sequence._copyToContiguousArray()()
{
  return MEMORY[0x1E0DEAAD0]();
}

uint64_t Sequence.withContiguousStorageIfAvailable<A>(_:)()
{
  return MEMORY[0x1E0DEAAD8]();
}

uint64_t Sequence.lazy.getter()
{
  return MEMORY[0x1E0DEAAF8]();
}

uint64_t Sequence.sorted(by:)()
{
  return MEMORY[0x1E0DEAB30]();
}

uint64_t Sequence.forEach(_:)()
{
  return MEMORY[0x1E0DEAB40]();
}

uint64_t Sequence.contains(where:)()
{
  return MEMORY[0x1E0DEAB48]();
}

uint64_t Sequence<>.contains(_:)()
{
  return MEMORY[0x1E0DEABA0]();
}

uint64_t RawRepresentable<>.encode(to:)()
{
  return MEMORY[0x1E0DEACB8]();
}

uint64_t RawRepresentable<>.init(from:)()
{
  return MEMORY[0x1E0DEAD30]();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return MEMORY[0x1E0DEADA0]();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)MEMORY[0x1E0CB1AC0]();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t Array.startIndex.getter()
{
  return MEMORY[0x1E0DEADA8]();
}

uint64_t Array.description.getter()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t specialized Array._endMutation()()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t Array._checkSubscript(_:wasNativeTypeChecked:)()
{
  return MEMORY[0x1E0DEADC8]();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t static Array._allocateUninitialized(_:)()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return MEMORY[0x1E0DEAE28]();
}

Swift::Bool __swiftcall Array._hoistableIsNativeTypeChecked()()
{
  return MEMORY[0x1E0DEAE38]();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t Array.count.getter()
{
  return MEMORY[0x1E0DEAE60]();
}

uint64_t Array.append<A>(contentsOf:)()
{
  return MEMORY[0x1E0DEAE78]();
}

uint64_t Array.append(_:)()
{
  return MEMORY[0x1E0DEAE80]();
}

uint64_t Array.remove(at:)()
{
  return MEMORY[0x1E0DEAE90]();
}

uint64_t Array.endIndex.getter()
{
  return MEMORY[0x1E0DEAE98]();
}

Swift::Void __swiftcall Array.formIndex(after:)(Swift::Int *after)
{
  MEMORY[0x1E0DEAEA8](after);
}

uint64_t type metadata accessor for Array()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t CheckedContinuation.resume(throwing:)()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t type metadata accessor for CancellationError()
{
  return MEMORY[0x1E0DF05E0]();
}

uint64_t dispatch thunk of AsyncIteratorProtocol.next()()
{
  return MEMORY[0x1E0DF0688]();
}

uint64_t static TaskPriority.background.getter()
{
  return MEMORY[0x1E0DF06F8]();
}

uint64_t static TaskPriority.userInitiated.getter()
{
  return MEMORY[0x1E0DF0700]();
}

uint64_t static TaskPriority.> infix(_:_:)()
{
  return MEMORY[0x1E0DF0708]();
}

uint64_t static TaskPriority.low.getter()
{
  return MEMORY[0x1E0DF0728]();
}

uint64_t static TaskPriority.utility.getter()
{
  return MEMORY[0x1E0DF0738]();
}

uint64_t TaskPriority.init(rawValue:)()
{
  return MEMORY[0x1E0DF0740]();
}

uint64_t TaskPriority.rawValue.getter()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t type metadata accessor for TaskPriority()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t Task.value.getter()
{
  return MEMORY[0x1E0DF0860]();
}

Swift::Void __swiftcall Task.cancel()()
{
  MEMORY[0x1E0DF0870]();
}

uint64_t static Task<>.currentPriority.getter()
{
  return MEMORY[0x1E0DF08C0]();
}

uint64_t static Task<>.checkCancellation()()
{
  return MEMORY[0x1E0DF08C8]();
}

uint64_t AsyncThrowingStream.Continuation.onTermination.setter()
{
  return MEMORY[0x1E0DF0A40]();
}

uint64_t AsyncThrowingStream.Continuation.yield(_:)()
{
  return MEMORY[0x1E0DF0A68]();
}

uint64_t AsyncThrowingStream.Continuation.finish(throwing:)()
{
  return MEMORY[0x1E0DF0A70]();
}

uint64_t AsyncThrowingStream.init<>(_:bufferingPolicy:_:)()
{
  return MEMORY[0x1E0DF0AD8]();
}

NSSet __swiftcall Set._bridgeToObjectiveC()()
{
  return (NSSet)MEMORY[0x1E0CB1BB0]();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x1E0CB1BD8]();
}

uint64_t Set.description.getter()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t Set.init(minimumCapacity:)()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return MEMORY[0x1E0DEB310]();
}

NSNumber __swiftcall Int._bridgeToObjectiveC()()
{
  return (NSNumber)MEMORY[0x1E0CB1C10]();
}

uint64_t dispatch thunk of Collection.startIndex.getter()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t dispatch thunk of Collection.count.getter()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t dispatch thunk of Collection.formIndex(after:)()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t Collection.isEmpty.getter()
{
  return MEMORY[0x1E0DEB660]();
}

uint64_t Collection<>.firstIndex(of:)()
{
  return MEMORY[0x1E0DEB6A8]();
}

uint64_t dispatch thunk of Collection.subscript.read()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t NSFileHandle.read(upToCount:)()
{
  return MEMORY[0x1E0CB1CF0]();
}

uint64_t static os_log_type_t.info.getter()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t static os_log_type_t.debug.getter()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t static os_log_type_t.error.getter()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t static os_log_type_t.fault.getter()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t static os_log_type_t.default.getter()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t C2RequestManager.data(for:options:)()
{
  return MEMORY[0x1E0D03738]();
}

uint64_t type metadata accessor for OS_dispatch_queue.Attributes()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t static os_signpost_type_t.end.getter()
{
  return MEMORY[0x1E0DF2298]();
}

uint64_t static os_signpost_type_t.begin.getter()
{
  return MEMORY[0x1E0DF22A0]();
}

uint64_t NSNotificationCenter.Notifications.makeAsyncIterator()()
{
  return MEMORY[0x1E0CB1ED8]();
}

uint64_t type metadata accessor for NSNotificationCenter.Notifications.Iterator()
{
  return MEMORY[0x1E0CB1EE0]();
}

uint64_t NSNotificationCenter.notifications(named:object:)()
{
  return MEMORY[0x1E0CB1F08]();
}

uint64_t NSArray.makeIterator()()
{
  return MEMORY[0x1E0CB1FF0]();
}

uint64_t NSCoder.decodeObject<A>(of:forKey:)()
{
  return MEMORY[0x1E0CB2020]();
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return MEMORY[0x1E0DEFCD8](seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t NSObject.hash(into:)()
{
  return MEMORY[0x1E0DEFCE8]();
}

uint64_t NSObject.hashValue.getter()
{
  return MEMORY[0x1E0DEFCF0]();
}

uint64_t OS_os_log.signpostsEnabled.getter()
{
  return MEMORY[0x1E0DF22B0]();
}

uint64_t type metadata accessor for Optional()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t dispatch thunk of IteratorProtocol.next()()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t StringProtocol.components<A>(separatedBy:)()
{
  return MEMORY[0x1E0CB2410]();
}

uint64_t StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)()
{
  return MEMORY[0x1E0CB24A8]();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t _HashTable.previousHole(before:)()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t _HashTable.occupiedBucket(after:)()
{
  return MEMORY[0x1E0DEC070]();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t __CocoaSet.makeIterator()()
{
  return MEMORY[0x1E0DEC0B0]();
}

uint64_t __CocoaSet.count.getter()
{
  return MEMORY[0x1E0DEC0E0]();
}

uint64_t __CocoaSet.member(for:)()
{
  return MEMORY[0x1E0DEC0F8]();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return MEMORY[0x1E0DEC110]();
}

uint64_t __CocoaSet.contains(_:)()
{
  return MEMORY[0x1E0DEC118]();
}

uint64_t _expectEnd<A>(of:is:)()
{
  return MEMORY[0x1E0DEC130]();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return MEMORY[0x1E0DEC168](seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t static _SetStorage.copy(original:)()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return MEMORY[0x1E0DEC258]();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return MEMORY[0x1E0DEC260]();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
  MEMORY[0x1E0DEC2A8](a1);
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t type metadata accessor for LazySequence()
{
  return MEMORY[0x1E0DEC310]();
}

Swift::Void __swiftcall _ArrayBuffer._typeCheckSlowPath(_:)(Swift::Int a1)
{
  MEMORY[0x1E0DEC3D0](a1);
}

uint64_t _ArrayBuffer._getElementSlowPath(_:)()
{
  return MEMORY[0x1E0DEC3D8]();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return MEMORY[0x1E0DEC3E8]();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t _ArrayProtocol.filter(_:)()
{
  return MEMORY[0x1E0DEC5F8]();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return MEMORY[0x1E0DEC670]();
}

Swift::Void __swiftcall ContiguousArray.reserveCapacity(_:)(Swift::Int a1)
{
  MEMORY[0x1E0DEC680](a1);
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t ContiguousArray.append(_:)()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t ContiguousArray.init()()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t type metadata accessor for ContiguousArray()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t type metadata accessor for ContinuousClock.Instant()
{
  return MEMORY[0x1E0DF0B60]();
}

uint64_t ContinuousClock.init()()
{
  return MEMORY[0x1E0DF0B98]();
}

uint64_t type metadata accessor for ContinuousClock()
{
  return MEMORY[0x1E0DF0BA0]();
}

uint64_t type metadata accessor for FlattenSequence()
{
  return MEMORY[0x1E0DEC798]();
}

uint64_t dispatch thunk of InstantProtocol.advanced(by:)()
{
  return MEMORY[0x1E0DEC7D0]();
}

uint64_t type metadata accessor for LazyMapSequence()
{
  return MEMORY[0x1E0DEC808]();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return MEMORY[0x1E0DEC8E0]();
}

Swift::Bool __swiftcall _NativeDictionary.ensureUnique(isUnique:capacity:)(Swift::Bool isUnique, Swift::Int capacity)
{
  return MEMORY[0x1E0DECAE0](isUnique, capacity);
}

uint64_t _NativeDictionary._delete(at:)()
{
  return MEMORY[0x1E0DECB00]();
}

uint64_t _NativeDictionary._insert(at:key:value:)()
{
  return MEMORY[0x1E0DECB08]();
}

uint64_t type metadata accessor for _NativeDictionary()
{
  return MEMORY[0x1E0DECB20]();
}

uint64_t __CocoaDictionary.makeIterator()()
{
  return MEMORY[0x1E0DECB40]();
}

uint64_t __CocoaDictionary.count.getter()
{
  return MEMORY[0x1E0DECB80]();
}

uint64_t __CocoaDictionary.lookup(_:)()
{
  return MEMORY[0x1E0DECBA8]();
}

uint64_t __CocoaDictionary.Iterator.next()()
{
  return MEMORY[0x1E0DECBB8]();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return MEMORY[0x1E0DECBE0]();
}

{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t _CocoaArrayWrapper.subscript.getter()
{
  return MEMORY[0x1E0DECD20]();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t static _DictionaryStorage.convert(_:capacity:)()
{
  return MEMORY[0x1E0DECD48]();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t LazySequenceProtocol.map<A>(_:)()
{
  return MEMORY[0x1E0DECE28]();
}

uint64_t LazySequenceProtocol.flatMap<A>(_:)()
{
  return MEMORY[0x1E0DECE38]();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return MEMORY[0x1E0DECF28](cases._rawValue, string._countAndFlagsBits, string._object);
}

uint64_t KeyedDecodingContainer.decode(_:forKey:)()
{
  return MEMORY[0x1E0DECFC0]();
}

{
  return MEMORY[0x1E0DECFE0]();
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t KeyedEncodingContainer.encode(_:forKey:)()
{
  return MEMORY[0x1E0DED0F0]();
}

{
  return MEMORY[0x1E0DED110]();
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return MEMORY[0x1E0DED1A0]();
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return MEMORY[0x1E0DED1B0](a1);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t DefaultStringInterpolation.appendInterpolation<A>(_:)()
{
  return MEMORY[0x1E0DED548]();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t withTaskCancellationHandler<A>(operation:onCancel:isolation:)()
{
  return MEMORY[0x1E0DF0E78]();
}

uint64_t type metadata accessor for __ContiguousArrayStorageBase()
{
  return MEMORY[0x1E0DED770]();
}

uint64_t withCheckedThrowingContinuation<A>(isolation:function:_:)()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return MEMORY[0x1E0DED9F8]();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t dispatch thunk of Clock.now.getter()
{
  return MEMORY[0x1E0DF0EE8]();
}

uint64_t dispatch thunk of Clock.sleep(until:tolerance:)()
{
  return MEMORY[0x1E0DF0EF0]();
}

uint64_t Error<>._code.getter()
{
  return MEMORY[0x1E0CB2628]();
}

uint64_t Error<>._domain.getter()
{
  return MEMORY[0x1E0CB2640]();
}

uint64_t Error._getEmbeddedNSError()()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t Error._code.getter()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t Error._domain.getter()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t Error._userInfo.getter()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t static Hasher._hash(seed:_:)()
{
  return MEMORY[0x1E0DEDEF0]();
}

uint64_t Hasher.init(_seed:)()
{
  return MEMORY[0x1E0DEDEF8]();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
  MEMORY[0x1E0DEDF10](a1);
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt8 a1)
{
  MEMORY[0x1E0DEDF18](a1);
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t dispatch thunk of Decoder.container<A>(keyedBy:)()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t dispatch thunk of Encoder.container<A>(keyedBy:)()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t static Duration.seconds(_:)()
{
  return MEMORY[0x1E0DEE7C8]();
}

uint64_t CodingKey.description.getter()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t CodingKey.debugDescription.getter()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t TaskLocal.init(wrappedValue:)()
{
  return MEMORY[0x1E0DF0F28]();
}

uint64_t TaskLocal.wrappedValue.getter()
{
  return MEMORY[0x1E0DF0F30]();
}

uint64_t TaskLocal.get()()
{
  return MEMORY[0x1E0DF0F38]();
}

uint64_t TaskLocal.withValue<A>(_:operation:isolation:file:line:)()
{
  return MEMORY[0x1E0DF0F48]();
}

uint64_t _typeName(_:qualified:)()
{
  return MEMORY[0x1E0DEE978]();
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x1E0D15420]();
}

CCCryptorStatus CCCryptorCreateWithMode(CCOperation op, CCMode mode, CCAlgorithm alg, CCPadding padding, const void *iv, const void *key, size_t keyLength, const void *tweak, size_t tweakLength, int numRounds, CCModeOptions options, CCCryptorRef *cryptorRef)
{
  return MEMORY[0x1E0C800A0](*(_QWORD *)&op, *(_QWORD *)&mode, *(_QWORD *)&alg, *(_QWORD *)&padding, iv, key, keyLength, tweak);
}

CCCryptorStatus CCCryptorRelease(CCCryptorRef cryptorRef)
{
  return MEMORY[0x1E0C80108](cryptorRef);
}

CCCryptorStatus CCCryptorUpdate(CCCryptorRef cryptorRef, const void *dataIn, size_t dataInLength, void *dataOut, size_t dataOutAvailable, size_t *dataOutMoved)
{
  return MEMORY[0x1E0C80118](cryptorRef, dataIn, dataInLength, dataOut, dataOutAvailable, dataOutMoved);
}

unsigned __int8 *__cdecl CC_MD5(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1E0C80308](data, *(_QWORD *)&len, md);
}

unsigned __int8 *__cdecl CC_SHA1(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1E0C80328](data, *(_QWORD *)&len, md);
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1E0C80368](data, *(_QWORD *)&len, md);
}

CFAllocatorRef CFAllocatorCreate(CFAllocatorRef allocator, CFAllocatorContext *context)
{
  return (CFAllocatorRef)MEMORY[0x1E0C97CA8](allocator, context);
}

void CFArrayApplyFunction(CFArrayRef theArray, CFRange range, CFArrayApplierFunction applier, void *context)
{
  MEMORY[0x1E0C97D00](theArray, range.location, range.length, applier, context);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return MEMORY[0x1E0C97D60](theArray);
}

CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length)
{
  return (CFDataRef)MEMORY[0x1E0C983A0](allocator, bytes, length);
}

CFDataRef CFDataCreateWithBytesNoCopy(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length, CFAllocatorRef bytesDeallocator)
{
  return (CFDataRef)MEMORY[0x1E0C983C8](allocator, bytes, length, bytesDeallocator);
}

const UInt8 *__cdecl CFDataGetBytePtr(CFDataRef theData)
{
  return (const UInt8 *)MEMORY[0x1E0C983E0](theData);
}

CFIndex CFDataGetLength(CFDataRef theData)
{
  return MEMORY[0x1E0C983F8](theData);
}

void CFDictionaryApplyFunction(CFDictionaryRef theDict, CFDictionaryApplierFunction applier, void *context)
{
  MEMORY[0x1E0C98508](theDict, applier, context);
}

Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr)
{
  return MEMORY[0x1E0C989C0](number, theType, valuePtr);
}

Boolean CFNumberIsFloatType(CFNumberRef number)
{
  return MEMORY[0x1E0C989D0](number);
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A60](key, applicationID, userName, hostName);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1E0C98BD0](cf);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
  MEMORY[0x1E0C98BF8](rl, source, mode);
}

CFRunLoopMode CFRunLoopCopyCurrentMode(CFRunLoopRef rl)
{
  return (CFRunLoopMode)MEMORY[0x1E0C98C28](rl);
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return (CFRunLoopRef)MEMORY[0x1E0C98C30]();
}

Boolean CFStringGetFileSystemRepresentation(CFStringRef string, char *buffer, CFIndex maxBufLen)
{
  return MEMORY[0x1E0C990E0](string, buffer, maxBufLen);
}

CFUUIDRef CFUUIDCreate(CFAllocatorRef alloc)
{
  return (CFUUIDRef)MEMORY[0x1E0C99518](alloc);
}

CFStringRef CFUUIDCreateString(CFAllocatorRef alloc, CFUUIDRef uuid)
{
  return (CFStringRef)MEMORY[0x1E0C99538](alloc, uuid);
}

SInt32 CFUserNotificationCancel(CFUserNotificationRef userNotification)
{
  return MEMORY[0x1E0C995A0](userNotification);
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return (CFUserNotificationRef)MEMORY[0x1E0C995A8](allocator, flags, error, dictionary, timeout);
}

CFRunLoopSourceRef CFUserNotificationCreateRunLoopSource(CFAllocatorRef allocator, CFUserNotificationRef userNotification, CFUserNotificationCallBack callout, CFIndex order)
{
  return (CFRunLoopSourceRef)MEMORY[0x1E0C995B8](allocator, userNotification, callout, order);
}

SInt32 CFUserNotificationReceiveResponse(CFUserNotificationRef userNotification, CFTimeInterval timeout, CFOptionFlags *responseFlags)
{
  return MEMORY[0x1E0C995E8](userNotification, responseFlags, timeout);
}

CLLocationCoordinate2D CLLocationCoordinate2DMake(CLLocationDegrees latitude, CLLocationDegrees longitude)
{
  double v2;
  double v3;
  CLLocationCoordinate2D result;

  MEMORY[0x1E0C9E308](latitude, longitude);
  result.longitude = v3;
  result.latitude = v2;
  return result;
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1E0DE2B20]();
}

uint64_t MKBBackupClose()
{
  return MEMORY[0x1E0D4E440]();
}

uint64_t MKBBackupGetFileDescriptors()
{
  return MEMORY[0x1E0D4E450]();
}

uint64_t MKBBackupOpen()
{
  return MEMORY[0x1E0D4E458]();
}

uint64_t MKBBackupSize()
{
  return MEMORY[0x1E0D4E468]();
}

NSArray *__cdecl NSAllMapTableKeys(NSMapTable *table)
{
  return (NSArray *)MEMORY[0x1E0CB2850](table);
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1E0CB28A0](aClassName);
}

NSString *NSHomeDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB2C00]();
}

NSRange NSIntersectionRange(NSRange range1, NSRange range2)
{
  NSUInteger v2;
  NSUInteger v3;
  NSRange result;

  v2 = MEMORY[0x1E0CB2C58](range1.location, range1.length, range2.location, range2.length);
  result.length = v3;
  result.location = v2;
  return result;
}

Protocol *__cdecl NSProtocolFromString(NSString *namestr)
{
  return (Protocol *)MEMORY[0x1E0CB3118](namestr);
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return (NSArray *)MEMORY[0x1E0CB3178](directory, domainMask, expandTilde);
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return (SEL)MEMORY[0x1E0CB3190](aSelectorName);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

NSString *__cdecl NSStringFromProtocol(Protocol *proto)
{
  return (NSString *)MEMORY[0x1E0CB3218](proto);
}

NSString *__cdecl NSStringFromRange(NSRange range)
{
  return (NSString *)MEMORY[0x1E0CB3220](range.location, range.length);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1E0CB3230](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB3250]();
}

int32_t NSVersionOfRunTimeLibrary(const char *libraryName)
{
  return MEMORY[0x1E0C805D0](libraryName);
}

uint64_t PBDataWriterPlaceMark()
{
  return MEMORY[0x1E0D82BF8]();
}

uint64_t PBDataWriterRecallMark()
{
  return MEMORY[0x1E0D82C00]();
}

uint64_t PBDataWriterWriteDataField()
{
  return MEMORY[0x1E0D82C28]();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return MEMORY[0x1E0D82C38]();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return MEMORY[0x1E0D82C58]();
}

uint64_t PBDataWriterWriteInt64Field()
{
  return MEMORY[0x1E0D82C68]();
}

uint64_t PBDataWriterWriteStringField()
{
  return MEMORY[0x1E0D82C98]();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return MEMORY[0x1E0D82CB0]();
}

uint64_t PBDataWriterWriteUint32Field()
{
  return MEMORY[0x1E0D82CB8]();
}

uint64_t PBDataWriterWriteUint64Field()
{
  return MEMORY[0x1E0D82CC0]();
}

uint64_t PBReaderPlaceMark()
{
  return MEMORY[0x1E0D82CE0]();
}

uint64_t PBReaderReadData()
{
  return MEMORY[0x1E0D82CF0]();
}

uint64_t PBReaderReadString()
{
  return MEMORY[0x1E0D82D00]();
}

uint64_t PBReaderRecallMark()
{
  return MEMORY[0x1E0D82D10]();
}

uint64_t PBReaderSkipValueWithTag()
{
  return MEMORY[0x1E0D82D28]();
}

uint64_t PBRepeatedDoubleAdd()
{
  return MEMORY[0x1E0D82D68]();
}

uint64_t PBRepeatedDoubleClear()
{
  return MEMORY[0x1E0D82D70]();
}

uint64_t PBRepeatedDoubleCopy()
{
  return MEMORY[0x1E0D82D78]();
}

uint64_t PBRepeatedDoubleHash()
{
  return MEMORY[0x1E0D82D80]();
}

uint64_t PBRepeatedDoubleIsEqual()
{
  return MEMORY[0x1E0D82D88]();
}

uint64_t PBRepeatedDoubleNSArray()
{
  return MEMORY[0x1E0D82D90]();
}

uint64_t PBRepeatedDoubleSet()
{
  return MEMORY[0x1E0D82D98]();
}

uint64_t PBRepeatedInt32Add()
{
  return MEMORY[0x1E0D82DD8]();
}

uint64_t PBRepeatedInt32Clear()
{
  return MEMORY[0x1E0D82DE0]();
}

uint64_t PBRepeatedInt32Copy()
{
  return MEMORY[0x1E0D82DE8]();
}

uint64_t PBRepeatedInt32Hash()
{
  return MEMORY[0x1E0D82DF0]();
}

uint64_t PBRepeatedInt32IsEqual()
{
  return MEMORY[0x1E0D82DF8]();
}

uint64_t PBRepeatedInt32Set()
{
  return MEMORY[0x1E0D82E08]();
}

uint64_t PBRepeatedInt64Add()
{
  return MEMORY[0x1E0D82E10]();
}

uint64_t PBRepeatedInt64Clear()
{
  return MEMORY[0x1E0D82E18]();
}

uint64_t PBRepeatedInt64Copy()
{
  return MEMORY[0x1E0D82E20]();
}

uint64_t PBRepeatedInt64Hash()
{
  return MEMORY[0x1E0D82E28]();
}

uint64_t PBRepeatedInt64IsEqual()
{
  return MEMORY[0x1E0D82E30]();
}

uint64_t PBRepeatedInt64NSArray()
{
  return MEMORY[0x1E0D82E38]();
}

uint64_t PBRepeatedInt64Set()
{
  return MEMORY[0x1E0D82E40]();
}

uint64_t PBRepeatedUInt32Add()
{
  return MEMORY[0x1E0D82E48]();
}

uint64_t PBRepeatedUInt32Clear()
{
  return MEMORY[0x1E0D82E50]();
}

uint64_t PBRepeatedUInt32Copy()
{
  return MEMORY[0x1E0D82E58]();
}

uint64_t PBRepeatedUInt32Hash()
{
  return MEMORY[0x1E0D82E60]();
}

uint64_t PBRepeatedUInt32IsEqual()
{
  return MEMORY[0x1E0D82E68]();
}

uint64_t PBRepeatedUInt32NSArray()
{
  return MEMORY[0x1E0D82E70]();
}

uint64_t PBRepeatedUInt32Set()
{
  return MEMORY[0x1E0D82E78]();
}

uint64_t PBRepeatedUInt64Add()
{
  return MEMORY[0x1E0D82E80]();
}

uint64_t PBRepeatedUInt64Clear()
{
  return MEMORY[0x1E0D82E88]();
}

uint64_t PBRepeatedUInt64Copy()
{
  return MEMORY[0x1E0D82E90]();
}

uint64_t PBRepeatedUInt64Hash()
{
  return MEMORY[0x1E0D82E98]();
}

uint64_t PBRepeatedUInt64IsEqual()
{
  return MEMORY[0x1E0D82EA0]();
}

uint64_t PBRepeatedUInt64NSArray()
{
  return MEMORY[0x1E0D82EA8]();
}

uint64_t PBRepeatedUInt64Set()
{
  return MEMORY[0x1E0D82EB0]();
}

uint64_t PCSCloudKitShareTokenCopyDecryptedData()
{
  return MEMORY[0x1E0D82618]();
}

uint64_t PCSCloudKitShareTokenCopyEncryptedData()
{
  return MEMORY[0x1E0D82620]();
}

uint64_t PCSCopyUnwrappedKey()
{
  return MEMORY[0x1E0D82628]();
}

uint64_t PCSIdentityCreateFromRaw()
{
  return MEMORY[0x1E0D827D8]();
}

uint64_t PCSServiceItemGetCKKSViewByName()
{
  return MEMORY[0x1E0D82938]();
}

uint64_t PCSServiceItemTypeIsManatee()
{
  return MEMORY[0x1E0D82950]();
}

SCNetworkReachabilityRef SCNetworkReachabilityCreateWithName(CFAllocatorRef allocator, const char *nodename)
{
  return (SCNetworkReachabilityRef)MEMORY[0x1E0CE88C8](allocator, nodename);
}

Boolean SCNetworkReachabilityGetFlags(SCNetworkReachabilityRef target, SCNetworkReachabilityFlags *flags)
{
  return MEMORY[0x1E0CE88D8](target, flags);
}

Boolean SCNetworkReachabilitySetCallback(SCNetworkReachabilityRef target, SCNetworkReachabilityCallBack callout, SCNetworkReachabilityContext *context)
{
  return MEMORY[0x1E0CE88F0](target, callout, context);
}

Boolean SCNetworkReachabilitySetDispatchQueue(SCNetworkReachabilityRef target, dispatch_queue_t queue)
{
  return MEMORY[0x1E0CE88F8](target, queue);
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return MEMORY[0x1E0CD65A0](rnd, count, bytes);
}

CFDictionaryRef SecTaskCopyValuesForEntitlements(SecTaskRef task, CFArrayRef entitlements, CFErrorRef *error)
{
  return (CFDictionaryRef)MEMORY[0x1E0CD6600](task, entitlements, error);
}

SecTaskRef SecTaskCreateWithAuditToken(CFAllocatorRef allocator, audit_token_t *token)
{
  return (SecTaskRef)MEMORY[0x1E0CD6620](allocator, token);
}

uint64_t TCCAccessPreflight()
{
  return MEMORY[0x1E0DB0FF0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

const char *__cdecl _Block_signature(void *aBlock)
{
  return (const char *)MEMORY[0x1E0C80960](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x1E0DE4288](this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x1E0DE4388](this);
}

void operator delete(void *__p)
{
  off_1E1F54B98(__p);
}

void *__cdecl operator new(size_t __sz)
{
  return (void *)off_1E1F54BA0(__sz);
}

void *__cdecl operator new(size_t __sz, const std::nothrow_t *a2)
{
  return (void *)off_1E1F54BA8(__sz, a2);
}

uint64_t __NSMakeSpecialForwardingCaptureBlock()
{
  return MEMORY[0x1E0C9AA78]();
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
  MEMORY[0x1E0C80A58](a1, a2, *(_QWORD *)&a3, a4);
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x1E0DE5068](thrown_size);
}

void __cxa_free_exception(void *a1)
{
  MEMORY[0x1E0DE50A0](a1);
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
  MEMORY[0x1E0DE50D8](a1, lptinfo, a3);
}

int *__error(void)
{
  return (int *)MEMORY[0x1E0C80AC0]();
}

double __exp10(double a1)
{
  double result;

  MEMORY[0x1E0C80AC8](a1);
  return result;
}

uint64_t __strlcat_chk()
{
  return MEMORY[0x1E0C80C40]();
}

__darwin_ct_rune_t __toupper(__darwin_ct_rune_t a1)
{
  return MEMORY[0x1E0C80C78](*(_QWORD *)&a1);
}

const mach_header *__cdecl _dyld_get_image_header(uint32_t image_index)
{
  return (const mach_header *)MEMORY[0x1E0C80E60](*(_QWORD *)&image_index);
}

uint64_t _dyld_get_image_uuid()
{
  return MEMORY[0x1E0C80E78]();
}

uint32_t _dyld_image_count(void)
{
  return MEMORY[0x1E0C80EB8]();
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return (os_activity_t)MEMORY[0x1E0C80FC0](dso, description, activity, *(_QWORD *)&flags);
}

uint64_t _os_crash()
{
  return MEMORY[0x1E0C81000]();
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1E0C81010]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81020](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81040](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _protocol_getMethodTypeEncoding()
{
  return MEMORY[0x1E0DE7A40]();
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

uint64_t _sqlite3_db_clone()
{
  return MEMORY[0x1E0DE8518]();
}

uint64_t _sqlite3_maintain_load_factor()
{
  return MEMORY[0x1E0DE8540]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

uint32_t arc4random(void)
{
  return MEMORY[0x1E0C81570]();
}

void arc4random_buf(void *__buf, size_t __nbytes)
{
  MEMORY[0x1E0C81580](__buf, __nbytes);
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return MEMORY[0x1E0C81588](*(_QWORD *)&__upper_bound);
}

int atoi(const char *a1)
{
  return MEMORY[0x1E0C81668](a1);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

uint64_t ccnistkdf_ctr_hmac()
{
  return MEMORY[0x1E0C82278]();
}

uint64_t ccsha256_di()
{
  return MEMORY[0x1E0C823E0]();
}

BOOL class_addMethod(Class cls, SEL name, IMP imp, const char *types)
{
  return MEMORY[0x1E0DE7A50](cls, name, imp, types);
}

BOOL class_conformsToProtocol(Class cls, Protocol *protocol)
{
  return MEMORY[0x1E0DE7A68](cls, protocol);
}

objc_property_t *__cdecl class_copyPropertyList(Class cls, unsigned int *outCount)
{
  return (objc_property_t *)MEMORY[0x1E0DE7A80](cls, outCount);
}

Method class_getInstanceMethod(Class cls, SEL name)
{
  return (Method)MEMORY[0x1E0DE7AA8](cls, name);
}

IMP class_getMethodImplementation(Class cls, SEL name)
{
  return (IMP)MEMORY[0x1E0DE7AC0](cls, name);
}

objc_property_t class_getProperty(Class cls, const char *name)
{
  return (objc_property_t)MEMORY[0x1E0DE7AD0](cls, name);
}

Class class_getSuperclass(Class cls)
{
  return (Class)MEMORY[0x1E0DE7AD8](cls);
}

__uint64_t clock_gettime_nsec_np(clockid_t __clock_id)
{
  return MEMORY[0x1E0C82670](*(_QWORD *)&__clock_id);
}

int close(int a1)
{
  return MEMORY[0x1E0C82688](*(_QWORD *)&a1);
}

size_t confstr(int a1, char *a2, size_t a3)
{
  return MEMORY[0x1E0C826D0](*(_QWORD *)&a1, a2, a3);
}

void dispatch_activate(dispatch_object_t object)
{
  MEMORY[0x1E0C82BC0](object);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82BC8](when, queue, block);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BE8](queue);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

void dispatch_block_cancel(dispatch_block_t block)
{
  MEMORY[0x1E0C82C58](block);
}

dispatch_block_t dispatch_block_create(dispatch_block_flags_t flags, dispatch_block_t block)
{
  return (dispatch_block_t)MEMORY[0x1E0C82C60](flags, block);
}

dispatch_block_t dispatch_block_create_with_qos_class(dispatch_block_flags_t flags, dispatch_qos_class_t qos_class, int relative_priority, dispatch_block_t block)
{
  return (dispatch_block_t)MEMORY[0x1E0C82C68](flags, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority, block);
}

uint64_t dispatch_block_create_with_voucher()
{
  return MEMORY[0x1E0C82C70]();
}

uint64_t dispatch_block_create_with_voucher_and_qos_class()
{
  return MEMORY[0x1E0C82C78]();
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1E0C82D00](identifier, flags);
}

void *__cdecl dispatch_get_specific(const void *key)
{
  return (void *)MEMORY[0x1E0C82D08](key);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82D38](group, queue, block);
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82D48](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_initially_inactive(dispatch_queue_attr_t attr)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E20](attr);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E28](attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E38](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

dispatch_queue_t dispatch_queue_create_with_target_V2(const char *label, dispatch_queue_attr_t attr, dispatch_queue_t target)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E50](label, attr, target);
}

void dispatch_queue_set_specific(dispatch_queue_t queue, const void *key, void *context, dispatch_function_t destructor)
{
  MEMORY[0x1E0C82E80](queue, key, context, destructor);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA0](object);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1E0C82EC8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82ED8](dsema, timeout);
}

void dispatch_set_target_queue(dispatch_object_t object, dispatch_queue_t queue)
{
  MEMORY[0x1E0C82F08](object, queue);
}

void dispatch_source_cancel(dispatch_source_t source)
{
  MEMORY[0x1E0C82F10](source);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1E0C82F20](type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F58](source, handler);
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
  MEMORY[0x1E0C82F78](source, start, interval, leeway);
}

void dispatch_suspend(dispatch_object_t object)
{
  MEMORY[0x1E0C82F88](object);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x1E0C83038]();
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1E0C83050](__handle, __symbol);
}

int dup(int a1)
{
  return MEMORY[0x1E0C83078](*(_QWORD *)&a1);
}

uint64_t dyld_get_program_sdk_version()
{
  return MEMORY[0x1E0C830B8]();
}

uint64_t dyld_program_sdk_at_least()
{
  return MEMORY[0x1E0C83158]();
}

long double erf(long double __x)
{
  long double result;

  MEMORY[0x1E0C831F0](__x);
  return result;
}

void exit(int a1)
{
  MEMORY[0x1E0C83278](*(_QWORD *)&a1);
}

long double exp2(long double __x)
{
  long double result;

  MEMORY[0x1E0C83288](__x);
  return result;
}

int fcntl(int a1, int a2, ...)
{
  return MEMORY[0x1E0C83300](*(_QWORD *)&a1, *(_QWORD *)&a2);
}

int ffsctl(int a1, unint64_t a2, void *a3, unsigned int a4)
{
  return MEMORY[0x1E0C83378](*(_QWORD *)&a1, a2, a3, *(_QWORD *)&a4);
}

int fgetattrlist(int a1, void *a2, void *a3, size_t a4, unsigned int a5)
{
  return MEMORY[0x1E0C83380](*(_QWORD *)&a1, a2, a3, a4, *(_QWORD *)&a5);
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C83440](__x, __y);
  return result;
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

int fstat(int a1, stat *a2)
{
  return MEMORY[0x1E0C83560](*(_QWORD *)&a1, a2);
}

char *__cdecl getenv(const char *a1)
{
  return (char *)MEMORY[0x1E0C83660](a1);
}

uid_t geteuid(void)
{
  return MEMORY[0x1E0C83668]();
}

pid_t getpid(void)
{
  return MEMORY[0x1E0C83760]();
}

uid_t getuid(void)
{
  return MEMORY[0x1E0C83828]();
}

ssize_t getxattr(const char *path, const char *name, void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1E0C83840](path, name, value, size, *(_QWORD *)&position, *(_QWORD *)&options);
}

IMP imp_implementationWithBlock(id block)
{
  return (IMP)MEMORY[0x1E0DE7B10](block);
}

int kill(pid_t a1, int a2)
{
  return MEMORY[0x1E0C83A48](*(_QWORD *)&a1, *(_QWORD *)&a2);
}

long double log2(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BE8](__x);
  return result;
}

uint64_t mach_continuous_approximate_time(void)
{
  return MEMORY[0x1E0C83C68]();
}

uint64_t mach_continuous_time(void)
{
  return MEMORY[0x1E0C83C70]();
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return MEMORY[0x1E0C83DB8](info);
}

const char *__cdecl macho_arch_name_for_cpu_type(cpu_type_t type, cpu_subtype_t subtype)
{
  return (const char *)MEMORY[0x1E0C83E30](*(_QWORD *)&type, *(_QWORD *)&subtype);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83EF8](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F00](size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1E0C84078](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

IMP method_getImplementation(Method m)
{
  return (IMP)MEMORY[0x1E0DE7B68](m);
}

char *__cdecl mkdtemp(char *a1)
{
  return (char *)MEMORY[0x1E0C84170](a1);
}

void *__cdecl mmap(void *a1, size_t a2, int a3, int a4, int a5, off_t a6)
{
  return (void *)MEMORY[0x1E0C841D8](a1, a2, *(_QWORD *)&a3, *(_QWORD *)&a4, *(_QWORD *)&a5, a6);
}

int munmap(void *a1, size_t a2)
{
  return MEMORY[0x1E0C84220](a1, a2);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return MEMORY[0x1E0C843E8](*(_QWORD *)&token, state64);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

uint64_t nw_endpoint_copy_dictionary()
{
  return MEMORY[0x1E0CCF350]();
}

uint64_t nw_endpoint_create_from_dictionary()
{
  return MEMORY[0x1E0CCF3A8]();
}

uint64_t nw_parameters_copy_dictionary()
{
  return MEMORY[0x1E0CCF8D0]();
}

nw_parameters_t nw_parameters_create(void)
{
  return (nw_parameters_t)MEMORY[0x1E0CCF930]();
}

uint64_t nw_parameters_set_source_application_by_bundle_id()
{
  return MEMORY[0x1E0CCFC40]();
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

Class objc_allocateClassPair(Class superclass, const char *name, size_t extraBytes)
{
  return (Class)MEMORY[0x1E0DE7BC0](superclass, name, extraBytes);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1E0DE7BF0](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_end_catch(void)
{
  MEMORY[0x1E0DE7C80]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

void objc_exception_throw(id exception)
{
  MEMORY[0x1E0DE7CA0](exception);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1E0DE7CD0](self, _cmd, offset, atomic);
}

Protocol *__cdecl objc_getProtocol(const char *name)
{
  return (Protocol *)MEMORY[0x1E0DE7CD8](name);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)((uint64_t (*)(id, SEL))MEMORY[0x1E0DE7D20])(a1, a2);
}

id objc_msgSendSuper(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D28](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_registerClassPair(Class cls)
{
  MEMORY[0x1E0DE7D68](cls);
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F88](self, _cmd, newValue, offset);
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F90](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1E0DE7FC8](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1E0DE7FD0](obj);
}

void objc_terminate(void)
{
  MEMORY[0x1E0DE7FD8]();
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

Class object_getClass(id a1)
{
  return (Class)MEMORY[0x1E0DE7FF8](a1);
}

const char *__cdecl object_getClassName(id a1)
{
  return (const char *)MEMORY[0x1E0DE8000](a1);
}

int open(const char *a1, int a2, ...)
{
  return MEMORY[0x1E0C84480](a1, *(_QWORD *)&a2);
}

uint64_t openbyid_np()
{
  return MEMORY[0x1E0C844B8]();
}

unsigned int os_activity_get_active(os_activity_id_t *entries, unsigned int *count)
{
  return MEMORY[0x1E0C84500](entries, count);
}

void os_activity_scope_enter(os_activity_t activity, os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84510](activity, state);
}

void os_activity_scope_leave(os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84518](state);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1E0C84920](log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return MEMORY[0x1E0C84928](log);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x1E0C84970]();
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84990](lock);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x1E0C849F0]();
}

int proc_name(int pid, void *buffer, uint32_t buffersize)
{
  return MEMORY[0x1E0C84C20](*(_QWORD *)&pid, buffer, *(_QWORD *)&buffersize);
}

int proc_pidinfo(int pid, int flavor, uint64_t arg, void *buffer, int buffersize)
{
  return MEMORY[0x1E0C84C40](*(_QWORD *)&pid, *(_QWORD *)&flavor, arg, buffer, *(_QWORD *)&buffersize);
}

objc_property_attribute_t *__cdecl property_copyAttributeList(objc_property_t property, unsigned int *outCount)
{
  return (objc_property_attribute_t *)MEMORY[0x1E0DE8058](property, outCount);
}

char *__cdecl property_copyAttributeValue(objc_property_t property, const char *attributeName)
{
  return (char *)MEMORY[0x1E0DE8060](property, attributeName);
}

const char *__cdecl property_getName(objc_property_t property)
{
  return (const char *)MEMORY[0x1E0DE8070](property);
}

objc_method_description *__cdecl protocol_copyMethodDescriptionList(Protocol *p, BOOL isRequiredMethod, BOOL isInstanceMethod, unsigned int *outCount)
{
  return (objc_method_description *)MEMORY[0x1E0DE8088](p, isRequiredMethod, isInstanceMethod, outCount);
}

Protocol **__cdecl protocol_copyProtocolList(Protocol *proto, unsigned int *outCount)
{
  return (Protocol **)MEMORY[0x1E0DE80A0](proto, outCount);
}

objc_method_description protocol_getMethodDescription(Protocol *p, SEL aSel, BOOL isRequiredMethod, BOOL isInstanceMethod)
{
  const char *v4;
  char *v5;
  objc_method_description result;

  v4 = (const char *)MEMORY[0x1E0DE80A8](p, aSel, isRequiredMethod, isInstanceMethod);
  result.types = v5;
  result.name = v4;
  return result;
}

int pthread_cond_broadcast(pthread_cond_t *a1)
{
  return MEMORY[0x1E0C84D18](a1);
}

int pthread_cond_wait(pthread_cond_t *a1, pthread_mutex_t *a2)
{
  return MEMORY[0x1E0C84D48](a1, a2);
}

int pthread_mutex_init(pthread_mutex_t *a1, const pthread_mutexattr_t *a2)
{
  return MEMORY[0x1E0C84E20](a1, a2);
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return MEMORY[0x1E0C84E28](a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return MEMORY[0x1E0C84E38](a1);
}

pthread_t pthread_self(void)
{
  return (pthread_t)MEMORY[0x1E0C84ED8]();
}

qos_class_t qos_class_self(void)
{
  return MEMORY[0x1E0C84F80]();
}

char *__cdecl realpath_DARWIN_EXTSN(const char *a1, char *a2)
{
  return (char *)MEMORY[0x1E0C85040](a1, a2);
}

int removexattr(const char *path, const char *name, int options)
{
  return MEMORY[0x1E0C850F0](path, name, *(_QWORD *)&options);
}

uint64_t sandbox_extension_consume()
{
  return MEMORY[0x1E0C851A0]();
}

uint64_t sandbox_extension_release()
{
  return MEMORY[0x1E0C851F8]();
}

SEL sel_registerName(const char *str)
{
  return (SEL)MEMORY[0x1E0DE80E8](str);
}

int setxattr(const char *path, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1E0C853A0](path, name, value, size, *(_QWORD *)&position, *(_QWORD *)&options);
}

unsigned int sleep(unsigned int a1)
{
  return MEMORY[0x1E0C85438](*(_QWORD *)&a1);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return MEMORY[0x1E0C85440](__str, __size, __format);
}

int sqlite3_bind_blob(sqlite3_stmt *a1, int a2, const void *a3, int n, void (__cdecl *a5)(void *))
{
  return MEMORY[0x1E0DE8580](a1, *(_QWORD *)&a2, a3, *(_QWORD *)&n, a5);
}

int sqlite3_bind_blob64(sqlite3_stmt *a1, int a2, const void *a3, sqlite3_uint64 a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x1E0DE8588](a1, *(_QWORD *)&a2, a3, a4, a5);
}

int sqlite3_bind_double(sqlite3_stmt *a1, int a2, double a3)
{
  return MEMORY[0x1E0DE8598](a1, *(_QWORD *)&a2, a3);
}

int sqlite3_bind_int(sqlite3_stmt *a1, int a2, int a3)
{
  return MEMORY[0x1E0DE85A0](a1, *(_QWORD *)&a2, *(_QWORD *)&a3);
}

int sqlite3_bind_int64(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  return MEMORY[0x1E0DE85A8](a1, *(_QWORD *)&a2, a3);
}

int sqlite3_bind_null(sqlite3_stmt *a1, int a2)
{
  return MEMORY[0x1E0DE85B0](a1, *(_QWORD *)&a2);
}

int sqlite3_bind_parameter_index(sqlite3_stmt *a1, const char *zName)
{
  return MEMORY[0x1E0DE85C0](a1, zName);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x1E0DE85D8](a1, *(_QWORD *)&a2, a3, *(_QWORD *)&a4, a5);
}

int sqlite3_bind_text16(sqlite3_stmt *a1, int a2, const void *a3, int a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x1E0DE85E0](a1, *(_QWORD *)&a2, a3, *(_QWORD *)&a4, a5);
}

int sqlite3_busy_timeout(sqlite3 *a1, int ms)
{
  return MEMORY[0x1E0DE8638](a1, *(_QWORD *)&ms);
}

int sqlite3_changes(sqlite3 *a1)
{
  return MEMORY[0x1E0DE8640](a1);
}

int sqlite3_clear_bindings(sqlite3_stmt *a1)
{
  return MEMORY[0x1E0DE8648](a1);
}

int sqlite3_close(sqlite3 *a1)
{
  return MEMORY[0x1E0DE8650](a1);
}

const void *__cdecl sqlite3_column_blob(sqlite3_stmt *a1, int iCol)
{
  return (const void *)MEMORY[0x1E0DE8660](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_bytes(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1E0DE8668](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return MEMORY[0x1E0DE8678](pStmt);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  double result;

  MEMORY[0x1E0DE8688](a1, *(_QWORD *)&iCol);
  return result;
}

int sqlite3_column_int(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1E0DE8690](a1, *(_QWORD *)&iCol);
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1E0DE8698](a1, *(_QWORD *)&iCol);
}

const char *__cdecl sqlite3_column_name(sqlite3_stmt *a1, int N)
{
  return (const char *)MEMORY[0x1E0DE86A0](a1, *(_QWORD *)&N);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return (const unsigned __int8 *)MEMORY[0x1E0DE86B8](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_type(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1E0DE86C8](a1, *(_QWORD *)&iCol);
}

int sqlite3_errcode(sqlite3 *db)
{
  return MEMORY[0x1E0DE8780](db);
}

const char *__cdecl sqlite3_errmsg(sqlite3 *a1)
{
  return (const char *)MEMORY[0x1E0DE8788](a1);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return MEMORY[0x1E0DE8798](a1, sql, callback, a4, errmsg);
}

int sqlite3_extended_errcode(sqlite3 *db)
{
  return MEMORY[0x1E0DE87B0](db);
}

int sqlite3_extended_result_codes(sqlite3 *a1, int onoff)
{
  return MEMORY[0x1E0DE87B8](a1, *(_QWORD *)&onoff);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return MEMORY[0x1E0DE87C8](pStmt);
}

sqlite3_int64 sqlite3_last_insert_rowid(sqlite3 *a1)
{
  return MEMORY[0x1E0DE8820](a1);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return MEMORY[0x1E0DE8870](filename, ppDb, *(_QWORD *)&flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x1E0DE8880](db, zSql, *(_QWORD *)&nByte, ppStmt, pzTail);
}

int sqlite3_reset(sqlite3_stmt *pStmt)
{
  return MEMORY[0x1E0DE88B0](pStmt);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return MEMORY[0x1E0DE89A8](a1);
}

int sqlite3_trace_v2(sqlite3 *a1, unsigned int uMask, int (__cdecl *xCallback)(unsigned int, void *, void *, void *), void *pCtx)
{
  return MEMORY[0x1E0DE89F0](a1, *(_QWORD *)&uMask, xCallback, pCtx);
}

int sqlite3_wal_checkpoint_v2(sqlite3 *db, const char *zDb, int eMode, int *pnLog, int *pnCkpt)
{
  return MEMORY[0x1E0DE8A98](db, zDb, *(_QWORD *)&eMode, pnLog, pnCkpt);
}

int stat(const char *a1, stat *a2)
{
  return MEMORY[0x1E0C854D8](a1, a2);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1E0C85520](__s1, __s2);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1E0C85548](*(_QWORD *)&__errnum);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1E0C85578](__s);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return MEMORY[0x1E0C855A8](__s1, __s2, __n);
}

char *__cdecl strrchr(char *__s, int __c)
{
  return (char *)MEMORY[0x1E0C855E8](__s, *(_QWORD *)&__c);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1E0DEEB40]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x1E0DF0F98]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x1E0DF0FB0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1E0DF0FB8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1E0DF0FC0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x1E0DEEBB0]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x1E0DEEBB8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1E0DEEC38]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1E0DEECE8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1E0DEED18]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return MEMORY[0x1E0DEEDB8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1E0DEEDC8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x1E0DEEE90]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x1E0DEEF80]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1E0DEEFC8]();
}

int sysctl(int *a1, u_int a2, void *a3, size_t *a4, void *a5, size_t a6)
{
  return MEMORY[0x1E0C85798](a1, *(_QWORD *)&a2, a3, a4, a5, a6);
}

kern_return_t task_info(task_name_t target_task, task_flavor_t flavor, task_info_t task_info_out, mach_msg_type_number_t *task_info_outCnt)
{
  return MEMORY[0x1E0C85838](*(_QWORD *)&target_task, *(_QWORD *)&flavor, task_info_out, task_info_outCnt);
}

int usleep(useconds_t a1)
{
  return MEMORY[0x1E0C859E0](*(_QWORD *)&a1);
}

uint64_t xpc_activity_add_eligibility_changed_handler()
{
  return MEMORY[0x1E0C85D78]();
}

xpc_object_t xpc_activity_copy_criteria(xpc_activity_t activity)
{
  return (xpc_object_t)MEMORY[0x1E0C85D80](activity);
}

uint64_t xpc_activity_copy_identifier()
{
  return MEMORY[0x1E0C85D88]();
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return MEMORY[0x1E0C85D90](activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
  MEMORY[0x1E0C85D98](identifier, criteria, handler);
}

uint64_t xpc_activity_remove_eligibility_changed_handler()
{
  return MEMORY[0x1E0C85DA0]();
}

void xpc_activity_set_criteria(xpc_activity_t activity, xpc_object_t criteria)
{
  MEMORY[0x1E0C85DB0](activity, criteria);
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return MEMORY[0x1E0C85DB8](activity, state);
}

uint64_t xpc_activity_should_be_data_budgeted()
{
  return MEMORY[0x1E0C85DC0]();
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return MEMORY[0x1E0C85DC8](activity);
}

void xpc_activity_unregister(const char *identifier)
{
  MEMORY[0x1E0C85DD0](identifier);
}

xpc_object_t xpc_array_create_empty(void)
{
  return (xpc_object_t)MEMORY[0x1E0C85E10]();
}

size_t xpc_array_get_count(xpc_object_t xarray)
{
  return MEMORY[0x1E0C85E30](xarray);
}

const char *__cdecl xpc_array_get_string(xpc_object_t xarray, size_t index)
{
  return (const char *)MEMORY[0x1E0C85E70](xarray, index);
}

void xpc_array_set_string(xpc_object_t xarray, size_t index, const char *string)
{
  MEMORY[0x1E0C85ED0](xarray, index, string);
}

xpc_object_t xpc_copy(xpc_object_t object)
{
  return (xpc_object_t)MEMORY[0x1E0C860E8](object);
}

uint64_t xpc_copy_short_description()
{
  return MEMORY[0x1E0C86148]();
}

BOOL xpc_dictionary_apply(xpc_object_t xdict, xpc_dictionary_applier_t applier)
{
  return MEMORY[0x1E0C861F0](xdict, applier);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return (xpc_object_t)MEMORY[0x1E0C86208](keys, values, count);
}

xpc_object_t xpc_dictionary_create_empty(void)
{
  return (xpc_object_t)MEMORY[0x1E0C86218]();
}

xpc_object_t xpc_dictionary_get_array(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x1E0C86248](xdict, key);
}

BOOL xpc_dictionary_get_BOOL(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C86260](xdict, key);
}

xpc_object_t xpc_dictionary_get_dictionary(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x1E0C86288](xdict, key);
}

double xpc_dictionary_get_double(xpc_object_t xdict, const char *key)
{
  double result;

  MEMORY[0x1E0C86298](xdict, key);
  return result;
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C862A0](xdict, key);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x1E0C862C8](xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x1E0C862E0](xdict, key);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
  MEMORY[0x1E0C86310](xdict, key, value);
}

void xpc_dictionary_set_double(xpc_object_t xdict, const char *key, double value)
{
  MEMORY[0x1E0C86348](xdict, key, value);
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
  MEMORY[0x1E0C86360](xdict, key, value);
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
  MEMORY[0x1E0C86390](xdict, key, string);
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
  MEMORY[0x1E0C863B8](xdict, key, value);
}

BOOL xpc_equal(xpc_object_t object1, xpc_object_t object2)
{
  return MEMORY[0x1E0C86420](object1, object2);
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x1E0C86520](object);
}

const char *__cdecl xpc_type_get_name(xpc_type_t type)
{
  return (const char *)MEMORY[0x1E0C867A0](type);
}

