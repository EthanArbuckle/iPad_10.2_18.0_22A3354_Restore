id VSDefaultLogObject()
{
  if (VSDefaultLogObject___vs_lazy_init_predicate != -1)
    dispatch_once(&VSDefaultLogObject___vs_lazy_init_predicate, &__block_literal_global_6);
  return (id)VSDefaultLogObject___vs_lazy_init_variable;
}

void sub_1D241CC2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id VSSubscriptionFetchOptionsForBundleIdentifiersAndDomainNames(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[128];
  _BYTE v33[128];
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  objc_msgSend(v5, "setObject:forKey:", MEMORY[0x1E0C9AAA0], CFSTR("VSSubscriptionFetchOptionExcludeUninstalledApps"));
  v6 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_msgSend(v5, "setObject:forKey:", v6, CFSTR("VSSubscriptionFetchOptionSources"));
  v30 = 0u;
  v31 = 0u;
  v28 = 0u;
  v29 = 0u;
  v7 = v3;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v28, v33, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v29;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v29 != v10)
          objc_enumerationMutation(v7);
        v12 = *(_QWORD *)(*((_QWORD *)&v28 + 1) + 8 * v11);
        v13 = (void *)MEMORY[0x1D8236758]();
        +[VSSubscriptionSource subscriptionSourceForAppWithBundleID:](VSSubscriptionSource, "subscriptionSourceForAppWithBundleID:", v12);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "addObject:", v14);

        objc_autoreleasePoolPop(v13);
        ++v11;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v28, v33, 16);
    }
    while (v9);
  }

  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v15 = v4;
  v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v24, v32, 16);
  if (v16)
  {
    v17 = v16;
    v18 = *(_QWORD *)v25;
    do
    {
      v19 = 0;
      do
      {
        if (*(_QWORD *)v25 != v18)
          objc_enumerationMutation(v15);
        v20 = *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * v19);
        v21 = (void *)MEMORY[0x1D8236758](v16);
        +[VSSubscriptionSource subscriptionSourceForWebsiteWithDomainName:](VSSubscriptionSource, "subscriptionSourceForWebsiteWithDomainName:", v20, (_QWORD)v24);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "addObject:", v22);

        objc_autoreleasePoolPop(v21);
        ++v19;
      }
      while (v17 != v19);
      v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v24, v32, 16);
      v17 = v16;
    }
    while (v16);
  }

  return v5;
}

void sub_1D241D830(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D241D8D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

VSValueType *VSDeveloperSettingsValueType()
{
  VSValueType *v0;
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v0 = objc_alloc_init(VSValueType);
  -[VSValueType setImplementationClass:](v0, "setImplementationClass:", objc_opt_class());
  v1 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  +[VSValueTypeProperty valueTypePropertyWithName:kind:allowedClasses:initialValue:](VSValueTypeProperty, "valueTypePropertyWithName:kind:allowedClasses:initialValue:", CFSTR("isInSetTopBoxMode"), 0, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "addObject:", v2);

  +[VSValueTypeProperty valueTypePropertyWithName:kind:allowedClasses:initialValue:](VSValueTypeProperty, "valueTypePropertyWithName:kind:allowedClasses:initialValue:", CFSTR("cacheBusterEnabled"), 0, 0, 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "addObject:", v3);

  +[VSValueTypeProperty valueTypePropertyWithName:kind:allowedClasses:initialValue:](VSValueTypeProperty, "valueTypePropertyWithName:kind:allowedClasses:initialValue:", CFSTR("requestTimeoutsDisabled"), 0, 0, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "addObject:", v4);

  +[VSValueTypeProperty valueTypePropertyWithName:kind:allowedClasses:initialValue:](VSValueTypeProperty, "valueTypePropertyWithName:kind:allowedClasses:initialValue:", CFSTR("simulateExpiredToken"), 0, 0, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "addObject:", v5);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  +[VSValueTypeProperty valueTypePropertyWithName:kind:allowedClasses:initialValue:](VSValueTypeProperty, "valueTypePropertyWithName:kind:allowedClasses:initialValue:", CFSTR("setTopBoxBundleIdentifier"), 2, v6, &stru_1E93A8CC0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "addObject:", v7);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  +[VSValueTypeProperty valueTypePropertyWithName:kind:allowedClasses:initialValue:](VSValueTypeProperty, "valueTypePropertyWithName:kind:allowedClasses:initialValue:", CFSTR("setTopBoxUserToken"), 2, v8, &stru_1E93A8CC0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "addObject:", v9);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  +[VSValueTypeProperty valueTypePropertyWithName:kind:allowedClasses:initialValue:](VSValueTypeProperty, "valueTypePropertyWithName:kind:allowedClasses:initialValue:", CFSTR("setTopBoxIdentityProviderID"), 2, v10, &stru_1E93A8CC0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "addObject:", v11);

  +[VSValueTypeProperty valueTypePropertyWithName:kind:allowedClasses:initialValue:](VSValueTypeProperty, "valueTypePropertyWithName:kind:allowedClasses:initialValue:", CFSTR("setTopBoxUseDeviceProfile"), 0, 0, 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "addObject:", v12);

  +[VSValueTypeProperty valueTypePropertyWithName:kind:allowedClasses:initialValue:](VSValueTypeProperty, "valueTypePropertyWithName:kind:allowedClasses:initialValue:", CFSTR("setTopBoxSupportsOptOut"), 0, 0, 0);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "addObject:", v13);

  -[VSValueType setProperties:](v0, "setProperties:", v1);
  return v0;
}

id VSSubscriptionSourceValueType()
{
  if (VSSubscriptionSourceValueType___vs_lazy_init_predicate != -1)
    dispatch_once(&VSSubscriptionSourceValueType___vs_lazy_init_predicate, &__block_literal_global_27);
  return (id)VSSubscriptionSourceValueType___vs_lazy_init_variable;
}

uint64_t VSValueTypeIsEqual(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  unsigned __int8 v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  BOOL v25;
  id v27;
  void *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  objc_super v34;
  _BYTE v35[128];
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = v7;
  if (v7 == v6)
  {
    v9 = 1;
  }
  else if (v7 && (objc_msgSend(v5, "implementationClass"), (objc_opt_isKindOfClass() & 1) != 0))
  {
    if (objc_msgSend(v5, "isSuperclassAlsoValueType"))
    {
      v34.receiver = v6;
      v34.super_class = (Class)objc_msgSend((id)objc_msgSend(v5, "implementationClass"), "superclass");
      v9 = objc_msgSendSuper(&v34, sel_isEqual_, v8);
    }
    else
    {
      v9 = 1;
    }
    v32 = 0u;
    v33 = 0u;
    v30 = 0u;
    v31 = 0u;
    v27 = v5;
    objc_msgSend(v5, "properties");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v30, v35, 16);
    if (v11)
    {
      v12 = v11;
      v13 = *(_QWORD *)v31;
      v28 = v10;
      v29 = *(_QWORD *)v31;
      do
      {
        for (i = 0; i != v12; ++i)
        {
          if (*(_QWORD *)v31 != v13)
            objc_enumerationMutation(v10);
          v15 = *(void **)(*((_QWORD *)&v30 + 1) + 8 * i);
          if ((unint64_t)objc_msgSend(v15, "kind") <= 2)
          {
            objc_msgSend(v15, "name");
            v16 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v6, "valueForKey:", v16);
            v17 = v6;
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v8, "valueForKey:", v16);
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            if ((v9 & 1) != 0)
            {
              v20 = v8;
              v21 = v17;
              v22 = v18;
              v23 = v19;
              v24 = v23;
              if (v22 == v23)
              {
                v9 = 1;
              }
              else
              {
                if (v22)
                  v25 = v23 == 0;
                else
                  v25 = 1;
                if (v25)
                  v9 = 0;
                else
                  v9 = objc_msgSend(v22, "isEqual:", v23);
              }

              v17 = v21;
              v8 = v20;
              v10 = v28;
              v13 = v29;
            }
            else
            {
              v9 = 0;
            }

            v6 = v17;
          }
        }
        v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v30, v35, 16);
      }
      while (v12);
    }

    v5 = v27;
  }
  else
  {
    v9 = 0;
  }

  return v9 & 1;
}

void VSValueTypeInit(void *a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t i;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  objc_msgSend(a1, "properties", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v17;
    v8 = (void *)MEMORY[0x1E0C9AAA0];
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v17 != v7)
          objc_enumerationMutation(v4);
        v10 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * i);
        objc_msgSend(v10, "name");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = objc_msgSend(v10, "kind");
        if (v12 == 2)
        {
          objc_msgSend(v10, "initialValue");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
        }
        else if (v12 == 1)
        {
          objc_msgSend(v10, "initialValue");
          v15 = objc_claimAutoreleasedReturnValue();
          if (v15)
            v14 = (void *)v15;
          else
            v14 = &unk_1E93CC528;
        }
        else
        {
          if (v12)
            goto LABEL_17;
          objc_msgSend(v10, "initialValue");
          v13 = objc_claimAutoreleasedReturnValue();
          if (v13)
            v14 = (void *)v13;
          else
            v14 = v8;
        }
        objc_msgSend(v3, "setValue:forKey:", v14, v11);

LABEL_17:
      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v6);
  }

}

void VSRequireKeyedCoder(void *a1)
{
  id v1;

  v1 = a1;
  if ((objc_msgSend(v1, "allowsKeyedCoding") & 1) == 0)
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("The coder %@ does not allow keyed coding."), v1);

}

void sub_1D241EF28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void __Block_byref_object_dispose__0(uint64_t a1)
{

}

void __Block_byref_object_dispose__1(uint64_t a1)
{

}

void __Block_byref_object_dispose__2(uint64_t a1)
{

}

void __Block_byref_object_dispose__3(uint64_t a1)
{

}

void __Block_byref_object_dispose__4(uint64_t a1)
{

}

void __Block_byref_object_dispose__5(uint64_t a1)
{

}

void __Block_byref_object_dispose__6(uint64_t a1)
{

}

void __Block_byref_object_dispose__7(uint64_t a1)
{

}

void __Block_byref_object_dispose__8(uint64_t a1)
{

}

void __Block_byref_object_dispose__9(uint64_t a1)
{

}

void __Block_byref_object_dispose__10(uint64_t a1)
{

}

void __Block_byref_object_dispose__11(uint64_t a1)
{

}

void __Block_byref_object_dispose__12(uint64_t a1)
{

}

void __Block_byref_object_dispose__13(uint64_t a1)
{

}

void __Block_byref_object_dispose__14(uint64_t a1)
{

}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__10(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__11(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__12(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__13(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__14(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1D241F684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t VSDeveloperServiceInterface()
{
  return objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EFC8D610);
}

void sub_1D241FAA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D241FBC0(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_1D241FC80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D241FD30(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D2420614(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_1D24206E4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id VSErrorLogObject()
{
  if (VSErrorLogObject___vs_lazy_init_predicate != -1)
    dispatch_once(&VSErrorLogObject___vs_lazy_init_predicate, &__block_literal_global_0);
  return (id)VSErrorLogObject___vs_lazy_init_variable;
}

void sub_1D2422C68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D2422F24(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D24230F8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D24235C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id a21,id a22)
{
  id *v22;
  id *v23;
  id *v24;
  uint64_t v25;

  objc_destroyWeak(v24);
  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(location);
  objc_destroyWeak(&a21);
  objc_destroyWeak(&a22);
  objc_destroyWeak((id *)(v25 - 96));
  objc_destroyWeak((id *)(v25 - 88));
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_1D2424278(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  id *v16;
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_1D242544C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D242597C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void VSOpenURL(void *a1)
{
  id v1;
  NSObject *v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  _QWORD v9[4];
  id v10;
  id v11;
  _QWORD aBlock[4];
  id v13;
  uint8_t buf[4];
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (!v1)
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("The linkURL parameter must not be nil."));
  VSDefaultLogObject();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v15 = v1;
    _os_log_impl(&dword_1D2419000, v2, OS_LOG_TYPE_DEFAULT, "Will open URL %@", buf, 0xCu);
  }

  v3 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __VSOpenURL_block_invoke;
  aBlock[3] = &unk_1E939EE30;
  v4 = v1;
  v13 = v4;
  v5 = _Block_copy(aBlock);
  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = v3;
  v9[1] = 3221225472;
  v9[2] = __VSOpenURL_block_invoke_3;
  v9[3] = &unk_1E939EE58;
  v10 = v4;
  v11 = v5;
  v7 = v5;
  v8 = v4;
  objc_msgSend(v6, "openURL:configuration:completionHandler:", v8, 0, v9);

}

void sub_1D242625C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D2427D30(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x330], 8);
  _Block_object_dispose(&STACK[0x360], 8);
  _Unwind_Resume(a1);
}

void sub_1D2429504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  id *v27;
  uint64_t v28;

  objc_destroyWeak(v27);
  objc_destroyWeak((id *)(v28 - 184));
  _Block_object_dispose((const void *)(v28 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_1D2429BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D2429FBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  id *v26;
  uint64_t v27;

  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v27 - 136), 8);
  _Unwind_Resume(a1);
}

void VSValueTypeInitWithCoder(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  objc_super v27;
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (objc_msgSend(v5, "isSuperclassAlsoValueType"))
  {
    v27.receiver = v6;
    v27.super_class = (Class)objc_msgSend((id)objc_msgSend(v5, "implementationClass"), "superclass");
    objc_msgSendSuper(&v27, sel_initWithCoder_, v7);
    v8 = objc_claimAutoreleasedReturnValue();

    v6 = (id)v8;
  }
  VSRequireKeyedCoder(v7);
  v25 = 0u;
  v26 = 0u;
  v23 = 0u;
  v24 = 0u;
  v21 = v5;
  objc_msgSend(v5, "properties");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v23, v28, 16);
  if (v22)
  {
    v10 = *(_QWORD *)v24;
    v11 = 0x1E0CB3000uLL;
    do
    {
      for (i = 0; i != v22; ++i)
      {
        if (*(_QWORD *)v24 != v10)
          objc_enumerationMutation(v9);
        v13 = *(void **)(*((_QWORD *)&v23 + 1) + 8 * i);
        objc_msgSend(v13, "name");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "name");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = objc_msgSend(v13, "kind");
        switch(v16)
        {
          case 2:
            objc_msgSend(v13, "allowedClasses");
            v19 = v11;
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v7, "decodeObjectOfClasses:forKey:", v20, v15);
            v18 = (void *)objc_claimAutoreleasedReturnValue();

            v11 = v19;
            break;
          case 1:
            objc_msgSend(*(id *)(v11 + 2024), "numberWithInteger:", objc_msgSend(v7, "decodeIntegerForKey:", v15));
            v17 = objc_claimAutoreleasedReturnValue();
            goto LABEL_13;
          case 0:
            objc_msgSend(*(id *)(v11 + 2024), "numberWithBool:", objc_msgSend(v7, "decodeBoolForKey:", v15));
            v17 = objc_claimAutoreleasedReturnValue();
LABEL_13:
            v18 = (void *)v17;
            break;
          default:
            v18 = 0;
            break;
        }
        objc_msgSend(v6, "setValue:forKey:", v18, v14);

      }
      v22 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v23, v28, 16);
    }
    while (v22);
  }

}

void VSValueTypeEncodeWithCoder(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  objc_super v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (objc_msgSend(v5, "isSuperclassAlsoValueType"))
  {
    v23.receiver = v6;
    v23.super_class = (Class)objc_msgSend((id)objc_msgSend(v5, "implementationClass"), "superclass");
    objc_msgSendSuper(&v23, sel_encodeWithCoder_, v7);
  }
  VSRequireKeyedCoder(v7);
  v21 = 0u;
  v22 = 0u;
  v19 = 0u;
  v20 = 0u;
  v18 = v5;
  objc_msgSend(v5, "properties");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v19, v24, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v20;
    do
    {
      for (i = 0; i != v10; ++i)
      {
        if (*(_QWORD *)v20 != v11)
          objc_enumerationMutation(v8);
        v13 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * i);
        objc_msgSend(v13, "name");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "valueForKey:", v14);
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "name");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = objc_msgSend(v13, "kind");
        switch(v17)
        {
          case 2:
            objc_msgSend(v7, "encodeObject:forKey:", v15, v16);
            break;
          case 1:
            objc_msgSend(v7, "encodeInteger:forKey:", objc_msgSend(v15, "integerValue"), v16);
            break;
          case 0:
            objc_msgSend(v7, "encodeBool:forKey:", objc_msgSend(v15, "BOOLValue"), v16);
            break;
        }

      }
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v19, v24, 16);
    }
    while (v10);
  }

}

id VSValueTypeCopyWithZone(void *a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void *v15;
  void *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  objc_super v22;
  _BYTE v23[128];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  if (objc_msgSend(v5, "isSuperclassAlsoValueType"))
  {
    v22.receiver = v6;
    v22.super_class = (Class)objc_msgSend((id)objc_msgSend(v5, "implementationClass"), "superclass");
    objc_msgSendSuper(&v22, sel_copyWithZone_, a3);
    v7 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v7 = objc_msgSend((id)objc_msgSend((id)objc_opt_class(), "allocWithZone:", a3), "init");
  }
  v8 = (void *)v7;
  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  objc_msgSend(v5, "properties", 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v18, v23, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v19;
    do
    {
      for (i = 0; i != v11; ++i)
      {
        if (*(_QWORD *)v19 != v12)
          objc_enumerationMutation(v9);
        v14 = *(void **)(*((_QWORD *)&v18 + 1) + 8 * i);
        if ((unint64_t)objc_msgSend(v14, "kind") <= 2)
        {
          objc_msgSend(v14, "name");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v6, "valueForKey:", v15);
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v8, "setValue:forKey:", v16, v15);

        }
      }
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v18, v23, 16);
    }
    while (v11);
  }

  if (!v8)
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("The copy parameter must not be nil."));

  return v8;
}

uint64_t VSValueTypeHash(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  void *v12;
  void *v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  objc_super v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (objc_msgSend(v3, "isSuperclassAlsoValueType"))
  {
    v19.receiver = v4;
    v19.super_class = (Class)objc_msgSend((id)objc_msgSend(v3, "implementationClass"), "superclass");
    v5 = objc_msgSendSuper(&v19, sel_hash);
  }
  else
  {
    v5 = 0;
  }
  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  objc_msgSend(v3, "properties", 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v16;
    do
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v16 != v9)
          objc_enumerationMutation(v6);
        v11 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * i);
        if ((unint64_t)objc_msgSend(v11, "kind") <= 2)
        {
          objc_msgSend(v11, "name");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v4, "valueForKey:", v12);
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          v5 ^= objc_msgSend(v13, "hash");

        }
      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v15, v20, 16);
    }
    while (v8);
  }

  return v5;
}

id VSValueTypeDescription(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v23;
  id obj;
  objc_super v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v23 = v3;
  objc_msgSend(v3, "properties");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v27;
    do
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v27 != v8)
          objc_enumerationMutation(obj);
        v10 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * i);
        objc_msgSend(v10, "name");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "valueForKey:", v11);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "description");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = objc_msgSend(v10, "kind");
        if (v14 == 1)
        {
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%lld"), objc_msgSend(v12, "integerValue"));
          v15 = objc_claimAutoreleasedReturnValue();
        }
        else
        {
          if (v14)
            goto LABEL_11;
          objc_msgSend(MEMORY[0x1E0CB3940], "vs_yesNoStringValueFromBool:", objc_msgSend(v12, "BOOLValue"));
          v15 = objc_claimAutoreleasedReturnValue();
        }
        v16 = (void *)v15;

        v13 = v16;
LABEL_11:
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@ = %@"), v11, v13);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "addObject:", v17);

      }
      v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
    }
    while (v7);
  }

  v25.receiver = v4;
  v25.super_class = (Class)objc_msgSend((id)objc_msgSend(v23, "implementationClass"), "superclass");
  objc_msgSendSuper(&v25, sel_description);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = (void *)MEMORY[0x1E0CB3940];
  objc_msgSend(v5, "componentsJoinedByString:", CFSTR(", "));
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "stringWithFormat:", CFSTR("<%@ %@>"), v18, v20);
  v21 = (void *)objc_claimAutoreleasedReturnValue();

  return v21;
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_1D242E5DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D243006C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D2430478(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D2430A94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1D2430FA0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D2431A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D2431C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id VSAccountApplicationProviderValueType()
{
  if (VSAccountApplicationProviderValueType___vs_lazy_init_predicate != -1)
    dispatch_once(&VSAccountApplicationProviderValueType___vs_lazy_init_predicate, &__block_literal_global_11);
  return (id)VSAccountApplicationProviderValueType___vs_lazy_init_variable;
}

void sub_1D2434F3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D2435160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void VSTrieWalkNodes(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;

  v8 = a1;
  v3 = a2;
  objc_msgSend(v8, "objects");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v4)
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("The [node objects] parameter must not be nil."));
  objc_msgSend(v8, "objects", v8);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "addObjectsFromArray:", v5);

  objc_msgSend(v9, "next");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    objc_msgSend(v9, "next");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __VSTrieWalkNodes_block_invoke;
    v10[3] = &unk_1E939F630;
    v11 = v3;
    objc_msgSend(v7, "enumerateKeysAndObjectsUsingBlock:", v10);

  }
}

id VSAMSRequestValueType()
{
  if (VSAMSRequestValueType___vs_lazy_init_predicate != -1)
    dispatch_once(&VSAMSRequestValueType___vs_lazy_init_predicate, &__block_literal_global_12);
  return (id)VSAMSRequestValueType___vs_lazy_init_variable;
}

uint64_t VSCheckEntitlementForTask(void *a1, _QWORD *a2)
{
  id v3;
  NSObject *v4;
  int v5;
  id v6;
  id v7;
  CFTypeID v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  id v15;
  id v16;
  uint8_t buf[4];
  id v18;
  __int16 v19;
  const __CFString *v20;
  __int16 v21;
  id v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  VSDefaultLogObject();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412546;
    v18 = v3;
    v19 = 2112;
    v20 = CFSTR("com.apple.developer.video-subscriber-single-sign-on");
    _os_log_impl(&dword_1D2419000, v4, OS_LOG_TYPE_DEFAULT, "Will check task %@ for %@ entitlement.", buf, 0x16u);
  }

  v15 = 0;
  v16 = 0;
  v5 = objc_msgSend(v3, "getValue:forEntitlement:error:", &v16, CFSTR("com.apple.developer.video-subscriber-single-sign-on"), &v15);
  v6 = v16;
  v7 = v15;
  if (!v5)
  {
    VSErrorLogObject();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412802;
      v18 = v3;
      v19 = 2112;
      v20 = CFSTR("com.apple.developer.video-subscriber-single-sign-on");
      v21 = 2112;
      v22 = v7;
      _os_log_error_impl(&dword_1D2419000, v11, OS_LOG_TYPE_ERROR, "Unable to check value of task %@ for the %@ entitlement: %@.", buf, 0x20u);
    }

    v12 = v7;
    if (!a2)
      goto LABEL_23;
    goto LABEL_22;
  }
  if (v6)
  {
    v8 = CFGetTypeID(v6);
    if (v8 == CFBooleanGetTypeID())
    {
      if (CFBooleanGetValue((CFBooleanRef)v6))
      {
        VSDefaultLogObject();
        v9 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412546;
          v18 = v3;
          v19 = 2112;
          v20 = CFSTR("com.apple.developer.video-subscriber-single-sign-on");
          _os_log_impl(&dword_1D2419000, v9, OS_LOG_TYPE_DEFAULT, "The task %@ has the %@ entitlement.", buf, 0x16u);
        }
        v10 = 1;
        goto LABEL_26;
      }
      VSErrorLogObject();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        VSCheckEntitlementForTask_cold_3();
    }
    else
    {
      VSErrorLogObject();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        VSCheckEntitlementForTask_cold_4();
    }
  }
  else
  {
    VSErrorLogObject();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      VSCheckEntitlementForTask_cold_2();
  }

  if (a2)
  {
    v12 = 0;
LABEL_22:
    VSPrivateError(-5, v12);
    *a2 = (id)objc_claimAutoreleasedReturnValue();
  }
LABEL_23:
  VSErrorLogObject();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    VSCheckEntitlementForTask_cold_1();
  v10 = 0;
LABEL_26:

  return v10;
}

void sub_1D24381EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D24384E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;
  id *v18;
  uint64_t v19;

  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v19 - 56));
  _Unwind_Resume(a1);
}

id VSViewServiceRequestValueType()
{
  if (VSViewServiceRequestValueType___vs_lazy_init_predicate != -1)
    dispatch_once(&VSViewServiceRequestValueType___vs_lazy_init_predicate, &__block_literal_global_13);
  return (id)VSViewServiceRequestValueType___vs_lazy_init_variable;
}

void sub_1D2439738(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D2439DE0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D2439EF0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id VSSubscriptionValueType()
{
  if (VSSubscriptionValueType___vs_lazy_init_predicate != -1)
    dispatch_once(&VSSubscriptionValueType___vs_lazy_init_predicate, &__block_literal_global_147);
  return (id)VSSubscriptionValueType___vs_lazy_init_variable;
}

void sub_1D243A308(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D243A56C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id VSIdentityProviderValueType()
{
  if (VSIdentityProviderValueType___vs_lazy_init_predicate != -1)
    dispatch_once(&VSIdentityProviderValueType___vs_lazy_init_predicate, &__block_literal_global_17);
  return (id)VSIdentityProviderValueType___vs_lazy_init_variable;
}

void sub_1D24403A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D24404A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id VSAnalyticsServiceInterface()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;

  objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EFC9C4B8);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = (void *)MEMORY[0x1E0C99E60];
  v2 = objc_opt_class();
  objc_msgSend(v1, "setWithObjects:", v2, objc_opt_class(), 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v3, sel_recordFederatedPunchoutEventWithError_metadata_, 0, 0);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", objc_opt_class(), 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v4, sel_recordNowPlayingBrokenEventWithBundleID_, 0, 0);

  v5 = (void *)MEMORY[0x1E0C99E60];
  v6 = objc_opt_class();
  v7 = objc_opt_class();
  v8 = objc_opt_class();
  objc_msgSend(v5, "setWithObjects:", v6, v7, v8, objc_opt_class(), 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v9, sel_recordMetricsCenterFlexibleEventWithName_data_, 1, 0);

  v10 = (void *)MEMORY[0x1E0C99E60];
  v11 = objc_opt_class();
  v12 = objc_opt_class();
  objc_msgSend(v10, "setWithObjects:", v11, v12, objc_opt_class(), 0);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v13, sel_recordMetricsCenterClickEventWithPage_pageType_data_, 2, 0);

  v14 = (void *)MEMORY[0x1E0C99E60];
  v15 = objc_opt_class();
  v16 = objc_opt_class();
  objc_msgSend(v14, "setWithObjects:", v15, v16, objc_opt_class(), 0);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v17, sel_recordMetricsCenterEnterEventWithPage_pageType_data_, 2, 0);

  v18 = (void *)MEMORY[0x1E0C99E60];
  v19 = objc_opt_class();
  v20 = objc_opt_class();
  objc_msgSend(v18, "setWithObjects:", v19, v20, objc_opt_class(), 0);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v21, sel_recordMetricsCenterExitEventWithPage_pageType_data_, 2, 0);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", objc_opt_class(), 0);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v22, sel_recordAMSMetricsEvent_, 0, 0);

  return v0;
}

id VSSubscriptionServiceInterface()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;

  objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EFC8DD10);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = (void *)MEMORY[0x1E0C99E60];
  v2 = objc_opt_class();
  v3 = objc_opt_class();
  v4 = objc_opt_class();
  v5 = objc_opt_class();
  v6 = objc_opt_class();
  v7 = objc_opt_class();
  v8 = objc_opt_class();
  objc_msgSend(v1, "setWithObjects:", v2, v3, v4, v5, v6, v7, v8, objc_opt_class(), 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v9, sel_fetchActiveSubscriptionsWithOptions_completionHandler_, 0, 0);

  v10 = (void *)MEMORY[0x1E0C99E60];
  v11 = objc_opt_class();
  objc_msgSend(v10, "setWithObjects:", v11, objc_opt_class(), 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v12, sel_fetchActiveSubscriptionsWithOptions_completionHandler_, 0, 1);

  v13 = (void *)MEMORY[0x1E0C99E60];
  v14 = objc_opt_class();
  objc_msgSend(v13, "setWithObjects:", v14, objc_opt_class(), 0);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v15, sel_removeSubscriptions_, 0, 0);

  return v0;
}

uint64_t VSPrivacyServiceInterface()
{
  return objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EFC8B948);
}

void sub_1D244367C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1D24439BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

id VSKeychainItemKindGenericPassword()
{
  if (VSKeychainItemKindGenericPassword___vs_lazy_init_predicate != -1)
    dispatch_once(&VSKeychainItemKindGenericPassword___vs_lazy_init_predicate, &__block_literal_global_19);
  return (id)VSKeychainItemKindGenericPassword___vs_lazy_init_variable;
}

void sub_1D2445C00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D24461C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

id VSSubscriptionFetchOptionsForAppWithBundleIdentifier(void *a1)
{
  objc_class *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v8[2];

  v8[1] = *MEMORY[0x1E0C80C00];
  v1 = (objc_class *)MEMORY[0x1E0C99E08];
  v2 = a1;
  v3 = objc_alloc_init(v1);
  objc_msgSend(MEMORY[0x1E0C99D68], "distantPast");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v4, CFSTR("VSSubscriptionFetchOptionEarliestExpirationDate"));

  objc_msgSend(v3, "setObject:forKey:", MEMORY[0x1E0C9AAA0], CFSTR("VSSubscriptionFetchOptionExcludeUninstalledApps"));
  +[VSSubscriptionSource subscriptionSourceForAppWithBundleID:](VSSubscriptionSource, "subscriptionSourceForAppWithBundleID:", v2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v8[0] = v5;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v8, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v6, CFSTR("VSSubscriptionFetchOptionSources"));

  return v3;
}

id VSSubscriptionFetchOptionsForInfoFromAppWithBundleIdentifier(void *a1, void *a2)
{
  objc_class *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD v11[2];

  v11[1] = *MEMORY[0x1E0C80C00];
  v3 = (objc_class *)MEMORY[0x1E0C99E08];
  v4 = a2;
  v5 = a1;
  v6 = objc_alloc_init(v3);
  objc_msgSend(MEMORY[0x1E0C99D68], "distantPast");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setObject:forKey:", v7, CFSTR("VSSubscriptionFetchOptionEarliestExpirationDate"));

  objc_msgSend(v6, "setObject:forKey:", MEMORY[0x1E0C9AAA0], CFSTR("VSSubscriptionFetchOptionExcludeUninstalledApps"));
  +[VSSubscriptionSource subscriptionSourceForAppWithBundleID:](VSSubscriptionSource, "subscriptionSourceForAppWithBundleID:", v4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v11[0] = v8;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v11, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setObject:forKey:", v9, CFSTR("VSSubscriptionFetchOptionSources"));

  objc_msgSend(v6, "setObject:forKey:", v5, CFSTR("VSSubscriptionFetchOptionSubscriptionInfo"));
  return v6;
}

id VSSubscriptionFetchOptionsForWebSubscriptionsCreatedAfterDate(void *a1)
{
  objc_class *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;

  v1 = (objc_class *)MEMORY[0x1E0C99E08];
  v2 = a1;
  v3 = objc_alloc_init(v1);
  objc_msgSend(MEMORY[0x1E0C99D68], "distantPast");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v4, CFSTR("VSSubscriptionFetchOptionEarliestExpirationDate"));

  objc_msgSend(v3, "setObject:forKey:", &unk_1E93CC588, CFSTR("VSSubscriptionFetchOptionSourceKind"));
  v5 = objc_alloc(MEMORY[0x1E0CB3588]);
  objc_msgSend(MEMORY[0x1E0C99D68], "distantFuture");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)objc_msgSend(v5, "initWithStartDate:endDate:", v2, v6);

  objc_msgSend(v3, "setObject:forKey:", v7, CFSTR("VSSubscriptionFetchOptionCreationDateInterval"));
  return v3;
}

id VSAppChannelsMappingValueType()
{
  if (VSAppChannelsMappingValueType___vs_lazy_init_predicate != -1)
    dispatch_once(&VSAppChannelsMappingValueType___vs_lazy_init_predicate, &__block_literal_global_22);
  return (id)VSAppChannelsMappingValueType___vs_lazy_init_variable;
}

void sub_1D24484BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

id VSAllKnownTemplateElements()
{
  if (VSAllKnownTemplateElements___vs_lazy_init_predicate != -1)
    dispatch_once(&VSAllKnownTemplateElements___vs_lazy_init_predicate, &__block_literal_global_23);
  return (id)VSAllKnownTemplateElements___vs_lazy_init_variable;
}

id VSPlatformTemplateElements()
{
  if (VSPlatformTemplateElements___vs_lazy_init_predicate != -1)
    dispatch_once(&VSPlatformTemplateElements___vs_lazy_init_predicate, &__block_literal_global_12);
  return (id)VSPlatformTemplateElements___vs_lazy_init_variable;
}

void sub_1D2448A4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D2448B88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1D2448E78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void runLoopSourceScheduleCallback(void *a1)
{
  id v1;
  __CFRunLoop *v2;

  v1 = a1;
  CFRunLoopSourceSignal((CFRunLoopSourceRef)objc_msgSend(v1, "runLoopSource"));
  v2 = (__CFRunLoop *)objc_msgSend(v1, "underlyingRunLoop");

  CFRunLoopWakeUp(v2);
}

void runLoopSourceCancellCallback(void *a1)
{
  id v2;
  __CFRunLoop *v3;
  __CFRunLoopSource *v4;
  __CFRunLoop *v5;

  if (!a1)
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("The ptr parameter must not be nil."));
  v2 = a1;
  v3 = (__CFRunLoop *)objc_msgSend(v2, "underlyingRunLoop");
  v4 = (__CFRunLoopSource *)objc_msgSend(v2, "runLoopSource");
  CFRunLoopRemoveSource(v3, v4, (CFRunLoopMode)*MEMORY[0x1E0C9B280]);
  v5 = (__CFRunLoop *)objc_msgSend(v2, "underlyingRunLoop");

  CFRunLoopStop(v5);
}

void runLoopSourcePerformCallback(void *a1)
{
  id v2;
  void *v3;
  void *v4;
  void (**v5)(_QWORD);
  void *v6;
  id obj;

  if (!a1)
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("The ptr parameter must not be nil."));
  v2 = a1;
  v3 = (void *)MEMORY[0x1D8236758]();
  obj = v2;
  objc_sync_enter(obj);
  while (1)
  {
    objc_msgSend(obj, "blocks");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "firstObject");
    v5 = (void (**)(_QWORD))objc_claimAutoreleasedReturnValue();

    if (!v5)
      break;
    objc_msgSend(obj, "blocks");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "removeObjectAtIndex:", 0);

    v5[2](v5);
  }
  objc_sync_exit(obj);

  objc_autoreleasePoolPop(v3);
}

void sub_1D2449030(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1D244A5A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

id VSSharedSAMLParserController()
{
  if (VSSharedSAMLParserController___vs_lazy_init_predicate != -1)
    dispatch_once(&VSSharedSAMLParserController___vs_lazy_init_predicate, &__block_literal_global_24);
  return (id)VSSharedSAMLParserController___vs_lazy_init_variable;
}

id VSAccountProviderResponseValueType()
{
  if (VSAccountProviderResponseValueType___vs_lazy_init_predicate != -1)
    dispatch_once(&VSAccountProviderResponseValueType___vs_lazy_init_predicate, &__block_literal_global_25);
  return (id)VSAccountProviderResponseValueType___vs_lazy_init_variable;
}

void sub_1D244CEAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D244E624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D244EEAC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D244F11C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D244F228(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id intermediaryKeyPathsForKeyPath(void *a1)
{
  id v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = a1;
  if (!v1)
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("The keyPath parameter must not be nil."));
  v2 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_msgSend(v1, "componentsSeparatedByString:", CFSTR("."));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (void *)objc_msgSend(v3, "mutableCopy");

  if ((unint64_t)objc_msgSend(v4, "count") >= 2)
  {
    do
    {
      objc_msgSend(v4, "removeLastObject");
      objc_msgSend(v4, "componentsJoinedByString:", CFSTR("."));
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v2, "addObject:", v5);

    }
    while ((unint64_t)objc_msgSend(v4, "count") > 1);
  }

  return v2;
}

void sub_1D244F61C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  void *v15;

  objc_sync_exit(v15);
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_1D244F78C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D244FABC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D2451C30(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D2456244(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D24562E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D245639C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D2456A14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D2457DAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  _Block_object_dispose(&a59, 8);
  _Unwind_Resume(a1);
}

void sub_1D2459F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D245A4C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  uint64_t v35;

  _Block_object_dispose(&a35, 8);
  _Block_object_dispose((const void *)(v35 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1D245AF68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D245B278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D245B850(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D245B8F8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D245CE00(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D245E428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a37, 8);
  _Unwind_Resume(a1);
}

void sub_1D245E6A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17)
{
  id *v17;
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  _Unwind_Resume(a1);
}

void sub_1D245E8FC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D245E9A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D245EA44(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D245EADC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D245EB78(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D246070C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D2460B6C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D2460C94(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D2460D2C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t VSNumberForFourCharCode(unsigned int a1)
{
  return objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLong:", a1);
}

void VSRequireMainThread()
{
  void *v0;
  uint64_t v1;
  id v2;

  if ((objc_msgSend(MEMORY[0x1E0CB3978], "isMainThread") & 1) == 0)
  {
    v0 = (void *)MEMORY[0x1E0C99DA0];
    v1 = *MEMORY[0x1E0C99768];
    objc_msgSend(MEMORY[0x1E0CB3978], "currentThread");
    v2 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "raise:format:", v1, CFSTR("Running on %@ instead of main thread."), v2);

  }
}

uint64_t VSAssertNotMainThread()
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0CB3978], "isMainThread");
  if ((_DWORD)result)
    return objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99768], CFSTR("Must not run on main thread."));
  return result;
}

void VSRequireUsageInfoPlistKey()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;

  if (VSRequireUsageInfoPlistKey_onceToken != -1)
    dispatch_once(&VSRequireUsageInfoPlistKey_onceToken, &__block_literal_global_38);
  if (!VSRequireUsageInfoPlistKey_usageValueOrNil)
  {
    VSPrivateAccessUsageDescriptionMissing();
    v3 = (id)objc_claimAutoreleasedReturnValue();
    v0 = (void *)MEMORY[0x1E0C99DA0];
    v1 = *MEMORY[0x1E0C99768];
    objc_msgSend(v3, "localizedDescription");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "raise:format:", v1, CFSTR("%@"), v2);

  }
}

uint64_t VSAssertWithMessage(uint64_t result, uint64_t a2)
{
  if ((result & 1) == 0)
    return objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99768], CFSTR("%@"), a2);
  return result;
}

id VSAccountMetadataRequestValueType()
{
  if (VSAccountMetadataRequestValueType___vs_lazy_init_predicate != -1)
    dispatch_once(&VSAccountMetadataRequestValueType___vs_lazy_init_predicate, &__block_literal_global_39);
  return (id)VSAccountMetadataRequestValueType___vs_lazy_init_variable;
}

id VSViewServiceResponseValueType()
{
  if (VSViewServiceResponseValueType___vs_lazy_init_predicate != -1)
    dispatch_once(&VSViewServiceResponseValueType___vs_lazy_init_predicate, &__block_literal_global_40);
  return (id)VSViewServiceResponseValueType___vs_lazy_init_variable;
}

void sub_1D246371C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

id VSUserInfoForErrorRecoveryOptions(void *a1)
{
  objc_class *v1;
  id v2;
  id v3;
  VSErrorRecoveryAttempter *v4;
  void *v5;
  void *v6;

  v1 = (objc_class *)MEMORY[0x1E0C99E08];
  v2 = a1;
  v3 = objc_alloc_init(v1);
  v4 = objc_alloc_init(VSErrorRecoveryAttempter);
  -[VSErrorRecoveryAttempter setOptions:](v4, "setOptions:", v2);
  objc_msgSend(v3, "setObject:forKey:", v4, *MEMORY[0x1E0CB3148]);
  objc_msgSend(v2, "valueForKey:", CFSTR("localizedAlertButtonTitle"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setObject:forKey:", v5, *MEMORY[0x1E0CB2D78]);
  objc_msgSend(v2, "indexesOfObjectsPassingTest:", &__block_literal_global_55);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "setObject:forKey:", v6, CFSTR("VSErrorDestructiveRecoveryOptionIndexSet"));
  return v3;
}

void VSWaitForDebugger()
{
  objc_msgSend(MEMORY[0x1E0C99D68], "distantFuture");

}

void VSPerformBlockOnMainThread(void *a1)
{
  void *v1;
  id v2;

  v2 = a1;
  if (!v2)
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("The block parameter must not be nil."));
  objc_msgSend(MEMORY[0x1E0CB3828], "mainQueue");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "addOperationWithBlock:", v2);

}

void VSPerformCompletionHandler(void *a1)
{
  void *v1;
  id v2;

  v2 = a1;
  if (!v2)
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("The block parameter must not be nil."));
  VSCompletionQueue();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "addOperationWithBlock:", v2);

}

id VSCompletionQueue()
{
  if (VSCompletionQueue___vs_lazy_init_predicate != -1)
    dispatch_once(&VSCompletionQueue___vs_lazy_init_predicate, &__block_literal_global_43);
  return (id)VSCompletionQueue___vs_lazy_init_variable;
}

id VSMainThreadOperationWithBlock(void *a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  _QWORD v6[4];
  id v7;

  v1 = a1;
  if (!v1)
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("The block parameter must not be nil."));
  v2 = (void *)MEMORY[0x1E0CB34C8];
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __VSMainThreadOperationWithBlock_block_invoke;
  v6[3] = &unk_1E939F2E8;
  v7 = v1;
  v3 = v1;
  objc_msgSend(v2, "blockOperationWithBlock:", v6);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void VSEnqueueCompletionOperation(void *a1)
{
  void *v1;
  id v2;

  v2 = a1;
  if (!v2)
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("The completionOperation parameter must not be nil."));
  VSCompletionQueue();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "addOperation:", v2);

}

id VSOnceAndOnlyOnceBlock(void *a1)
{
  id v1;
  VSOnceAndOnlyOnceHandler *v2;
  VSOnceAndOnlyOnceHandler *v3;
  void *v4;
  _QWORD v6[4];
  VSOnceAndOnlyOnceHandler *v7;

  v1 = a1;
  v2 = objc_alloc_init(VSOnceAndOnlyOnceHandler);
  -[VSOnceAndOnlyOnceHandler setBlock:](v2, "setBlock:", v1);

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __VSOnceAndOnlyOnceBlock_block_invoke;
  v6[3] = &unk_1E939EE88;
  v7 = v2;
  v3 = v2;
  v4 = (void *)objc_msgSend(v6, "copy");

  return v4;
}

void sub_1D2467BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;

  _Block_object_dispose((const void *)(v33 - 160), 8);
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

id VSAuditTokenValueType()
{
  if (VSAuditTokenValueType___vs_lazy_init_predicate != -1)
    dispatch_once(&VSAuditTokenValueType___vs_lazy_init_predicate, &__block_literal_global_45);
  return (id)VSAuditTokenValueType___vs_lazy_init_variable;
}

void commonInit(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;

  v1 = (void *)MEMORY[0x1E0CB39F8];
  v2 = a1;
  objc_msgSend(v1, "defaultSessionConfiguration");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB39F0], "sessionWithConfiguration:", v4);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setSession:", v3);

}

void sub_1D2468EB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D24695DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D24697E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id VSDisplayNameForBundleWithIdentifier(void *a1)
{
  id v1;
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  id v7;

  v1 = a1;
  if (!v1)
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("The bundleID parameter must not be nil."));
  v7 = 0;
  objc_msgSend(MEMORY[0x1E0CA5898], "bundleRecordWithBundleIdentifier:allowPlaceholder:error:", v1, 0, &v7);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v7;
  if (v3)
  {
    VSErrorLogObject();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      VSDisplayNameForBundleWithIdentifier_cold_1((uint64_t)v1, v3, v4);

  }
  objc_msgSend(v2, "localizedName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

id VSBundleURLForProcessIdentifier(int a1)
{
  void *v2;
  void *v3;
  void *v4;
  _BYTE buffer[1024];
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  bzero(buffer, 0x400uLL);
  if (proc_pidpath(a1, buffer, 0x400u) < 1)
    return 0;
  buffer[1023] = 0;
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", buffer);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", v2);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3)
      v4 = (void *)_CFBundleCopyBundleURLForExecutableURL();
    else
      v4 = 0;

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

id VSLoadBundleAtPath(void *a1)
{
  id v1;
  void *v2;
  char *v3;
  const char *v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  id v9;

  v1 = a1;
  if (v1)
  {
    v2 = (void *)MEMORY[0x1E0CB3940];
    v3 = getenv("SIMULATOR_ROOT");
    if (v3)
      v4 = v3;
    else
      v4 = "/";
    objc_msgSend(v2, "stringWithUTF8String:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "stringByAppendingPathComponent:", v1);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB34D0], "bundleWithPath:", v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v7)
    {
      VSErrorLogObject();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_FAULT))
        VSLoadBundleAtPath_cold_1((uint64_t)v1, v8);

    }
    v9 = v7;

  }
  else
  {
    v9 = 0;
  }

  return v9;
}

uint64_t VSLoadInterfaceFramework(uint64_t a1)
{
  void *v2;
  uint64_t v3;

  VSLoadBundleAtPath(CFSTR("System/Library/PrivateFrameworks/VideoSubscriberAccountUI.framework"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "loadAndReturnError:", a1);

  return v3;
}

void sub_1D246BF34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D246C040(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D246C7E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id VSIdentityProviderAppsResponseValueType()
{
  if (VSIdentityProviderAppsResponseValueType___vs_lazy_init_predicate != -1)
    dispatch_once(&VSIdentityProviderAppsResponseValueType___vs_lazy_init_predicate, &__block_literal_global_50);
  return (id)VSIdentityProviderAppsResponseValueType___vs_lazy_init_variable;
}

void sub_1D246D6DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id VSUserAccountServiceInterface()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;

  objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EFC9C5D8);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", objc_opt_class(), 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v1, sel_updateUserAccount_completion_, 0, 0);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", objc_opt_class(), 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v2, sel_updateUserAccount_completion_, 0, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", objc_opt_class(), 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v3, sel_queryUserAccountsWithOptions_completion_, 0, 0);

  v4 = (void *)MEMORY[0x1E0C99E60];
  v5 = objc_opt_class();
  v6 = objc_opt_class();
  objc_msgSend(v4, "setWithObjects:", v5, v6, objc_opt_class(), 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v7, sel_queryUserAccountsWithOptions_completion_, 0, 1);

  v8 = (void *)MEMORY[0x1E0C99E60];
  v9 = objc_opt_class();
  objc_msgSend(v8, "setWithObjects:", v9, objc_opt_class(), 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v10, sel_queryUserAccountsWithOptions_sourceIdentifier_sourceType_deviceIdentifier_completion_, 0, 0);

  v11 = (void *)MEMORY[0x1E0C99E60];
  v12 = objc_opt_class();
  v13 = objc_opt_class();
  objc_msgSend(v11, "setWithObjects:", v12, v13, objc_opt_class(), 0);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v14, sel_queryUserAccountsWithOptions_sourceIdentifier_sourceType_deviceIdentifier_completion_, 0, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", objc_opt_class(), 0);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v15, sel_deleteUserAccount_completion_, 0, 0);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", objc_opt_class(), 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v16, sel_deleteUserAccount_completion_, 0, 1);

  v17 = (void *)MEMORY[0x1E0C99E60];
  v18 = objc_opt_class();
  v19 = objc_opt_class();
  v20 = objc_opt_class();
  v21 = objc_opt_class();
  v22 = objc_opt_class();
  v23 = objc_opt_class();
  v24 = objc_opt_class();
  objc_msgSend(v17, "setWithObjects:", v18, v19, v20, v21, v22, v23, v24, objc_opt_class(), 0);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v25, sel_fetchActiveSubscriptionsWithOptions_completionHandler_, 0, 0);

  v26 = (void *)MEMORY[0x1E0C99E60];
  v27 = objc_opt_class();
  objc_msgSend(v26, "setWithObjects:", v27, objc_opt_class(), 0);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v28, sel_fetchActiveSubscriptionsWithOptions_completionHandler_, 0, 1);

  v29 = (void *)MEMORY[0x1E0C99E60];
  v30 = objc_opt_class();
  objc_msgSend(v29, "setWithObjects:", v30, objc_opt_class(), 0);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v31, sel_removeSubscriptions_, 0, 0);

  return v0;
}

id VSSubscriptionPropertyListStoreType()
{
  if (VSSubscriptionPropertyListStoreType___vs_lazy_init_predicate != -1)
    dispatch_once(&VSSubscriptionPropertyListStoreType___vs_lazy_init_predicate, &__block_literal_global_51);
  return (id)VSSubscriptionPropertyListStoreType___vs_lazy_init_variable;
}

void sub_1D246EBD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL VSErrorIsPublicError(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  _BOOL8 v5;

  v3 = a1;
  objc_msgSend(v3, "domain");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "isEqual:", CFSTR("VSErrorDomain")))
    v5 = objc_msgSend(v3, "code") == a2;
  else
    v5 = 0;

  return v5;
}

BOOL VSErrorIsPrivateError(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  _BOOL8 v5;

  v3 = a1;
  objc_msgSend(v3, "domain");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "isEqual:", CFSTR("VSPrivateErrorDomain")))
    v5 = objc_msgSend(v3, "code") == a2;
  else
    v5 = 0;

  return v5;
}

id VSPublicError(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v5 = a3;
  VSLocalizedDescriptionForPublicErrorCode(a2, a1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  VSLocalizedRecoverySuggestionForPublicErrorCode(a2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  VSErrorInfoWithDetailedErrors(v6, v7, v5, 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("VSErrorDomain"), a2, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

__CFString *VSLocalizedDescriptionForPublicErrorCode(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  __CFString *v12;
  NSObject *v13;

  VSGetErrorStringsForType(a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "objectForKey:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    VSGetErrorStringsForType(a2);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "objectForKey:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v9)
      objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("The [VSGetErrorStringsForType(errorType) objectForKey:@(errorCode)] parameter must not be nil."));
    VSGetErrorStringsForType(a2);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "objectForKey:", v11);
    v12 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    VSErrorLogObject();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_FAULT))
      VSLocalizedDescriptionForPublicErrorCode_cold_1(a2, a1, v13);

    v12 = &stru_1E93A8CC0;
  }

  return v12;
}

id VSLocalizedRecoverySuggestionForPublicErrorCode(uint64_t a1)
{
  void *v1;
  void *v2;
  const __CFString *v3;
  void *v4;

  if (a1 == 4)
  {
    objc_msgSend(MEMORY[0x1E0CB34D0], "vs_frameworkBundle");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    v2 = v1;
    v3 = CFSTR("ERROR_RECOVERY_SUGGESTION_AUTHORIZATION_DENIED");
  }
  else
  {
    if (a1 != 3)
    {
      v4 = 0;
      return v4;
    }
    objc_msgSend(MEMORY[0x1E0CB34D0], "vs_frameworkBundle");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    v2 = v1;
    v3 = CFSTR("ERROR_RECOVERY_SUGGESTION_SERVICE_TEMPORARILY_UNAVAILABLE");
  }
  objc_msgSend(v1, "localizedStringForKey:value:table:", v3, 0, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

id VSPublicErrorWithDetailedErrors(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v5 = a3;
  VSLocalizedDescriptionForPublicErrorCode(a2, a1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  VSLocalizedRecoverySuggestionForPublicErrorCode(a2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  VSErrorInfoWithDetailedErrors(v6, v7, 0, v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("VSErrorDomain"), a2, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

id VSErrorInfoWithDetailedErrors(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = a4;
  v11 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  if (v7)
  {
    v12 = (void *)objc_msgSend(v7, "copy");
    objc_msgSend(v11, "setObject:forKey:", v12, *MEMORY[0x1E0CB2D50]);

  }
  if (v8)
  {
    v13 = (void *)objc_msgSend(v8, "copy");
    objc_msgSend(v11, "setObject:forKey:", v13, *MEMORY[0x1E0CB2D80]);

  }
  if (v9)
  {
    v14 = (void *)objc_msgSend(v9, "copy");
    objc_msgSend(v11, "setObject:forKey:", v14, *MEMORY[0x1E0CB3388]);

  }
  if (v10)
  {
    v15 = (void *)objc_msgSend(v10, "copy");
    objc_msgSend(v11, "setObject:forKey:", v15, CFSTR("VSDetailedErrors"));

  }
  return v11;
}

id VSPrivateError(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;

  v3 = a2;
  VSLocalizedDescriptionForPrivateErrorCode(a1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  VSErrorInfoWithDetailedErrors(v4, 0, v3, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("VSPrivateErrorDomain"), a1, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

__CFString *VSLocalizedDescriptionForPrivateErrorCode(uint64_t a1)
{
  __CFString *v1;
  void *v2;
  void *v3;
  const __CFString *v4;

  v1 = CFSTR("The TV provider did not include any text fields in the credential entry document.");
  switch(a1)
  {
    case -26:
      v1 = CFSTR("The expiration date provided was invalid.");
      return v1;
    case -25:
    case -18:
      objc_msgSend(MEMORY[0x1E0CB34D0], "vs_frameworkBundle");
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      v3 = v2;
      v4 = CFSTR("ACCOUNT_LOADING_ERROR_MESSAGE");
      goto LABEL_28;
    case -24:
      v1 = CFSTR("Encountered unexpected data.");
      return v1;
    case -23:
      v1 = CFSTR("The account access has been restricted.");
      return v1;
    case -22:
      v1 = CFSTR("The attempt to deserialize an object has failed.");
      return v1;
    case -21:
      v1 = CFSTR("The attempt to serialize an object has failed.");
      return v1;
    case -20:
      v1 = CFSTR("This app does not support the authentication scheme used by this TV Provider.");
      return v1;
    case -19:
      v1 = CFSTR("The TV provider did not include a source URL in the web authentication document.");
      return v1;
    case -17:
      objc_msgSend(MEMORY[0x1E0CB34D0], "vs_frameworkBundle");
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      v3 = v2;
      v4 = CFSTR("CREDENTIAL_ENTRY_ERROR_TITLE");
      goto LABEL_28;
    case -16:
      objc_msgSend(MEMORY[0x1E0CB34D0], "vs_frameworkBundle");
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      v3 = v2;
      v4 = CFSTR("DELETE_ACCOUNT_ERROR_MESSAGE");
      goto LABEL_28;
    case -15:
      v1 = CFSTR("The attempt to reset the Apple verification state failed.");
      return v1;
    case -14:
      v1 = CFSTR("A URL is missing from the bag.");
      return v1;
    case -13:
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("This app has crashed because it attempted to access privacy-sensitive data without a usage description.  The app's Info.plist must contain an %@ key with a string value explaining to the user how the app uses this data."), CFSTR("NSVideoSubscriberAccountUsageDescription"));
      goto LABEL_23;
    case -12:
      v1 = CFSTR("The account access has not yet been determined.");
      return v1;
    case -11:
      v1 = CFSTR("The account access has been denied.");
      return v1;
    case -10:
      v1 = CFSTR("The Apple verification token needs to be regenerated");
      return v1;
    case -9:
      v1 = CFSTR("The operation took too long to finish.");
      return v1;
    case -8:
      v1 = CFSTR("The TV provider didn’t define the App.onRequest() function.");
      return v1;
    case -7:
      v1 = CFSTR("The TV provider took too long to respond.");
      return v1;
    case -6:
      v1 = CFSTR("This TV Provider is no longer available.");
      return v1;
    case -5:
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("The %@ entitlement is missing."), CFSTR("com.apple.developer.video-subscriber-single-sign-on"));
LABEL_23:
      v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
      if (!v1)
        goto LABEL_29;
      return v1;
    case -4:
      objc_msgSend(MEMORY[0x1E0CB34D0], "vs_frameworkBundle");
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      v3 = v2;
      v4 = CFSTR("CREDENTIAL_ENTRY_ERROR_MESSAGE_GENERIC");
      goto LABEL_28;
    case -3:
      objc_msgSend(MEMORY[0x1E0CB34D0], "vs_frameworkBundle");
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      v3 = v2;
      v4 = CFSTR("ERROR_DESCRIPTION_UNSUPPORTED_AUTHENTICATION_MECHANISM");
      goto LABEL_28;
    case -2:
      return v1;
    case -1:
      objc_msgSend(MEMORY[0x1E0CB34D0], "vs_frameworkBundle");
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      v3 = v2;
      v4 = CFSTR("ERROR_DESCRIPTION_VIEW_SERVICE_CRASHED");
LABEL_28:
      objc_msgSend(v2, "localizedStringForKey:value:table:", v4, 0, 0);
      v1 = (__CFString *)objc_claimAutoreleasedReturnValue();

      if (!v1)
        goto LABEL_29;
      return v1;
    default:
LABEL_29:
      objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("The localizedDescription parameter must not be nil."));
      v1 = 0;
      return v1;
  }
}

id VSPrivateErrorWithRecoverySuggestion(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v5 = a3;
  v6 = a2;
  VSLocalizedDescriptionForPrivateErrorCode(a1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB34D0], "vs_frameworkBundle");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "localizedStringForKey:value:table:", CFSTR("ERROR_RECOVERY_SUGGESTION_SERVICE_TEMPORARILY_UNAVAILABLE"), 0, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
    v10 = v6;
  else
    v10 = v9;
  VSErrorInfoWithDetailedErrors(v7, v10, v5, 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("VSPrivateErrorDomain"), a1, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

id VSPublicUnsupportedProviderError(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v3 = a1;
  v4 = a2;
  VSLocalizedDescriptionForPublicErrorCode(1, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  VSErrorInfoWithDetailedErrors(v5, 0, 0, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v7 = (void *)objc_msgSend(v3, "copy");
    objc_msgSend(v6, "setObject:forKey:", v7, CFSTR("VSErrorInfoKeyUnsupportedProviderIdentifier"));

  }
  if (v4)
    objc_msgSend(v6, "setObject:forKey:", v4, *MEMORY[0x1E0CB3388]);
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("VSErrorDomain"), 1, v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

id VSPublicProviderRejectedError(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  VSAccountProviderResponse *v11;
  int v12;
  void *v13;
  void *v14;
  void *v15;

  v5 = a2;
  v6 = a3;
  v7 = a1;
  VSLocalizedDescriptionForPublicErrorCode(4, 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  VSLocalizedRecoverySuggestionForPublicErrorCode(4);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  VSErrorInfoWithDetailedErrors(v8, v9, 0, 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_alloc_init(VSAccountProviderResponse);
  -[VSAccountProviderResponse setAuthenticationScheme:](v11, "setAuthenticationScheme:", v7);
  -[VSAccountProviderResponse setStatus:](v11, "setStatus:", v6);
  -[VSAccountProviderResponse setBody:](v11, "setBody:", v6);
  objc_msgSend(v10, "setObject:forKey:", v11, CFSTR("VSErrorInfoKeyAccountProviderResponse"));
  v12 = objc_msgSend(v7, "isEqual:", CFSTR("SAML"));

  if (v12)
  {
    if (v5)
    {
      v13 = (void *)objc_msgSend(v5, "copy");
      objc_msgSend(v10, "setObject:forKey:", v13, CFSTR("VSErrorInfoKeySAMLResponse"));

    }
    if (v6)
    {
      v14 = (void *)objc_msgSend(v6, "copy");
      objc_msgSend(v10, "setObject:forKey:", v14, CFSTR("VSErrorInfoKeySAMLResponseStatus"));

    }
  }
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("VSErrorDomain"), 4, v10);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  return v15;
}

id VSPublicServiceTemporarilyUnavailableError(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = a1;
  VSLocalizedDescriptionForPublicErrorCode(3, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  VSLocalizedRecoverySuggestionForPublicErrorCode(3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  VSErrorInfoWithDetailedErrors(v2, v3, v1, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("VSErrorDomain"), 3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

id VSInvalidVerificationTokenError(void *a1)
{
  return VSPublicError(0, 5, a1);
}

id VSPrivateAccessUsageDescriptionMissing()
{
  void *v0;
  void *v1;
  void *v2;

  VSLocalizedDescriptionForPrivateErrorCode(-13);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  VSErrorInfoWithDetailedErrors(v0, 0, 0, 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("VSPrivateErrorDomain"), -13, v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

id VSPrivateViewServiceCrashedErrorWithRecoveryHandler(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  VSErrorRecoveryOption *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  VSErrorRecoveryOption *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v20;
  void *v21;
  _QWORD v22[4];
  id v23;
  _QWORD v24[4];
  id v25;

  v3 = a2;
  v4 = a1;
  VSLocalizedDescriptionForPrivateErrorCode(-1);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB34D0], "vs_frameworkBundle");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("ERROR_RECOVERY_SUGGESTION_VIEW_SERVICE_CRASHED"), 0, 0);
  v20 = (void *)objc_claimAutoreleasedReturnValue();

  v6 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  objc_msgSend(v6, "setObject:forKey:", v21, *MEMORY[0x1E0CB2D50]);
  objc_msgSend(v6, "setObject:forKey:", v20, *MEMORY[0x1E0CB2D80]);
  objc_msgSend(v6, "setObject:forKey:", v4, *MEMORY[0x1E0CB3388]);

  v7 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v8 = objc_alloc_init(VSErrorRecoveryOption);
  objc_msgSend(MEMORY[0x1E0CB34D0], "vs_frameworkBundle");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "localizedStringForKey:value:table:", CFSTR("ERROR_ACTION_RETRY_TITLE"), 0, 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[VSErrorRecoveryOption setLocalizedAlertButtonTitle:](v8, "setLocalizedAlertButtonTitle:", v10);

  v11 = MEMORY[0x1E0C809B0];
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 3221225472;
  v24[2] = __VSPrivateViewServiceCrashedErrorWithRecoveryHandler_block_invoke;
  v24[3] = &unk_1E93A1018;
  v12 = v3;
  v25 = v12;
  -[VSErrorRecoveryOption setAttemptHandler:](v8, "setAttemptHandler:", v24);
  objc_msgSend(v7, "addObject:", v8);
  v13 = objc_alloc_init(VSErrorRecoveryOption);
  objc_msgSend(MEMORY[0x1E0CB34D0], "vs_frameworkBundle");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "localizedStringForKey:value:table:", CFSTR("CANCEL_TITLE"), 0, 0);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  -[VSErrorRecoveryOption setLocalizedAlertButtonTitle:](v13, "setLocalizedAlertButtonTitle:", v15);

  v22[0] = v11;
  v22[1] = 3221225472;
  v22[2] = __VSPrivateViewServiceCrashedErrorWithRecoveryHandler_block_invoke_2;
  v22[3] = &unk_1E93A1018;
  v23 = v12;
  v16 = v12;
  -[VSErrorRecoveryOption setAttemptHandler:](v13, "setAttemptHandler:", v22);
  objc_msgSend(v7, "addObject:", v13);
  VSUserInfoForErrorRecoveryOptions(v7);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "addEntriesFromDictionary:", v17);

  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("VSPrivateErrorDomain"), -1, v6);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  return v18;
}

id VSPrivateAccountDeletionErrorWithRecoveryHandler(void *a1, void *a2)
{
  return VSPrivateErrorWithRecoveryHandler(-16, a1, a2);
}

id VSPrivateErrorWithRecoveryHandler(uint64_t a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  BOOL IsPrivateError;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  VSErrorRecoveryOption *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  id v33;
  _QWORD v34[4];
  id v35;

  v5 = a2;
  v33 = a3;
  VSLocalizedDescriptionForPrivateErrorCode(a1);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = (_QWORD *)MEMORY[0x1E0CB2D50];
  if ((a1 & 0xFFFFFFFFFFFFFFFELL) == 0xFFFFFFFFFFFFFFEELL)
  {
    v8 = v5;
    if (v8)
    {
      v9 = v8;
      v10 = *MEMORY[0x1E0CB3388];
      while (1)
      {
        objc_msgSend(v9, "domain", v33);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_msgSend(v11, "isEqualToString:", CFSTR("VSJSErrorDomain")) & 1) != 0)
          break;
        IsPrivateError = VSErrorIsPrivateError(v9, -6);

        if (IsPrivateError)
          goto LABEL_10;
        objc_msgSend(v9, "userInfo");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "objectForKey:", v10);
        v14 = objc_claimAutoreleasedReturnValue();

        v9 = (void *)v14;
        if (!v14)
          goto LABEL_7;
      }

LABEL_10:
      v15 = v9;
    }
    else
    {
LABEL_7:
      v15 = 0;
    }
    objc_msgSend(v15, "localizedDescription", v33);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v17, "length")
      && (objc_msgSend(v15, "userInfo"),
          v18 = (void *)objc_claimAutoreleasedReturnValue(),
          objc_msgSend(v18, "objectForKey:", *v7),
          v19 = (void *)objc_claimAutoreleasedReturnValue(),
          v19,
          v18,
          v19))
    {
      if (!v17)
        objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99778], CFSTR("The message parameter must not be nil."));
      v16 = v17;
    }
    else
    {
      v16 = 0;
    }

  }
  else
  {
    v16 = 0;
  }
  v20 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  objc_msgSend(v20, "setObject:forKey:", v6, *v7);
  if (v16)
    objc_msgSend(v20, "setObject:forKey:", v16, *MEMORY[0x1E0CB2D80]);
  if (v5)
    objc_msgSend(v20, "setObject:forKey:", v5, *MEMORY[0x1E0CB3388]);
  v21 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v22 = objc_alloc_init(VSErrorRecoveryOption);
  objc_msgSend(MEMORY[0x1E0CB34D0], "vs_frameworkBundle");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = v23;
  if (a1 == -18)
  {
    objc_msgSend(v23, "localizedStringForKey:value:table:", CFSTR("ERROR_ACTION_RETRY_TITLE"), 0, 0);
    v25 = (void *)objc_claimAutoreleasedReturnValue();

    if (!VSErrorIsPrivateError(v5, -6))
    {
      v28 = (void *)v6;
      v27 = v33;
      goto LABEL_28;
    }
    objc_msgSend(MEMORY[0x1E0CB34D0], "vs_frameworkBundle");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "localizedStringForKey:value:table:", CFSTR("SIGN_OUT_BUTTON_TITLE"), 0, 0);
    v26 = objc_claimAutoreleasedReturnValue();

    v25 = (void *)v26;
  }
  else
  {
    objc_msgSend(v23, "localizedStringForKey:value:table:", CFSTR("ERROR_DISMISS_BUTTON_TITLE"), 0, 0);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v27 = v33;

  v28 = (void *)v6;
LABEL_28:
  -[VSErrorRecoveryOption setLocalizedAlertButtonTitle:](v22, "setLocalizedAlertButtonTitle:", v25, v33);
  v34[0] = MEMORY[0x1E0C809B0];
  v34[1] = 3221225472;
  v34[2] = __VSPrivateErrorWithRecoveryHandler_block_invoke;
  v34[3] = &unk_1E93A1018;
  v35 = v27;
  v29 = v27;
  -[VSErrorRecoveryOption setAttemptHandler:](v22, "setAttemptHandler:", v34);
  objc_msgSend(v21, "addObject:", v22);
  VSUserInfoForErrorRecoveryOptions(v21);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "addEntriesFromDictionary:", v30);

  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("VSPrivateErrorDomain"), a1, v20);
  v31 = (void *)objc_claimAutoreleasedReturnValue();

  return v31;
}

id VSPrivateAccountValidationErrorWithRecoveryHandler(void *a1, void *a2)
{
  return VSPrivateErrorWithRecoveryHandler(-17, a1, a2);
}

id VSPrivateAccountLoadingErrorWithRecoveryHandler(void *a1, void *a2)
{
  return VSPrivateErrorWithRecoveryHandler(-18, a1, a2);
}

id VSGetErrorStringsForType(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  if (VSGetErrorStringsForType_onceToken != -1)
    dispatch_once(&VSGetErrorStringsForType_onceToken, &__block_literal_global_52);
  v2 = (void *)VSGetErrorStringsForType_errorStringMaps;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
    v5 = v4;
  else
    v5 = (id)MEMORY[0x1E0C9AA70];

  return v5;
}

void sub_1D2471174(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id secureCodingSafeObject(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  objc_class *v4;
  void *v5;
  id v6;
  void *v7;
  VSOptional *v8;
  void *v9;
  uint64_t v10;
  objc_class *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  void *v20;
  void *v21;
  uint64_t v22;
  objc_class *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t j;
  void *v31;
  void *v33;
  uint64_t v34;
  objc_class *v35;
  void *v36;
  objc_class *v37;
  id v38;
  id v39;
  id v40;
  _QWORD v41[4];
  id v42;
  _QWORD v43[4];
  id v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _QWORD v49[4];
  id v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _BYTE v55[128];
  _BYTE v56[128];
  uint64_t v57;

  v57 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if ((objc_msgSend(v1, "conformsToProtocol:", &unk_1EFC84478) & 1) == 0)
  {
    v8 = objc_alloc_init(VSOptional);
LABEL_7:
    v7 = v8;
    goto LABEL_31;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      v2 = (void *)MEMORY[0x1E0C99DA0];
      v3 = *MEMORY[0x1E0C99778];
      v4 = (objc_class *)objc_opt_class();
      NSStringFromClass(v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v2, "raise:format:", v3, CFSTR("Unexpectedly, object was %@, instead of NSError."), v5);

    }
    objc_msgSend(v1, "vs_secureCodingSafeError");
    v6 = (id)objc_claimAutoreleasedReturnValue();
    +[VSOptional optionalWithObject:](VSOptional, "optionalWithObject:", v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    goto LABEL_30;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      v9 = (void *)MEMORY[0x1E0C99DA0];
      v10 = *MEMORY[0x1E0C99778];
      v11 = (objc_class *)objc_opt_class();
      NSStringFromClass(v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "raise:format:", v10, CFSTR("Unexpectedly, object was %@, instead of NSArray."), v12);

    }
    v13 = v1;
    v14 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v51 = 0u;
    v52 = 0u;
    v53 = 0u;
    v54 = 0u;
    v6 = v13;
    v15 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v51, v56, 16);
    if (v15)
    {
      v16 = v15;
      v17 = *(_QWORD *)v52;
      v18 = MEMORY[0x1E0C809B0];
      do
      {
        for (i = 0; i != v16; ++i)
        {
          if (*(_QWORD *)v52 != v17)
            objc_enumerationMutation(v6);
          secureCodingSafeObject(*(_QWORD *)(*((_QWORD *)&v51 + 1) + 8 * i));
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          v49[0] = v18;
          v49[1] = 3221225472;
          v49[2] = __secureCodingSafeObject_block_invoke;
          v49[3] = &unk_1E93A1088;
          v50 = v14;
          objc_msgSend(v20, "conditionallyUnwrapObject:", v49);

        }
        v16 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v51, v56, 16);
      }
      while (v16);
    }
LABEL_29:

    +[VSOptional optionalWithObject:](VSOptional, "optionalWithObject:", v14);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_30:
    goto LABEL_31;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      v21 = (void *)MEMORY[0x1E0C99DA0];
      v22 = *MEMORY[0x1E0C99778];
      v23 = (objc_class *)objc_opt_class();
      NSStringFromClass(v23);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "raise:format:", v22, CFSTR("Unexpectedly, object was %@, instead of NSSet."), v24);

    }
    v25 = v1;
    v14 = objc_alloc_init(MEMORY[0x1E0C99E20]);
    v45 = 0u;
    v46 = 0u;
    v47 = 0u;
    v48 = 0u;
    v6 = v25;
    v26 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v45, v55, 16);
    if (v26)
    {
      v27 = v26;
      v28 = *(_QWORD *)v46;
      v29 = MEMORY[0x1E0C809B0];
      do
      {
        for (j = 0; j != v27; ++j)
        {
          if (*(_QWORD *)v46 != v28)
            objc_enumerationMutation(v6);
          secureCodingSafeObject(*(_QWORD *)(*((_QWORD *)&v45 + 1) + 8 * j));
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          v43[0] = v29;
          v43[1] = 3221225472;
          v43[2] = __secureCodingSafeObject_block_invoke_2;
          v43[3] = &unk_1E93A1088;
          v44 = v14;
          objc_msgSend(v31, "conditionallyUnwrapObject:", v43);

        }
        v27 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v45, v55, 16);
      }
      while (v27);
    }
    goto LABEL_29;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    +[VSOptional optionalWithObject:](VSOptional, "optionalWithObject:", v1);
    v8 = (VSOptional *)objc_claimAutoreleasedReturnValue();
    goto LABEL_7;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    v33 = (void *)MEMORY[0x1E0C99DA0];
    v34 = *MEMORY[0x1E0C99778];
    v35 = (objc_class *)objc_opt_class();
    NSStringFromClass(v35);
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v33, "raise:format:", v34, CFSTR("Unexpectedly, object was %@, instead of NSDictionary."), v36);

  }
  v37 = (objc_class *)MEMORY[0x1E0C99E08];
  v38 = v1;
  v39 = objc_alloc_init(v37);
  v41[0] = MEMORY[0x1E0C809B0];
  v41[1] = 3221225472;
  v41[2] = __secureCodingSafeObject_block_invoke_3;
  v41[3] = &unk_1E939F270;
  v42 = v39;
  v40 = v39;
  objc_msgSend(v38, "enumerateKeysAndObjectsUsingBlock:", v41);

  +[VSOptional optionalWithObject:](VSOptional, "optionalWithObject:", v40);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_31:
  return v7;
}

uint64_t __secureCodingSafeObject_block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
}

uint64_t __secureCodingSafeObject_block_invoke_2(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
}

void __secureCodingSafeObject_block_invoke_3(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;

  v5 = a2;
  secureCodingSafeObject(a3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __secureCodingSafeObject_block_invoke_4;
  v8[3] = &unk_1E93A10B0;
  v9 = *(id *)(a1 + 32);
  v10 = v5;
  v7 = v5;
  objc_msgSend(v6, "conditionallyUnwrapObject:", v8);

}

uint64_t __secureCodingSafeObject_block_invoke_4(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:", a2, *(_QWORD *)(a1 + 40));
}

void sub_1D2472A54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_6(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void sub_1D24739D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D247427C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17)
{
  id *v17;
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  _Unwind_Resume(a1);
}

void sub_1D2474630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D2474FB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void commonInit_0(_QWORD *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8;
  id *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;

  a1[5] = a2;
  v8 = a5;
  v9 = a1;
  v10 = objc_msgSend(a3, "copy");
  v11 = v9[2];
  v9[2] = (id)v10;

  v9[14] = a4;
  v12 = objc_msgSend(v8, "copy");

  v13 = v9[15];
  v9[15] = (id)v12;

  +[VSDevice currentDevice](VSDevice, "currentDevice");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v9[10] = (id)+[VSUserAccount deviceCategoryFromDeviceType:](VSUserAccount, "deviceCategoryFromDeviceType:", objc_msgSend(v14, "deviceType"));

  objc_msgSend(MEMORY[0x1E0C99D68], "now");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_storeStrong(v9 + 12, v15);
  v16 = v9[13];
  v9[13] = v15;
  v17 = v15;

  objc_storeStrong(v9 + 21, CFSTR("userAccount"));
}

void sub_1D2479C98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D247B160(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D247B510(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1D247BA00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D247BBFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D247BDDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D247C214(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1D247C654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D247C8EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D247CF80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id VSMainConcurrencyBindingOptions()
{
  void *v0;
  void *v1;
  void *v2;
  _QWORD v4[3];
  _QWORD v5[4];

  v5[3] = *MEMORY[0x1E0C80C00];
  v4[0] = CFSTR("VSRequiredThreadBindingOption");
  objc_msgSend(MEMORY[0x1E0CB3978], "mainThread");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v5[0] = v0;
  v4[1] = CFSTR("VSRequiredOperationQueueBindingOption");
  objc_msgSend(MEMORY[0x1E0CB3828], "mainQueue");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v4[2] = CFSTR("VSRequiredDispatchQueueBindingOption");
  v5[1] = v1;
  v5[2] = MEMORY[0x1E0C80D38];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v5, v4, 3);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

id VSAccountMetadataValueType()
{
  if (VSAccountMetadataValueType___vs_lazy_init_predicate[0] != -1)
    dispatch_once(VSAccountMetadataValueType___vs_lazy_init_predicate, &__block_literal_global_55);
  return (id)VSAccountMetadataValueType___vs_lazy_init_variable;
}

VideoSubscriberAccount::VSTVProviderKeys_optional __swiftcall VSTVProviderKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  VideoSubscriberAccount::VSTVProviderKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D24DFF5C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static VSTVProviderKeys.allCases.getter()
{
  return &unk_1E93A1478;
}

uint64_t VSTVProviderKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D247F468 + 4 * byte_1D24E8920[*v0]))(0xD000000000000012, 0x80000001D2502EA0);
}

uint64_t sub_1D247F468()
{
  return 0x6F74736575716572;
}

uint64_t sub_1D247F484()
{
  return 0x5F6E695F6E676973;
}

uint64_t sub_1D247F4A4()
{
  return 0x765F656C646E7562;
}

void sub_1D247F4C8(char *a1)
{
  sub_1D247F51C(*a1);
}

unint64_t sub_1D247F4D8()
{
  unint64_t result;

  result = qword_1EFC7E768;
  if (!qword_1EFC7E768)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSTVProviderKeys, &type metadata for VSTVProviderKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC7E768);
  }
  return result;
}

void sub_1D247F51C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1D247F568(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D247F5E4 + 4 * byte_1D24E8928[a2]))(0x6F74736575716572);
}

uint64_t sub_1D247F5E4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6F74736575716572 && v1 == 0xE900000000000072)
    v2 = 1;
  else
    v2 = sub_1D24DFF74();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D247F6A4()
{
  char *v0;

  sub_1D247F6AC(*v0);
}

void sub_1D247F6AC(char a1)
{
  sub_1D24DFFA4();
  __asm { BR              X10 }
}

uint64_t sub_1D247F700()
{
  sub_1D24DFD7C();
  swift_bridgeObjectRelease();
  return sub_1D24DFFBC();
}

void sub_1D247F788()
{
  __asm { BR              X10 }
}

uint64_t sub_1D247F7C8()
{
  sub_1D24DFD7C();
  return swift_bridgeObjectRelease();
}

void sub_1D247F83C(uint64_t a1)
{
  char *v1;

  sub_1D247F844(a1, *v1);
}

void sub_1D247F844(uint64_t a1, char a2)
{
  sub_1D24DFFA4();
  __asm { BR              X10 }
}

uint64_t sub_1D247F894()
{
  sub_1D24DFD7C();
  swift_bridgeObjectRelease();
  return sub_1D24DFFBC();
}

VideoSubscriberAccount::VSTVProviderKeys_optional sub_1D247F91C(Swift::String *a1)
{
  return VSTVProviderKeys.init(rawValue:)(*a1);
}

uint64_t sub_1D247F928()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D247F95C + 4 * byte_1D24E8938[*v0]))();
}

void sub_1D247F95C(_QWORD *a1@<X8>)
{
  *a1 = 0x6F74736575716572;
  a1[1] = 0xE900000000000072;
}

void sub_1D247F97C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "sign_in_type");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1D247F9A0(char *a1@<X8>)
{
  strcpy(a1, "bundle_version");
  a1[15] = -18;
}

unint64_t sub_1D247F9CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFC7E770;
  if (!qword_1EFC7E770)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC7E778);
    result = MEMORY[0x1D8236BCC](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFC7E770);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D8236BC0](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void sub_1D247FA5C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E93A14A0;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for VSTVProviderKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VSTVProviderKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D247FB58 + 4 * byte_1D24E8941[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D247FB8C + 4 * byte_1D24E893C[v4]))();
}

uint64_t sub_1D247FB8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D247FB94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D247FB9CLL);
  return result;
}

uint64_t sub_1D247FBA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D247FBB0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D247FBB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D247FBBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D247FBC8(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1D247FBD0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for VSTVProviderKeys()
{
  return &type metadata for VSTVProviderKeys;
}

VideoSubscriberAccount::VSFederatedPlaybackKeys_optional __swiftcall VSFederatedPlaybackKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  VideoSubscriberAccount::VSFederatedPlaybackKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D24DFF5C();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static VSFederatedPlaybackKeys.allCases.getter()
{
  return &unk_1E93A1750;
}

uint64_t VSFederatedPlaybackKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D247FC78 + 4 * byte_1D24E8A80[*v0]))(0x44496D616461, 0xE600000000000000);
}

uint64_t sub_1D247FC78()
{
  return 0x695F656C646E7562;
}

uint64_t sub_1D247FD0C()
{
  return 0x6C616E7265747865;
}

uint64_t sub_1D247FD28()
{
  return 7107700;
}

void sub_1D247FD38(char *a1)
{
  sub_1D247FD8C(*a1);
}

unint64_t sub_1D247FD48()
{
  unint64_t result;

  result = qword_1EFC7E780;
  if (!qword_1EFC7E780)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSFederatedPlaybackKeys, &type metadata for VSFederatedPlaybackKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC7E780);
  }
  return result;
}

void sub_1D247FD8C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D247FDD4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D247FEB0 + 4 * byte_1D24E8A90[a2]))(0x695F656C646E7562);
}

uint64_t sub_1D247FEB0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x695F656C646E7562 && v1 == 0xE900000000000064)
    v2 = 1;
  else
    v2 = sub_1D24DFF74();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D247FFE4()
{
  char *v0;

  sub_1D2480110(0, *v0);
}

void sub_1D247FFF0(uint64_t a1)
{
  char *v1;

  sub_1D247FFF8(a1, *v1);
}

void sub_1D247FFF8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D2480034()
{
  sub_1D24DFD7C();
  return swift_bridgeObjectRelease();
}

void sub_1D2480108(uint64_t a1)
{
  char *v1;

  sub_1D2480110(a1, *v1);
}

void sub_1D2480110(uint64_t a1, char a2)
{
  sub_1D24DFFA4();
  __asm { BR              X10 }
}

uint64_t sub_1D2480158()
{
  sub_1D24DFD7C();
  swift_bridgeObjectRelease();
  return sub_1D24DFFBC();
}

VideoSubscriberAccount::VSFederatedPlaybackKeys_optional sub_1D2480240(Swift::String *a1)
{
  return VSFederatedPlaybackKeys.init(rawValue:)(*a1);
}

uint64_t sub_1D248024C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1D2480278 + 4 * byte_1D24E8AA8[*v0]))();
}

void sub_1D2480278(_QWORD *a1@<X8>)
{
  *a1 = 0x695F656C646E7562;
  a1[1] = 0xE900000000000064;
}

void sub_1D2480298(char *a1@<X8>)
{
  strcpy(a1, "bundle_version");
  a1[15] = -18;
}

void sub_1D24802C0(_QWORD *a1@<X8>)
{
  *a1 = 0x6163696E6F6E6163;
  a1[1] = 0xEB0000000044496CLL;
}

void sub_1D24802E4(_QWORD *a1@<X8>)
{
  *a1 = 0x496C656E6E616863;
  a1[1] = 0xE900000000000044;
}

void sub_1D2480308(_QWORD *a1@<X8>)
{
  *a1 = 0x65746E65736E6F63;
  a1[1] = 0xE900000000000064;
}

void sub_1D2480328(_QWORD *a1@<X8>)
{
  *a1 = 0x6C616E7265747865;
  a1[1] = 0xEA00000000004449;
}

void sub_1D2480348(_QWORD *a1@<X8>)
{
  *a1 = 7107700;
  a1[1] = 0xE300000000000000;
}

unint64_t sub_1D2480360()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFC7E788;
  if (!qword_1EFC7E788)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC7E790);
    result = MEMORY[0x1D8236BCC](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFC7E788);
  }
  return result;
}

void sub_1D24803AC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E93A1750;
}

uint64_t getEnumTagSinglePayload for VSFederatedPlaybackKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VSFederatedPlaybackKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D2480498 + 4 * byte_1D24E8AB5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D24804CC + 4 * byte_1D24E8AB0[v4]))();
}

uint64_t sub_1D24804CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D24804D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D24804DCLL);
  return result;
}

uint64_t sub_1D24804E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D24804F0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D24804F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D24804FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VSFederatedPlaybackKeys()
{
  return &type metadata for VSFederatedPlaybackKeys;
}

unint64_t sub_1D2480518()
{
  return 0xD000000000000012;
}

uint64_t VSFederatedPunchoutEvent.eventType.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSFederatedPunchoutEvent.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VSFederatedPunchoutEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*VSFederatedPunchoutEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t sub_1D24805A0()
{
  uint64_t v0;

  v0 = *(_QWORD *)sub_1D2497CA8();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t VSFederatedPunchoutEvent.topic.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSFederatedPunchoutEvent.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*VSFederatedPunchoutEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSFederatedPunchoutEvent.init(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[86] = a2;
  v2[85] = a1;
  v3 = sub_1D24DFD04();
  v2[87] = v3;
  v2[88] = *(_QWORD *)(v3 - 8);
  v2[89] = swift_task_alloc();
  v2[90] = swift_task_alloc();
  v2[91] = swift_task_alloc();
  v2[92] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D24806CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;

  v1 = v0[92];
  v2 = v0[88];
  v3 = v0[87];
  v4 = sub_1D2497CA8();
  v0[93] = *v4;
  v0[94] = v4[1];
  swift_bridgeObjectRetain();
  v5 = sub_1D249A8C8();
  v0[95] = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v0[96] = v6;
  v6(v1, v5, v3);
  v7 = sub_1D24DFCEC();
  v8 = sub_1D24DFE0C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1D2419000, v7, v8, "VSFederatedPunchoutEvent", v9, 2u);
    MEMORY[0x1D8236C38](v9, -1, -1);
  }
  v10 = v0[92];
  v11 = v0[88];
  v12 = v0[87];

  v13 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[97] = v13;
  v13(v10, v12);
  v14 = (_QWORD *)swift_task_alloc();
  v0[98] = v14;
  *v14 = v0;
  v14[1] = sub_1D2480800;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1D2480800(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 792) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D248085C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _OWORD *v10;
  _QWORD *v11;
  uint64_t result;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  __int128 v18;
  char v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  char v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  uint64_t v41;
  os_log_type_t v42;
  BOOL v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  _OWORD *v51;
  uint64_t v52;
  _OWORD *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  _OWORD *v57;
  char v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  id v63;
  void *v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char isUniquelyReferenced_nonNull_native;
  void (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  void (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  _BOOL4 v90;
  void (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint8_t *v94;
  uint64_t v95;
  _OWORD *v96;
  _OWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  _QWORD *v105;
  int64_t v106;
  _OWORD *v107;
  _OWORD *v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _OWORD *v115;
  int64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(uint64_t, uint64_t);
  uint64_t v126[2];

  v124 = v0 + 16;
  v1 = v0 + 88;
  v118 = v0 + 160;
  v100 = v0 + 200;
  v111 = v0 + 240;
  v2 = v0 + 280;
  v119 = v0 + 320;
  v3 = (_OWORD *)(v0 + 400);
  v96 = (_OWORD *)(v0 + 432);
  v97 = (_OWORD *)(v0 + 464);
  v98 = v0 + 360;
  v99 = v0 + 496;
  v107 = (_OWORD *)(v0 + 528);
  v115 = (_OWORD *)(v0 + 592);
  v4 = (_BYTE *)(v0 + 803);
  v109 = (_BYTE *)(v0 + 804);
  v5 = (_BYTE *)(v0 + 805);
  v6 = *(_QWORD *)(v0 + 688);
  v103 = v6 + 64;
  v104 = (_BYTE *)(v0 + 801);
  v7 = -1;
  v8 = -1 << *(_BYTE *)(v6 + 32);
  if (-v8 < 64)
    v7 = ~(-1 << -(char)v8);
  v9 = v7 & *(_QWORD *)(v6 + 64);
  v112 = v0 + 128;
  v10 = (_OWORD *)(v0 + 56);
  v106 = (unint64_t)(63 - v8) >> 6;
  v11 = *(_QWORD **)(v0 + 792);
  v113 = v6;
  result = swift_bridgeObjectRetain();
  v116 = 0;
  v114 = v1;
  v110 = v2;
  v120 = (uint64_t)v3;
  v108 = v10;
  if (!v9)
    goto LABEL_6;
LABEL_4:
  v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v14 = v13 | (v116 << 6);
LABEL_5:
  sub_1D24820C0(*(_QWORD *)(v113 + 48) + 40 * v14, v1);
  sub_1D24820FC(*(_QWORD *)(v113 + 56) + 32 * v14, v112);
  v3 = (_OWORD *)v120;
  while (1)
  {
    sub_1D2482138(v1, v124);
    if (!*(_QWORD *)(v117 + 40))
    {
      v54 = (uint64_t)v11;
      v55 = *(_QWORD *)(v117 + 688);
      swift_release();
      *(_BYTE *)(v117 + 800) = 1;
      sub_1D24821C0();
      sub_1D24DFEB4();
      if (*(_QWORD *)(v55 + 16))
      {
        v56 = sub_1D2481C44(v100);
        v57 = (_OWORD *)v99;
        if ((v58 & 1) != 0)
        {
          sub_1D24820FC(*(_QWORD *)(v113 + 56) + 32 * v56, v99);
          goto LABEL_65;
        }
        v59 = 0uLL;
      }
      else
      {
        v59 = 0uLL;
        v57 = (_OWORD *)v99;
      }
      *v57 = v59;
      v57[1] = v59;
LABEL_65:
      swift_bridgeObjectRelease();
      sub_1D2482204(v100);
      if (*(_QWORD *)(v117 + 520))
      {
        v60 = MEMORY[0x1E0DEA968];
        if ((swift_dynamicCast() & 1) != 0)
        {
          v61 = *(_QWORD *)(v117 + 656);
          v62 = *(_QWORD *)(v117 + 664);
          v63 = objc_allocWithZone((Class)VSBundleRecord);
          swift_bridgeObjectRetain();
          v64 = (void *)sub_1D24DFD4C();
          swift_bridgeObjectRelease();
          v65 = objc_msgSend(v63, sel_initWithBundleID_, v64);

          v66 = objc_msgSend(v65, sel_bundleVersion);
          if (v66)
          {
            swift_bridgeObjectRelease();
            v67 = sub_1D24DFD70();
            v69 = v68;

            *(_BYTE *)(v117 + 802) = 2;
            sub_1D24DFEB4();
            *(_QWORD *)(v117 + 456) = v60;
            *(_QWORD *)(v117 + 432) = v67;
            *(_QWORD *)(v117 + 440) = v69;
            sub_1D2482278(v96, v97);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v126[0] = (uint64_t)v11;
            sub_1D2481F88(v97, v98, isUniquelyReferenced_nonNull_native);
            v54 = v126[0];
            swift_bridgeObjectRelease();
            sub_1D2482204(v98);
          }
          else
          {
            v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v117 + 768);
            v85 = *(_QWORD *)(v117 + 712);
            v86 = *(_QWORD *)(v117 + 696);
            v87 = sub_1D249A9AC();
            v84(v85, v87, v86);
            swift_bridgeObjectRetain();
            v88 = sub_1D24DFCEC();
            v89 = sub_1D24DFE24();
            v90 = os_log_type_enabled(v88, v89);
            v91 = *(void (**)(uint64_t, uint64_t))(v117 + 776);
            v92 = *(_QWORD *)(v117 + 712);
            v93 = *(_QWORD *)(v117 + 696);
            if (v90)
            {
              v125 = *(void (**)(uint64_t, uint64_t))(v117 + 776);
              v123 = *(_QWORD *)(v117 + 696);
              v94 = (uint8_t *)swift_slowAlloc();
              v121 = v92;
              v95 = swift_slowAlloc();
              v126[0] = v95;
              *(_DWORD *)v94 = 136315138;
              swift_bridgeObjectRetain();
              *(_QWORD *)(v117 + 672) = sub_1D2481604(v61, v62, v126);
              sub_1D24DFE54();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1D2419000, v88, v89, "Federated punchout event for bundle %s with no version.", v94, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1D8236C38](v95, -1, -1);
              MEMORY[0x1D8236C38](v94, -1, -1);

              v125(v121, v123);
            }
            else
            {
              swift_bridgeObjectRelease_n();

              v91(v92, v93);
            }
          }
LABEL_73:
          v81 = *(_QWORD *)(v117 + 752);
          v82 = *(_QWORD *)(v117 + 744);
          v83 = *(_QWORD **)(v117 + 680);
          *v83 = 0xD000000000000012;
          v83[1] = 0x80000001D2502F00;
          v83[2] = v54;
          v83[3] = v82;
          v83[4] = v81;
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          return (*(uint64_t (**)(void))(v117 + 8))();
        }
      }
      else
      {
        sub_1D2482238((uint64_t)v57);
      }
      v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v117 + 768);
      v72 = *(_QWORD *)(v117 + 720);
      v73 = *(_QWORD *)(v117 + 696);
      v74 = sub_1D249A9AC();
      v71(v72, v74, v73);
      v75 = sub_1D24DFCEC();
      v76 = sub_1D24DFE24();
      if (os_log_type_enabled(v75, v76))
      {
        v77 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v77 = 0;
        _os_log_impl(&dword_1D2419000, v75, v76, "Federated punchout event with no bundle ID.", v77, 2u);
        MEMORY[0x1D8236C38](v77, -1, -1);
      }
      v78 = *(void (**)(uint64_t, uint64_t))(v117 + 776);
      v79 = *(_QWORD *)(v117 + 720);
      v80 = *(_QWORD *)(v117 + 696);

      v78(v79, v80);
      goto LABEL_73;
    }
    v122 = v9;
    v18 = *(_OWORD *)(v124 + 16);
    *(_OWORD *)v119 = *(_OWORD *)v124;
    *(_OWORD *)(v119 + 16) = v18;
    *(_QWORD *)(v119 + 32) = *(_QWORD *)(v124 + 32);
    sub_1D2482278(v10, v3);
    sub_1D24DFEA8();
    if ((swift_dynamicCast() & 1) != 0)
      break;
    sub_1D24DFEA8();
    if ((swift_dynamicCast() & 1) != 0)
    {
      *v104 = *v5;
      sub_1D24821C0();
      sub_1D24DFEB4();
      sub_1D24820FC((uint64_t)v3, (uint64_t)v107);
      v30 = swift_isUniquelyReferenced_nonNull_native();
      v126[0] = (uint64_t)v11;
      v32 = sub_1D2481C44(v111);
      v33 = v11[2];
      v34 = (v31 & 1) == 0;
      result = v33 + v34;
      if (__OFADD__(v33, v34))
        goto LABEL_79;
      v35 = v31;
      if (v11[3] >= result)
      {
        v10 = v108;
        if ((v30 & 1) != 0)
        {
          v2 = v110;
          if ((v31 & 1) == 0)
            goto LABEL_37;
        }
        else
        {
          sub_1D24823E4();
          v11 = (_QWORD *)v126[0];
          v2 = v110;
          if ((v35 & 1) == 0)
            goto LABEL_37;
        }
      }
      else
      {
        sub_1D2481C74(result, v30);
        v11 = (_QWORD *)v126[0];
        v36 = sub_1D2481C44(v111);
        v10 = v108;
        if ((v35 & 1) != (v37 & 1))
          return sub_1D24DFF98();
        v32 = v36;
        v2 = v110;
        if ((v35 & 1) == 0)
        {
LABEL_37:
          v11[(v32 >> 6) + 8] |= 1 << v32;
          sub_1D24820C0(v111, v11[6] + 40 * v32);
          result = (uint64_t)sub_1D2482278(v107, (_OWORD *)(v11[7] + 32 * v32));
          v38 = v11[2];
          v28 = __OFADD__(v38, 1);
          v39 = v38 + 1;
          if (v28)
            goto LABEL_81;
          v11[2] = v39;
LABEL_51:
          swift_bridgeObjectRelease();
          v52 = v111;
LABEL_52:
          sub_1D2482204(v52);
          v3 = (_OWORD *)v120;
          __swift_destroy_boxed_opaque_existential_0(v120);
          result = sub_1D2482204(v119);
          v1 = v114;
          if (v9)
            goto LABEL_4;
          goto LABEL_6;
        }
      }
      v53 = (_OWORD *)(v11[7] + 32 * v32);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v53);
      sub_1D2482278(v107, v53);
      goto LABEL_51;
    }
    v105 = v11;
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v117 + 768))(*(_QWORD *)(v117 + 728), *(_QWORD *)(v117 + 760), *(_QWORD *)(v117 + 696));
    sub_1D24820C0(v119, v2);
    v40 = sub_1D24DFCEC();
    v41 = v2;
    v42 = sub_1D24DFE18();
    v43 = os_log_type_enabled(v40, v42);
    v44 = *(void (**)(uint64_t, uint64_t))(v117 + 776);
    v45 = *(_QWORD *)(v117 + 728);
    v46 = *(_QWORD *)(v117 + 696);
    if (v43)
    {
      v102 = *(_QWORD *)(v117 + 728);
      v47 = swift_slowAlloc();
      v101 = v46;
      v48 = swift_slowAlloc();
      v126[0] = v48;
      *(_DWORD *)v47 = 136315138;
      v49 = sub_1D24DFE84();
      *(_QWORD *)(v47 + 4) = sub_1D2481604(v49, v50, v126);
      swift_bridgeObjectRelease();
      sub_1D2482204(v41);
      _os_log_impl(&dword_1D2419000, v40, v42, "VSFederatedPunchoutEvent received invalid metadata key: %s", (uint8_t *)v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8236C38](v48, -1, -1);
      v1 = v114;
      MEMORY[0x1D8236C38](v47, -1, -1);

      v44(v102, v101);
    }
    else
    {

      sub_1D2482204(v41);
      v44(v45, v46);
    }
    __swift_destroy_boxed_opaque_existential_0(v120);
    result = sub_1D2482204(v119);
    v2 = v41;
    v3 = (_OWORD *)v120;
    v11 = v105;
    v10 = v108;
    v9 = v122;
    if (v122)
      goto LABEL_4;
LABEL_6:
    v15 = v116 + 1;
    if (__OFADD__(v116, 1))
      goto LABEL_78;
    if (v15 < v106)
    {
      v16 = *(_QWORD *)(v103 + 8 * v15);
      if (v16)
        goto LABEL_9;
      v17 = v116 + 2;
      ++v116;
      if (v15 + 1 < v106)
      {
        v16 = *(_QWORD *)(v103 + 8 * v17);
        if (v16)
          goto LABEL_12;
        v116 = v15 + 1;
        if (v15 + 2 < v106)
        {
          v16 = *(_QWORD *)(v103 + 8 * (v15 + 2));
          if (v16)
          {
            v15 += 2;
            goto LABEL_9;
          }
          v17 = v15 + 3;
          v116 = v15 + 2;
          if (v15 + 3 < v106)
          {
            v16 = *(_QWORD *)(v103 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                v15 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_82;
                if (v15 >= v106)
                {
                  v116 = v106 - 1;
                  goto LABEL_23;
                }
                v16 = *(_QWORD *)(v103 + 8 * v15);
                ++v17;
                if (v16)
                  goto LABEL_9;
              }
            }
LABEL_12:
            v15 = v17;
LABEL_9:
            v9 = (v16 - 1) & v16;
            v14 = __clz(__rbit64(v16)) + (v15 << 6);
            v116 = v15;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    v9 = 0;
    *(_QWORD *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)v1 = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  *v109 = *v4;
  sub_1D24825C8();
  sub_1D24DFEB4();
  sub_1D24820FC((uint64_t)v3, (uint64_t)v115);
  v19 = swift_isUniquelyReferenced_nonNull_native();
  v126[0] = (uint64_t)v11;
  v21 = sub_1D2481C44(v118);
  v22 = v11[2];
  v23 = (v20 & 1) == 0;
  result = v22 + v23;
  if (!__OFADD__(v22, v23))
  {
    v24 = v20;
    if (v11[3] >= result)
    {
      if ((v19 & 1) != 0)
      {
        v2 = v110;
        if ((v20 & 1) == 0)
          goto LABEL_30;
      }
      else
      {
        sub_1D24823E4();
        v11 = (_QWORD *)v126[0];
        v2 = v110;
        if ((v24 & 1) == 0)
          goto LABEL_30;
      }
    }
    else
    {
      sub_1D2481C74(result, v19);
      v11 = (_QWORD *)v126[0];
      v25 = sub_1D2481C44(v118);
      if ((v24 & 1) != (v26 & 1))
        return sub_1D24DFF98();
      v21 = v25;
      v2 = v110;
      if ((v24 & 1) == 0)
      {
LABEL_30:
        v11[(v21 >> 6) + 8] |= 1 << v21;
        sub_1D24820C0(v118, v11[6] + 40 * v21);
        result = (uint64_t)sub_1D2482278(v115, (_OWORD *)(v11[7] + 32 * v21));
        v27 = v11[2];
        v28 = __OFADD__(v27, 1);
        v29 = v27 + 1;
        if (v28)
          goto LABEL_80;
        v11[2] = v29;
        goto LABEL_44;
      }
    }
    v51 = (_OWORD *)(v11[7] + 32 * v21);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
    sub_1D2482278(v115, v51);
LABEL_44:
    swift_bridgeObjectRelease();
    v52 = v118;
    goto LABEL_52;
  }
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
  return result;
}

uint64_t sub_1D24814B8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D24814E4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D24814EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_1D2481514())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t sub_1D2481524()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D2481554()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D24815B4;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1D24815B4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1D2481604(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1D24816D4(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1D24820FC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1D24820FC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1D24816D4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1D24DFE60();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1D248188C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1D24DFEF0();
  if (!v8)
  {
    sub_1D24DFEFC();
    __break(1u);
LABEL_17:
    result = sub_1D24DFF44();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1D248188C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1D2481920(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1D2481AF8(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1D2481AF8(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1D2481920(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1D2481A94(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1D24DFED8();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1D24DFEFC();
      __break(1u);
LABEL_10:
      v2 = sub_1D24DFDA0();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1D24DFF44();
    __break(1u);
LABEL_14:
    result = sub_1D24DFEFC();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1D2481A94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E7D0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1D2481AF8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E7D0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1D24DFF44();
  __break(1u);
  return result;
}

unint64_t sub_1D2481C44(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D24DFE90();
  return sub_1D2482320(a1, v2);
}

uint64_t sub_1D2481C74(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E7C8);
  v6 = sub_1D24DFF2C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_1D2482278((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1D24820C0(v25, (uint64_t)&v38);
      sub_1D24820FC(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_1D24DFE90();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_1D2482278(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

_OWORD *sub_1D2481F88(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1D2481C44(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
        return sub_1D2482278(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1D24823E4();
      goto LABEL_7;
    }
    sub_1D2481C74(v13, a3 & 1);
    v19 = sub_1D2481C44(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D24820C0(a2, (uint64_t)v21);
      return sub_1D24822A8(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_1D24DFF98();
  __break(1u);
  return result;
}

uint64_t sub_1D24820C0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1D24820FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1D2482138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E7A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D8236BB4]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_1D24821C0()
{
  unint64_t result;

  result = qword_1EFC7E7A8;
  if (!qword_1EFC7E7A8)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSFederatedPlaybackKeys, &type metadata for VSFederatedPlaybackKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC7E7A8);
  }
  return result;
}

uint64_t sub_1D2482204(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1D2482238(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E7B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1D2482278(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_OWORD *sub_1D24822A8(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_1D2482278(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

unint64_t sub_1D2482320(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1D24820C0(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1D82360C8](v9, a1);
      sub_1D2482204((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

void *sub_1D24823E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E7C8);
  v2 = *v0;
  v3 = sub_1D24DFF20();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_1D24820C0(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_1D24820FC(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_1D2482278(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_1D24825C8()
{
  unint64_t result;

  result = qword_1EFC7E7B8;
  if (!qword_1EFC7E7B8)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSAnalyticsCommonKeys, &type metadata for VSAnalyticsCommonKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC7E7B8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for VSFederatedPunchoutEvent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for VSFederatedPunchoutEvent()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for VSFederatedPunchoutEvent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for VSFederatedPunchoutEvent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for VSFederatedPunchoutEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VSFederatedPunchoutEvent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VSFederatedPunchoutEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VSFederatedPunchoutEvent()
{
  return &type metadata for VSFederatedPunchoutEvent;
}

__CFString *sub_1D2482850(uint64_t a1)
{
  __CFString **v1;
  __CFString *result;

  if (!a1)
  {
    v1 = VSMetricAccountUpdateValueWriteTypeUpdate;
    return *v1;
  }
  if (a1 == 1)
  {
    v1 = VSMetricAccountUpdateValueWriteTypeRemove;
    return *v1;
  }
  result = (__CFString *)sub_1D24DFF8C();
  __break(1u);
  return result;
}

BOOL VSMetricsAccountUpdateType.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

BOOL sub_1D24828D4(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D24828E8()
{
  sub_1D24DFFA4();
  sub_1D24DFFB0();
  return sub_1D24DFFBC();
}

uint64_t sub_1D248292C()
{
  return sub_1D24DFFB0();
}

uint64_t sub_1D2482954()
{
  sub_1D24DFFA4();
  sub_1D24DFFB0();
  return sub_1D24DFFBC();
}

_QWORD *sub_1D2482994@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 1 && *result != 0;
  *(_QWORD *)a2 = *result == 1;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

void sub_1D24829C4(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

id sub_1D24829D0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VSAMSMetricsCenter()), sel_init);
  qword_1EFC7FFF8 = (uint64_t)result;
  return result;
}

id sub_1D24829FC()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t *sub_1D2482A1C()
{
  if (qword_1EFC7FFF0 != -1)
    swift_once();
  return &qword_1EFC7FFF8;
}

id static VSAMSMetricsCenter.shared.getter()
{
  if (qword_1EFC7FFF0 != -1)
    swift_once();
  swift_beginAccess();
  return (id)qword_1EFC7FFF8;
}

void static VSAMSMetricsCenter.shared.setter(uint64_t a1)
{
  void *v2;

  if (qword_1EFC7FFF0 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)qword_1EFC7FFF8;
  qword_1EFC7FFF8 = a1;

}

uint64_t (*static VSAMSMetricsCenter.shared.modify())()
{
  if (qword_1EFC7FFF0 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t sub_1D2482C88()
{
  unint64_t result;

  result = sub_1D2485560();
  qword_1EFC81F10 = result;
  return result;
}

uint64_t *sub_1D2482CA8()
{
  if (qword_1EFC80000 != -1)
    swift_once();
  return &qword_1EFC81F10;
}

uint64_t sub_1D2482CE8()
{
  if (qword_1EFC80000 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2482D54(uint64_t a1)
{
  if (qword_1EFC80000 != -1)
    swift_once();
  swift_beginAccess();
  qword_1EFC81F10 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1D2482DC8())()
{
  if (qword_1EFC80000 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_1D2482E38()
{
  void *v0;
  id v1;
  char *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  objc_super v10;

  v1 = objc_allocWithZone((Class)VSAnalyticsServiceConnection);
  v2 = v0;
  v3 = objc_msgSend(v1, sel_init);
  *(_QWORD *)&v2[OBJC_IVAR____TtC22VideoSubscriberAccount18VSAMSMetricsCenter_analyticsService] = v3;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3828]), sel_init);
  v5 = OBJC_IVAR____TtC22VideoSubscriberAccount18VSAMSMetricsCenter_eventQueue;
  *(_QWORD *)&v2[OBJC_IVAR____TtC22VideoSubscriberAccount18VSAMSMetricsCenter_eventQueue] = v4;
  v6 = v4;
  v7 = (void *)sub_1D24DFD4C();
  objc_msgSend(v6, sel_setName_, v7);

  v8 = *(id *)&v2[v5];
  objc_msgSend(v8, sel_setMaxConcurrentOperationCount_, 1);

  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for VSAMSMetricsCenter();
  return objc_msgSendSuper2(&v10, sel_init);
}

void sub_1D2482F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint8_t *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t aBlock[6];

  v42 = a7;
  v8 = sub_1D24DFD04();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_allocWithZone(MEMORY[0x1E0CFDB68]);
  swift_bridgeObjectRetain();
  v13 = (void *)sub_1D24DFD4C();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_initWithTopic_, v13);

  v15 = (void *)sub_1D24DFD4C();
  objc_msgSend(v14, sel_setEventType_, v15);

  v16 = (void *)sub_1D24DFD10();
  objc_msgSend(v14, sel_addPropertiesWithDictionary_, v16);

  if (qword_1EFC80000 != -1)
    swift_once();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v17 = (void *)sub_1D24DFD10();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_addPropertiesWithDictionary_, v17);

  v18 = sub_1D249A8C8();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v18, v8);
  v19 = v14;
  v20 = sub_1D24DFCEC();
  v21 = sub_1D24DFE30();
  v22 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    v40 = v11;
    v41 = v8;
    v39 = v9;
    v38 = v22;
    v23 = (uint8_t *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    aBlock[0] = v37;
    *(_DWORD *)v23 = 136315138;
    v24 = objc_msgSend(v19, sel_underlyingDictionary, v23 + 4);
    sub_1D24DFD1C();

    v25 = sub_1D24DFD28();
    v27 = v26;
    swift_bridgeObjectRelease();
    v44 = sub_1D2481604(v25, v27, aBlock);
    sub_1D24DFE54();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2419000, v20, (os_log_type_t)v38, "Metrics event created with data: %s", v23, 0xCu);
    v28 = v37;
    swift_arrayDestroy();
    MEMORY[0x1D8236C38](v28, -1, -1);
    MEMORY[0x1D8236C38](v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v29 = v43;
  v30 = *(void **)&v43[OBJC_IVAR____TtC22VideoSubscriberAccount18VSAMSMetricsCenter_eventQueue];
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = v29;
  v31[3] = v19;
  v32 = v42;
  v31[4] = a6;
  v31[5] = v32;
  aBlock[4] = (uint64_t)sub_1D2485758;
  aBlock[5] = (uint64_t)v31;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1D24835CC;
  aBlock[3] = (uint64_t)&block_descriptor;
  v33 = _Block_copy(aBlock);
  v34 = v19;
  v35 = v29;
  sub_1D2485894(a6);
  swift_release();
  objc_msgSend(v30, sel_addOperationWithBlock_, v33);
  _Block_release(v33);

}

uint64_t sub_1D24833AC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint8_t *v16;
  _QWORD v18[2];

  v2 = sub_1D24DFD04();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D249A8C8();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = a1;
  v8 = a1;
  v9 = sub_1D24DFCEC();
  v10 = sub_1D24DFE30();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v18[0] = v2;
    v12 = (uint8_t *)v11;
    v13 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v12 = 138412290;
    v14 = a1;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    v18[1] = v15;
    sub_1D24DFE54();
    *v13 = v15;

    _os_log_impl(&dword_1D2419000, v9, v10, "Call to analytics service failed with error %@", v12, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E8A0);
    swift_arrayDestroy();
    MEMORY[0x1D8236C38](v13, -1, -1);
    v16 = v12;
    v2 = v18[0];
    MEMORY[0x1D8236C38](v16, -1, -1);
  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1D248357C(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_1D24835CC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_1D2483708(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  id v14;
  void *v15;
  void *v16;

  VSUserAccount.init(_:)((VideoSubscriberAccount::VSUserAccount *)&v16, (VSUserAccount *)a1);
  v14 = v16;
  v15 = v16;
  (*(void (**)(void **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v7)
                                                                                        + 0x70))(&v15, a2, a3, a4, a5, a6, a7);

}

uint64_t sub_1D24838DC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  id v12;
  unint64_t v13;
  __CFString *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  uint64_t *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  int64_t v58;
  _OWORD v59[2];
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  _OWORD v63[3];

  *(_QWORD *)&v63[0] = *a1;
  v12 = *(id *)&v63[0];
  v13 = sub_1D2485B0C((void **)v63);
  swift_bridgeObjectRelease();
  *((_QWORD *)&v61 + 1) = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v60 = a4;
  *((_QWORD *)&v60 + 1) = a5;
  if (!v13)
    goto LABEL_46;
  v54 = a6;
  v55 = a7;
  v56 = v7;
  swift_bridgeObjectRetain();
  v14 = CFSTR("writeType");
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v59[0] = v13;
  sub_1D2484720(&v60, v14, isUniquelyReferenced_nonNull_native, v63);
  v16 = v13;

  swift_bridgeObjectRelease();
  sub_1D24868BC((uint64_t)v63, &qword_1EFC7E7B0);
  v57 = v13 + 64;
  v17 = 1 << *(_BYTE *)(v13 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v13 + 64);
  v58 = (unint64_t)(v17 + 63) >> 6;
  swift_bridgeObjectRetain();
  v20 = 0;
  v21 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    if (v19)
    {
      v23 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v24 = v23 | (v20 << 6);
LABEL_10:
      v25 = *(_QWORD *)(v16 + 56);
      *(_QWORD *)&v60 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v24);
      v26 = (void *)v60;
      sub_1D24820FC(v25 + 32 * v24, (uint64_t)&v60 + 8);
      v27 = v26;
      goto LABEL_29;
    }
    v28 = v20 + 1;
    if (__OFADD__(v20, 1))
      goto LABEL_44;
    if (v28 < v58)
    {
      v29 = *(_QWORD *)(v57 + 8 * v28);
      if (v29)
        goto LABEL_14;
      v30 = v20 + 2;
      ++v20;
      if (v28 + 1 < v58)
      {
        v29 = *(_QWORD *)(v57 + 8 * v30);
        if (v29)
          goto LABEL_17;
        v20 = v28 + 1;
        if (v28 + 2 < v58)
        {
          v29 = *(_QWORD *)(v57 + 8 * (v28 + 2));
          if (v29)
          {
            v28 += 2;
            goto LABEL_14;
          }
          v30 = v28 + 3;
          v20 = v28 + 2;
          if (v28 + 3 < v58)
            break;
        }
      }
    }
LABEL_28:
    v19 = 0;
    v62 = 0;
    v60 = 0u;
    v61 = 0u;
LABEL_29:
    sub_1D2486618((uint64_t)&v60, (uint64_t)v63);
    v31 = *(void **)&v63[0];
    if (!*(_QWORD *)&v63[0])
    {
      swift_release();
      v48 = sub_1D24DFD70();
      v50 = v49;
      v51 = sub_1D24DFD70();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *v56)
                                                                                             + 0x60))(v48, v50, v51, v52, v21, v54, v55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    sub_1D2482278((_OWORD *)((char *)v63 + 8), v59);
    v32 = sub_1D24DFD70();
    v34 = v33;
    v35 = swift_isUniquelyReferenced_nonNull_native();
    v37 = sub_1D24844E8(v32, v34);
    v38 = v21[2];
    v39 = (v36 & 1) == 0;
    v40 = v38 + v39;
    if (__OFADD__(v38, v39))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    v41 = v36;
    if (v21[3] >= v40)
    {
      if ((v35 & 1) != 0)
      {
        if ((v36 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_1D24851B8();
        if ((v41 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_1D2484864(v40, v35);
      v42 = sub_1D24844E8(v32, v34);
      if ((v41 & 1) != (v43 & 1))
        goto LABEL_48;
      v37 = v42;
      if ((v41 & 1) != 0)
      {
LABEL_6:
        v22 = 32 * v37;
        sub_1D2482278((_OWORD *)(v21[7] + v22), &v60);
        sub_1D2482278(v59, (_OWORD *)(v21[7] + v22));
        goto LABEL_7;
      }
    }
    v21[(v37 >> 6) + 8] |= 1 << v37;
    v44 = (uint64_t *)(v21[6] + 16 * v37);
    *v44 = v32;
    v44[1] = v34;
    sub_1D2482278(v59, (_OWORD *)(v21[7] + 32 * v37));
    v45 = v21[2];
    v46 = __OFADD__(v45, 1);
    v47 = v45 + 1;
    if (v46)
      goto LABEL_43;
    v21[2] = v47;
    v60 = 0u;
    v61 = 0u;
    swift_bridgeObjectRetain();
LABEL_7:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1D24868BC((uint64_t)&v60, &qword_1EFC7E7B0);
  }
  v29 = *(_QWORD *)(v57 + 8 * v30);
  if (v29)
  {
LABEL_17:
    v28 = v30;
LABEL_14:
    v19 = (v29 - 1) & v29;
    v24 = __clz(__rbit64(v29)) + (v28 << 6);
    v20 = v28;
    goto LABEL_10;
  }
  while (1)
  {
    v28 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v28 >= v58)
    {
      v20 = v58 - 1;
      goto LABEL_28;
    }
    v29 = *(_QWORD *)(v57 + 8 * v28);
    ++v30;
    if (v29)
      goto LABEL_14;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
  __break(1u);
LABEL_48:
  result = sub_1D24DFF98();
  __break(1u);
  return result;
}

unint64_t sub_1D2483D8C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E860);
  v2 = sub_1D24DFF38();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D2486950(v6, (uint64_t)&v15, &qword_1EFC7E8A8);
    v7 = v15;
    v8 = v16;
    result = sub_1D24844E8(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1D2482278(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D2483EC0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E850);
  v2 = sub_1D24DFF38();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D2486950(v6, (uint64_t)&v13, &qword_1EFC7E858);
    v7 = v13;
    result = sub_1D248454C(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1D2482278(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id VSAMSMetricsCenter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VSAMSMetricsCenter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1D2484054()
{
  return sub_1D2483EC0(MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1D2484064(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*sub_1D248408C())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t sub_1D248409C(uint64_t a1, uint64_t a2)
{
  return sub_1D2484374(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1D24840B0(uint64_t a1, uint64_t a2)
{
  return sub_1D2484374(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1D24840C8(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1D24DFD58();
  *a2 = 0;
  return result;
}

uint64_t sub_1D248413C(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1D24DFD64();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1D24841B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1D24DFD70();
  v2 = sub_1D24DFD4C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1D2484200@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1D24DFD70();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D2484228()
{
  sub_1D2486778(&qword_1EFC7E840, (uint64_t (*)(uint64_t))type metadata accessor for VSMetricAccountUpdateField, (uint64_t)&unk_1D24E8E98);
  sub_1D2486778(&qword_1EFC7E848, (uint64_t (*)(uint64_t))type metadata accessor for VSMetricAccountUpdateField, (uint64_t)&unk_1D24E8E40);
  return sub_1D24DFF50();
}

uint64_t sub_1D24842AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1D24DFD4C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1D24842F0()
{
  sub_1D2486778(&qword_1EFC7E8D0, (uint64_t (*)(uint64_t))type metadata accessor for VSMetricAccountUpdateValue, (uint64_t)&unk_1D24E8FF8);
  sub_1D2486778(&qword_1EFC7E8D8, (uint64_t (*)(uint64_t))type metadata accessor for VSMetricAccountUpdateValue, (uint64_t)&unk_1D24E8FA0);
  return sub_1D24DFF50();
}

uint64_t sub_1D2484374(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1D24DFD70();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1D24843B0()
{
  sub_1D24DFD70();
  sub_1D24DFD7C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D24843F0()
{
  uint64_t v0;

  sub_1D24DFD70();
  sub_1D24DFFA4();
  sub_1D24DFD7C();
  v0 = sub_1D24DFFBC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D2484460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1D24DFD70();
  v2 = v1;
  if (v0 == sub_1D24DFD70() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1D24DFF74();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_1D24844E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D24DFFA4();
  sub_1D24DFD7C();
  v4 = sub_1D24DFFBC();
  return sub_1D2484F64(a1, a2, v4);
}

unint64_t sub_1D248454C(uint64_t a1)
{
  uint64_t v2;

  sub_1D24DFD70();
  sub_1D24DFFA4();
  sub_1D24DFD7C();
  v2 = sub_1D24DFFBC();
  swift_bridgeObjectRelease();
  return sub_1D2485044(a1, v2);
}

_OWORD *sub_1D24845CC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _OWORD *a5@<X8>)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _OWORD *result;
  unint64_t v22;
  char v23;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_1D24844E8(a2, a3);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a4 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        sub_1D2482278((_OWORD *)(v20[7] + 32 * v14), a5);
        return sub_1D2482278(a1, (_OWORD *)(v20[7] + 32 * v14));
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a4 & 1) == 0)
    {
      sub_1D24851B8();
      goto LABEL_7;
    }
    sub_1D2484864(v17, a4 & 1);
    v22 = sub_1D24844E8(a2, a3);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D2484E98(v14, a2, a3, a1, v20);
      *a5 = 0u;
      a5[1] = 0u;
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1D24DFF98();
  __break(1u);
  return result;
}

_OWORD *sub_1D2484720@<X0>(_OWORD *a1@<X0>, void *a2@<X1>, char a3@<W2>, _OWORD *a4@<X8>)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;

  v5 = (_QWORD **)v4;
  v9 = (_QWORD *)*v4;
  v11 = sub_1D248454C((uint64_t)a2);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = v9[3];
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v17 = *v5;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        sub_1D2482278((_OWORD *)(v17[7] + 32 * v11), a4);
        return sub_1D2482278(a1, (_OWORD *)(v17[7] + 32 * v11));
      }
      goto LABEL_11;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_1D248539C();
      goto LABEL_7;
    }
    sub_1D2484B60(v14, a3 & 1);
    v19 = sub_1D248454C((uint64_t)a2);
    if ((v15 & 1) == (v20 & 1))
    {
      v11 = v19;
      v17 = *v5;
      if ((v15 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D2484F00(v11, (uint64_t)a2, a1, v17);
      *a4 = 0u;
      a4[1] = 0u;
      return a2;
    }
  }
  type metadata accessor for VSMetricAccountUpdateField(0);
  result = (_OWORD *)sub_1D24DFF98();
  __break(1u);
  return result;
}

uint64_t sub_1D2484864(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E860);
  v6 = sub_1D24DFF2C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_1D2482278(v24, v35);
      }
      else
      {
        sub_1D24820FC((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1D24DFFA4();
      sub_1D24DFD7C();
      result = sub_1D24DFFBC();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_1D2482278(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D2484B60(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  _OWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E850);
  v35 = a2;
  v6 = sub_1D24DFF2C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v33 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v33)
        goto LABEL_34;
      v19 = *(_QWORD *)(v34 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v19 = *(_QWORD *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_43;
            if (v13 >= v33)
              goto LABEL_34;
            v19 = *(_QWORD *)(v34 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_21;
          }
        }
        v13 = v20;
      }
    }
LABEL_21:
    v10 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((v35 & 1) != 0)
    {
      sub_1D2482278(v22, v36);
    }
    else
    {
      sub_1D24820FC((uint64_t)v22, (uint64_t)v36);
      v23 = v21;
    }
    sub_1D24DFD70();
    sub_1D24DFFA4();
    sub_1D24DFD7C();
    v24 = sub_1D24DFFBC();
    result = swift_bridgeObjectRelease();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v21;
    result = (uint64_t)sub_1D2482278(v36, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v18 = (_QWORD *)(v5 + 64);
  if ((v35 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

_OWORD *sub_1D2484E98(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1D2482278(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

_OWORD *sub_1D2484F00(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1D2482278(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_1D2484F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1D24DFF74() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1D24DFF74() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1D2485044(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1D24DFD70();
    v8 = v7;
    if (v6 == sub_1D24DFD70() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1D24DFF74();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1D24DFD70();
          v15 = v14;
          if (v13 == sub_1D24DFD70() && v15 == v16)
            break;
          v18 = sub_1D24DFF74();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

void *sub_1D24851B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E860);
  v2 = *v0;
  v3 = sub_1D24DFF20();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1D24820FC(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1D2482278(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1D248539C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E850);
  v2 = *v0;
  v3 = sub_1D24DFF20();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_1D24820FC(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_1D2482278(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_1D2485560()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v17;
  uint64_t v18;
  _OWORD v19[2];

  v0 = sub_1D2483D8C(MEMORY[0x1E0DEE9D8]);
  v1 = MEMORY[0x1E0DEA968];
  v18 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v17 = 5459817;
  *((_QWORD *)&v17 + 1) = 0xE300000000000000;
  v2 = sub_1D24DFD70();
  v4 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D24845CC(&v17, v2, v4, isUniquelyReferenced_nonNull_native, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D24868BC((uint64_t)v19, &qword_1EFC7E7B0);
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  v8 = objc_msgSend(v6, sel_userAgentForProcessInfo_, v7);

  v9 = sub_1D24DFD70();
  v11 = v10;

  v18 = v1;
  *(_QWORD *)&v17 = v9;
  *((_QWORD *)&v17 + 1) = v11;
  v12 = sub_1D24DFD70();
  v14 = v13;
  v15 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D24845CC(&v17, v12, v14, v15, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D24868BC((uint64_t)v19, &qword_1EFC7E7B0);
  return v0;
}

uint64_t type metadata accessor for VSAMSMetricsCenter()
{
  return objc_opt_self();
}

uint64_t sub_1D248571C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2485758()
{
  _QWORD *v0;
  void *v1;
  void (*v2)(uint64_t);
  void *v3;
  void *v4;
  id v5;
  uint64_t result;
  id v7;
  uint64_t v8;
  _QWORD v9[6];

  v1 = (void *)v0[3];
  v2 = (void (*)(uint64_t))v0[4];
  v3 = *(void **)(v0[2] + OBJC_IVAR____TtC22VideoSubscriberAccount18VSAMSMetricsCenter_analyticsService);
  v9[4] = sub_1D24833AC;
  v9[5] = 0;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1D248357C;
  v9[3] = &block_descriptor_10;
  v4 = _Block_copy(v9);
  v5 = objc_msgSend(v3, sel_serviceWithErrorHandler_, v4);
  _Block_release(v4);
  objc_msgSend(v5, sel_recordAMSMetricsEvent_, v1);
  result = swift_unknownObjectRelease();
  if (v2)
  {
    v7 = objc_msgSend(v1, sel_underlyingDictionary);
    v8 = sub_1D24DFD1C();

    v2(v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_1D2485894(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_1D24858A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_1D24DFCB0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E888);
    v10 = sub_1D24DFEC0();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_1D2486778(&qword_1EFC7E890, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
      v14 = sub_1D24DFD34();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_1D2486778(&qword_1EFC7E898, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
          v20 = sub_1D24DFD40();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

unint64_t sub_1D2485B0C(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __CFString *v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __CFString *v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __CFString *v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __CFString *v39;
  char v40;
  unint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  __CFString *v46;
  char v47;
  unint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  __CFString *v52;
  char v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  __CFString *v59;
  char v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  __CFString *v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  __CFString *v81;
  char v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __CFString *v86;
  char v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t, uint64_t);
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  __CFString *v99;
  char v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __CFString *v105;
  char v106;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  __int128 v122;
  uint64_t v123;
  __int128 v124;
  uint64_t v125;
  char v126;
  char v127;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E868);
  v3 = MEMORY[0x1E0C80A78](v2);
  v118 = (uint64_t)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v119 = (uint64_t)&v108 - v5;
  v6 = sub_1D24DFCBC();
  v116 = *(_QWORD *)(v6 - 8);
  v117 = v6;
  MEMORY[0x1E0C80A78](v6);
  v112 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_1D24DFC20();
  v113 = *(_QWORD *)(v115 - 8);
  MEMORY[0x1E0C80A78](v115);
  v111 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E870);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_1D24DFC8C();
  v12 = *(_QWORD *)(v120 - 8);
  v13 = MEMORY[0x1E0C80A78](v120);
  v110 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v114 = (char *)&v108 - v15;
  v16 = *a1;
  v17 = sub_1D2483EC0(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)&v124 = v16;
  VSUserAccount.accountType.getter((char *)&v121);
  v127 = v121;
  v126 = 0;
  sub_1D2486878();
  sub_1D24DFDAC();
  sub_1D24DFDAC();
  v18 = MEMORY[0x1E0DEA968];
  v19 = sub_1D24DFD70();
  v123 = v18;
  *(_QWORD *)&v122 = v19;
  *((_QWORD *)&v122 + 1) = v20;
  v21 = CFSTR("accountType");
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v121 = v17;
  sub_1D2484720(&v122, v21, isUniquelyReferenced_nonNull_native, &v124);
  v23 = v121;

  swift_bridgeObjectRelease();
  sub_1D24868BC((uint64_t)&v124, &qword_1EFC7E7B0);
  *(_QWORD *)&v124 = v16;
  VSUserAccount.authenticationData.getter();
  if (v24)
  {
    v25 = sub_1D24DFD88();
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
  }
  v26 = MEMORY[0x1E0DEB418];
  v123 = MEMORY[0x1E0DEB418];
  *(_QWORD *)&v122 = v25;
  v27 = CFSTR("authenticationDataLength");
  v28 = swift_isUniquelyReferenced_nonNull_native();
  v121 = v23;
  sub_1D2484720(&v122, v27, v28, &v124);
  v29 = v121;

  swift_bridgeObjectRelease();
  sub_1D24868BC((uint64_t)&v124, &qword_1EFC7E7B0);
  *(_QWORD *)&v124 = v16;
  v30 = VSUserAccount.tierIdentifiers.getter();
  if (v30)
  {
    v31 = *(_QWORD *)(v30 + 16);
    swift_bridgeObjectRelease();
  }
  else
  {
    v31 = 0;
  }
  v123 = v26;
  *(_QWORD *)&v122 = v31;
  v32 = CFSTR("numberTiers");
  v33 = swift_isUniquelyReferenced_nonNull_native();
  v121 = v29;
  sub_1D2484720(&v122, v32, v33, &v124);
  v34 = v121;

  swift_bridgeObjectRelease();
  sub_1D24868BC((uint64_t)&v124, &qword_1EFC7E7B0);
  *(_QWORD *)&v124 = v16;
  v35 = VSUserAccount.modifierIdentifier.getter();
  v123 = v18;
  if (v36)
    v37 = v35;
  else
    v37 = 0x6E776F6E6B6E75;
  if (v36)
    v38 = v36;
  else
    v38 = 0xE700000000000000;
  *(_QWORD *)&v122 = v37;
  *((_QWORD *)&v122 + 1) = v38;
  v39 = CFSTR("modifier");
  v40 = swift_isUniquelyReferenced_nonNull_native();
  v121 = v34;
  sub_1D2484720(&v122, v39, v40, &v124);
  v41 = v121;

  swift_bridgeObjectRelease();
  sub_1D24868BC((uint64_t)&v124, &qword_1EFC7E7B0);
  *(_QWORD *)&v124 = v16;
  v42 = sub_1D248BA20();
  if (v42)
  {
    v43 = v42;
    type metadata accessor for VSMetricAccountUpdateValue(0);
    v125 = v44;
    *(_QWORD *)&v124 = v43;
    sub_1D2482278(&v124, &v122);
  }
  else
  {
    v123 = v18;
    *(_QWORD *)&v122 = 0x6E776F6E6B6E75;
    *((_QWORD *)&v122 + 1) = 0xE700000000000000;
  }
  v45 = v18;
  v46 = CFSTR("modifierType");
  v47 = swift_isUniquelyReferenced_nonNull_native();
  v121 = v41;
  sub_1D2484720(&v122, v46, v47, &v124);
  v48 = v121;

  swift_bridgeObjectRelease();
  sub_1D24868BC((uint64_t)&v124, &qword_1EFC7E7B0);
  *(_QWORD *)&v124 = v16;
  v49 = sub_1D248BABC();
  if (v49)
  {
    v50 = v49;
    type metadata accessor for VSMetricAccountUpdateValue(0);
    v125 = v51;
    *(_QWORD *)&v124 = v50;
    sub_1D2482278(&v124, &v122);
  }
  else
  {
    v123 = v18;
    *(_QWORD *)&v122 = 0x6E776F6E6B6E75;
    *((_QWORD *)&v122 + 1) = 0xE700000000000000;
  }
  v52 = CFSTR("apiType");
  v53 = swift_isUniquelyReferenced_nonNull_native();
  v121 = v48;
  sub_1D2484720(&v122, v52, v53, &v124);
  v54 = v121;

  swift_bridgeObjectRelease();
  sub_1D24868BC((uint64_t)&v124, &qword_1EFC7E7B0);
  *(_QWORD *)&v124 = v16;
  VSUserAccount.billingIdentifier.getter();
  if (v55 && (v56 = sub_1D24DFD88(), swift_bridgeObjectRelease(), v56 > 0))
  {
    v57 = 0xE400000000000000;
    v58 = 1702195828;
  }
  else
  {
    v57 = 0xE500000000000000;
    v58 = 0x65736C6166;
  }
  v123 = v18;
  *(_QWORD *)&v122 = v58;
  *((_QWORD *)&v122 + 1) = v57;
  v59 = CFSTR("billingIdentifierPresent");
  v60 = swift_isUniquelyReferenced_nonNull_native();
  v121 = v54;
  sub_1D2484720(&v122, v59, v60, &v124);
  v61 = v121;

  swift_bridgeObjectRelease();
  sub_1D24868BC((uint64_t)&v124, &qword_1EFC7E7B0);
  *(_QWORD *)&v124 = v16;
  VSUserAccount.subscriptionBillingCycleEndDate.getter((uint64_t)v11);
  v62 = v120;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v120) == 1)
  {
    sub_1D24868BC((uint64_t)v11, &qword_1EFC7E870);
  }
  else
  {
    v63 = v114;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v114, v11, v62);
    v64 = v112;
    sub_1D24DFCA4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E880);
    v65 = sub_1D24DFCB0();
    v109 = v12;
    v66 = v65;
    v67 = *(_QWORD *)(v65 - 8);
    v68 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
    v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = xmmword_1D24E8C70;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v67 + 104))(v69 + v68, *MEMORY[0x1E0CB1130], v66);
    sub_1D24858A4(v69);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v70 = v110;
    sub_1D24DFC80();
    v71 = v111;
    sub_1D24DFC98();
    swift_bridgeObjectRelease();
    v72 = *(void (**)(char *, uint64_t))(v109 + 8);
    v73 = v120;
    v72(v70, v120);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v64, v117);
    v74 = sub_1D24DFC14();
    LOBYTE(v66) = v75;
    (*(void (**)(char *, uint64_t))(v113 + 8))(v71, v115);
    if ((v66 & 1) != 0)
      v76 = 0;
    else
      v76 = v74;
    v123 = MEMORY[0x1E0DEB418];
    *(_QWORD *)&v122 = v76;
    v77 = CFSTR("ttl");
    v78 = swift_isUniquelyReferenced_nonNull_native();
    v121 = v61;
    sub_1D2484720(&v122, v77, v78, &v124);
    v61 = v121;

    swift_bridgeObjectRelease();
    sub_1D24868BC((uint64_t)&v124, &qword_1EFC7E7B0);
    v72(v63, v73);
  }
  *(_QWORD *)&v124 = v16;
  v79 = VSUserAccount.sourceIdentifier.getter();
  v123 = v45;
  *(_QWORD *)&v122 = v79;
  *((_QWORD *)&v122 + 1) = v80;
  v81 = CFSTR("sourceID");
  v82 = swift_isUniquelyReferenced_nonNull_native();
  v121 = v61;
  sub_1D2484720(&v122, v81, v82, &v124);
  v83 = v121;

  swift_bridgeObjectRelease();
  sub_1D24868BC((uint64_t)&v124, &qword_1EFC7E7B0);
  *(_QWORD *)&v124 = v16;
  v84 = sub_1D2499648();
  v123 = v45;
  *(_QWORD *)&v122 = v84;
  *((_QWORD *)&v122 + 1) = v85;
  v86 = CFSTR("sourceType");
  v87 = swift_isUniquelyReferenced_nonNull_native();
  v121 = v83;
  sub_1D2484720(&v122, v86, v87, &v124);
  v88 = v121;

  swift_bridgeObjectRelease();
  sub_1D24868BC((uint64_t)&v124, &qword_1EFC7E7B0);
  *(_QWORD *)&v124 = v16;
  v89 = v119;
  VSUserAccount.updateURL.getter(v119);
  v90 = sub_1D24DFC5C();
  v91 = *(_QWORD *)(v90 - 8);
  v92 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 48);
  LODWORD(v81) = v92(v89, 1, v90);
  sub_1D24868BC(v89, &qword_1EFC7E868);
  if ((_DWORD)v81 == 1)
  {
    v93 = 0;
  }
  else
  {
    *(_QWORD *)&v124 = v16;
    v94 = v118;
    VSUserAccount.updateURL.getter(v118);
    if (v92(v94, 1, v90) == 1)
    {
      sub_1D24868BC(v94, &qword_1EFC7E868);
      v93 = 1;
    }
    else
    {
      v95 = sub_1D24DFC38();
      v97 = v96;
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v94, v90);
      if (v95 || v97 != 0xE000000000000000)
      {
        v98 = sub_1D24DFF74();
        swift_bridgeObjectRelease();
        v93 = v98 ^ 1;
      }
      else
      {
        swift_bridgeObjectRelease();
        v93 = 0;
      }
    }
  }
  v123 = MEMORY[0x1E0DEAFA0];
  LOBYTE(v122) = v93 & 1;
  v99 = CFSTR("updateURLIncluded");
  v100 = swift_isUniquelyReferenced_nonNull_native();
  v121 = v88;
  sub_1D2484720(&v122, v99, v100, &v124);
  v101 = v121;

  swift_bridgeObjectRelease();
  sub_1D24868BC((uint64_t)&v124, &qword_1EFC7E7B0);
  *(_QWORD *)&v124 = v16;
  v102 = VSUserAccount.accountProviderIdentifier.getter();
  v104 = v103;

  if (v104)
  {
    v123 = v45;
    *(_QWORD *)&v122 = v102;
    *((_QWORD *)&v122 + 1) = v104;
    v105 = CFSTR("providerID");
    v106 = swift_isUniquelyReferenced_nonNull_native();
    v121 = v101;
    sub_1D2484720(&v122, v105, v106, &v124);
    v101 = v121;

    swift_bridgeObjectRelease();
    sub_1D24868BC((uint64_t)&v124, &qword_1EFC7E7B0);
  }
  return v101;
}

uint64_t sub_1D2486618(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D2486664()
{
  unint64_t result;

  result = qword_1EFC7E7F0;
  if (!qword_1EFC7E7F0)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSMetricsAccountUpdateType, &type metadata for VSMetricsAccountUpdateType);
    atomic_store(result, (unint64_t *)&qword_1EFC7E7F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for VSMetricsAccountUpdateType()
{
  return &type metadata for VSMetricsAccountUpdateType;
}

uint64_t method lookup function for VSAMSMetricsCenter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VSAMSMetricsCenter.recordEvent(topic:eventType:eventData:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of VSAMSMetricsCenter.recordAccountUpdate(_:source:updateType:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

ValueMetadata *type metadata accessor for VSMetricsAccountWriteData()
{
  return &type metadata for VSMetricsAccountWriteData;
}

void type metadata accessor for VSMetricAccountUpdateField(uint64_t a1)
{
  sub_1D248690C(a1, &qword_1EFC7E820);
}

uint64_t sub_1D2486720()
{
  return sub_1D2486778(&qword_1EFC7E828, (uint64_t (*)(uint64_t))type metadata accessor for VSMetricAccountUpdateField, (uint64_t)&unk_1D24E8E08);
}

uint64_t sub_1D248674C()
{
  return sub_1D2486778(&qword_1EFC7E830, (uint64_t (*)(uint64_t))type metadata accessor for VSMetricAccountUpdateField, (uint64_t)&unk_1D24E8DE0);
}

uint64_t sub_1D2486778(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1D8236BCC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D24867B8()
{
  return sub_1D2486778(&qword_1EFC7E838, (uint64_t (*)(uint64_t))type metadata accessor for VSMetricAccountUpdateField, (uint64_t)&unk_1D24E8E70);
}

uint64_t sub_1D24867E4(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1D24867F4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1D248681C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (id)sub_1D24DFD10();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

unint64_t sub_1D2486878()
{
  unint64_t result;

  result = qword_1EFC7E878;
  if (!qword_1EFC7E878)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSUserAccount.AccountType, &type metadata for VSUserAccount.AccountType);
    atomic_store(result, (unint64_t *)&qword_1EFC7E878);
  }
  return result;
}

uint64_t sub_1D24868BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void type metadata accessor for VSMetricAccountUpdateValue(uint64_t a1)
{
  sub_1D248690C(a1, &qword_1EFC7E8B0);
}

void sub_1D248690C(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1D2486950(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D2486994()
{
  return sub_1D2486778(&qword_1EFC7E8B8, (uint64_t (*)(uint64_t))type metadata accessor for VSMetricAccountUpdateValue, (uint64_t)&unk_1D24E8F68);
}

uint64_t sub_1D24869C0()
{
  return sub_1D2486778(&qword_1EFC7E8C0, (uint64_t (*)(uint64_t))type metadata accessor for VSMetricAccountUpdateValue, (uint64_t)&unk_1D24E8F40);
}

uint64_t sub_1D24869EC()
{
  return sub_1D2486778(&qword_1EFC7E8C8, (uint64_t (*)(uint64_t))type metadata accessor for VSMetricAccountUpdateValue, (uint64_t)&unk_1D24E8FD0);
}

uint64_t sub_1D2486A30()
{
  return sub_1D24DFD70();
}

uint64_t VSClickEvent.eventType.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSClickEvent.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VSClickEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*VSClickEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSClickEvent.topic.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSClickEvent.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*VSClickEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSClickEvent.init(with:page:type:)(uint64_t a1, _BYTE *a2, _BYTE *a3, _BYTE *a4)
{
  uint64_t v4;
  uint64_t v8;

  *(_QWORD *)(v4 + 328) = a1;
  v8 = sub_1D24DFD04();
  *(_QWORD *)(v4 + 336) = v8;
  *(_QWORD *)(v4 + 344) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 352) = swift_task_alloc();
  *(_BYTE *)(v4 + 411) = *a2;
  *(_BYTE *)(v4 + 412) = *a3;
  *(_BYTE *)(v4 + 413) = *a4;
  return swift_task_switch();
}

uint64_t sub_1D2486BAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v2 = v0[43];
  v1 = v0[44];
  v3 = v0[42];
  v4 = sub_1D24DFD70();
  v6 = v5;
  v7 = sub_1D2497CA8();
  v0[45] = *v7;
  v0[46] = v7[1];
  swift_bridgeObjectRetain();
  v8 = sub_1D249A8C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v8, v3);
  v9 = sub_1D24DFCEC();
  v10 = sub_1D24DFE0C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_1D2419000, v9, v10, "VSClickEvent", v11, 2u);
    MEMORY[0x1D8236C38](v11, -1, -1);
  }
  v13 = v0[43];
  v12 = v0[44];
  v14 = v0[42];

  v0[47] = v6;
  v0[48] = v4;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  v15 = (_QWORD *)swift_task_alloc();
  v0[49] = v15;
  *v15 = v0;
  v15[1] = sub_1D2486CF0;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1D2486CF0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 400) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2486D4C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 400);
  v17 = *(_QWORD *)(v0 + 384);
  v18 = *(_QWORD *)(v0 + 368);
  v15 = *(_QWORD *)(v0 + 360);
  v16 = *(_QWORD *)(v0 + 376);
  v2 = *(_QWORD **)(v0 + 328);
  *(_BYTE *)(v0 + 410) = 0;
  sub_1D2486F9C();
  sub_1D24DFEB4();
  v3 = VSClickTarget.rawValue.getter();
  v4 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 192) = MEMORY[0x1E0DEA968];
  v5 = v4;
  *(_QWORD *)(v0 + 168) = v3;
  *(_QWORD *)(v0 + 176) = v6;
  sub_1D2482278((_OWORD *)(v0 + 168), (_OWORD *)(v0 + 136));
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D2481F88((_OWORD *)(v0 + 136), v0 + 16, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_1D2482204(v0 + 16);
  *(_BYTE *)(v0 + 409) = 1;
  sub_1D24DFEB4();
  v8 = VSPage.rawValue.getter();
  *(_QWORD *)(v0 + 256) = v5;
  *(_QWORD *)(v0 + 232) = v8;
  *(_QWORD *)(v0 + 240) = v9;
  sub_1D2482278((_OWORD *)(v0 + 232), (_OWORD *)(v0 + 264));
  v10 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D2481F88((_OWORD *)(v0 + 264), v0 + 96, v10);
  swift_bridgeObjectRelease();
  sub_1D2482204(v0 + 96);
  *(_BYTE *)(v0 + 408) = 2;
  sub_1D24DFEB4();
  v11 = VSPageType.rawValue.getter();
  *(_QWORD *)(v0 + 224) = v5;
  *(_QWORD *)(v0 + 200) = v11;
  *(_QWORD *)(v0 + 208) = v12;
  sub_1D2482278((_OWORD *)(v0 + 200), (_OWORD *)(v0 + 296));
  v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D2481F88((_OWORD *)(v0 + 296), v0 + 56, v13);
  swift_bridgeObjectRelease();
  sub_1D2482204(v0 + 56);
  *v2 = v17;
  v2[1] = v16;
  v2[2] = v1;
  v2[3] = v15;
  v2[4] = v18;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1D2486F9C()
{
  unint64_t result;

  result = qword_1EFC7E8E8;
  if (!qword_1EFC7E8E8)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSClickstreamKeys, &type metadata for VSClickstreamKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC7E8E8);
  }
  return result;
}

uint64_t sub_1D2486FE0()
{
  return sub_1D24DFD70();
}

uint64_t (*VSPageEnterEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t (*VSPageEnterEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSPageEnterEvent.init(with:and:)(uint64_t a1, _BYTE *a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t v6;

  *(_QWORD *)(v3 + 224) = a1;
  v6 = sub_1D24DFD04();
  *(_QWORD *)(v3 + 232) = v6;
  *(_QWORD *)(v3 + 240) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 248) = swift_task_alloc();
  *(_BYTE *)(v3 + 306) = *a2;
  *(_BYTE *)(v3 + 307) = *a3;
  return swift_task_switch();
}

uint64_t sub_1D2487088()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v2 = v0[30];
  v1 = v0[31];
  v3 = v0[29];
  v4 = sub_1D24DFD70();
  v6 = v5;
  v7 = sub_1D2497CA8();
  v0[32] = *v7;
  v0[33] = v7[1];
  swift_bridgeObjectRetain();
  v8 = sub_1D249A8C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v8, v3);
  v9 = sub_1D24DFCEC();
  v10 = sub_1D24DFE0C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_1D2419000, v9, v10, "VSPageEnterEvent", v11, 2u);
    MEMORY[0x1D8236C38](v11, -1, -1);
  }
  v13 = v0[30];
  v12 = v0[31];
  v14 = v0[29];

  v0[34] = v6;
  v0[35] = v4;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  v15 = (_QWORD *)swift_task_alloc();
  v0[36] = v15;
  *v15 = v0;
  v15[1] = sub_1D24871CC;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1D24871CC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2487228()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D24876E4;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1D2487288()
{
  return sub_1D24DFD70();
}

uint64_t (*VSPageExitEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t (*VSPageExitEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSPageExitEvent.init(with:and:)(uint64_t a1, _BYTE *a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t v6;

  *(_QWORD *)(v3 + 224) = a1;
  v6 = sub_1D24DFD04();
  *(_QWORD *)(v3 + 232) = v6;
  *(_QWORD *)(v3 + 240) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 248) = swift_task_alloc();
  *(_BYTE *)(v3 + 306) = *a2;
  *(_BYTE *)(v3 + 307) = *a3;
  return swift_task_switch();
}

uint64_t sub_1D2487330()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v2 = v0[30];
  v1 = v0[31];
  v3 = v0[29];
  v4 = sub_1D24DFD70();
  v6 = v5;
  v7 = sub_1D2497CA8();
  v0[32] = *v7;
  v0[33] = v7[1];
  swift_bridgeObjectRetain();
  v8 = sub_1D249A8C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v8, v3);
  v9 = sub_1D24DFCEC();
  v10 = sub_1D24DFE0C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_1D2419000, v9, v10, "VSPageExitEvent", v11, 2u);
    MEMORY[0x1D8236C38](v11, -1, -1);
  }
  v13 = v0[30];
  v12 = v0[31];
  v14 = v0[29];

  v0[34] = v6;
  v0[35] = v4;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  v15 = (_QWORD *)swift_task_alloc();
  v0[36] = v15;
  *v15 = v0;
  v15[1] = sub_1D2487474;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1D2487474(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D24874D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 296);
  v13 = *(_QWORD *)(v0 + 280);
  v14 = *(_QWORD *)(v0 + 264);
  v11 = *(_QWORD *)(v0 + 256);
  v12 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD **)(v0 + 224);
  *(_BYTE *)(v0 + 304) = 1;
  sub_1D2486F9C();
  sub_1D24DFEB4();
  v3 = VSPage.rawValue.getter();
  v4 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 120) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 96) = v3;
  *(_QWORD *)(v0 + 104) = v5;
  sub_1D2482278((_OWORD *)(v0 + 96), (_OWORD *)(v0 + 128));
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D2481F88((_OWORD *)(v0 + 128), v0 + 16, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_1D2482204(v0 + 16);
  *(_BYTE *)(v0 + 305) = 2;
  sub_1D24DFEB4();
  v7 = VSPageType.rawValue.getter();
  *(_QWORD *)(v0 + 184) = v4;
  *(_QWORD *)(v0 + 160) = v7;
  *(_QWORD *)(v0 + 168) = v8;
  sub_1D2482278((_OWORD *)(v0 + 160), (_OWORD *)(v0 + 192));
  v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D2481F88((_OWORD *)(v0 + 192), v0 + 56, v9);
  swift_bridgeObjectRelease();
  sub_1D2482204(v0 + 56);
  *v2 = v13;
  v2[1] = v12;
  v2[2] = v1;
  v2[3] = v11;
  v2[4] = v14;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

ValueMetadata *type metadata accessor for VSClickEvent()
{
  return &type metadata for VSClickEvent;
}

ValueMetadata *type metadata accessor for VSPageEnterEvent()
{
  return &type metadata for VSPageEnterEvent;
}

ValueMetadata *type metadata accessor for VSPageExitEvent()
{
  return &type metadata for VSPageExitEvent;
}

id sub_1D2487720()
{
  id *v0;

  return *v0;
}

id sub_1D2487728()
{
  id *v0;
  void *v2;

  objc_msgSend(*v0, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E918);
  swift_dynamicCast();

  *v0 = v2;
  return v2;
}

VideoSubscriberAccount::VSAppleSubscription __swiftcall VSAppleSubscription.init(customerID:productCodes:)(Swift::String customerID, Swift::OpaquePointer productCodes)
{
  _QWORD *v2;
  _QWORD *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  objc_class *v8;
  NSString *v9;
  NSArray *v10;
  VideoSubscriberAccount::VSAppleSubscription result;

  v3 = v2;
  v4 = objc_allocWithZone((Class)VSAppleSubscription);
  v5 = (void *)sub_1D24DFD4C();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_1D24DFDB8();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v4, sel_initWithCustomerID_productCodes_, v5, v6);

  *v3 = v7;
  result._subscription._productCodes = v10;
  result._subscription._customerID = v9;
  result._subscription.super.isa = v8;
  return result;
}

VideoSubscriberAccount::VSAppleSubscription __swiftcall VSAppleSubscription.init(_:)(VideoSubscriberAccount::VSAppleSubscription result)
{
  Class *v1;

  *v1 = result._subscription.super.isa;
  return result;
}

uint64_t VSAppleSubscription.customerID.getter()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_customerID);
  v2 = sub_1D24DFD70();

  return v2;
}

void sub_1D24878BC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v4 = objc_msgSend(v3, sel_customerID);
  v5 = sub_1D24DFD70();
  v7 = v6;

  *a2 = v5;
  a2[1] = v7;
}

void sub_1D2487924()
{
  swift_bridgeObjectRetain();
  VSAppleSubscription.customerID.setter();
}

void VSAppleSubscription.customerID.setter()
{
  id *v0;
  id v1;
  void *v2;
  void *v3;

  objc_msgSend(*v0, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E918);
  swift_dynamicCast();

  *v0 = v3;
  v1 = v3;
  v2 = (void *)sub_1D24DFD4C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setCustomerID_, v2);

}

void (*VSAppleSubscription.customerID.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  id *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(*v1, sel_customerID);
  v4 = sub_1D24DFD70();
  v6 = v5;

  *a1 = v4;
  a1[1] = v6;
  return sub_1D2487A9C;
}

void sub_1D2487A9C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    VSAppleSubscription.customerID.setter();
    swift_bridgeObjectRelease();
  }
  else
  {
    VSAppleSubscription.customerID.setter();
  }
}

uint64_t VSAppleSubscription.productCodes.getter()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_productCodes);
  v2 = sub_1D24DFDC4();

  return v2;
}

void sub_1D2487B48(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  id v4;
  uint64_t v5;

  v3 = *a1;
  v4 = objc_msgSend(v3, sel_productCodes);
  v5 = sub_1D24DFDC4();

  *a2 = v5;
}

void sub_1D2487BAC()
{
  swift_bridgeObjectRetain();
  VSAppleSubscription.productCodes.setter();
}

void VSAppleSubscription.productCodes.setter()
{
  id *v0;
  id v1;
  void *v2;
  void *v3;

  objc_msgSend(*v0, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E918);
  swift_dynamicCast();

  *v0 = v3;
  v1 = v3;
  v2 = (void *)sub_1D24DFDB8();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setProductCodes_, v2);

}

void (*VSAppleSubscription.productCodes.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  id *v1;
  id v3;
  uint64_t v4;

  a1[1] = (uint64_t)v1;
  v3 = objc_msgSend(*v1, sel_productCodes);
  v4 = sub_1D24DFDC4();

  *a1 = v4;
  return sub_1D2487D14;
}

void sub_1D2487D14(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    VSAppleSubscription.productCodes.setter();
    swift_bridgeObjectRelease();
  }
  else
  {
    VSAppleSubscription.productCodes.setter();
  }
}

void VSAppleSubscription.hash(into:)()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_1D24DFE48();

}

uint64_t static VSAppleSubscription.== infix(_:_:)()
{
  sub_1D2487DEC(0, &qword_1EFC7E920);
  return sub_1D24DFE3C() & 1;
}

uint64_t sub_1D2487DEC(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t VSAppleSubscription.hashValue.getter()
{
  sub_1D24DFFA4();
  sub_1D24DFE48();
  return sub_1D24DFFBC();
}

uint64_t sub_1D2487E64()
{
  sub_1D24DFFA4();
  sub_1D24DFE48();
  return sub_1D24DFFBC();
}

uint64_t sub_1D2487EA4()
{
  return sub_1D24DFE48();
}

uint64_t sub_1D2487EC4()
{
  sub_1D24DFFA4();
  sub_1D24DFE48();
  return sub_1D24DFFBC();
}

unint64_t sub_1D2487F04()
{
  unint64_t result;

  result = qword_1EFC7E928;
  if (!qword_1EFC7E928)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSAppleSubscription, &type metadata for VSAppleSubscription);
    atomic_store(result, (unint64_t *)&qword_1EFC7E928);
  }
  return result;
}

uint64_t sub_1D2487F48()
{
  sub_1D2487DEC(0, &qword_1EFC7E920);
  return sub_1D24DFE3C() & 1;
}

ValueMetadata *type metadata accessor for VSAppleSubscription()
{
  return &type metadata for VSAppleSubscription;
}

VideoSubscriberAccount::VSClickstreamKeys_optional __swiftcall VSClickstreamKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (VideoSubscriberAccount::VSClickstreamKeys_optional)sub_1D24891E8(v1);
}

void *static VSClickstreamKeys.allCases.getter()
{
  return &unk_1E93A1E80;
}

uint64_t VSClickstreamKeys.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x644965676170;
  if (*v0 != 1)
    v1 = 0x6570795465676170;
  if (*v0)
    return v1;
  else
    return 0x6449746567726174;
}

uint64_t sub_1D2488018(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D2488610(*a1, *a2);
}

void sub_1D2488024(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1D2488074(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1D2488128 + 4 * byte_1D24E9207[a2]))(v2 - 8);
}

uint64_t sub_1D2488128(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 - 8 && v2 == 0x80000001D2503390)
    v3 = 1;
  else
    v3 = sub_1D24DFF74();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1D2488228(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1D2488274(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D2488398 + 4 * byte_1D24E9218[a2]))(0x69735F6B63696C63);
}

uint64_t sub_1D2488398(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x69735F6B63696C63 && v1 == 0xED00006E695F6E67)
    v2 = 1;
  else
    v2 = sub_1D24DFF74();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1D24884F4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000012;
  v3 = 0x80000001D2503410;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x7079745F65676170;
    else
      v5 = 0xD000000000000016;
    if (v4 == 1)
      v6 = 0xEF79646475625F65;
    else
      v6 = 0x80000001D2503430;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000012;
  v6 = 0x80000001D2503410;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0x7079745F65676170;
    else
      v2 = 0xD000000000000016;
    if (v7 == 1)
      v3 = 0xEF79646475625F65;
    else
      v3 = 0x80000001D2503430;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_1D24DFF74();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D2488610(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x644965676170;
    else
      v3 = 0x6570795465676170;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xE800000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x644965676170;
      else
        v6 = 0x6570795465676170;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xE800000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE800000000000000;
    v3 = 0x6449746567726174;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE800000000000000;
  if (v3 != 0x6449746567726174)
  {
LABEL_21:
    v8 = sub_1D24DFF74();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D2488720()
{
  sub_1D24DFFA4();
  sub_1D24DFD7C();
  swift_bridgeObjectRelease();
  return sub_1D24DFFBC();
}

uint64_t sub_1D24887BC()
{
  sub_1D24DFFA4();
  sub_1D24DFD7C();
  swift_bridgeObjectRelease();
  return sub_1D24DFFBC();
}

uint64_t sub_1D2488870()
{
  sub_1D24DFD7C();
  return swift_bridgeObjectRelease();
}

void sub_1D24888E8(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1D2488930()
{
  sub_1D24DFD7C();
  return swift_bridgeObjectRelease();
}

void sub_1D24889CC(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1D2488A14()
{
  sub_1D24DFD7C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2488B1C()
{
  sub_1D24DFFA4();
  sub_1D24DFD7C();
  swift_bridgeObjectRelease();
  return sub_1D24DFFBC();
}

uint64_t sub_1D2488BB4()
{
  sub_1D24DFFA4();
  sub_1D24DFD7C();
  swift_bridgeObjectRelease();
  return sub_1D24DFFBC();
}

void sub_1D2488C64(uint64_t a1, char a2)
{
  sub_1D24DFFA4();
  __asm { BR              X10 }
}

uint64_t sub_1D2488CBC()
{
  sub_1D24DFD7C();
  swift_bridgeObjectRelease();
  return sub_1D24DFFBC();
}

VideoSubscriberAccount::VSClickstreamKeys_optional sub_1D2488D70(Swift::String *a1)
{
  return VSClickstreamKeys.init(rawValue:)(*a1);
}

void sub_1D2488D7C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x644965676170;
  if (v2 != 1)
  {
    v5 = 0x6570795465676170;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6449746567726174;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void sub_1D2488DD8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E93A1EA8;
}

VideoSubscriberAccount::VSClickTarget_optional __swiftcall VSClickTarget.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  VideoSubscriberAccount::VSClickTarget_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D24DFF5C();
  result.value = swift_bridgeObjectRelease();
  v5 = 10;
  if (v3 < 0xA)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static VSClickTarget.allCases.getter()
{
  return &unk_1E93A1FE0;
}

uint64_t VSClickTarget.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D2488E84 + 4 * byte_1D24E923A[*v0]))(0xD000000000000017, 0x80000001D2503290);
}

uint64_t sub_1D2488E84()
{
  return 0x69735F6B63696C63;
}

unint64_t sub_1D2488EBC()
{
  return 0xD000000000000011;
}

void sub_1D2488F60()
{
  JUMPOUT(0x1D2488F6CLL);
}

void sub_1D2488F78(char *a1)
{
  sub_1D2488228(*a1);
}

uint64_t sub_1D2488F84()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1D24DFFA4();
  sub_1D24889CC((uint64_t)v3, v1);
  return sub_1D24DFFBC();
}

void sub_1D2488FC8(uint64_t a1)
{
  char *v1;

  sub_1D24889CC(a1, *v1);
}

uint64_t sub_1D2488FD0()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1D24DFFA4();
  sub_1D24889CC((uint64_t)v3, v1);
  return sub_1D24DFFBC();
}

VideoSubscriberAccount::VSClickTarget_optional sub_1D2489010(Swift::String *a1)
{
  return VSClickTarget.init(rawValue:)(*a1);
}

uint64_t sub_1D248901C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = VSClickTarget.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1D2489040(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E93A1FE0;
}

VideoSubscriberAccount::VSPage_optional __swiftcall VSPage.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  VideoSubscriberAccount::VSPage_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D24DFF5C();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static VSPage.allCases.getter()
{
  return &unk_1E93A20D8;
}

uint64_t VSPage.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D24890EC + 4 * byte_1D24E9244[*v0]))(0xD000000000000014, 0x80000001D2503370);
}

uint64_t sub_1D24890EC@<X0>(uint64_t a1@<X8>)
{
  return a1 - 8;
}

void sub_1D2489174(char *a1)
{
  sub_1D2488024(*a1);
}

void sub_1D2489180()
{
  char *v0;

  sub_1D2488C64(0, *v0);
}

void sub_1D248918C(uint64_t a1)
{
  char *v1;

  sub_1D24888E8(a1, *v1);
}

void sub_1D2489194(uint64_t a1)
{
  char *v1;

  sub_1D2488C64(a1, *v1);
}

VideoSubscriberAccount::VSPage_optional sub_1D248919C(Swift::String *a1)
{
  return VSPage.init(rawValue:)(*a1);
}

uint64_t sub_1D24891A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = VSPage.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1D24891CC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E93A20D8;
}

VideoSubscriberAccount::VSPageType_optional __swiftcall VSPageType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (VideoSubscriberAccount::VSPageType_optional)sub_1D24891E8(v1);
}

uint64_t sub_1D24891E8@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1D24DFF5C();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

void *static VSPageType.allCases.getter()
{
  return &unk_1E93A2168;
}

unint64_t VSPageType.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x7079745F65676170;
  if (*v0 != 1)
    v1 = 0xD000000000000016;
  if (*v0)
    return v1;
  else
    return 0xD000000000000012;
}

unint64_t sub_1D24892B8()
{
  unint64_t result;

  result = qword_1EFC7E930;
  if (!qword_1EFC7E930)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSClickstreamKeys, &type metadata for VSClickstreamKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC7E930);
  }
  return result;
}

uint64_t sub_1D24892FC()
{
  return sub_1D2489588(&qword_1EFC7E938, &qword_1EFC7E940);
}

unint64_t sub_1D2489324()
{
  unint64_t result;

  result = qword_1EFC7E948;
  if (!qword_1EFC7E948)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSClickTarget, &type metadata for VSClickTarget);
    atomic_store(result, (unint64_t *)&qword_1EFC7E948);
  }
  return result;
}

uint64_t sub_1D2489368()
{
  return sub_1D2489588(&qword_1EFC7E950, &qword_1EFC7E958);
}

unint64_t sub_1D2489390()
{
  unint64_t result;

  result = qword_1EFC7E960;
  if (!qword_1EFC7E960)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSPage, &type metadata for VSPage);
    atomic_store(result, (unint64_t *)&qword_1EFC7E960);
  }
  return result;
}

uint64_t sub_1D24893D4()
{
  return sub_1D2489588(&qword_1EFC7E968, &qword_1EFC7E970);
}

uint64_t sub_1D24893F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D24884F4(*a1, *a2);
}

unint64_t sub_1D2489408()
{
  unint64_t result;

  result = qword_1EFC7E978;
  if (!qword_1EFC7E978)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSPageType, &type metadata for VSPageType);
    atomic_store(result, (unint64_t *)&qword_1EFC7E978);
  }
  return result;
}

uint64_t sub_1D248944C()
{
  return sub_1D24887BC();
}

uint64_t sub_1D2489454()
{
  sub_1D24DFD7C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D24894E0()
{
  return sub_1D2488BB4();
}

VideoSubscriberAccount::VSPageType_optional sub_1D24894E8(Swift::String *a1)
{
  return VSPageType.init(rawValue:)(*a1);
}

void sub_1D24894F4(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v2 = 0xD000000000000012;
  v3 = 0xEF79646475625F65;
  v4 = 0x7079745F65676170;
  if (*v1 != 1)
  {
    v4 = 0xD000000000000016;
    v3 = 0x80000001D2503430;
  }
  if (*v1)
  {
    v2 = v4;
    v5 = v3;
  }
  else
  {
    v5 = 0x80000001D2503410;
  }
  *a1 = v2;
  a1[1] = v5;
}

uint64_t sub_1D2489564()
{
  return sub_1D2489588(&qword_1EFC7E980, &qword_1EFC7E988);
}

uint64_t sub_1D2489588(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1D8236BCC](MEMORY[0x1E0DEAF50], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D24895C8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E93A2190;
}

ValueMetadata *type metadata accessor for VSClickstreamKeys()
{
  return &type metadata for VSClickstreamKeys;
}

uint64_t getEnumTagSinglePayload for VSClickTarget(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VSClickTarget(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1D24896CC + 4 * byte_1D24E9250[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1D2489700 + 4 * byte_1D24E924B[v4]))();
}

uint64_t sub_1D2489700(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2489708(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2489710);
  return result;
}

uint64_t sub_1D248971C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2489724);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1D2489728(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2489730(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VSClickTarget()
{
  return &type metadata for VSClickTarget;
}

uint64_t getEnumTagSinglePayload for VSPage(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VSPage(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D2489828 + 4 * byte_1D24E925A[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D248985C + 4 * byte_1D24E9255[v4]))();
}

uint64_t sub_1D248985C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2489864(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D248986CLL);
  return result;
}

uint64_t sub_1D2489878(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2489880);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D2489884(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D248988C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VSPage()
{
  return &type metadata for VSPage;
}

uint64_t getEnumTagSinglePayload for VSUserAccount.SourceType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s22VideoSubscriberAccount17VSClickstreamKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D2489984 + 4 * byte_1D24E9264[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D24899B8 + 4 * byte_1D24E925F[v4]))();
}

uint64_t sub_1D24899B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D24899C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D24899C8);
  return result;
}

uint64_t sub_1D24899D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D24899DCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D24899E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D24899E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VSPageType()
{
  return &type metadata for VSPageType;
}

uint64_t VSUserAccount.updateURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D248A3FC((SEL *)&selRef_updateURL, (void (*)(void))MEMORY[0x1E0CAFF00], MEMORY[0x1E0CAFFF8], a1);
}

void sub_1D2489A28(id *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D248A4B4(a1, &qword_1EFC7E868, (SEL *)&selRef_updateURL, (void (*)(void))MEMORY[0x1E0CAFF00], MEMORY[0x1E0CAFFF8], a2);
}

uint64_t sub_1D2489A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D248A5CC(a1, a2, a3, a4, &qword_1EFC7E868, (uint64_t (*)(char *))VSUserAccount.updateURL.setter);
}

uint64_t VSUserAccount.updateURL.setter(uint64_t a1)
{
  return sub_1D248A67C(a1, &qword_1EFC7E868, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CAFE38], (SEL *)&selRef_setUpdateURL_);
}

void (*VSUserAccount.updateURL.modify(id **a1))(_QWORD *a1, char a2)
{
  id *v1;
  size_t v3;
  id *v4;
  id *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E868) - 8) + 64);
  a1[1] = (id *)malloc(v3);
  v4 = (id *)malloc(v3);
  a1[2] = v4;
  v5 = (id *)malloc(v3);
  a1[3] = v5;
  v6 = objc_msgSend(*v1, sel_updateURL);
  if (v6)
  {
    v7 = v6;
    sub_1D24DFC50();

    v8 = sub_1D24DFC5C();
    (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 0, 1, v8);
  }
  else
  {
    v9 = sub_1D24DFC5C();
    (*(void (**)(id *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  }
  sub_1D248D1D8((uint64_t)v4, (uint64_t)v5, &qword_1EFC7E868);
  return sub_1D2489B78;
}

void sub_1D2489B78(_QWORD *a1, char a2)
{
  sub_1D248A904(a1, a2, (void (*)(void *))VSUserAccount.updateURL.setter, &qword_1EFC7E868);
}

id VSUserAccount.requiresSystemTrust.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_requiresSystemTrust);
}

id sub_1D2489BAC@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_requiresSystemTrust);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1D2489BDC(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D248A158(a1, a2, a3, a4, (SEL *)&selRef_setRequiresSystemTrust_);
}

id VSUserAccount.requiresSystemTrust.setter(char a1)
{
  return sub_1D248A214(a1, (SEL *)&selRef_setRequiresSystemTrust_);
}

void (*VSUserAccount.requiresSystemTrust.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  id *v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  *((_BYTE *)v3 + 48) = objc_msgSend(*v1, sel_requiresSystemTrust);
  return sub_1D2489C4C;
}

void sub_1D2489C4C(uint64_t a1, uint64_t a2)
{
  sub_1D248A324(a1, a2, (SEL *)&selRef_setRequiresSystemTrust_);
}

uint64_t VSUserAccount.accountProviderIdentifier.getter()
{
  return sub_1D248CB34((SEL *)&selRef_accountProviderIdentifier);
}

void sub_1D2489C64(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1D248CBA4(a1, (SEL *)&selRef_accountProviderIdentifier, a2);
}

uint64_t sub_1D2489C70(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D248CC2C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.accountProviderIdentifier.setter);
}

void VSUserAccount.accountProviderIdentifier.setter(uint64_t a1, uint64_t a2)
{
  sub_1D2489D38(a1, a2, (SEL *)&selRef_setAccountProviderIdentifier_);
}

uint64_t (*VSUserAccount.accountProviderIdentifier.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  id *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(*v1, sel_accountProviderIdentifier);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1D24DFD70();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1D2489CFC;
}

uint64_t sub_1D2489CFC(uint64_t *a1, char a2)
{
  return sub_1D248CCF8(a1, a2, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.accountProviderIdentifier.setter);
}

uint64_t VSUserAccount.identifier.getter()
{
  return sub_1D248CB34((SEL *)&selRef_identifier);
}

void sub_1D2489D14(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1D248CBA4(a1, (SEL *)&selRef_identifier, a2);
}

uint64_t sub_1D2489D20(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D248CC2C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.identifier.setter);
}

void VSUserAccount.identifier.setter(uint64_t a1, uint64_t a2)
{
  sub_1D2489D38(a1, a2, (SEL *)&selRef_setIdentifier_);
}

void sub_1D2489D38(uint64_t a1, uint64_t a2, SEL *a3)
{
  id *v3;
  id v6;
  void *v7;
  void *v8;

  objc_msgSend(*v3, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E990);
  swift_dynamicCast();

  *v3 = v8;
  v6 = v8;
  if (a2)
  {
    v7 = (void *)sub_1D24DFD4C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v8, *a3, v7);

}

uint64_t (*VSUserAccount.identifier.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  id *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(*v1, sel_identifier);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1D24DFD70();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1D2489E98;
}

uint64_t sub_1D2489E98(uint64_t *a1, char a2)
{
  return sub_1D248CCF8(a1, a2, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.identifier.setter);
}

id VSUserAccount.accountType.getter@<X0>(char *a1@<X8>)
{
  id *v1;
  id result;
  char v4;

  result = objc_msgSend(*v1, sel_accountType);
  if (result == (id)1)
  {
    v4 = 1;
LABEL_5:
    *a1 = v4;
    return result;
  }
  if (!result)
  {
    v4 = 0;
    goto LABEL_5;
  }
  sub_1D24DFECC();
  swift_bridgeObjectRelease();
  sub_1D24DFF68();
  sub_1D24DFD94();
  swift_bridgeObjectRelease();
  result = (id)sub_1D24DFF08();
  __break(1u);
  return result;
}

_QWORD *sub_1D2489F98@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D248B264((_QWORD *(*)(uint64_t *__return_ptr))VSUserAccount.accountType.getter, a1);
}

id sub_1D2489FA4(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D248A158(a1, a2, a3, a4, (SEL *)&selRef_setAccountType_);
}

id VSUserAccount.accountType.setter(unsigned __int8 *a1)
{
  return sub_1D248B2BC(a1, (SEL *)&selRef_setAccountType_);
}

uint64_t static VSUserAccount.AccountType.fromObjcType(_:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  return sub_1D248B38C(result, a2);
}

uint64_t VSUserAccount.AccountType.objcType.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void (*VSUserAccount.accountType.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *((_QWORD *)v3 + 5) = v1;
  VSUserAccount.accountType.getter((char *)v3 + 48);
  return sub_1D248A040;
}

void sub_1D248A040(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  id *v3;
  void *v4;

  v1 = *(_QWORD **)a1;
  v2 = *(unsigned __int8 *)(*(_QWORD *)a1 + 48);
  v3 = *(id **)(*(_QWORD *)a1 + 40);
  objc_msgSend(*v3, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E990);
  swift_dynamicCast();
  v4 = (void *)v1[4];

  *v3 = v4;
  objc_msgSend(v4, sel_setAccountType_, v2);
  free(v1);
}

id VSUserAccount.isSignedOut.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_isSignedOut);
}

id sub_1D248A11C@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_isSignedOut);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1D248A14C(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D248A158(a1, a2, a3, a4, (SEL *)&selRef_setSignedOut_);
}

id sub_1D248A158(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v7;
  void *v9;

  v7 = *a1;
  objc_msgSend(*a2, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E990);
  swift_dynamicCast();

  *a2 = v9;
  return objc_msgSend(v9, *a5, v7);
}

id VSUserAccount.isSignedOut.setter(char a1)
{
  return sub_1D248A214(a1, (SEL *)&selRef_setSignedOut_);
}

id sub_1D248A214(char a1, SEL *a2)
{
  id *v2;
  void *v6;

  objc_msgSend(*v2, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E990);
  swift_dynamicCast();

  *v2 = v6;
  return objc_msgSend(v6, *a2, a1 & 1);
}

void (*VSUserAccount.isSignedOut.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  id *v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  *((_BYTE *)v3 + 48) = objc_msgSend(*v1, sel_isSignedOut);
  return sub_1D248A318;
}

void sub_1D248A318(uint64_t a1, uint64_t a2)
{
  sub_1D248A324(a1, a2, (SEL *)&selRef_setSignedOut_);
}

void sub_1D248A324(uint64_t a1, uint64_t a2, SEL *a3)
{
  _QWORD *v4;
  uint64_t v5;
  id *v6;
  void *v7;

  v4 = *(_QWORD **)a1;
  v5 = *(unsigned __int8 *)(*(_QWORD *)a1 + 48);
  v6 = *(id **)(*(_QWORD *)a1 + 40);
  objc_msgSend(*v6, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E990);
  swift_dynamicCast();
  v7 = (void *)v4[4];

  *v6 = v7;
  objc_msgSend(v7, *a3, v5);
  free(v4);
}

uint64_t VSUserAccount.subscriptionBillingCycleEndDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D248A3FC((SEL *)&selRef_subscriptionBillingCycleEndDate, (void (*)(void))MEMORY[0x1E0CB07E8], MEMORY[0x1E0CB0870], a1);
}

uint64_t sub_1D248A3FC@<X0>(SEL *a1@<X0>, void (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  id *v4;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v8 = objc_msgSend(*v4, *a1);
  if (v8)
  {
    v9 = v8;
    a2();

    v10 = ((uint64_t (*)(_QWORD))a3)(0);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a4;
    v13 = 0;
  }
  else
  {
    v10 = a3();
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a4;
    v13 = 1;
  }
  return v11(v12, v13, 1, v10);
}

void sub_1D248A490(id *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D248A4B4(a1, &qword_1EFC7E870, (SEL *)&selRef_subscriptionBillingCycleEndDate, (void (*)(void))MEMORY[0x1E0CB07E8], MEMORY[0x1E0CB0870], a2);
}

void sub_1D248A4B4(id *a1@<X0>, uint64_t *a2@<X3>, SEL *a3@<X4>, void (*a4)(void)@<X5>, uint64_t (*a5)(void)@<X6>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v12 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v16 = objc_msgSend(v15, *a3);
  if (v16)
  {
    v17 = v16;
    a4();

    v18 = ((uint64_t (*)(_QWORD))a5)(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v14, 0, 1, v18);
  }
  else
  {
    v19 = a5();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v14, 1, 1, v19);
  }
  sub_1D248D1D8((uint64_t)v14, a6, a2);

}

uint64_t sub_1D248A5B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D248A5CC(a1, a2, a3, a4, &qword_1EFC7E870, (uint64_t (*)(char *))VSUserAccount.subscriptionBillingCycleEndDate.setter);
}

uint64_t sub_1D248A5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(char *))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2486950(a1, (uint64_t)v11, a5);
  return a6(v11);
}

uint64_t VSUserAccount.subscriptionBillingCycleEndDate.setter(uint64_t a1)
{
  return sub_1D248A67C(a1, &qword_1EFC7E870, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB06B8], (SEL *)&selRef_setSubscriptionBillingCycleEndDate_);
}

uint64_t sub_1D248A67C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(void), SEL *a5)
{
  id *v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  id v18;
  void *v19;
  _QWORD v21[2];

  v11 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*v5, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E990);
  swift_dynamicCast();
  v14 = (void *)v21[1];

  *v5 = v14;
  sub_1D2486950(a1, (uint64_t)v13, a2);
  v15 = a3(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15);
  v18 = v14;
  v19 = 0;
  if (v17 != 1)
  {
    v19 = (void *)a4();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
  }
  objc_msgSend(v18, *a5, v19);

  return sub_1D24868BC(a1, a2);
}

void (*VSUserAccount.subscriptionBillingCycleEndDate.modify(id **a1))(_QWORD *a1, char a2)
{
  id *v1;
  size_t v3;
  id *v4;
  id *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E870) - 8) + 64);
  a1[1] = (id *)malloc(v3);
  v4 = (id *)malloc(v3);
  a1[2] = v4;
  v5 = (id *)malloc(v3);
  a1[3] = v5;
  v6 = objc_msgSend(*v1, sel_subscriptionBillingCycleEndDate);
  if (v6)
  {
    v7 = v6;
    sub_1D24DFC74();

    v8 = sub_1D24DFC8C();
    (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 0, 1, v8);
  }
  else
  {
    v9 = sub_1D24DFC8C();
    (*(void (**)(id *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  }
  sub_1D248D1D8((uint64_t)v4, (uint64_t)v5, &qword_1EFC7E870);
  return sub_1D248A8F0;
}

void sub_1D248A8F0(_QWORD *a1, char a2)
{
  sub_1D248A904(a1, a2, (void (*)(void *))VSUserAccount.subscriptionBillingCycleEndDate.setter, &qword_1EFC7E870);
}

void sub_1D248A904(_QWORD *a1, char a2, void (*a3)(void *), uint64_t *a4)
{
  void *v5;
  void *v6;
  void *v7;

  v5 = (void *)a1[2];
  v6 = (void *)a1[3];
  v7 = (void *)a1[1];
  if ((a2 & 1) != 0)
  {
    sub_1D2486950(a1[3], (uint64_t)v7, a4);
    a3(v7);
    sub_1D24868BC((uint64_t)v6, a4);
  }
  else
  {
    a3((void *)a1[3]);
  }
  free(v6);
  free(v5);
  free(v7);
}

uint64_t VSUserAccount.tierIdentifiers.getter()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_tierIdentifiers);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1D24DFDC4();

  return v3;
}

void sub_1D248A9DC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;

  v3 = *a1;
  v4 = objc_msgSend(v3, sel_tierIdentifiers);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1D24DFDC4();

  }
  else
  {

    v6 = 0;
  }
  *a2 = v6;
}

void sub_1D248AA50()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  VSUserAccount.tierIdentifiers.setter(v0);
}

void VSUserAccount.tierIdentifiers.setter(uint64_t a1)
{
  id *v1;
  id v3;
  void *v4;
  void *v5;

  objc_msgSend(*v1, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E990);
  swift_dynamicCast();

  *v1 = v5;
  v3 = v5;
  if (a1)
  {
    v4 = (void *)sub_1D24DFDB8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v5, sel_setTierIdentifiers_, v4);

}

void (*VSUserAccount.tierIdentifiers.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  id *v1;
  id v3;
  void *v4;
  uint64_t v5;

  a1[1] = (uint64_t)v1;
  v3 = objc_msgSend(*v1, sel_tierIdentifiers);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1D24DFDC4();

  }
  else
  {
    v5 = 0;
  }
  *a1 = v5;
  return sub_1D248ABD0;
}

void sub_1D248ABD0(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_bridgeObjectRetain();
    VSUserAccount.tierIdentifiers.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    VSUserAccount.tierIdentifiers.setter(*a1);
  }
}

uint64_t VSUserAccount.billingIdentifier.getter()
{
  return sub_1D248CB34((SEL *)&selRef_billingIdentifier);
}

void sub_1D248AC20(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1D248CBA4(a1, (SEL *)&selRef_billingIdentifier, a2);
}

uint64_t sub_1D248AC2C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D248CC2C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.billingIdentifier.setter);
}

void VSUserAccount.billingIdentifier.setter(uint64_t a1, uint64_t a2)
{
  sub_1D2489D38(a1, a2, (SEL *)&selRef_setBillingIdentifier_);
}

uint64_t (*VSUserAccount.billingIdentifier.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  id *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(*v1, sel_billingIdentifier);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1D24DFD70();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1D248ACB8;
}

uint64_t sub_1D248ACB8(uint64_t *a1, char a2)
{
  return sub_1D248CCF8(a1, a2, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.billingIdentifier.setter);
}

uint64_t VSUserAccount.authenticationData.getter()
{
  return sub_1D248CB34((SEL *)&selRef_authenticationData);
}

void sub_1D248ACD0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1D248CBA4(a1, (SEL *)&selRef_authenticationData, a2);
}

uint64_t sub_1D248ACDC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D248CC2C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.authenticationData.setter);
}

void VSUserAccount.authenticationData.setter(uint64_t a1, uint64_t a2)
{
  sub_1D2489D38(a1, a2, (SEL *)&selRef_setAuthenticationData_);
}

uint64_t (*VSUserAccount.authenticationData.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  id *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(*v1, sel_authenticationData);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1D24DFD70();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1D248AD68;
}

uint64_t sub_1D248AD68(uint64_t *a1, char a2)
{
  return sub_1D248CCF8(a1, a2, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.authenticationData.setter);
}

void VSUserAccount.appleSubscription.getter(_QWORD *a1@<X8>)
{
  void **v1;
  void *v3;
  id v4;
  VSAppleSubscription v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  v4 = objc_msgSend(v3, sel_appleSubscription);

  if (!v4)
  {
    v6 = 0;
    goto LABEL_5;
  }
  v5.super.isa = (Class)objc_msgSend(v3, sel_appleSubscription);
  if (v5.super.isa)
  {
    VSAppleSubscription.init(_:)(v5);
    v6 = v7;
LABEL_5:
    *a1 = v6;
    return;
  }
  __break(1u);
}

void sub_1D248ADFC(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  id v4;
  VSAppleSubscription v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v4 = objc_msgSend(v3, sel_appleSubscription);

  if (!v4)
  {

    v6 = 0;
    goto LABEL_5;
  }
  v5.super.isa = (Class)objc_msgSend(v3, sel_appleSubscription);
  if (v5.super.isa)
  {
    VSAppleSubscription.init(_:)(v5);

    v6 = v7;
LABEL_5:
    *a2 = v6;
    return;
  }
  __break(1u);
}

void sub_1D248AE90(void **a1)
{
  id v1;
  void *v2;

  v2 = *a1;
  v1 = v2;
  VSUserAccount.appleSubscription.setter(&v2);
}

void VSUserAccount.appleSubscription.setter(void **a1)
{
  id *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;

  v2 = *a1;
  if (*a1)
  {
    v3 = sub_1D2487720();

  }
  else
  {
    v3 = 0;
  }
  objc_msgSend(*v1, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E990);
  swift_dynamicCast();

  *v1 = v5;
  v4 = v5;
  objc_msgSend(v4, sel_setAppleSubscription_, v3);

}

NSObject VSUserAccount.appleSubscription.modify(_QWORD *a1)
{
  void **v1;
  void *v3;
  id v4;
  VSAppleSubscription v5;
  uint64_t v6;
  uint64_t v8;

  a1[1] = v1;
  v3 = *v1;
  v4 = objc_msgSend(v3, sel_appleSubscription);

  if (v4)
  {
    v5.super.isa = (Class)objc_msgSend(v3, sel_appleSubscription);
    if (!v5.super.isa)
    {
      __break(1u);
      return v5.super;
    }
    VSAppleSubscription.init(_:)(v5);
    v6 = v8;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  v5.super.isa = (Class)sub_1D248B03C;
  return v5.super;
}

void sub_1D248B03C(void **a1, char a2)
{
  void *v2;
  id v3;
  void *v4;

  v2 = *a1;
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    VSUserAccount.appleSubscription.setter(&v4);

  }
  else
  {
    VSUserAccount.appleSubscription.setter(&v4);
  }
}

id VSUserAccount.isFromCurrentDevice.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_isFromCurrentDevice);
}

id sub_1D248B0B8@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_isFromCurrentDevice);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1D248B0E8(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D248A158(a1, a2, a3, a4, (SEL *)&selRef_setFromCurrentDevice_);
}

id VSUserAccount.isFromCurrentDevice.setter(char a1)
{
  return sub_1D248A214(a1, (SEL *)&selRef_setFromCurrentDevice_);
}

void (*VSUserAccount.isFromCurrentDevice.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  id *v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  *((_BYTE *)v3 + 48) = objc_msgSend(*v1, sel_isFromCurrentDevice);
  return sub_1D248B158;
}

void sub_1D248B158(uint64_t a1, uint64_t a2)
{
  sub_1D248A324(a1, a2, (SEL *)&selRef_setFromCurrentDevice_);
}

id VSUserAccount.deviceCategory.getter@<X0>(char *a1@<X8>)
{
  id *v1;
  id result;
  char v4;

  result = objc_msgSend(*v1, sel_deviceCategory);
  if (result == (id)1)
  {
    v4 = 1;
LABEL_5:
    *a1 = v4;
    return result;
  }
  if (!result)
  {
    v4 = 0;
    goto LABEL_5;
  }
  sub_1D24DFECC();
  swift_bridgeObjectRelease();
  sub_1D24DFF68();
  sub_1D24DFD94();
  swift_bridgeObjectRelease();
  result = (id)sub_1D24DFF08();
  __break(1u);
  return result;
}

_QWORD *sub_1D248B258@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D248B264((_QWORD *(*)(uint64_t *__return_ptr))VSUserAccount.deviceCategory.getter, a1);
}

_QWORD *sub_1D248B264@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X3>, _BYTE *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = a1(&v4);
  *a2 = v4;
  return result;
}

id sub_1D248B2A4(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D248A158(a1, a2, a3, a4, (SEL *)&selRef_setDeviceCategory_);
}

id sub_1D248B2B0(unsigned __int8 *a1)
{
  return sub_1D248B2BC(a1, (SEL *)&selRef_setDeviceCategory_);
}

id sub_1D248B2BC(unsigned __int8 *a1, SEL *a2)
{
  id *v2;
  uint64_t v4;
  void *v6;

  v4 = *a1;
  objc_msgSend(*v2, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E990);
  swift_dynamicCast();

  *v2 = v6;
  return objc_msgSend(v6, *a2, v4);
}

uint64_t static VSUserAccount.OriginatingDeviceCategory.fromObjcType(_:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  return sub_1D248B38C(result, a2);
}

uint64_t sub_1D248B38C@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if (!result)
  {
    v2 = 0;
LABEL_5:
    *a2 = v2;
    return result;
  }
  if (result == 1)
  {
    v2 = 1;
    goto LABEL_5;
  }
  sub_1D24DFECC();
  swift_bridgeObjectRelease();
  sub_1D24DFF68();
  sub_1D24DFD94();
  swift_bridgeObjectRelease();
  result = sub_1D24DFF08();
  __break(1u);
  return result;
}

void sub_1D248B46C(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t VSUserAccount.init(accountType:updateURL:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E868);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  HIBYTE(v10) = *a1;
  sub_1D2486950(a2, (uint64_t)v8, &qword_1EFC7E868);
  VSUserAccount.init(accountType:updateURL:requiresSystemTrust:signedOut:)((unsigned __int8 *)&v10 + 7, (uint64_t)v8, 0, 0, &v11);
  result = sub_1D24868BC(a2, &qword_1EFC7E868);
  *a3 = v11;
  return result;
}

uint64_t VSUserAccount.init(accountType:updateURL:requiresSystemTrust:signedOut:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t result;
  _QWORD *v24;
  void *v25;

  v24 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E868);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v14 = objc_msgSend(v13, sel_bundleIdentifier);

  if (v14)
  {
    sub_1D24DFD70();

    sub_1D2486950(a2, (uint64_t)v11, &qword_1EFC7E868);
    v15 = sub_1D24DFC5C();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15) != 1)
    {
      v17 = (void *)sub_1D24DFC44();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v15);
    }
    v18 = objc_allocWithZone((Class)VSUserAccount);
    v19 = (void *)sub_1D24DFD4C();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend(v18, sel_initWithAccountType_updateURL_sourceType_sourceIdentifier_, v12, v17, 0, v19);

    objc_msgSend(v20, sel_copy);
    sub_1D24DFE6C();
    swift_unknownObjectRelease();
    sub_1D2487DEC(0, &qword_1EFC7E990);
    swift_dynamicCast();
    v21 = v25;

    objc_msgSend(v21, sel_setRequiresSystemTrust_, a3 & 1);
    objc_msgSend(v21, sel_copy);
    sub_1D24DFE6C();
    swift_unknownObjectRelease();
    swift_dynamicCast();
    v22 = v25;

    objc_msgSend(v22, sel_setSignedOut_, a4 & 1);
    result = sub_1D24868BC(a2, &qword_1EFC7E868);
    *v24 = v22;
  }
  else
  {
    result = sub_1D24DFF08();
    __break(1u);
  }
  return result;
}

uint64_t VSUserAccount.init(accountType:updateURL:sourceType:sourceIdentifier:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t result;
  uint64_t v20;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E868);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = *a3;
  sub_1D2486950(a2, (uint64_t)v10, &qword_1EFC7E868);
  v13 = sub_1D24DFC5C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) != 1)
  {
    v15 = (void *)sub_1D24DFC44();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v13);
  }
  v16 = objc_allocWithZone((Class)VSUserAccount);
  v17 = (void *)sub_1D24DFD4C();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v16, sel_initWithAccountType_updateURL_sourceType_sourceIdentifier_, v11, v15, v12, v17);

  result = sub_1D24868BC(a2, &qword_1EFC7E868);
  *a4 = v18;
  return result;
}

uint64_t sub_1D248B960()
{
  unsigned __int8 *v0;

  return *v0;
}

void __swiftcall VSUserAccount.init(_:)(VideoSubscriberAccount::VSUserAccount *__return_ptr retstr, VSUserAccount *a2)
{
  retstr->_account.super.isa = (Class)a2;
}

uint64_t VSUserAccount.modifierIdentifier.getter()
{
  return sub_1D248CB34((SEL *)&selRef_modifierIdentifier);
}

void sub_1D248B97C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1D248CBA4(a1, (SEL *)&selRef_modifierIdentifier, a2);
}

uint64_t sub_1D248B988(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D248CC2C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.modifierIdentifier.setter);
}

void VSUserAccount.modifierIdentifier.setter(uint64_t a1, uint64_t a2)
{
  sub_1D2489D38(a1, a2, (SEL *)&selRef_setModifierIdentifier_);
}

uint64_t (*VSUserAccount.modifierIdentifier.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  id *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(*v1, sel_modifierIdentifier);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1D24DFD70();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1D248BA14;
}

uint64_t sub_1D248BA14(uint64_t *a1, char a2)
{
  return sub_1D248CCF8(a1, a2, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.modifierIdentifier.setter);
}

id sub_1D248BA20()
{
  id *v0;

  return objc_msgSend(*v0, sel_modifierType);
}

void sub_1D248BA44(void *a1)
{
  sub_1D248BAEC(a1, (const char **)&selRef_setModifierType_);
}

void (*sub_1D248BA50(_QWORD *a1))(uint64_t a1, char a2)
{
  id *v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  v3[4] = objc_msgSend(*v1, sel_modifierType);
  return sub_1D248BAB0;
}

void sub_1D248BAB0(uint64_t a1, char a2)
{
  sub_1D248BC14(a1, a2, (SEL *)&selRef_setModifierType_);
}

id sub_1D248BABC()
{
  id *v0;

  return objc_msgSend(*v0, "api");
}

void sub_1D248BAE0(void *a1)
{
  sub_1D248BAEC(a1, (const char **)&selRef_setApi_);
}

void sub_1D248BAEC(void *a1, const char **a2)
{
  id *v2;
  const char *v5;
  id v6;
  void *v7;

  objc_msgSend(*v2, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E990);
  swift_dynamicCast();

  *v2 = v7;
  v5 = *a2;
  v6 = v7;
  objc_msgSend(v6, v5, a1);

}

void (*sub_1D248BBA8(_QWORD *a1))(uint64_t a1, char a2)
{
  id *v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  v3[4] = objc_msgSend(*v1, "api");
  return sub_1D248BC08;
}

void sub_1D248BC08(uint64_t a1, char a2)
{
  sub_1D248BC14(a1, a2, (SEL *)&selRef_setApi_);
}

void sub_1D248BC14(uint64_t a1, char a2, SEL *a3)
{
  _QWORD *v4;
  void *v5;
  id *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  const char *v13;

  v4 = *(_QWORD **)a1;
  v5 = *(void **)(*(_QWORD *)a1 + 32);
  v6 = *(id **)(*(_QWORD *)a1 + 48);
  v7 = *v6;
  if ((a2 & 1) != 0)
  {
    v8 = v5;
    objc_msgSend(v7, sel_copy);
    sub_1D24DFE6C();
    swift_unknownObjectRelease();
    sub_1D2487DEC(0, &qword_1EFC7E990);
    swift_dynamicCast();
    v9 = (void *)v4[5];

    *v6 = v9;
    v10 = v9;
    objc_msgSend(v10, *a3, v8);

    v11 = (id)v4[4];
  }
  else
  {
    objc_msgSend(*v6, sel_copy);
    sub_1D24DFE6C();
    swift_unknownObjectRelease();
    sub_1D2487DEC(0, &qword_1EFC7E990);
    swift_dynamicCast();
    v12 = (void *)v4[5];

    *v6 = v12;
    v13 = *a3;
    v11 = v12;
    objc_msgSend(v11, v13, v5);

  }
  free(v4);
}

uint64_t VSUserAccount.created.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D248BF40((SEL *)&selRef_created, a1);
}

uint64_t sub_1D248BD90@<X0>(uint64_t a1@<X8>)
{
  return VSUserAccount.created.getter(a1);
}

uint64_t sub_1D248BDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D248C0C4(a1, a2, a3, a4, (uint64_t (*)(char *))VSUserAccount.created.setter);
}

uint64_t VSUserAccount.created.setter(uint64_t a1)
{
  return sub_1D248C150(a1, (SEL *)&selRef_setCreated_);
}

void (*VSUserAccount.created.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  id *v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void (*v13)(void *, void *, uint64_t);
  void (*result)(uint64_t, char);

  v3 = malloc(0x30uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E870);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = sub_1D24DFC8C();
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v9 = malloc(v8);
  v3[4] = v9;
  v10 = malloc(v8);
  v3[5] = v10;
  v11 = objc_msgSend(*v1, sel_created);
  if (v11)
  {
    v12 = v11;
    sub_1D24DFC74();

    v13 = *(void (**)(void *, void *, uint64_t))(v7 + 32);
    v13(v5, v9, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    result = (void (*)(uint64_t, char))(*(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
    if ((_DWORD)result != 1)
    {
      v13(v10, v5, v6);
      return sub_1D248BF28;
    }
  }
  else
  {
    result = (void (*)(uint64_t, char))(*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  __break(1u);
  return result;
}

void sub_1D248BF28(uint64_t a1, char a2)
{
  sub_1D248C390(a1, a2, (void (*)(void *))VSUserAccount.created.setter);
}

uint64_t VSUserAccount.modified.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D248BF40((SEL *)&selRef_modified, a1);
}

uint64_t sub_1D248BF40@<X0>(SEL *a1@<X0>, uint64_t a2@<X8>)
{
  id *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v16;

  v5 = sub_1D24DFC8C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E870);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(*v2, *a1);
  if (v12)
  {
    v13 = v12;
    sub_1D24DFC74();

    v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v14(v11, v8, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5);
    if ((_DWORD)result != 1)
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(a2, v11, v5);
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D248C088@<X0>(uint64_t a1@<X8>)
{
  return VSUserAccount.modified.getter(a1);
}

uint64_t sub_1D248C0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D248C0C4(a1, a2, a3, a4, (uint64_t (*)(char *))VSUserAccount.modified.setter);
}

uint64_t sub_1D248C0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v7 = sub_1D24DFC8C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v9, a1);
  return a5(v9);
}

uint64_t VSUserAccount.modified.setter(uint64_t a1)
{
  return sub_1D248C150(a1, (SEL *)&selRef_setModified_);
}

uint64_t sub_1D248C150(uint64_t a1, SEL *a2)
{
  id *v2;
  id v5;
  void *v6;
  uint64_t v7;
  void *v9;

  objc_msgSend(*v2, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E990);
  swift_dynamicCast();

  *v2 = v9;
  v5 = v9;
  v6 = (void *)sub_1D24DFC68();
  objc_msgSend(v5, *a2, v6);

  v7 = sub_1D24DFC8C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
}

void (*VSUserAccount.modified.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  id *v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void (*v13)(void *, void *, uint64_t);
  void (*result)(uint64_t, char);

  v3 = malloc(0x30uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E870);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = sub_1D24DFC8C();
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v9 = malloc(v8);
  v3[4] = v9;
  v10 = malloc(v8);
  v3[5] = v10;
  v11 = objc_msgSend(*v1, sel_modified);
  if (v11)
  {
    v12 = v11;
    sub_1D24DFC74();

    v13 = *(void (**)(void *, void *, uint64_t))(v7 + 32);
    v13(v5, v9, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    result = (void (*)(uint64_t, char))(*(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
    if ((_DWORD)result != 1)
    {
      v13(v10, v5, v6);
      return sub_1D248C384;
    }
  }
  else
  {
    result = (void (*)(uint64_t, char))(*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  __break(1u);
  return result;
}

void sub_1D248C384(uint64_t a1, char a2)
{
  sub_1D248C390(a1, a2, (void (*)(void *))VSUserAccount.modified.setter);
}

void sub_1D248C390(uint64_t a1, char a2, void (*a3)(void *))
{
  _QWORD *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v4 = *(_QWORD **)a1;
  v5 = *(void **)(*(_QWORD *)a1 + 32);
  v6 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    v7 = v4[2];
    v8 = v4[3];
    v9 = (void *)v4[1];
    (*(void (**)(_QWORD, void *, uint64_t))(v8 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 32), v6, v7);
    a3(v5);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  else
  {
    v9 = (void *)v4[1];
    a3(*(void **)(*(_QWORD *)a1 + 40));
  }
  free(v6);
  free(v5);
  free(v9);
  free(v4);
}

id VSUserAccount.sourceType.getter@<X0>(_BYTE *a1@<X8>)
{
  id *v1;
  id result;

  result = objc_msgSend(*v1, sel_sourceType);
  if ((unint64_t)result > 2)
  {
    sub_1D24DFECC();
    swift_bridgeObjectRelease();
    sub_1D24DFF68();
    sub_1D24DFD94();
    swift_bridgeObjectRelease();
    result = (id)sub_1D24DFF08();
    __break(1u);
  }
  else
  {
    *a1 = (_BYTE)result;
  }
  return result;
}

id sub_1D248C514@<X0>(_BYTE *a1@<X8>)
{
  id result;
  char v3;

  result = VSUserAccount.sourceType.getter(&v3);
  *a1 = v3;
  return result;
}

id sub_1D248C554(unsigned __int8 *a1, id *a2)
{
  uint64_t v3;
  void *v5;

  v3 = *a1;
  objc_msgSend(*a2, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E990);
  swift_dynamicCast();

  *a2 = v5;
  return objc_msgSend(v5, sel_setSourceType_, v3);
}

id VSUserAccount.sourceType.setter(unsigned __int8 *a1)
{
  id *v1;
  uint64_t v2;
  void *v4;

  v2 = *a1;
  objc_msgSend(*v1, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E990);
  swift_dynamicCast();

  *v1 = v4;
  return objc_msgSend(v4, sel_setSourceType_, v2);
}

unint64_t sub_1D248C6B0@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  if (result > 2)
  {
    sub_1D24DFECC();
    swift_bridgeObjectRelease();
    sub_1D24DFF68();
    sub_1D24DFD94();
    swift_bridgeObjectRelease();
    result = sub_1D24DFF08();
    __break(1u);
  }
  else
  {
    *a2 = result;
  }
  return result;
}

void (*VSUserAccount.sourceType.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  VSUserAccount.sourceType.getter((_BYTE *)v3 + 48);
  return sub_1D248C7D8;
}

void sub_1D248C7D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  id *v3;
  void *v4;

  v1 = *(_QWORD **)a1;
  v2 = *(unsigned __int8 *)(*(_QWORD *)a1 + 48);
  v3 = *(id **)(*(_QWORD *)a1 + 40);
  objc_msgSend(*v3, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E990);
  swift_dynamicCast();
  v4 = (void *)v1[4];

  *v3 = v4;
  objc_msgSend(v4, sel_setSourceType_, v2);
  free(v1);
}

uint64_t VSUserAccount.sourceIdentifier.getter()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_sourceIdentifier);
  v2 = sub_1D24DFD70();

  return v2;
}

void sub_1D248C8E8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v4 = objc_msgSend(v3, sel_sourceIdentifier);
  v5 = sub_1D24DFD70();
  v7 = v6;

  *a2 = v5;
  a2[1] = v7;
}

void sub_1D248C950()
{
  swift_bridgeObjectRetain();
  VSUserAccount.sourceIdentifier.setter();
}

void VSUserAccount.sourceIdentifier.setter()
{
  id *v0;
  id v1;
  void *v2;
  void *v3;

  objc_msgSend(*v0, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E990);
  swift_dynamicCast();

  *v0 = v3;
  v1 = v3;
  v2 = (void *)sub_1D24DFD4C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setSourceIdentifier_, v2);

}

void (*VSUserAccount.sourceIdentifier.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  id *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(*v1, sel_sourceIdentifier);
  v4 = sub_1D24DFD70();
  v6 = v5;

  *a1 = v4;
  a1[1] = v6;
  return sub_1D248CAC8;
}

void sub_1D248CAC8(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    VSUserAccount.sourceIdentifier.setter();
    swift_bridgeObjectRelease();
  }
  else
  {
    VSUserAccount.sourceIdentifier.setter();
  }
}

uint64_t VSUserAccount.deviceIdentifier.getter()
{
  return sub_1D248CB34((SEL *)&selRef_deviceIdentifier);
}

uint64_t sub_1D248CB34(SEL *a1)
{
  id *v1;
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(*v1, *a1);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_1D24DFD70();

  return v4;
}

void sub_1D248CB98(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1D248CBA4(a1, (SEL *)&selRef_deviceIdentifier, a2);
}

void sub_1D248CBA4(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *a1;
  v6 = objc_msgSend(v5, *a2);
  if (v6)
  {
    v7 = v6;
    v8 = sub_1D24DFD70();
    v10 = v9;

  }
  else
  {

    v8 = 0;
    v10 = 0;
  }
  *a3 = v8;
  a3[1] = v10;
}

uint64_t sub_1D248CC20(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D248CC2C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.deviceIdentifier.setter);
}

uint64_t sub_1D248CC2C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v6 = *a1;
  v7 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v6, v7);
}

void VSUserAccount.deviceIdentifier.setter(uint64_t a1, uint64_t a2)
{
  sub_1D2489D38(a1, a2, (SEL *)&selRef_setDeviceIdentifier_);
}

uint64_t (*VSUserAccount.deviceIdentifier.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  id *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(*v1, sel_deviceIdentifier);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1D24DFD70();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1D248CCEC;
}

uint64_t sub_1D248CCEC(uint64_t *a1, char a2)
{
  return sub_1D248CCF8(a1, a2, (uint64_t (*)(uint64_t, uint64_t))VSUserAccount.deviceIdentifier.setter);
}

uint64_t sub_1D248CCF8(uint64_t *a1, char a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v5 = *a1;
  v4 = a1[1];
  if ((a2 & 1) == 0)
    return a3(*a1, v4);
  swift_bridgeObjectRetain();
  a3(v5, v4);
  return swift_bridgeObjectRelease();
}

id VSUserAccount.keychainItemHash.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_keychainItemHash);
}

id sub_1D248CD6C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_keychainItemHash);
  *a2 = result;
  return result;
}

id sub_1D248CD9C(uint64_t *a1, id *a2)
{
  uint64_t v3;
  void *v5;

  v3 = *a1;
  objc_msgSend(*a2, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E990);
  swift_dynamicCast();

  *a2 = v5;
  return objc_msgSend(v5, sel_setKeychainItemHash_, v3);
}

id VSUserAccount.keychainItemHash.setter(uint64_t a1)
{
  id *v1;
  void *v4;

  objc_msgSend(*v1, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E990);
  swift_dynamicCast();

  *v1 = v4;
  return objc_msgSend(v4, sel_setKeychainItemHash_, a1);
}

void (*VSUserAccount.keychainItemHash.modify(_QWORD *a1))(uint64_t a1)
{
  id *v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  v3[4] = objc_msgSend(*v1, sel_keychainItemHash);
  return sub_1D248CF50;
}

void sub_1D248CF50(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  id *v3;
  void *v4;

  v1 = *(_QWORD **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v3 = *(id **)(*(_QWORD *)a1 + 48);
  objc_msgSend(*v3, sel_copy);
  sub_1D24DFE6C();
  swift_unknownObjectRelease();
  sub_1D2487DEC(0, &qword_1EFC7E990);
  swift_dynamicCast();
  v4 = (void *)v1[5];

  *v3 = v4;
  objc_msgSend(v4, sel_setKeychainItemHash_, v2);
  free(v1);
}

id VSUserAccount.objcUserAccount.getter()
{
  id *v0;

  return *v0;
}

id VSUserAccount.isDeveloperCreated.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_isDeveloperCreated);
}

id sub_1D248D034@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_isDeveloperCreated);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1D248D064(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D248A158(a1, a2, a3, a4, (SEL *)&selRef_setIsDeveloperCreated_);
}

id VSUserAccount.isDeveloperCreated.setter(char a1)
{
  return sub_1D248A214(a1, (SEL *)&selRef_setIsDeveloperCreated_);
}

void (*VSUserAccount.isDeveloperCreated.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  id *v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  *((_BYTE *)v3 + 48) = objc_msgSend(*v1, sel_isDeveloperCreated);
  return sub_1D248D0D4;
}

void sub_1D248D0D4(uint64_t a1, uint64_t a2)
{
  sub_1D248A324(a1, a2, (SEL *)&selRef_setIsDeveloperCreated_);
}

void VSUserAccount.hash(into:)()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_1D24DFE48();

}

uint64_t static VSUserAccount.== infix(_:_:)()
{
  sub_1D2487DEC(0, &qword_1EFC7E920);
  return sub_1D24DFE3C() & 1;
}

uint64_t VSUserAccount.hashValue.getter()
{
  sub_1D24DFFA4();
  sub_1D24DFE48();
  return sub_1D24DFFBC();
}

VideoSubscriberAccount::VSUserAccount::AccountType_optional __swiftcall VSUserAccount.AccountType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (VideoSubscriberAccount::VSUserAccount::AccountType_optional)rawValue;
}

uint64_t VSUserAccount.AccountType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1D248D1D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

BOOL sub_1D248D21C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1D248D238()
{
  return sub_1D24DFFB0();
}

_QWORD *sub_1D248D264@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_1D248D284(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t static VSUserAccount.OriginatingDeviceCategory.currentDeviceCategory()@<X0>(char *a1@<X8>)
{
  void *v2;
  id v3;
  id v4;

  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v4 = objc_msgSend(v3, sel_deviceType);

  return static VSUserAccount.OriginatingDeviceCategory.fromObjcType(_:)((uint64_t)objc_msgSend(v2, sel_deviceCategoryFromDeviceType_, v4), a1);
}

uint64_t sub_1D248D314()
{
  sub_1D24DFFA4();
  sub_1D24DFFB0();
  return sub_1D24DFFBC();
}

uint64_t sub_1D248D358()
{
  sub_1D24DFFA4();
  sub_1D24DFFB0();
  return sub_1D24DFFBC();
}

VideoSubscriberAccount::VSUserAccount::SourceType_optional __swiftcall VSUserAccount.SourceType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (VideoSubscriberAccount::VSUserAccount::SourceType_optional)rawValue;
}

uint64_t VSUserAccount.SourceType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

BOOL sub_1D248D3B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

VideoSubscriberAccount::VSUserAccount::SourceType_optional sub_1D248D3C8(Swift::Int *a1)
{
  return VSUserAccount.SourceType.init(rawValue:)(*a1);
}

uint64_t VSUserAccountManager.update(_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_1D248D3EC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;

  v1 = v0[2];
  v2 = (void *)v0[3];
  v3 = swift_task_alloc();
  v0[4] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[5] = v5;
  *v5 = v0;
  v5[1] = sub_1D248D494;
  return sub_1D24DFF80();
}

uint64_t sub_1D248D494()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D248D500()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D248D534()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1D248D570(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E9E0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_1D248E1DC;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D248D6B0;
  aBlock[3] = &block_descriptor_10_0;
  v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_updateUserAccount_completion_, a3, v11);
  _Block_release(v11);
}

void sub_1D248D6A8(uint64_t a1)
{
  uint64_t v1;

  sub_1D248D570(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1D248D6B0(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_1D248D704()
{
  return 0;
}

uint64_t VSUserAccountManager.userAccounts(options:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_1D248D724()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[3];
  v1 = v0[4];
  v3 = swift_task_alloc();
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E9A8);
  *v4 = v0;
  v4[1] = sub_1D248D7D4;
  return sub_1D24DFF80();
}

uint64_t sub_1D248D7D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D248D840()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D248D84C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1D248D880(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E9D0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_1D248DDD4;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D248D9B8;
  aBlock[3] = &block_descriptor_0;
  v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_queryUserAccountsWithOptions_completion_, a3, v11);
  _Block_release(v11);
}

uint64_t sub_1D248D9B8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1D2487DEC(0, &qword_1EFC7E990);
    v4 = sub_1D24DFDC4();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1D248DA44(uint64_t a1)
{
  uint64_t v1;

  sub_1D248D880(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1D248DA50()
{
  unint64_t result;

  result = qword_1EFC7E9B0;
  if (!qword_1EFC7E9B0)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSUserAccount, &type metadata for VSUserAccount);
    atomic_store(result, (unint64_t *)&qword_1EFC7E9B0);
  }
  return result;
}

unint64_t sub_1D248DA98()
{
  unint64_t result;

  result = qword_1EFC7E9B8;
  if (!qword_1EFC7E9B8)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSUserAccount.AccountType, &type metadata for VSUserAccount.AccountType);
    atomic_store(result, (unint64_t *)&qword_1EFC7E9B8);
  }
  return result;
}

unint64_t sub_1D248DAE0()
{
  unint64_t result;

  result = qword_1EFC7E9C0;
  if (!qword_1EFC7E9C0)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSUserAccount.OriginatingDeviceCategory, &type metadata for VSUserAccount.OriginatingDeviceCategory);
    atomic_store(result, (unint64_t *)&qword_1EFC7E9C0);
  }
  return result;
}

unint64_t sub_1D248DB28()
{
  unint64_t result;

  result = qword_1EFC7E9C8;
  if (!qword_1EFC7E9C8)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSUserAccount.SourceType, &type metadata for VSUserAccount.SourceType);
    atomic_store(result, (unint64_t *)&qword_1EFC7E9C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for VSUserAccount()
{
  return &type metadata for VSUserAccount;
}

_BYTE *sub_1D248DB84(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for VSUserAccount.AccountType()
{
  return &type metadata for VSUserAccount.AccountType;
}

uint64_t _s22VideoSubscriberAccount13VSUserAccountV11AccountTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s22VideoSubscriberAccount13VSUserAccountV11AccountTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D248DC7C + 4 * byte_1D24E9695[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D248DCB0 + 4 * byte_1D24E9690[v4]))();
}

uint64_t sub_1D248DCB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D248DCB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D248DCC0);
  return result;
}

uint64_t sub_1D248DCCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D248DCD4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D248DCD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D248DCE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VSUserAccount.OriginatingDeviceCategory()
{
  return &type metadata for VSUserAccount.OriginatingDeviceCategory;
}

uint64_t storeEnumTagSinglePayload for VSUserAccount.SourceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D248DD48 + 4 * byte_1D24E969F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D248DD7C + 4 * byte_1D24E969A[v4]))();
}

uint64_t sub_1D248DD7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D248DD84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D248DD8CLL);
  return result;
}

uint64_t sub_1D248DD98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D248DDA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D248DDA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D248DDAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VSUserAccount.SourceType()
{
  return &type metadata for VSUserAccount.SourceType;
}

uint64_t sub_1D248DDC8()
{
  return objectdestroyTm(&qword_1EFC7E9D0);
}

uint64_t sub_1D248DDD4(unint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t result;
  id *v12;
  char *v13;
  id v14;
  unint64_t v15;
  unint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E9D0);
  if (!a1)
  {
    if (a2)
    {
      v10 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E9D0);
      return sub_1D24DFDDC();
    }
    goto LABEL_25;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v4 = sub_1D24DFF14();
    if (v4)
      goto LABEL_4;
LABEL_23:
    swift_bridgeObjectRelease_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E9D0);
    return sub_1D24DFDE8();
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v4)
    goto LABEL_23;
LABEL_4:
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      v6 = (char *)MEMORY[0x1E0DEE9D8];
      do
      {
        v7 = MEMORY[0x1D8236110](v5, a1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_1D248E074(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
        v9 = *((_QWORD *)v6 + 2);
        v8 = *((_QWORD *)v6 + 3);
        if (v9 >= v8 >> 1)
          v6 = sub_1D248E074((char *)(v8 > 1), v9 + 1, 1, v6);
        ++v5;
        *((_QWORD *)v6 + 2) = v9 + 1;
        *(_QWORD *)&v6[8 * v9 + 32] = v7;
      }
      while (v4 != v5);
    }
    else
    {
      v12 = (id *)(a1 + 32);
      v13 = (char *)MEMORY[0x1E0DEE9D8];
      do
      {
        v14 = *v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_1D248E074(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
        v16 = *((_QWORD *)v13 + 2);
        v15 = *((_QWORD *)v13 + 3);
        if (v16 >= v15 >> 1)
          v13 = sub_1D248E074((char *)(v15 > 1), v16 + 1, 1, v13);
        *((_QWORD *)v13 + 2) = v16 + 1;
        *(_QWORD *)&v13[8 * v16 + 32] = v14;
        ++v12;
        --v4;
      }
      while (v4);
    }
    goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  result = sub_1D24DFF08();
  __break(1u);
  return result;
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

char *sub_1D248E074(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E9D8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1D248E174()
{
  return objectdestroyTm(&qword_1EFC7E9E0);
}

uint64_t objectdestroyTm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_1D248E1DC(void *a1)
{
  id v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E9E0);
  if (!a1)
    return sub_1D24DFDE8();
  v2 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E9E0);
  return sub_1D24DFDDC();
}

void *sub_1D248E27C()
{
  return &unk_1E93A2690;
}

unint64_t sub_1D248E288()
{
  return 0xD000000000000016;
}

void sub_1D248E2A4()
{
  qword_1EFC81F18 = 49;
  unk_1EFC81F20 = 0xE100000000000000;
}

uint64_t *sub_1D248E2BC()
{
  if (qword_1EFC81610 != -1)
    swift_once();
  return &qword_1EFC81F18;
}

uint64_t sub_1D248E2FC()
{
  uint64_t v0;

  if (qword_1EFC81610 != -1)
    swift_once();
  v0 = qword_1EFC81F18;
  swift_bridgeObjectRetain();
  return v0;
}

id sub_1D248E358()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t sub_1D248E360()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for VSMetricsManager();
  v0 = swift_allocObject();
  result = sub_1D248E44C();
  qword_1EFC81F28 = v0;
  return result;
}

uint64_t sub_1D248E398()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1D248E44C();
  return v0;
}

uint64_t *sub_1D248E3CC()
{
  if (qword_1EFC81618 != -1)
    swift_once();
  return &qword_1EFC81F28;
}

uint64_t sub_1D248E40C()
{
  if (qword_1EFC81618 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1D248E44C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  if (qword_1EFC81610 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1D24DFD4C();
  v2 = (void *)sub_1D24DFD4C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bagForProfile_profileVersion_, v1, v2);

  v4 = objc_allocWithZone(MEMORY[0x1E0CFDB60]);
  v5 = (void *)sub_1D24DFD4C();
  v6 = objc_msgSend(v4, sel_initWithContainerID_bag_, v5, v3);

  *(_QWORD *)(v0 + 16) = v6;
  return v0;
}

void sub_1D248E570(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  char *v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  char *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  __int128 v44;
  _QWORD *v45;
  char isUniquelyReferenced_nonNull_native;
  char v47;
  unint64_t v48;
  uint64_t v49;
  _BOOL8 v50;
  uint64_t v51;
  char v52;
  unint64_t v53;
  char v54;
  _OWORD *v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  id v59;
  void *v60;
  id v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  int64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  int64_t v78;
  __int128 v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  char *v86;
  __int128 v87[2];
  uint64_t v88;
  __int128 v89;
  uint64_t AssociatedTypeWitness;
  _QWORD v91[5];
  _OWORD v92[2];
  __int128 v93;
  __int128 v94;
  _OWORD v95[2];
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;

  v2 = sub_1D24DFD04();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v86 = (char *)&v69 - v7;
  v76 = (_QWORD *)sub_1D2483D8C(MEMORY[0x1E0DEE9D8]);
  v8 = a1[3];
  v9 = a1[4];
  v74 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  v12 = 0;
  v13 = *(_QWORD *)(v10 + 64);
  v77 = v10 + 64;
  v14 = 1 << *(_BYTE *)(v10 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v81 = (uint64_t)v95 + 8;
  v82 = v10;
  v85 = &v100;
  v78 = (unint64_t)(v14 + 63) >> 6;
  v72 = v78 - 5;
  v70 = v78 - 1;
  v71 = v10 + 104;
  v84 = MEMORY[0x1E0DEE9B8] + 8;
  *(_QWORD *)&v11 = 136315138;
  v79 = v11;
  v80 = v6;
  v83 = v2;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_8;
    }
    v20 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v20 >= v78)
    {
      v22 = v12;
LABEL_14:
      v16 = 0;
      v96 = 0;
      memset(v95, 0, sizeof(v95));
      v12 = v22;
      v93 = 0u;
      v94 = 0u;
      goto LABEL_15;
    }
    v21 = *(_QWORD *)(v77 + 8 * v20);
    if (!v21)
    {
      v22 = v12 + 1;
      if (v12 + 2 >= v78)
        goto LABEL_14;
      v21 = *(_QWORD *)(v77 + 8 * (v12 + 2));
      if (v21)
      {
        v20 = v12 + 2;
      }
      else
      {
        v22 = v12 + 2;
        if (v12 + 3 >= v78)
          goto LABEL_14;
        v21 = *(_QWORD *)(v77 + 8 * (v12 + 3));
        if (v21)
        {
          v20 = v12 + 3;
        }
        else
        {
          v20 = v12 + 4;
          v22 = v12 + 3;
          if (v12 + 4 >= v78)
            goto LABEL_14;
          v21 = *(_QWORD *)(v77 + 8 * v20);
          if (!v21)
          {
            while (v72 != v12)
            {
              v21 = *(_QWORD *)(v71 + 8 * v12++);
              if (v21)
              {
                v20 = v12 + 4;
                goto LABEL_12;
              }
            }
            v22 = v70;
            goto LABEL_14;
          }
        }
      }
    }
LABEL_12:
    v16 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v20 << 6);
    v12 = v20;
LABEL_8:
    v19 = v82;
    sub_1D24820C0(*(_QWORD *)(v82 + 48) + 40 * v18, (uint64_t)&v93);
    sub_1D24820FC(*(_QWORD *)(v19 + 56) + 32 * v18, v81);
LABEL_15:
    sub_1D248D1D8((uint64_t)&v93, (uint64_t)&v97, &qword_1EFC7E7A0);
    if (!*((_QWORD *)&v98 + 1))
    {
      swift_release();
      sub_1D248F0E4((uint64_t)v76);
      swift_bridgeObjectRelease();
      v59 = objc_allocWithZone(MEMORY[0x1E0CFDB68]);
      v60 = (void *)sub_1D24DFD10();
      swift_bridgeObjectRelease();
      v61 = objc_msgSend(v59, sel_initWithUnderlyingDictionary_, v60);

      v62 = v74;
      v63 = v74[3];
      v64 = v74[4];
      __swift_project_boxed_opaque_existential_1(v74, v63);
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v64);
      v65 = (void *)sub_1D24DFD4C();
      swift_bridgeObjectRelease();
      objc_msgSend(v61, sel_setEventType_, v65);

      v66 = v62[3];
      v67 = v62[4];
      __swift_project_boxed_opaque_existential_1(v62, v66);
      (*(void (**)(uint64_t, uint64_t))(v67 + 40))(v66, v67);
      v68 = (void *)sub_1D24DFD4C();
      swift_bridgeObjectRelease();
      objc_msgSend(v61, sel_setTopic_, v68);

      objc_msgSend(v61, sel_setCheckDiagnosticsAndUsageSetting_, 1);
      (*(void (**)(id))(*(_QWORD *)v75 + 104))(v61);

      return;
    }
    v93 = v97;
    v94 = v98;
    *(_QWORD *)&v95[0] = v99;
    sub_1D2482278(v85, v92);
    sub_1D24820C0((uint64_t)&v93, (uint64_t)&v89);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E9E8);
    if (swift_dynamicCast())
    {
      sub_1D2490DE0(v87, (uint64_t)v91);
      __swift_project_boxed_opaque_existential_1(v91, v91[3]);
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v89);
      sub_1D24DFDAC();
      if (swift_dynamicCast())
      {
        v73 = v3;
        v44 = v87[0];
        sub_1D24820FC((uint64_t)v92, (uint64_t)&v89);
        v45 = v76;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v87[0] = v45;
        v48 = sub_1D24844E8(v44, *((uint64_t *)&v44 + 1));
        v49 = v45[2];
        v50 = (v47 & 1) == 0;
        v51 = v49 + v50;
        if (__OFADD__(v49, v50))
          goto LABEL_49;
        v52 = v47;
        if (v45[3] >= v51)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1D24851B8();
        }
        else
        {
          sub_1D2484864(v51, isUniquelyReferenced_nonNull_native);
          v53 = sub_1D24844E8(v44, *((uint64_t *)&v44 + 1));
          if ((v52 & 1) != (v54 & 1))
            goto LABEL_51;
          v48 = v53;
        }
        v76 = *(_QWORD **)&v87[0];
        if ((v52 & 1) != 0)
        {
          v55 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)&v87[0] + 56) + 32 * v48);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
          sub_1D2482278(&v89, v55);
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)&v87[0] + 8 * (v48 >> 6) + 64) |= 1 << v48;
          *(_OWORD *)(v76[6] + 16 * v48) = v44;
          sub_1D2482278(&v89, (_OWORD *)(v76[7] + 32 * v48));
          v56 = v76[2];
          v57 = __OFADD__(v56, 1);
          v58 = v56 + 1;
          if (v57)
            goto LABEL_50;
          v76[2] = v58;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v92);
        sub_1D2482204((uint64_t)&v93);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v91);
        v6 = v80;
        v3 = v73;
      }
      else
      {
        v23 = sub_1D249A9AC();
        v24 = v86;
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v86, v23, v2);
        sub_1D24820C0((uint64_t)&v93, (uint64_t)&v89);
        v25 = sub_1D24DFCEC();
        v26 = v2;
        v27 = v3;
        v28 = sub_1D24DFE24();
        if (os_log_type_enabled(v25, v28))
        {
          v29 = swift_slowAlloc();
          v30 = swift_slowAlloc();
          *(_QWORD *)&v87[0] = v30;
          *(_DWORD *)v29 = v79;
          v31 = sub_1D24DFE84();
          *(_QWORD *)(v29 + 4) = sub_1D2481604(v31, v32, (uint64_t *)v87);
          swift_bridgeObjectRelease();
          sub_1D2482204((uint64_t)&v89);
          _os_log_impl(&dword_1D2419000, v25, v28, "Non-string key %s sent to VSMetricsManager.record", (uint8_t *)v29, 0xCu);
          swift_arrayDestroy();
          v33 = v30;
          v6 = v80;
          MEMORY[0x1D8236C38](v33, -1, -1);
          MEMORY[0x1D8236C38](v29, -1, -1);

          (*(void (**)(char *, uint64_t))(v27 + 8))(v86, v26);
        }
        else
        {

          sub_1D2482204((uint64_t)&v89);
          (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
        }
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v92);
        sub_1D2482204((uint64_t)&v93);
        v3 = v27;
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v91);
        v2 = v83;
      }
    }
    else
    {
      v88 = 0;
      memset(v87, 0, sizeof(v87));
      sub_1D24868BC((uint64_t)v87, &qword_1EFC7E9F0);
      v34 = sub_1D249A9AC();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v34, v2);
      sub_1D24820C0((uint64_t)&v93, (uint64_t)v91);
      v35 = sub_1D24DFCEC();
      v36 = v6;
      v37 = sub_1D24DFE24();
      if (os_log_type_enabled(v35, v37))
      {
        v38 = v3;
        v39 = swift_slowAlloc();
        v40 = swift_slowAlloc();
        *(_QWORD *)&v89 = v40;
        *(_DWORD *)v39 = v79;
        v41 = sub_1D24DFE84();
        *(_QWORD *)(v39 + 4) = sub_1D2481604(v41, v42, (uint64_t *)&v89);
        swift_bridgeObjectRelease();
        sub_1D2482204((uint64_t)v91);
        _os_log_impl(&dword_1D2419000, v35, v37, "Unexpected key sent to VSMetricsManager.record: %s", (uint8_t *)v39, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D8236C38](v40, -1, -1);
        v43 = v39;
        v3 = v38;
        v2 = v83;
        MEMORY[0x1D8236C38](v43, -1, -1);

      }
      else
      {

        sub_1D2482204((uint64_t)v91);
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v36, v2);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v92);
      sub_1D2482204((uint64_t)&v93);
      v6 = v36;
    }
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  sub_1D24DFF98();
  __break(1u);
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1D248EE98(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E7C8);
  v2 = sub_1D24DFF38();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D2486950(v6, (uint64_t)v15, &qword_1EFC7EB58);
    result = sub_1D2481C44((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1D2482278(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D248EFD8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EB70);
  v2 = (_QWORD *)sub_1D24DFF38();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *((unsigned __int8 *)v4 - 16);
    v7 = *(v4 - 1);
    v6 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1D2490E34(v5);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    v10 = (_QWORD *)(v2[7] + 16 * result);
    *v10 = v7;
    v10[1] = v6;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1D248F0E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E7C8);
    v2 = sub_1D24DFF38();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1D24820FC(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1D2482278(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1D2482278(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1D2482278(v36, v37);
    sub_1D2482278(v37, &v33);
    result = sub_1D24DFE90();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1D2482278(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1D2493E4C();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

id sub_1D248F4A8(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), sel_enqueueEvent_, a1);
}

void sub_1D248F4BC()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  sub_1D2487DEC(0, &qword_1EFC7E9F8);
  v2 = (id)sub_1D24DFDB8();
  objc_msgSend(v1, sel_enqueueEvents_, v2);

}

void sub_1D248F524()
{
  uint64_t v0;

}

uint64_t sub_1D248F54C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D248F568()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

const char *sub_1D248F58C()
{
  return "VSA";
}

const char *sub_1D248F5A0()
{
  return "MetricsRefactor";
}

uint64_t sub_1D248F5B4()
{
  return 1;
}

uint64_t sub_1D248F5BC()
{
  return sub_1D24DFFB0();
}

uint64_t sub_1D248F5E0()
{
  sub_1D24DFFA4();
  sub_1D24DFFB0();
  return sub_1D24DFFBC();
}

uint64_t sub_1D248F620()
{
  sub_1D24DFFA4();
  sub_1D24DFFB0();
  return sub_1D24DFFBC();
}

void sub_1D248F65C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  sub_1D2490F60(a1, a2, a3, a4, (uint64_t)&unk_1E93A2948, (uint64_t)&unk_1EFC7EC00, (uint64_t)&selRef_recordEnterEventWithPage_pageType_);
}

uint64_t sub_1D248F688(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;
  _QWORD *v6;

  *(_BYTE *)(v5 + 104) = a4;
  *(_BYTE *)(v5 + 105) = a5;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 96) = v6;
  *v6 = v5;
  v6[1] = sub_1D248F6FC;
  return VSPageEnterEvent.init(with:and:)(v5 + 16, (_BYTE *)(v5 + 104), (_BYTE *)(v5 + 105));
}

uint64_t sub_1D248F6FC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D248F750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 64) = v1;
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = v2;
  *(_QWORD *)(v0 + 88) = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D248F7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D24DFE00();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1D24DFDF4();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1D24868BC(a1, &qword_1EFC7EA00);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D24DFDD0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_1D248F930(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  sub_1D2490F60(a1, a2, a3, a4, (uint64_t)&unk_1E93A2920, (uint64_t)&unk_1EFC7EBF0, (uint64_t)&selRef_recordExitEventWithPage_pageType_);
}

uint64_t sub_1D248F95C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;
  _QWORD *v6;

  *(_BYTE *)(v5 + 104) = a4;
  *(_BYTE *)(v5 + 105) = a5;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 96) = v6;
  *v6 = v5;
  v6[1] = sub_1D248F9D0;
  return VSPageExitEvent.init(with:and:)(v5 + 16, (_BYTE *)(v5 + 104), (_BYTE *)(v5 + 105));
}

uint64_t sub_1D248F9D0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D248FA24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 64) = v1;
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = v2;
  *(_QWORD *)(v0 + 88) = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D248FAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;

  v10 = sub_1D24DFD70();
  v12 = v11;
  v13 = sub_1D24DFD70();
  sub_1D2490F60(v10, v12, v13, v14, a5, a6, a7);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D248FB3C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6)
{
  uint64_t v6;
  _QWORD *v7;

  *(_BYTE *)(v6 + 104) = a4;
  *(_BYTE *)(v6 + 105) = a5;
  *(_BYTE *)(v6 + 106) = a6;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 96) = v7;
  *v7 = v6;
  v7[1] = sub_1D248FBBC;
  return VSClickEvent.init(with:page:type:)(v6 + 16, (_BYTE *)(v6 + 104), (_BYTE *)(v6 + 105), (_BYTE *)(v6 + 106));
}

uint64_t sub_1D248FBBC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D248FC10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 64) = v1;
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = v2;
  *(_QWORD *)(v0 + 88) = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D248FD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;

  swift_bridgeObjectRetain();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 96) = v6;
  *v6 = v4;
  v6[1] = sub_1D248FD88;
  return VSSignInEvent.init(_:)(v4 + 16, a4);
}

uint64_t sub_1D248FD88()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D248FDDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 64) = v1;
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = v2;
  *(_QWORD *)(v0 + 88) = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D248FF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;

  swift_bridgeObjectRetain();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 96) = v6;
  *v6 = v4;
  v6[1] = sub_1D248FF90;
  return VSSignOutEvent.init(_:)(v4 + 16, a4);
}

uint64_t sub_1D248FF90()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D248FFE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 64) = v1;
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = v2;
  *(_QWORD *)(v0 + 88) = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D249006C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;

  swift_bridgeObjectRetain();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 96) = v6;
  *v6 = v4;
  v6[1] = sub_1D24900DC;
  return VSSTBOptOutEvent.init(_:)(v4 + 16, a4);
}

uint64_t sub_1D24900DC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2490130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 64) = v1;
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = v2;
  *(_QWORD *)(v0 + 88) = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D24901E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;

  swift_bridgeObjectRetain();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 96) = v6;
  *v6 = v4;
  v6[1] = sub_1D2490254;
  return VSUserMetadataEvent.init(_:)(v4 + 16, a4);
}

uint64_t sub_1D2490254()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D24902A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 64) = v1;
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = v2;
  *(_QWORD *)(v0 + 88) = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D24903B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;

  swift_bridgeObjectRetain();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 96) = v6;
  *v6 = v4;
  v6[1] = sub_1D2490424;
  return VSProhibitedTemplateEvent.init(_:)(v4 + 16, a4);
}

uint64_t sub_1D2490424()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2490478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 64) = v1;
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = v2;
  *(_QWORD *)(v0 + 88) = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D24904FC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5;

  v5 = sub_1D24DFD70();
  a4(v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D249052C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t inited;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EA00);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EA08);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D24E8C70;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = a1;
  *(_QWORD *)(inited + 48) = a2;
  swift_bridgeObjectRetain();
  sub_1D248EFD8(inited);
  swift_bridgeObjectRelease();
  v8 = sub_1D24DFE00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = a2;
  swift_bridgeObjectRetain();
  sub_1D248F7C8((uint64_t)v6, (uint64_t)&unk_1EFC7EA18, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_1D2490638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v8;

  swift_bridgeObjectRetain();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 96) = v8;
  *v8 = v5;
  v8[1] = sub_1D24906B0;
  return VSNPIBrokenEvent.init(_:)(v5 + 16, a4, a5);
}

uint64_t sub_1D24906B0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2490704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 64) = v1;
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = v2;
  *(_QWORD *)(v0 + 88) = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D24908A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;

  swift_bridgeObjectRetain();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 96) = v6;
  *v6 = v4;
  v6[1] = sub_1D2490918;
  return VSFederatedPunchoutEvent.init(_:)(v4 + 16, a4);
}

uint64_t sub_1D2490918()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D249096C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 64) = v1;
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = v2;
  *(_QWORD *)(v0 + 88) = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2490A50(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  id v13;
  _QWORD *v14;

  *(_QWORD *)(v8 + 96) = a4;
  v13 = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 104) = v14;
  *v14 = v8;
  v14[1] = sub_1D2490B00;
  return VSAccountUpdateEvent.init(userAccount:source:updateType:)(v8 + 16, (_QWORD *)(v8 + 96), a5, a6, a7, a8);
}

uint64_t sub_1D2490B00()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2490B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 64) = v1;
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = v2;
  *(_QWORD *)(v0 + 88) = v4;
  VSMetricsEventProtocol.record()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

VSMetricsManagerObjC __swiftcall VSMetricsManagerObjC.init()()
{
  return (VSMetricsManagerObjC)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id VSMetricsManagerObjC.init()()
{
  objc_super v1;

  v1.super_class = (Class)VSMetricsManagerObjC;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t sub_1D2490D30(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1D2490D94;
  return v6(a1);
}

uint64_t sub_1D2490D94()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1D2490DE0(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_1D2490E34(uint64_t a1)
{
  uint64_t v2;

  sub_1D24821C0();
  v2 = sub_1D24DFD34();
  return sub_1D2490E9C(a1, v2);
}

unint64_t sub_1D2490E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    sub_1D247FD48();
    do
    {
      if ((sub_1D24DFD40() & 1) != 0)
        break;
      v4 = (v4 + 1) & v5;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

void sub_1D2490F60(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  Swift::String v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  Swift::String v34;
  char v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint8_t *v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[5];

  v47 = a6;
  v48 = a7;
  v46[1] = a5;
  v11 = sub_1D24DFD04();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v46 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EA00);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50[3] = (uint64_t)&type metadata for VSAFeatures;
  v50[4] = sub_1D2493810();
  v21 = sub_1D24DFCC8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
  if ((v21 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v22._countAndFlagsBits = a1;
    v22._object = a2;
    VSPage.init(rawValue:)(v22);
    v23 = v50[0];
    if (LOBYTE(v50[0]) == 7)
    {
      v24 = a1;
      v25 = sub_1D249A9AC();
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v25, v11);
      swift_bridgeObjectRetain_n();
      v26 = sub_1D24DFCEC();
      v27 = sub_1D24DFE24();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = swift_slowAlloc();
        v48 = v12;
        v29 = (uint8_t *)v28;
        v30 = swift_slowAlloc();
        v50[0] = v30;
        *(_DWORD *)v29 = 136315138;
        swift_bridgeObjectRetain();
        v49 = sub_1D2481604(v24, (unint64_t)a2, v50);
        sub_1D24DFE54();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D2419000, v26, v27, "Invalid page ID %s", v29, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D8236C38](v30, -1, -1);
        MEMORY[0x1D8236C38](v29, -1, -1);

        (*(void (**)(char *, uint64_t))(v48 + 8))(v15, v11);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      v34._countAndFlagsBits = a3;
      v34._object = a4;
      VSPageType.init(rawValue:)(v34);
      v35 = v50[0];
      if (LOBYTE(v50[0]) == 3)
      {
        v36 = sub_1D249A9AC();
        (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, v36, v11);
        swift_bridgeObjectRetain_n();
        v37 = sub_1D24DFCEC();
        v38 = sub_1D24DFE24();
        if (os_log_type_enabled(v37, v38))
        {
          v39 = swift_slowAlloc();
          v48 = v12;
          v40 = (uint8_t *)v39;
          v41 = (unint64_t)a4;
          v42 = swift_slowAlloc();
          v50[0] = v42;
          *(_DWORD *)v40 = 136315138;
          swift_bridgeObjectRetain();
          v49 = sub_1D2481604(a3, v41, v50);
          sub_1D24DFE54();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1D2419000, v37, v38, "Invalid page type %s", v40, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D8236C38](v42, -1, -1);
          MEMORY[0x1D8236C38](v40, -1, -1);

          v43 = *(void (**)(char *, uint64_t))(v48 + 8);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          v43 = *(void (**)(char *, uint64_t))(v12 + 8);
        }
        v43(v17, v11);
      }
      else
      {
        v44 = sub_1D24DFE00();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v20, 1, 1, v44);
        v45 = swift_allocObject();
        *(_QWORD *)(v45 + 16) = 0;
        *(_QWORD *)(v45 + 24) = 0;
        *(_BYTE *)(v45 + 32) = v23;
        *(_BYTE *)(v45 + 33) = v35;
        sub_1D248F7C8((uint64_t)v20, v47, v45);
        swift_release();
      }
    }
  }
  else
  {
    v31 = objc_msgSend((id)objc_opt_self(), sel_sharedMetricsCenter);
    v32 = (void *)sub_1D24DFD4C();
    v33 = (void *)sub_1D24DFD4C();
    objc_msgSend(v31, *(SEL *)v48, v32, v33);

  }
}

void sub_1D2491434(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void (**a6)(_QWORD, _QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  void *v24;
  void *v25;
  unint64_t v26;
  Swift::String v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  unint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  id v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  Swift::String v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  Swift::String v56;
  char v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  void *v70;
  void (**v71)(_QWORD, _QWORD);
  uint64_t v72;
  uint64_t v73[5];

  v70 = a4;
  v71 = a6;
  v69 = a5;
  v9 = sub_1D24DFD04();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v66 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v66 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EA00);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73[3] = (uint64_t)&type metadata for VSAFeatures;
  v73[4] = sub_1D2493810();
  v22 = sub_1D24DFCC8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v73);
  if ((v22 & 1) == 0)
  {
    v40 = objc_msgSend((id)objc_opt_self(), sel_sharedMetricsCenter);
    v41 = (void *)sub_1D24DFD4C();
    v42 = (void *)sub_1D24DFD4C();
    v43 = (void *)sub_1D24DFD4C();
    objc_msgSend(v40, sel_recordClickEventWithPage_pageType_target_, v41, v42, v43);

    return;
  }
  v23 = a3;
  v67 = v18;
  v68 = v16;
  v25 = v70;
  v24 = v71;
  v26 = (unint64_t)a2;
  swift_bridgeObjectRetain();
  v27._countAndFlagsBits = a1;
  v27._object = a2;
  VSPage.init(rawValue:)(v27);
  v28 = v73[0];
  if (LOBYTE(v73[0]) == 7)
  {
    v29 = sub_1D249A9AC();
    v30 = v10;
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v32 = v13;
    v33 = v9;
    v31(v13, v29, v9);
    swift_bridgeObjectRetain_n();
    v34 = sub_1D24DFCEC();
    v35 = sub_1D24DFE24();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = v26;
      v38 = swift_slowAlloc();
      v73[0] = v38;
      v71 = (void (**)(_QWORD, _QWORD))v30;
      *(_DWORD *)v36 = 136315138;
      swift_bridgeObjectRetain();
      v72 = sub_1D2481604(a1, v37, v73);
      sub_1D24DFE54();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2419000, v34, v35, "Invalid page ID %s", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8236C38](v38, -1, -1);
      v39 = v36;
LABEL_9:
      MEMORY[0x1D8236C38](v39, -1, -1);

      ((void (**)(char *, uint64_t))v71)[1](v32, v33);
      return;
    }
LABEL_16:

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v33);
    return;
  }
  v44 = v25;
  swift_bridgeObjectRetain();
  v45 = v23;
  v46._countAndFlagsBits = v23;
  v46._object = v44;
  VSPageType.init(rawValue:)(v46);
  v47 = v73[0];
  if (LOBYTE(v73[0]) != 3)
  {
    v54 = (unint64_t)v24;
    swift_bridgeObjectRetain();
    v55 = v69;
    v56._countAndFlagsBits = v69;
    v56._object = v24;
    VSClickTarget.init(rawValue:)(v56);
    v57 = v73[0];
    if (LOBYTE(v73[0]) != 10)
    {
      v64 = sub_1D24DFE00();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v21, 1, 1, v64);
      v65 = swift_allocObject();
      *(_QWORD *)(v65 + 16) = 0;
      *(_QWORD *)(v65 + 24) = 0;
      *(_BYTE *)(v65 + 32) = v57;
      *(_BYTE *)(v65 + 33) = v28;
      *(_BYTE *)(v65 + 34) = v47;
      sub_1D248F7C8((uint64_t)v21, (uint64_t)&unk_1EFC7EBE0, v65);
      swift_release();
      return;
    }
    v58 = sub_1D249A9AC();
    v30 = v10;
    v59 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v32 = v67;
    v33 = v9;
    v59(v67, v58, v9);
    swift_bridgeObjectRetain_n();
    v34 = sub_1D24DFCEC();
    v60 = sub_1D24DFE24();
    if (os_log_type_enabled(v34, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc();
      v62 = v30;
      v63 = swift_slowAlloc();
      v73[0] = v63;
      *(_DWORD *)v61 = 136315138;
      swift_bridgeObjectRetain();
      v72 = sub_1D2481604(v55, v54, v73);
      sub_1D24DFE54();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2419000, v34, v60, "Invalid click target %s", v61, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8236C38](v63, -1, -1);
      MEMORY[0x1D8236C38](v61, -1, -1);

      (*(void (**)(char *, uint64_t))(v62 + 8))(v67, v33);
      return;
    }
    goto LABEL_16;
  }
  v48 = sub_1D249A9AC();
  v32 = v68;
  v49 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v68, v48, v9);
  swift_bridgeObjectRetain_n();
  v34 = sub_1D24DFCEC();
  v50 = sub_1D24DFE24();
  if (os_log_type_enabled(v34, v50))
  {
    v51 = (uint8_t *)swift_slowAlloc();
    v52 = swift_slowAlloc();
    v71 = (void (**)(_QWORD, _QWORD))v10;
    v33 = v49;
    v53 = v52;
    v73[0] = v52;
    *(_DWORD *)v51 = 136315138;
    swift_bridgeObjectRetain();
    v72 = sub_1D2481604(v45, (unint64_t)v44, v73);
    sub_1D24DFE54();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2419000, v34, v50, "Invalid page type %s", v51, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D8236C38](v53, -1, -1);
    v39 = v51;
    goto LABEL_9;
  }

  swift_bridgeObjectRelease_n();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v32, v49);
}

void sub_1D2491AC0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t inited;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  id v28;
  char v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  void *v35;
  char v36;
  uint64_t v37;
  _QWORD *v38;
  id v39;
  void *v40;
  void *v41;
  void *v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  _OWORD v46[2];
  __int128 v47;
  uint64_t v48;
  _BYTE v49[24];
  ValueMetadata *v50;
  unint64_t v51;

  v44 = a4;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EA00);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = &type metadata for VSAFeatures;
  v51 = sub_1D2493810();
  v18 = sub_1D24DFCC8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
  if ((v18 & 1) != 0)
  {
    v42 = a5;
    v43 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EB78);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D24E9970;
    v49[0] = 3;
    sub_1D24825C8();
    sub_1D24DFEB4();
    v20 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 72) = a1;
    *(_QWORD *)(inited + 80) = a2;
    v49[0] = 2;
    sub_1D2493A30();
    swift_bridgeObjectRetain();
    sub_1D24DFEB4();
    *(_QWORD *)(inited + 168) = v20;
    *(_QWORD *)(inited + 144) = a6;
    *(_QWORD *)(inited + 152) = a7;
    swift_bridgeObjectRetain();
    v21 = sub_1D248EE98(inited);
    if (a8)
    {
      LOBYTE(v47) = 0;
      sub_1D24DFEB4();
      v22 = objc_msgSend(a8, sel_domain);
      v23 = sub_1D24DFD70();
      v25 = v24;

      v48 = v20;
      *(_QWORD *)&v47 = v23;
      *((_QWORD *)&v47 + 1) = v25;
      sub_1D2482278(&v47, v46);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v45 = v21;
      sub_1D2481F88(v46, (uint64_t)v49, isUniquelyReferenced_nonNull_native);
      v27 = v45;
      swift_bridgeObjectRelease();
      sub_1D2482204((uint64_t)v49);
      LOBYTE(v47) = 1;
      sub_1D24DFEB4();
      v28 = objc_msgSend(a8, sel_code);
      v48 = MEMORY[0x1E0DEB418];
      *(_QWORD *)&v47 = v28;
      sub_1D2482278(&v47, v46);
      v29 = swift_isUniquelyReferenced_nonNull_native();
      v45 = v27;
      sub_1D2481F88(v46, (uint64_t)v49, v29);
      v30 = v45;
      swift_bridgeObjectRelease();
      sub_1D2482204((uint64_t)v49);
      LOBYTE(v47) = 2;
      sub_1D24DFEB4();
      v31 = objc_msgSend(a8, sel_underlyingErrors);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EB48);
      v32 = sub_1D24DFDC4();

      v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EB50);
      *(_QWORD *)&v47 = v32;
      sub_1D2482278(&v47, v46);
      v33 = swift_isUniquelyReferenced_nonNull_native();
      v45 = v30;
      sub_1D2481F88(v46, (uint64_t)v49, v33);
      v21 = v45;
      swift_bridgeObjectRelease();
      sub_1D2482204((uint64_t)v49);
    }
    v35 = v42;
    v34 = (uint64_t)v43;
    if (v42)
    {
      LOBYTE(v47) = 1;
      sub_1D24DFEB4();
      v48 = MEMORY[0x1E0DEA968];
      *(_QWORD *)&v47 = v44;
      *((_QWORD *)&v47 + 1) = v35;
      sub_1D2482278(&v47, v46);
      swift_bridgeObjectRetain();
      v36 = swift_isUniquelyReferenced_nonNull_native();
      v45 = v21;
      sub_1D2481F88(v46, (uint64_t)v49, v36);
      v21 = v45;
      swift_bridgeObjectRelease();
      sub_1D2482204((uint64_t)v49);
    }
    v37 = sub_1D24DFE00();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v34, 1, 1, v37);
    v38 = (_QWORD *)swift_allocObject();
    v38[2] = 0;
    v38[3] = 0;
    v38[4] = v21;
    sub_1D248F7C8(v34, (uint64_t)&unk_1EFC7EBD0, (uint64_t)v38);
    swift_release();
  }
  else
  {
    v39 = objc_msgSend((id)objc_opt_self(), sel_sharedMetricsCenter);
    v40 = (void *)sub_1D24DFD4C();
    if (a5)
      a5 = (void *)sub_1D24DFD4C();
    v41 = (void *)sub_1D24DFD4C();
    if (a8)
      a8 = (void *)sub_1D24DFC2C();
    objc_msgSend(v39, sel_recordSignInEventWithProviderIdentifier_supportedProvider_channelAdamID_signInType_error_, v40, a3 & 1, a5, v41, a8);

  }
}

void sub_1D2491F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  uint64_t inited;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  void *v13;
  _BYTE v14[104];
  char v15[24];
  ValueMetadata *v16;
  unint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EA00);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = &type metadata for VSAFeatures;
  v17 = sub_1D2493810();
  v7 = sub_1D24DFCC8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  if ((v7 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EB78);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D24E8C70;
    v15[0] = 3;
    sub_1D24825C8();
    sub_1D24DFEB4();
    *(_QWORD *)(inited + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 72) = a1;
    *(_QWORD *)(inited + 80) = a2;
    swift_bridgeObjectRetain();
    v9 = sub_1D248EE98(inited);
    v10 = sub_1D24DFE00();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = 0;
    v11[3] = 0;
    v11[4] = v9;
    sub_1D248F7C8((uint64_t)v6, (uint64_t)&unk_1EFC7EBC0, (uint64_t)v11);
    swift_release();
  }
  else
  {
    v12 = objc_msgSend((id)objc_opt_self(), sel_sharedMetricsCenter);
    v13 = (void *)sub_1D24DFD4C();
    objc_msgSend(v12, sel_recordSignOutEventWithProviderIdentifier_, v13);

  }
}

void sub_1D2492134(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  id v13;
  char v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  void *v22;
  unint64_t v23;
  _OWORD v24[2];
  __int128 v25;
  uint64_t v26;
  _BYTE v27[24];
  ValueMetadata *v28;
  unint64_t v29;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EA00);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = &type metadata for VSAFeatures;
  v29 = sub_1D2493810();
  v5 = sub_1D24DFCC8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  if ((v5 & 1) != 0)
  {
    v6 = sub_1D248EE98(MEMORY[0x1E0DEE9D8]);
    if (a1)
    {
      LOBYTE(v25) = 0;
      sub_1D24825C8();
      sub_1D24DFEB4();
      v7 = objc_msgSend(a1, sel_domain);
      v8 = sub_1D24DFD70();
      v10 = v9;

      v26 = MEMORY[0x1E0DEA968];
      *(_QWORD *)&v25 = v8;
      *((_QWORD *)&v25 + 1) = v10;
      sub_1D2482278(&v25, v24);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v23 = v6;
      sub_1D2481F88(v24, (uint64_t)v27, isUniquelyReferenced_nonNull_native);
      v12 = v23;
      swift_bridgeObjectRelease();
      sub_1D2482204((uint64_t)v27);
      LOBYTE(v25) = 1;
      sub_1D24DFEB4();
      v13 = objc_msgSend(a1, sel_code);
      v26 = MEMORY[0x1E0DEB418];
      *(_QWORD *)&v25 = v13;
      sub_1D2482278(&v25, v24);
      v14 = swift_isUniquelyReferenced_nonNull_native();
      v23 = v12;
      sub_1D2481F88(v24, (uint64_t)v27, v14);
      v15 = v23;
      swift_bridgeObjectRelease();
      sub_1D2482204((uint64_t)v27);
      LOBYTE(v25) = 2;
      sub_1D24DFEB4();
      v16 = objc_msgSend(a1, sel_underlyingErrors);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EB48);
      v17 = sub_1D24DFDC4();

      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EB50);
      *(_QWORD *)&v25 = v17;
      sub_1D2482278(&v25, v24);
      v18 = swift_isUniquelyReferenced_nonNull_native();
      v23 = v15;
      sub_1D2481F88(v24, (uint64_t)v27, v18);
      v6 = v23;
      swift_bridgeObjectRelease();
      sub_1D2482204((uint64_t)v27);
    }
    v19 = sub_1D24DFE00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = 0;
    v20[3] = 0;
    v20[4] = v6;
    sub_1D248F7C8((uint64_t)v4, (uint64_t)&unk_1EFC7EBB0, (uint64_t)v20);
    swift_release();
  }
  else
  {
    v21 = objc_msgSend((id)objc_opt_self(), sel_sharedMetricsCenter);
    if (a1)
      v22 = (void *)sub_1D24DFC2C();
    else
      v22 = 0;
    objc_msgSend(v21, sel_recordSTBOptOutEventWithError_, v22);

  }
}

void sub_1D2492468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t inited;
  uint64_t v17;
  unint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  id v27;
  char v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  _QWORD *v34;
  id v35;
  void *v36;
  void *v37;
  _QWORD v38[2];
  char *v39;
  unint64_t v40;
  _OWORD v41[2];
  __int128 v42;
  uint64_t v43;
  _BYTE v44[24];
  ValueMetadata *v45;
  unint64_t v46;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EA00);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = &type metadata for VSAFeatures;
  v46 = sub_1D2493810();
  v15 = sub_1D24DFCC8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  if ((v15 & 1) != 0)
  {
    v39 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EB78);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D24E9970;
    v44[0] = 3;
    v38[1] = sub_1D24825C8();
    sub_1D24DFEB4();
    v17 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 72) = a1;
    *(_QWORD *)(inited + 80) = a2;
    v44[0] = 1;
    sub_1D2493A30();
    swift_bridgeObjectRetain();
    sub_1D24DFEB4();
    *(_QWORD *)(inited + 168) = v17;
    *(_QWORD *)(inited + 144) = a3;
    *(_QWORD *)(inited + 152) = a4;
    swift_bridgeObjectRetain();
    v18 = sub_1D248EE98(inited);
    if ((a5 & 1) != 0)
    {
      LOBYTE(v42) = 2;
      sub_1D24DFEB4();
      v43 = v17;
      *(_QWORD *)&v42 = 7368801;
      *((_QWORD *)&v42 + 1) = 0xE300000000000000;
      sub_1D2482278(&v42, v41);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v40 = v18;
      sub_1D2481F88(v41, (uint64_t)v44, isUniquelyReferenced_nonNull_native);
      v18 = v40;
      swift_bridgeObjectRelease();
      sub_1D2482204((uint64_t)v44);
    }
    v20 = (uint64_t)v39;
    if (a6)
    {
      LOBYTE(v42) = 0;
      sub_1D24DFEB4();
      v21 = objc_msgSend(a6, sel_domain);
      v22 = sub_1D24DFD70();
      v24 = v23;

      v43 = v17;
      *(_QWORD *)&v42 = v22;
      *((_QWORD *)&v42 + 1) = v24;
      sub_1D2482278(&v42, v41);
      v25 = swift_isUniquelyReferenced_nonNull_native();
      v40 = v18;
      sub_1D2481F88(v41, (uint64_t)v44, v25);
      v26 = v40;
      swift_bridgeObjectRelease();
      sub_1D2482204((uint64_t)v44);
      LOBYTE(v42) = 1;
      sub_1D24DFEB4();
      v27 = objc_msgSend(a6, sel_code);
      v43 = MEMORY[0x1E0DEB418];
      *(_QWORD *)&v42 = v27;
      sub_1D2482278(&v42, v41);
      v28 = swift_isUniquelyReferenced_nonNull_native();
      v40 = v26;
      sub_1D2481F88(v41, (uint64_t)v44, v28);
      v29 = v40;
      swift_bridgeObjectRelease();
      sub_1D2482204((uint64_t)v44);
      LOBYTE(v42) = 2;
      sub_1D24DFEB4();
      v30 = objc_msgSend(a6, sel_underlyingErrors);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EB48);
      v31 = sub_1D24DFDC4();

      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EB50);
      *(_QWORD *)&v42 = v31;
      sub_1D2482278(&v42, v41);
      v32 = swift_isUniquelyReferenced_nonNull_native();
      v40 = v29;
      sub_1D2481F88(v41, (uint64_t)v44, v32);
      v18 = v40;
      swift_bridgeObjectRelease();
      sub_1D2482204((uint64_t)v44);
    }
    v33 = sub_1D24DFE00();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v20, 1, 1, v33);
    v34 = (_QWORD *)swift_allocObject();
    v34[2] = 0;
    v34[3] = 0;
    v34[4] = v18;
    sub_1D248F7C8(v20, (uint64_t)&unk_1EFC7EBA0, (uint64_t)v34);
    swift_release();
  }
  else
  {
    v35 = objc_msgSend((id)objc_opt_self(), sel_sharedMetricsCenter);
    v36 = (void *)sub_1D24DFD4C();
    v37 = (void *)sub_1D24DFD4C();
    if (a6)
      a6 = (void *)sub_1D24DFC2C();
    objc_msgSend(v35, sel_recordMetadataRequestWithProviderIdentifier_channelAdamID_fulfilledByProvider_error_, v36, v37, a5 & 1, a6);

  }
}

void sub_1D24928FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  uint64_t inited;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  void *v13;
  _BYTE v14[104];
  char v15[24];
  ValueMetadata *v16;
  unint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EA00);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = &type metadata for VSAFeatures;
  v17 = sub_1D2493810();
  v7 = sub_1D24DFCC8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  if ((v7 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EB78);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D24E8C70;
    v15[0] = 1;
    sub_1D2493A30();
    sub_1D24DFEB4();
    *(_QWORD *)(inited + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 72) = a1;
    *(_QWORD *)(inited + 80) = a2;
    swift_bridgeObjectRetain();
    v9 = sub_1D248EE98(inited);
    v10 = sub_1D24DFE00();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = 0;
    v11[3] = 0;
    v11[4] = v9;
    sub_1D248F7C8((uint64_t)v6, (uint64_t)&unk_1EFC7EB90, (uint64_t)v11);
    swift_release();
  }
  else
  {
    v12 = objc_msgSend((id)objc_opt_self(), sel_sharedMetricsCenter);
    v13 = (void *)sub_1D24DFD4C();
    objc_msgSend(v12, sel_recordInvalidTemplateErrorWithProviderAppAdamID_, v13);

  }
}

uint64_t sub_1D2492AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1D2493E54;
  return sub_1D2490638((uint64_t)v4, v5, v6, v2, v3);
}

uint64_t sub_1D2492B08(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;
  _OWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  void *v24;
  uint64_t v25;
  Swift::String v26;
  char v27;
  Swift::String v28;
  char v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char isUniquelyReferenced_nonNull_native;
  char v40;
  unint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  char v48;
  char v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  id v67;
  char v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t result;
  int64_t v77;
  void *v78;
  char *v79;
  uint64_t v80;
  __int128 v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  int64_t v85;
  _OWORD *v86;
  uint64_t *v87;
  int64_t v88;
  _QWORD *v89;
  _OWORD v90[2];
  _OWORD v91[2];
  __int128 v92;
  _OWORD v93[2];
  uint64_t v94;
  void *v95;
  uint64_t v96;

  v78 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EA00);
  MEMORY[0x1E0C80A78](v3);
  v79 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D24DFD04();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)sub_1D248EE98(MEMORY[0x1E0DEE9D8]);
  v10 = *(_QWORD *)(a2 + 64);
  v84 = a2 + 64;
  v11 = 1 << *(_BYTE *)(a2 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v86 = v93;
  v87 = &v96;
  v85 = (unint64_t)(v11 + 63) >> 6;
  v77 = v85 - 1;
  swift_bridgeObjectRetain();
  v88 = 0;
  *(_QWORD *)&v14 = 136315138;
  v81 = v14;
  v80 = MEMORY[0x1E0DEE9B8] + 8;
  v83 = a2;
  v82 = v8;
  while (1)
  {
    if (v13)
    {
      v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v17 = v16 | (v88 << 6);
LABEL_9:
      v18 = *(_QWORD *)(a2 + 56);
      v19 = (_QWORD *)(*(_QWORD *)(a2 + 48) + 16 * v17);
      v20 = v19[1];
      *(_QWORD *)&v92 = *v19;
      *((_QWORD *)&v92 + 1) = v20;
      sub_1D24820FC(v18 + 32 * v17, (uint64_t)v86);
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    v21 = v88 + 1;
    if (__OFADD__(v88, 1))
      goto LABEL_58;
    if (v21 < v85)
    {
      v22 = *(_QWORD *)(v84 + 8 * v21);
      if (v22)
        goto LABEL_13;
      v23 = v88 + 2;
      ++v88;
      if (v21 + 1 < v85)
      {
        v22 = *(_QWORD *)(v84 + 8 * v23);
        if (v22)
          goto LABEL_16;
        v88 = v21 + 1;
        if (v21 + 2 < v85)
        {
          v22 = *(_QWORD *)(v84 + 8 * (v21 + 2));
          if (v22)
          {
            v21 += 2;
LABEL_13:
            v13 = (v22 - 1) & v22;
            v17 = __clz(__rbit64(v22)) + (v21 << 6);
            v88 = v21;
            goto LABEL_9;
          }
          v23 = v21 + 3;
          v88 = v21 + 2;
          if (v21 + 3 < v85)
          {
            v22 = *(_QWORD *)(v84 + 8 * v23);
            if (!v22)
            {
              while (1)
              {
                v21 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_62;
                if (v21 >= v85)
                {
                  v88 = v77;
                  goto LABEL_27;
                }
                v22 = *(_QWORD *)(v84 + 8 * v21);
                ++v23;
                if (v22)
                  goto LABEL_13;
              }
            }
LABEL_16:
            v21 = v23;
            goto LABEL_13;
          }
        }
      }
    }
LABEL_27:
    v13 = 0;
    memset(v93, 0, sizeof(v93));
    v92 = 0u;
LABEL_28:
    sub_1D248D1D8((uint64_t)&v92, (uint64_t)&v94, &qword_1EFC7EB30);
    v24 = v95;
    if (!v95)
      break;
    v25 = v94;
    sub_1D2482278(v87, v91);
    swift_bridgeObjectRetain();
    v26._countAndFlagsBits = v25;
    v26._object = v24;
    VSAnalyticsCommonKeys.init(rawValue:)(v26);
    v27 = v92;
    if (v92 != 6)
    {
      swift_bridgeObjectRelease();
      LOBYTE(v90[0]) = v27;
      sub_1D24825C8();
      sub_1D24DFEB4();
      sub_1D24820FC((uint64_t)v91, (uint64_t)v90);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v89 = v9;
      v41 = sub_1D2481C44((uint64_t)&v92);
      v42 = v9[2];
      v43 = (v40 & 1) == 0;
      v44 = v42 + v43;
      if (__OFADD__(v42, v43))
      {
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        result = sub_1D24DFF98();
        __break(1u);
        return result;
      }
      v45 = v40;
      if (v9[3] >= v44)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1D24823E4();
      }
      else
      {
        sub_1D2481C74(v44, isUniquelyReferenced_nonNull_native);
        v46 = sub_1D2481C44((uint64_t)&v92);
        if ((v45 & 1) != (v47 & 1))
          goto LABEL_63;
        v41 = v46;
      }
      v9 = v89;
      if ((v45 & 1) == 0)
      {
        v89[(v41 >> 6) + 8] |= 1 << v41;
        sub_1D24820C0((uint64_t)&v92, v9[6] + 40 * v41);
        sub_1D2482278(v90, (_OWORD *)(v9[7] + 32 * v41));
        v56 = v9[2];
        v57 = __OFADD__(v56, 1);
        v58 = v56 + 1;
        if (v57)
          goto LABEL_60;
        goto LABEL_53;
      }
      goto LABEL_4;
    }
    swift_bridgeObjectRetain();
    v28._countAndFlagsBits = v25;
    v28._object = v24;
    VSFederatedPlaybackKeys.init(rawValue:)(v28);
    v29 = v92;
    if (v92 != 8)
    {
      swift_bridgeObjectRelease();
      LOBYTE(v90[0]) = v29;
      sub_1D24821C0();
      sub_1D24DFEB4();
      sub_1D24820FC((uint64_t)v91, (uint64_t)v90);
      v48 = swift_isUniquelyReferenced_nonNull_native();
      v89 = v9;
      v41 = sub_1D2481C44((uint64_t)&v92);
      v50 = v9[2];
      v51 = (v49 & 1) == 0;
      v52 = v50 + v51;
      if (__OFADD__(v50, v51))
        goto LABEL_59;
      v53 = v49;
      if (v9[3] >= v52)
      {
        if ((v48 & 1) == 0)
          sub_1D24823E4();
      }
      else
      {
        sub_1D2481C74(v52, v48);
        v54 = sub_1D2481C44((uint64_t)&v92);
        if ((v53 & 1) != (v55 & 1))
          goto LABEL_63;
        v41 = v54;
      }
      v9 = v89;
      if ((v53 & 1) == 0)
      {
        v89[(v41 >> 6) + 8] |= 1 << v41;
        sub_1D24820C0((uint64_t)&v92, v9[6] + 40 * v41);
        sub_1D2482278(v90, (_OWORD *)(v9[7] + 32 * v41));
        v59 = v9[2];
        v57 = __OFADD__(v59, 1);
        v58 = v59 + 1;
        if (v57)
          goto LABEL_61;
LABEL_53:
        v9[2] = v58;
LABEL_5:
        swift_bridgeObjectRelease();
        sub_1D2482204((uint64_t)&v92);
        goto LABEL_6;
      }
LABEL_4:
      v15 = (_OWORD *)(v9[7] + 32 * v41);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
      sub_1D2482278(v90, v15);
      goto LABEL_5;
    }
    v30 = sub_1D249A8C8();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v30, v5);
    swift_bridgeObjectRetain();
    v31 = sub_1D24DFCEC();
    v32 = sub_1D24DFE24();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v34 = v6;
      v35 = v5;
      v36 = swift_slowAlloc();
      *(_QWORD *)&v92 = v36;
      *(_DWORD *)v33 = v81;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v33 + 4) = sub_1D2481604(v25, (unint64_t)v24, (uint64_t *)&v92);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2419000, v31, v32, "Unrecognized key: %s", (uint8_t *)v33, 0xCu);
      swift_arrayDestroy();
      v37 = v36;
      v5 = v35;
      v6 = v34;
      a2 = v83;
      MEMORY[0x1D8236C38](v37, -1, -1);
      v38 = v33;
      v8 = v82;
      MEMORY[0x1D8236C38](v38, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
LABEL_6:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v91);
  }
  swift_release();
  v60 = v78;
  if (v78)
  {
    LOBYTE(v92) = 0;
    sub_1D24825C8();
    sub_1D24DFEB4();
    v61 = objc_msgSend(v60, sel_domain);
    v62 = sub_1D24DFD70();
    v64 = v63;

    *((_QWORD *)&v93[0] + 1) = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v92 = v62;
    *((_QWORD *)&v92 + 1) = v64;
    sub_1D2482278(&v92, v91);
    v65 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v90[0] = v9;
    sub_1D2481F88(v91, (uint64_t)&v94, v65);
    v66 = *(_QWORD *)&v90[0];
    swift_bridgeObjectRelease();
    sub_1D2482204((uint64_t)&v94);
    LOBYTE(v92) = 1;
    sub_1D24DFEB4();
    v67 = objc_msgSend(v60, sel_code);
    *((_QWORD *)&v93[0] + 1) = MEMORY[0x1E0DEB418];
    *(_QWORD *)&v92 = v67;
    sub_1D2482278(&v92, v91);
    v68 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v90[0] = v66;
    sub_1D2481F88(v91, (uint64_t)&v94, v68);
    v69 = *(_QWORD *)&v90[0];
    swift_bridgeObjectRelease();
    sub_1D2482204((uint64_t)&v94);
    LOBYTE(v92) = 2;
    sub_1D24DFEB4();
    v70 = objc_msgSend(v60, sel_underlyingErrors);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EB48);
    v71 = sub_1D24DFDC4();

    *((_QWORD *)&v93[0] + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EB50);
    *(_QWORD *)&v92 = v71;
    sub_1D2482278(&v92, v91);
    v72 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v90[0] = v69;
    sub_1D2481F88(v91, (uint64_t)&v94, v72);
    v9 = *(_QWORD **)&v90[0];
    swift_bridgeObjectRelease();
    sub_1D2482204((uint64_t)&v94);
  }
  v73 = sub_1D24DFE00();
  v74 = (uint64_t)v79;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v79, 1, 1, v73);
  v75 = (_QWORD *)swift_allocObject();
  v75[2] = 0;
  v75[3] = 0;
  v75[4] = v9;
  sub_1D248F7C8(v74, (uint64_t)&unk_1EFC7EB40, (uint64_t)v75);
  return swift_release();
}

void sub_1D249349C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  id *v21;
  void (*v22)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  id v23;
  _QWORD _8[17];

  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EA00);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&_8[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  _8[3] = &type metadata for VSAFeatures;
  _8[4] = sub_1D2493810();
  v17 = sub_1D24DFCC8();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)_8);
  if ((v17 & 1) != 0)
  {
    VSUserAccount.init(_:)((VideoSubscriberAccount::VSUserAccount *)_8, (VSUserAccount *)a1);
    v18 = _8[0];
    v19 = sub_1D24DFE00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v16, 1, 1, v19);
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = 0;
    v20[3] = 0;
    v20[4] = v18;
    v20[5] = a2;
    v20[6] = a3;
    v20[7] = a4;
    v20[8] = a5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D248F7C8((uint64_t)v16, (uint64_t)&unk_1EFC7EB28, (uint64_t)v20);
    swift_release();
  }
  else
  {
    v21 = (id *)sub_1D2482A1C();
    swift_beginAccess();
    v22 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)*v21)
                                                                                              + 0x68);
    v23 = *v21;
    v22(a1, a2, a3, a4, a5, a6, a7);

  }
}

unint64_t sub_1D249364C()
{
  unint64_t result;

  result = qword_1EFC7EA20;
  if (!qword_1EFC7EA20)
  {
    result = MEMORY[0x1D8236BCC](&unk_1D24E99A8, &type metadata for VSAFeatures);
    atomic_store(result, (unint64_t *)&qword_1EFC7EA20);
  }
  return result;
}

uint64_t type metadata accessor for VSMetricsManager()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for VSAFeatures(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for VSAFeatures(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D2493744 + 4 * byte_1D24E9980[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D2493764 + 4 * byte_1D24E9985[v4]))();
}

_BYTE *sub_1D2493744(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D2493764(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D249376C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D2493774(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D249377C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D2493784(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1D2493790()
{
  return 0;
}

ValueMetadata *type metadata accessor for VSAFeatures()
{
  return &type metadata for VSAFeatures;
}

uint64_t type metadata accessor for VSMetricsManagerObjC(uint64_t a1)
{
  return sub_1D2487DEC(a1, qword_1EFC817A0);
}

uint64_t sub_1D24937BC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1D2493810()
{
  unint64_t result;

  result = qword_1EFC7EB18;
  if (!qword_1EFC7EB18)
  {
    result = MEMORY[0x1D8236BCC](&unk_1D24E9A10, &type metadata for VSAFeatures);
    atomic_store(result, &qword_1EFC7EB18);
  }
  return result;
}

uint64_t sub_1D2493854()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D2493890()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = (void *)v0[4];
  v3 = v0[5];
  v4 = v0[6];
  v5 = v0[7];
  v6 = v0[8];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_1D2493904;
  return sub_1D2490A50((uint64_t)v7, v8, v9, v2, v3, v4, v5, v6);
}

uint64_t sub_1D2493904()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1D2493950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D2493E54;
  return sub_1D24908A8((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_1D249399C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D24939C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D2493904;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFC7EB60 + dword_1EFC7EB60))(a1, v4);
}

unint64_t sub_1D2493A30()
{
  unint64_t result;

  result = qword_1EFC7EB80;
  if (!qword_1EFC7EB80)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSTVProviderKeys, &type metadata for VSTVProviderKeys);
    atomic_store(result, &qword_1EFC7EB80);
  }
  return result;
}

uint64_t sub_1D2493A78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D2493E54;
  return sub_1D24903B4((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_1D2493AC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D2493E54;
  return sub_1D24901E4((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_1D2493B18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D2493E54;
  return sub_1D249006C((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_1D2493B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D2493E54;
  return sub_1D248FF20((uint64_t)v3, v4, v5, v2);
}

uint64_t objectdestroy_16Tm()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D2493BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D2493E54;
  return sub_1D248FD18((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_1D2493C30()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D2493C54()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_WORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 34);
  v4 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_1D2493E54;
  *(_WORD *)(v4 + 104) = v2;
  *(_BYTE *)(v4 + 106) = v3;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 96) = v5;
  *v5 = v4;
  v5[1] = sub_1D248FBBC;
  return VSClickEvent.init(with:page:type:)(v4 + 16, (_BYTE *)(v4 + 104), (_BYTE *)(v4 + 105), (_BYTE *)(v4 + 106));
}

uint64_t sub_1D2493D00()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D2493D24()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_WORD *)(v0 + 32);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1D2493E54;
  *(_WORD *)(v3 + 104) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 96) = v4;
  *v4 = v3;
  v4[1] = sub_1D248F9D0;
  return VSPageExitEvent.init(with:and:)(v3 + 16, (_BYTE *)(v3 + 104), (_BYTE *)(v3 + 105));
}

uint64_t sub_1D2493DB8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_WORD *)(v0 + 32);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1D2493E54;
  *(_WORD *)(v3 + 104) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 96) = v4;
  *v4 = v3;
  v4[1] = sub_1D248F6FC;
  return VSPageEnterEvent.init(with:and:)(v3 + 16, (_BYTE *)(v3 + 104), (_BYTE *)(v3 + 105));
}

uint64_t sub_1D2493E4C()
{
  return swift_release();
}

uint64_t sub_1D2493E5C()
{
  return 0x6E695F6E676973;
}

uint64_t VSSignInEvent.eventType.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSSignInEvent.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VSSignInEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*VSSignInEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSSignInEvent.topic.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSSignInEvent.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*VSSignInEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSSignInEvent.init(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[60] = a1;
  v2[61] = a2;
  v3 = sub_1D24DFD04();
  v2[62] = v3;
  v2[63] = *(_QWORD *)(v3 - 8);
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2493FC0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;

  v1 = v0[65];
  v2 = v0[62];
  v3 = v0[63];
  v4 = sub_1D2497CA8();
  v0[66] = *v4;
  v0[67] = v4[1];
  swift_bridgeObjectRetain();
  v5 = sub_1D249A8C8();
  v0[68] = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[69] = v6;
  v6(v1, v5, v2);
  v7 = sub_1D24DFCEC();
  v8 = sub_1D24DFE0C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1D2419000, v7, v8, "VSSignInEvent", v9, 2u);
    MEMORY[0x1D8236C38](v9, -1, -1);
  }
  v10 = v0[65];
  v11 = v0[62];
  v12 = v0[63];

  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v0[70] = v13;
  v13(v10, v11);
  v14 = (_QWORD *)swift_task_alloc();
  v0[71] = v14;
  *v14 = v0;
  v14[1] = sub_1D24940EC;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1D24940EC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 576) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_1D2494148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  __int128 v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  char v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  BOOL v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  uint64_t v53;
  _OWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  int64_t v63;
  _OWORD *v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  _OWORD *v73;
  _OWORD *v74;
  int64_t v75;
  uint64_t v76;
  _QWORD *v77;

  v1 = v0 + 16;
  v2 = v0 + 88;
  v3 = v0 + 160;
  v75 = 0;
  v76 = v0 + 200;
  v65 = v0 + 280;
  v68 = v0 + 240;
  v73 = (_OWORD *)(v0 + 352);
  v4 = (_OWORD *)(v0 + 384);
  v64 = (_OWORD *)(v0 + 448);
  v61 = (_BYTE *)(v0 + 584);
  v5 = (_BYTE *)(v0 + 585);
  v66 = (_BYTE *)(v0 + 587);
  v67 = (_BYTE *)(v0 + 586);
  v6 = *(_QWORD *)(v0 + 488);
  v7 = *(_QWORD *)(v6 + 64);
  v59 = v6 + 64;
  v70 = v6;
  v8 = -1;
  v9 = -1 << *(_BYTE *)(v70 + 32);
  if (-v9 < 64)
    v8 = ~(-1 << -(char)v9);
  v10 = v8 & v7;
  v69 = v0 + 128;
  v74 = (_OWORD *)(v0 + 56);
  v63 = (unint64_t)(63 - v9) >> 6;
  v11 = *(_QWORD **)(v0 + 576);
  v72 = v0 + 384;
  v71 = (_BYTE *)(v0 + 585);
  v60 = v0 + 88;
  if ((v8 & v7) == 0)
    goto LABEL_6;
LABEL_4:
  v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  v13 = v12 | (v75 << 6);
  while (2)
  {
    sub_1D24820C0(*(_QWORD *)(v70 + 48) + 40 * v13, v2);
    sub_1D24820FC(*(_QWORD *)(v70 + 56) + 32 * v13, v69);
    while (1)
    {
      sub_1D2482138(v2, v1);
      if (!*(_QWORD *)(v0 + 40))
      {
        v55 = *(_QWORD *)(v0 + 536);
        v56 = *(_QWORD *)(v0 + 528);
        v57 = *(_QWORD **)(v0 + 480);
        swift_release();
        *v57 = 0x6E695F6E676973;
        v57[1] = 0xE700000000000000;
        v57[2] = v11;
        v57[3] = v56;
        v57[4] = v55;
        swift_task_dealloc();
        swift_task_dealloc();
        (*(void (**)(void))(v0 + 8))();
        return;
      }
      v17 = *(_OWORD *)(v1 + 16);
      *(_OWORD *)v3 = *(_OWORD *)v1;
      *(_OWORD *)(v3 + 16) = v17;
      *(_QWORD *)(v3 + 32) = *(_QWORD *)(v1 + 32);
      sub_1D2482278(v74, v4);
      sub_1D24DFEA8();
      if ((swift_dynamicCast() & 1) != 0)
      {
        *v67 = *v5;
        sub_1D24825C8();
        sub_1D24DFEB4();
        sub_1D24820FC((uint64_t)v4, (uint64_t)v73);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v77 = v11;
        v20 = sub_1D2481C44(v76);
        v21 = v11[2];
        v22 = (v19 & 1) == 0;
        v23 = v21 + v22;
        if (__OFADD__(v21, v22))
        {
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
        v24 = v19;
        if (v11[3] < v23)
        {
          sub_1D2481C74(v23, isUniquelyReferenced_nonNull_native);
          v11 = v77;
          v25 = sub_1D2481C44(v76);
          if ((v24 & 1) != (v26 & 1))
            goto LABEL_59;
          v20 = v25;
          v4 = (_OWORD *)v72;
          if ((v24 & 1) == 0)
            goto LABEL_30;
LABEL_43:
          v52 = (_OWORD *)(v11[7] + 32 * v20);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
          sub_1D2482278(v73, v52);
LABEL_44:
          swift_bridgeObjectRelease();
          v53 = v76;
          goto LABEL_52;
        }
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v4 = (_OWORD *)v72;
          if ((v19 & 1) != 0)
            goto LABEL_43;
        }
        else
        {
          sub_1D24823E4();
          v11 = v77;
          v4 = (_OWORD *)v72;
          if ((v24 & 1) != 0)
            goto LABEL_43;
        }
LABEL_30:
        v11[(v20 >> 6) + 8] |= 1 << v20;
        sub_1D24820C0(v76, v11[6] + 40 * v20);
        sub_1D2482278(v73, (_OWORD *)(v11[7] + 32 * v20));
        v27 = v11[2];
        v28 = __OFADD__(v27, 1);
        v29 = v27 + 1;
        if (v28)
          goto LABEL_63;
        v11[2] = v29;
        goto LABEL_44;
      }
      sub_1D24DFEA8();
      if ((swift_dynamicCast() & 1) == 0)
      {
        (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 552))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 496));
        sub_1D24820C0(v3, v65);
        v41 = sub_1D24DFCEC();
        v42 = sub_1D24DFE18();
        v43 = os_log_type_enabled(v41, v42);
        v44 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
        v62 = *(_QWORD *)(v0 + 512);
        v45 = *(_QWORD *)(v0 + 496);
        if (v43)
        {
          v46 = v1;
          v47 = swift_slowAlloc();
          v48 = swift_slowAlloc();
          v77 = (_QWORD *)v48;
          *(_DWORD *)v47 = 136315138;
          v49 = sub_1D24DFE84();
          *(_QWORD *)(v47 + 4) = sub_1D2481604(v49, v50, (uint64_t *)&v77);
          swift_bridgeObjectRelease();
          sub_1D2482204(v65);
          _os_log_impl(&dword_1D2419000, v41, v42, "VSSignInEvent received invalid metadata key: %s", (uint8_t *)v47, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D8236C38](v48, -1, -1);
          v51 = v47;
          v1 = v46;
          v0 = v58;
          MEMORY[0x1D8236C38](v51, -1, -1);

        }
        else
        {

          sub_1D2482204(v65);
        }
        v44(v62, v45);
        v4 = (_OWORD *)v72;
        __swift_destroy_boxed_opaque_existential_0(v72);
        sub_1D2482204(v3);
        v2 = v60;
        v5 = v71;
        if (v10)
          goto LABEL_4;
        goto LABEL_6;
      }
      *v61 = *v66;
      sub_1D2493A30();
      sub_1D24DFEB4();
      sub_1D24820FC((uint64_t)v4, (uint64_t)v64);
      v30 = swift_isUniquelyReferenced_nonNull_native();
      v77 = v11;
      v32 = sub_1D2481C44(v68);
      v33 = v11[2];
      v34 = (v31 & 1) == 0;
      v35 = v33 + v34;
      if (__OFADD__(v33, v34))
        goto LABEL_62;
      v36 = v31;
      if (v11[3] >= v35)
      {
        if ((v30 & 1) != 0)
        {
          v4 = (_OWORD *)v72;
          if ((v31 & 1) == 0)
            goto LABEL_37;
        }
        else
        {
          sub_1D24823E4();
          v11 = v77;
          v4 = (_OWORD *)v72;
          if ((v36 & 1) == 0)
            goto LABEL_37;
        }
      }
      else
      {
        sub_1D2481C74(v35, v30);
        v11 = v77;
        v37 = sub_1D2481C44(v68);
        if ((v36 & 1) != (v38 & 1))
        {
LABEL_59:
          sub_1D24DFF98();
          return;
        }
        v32 = v37;
        v4 = (_OWORD *)v72;
        if ((v36 & 1) == 0)
        {
LABEL_37:
          v11[(v32 >> 6) + 8] |= 1 << v32;
          sub_1D24820C0(v68, v11[6] + 40 * v32);
          sub_1D2482278(v64, (_OWORD *)(v11[7] + 32 * v32));
          v39 = v11[2];
          v28 = __OFADD__(v39, 1);
          v40 = v39 + 1;
          if (v28)
            goto LABEL_64;
          v11[2] = v40;
          goto LABEL_51;
        }
      }
      v54 = (_OWORD *)(v11[7] + 32 * v32);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v54);
      sub_1D2482278(v64, v54);
LABEL_51:
      swift_bridgeObjectRelease();
      v53 = v68;
LABEL_52:
      sub_1D2482204(v53);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
      sub_1D2482204(v3);
      v5 = v71;
      if (v10)
        goto LABEL_4;
LABEL_6:
      v14 = v75 + 1;
      if (__OFADD__(v75, 1))
        goto LABEL_61;
      if (v14 < v63)
      {
        v15 = *(_QWORD *)(v59 + 8 * v14);
        if (v15)
          goto LABEL_9;
        v16 = v75 + 2;
        ++v75;
        if (v14 + 1 < v63)
        {
          v15 = *(_QWORD *)(v59 + 8 * v16);
          if (v15)
            goto LABEL_12;
          v75 = v14 + 1;
          if (v14 + 2 < v63)
          {
            v15 = *(_QWORD *)(v59 + 8 * (v14 + 2));
            if (v15)
            {
              v14 += 2;
              goto LABEL_9;
            }
            v16 = v14 + 3;
            v75 = v14 + 2;
            if (v14 + 3 < v63)
              break;
          }
        }
      }
LABEL_23:
      v10 = 0;
      *(_QWORD *)(v2 + 64) = 0;
      *(_OWORD *)(v2 + 32) = 0u;
      *(_OWORD *)(v2 + 48) = 0u;
      *(_OWORD *)v2 = 0u;
      *(_OWORD *)(v2 + 16) = 0u;
    }
    v15 = *(_QWORD *)(v59 + 8 * v16);
    if (v15)
    {
LABEL_12:
      v14 = v16;
LABEL_9:
      v10 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v14 << 6);
      v75 = v14;
      continue;
    }
    break;
  }
  while (1)
  {
    v14 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v14 >= v63)
    {
      v75 = v63 - 1;
      goto LABEL_23;
    }
    v15 = *(_QWORD *)(v59 + 8 * v14);
    ++v16;
    if (v15)
      goto LABEL_9;
  }
LABEL_65:
  __break(1u);
}

ValueMetadata *type metadata accessor for VSSignInEvent()
{
  return &type metadata for VSSignInEvent;
}

unint64_t sub_1D2494920()
{
  return 0xD000000000000012;
}

uint64_t VSNPIBrokenEvent.eventType.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSNPIBrokenEvent.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VSNPIBrokenEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*VSNPIBrokenEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSNPIBrokenEvent.topic.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSNPIBrokenEvent.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*VSNPIBrokenEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSNPIBrokenEvent.init(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[60] = a1;
  v2[61] = a2;
  v3 = sub_1D24DFD04();
  v2[62] = v3;
  v2[63] = *(_QWORD *)(v3 - 8);
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2494A88()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = sub_1D2497CA8();
  v0[66] = *v1;
  v0[67] = v1[1];
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[68] = v2;
  *v2 = v0;
  v2[1] = sub_1D2494B00;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1D2494B00(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 552) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2494B5C()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  __int128 v28;
  char isUniquelyReferenced_nonNull_native;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  _BOOL8 v42;
  char v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t);
  void (*v68)(uint64_t);
  uint64_t v69;
  int64_t v70;
  _OWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _OWORD *v76;
  int64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;

  v79 = v0 + 200;
  v73 = v0 + 240;
  v1 = v0 + 280;
  v76 = (_OWORD *)(v0 + 352);
  v2 = (_OWORD *)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 520);
  v4 = *(_QWORD *)(v0 + 504);
  v71 = (_OWORD *)(v0 + 448);
  v5 = sub_1D249A8C8();
  v68 = *(void (**)(uint64_t))(v4 + 16);
  v69 = v5;
  v68(v3);
  v6 = sub_1D24DFCEC();
  v7 = sub_1D24DFE0C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1D2419000, v6, v7, "VSNPIBrokenEvent", v8, 2u);
    MEMORY[0x1D8236C38](v8, -1, -1);
  }
  v9 = (_OWORD *)(v78 + 16);
  v10 = (_OWORD *)(v78 + 160);
  v11 = *(_QWORD *)(v78 + 520);
  v13 = *(_QWORD *)(v78 + 496);
  v12 = *(_QWORD *)(v78 + 504);
  v14 = *(_QWORD *)(v78 + 488);

  v67 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
  result = v67(v11, v13);
  v77 = 0;
  v66 = v14 + 64;
  v74 = v14;
  v16 = -1;
  v17 = -1 << *(_BYTE *)(v14 + 32);
  if (-v17 < 64)
    v16 = ~(-1 << -(char)v17);
  v18 = v16 & *(_QWORD *)(v14 + 64);
  v70 = (unint64_t)(63 - v17) >> 6;
  v19 = *(_QWORD **)(v78 + 552);
  v72 = v0 + 280;
  v75 = v0 + 384;
  while (v18)
  {
    v22 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    v23 = v78 + 88;
    v24 = v22 | (v77 << 6);
LABEL_11:
    sub_1D24820C0(*(_QWORD *)(v74 + 48) + 40 * v24, v23);
    sub_1D24820FC(*(_QWORD *)(v74 + 56) + 32 * v24, v78 + 128);
LABEL_30:
    sub_1D2482138(v23, (uint64_t)v9);
    if (!*(_QWORD *)(v78 + 40))
    {
      v62 = *(_QWORD *)(v78 + 536);
      v63 = *(_QWORD *)(v78 + 528);
      v64 = *(_QWORD **)(v78 + 480);
      swift_release();
      *v64 = 0xD000000000000012;
      v64[1] = 0x80000001D2503690;
      v64[2] = v19;
      v64[3] = v63;
      v64[4] = v62;
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v78 + 8))();
    }
    v28 = *(_OWORD *)(v78 + 32);
    *v10 = *v9;
    *(_OWORD *)(v78 + 176) = v28;
    *(_QWORD *)(v78 + 192) = *(_QWORD *)(v78 + 48);
    sub_1D2482278((_OWORD *)(v78 + 56), v2);
    sub_1D24DFEA8();
    if ((swift_dynamicCast() & 1) != 0)
    {
      *(_BYTE *)(v78 + 562) = *(_BYTE *)(v78 + 561);
      sub_1D24825C8();
      sub_1D24DFEB4();
      sub_1D24820FC((uint64_t)v2, (uint64_t)v76);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v80 = v19;
      v31 = sub_1D2481C44(v79);
      v32 = v19[2];
      v33 = (v30 & 1) == 0;
      result = v32 + v33;
      if (__OFADD__(v32, v33))
      {
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
      v34 = v30;
      if (v19[3] >= result)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v2 = (_OWORD *)v75;
          if ((v30 & 1) == 0)
            goto LABEL_48;
        }
        else
        {
          sub_1D24823E4();
          v19 = v80;
          v2 = (_OWORD *)v75;
          if ((v34 & 1) == 0)
            goto LABEL_48;
        }
      }
      else
      {
        sub_1D2481C74(result, isUniquelyReferenced_nonNull_native);
        v19 = v80;
        v35 = sub_1D2481C44(v79);
        if ((v34 & 1) != (v36 & 1))
          return sub_1D24DFF98();
        v31 = v35;
        v2 = (_OWORD *)v75;
        if ((v34 & 1) == 0)
        {
LABEL_48:
          v19[(v31 >> 6) + 8] |= 1 << v31;
          sub_1D24820C0(v79, v19[6] + 40 * v31);
          result = (uint64_t)sub_1D2482278(v76, (_OWORD *)(v19[7] + 32 * v31));
          v59 = v19[2];
          v47 = __OFADD__(v59, 1);
          v60 = v59 + 1;
          if (v47)
            goto LABEL_64;
          v19[2] = v60;
          goto LABEL_7;
        }
      }
      v20 = (_OWORD *)(v19[7] + 32 * v31);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
      sub_1D2482278(v76, v20);
LABEL_7:
      swift_bridgeObjectRelease();
      v21 = v79;
      goto LABEL_8;
    }
    v37 = v1;
    sub_1D24DFEA8();
    if ((swift_dynamicCast() & 1) != 0)
    {
      *(_BYTE *)(v78 + 560) = *(_BYTE *)(v78 + 563);
      sub_1D24821C0();
      sub_1D24DFEB4();
      sub_1D24820FC((uint64_t)v2, (uint64_t)v71);
      v38 = swift_isUniquelyReferenced_nonNull_native();
      v80 = v19;
      v40 = sub_1D2481C44(v73);
      v41 = v19[2];
      v42 = (v39 & 1) == 0;
      result = v41 + v42;
      if (__OFADD__(v41, v42))
        goto LABEL_63;
      v43 = v39;
      if (v19[3] >= result)
      {
        if ((v38 & 1) != 0)
        {
          v2 = (_OWORD *)v75;
          if ((v39 & 1) == 0)
            goto LABEL_42;
        }
        else
        {
          sub_1D24823E4();
          v19 = v80;
          v2 = (_OWORD *)v75;
          if ((v43 & 1) == 0)
            goto LABEL_42;
        }
      }
      else
      {
        sub_1D2481C74(result, v38);
        v19 = v80;
        v44 = sub_1D2481C44(v73);
        if ((v43 & 1) != (v45 & 1))
          return sub_1D24DFF98();
        v40 = v44;
        v2 = (_OWORD *)v75;
        if ((v43 & 1) == 0)
        {
LABEL_42:
          v19[(v40 >> 6) + 8] |= 1 << v40;
          sub_1D24820C0(v73, v19[6] + 40 * v40);
          result = (uint64_t)sub_1D2482278(v71, (_OWORD *)(v19[7] + 32 * v40));
          v46 = v19[2];
          v47 = __OFADD__(v46, 1);
          v48 = v46 + 1;
          if (v47)
            goto LABEL_65;
          v19[2] = v48;
          goto LABEL_54;
        }
      }
      v61 = (_OWORD *)(v19[7] + 32 * v40);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
      sub_1D2482278(v71, v61);
LABEL_54:
      swift_bridgeObjectRelease();
      v21 = v73;
LABEL_8:
      sub_1D2482204(v21);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
      result = sub_1D2482204((uint64_t)v10);
      v1 = v72;
    }
    else
    {
      ((void (*)(_QWORD, uint64_t, _QWORD))v68)(*(_QWORD *)(v78 + 512), v69, *(_QWORD *)(v78 + 496));
      sub_1D24820C0((uint64_t)v10, v1);
      v49 = v1;
      v50 = sub_1D24DFCEC();
      v51 = sub_1D24DFE18();
      v52 = os_log_type_enabled(v50, v51);
      v53 = *(_QWORD *)(v78 + 512);
      v54 = *(_QWORD *)(v78 + 496);
      if (v52)
      {
        v55 = swift_slowAlloc();
        v65 = v54;
        v56 = swift_slowAlloc();
        v80 = (_QWORD *)v56;
        *(_DWORD *)v55 = 136315138;
        v57 = sub_1D24DFE84();
        *(_QWORD *)(v55 + 4) = sub_1D2481604(v57, v58, (uint64_t *)&v80);
        swift_bridgeObjectRelease();
        sub_1D2482204(v49);
        _os_log_impl(&dword_1D2419000, v50, v51, "VSNPIBrokenEvent received invalid metadata key: %s", (uint8_t *)v55, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D8236C38](v56, -1, -1);
        MEMORY[0x1D8236C38](v55, -1, -1);

        v67(v53, v65);
        v2 = (_OWORD *)v75;
        __swift_destroy_boxed_opaque_existential_0(v75);
        result = sub_1D2482204((uint64_t)v10);
        v1 = v49;
      }
      else
      {

        sub_1D2482204(v37);
        v67(v53, v54);
        v2 = (_OWORD *)v75;
        __swift_destroy_boxed_opaque_existential_0(v75);
        result = sub_1D2482204((uint64_t)v10);
        v1 = v37;
      }
    }
  }
  v23 = v78 + 88;
  v25 = v77 + 1;
  if (__OFADD__(v77, 1))
    goto LABEL_62;
  if (v25 >= v70)
  {
LABEL_29:
    v18 = 0;
    *(_QWORD *)(v78 + 152) = 0;
    *(_OWORD *)(v78 + 120) = 0u;
    *(_OWORD *)(v78 + 136) = 0u;
    *(_OWORD *)(v78 + 88) = 0u;
    *(_OWORD *)(v78 + 104) = 0u;
    goto LABEL_30;
  }
  v26 = *(_QWORD *)(v66 + 8 * v25);
  if (v26)
  {
LABEL_15:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v25 << 6);
    v77 = v25;
    goto LABEL_11;
  }
  v27 = v77 + 2;
  ++v77;
  if (v25 + 1 >= v70)
    goto LABEL_29;
  v26 = *(_QWORD *)(v66 + 8 * v27);
  if (v26)
    goto LABEL_18;
  v77 = v25 + 1;
  if (v25 + 2 >= v70)
    goto LABEL_29;
  v26 = *(_QWORD *)(v66 + 8 * (v25 + 2));
  if (v26)
  {
    v25 += 2;
    goto LABEL_15;
  }
  v27 = v25 + 3;
  v77 = v25 + 2;
  if (v25 + 3 >= v70)
    goto LABEL_29;
  v26 = *(_QWORD *)(v66 + 8 * v27);
  if (v26)
  {
LABEL_18:
    v25 = v27;
    goto LABEL_15;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v70)
    {
      v77 = v70 - 1;
      goto LABEL_29;
    }
    v26 = *(_QWORD *)(v66 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_15;
  }
LABEL_66:
  __break(1u);
  return result;
}

uint64_t VSNPIBrokenEvent.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[40] = a2;
  v3[41] = a3;
  v3[39] = a1;
  v4 = sub_1D24DFD04();
  v3[42] = v4;
  v3[43] = *(_QWORD *)(v4 - 8);
  v3[44] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2495474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  unint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = *(_QWORD *)(v0 + 320);
  v1 = *(_QWORD *)(v0 + 328);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EB78);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D24E8C70;
  *(_BYTE *)(v0 + 376) = 1;
  sub_1D24821C0();
  sub_1D24DFEB4();
  *(_QWORD *)(inited + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 72) = v2;
  *(_QWORD *)(inited + 80) = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1D248EE98(inited);
  v5 = objc_allocWithZone((Class)VSBundleRecord);
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1D24DFD4C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithBundleID_, v6);

  v8 = objc_msgSend(v7, sel_bundleVersion);
  if (v8)
  {
    swift_bridgeObjectRelease();
    v9 = sub_1D24DFD70();
    v11 = v10;

    *(_BYTE *)(v0 + 377) = 2;
    sub_1D24DFEB4();
    *(_QWORD *)(v0 + 264) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 240) = v9;
    *(_QWORD *)(v0 + 248) = v11;
    sub_1D2482278((_OWORD *)(v0 + 240), (_OWORD *)(v0 + 272));
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1D2481F88((_OWORD *)(v0 + 272), v0 + 120, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_1D2482204(v0 + 120);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 360) = v13;
    *v13 = v0;
    v13[1] = sub_1D2495820;
    return VSNPIBrokenEvent.init(_:)(v0 + 200, v4);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 344);
    v16 = *(_QWORD *)(v0 + 352);
    v17 = *(_QWORD *)(v0 + 336);
    v18 = sub_1D249A9AC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v16, v18, v17);
    swift_bridgeObjectRetain();
    v19 = sub_1D24DFCEC();
    v20 = sub_1D24DFE24();
    v21 = os_log_type_enabled(v19, v20);
    v23 = *(_QWORD *)(v0 + 344);
    v22 = *(_QWORD *)(v0 + 352);
    v25 = *(_QWORD *)(v0 + 328);
    v24 = *(_QWORD *)(v0 + 336);
    if (v21)
    {
      v26 = *(_QWORD *)(v0 + 320);
      v31 = *(_QWORD *)(v0 + 344);
      v27 = (uint8_t *)swift_slowAlloc();
      v30 = v24;
      v28 = swift_slowAlloc();
      v32 = v28;
      *(_DWORD *)v27 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 304) = sub_1D2481604(v26, v25, &v32);
      sub_1D24DFE54();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2419000, v19, v20, "Federated punchout event for bundle %s with no version.", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D8236C38](v28, -1, -1);
      MEMORY[0x1D8236C38](v27, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v22, v30);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    }
    v29 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 368) = v29;
    *v29 = v0;
    v29[1] = sub_1D24958C0;
    return VSNPIBrokenEvent.init(_:)(v0 + 160, v4);
  }
}

uint64_t sub_1D2495820()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2495874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_OWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 312);
  *(_QWORD *)v4 = *(_QWORD *)(v0 + 200);
  *(_OWORD *)(v4 + 8) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  *(_QWORD *)(v4 + 32) = v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D24958C0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2495914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_OWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 312);
  *(_QWORD *)v4 = *(_QWORD *)(v0 + 160);
  *(_OWORD *)(v4 + 8) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  *(_QWORD *)(v4 + 32) = v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

ValueMetadata *type metadata accessor for VSNPIBrokenEvent()
{
  return &type metadata for VSNPIBrokenEvent;
}

uint64_t sub_1D2495970(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EB58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

VideoSubscriberAccount::VSAnalyticsCommonKeys_optional __swiftcall VSAnalyticsCommonKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  VideoSubscriberAccount::VSAnalyticsCommonKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D24DFF5C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static VSAnalyticsCommonKeys.allCases.getter()
{
  return &unk_1E93A2C00;
}

uint64_t VSAnalyticsCommonKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D2495A54
                                                            + 4 * asc_1D24E9B20[*v0]))(0x79745F726F727265, 0xEA00000000006570);
}

uint64_t sub_1D2495A54()
{
  return 0x6F635F726F727265;
}

unint64_t sub_1D2495A70()
{
  return 0xD000000000000011;
}

uint64_t sub_1D2495A90()
{
  return 0x72656469766F7270;
}

uint64_t sub_1D2495AB0()
{
  return 0x6E65674172657375;
}

unint64_t sub_1D2495ACC()
{
  return 0xD000000000000010;
}

void sub_1D2495AE8(char *a1)
{
  sub_1D2495B3C(*a1);
}

unint64_t sub_1D2495AF8()
{
  unint64_t result;

  result = qword_1EFC7EC30;
  if (!qword_1EFC7EC30)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSAnalyticsCommonKeys, &type metadata for VSAnalyticsCommonKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC7EC30);
  }
  return result;
}

void sub_1D2495B3C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1D2495B94(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1D2495C44 + 4 * byte_1D24E9B2C[a2]))(0x6F635F726F727265);
}

uint64_t sub_1D2495C44(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6F635F726F727265 && v1 == 0xEA00000000006564)
    v2 = 1;
  else
    v2 = sub_1D24DFF74();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1D2495D44()
{
  char *v0;

  sub_1D2495D4C(*v0);
}

void sub_1D2495D4C(char a1)
{
  sub_1D24DFFA4();
  __asm { BR              X10 }
}

uint64_t sub_1D2495DA4()
{
  sub_1D24DFD7C();
  swift_bridgeObjectRelease();
  return sub_1D24DFFBC();
}

void sub_1D2495E60(uint64_t a1)
{
  char *v1;

  sub_1D2495E68(a1, *v1);
}

void sub_1D2495E68(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D2495EB0()
{
  sub_1D24DFD7C();
  return swift_bridgeObjectRelease();
}

void sub_1D2495F58(uint64_t a1)
{
  char *v1;

  sub_1D2495F60(a1, *v1);
}

void sub_1D2495F60(uint64_t a1, char a2)
{
  sub_1D24DFFA4();
  __asm { BR              X10 }
}

uint64_t sub_1D2495FB4()
{
  sub_1D24DFD7C();
  swift_bridgeObjectRelease();
  return sub_1D24DFFBC();
}

VideoSubscriberAccount::VSAnalyticsCommonKeys_optional sub_1D2496070(Swift::String *a1)
{
  return VSAnalyticsCommonKeys.init(rawValue:)(*a1);
}

uint64_t sub_1D249607C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = VSAnalyticsCommonKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1D24960A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFC7EC38;
  if (!qword_1EFC7EC38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC7EC40);
    result = MEMORY[0x1D8236BCC](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFC7EC38);
  }
  return result;
}

void sub_1D24960F0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E93A2C00;
}

uint64_t getEnumTagSinglePayload for VSAnalyticsCommonKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VSAnalyticsCommonKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D24961DC + 4 * byte_1D24E9B49[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D2496210 + 4 * byte_1D24E9B44[v4]))();
}

uint64_t sub_1D2496210(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2496218(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2496220);
  return result;
}

uint64_t sub_1D249622C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2496234);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D2496238(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2496240(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VSAnalyticsCommonKeys()
{
  return &type metadata for VSAnalyticsCommonKeys;
}

uint64_t sub_1D249625C()
{
  return 0x5F74706F5F627473;
}

uint64_t VSSTBOptOutEvent.eventType.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSSTBOptOutEvent.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VSSTBOptOutEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*VSSTBOptOutEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSSTBOptOutEvent.topic.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSSTBOptOutEvent.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*VSSTBOptOutEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSSTBOptOutEvent.init(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[88] = a2;
  v2[87] = a1;
  v3 = sub_1D24DFD04();
  v2[89] = v3;
  v2[90] = *(_QWORD *)(v3 - 8);
  v2[91] = swift_task_alloc();
  v2[92] = swift_task_alloc();
  v2[93] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D24963D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;

  v1 = v0[93];
  v2 = v0[90];
  v3 = v0[89];
  v4 = sub_1D2497CA8();
  v0[94] = *v4;
  v0[95] = v4[1];
  swift_bridgeObjectRetain();
  v5 = sub_1D249A8C8();
  v0[96] = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v0[97] = v6;
  v6(v1, v5, v3);
  v7 = sub_1D24DFCEC();
  v8 = sub_1D24DFE0C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1D2419000, v7, v8, "VSSTBOptOutEvent", v9, 2u);
    MEMORY[0x1D8236C38](v9, -1, -1);
  }
  v10 = v0[93];
  v11 = v0[90];
  v12 = v0[89];

  v13 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[98] = v13;
  v13(v10, v12);
  v14 = (_QWORD *)swift_task_alloc();
  v0[99] = v14;
  *v14 = v0;
  v14[1] = sub_1D249650C;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1D249650C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 800) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1D2496568()
{
  _QWORD *v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v0[101] = v1;
  v0[7] = v0 + 86;
  v0[2] = v0;
  v0[3] = sub_1D249662C;
  v0[52] = swift_continuation_init();
  v0[48] = MEMORY[0x1E0C809B0];
  v0[49] = 0x40000000;
  v0[50] = sub_1D2497140;
  v0[51] = &block_descriptor_1;
  objc_msgSend(v1, sel_fetchSetTopBoxProfileWithCompletion_, v0 + 48);
  return swift_continuation_await();
}

uint64_t sub_1D249662C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 816) = v1;
  if (v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1D2496694()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  __int128 v23;
  char v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  char v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  char v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  BOOL v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  uint64_t v56;
  _OWORD *v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int64_t v75;
  _OWORD *v76;
  uint64_t v77;
  uint64_t v78;
  _OWORD *v79;
  int64_t v80;
  uint64_t v81;
  _OWORD *v82;
  _QWORD *v83;

  v1 = *(void **)(v0 + 688);

  if (!v1)
  {
    swift_bridgeObjectRelease();
    v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 776);
    v59 = *(_QWORD *)(v0 + 736);
    v60 = *(_QWORD *)(v0 + 712);
    v61 = sub_1D249A9AC();
    v58(v59, v61, v60);
    v62 = sub_1D24DFCEC();
    v63 = sub_1D24DFE24();
    if (os_log_type_enabled(v62, v63))
    {
      v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v64 = 0;
      _os_log_impl(&dword_1D2419000, v62, v63, "Sending stb_opt_out event with no STB profile.", v64, 2u);
      MEMORY[0x1D8236C38](v64, -1, -1);
    }
    v65 = *(void (**)(uint64_t, uint64_t))(v0 + 784);
    v66 = *(_QWORD *)(v0 + 736);
    v67 = *(_QWORD *)(v0 + 712);

    v65(v66, v67);
    v11 = *(_QWORD **)(v0 + 800);
    goto LABEL_63;
  }
  v82 = (_OWORD *)(v0 + 80);
  v81 = v0 + 264;
  v77 = v0 + 424;
  v79 = (_OWORD *)(v0 + 528);
  v76 = (_OWORD *)(v0 + 624);
  v2 = *(_QWORD *)(v0 + 800);
  v3 = *(_QWORD *)(v0 + 704);
  v71 = v1;
  v4 = objc_msgSend(v1, sel_providerID);
  v5 = sub_1D24DFD70();
  v7 = v6;

  v8 = v0 + 152;
  *(_BYTE *)(v0 + 828) = 1;
  sub_1D2493A30();
  sub_1D24DFEB4();
  *(_QWORD *)(v0 + 680) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 656) = v5;
  *(_QWORD *)(v0 + 664) = v7;
  v9 = (_OWORD *)(v0 + 496);
  sub_1D2482278((_OWORD *)(v0 + 656), (_OWORD *)(v0 + 464));
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v83 = (_QWORD *)v2;
  sub_1D2481F88((_OWORD *)(v0 + 464), v0 + 224, isUniquelyReferenced_nonNull_native);
  v11 = (_QWORD *)v2;
  swift_bridgeObjectRelease();
  result = sub_1D2482204(v0 + 224);
  v80 = 0;
  v13 = *(_QWORD *)(v3 + 64);
  v73 = v3 + 64;
  v78 = v3;
  v14 = -1;
  v15 = -1 << *(_BYTE *)(v3 + 32);
  if (-v15 < 64)
    v14 = ~(-1 << -(char)v15);
  v16 = v14 & v13;
  v75 = (unint64_t)(63 - v15) >> 6;
  if ((v14 & v13) == 0)
    goto LABEL_7;
LABEL_5:
  v17 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  v18 = v0 + 304;
  v19 = v17 | (v80 << 6);
  while (2)
  {
    sub_1D24820C0(*(_QWORD *)(v78 + 48) + 40 * v19, (uint64_t)v82);
    sub_1D24820FC(*(_QWORD *)(v78 + 56) + 32 * v19, v0 + 120);
    while (1)
    {
      sub_1D2482138((uint64_t)v82, v8);
      if (!*(_QWORD *)(v0 + 176))
      {
        swift_release();

LABEL_63:
        v68 = *(_QWORD *)(v0 + 760);
        v69 = *(_QWORD *)(v0 + 752);
        v70 = *(_QWORD **)(v0 + 696);
        *v70 = 0x5F74706F5F627473;
        v70[1] = 0xEB0000000074756FLL;
        v70[2] = v11;
        v70[3] = v69;
        v70[4] = v68;
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      v23 = *(_OWORD *)(v8 + 16);
      *(_OWORD *)(v0 + 344) = *(_OWORD *)v8;
      *(_OWORD *)(v0 + 360) = v23;
      *(_QWORD *)(v0 + 376) = *(_QWORD *)(v8 + 32);
      sub_1D2482278((_OWORD *)(v0 + 192), v9);
      sub_1D24DFEA8();
      if ((swift_dynamicCast() & 1) != 0)
      {
        *(_BYTE *)(v0 + 827) = *(_BYTE *)(v0 + 826);
        sub_1D24825C8();
        sub_1D24DFEB4();
        sub_1D24820FC((uint64_t)v9, (uint64_t)v79);
        v24 = swift_isUniquelyReferenced_nonNull_native();
        v83 = v11;
        v26 = sub_1D2481C44(v81);
        v27 = v11[2];
        v28 = (v25 & 1) == 0;
        result = v27 + v28;
        if (__OFADD__(v27, v28))
        {
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
          goto LABEL_70;
        }
        v29 = v25;
        if (v11[3] < result)
        {
          sub_1D2481C74(result, v24);
          v11 = v83;
          v30 = sub_1D2481C44(v81);
          if ((v29 & 1) != (v31 & 1))
            return sub_1D24DFF98();
          v26 = v30;
          v9 = (_OWORD *)(v0 + 496);
          if ((v29 & 1) == 0)
            goto LABEL_31;
LABEL_44:
          v55 = (_OWORD *)(v11[7] + 32 * v26);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
          sub_1D2482278(v79, v55);
LABEL_45:
          swift_bridgeObjectRelease();
          v56 = v0 + 264;
          goto LABEL_53;
        }
        if ((v24 & 1) != 0)
        {
          v9 = (_OWORD *)(v0 + 496);
          if ((v25 & 1) != 0)
            goto LABEL_44;
        }
        else
        {
          sub_1D24823E4();
          v11 = v83;
          v9 = (_OWORD *)(v0 + 496);
          if ((v29 & 1) != 0)
            goto LABEL_44;
        }
LABEL_31:
        v11[(v26 >> 6) + 8] |= 1 << v26;
        sub_1D24820C0(v81, v11[6] + 40 * v26);
        result = (uint64_t)sub_1D2482278(v79, (_OWORD *)(v11[7] + 32 * v26));
        v32 = v11[2];
        v33 = __OFADD__(v32, 1);
        v34 = v32 + 1;
        if (v33)
          goto LABEL_68;
        v11[2] = v34;
        goto LABEL_45;
      }
      sub_1D24DFEA8();
      if ((swift_dynamicCast() & 1) == 0)
      {
        (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 776))(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 768), *(_QWORD *)(v0 + 712));
        sub_1D24820C0(v0 + 344, v18);
        v45 = sub_1D24DFCEC();
        v46 = sub_1D24DFE18();
        v47 = os_log_type_enabled(v45, v46);
        v48 = *(void (**)(uint64_t, uint64_t))(v0 + 784);
        v49 = *(_QWORD *)(v0 + 728);
        v74 = *(_QWORD *)(v0 + 712);
        if (v47)
        {
          v72 = *(_QWORD *)(v0 + 728);
          v50 = swift_slowAlloc();
          v51 = swift_slowAlloc();
          v83 = (_QWORD *)v51;
          *(_DWORD *)v50 = 136315138;
          v52 = sub_1D24DFE84();
          *(_QWORD *)(v50 + 4) = sub_1D2481604(v52, v53, (uint64_t *)&v83);
          swift_bridgeObjectRelease();
          sub_1D2482204(v18);
          _os_log_impl(&dword_1D2419000, v45, v46, "VSSTBOptOutEvent received invalid metadata key: %s", (uint8_t *)v50, 0xCu);
          swift_arrayDestroy();
          v54 = v51;
          v9 = (_OWORD *)(v0 + 496);
          MEMORY[0x1D8236C38](v54, -1, -1);
          MEMORY[0x1D8236C38](v50, -1, -1);

          v48(v72, v74);
        }
        else
        {

          sub_1D2482204(v18);
          v48(v49, v74);
        }
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
        result = sub_1D2482204(v0 + 344);
        v8 = v0 + 152;
        if (v16)
          goto LABEL_5;
        goto LABEL_7;
      }
      *(_BYTE *)(v0 + 824) = *(_BYTE *)(v0 + 825);
      sub_1D24DFEB4();
      sub_1D24820FC((uint64_t)v9, (uint64_t)v76);
      v35 = swift_isUniquelyReferenced_nonNull_native();
      v83 = v11;
      v37 = sub_1D2481C44(v77);
      v38 = v11[2];
      v39 = (v36 & 1) == 0;
      result = v38 + v39;
      if (__OFADD__(v38, v39))
        goto LABEL_67;
      v40 = v36;
      if (v11[3] >= result)
      {
        if ((v35 & 1) != 0)
        {
          v9 = (_OWORD *)(v0 + 496);
          if ((v36 & 1) == 0)
            goto LABEL_38;
        }
        else
        {
          sub_1D24823E4();
          v11 = v83;
          v9 = (_OWORD *)(v0 + 496);
          if ((v40 & 1) == 0)
            goto LABEL_38;
        }
      }
      else
      {
        sub_1D2481C74(result, v35);
        v11 = v83;
        v41 = sub_1D2481C44(v77);
        if ((v40 & 1) != (v42 & 1))
          return sub_1D24DFF98();
        v37 = v41;
        v9 = (_OWORD *)(v0 + 496);
        if ((v40 & 1) == 0)
        {
LABEL_38:
          v11[(v37 >> 6) + 8] |= 1 << v37;
          sub_1D24820C0(v77, v11[6] + 40 * v37);
          result = (uint64_t)sub_1D2482278(v76, (_OWORD *)(v11[7] + 32 * v37));
          v43 = v11[2];
          v33 = __OFADD__(v43, 1);
          v44 = v43 + 1;
          if (v33)
            goto LABEL_69;
          v11[2] = v44;
          goto LABEL_52;
        }
      }
      v57 = (_OWORD *)(v11[7] + 32 * v37);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v57);
      sub_1D2482278(v76, v57);
LABEL_52:
      swift_bridgeObjectRelease();
      v56 = v0 + 424;
LABEL_53:
      sub_1D2482204(v56);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
      result = sub_1D2482204(v0 + 344);
      if (v16)
        goto LABEL_5;
LABEL_7:
      v18 = v0 + 304;
      v20 = v80 + 1;
      if (__OFADD__(v80, 1))
        goto LABEL_66;
      if (v20 < v75)
      {
        v21 = *(_QWORD *)(v73 + 8 * v20);
        if (v21)
          goto LABEL_10;
        v22 = v80 + 2;
        ++v80;
        if (v20 + 1 < v75)
        {
          v21 = *(_QWORD *)(v73 + 8 * v22);
          if (v21)
            goto LABEL_13;
          v80 = v20 + 1;
          if (v20 + 2 < v75)
          {
            v21 = *(_QWORD *)(v73 + 8 * (v20 + 2));
            if (v21)
            {
              v20 += 2;
              goto LABEL_10;
            }
            v22 = v20 + 3;
            v80 = v20 + 2;
            if (v20 + 3 < v75)
              break;
          }
        }
      }
LABEL_24:
      v16 = 0;
      *(_QWORD *)(v0 + 144) = 0;
      *(_OWORD *)(v0 + 112) = 0u;
      *(_OWORD *)(v0 + 128) = 0u;
      *v82 = 0u;
      *(_OWORD *)(v0 + 96) = 0u;
    }
    v21 = *(_QWORD *)(v73 + 8 * v22);
    if (v21)
    {
LABEL_13:
      v20 = v22;
LABEL_10:
      v16 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v20 << 6);
      v80 = v20;
      continue;
    }
    break;
  }
  while (1)
  {
    v20 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v20 >= v75)
    {
      v80 = v75 - 1;
      goto LABEL_24;
    }
    v21 = *(_QWORD *)(v73 + 8 * v20);
    ++v22;
    if (v21)
      goto LABEL_10;
  }
LABEL_70:
  __break(1u);
  return result;
}

uint64_t sub_1D2496FF0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = *(void **)(v0 + 816);
  v2 = *(void **)(v0 + 808);
  swift_willThrow();

  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 776);
  v4 = *(_QWORD *)(v0 + 736);
  v5 = *(_QWORD *)(v0 + 712);
  v6 = sub_1D249A9AC();
  v3(v4, v6, v5);
  v7 = sub_1D24DFCEC();
  v8 = sub_1D24DFE24();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1D2419000, v7, v8, "Sending stb_opt_out event with no STB profile.", v9, 2u);
    MEMORY[0x1D8236C38](v9, -1, -1);
  }
  v10 = *(void (**)(uint64_t, uint64_t))(v0 + 784);
  v11 = *(_QWORD *)(v0 + 736);
  v12 = *(_QWORD *)(v0 + 712);

  v10(v11, v12);
  v13 = *(_QWORD *)(v0 + 800);
  v14 = *(_QWORD *)(v0 + 760);
  v15 = *(_QWORD *)(v0 + 752);
  v16 = *(_QWORD **)(v0 + 696);
  *v16 = 0x5F74706F5F627473;
  v16[1] = 0xEB0000000074756FLL;
  v16[2] = v13;
  v16[3] = v15;
  v16[4] = v14;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2497140(uint64_t result, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v6;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EB48);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

ValueMetadata *type metadata accessor for VSSTBOptOutEvent()
{
  return &type metadata for VSSTBOptOutEvent;
}

uint64_t sub_1D24971DC()
{
  return 0x6F5F64656E676973;
}

uint64_t VSSignOutEvent.eventType.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSSignOutEvent.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VSSignOutEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*VSSignOutEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSSignOutEvent.topic.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSSignOutEvent.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*VSSignOutEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSSignOutEvent.init(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[60] = a1;
  v2[61] = a2;
  v3 = sub_1D24DFD04();
  v2[62] = v3;
  v2[63] = *(_QWORD *)(v3 - 8);
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2497344()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;

  v1 = v0[65];
  v2 = v0[62];
  v3 = v0[63];
  v4 = sub_1D2497CA8();
  v0[66] = *v4;
  v0[67] = v4[1];
  swift_bridgeObjectRetain();
  v5 = sub_1D249A8C8();
  v0[68] = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[69] = v6;
  v6(v1, v5, v2);
  v7 = sub_1D24DFCEC();
  v8 = sub_1D24DFE0C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1D2419000, v7, v8, "VSSignOutEvent", v9, 2u);
    MEMORY[0x1D8236C38](v9, -1, -1);
  }
  v10 = v0[65];
  v11 = v0[62];
  v12 = v0[63];

  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v0[70] = v13;
  v13(v10, v11);
  v14 = (_QWORD *)swift_task_alloc();
  v0[71] = v14;
  *v14 = v0;
  v14[1] = sub_1D2497470;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1D2497470(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 576) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_1D24974CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  __int128 v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  char v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  BOOL v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  uint64_t v53;
  _OWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  int64_t v63;
  _OWORD *v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  _OWORD *v73;
  _OWORD *v74;
  int64_t v75;
  uint64_t v76;
  _QWORD *v77;

  v1 = v0 + 16;
  v2 = v0 + 88;
  v3 = v0 + 160;
  v75 = 0;
  v76 = v0 + 200;
  v65 = v0 + 280;
  v68 = v0 + 240;
  v73 = (_OWORD *)(v0 + 352);
  v4 = (_OWORD *)(v0 + 384);
  v64 = (_OWORD *)(v0 + 448);
  v61 = (_BYTE *)(v0 + 584);
  v5 = (_BYTE *)(v0 + 585);
  v66 = (_BYTE *)(v0 + 587);
  v67 = (_BYTE *)(v0 + 586);
  v6 = *(_QWORD *)(v0 + 488);
  v7 = *(_QWORD *)(v6 + 64);
  v59 = v6 + 64;
  v70 = v6;
  v8 = -1;
  v9 = -1 << *(_BYTE *)(v70 + 32);
  if (-v9 < 64)
    v8 = ~(-1 << -(char)v9);
  v10 = v8 & v7;
  v69 = v0 + 128;
  v74 = (_OWORD *)(v0 + 56);
  v63 = (unint64_t)(63 - v9) >> 6;
  v11 = *(_QWORD **)(v0 + 576);
  v72 = v0 + 384;
  v71 = (_BYTE *)(v0 + 585);
  v60 = v0 + 88;
  if ((v8 & v7) == 0)
    goto LABEL_6;
LABEL_4:
  v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  v13 = v12 | (v75 << 6);
  while (2)
  {
    sub_1D24820C0(*(_QWORD *)(v70 + 48) + 40 * v13, v2);
    sub_1D24820FC(*(_QWORD *)(v70 + 56) + 32 * v13, v69);
    while (1)
    {
      sub_1D2482138(v2, v1);
      if (!*(_QWORD *)(v0 + 40))
      {
        v55 = *(_QWORD *)(v0 + 536);
        v56 = *(_QWORD *)(v0 + 528);
        v57 = *(_QWORD **)(v0 + 480);
        swift_release();
        *v57 = 0x6F5F64656E676973;
        v57[1] = 0xEA00000000007475;
        v57[2] = v11;
        v57[3] = v56;
        v57[4] = v55;
        swift_task_dealloc();
        swift_task_dealloc();
        (*(void (**)(void))(v0 + 8))();
        return;
      }
      v17 = *(_OWORD *)(v1 + 16);
      *(_OWORD *)v3 = *(_OWORD *)v1;
      *(_OWORD *)(v3 + 16) = v17;
      *(_QWORD *)(v3 + 32) = *(_QWORD *)(v1 + 32);
      sub_1D2482278(v74, v4);
      sub_1D24DFEA8();
      if ((swift_dynamicCast() & 1) != 0)
      {
        *v67 = *v5;
        sub_1D24825C8();
        sub_1D24DFEB4();
        sub_1D24820FC((uint64_t)v4, (uint64_t)v73);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v77 = v11;
        v20 = sub_1D2481C44(v76);
        v21 = v11[2];
        v22 = (v19 & 1) == 0;
        v23 = v21 + v22;
        if (__OFADD__(v21, v22))
        {
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
        v24 = v19;
        if (v11[3] < v23)
        {
          sub_1D2481C74(v23, isUniquelyReferenced_nonNull_native);
          v11 = v77;
          v25 = sub_1D2481C44(v76);
          if ((v24 & 1) != (v26 & 1))
            goto LABEL_59;
          v20 = v25;
          v4 = (_OWORD *)v72;
          if ((v24 & 1) == 0)
            goto LABEL_30;
LABEL_43:
          v52 = (_OWORD *)(v11[7] + 32 * v20);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
          sub_1D2482278(v73, v52);
LABEL_44:
          swift_bridgeObjectRelease();
          v53 = v76;
          goto LABEL_52;
        }
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v4 = (_OWORD *)v72;
          if ((v19 & 1) != 0)
            goto LABEL_43;
        }
        else
        {
          sub_1D24823E4();
          v11 = v77;
          v4 = (_OWORD *)v72;
          if ((v24 & 1) != 0)
            goto LABEL_43;
        }
LABEL_30:
        v11[(v20 >> 6) + 8] |= 1 << v20;
        sub_1D24820C0(v76, v11[6] + 40 * v20);
        sub_1D2482278(v73, (_OWORD *)(v11[7] + 32 * v20));
        v27 = v11[2];
        v28 = __OFADD__(v27, 1);
        v29 = v27 + 1;
        if (v28)
          goto LABEL_63;
        v11[2] = v29;
        goto LABEL_44;
      }
      sub_1D24DFEA8();
      if ((swift_dynamicCast() & 1) == 0)
      {
        (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 552))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 496));
        sub_1D24820C0(v3, v65);
        v41 = sub_1D24DFCEC();
        v42 = sub_1D24DFE18();
        v43 = os_log_type_enabled(v41, v42);
        v44 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
        v62 = *(_QWORD *)(v0 + 512);
        v45 = *(_QWORD *)(v0 + 496);
        if (v43)
        {
          v46 = v1;
          v47 = swift_slowAlloc();
          v48 = swift_slowAlloc();
          v77 = (_QWORD *)v48;
          *(_DWORD *)v47 = 136315138;
          v49 = sub_1D24DFE84();
          *(_QWORD *)(v47 + 4) = sub_1D2481604(v49, v50, (uint64_t *)&v77);
          swift_bridgeObjectRelease();
          sub_1D2482204(v65);
          _os_log_impl(&dword_1D2419000, v41, v42, "VSSignOutEvent received invalid metadata key: %s", (uint8_t *)v47, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D8236C38](v48, -1, -1);
          v51 = v47;
          v1 = v46;
          v0 = v58;
          MEMORY[0x1D8236C38](v51, -1, -1);

        }
        else
        {

          sub_1D2482204(v65);
        }
        v44(v62, v45);
        v4 = (_OWORD *)v72;
        __swift_destroy_boxed_opaque_existential_0(v72);
        sub_1D2482204(v3);
        v2 = v60;
        v5 = v71;
        if (v10)
          goto LABEL_4;
        goto LABEL_6;
      }
      *v61 = *v66;
      sub_1D2493A30();
      sub_1D24DFEB4();
      sub_1D24820FC((uint64_t)v4, (uint64_t)v64);
      v30 = swift_isUniquelyReferenced_nonNull_native();
      v77 = v11;
      v32 = sub_1D2481C44(v68);
      v33 = v11[2];
      v34 = (v31 & 1) == 0;
      v35 = v33 + v34;
      if (__OFADD__(v33, v34))
        goto LABEL_62;
      v36 = v31;
      if (v11[3] >= v35)
      {
        if ((v30 & 1) != 0)
        {
          v4 = (_OWORD *)v72;
          if ((v31 & 1) == 0)
            goto LABEL_37;
        }
        else
        {
          sub_1D24823E4();
          v11 = v77;
          v4 = (_OWORD *)v72;
          if ((v36 & 1) == 0)
            goto LABEL_37;
        }
      }
      else
      {
        sub_1D2481C74(v35, v30);
        v11 = v77;
        v37 = sub_1D2481C44(v68);
        if ((v36 & 1) != (v38 & 1))
        {
LABEL_59:
          sub_1D24DFF98();
          return;
        }
        v32 = v37;
        v4 = (_OWORD *)v72;
        if ((v36 & 1) == 0)
        {
LABEL_37:
          v11[(v32 >> 6) + 8] |= 1 << v32;
          sub_1D24820C0(v68, v11[6] + 40 * v32);
          sub_1D2482278(v64, (_OWORD *)(v11[7] + 32 * v32));
          v39 = v11[2];
          v28 = __OFADD__(v39, 1);
          v40 = v39 + 1;
          if (v28)
            goto LABEL_64;
          v11[2] = v40;
          goto LABEL_51;
        }
      }
      v54 = (_OWORD *)(v11[7] + 32 * v32);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v54);
      sub_1D2482278(v64, v54);
LABEL_51:
      swift_bridgeObjectRelease();
      v53 = v68;
LABEL_52:
      sub_1D2482204(v53);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
      sub_1D2482204(v3);
      v5 = v71;
      if (v10)
        goto LABEL_4;
LABEL_6:
      v14 = v75 + 1;
      if (__OFADD__(v75, 1))
        goto LABEL_61;
      if (v14 < v63)
      {
        v15 = *(_QWORD *)(v59 + 8 * v14);
        if (v15)
          goto LABEL_9;
        v16 = v75 + 2;
        ++v75;
        if (v14 + 1 < v63)
        {
          v15 = *(_QWORD *)(v59 + 8 * v16);
          if (v15)
            goto LABEL_12;
          v75 = v14 + 1;
          if (v14 + 2 < v63)
          {
            v15 = *(_QWORD *)(v59 + 8 * (v14 + 2));
            if (v15)
            {
              v14 += 2;
              goto LABEL_9;
            }
            v16 = v14 + 3;
            v75 = v14 + 2;
            if (v14 + 3 < v63)
              break;
          }
        }
      }
LABEL_23:
      v10 = 0;
      *(_QWORD *)(v2 + 64) = 0;
      *(_OWORD *)(v2 + 32) = 0u;
      *(_OWORD *)(v2 + 48) = 0u;
      *(_OWORD *)v2 = 0u;
      *(_OWORD *)(v2 + 16) = 0u;
    }
    v15 = *(_QWORD *)(v59 + 8 * v16);
    if (v15)
    {
LABEL_12:
      v14 = v16;
LABEL_9:
      v10 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v14 << 6);
      v75 = v14;
      continue;
    }
    break;
  }
  while (1)
  {
    v14 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v14 >= v63)
    {
      v75 = v63 - 1;
      goto LABEL_23;
    }
    v15 = *(_QWORD *)(v59 + 8 * v14);
    ++v16;
    if (v15)
      goto LABEL_9;
  }
LABEL_65:
  __break(1u);
}

ValueMetadata *type metadata accessor for VSSignOutEvent()
{
  return &type metadata for VSSignOutEvent;
}

void *sub_1D2497CA8()
{
  return &unk_1E93A2ED0;
}

uint64_t sub_1D2497CB4()
{
  return 0x5F746E756F636361;
}

uint64_t VSAccountUpdateEvent.eventType.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSAccountUpdateEvent.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VSAccountUpdateEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*VSAccountUpdateEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSAccountUpdateEvent.topic.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSAccountUpdateEvent.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*VSAccountUpdateEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSAccountUpdateEvent.init(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[60] = a1;
  v2[61] = a2;
  v3 = sub_1D24DFD04();
  v2[62] = v3;
  v2[63] = *(_QWORD *)(v3 - 8);
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2497E24()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;

  v1 = v0[65];
  v2 = v0[62];
  v3 = v0[63];
  v4 = sub_1D2497CA8();
  v0[66] = *v4;
  v0[67] = v4[1];
  swift_bridgeObjectRetain();
  v5 = sub_1D249A8C8();
  v0[68] = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[69] = v6;
  v6(v1, v5, v2);
  v7 = sub_1D24DFCEC();
  v8 = sub_1D24DFE0C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1D2419000, v7, v8, "VSAccountUpdateEvent", v9, 2u);
    MEMORY[0x1D8236C38](v9, -1, -1);
  }
  v10 = v0[65];
  v11 = v0[62];
  v12 = v0[63];

  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v0[70] = v13;
  v13(v10, v11);
  v14 = (_QWORD *)swift_task_alloc();
  v0[71] = v14;
  *v14 = v0;
  v14[1] = sub_1D2497F50;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1D2497F50(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 576) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_1D2497FAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  __int128 v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  char v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  BOOL v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  uint64_t v53;
  _OWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  int64_t v63;
  _OWORD *v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  _OWORD *v73;
  _OWORD *v74;
  int64_t v75;
  uint64_t v76;
  _QWORD *v77;

  v1 = v0 + 16;
  v2 = v0 + 88;
  v3 = v0 + 160;
  v75 = 0;
  v76 = v0 + 200;
  v65 = v0 + 280;
  v68 = v0 + 240;
  v73 = (_OWORD *)(v0 + 352);
  v4 = (_OWORD *)(v0 + 384);
  v64 = (_OWORD *)(v0 + 448);
  v61 = (_BYTE *)(v0 + 584);
  v5 = (_BYTE *)(v0 + 585);
  v66 = (_BYTE *)(v0 + 587);
  v67 = (_BYTE *)(v0 + 586);
  v6 = *(_QWORD *)(v0 + 488);
  v7 = *(_QWORD *)(v6 + 64);
  v59 = v6 + 64;
  v70 = v6;
  v8 = -1;
  v9 = -1 << *(_BYTE *)(v70 + 32);
  if (-v9 < 64)
    v8 = ~(-1 << -(char)v9);
  v10 = v8 & v7;
  v69 = v0 + 128;
  v74 = (_OWORD *)(v0 + 56);
  v63 = (unint64_t)(63 - v9) >> 6;
  v11 = *(_QWORD **)(v0 + 576);
  v72 = v0 + 384;
  v71 = (_BYTE *)(v0 + 585);
  v60 = v0 + 88;
  if ((v8 & v7) == 0)
    goto LABEL_6;
LABEL_4:
  v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  v13 = v12 | (v75 << 6);
  while (2)
  {
    sub_1D24820C0(*(_QWORD *)(v70 + 48) + 40 * v13, v2);
    sub_1D24820FC(*(_QWORD *)(v70 + 56) + 32 * v13, v69);
    while (1)
    {
      sub_1D2482138(v2, v1);
      if (!*(_QWORD *)(v0 + 40))
      {
        v55 = *(_QWORD *)(v0 + 536);
        v56 = *(_QWORD *)(v0 + 528);
        v57 = *(_QWORD *)(v0 + 480);
        swift_release();
        strcpy((char *)v57, "account_update");
        *(_BYTE *)(v57 + 15) = -18;
        *(_QWORD *)(v57 + 16) = v11;
        *(_QWORD *)(v57 + 24) = v56;
        *(_QWORD *)(v57 + 32) = v55;
        swift_task_dealloc();
        swift_task_dealloc();
        (*(void (**)(void))(v0 + 8))();
        return;
      }
      v17 = *(_OWORD *)(v1 + 16);
      *(_OWORD *)v3 = *(_OWORD *)v1;
      *(_OWORD *)(v3 + 16) = v17;
      *(_QWORD *)(v3 + 32) = *(_QWORD *)(v1 + 32);
      sub_1D2482278(v74, v4);
      sub_1D24DFEA8();
      if ((swift_dynamicCast() & 1) != 0)
      {
        *v67 = *v5;
        sub_1D24825C8();
        sub_1D24DFEB4();
        sub_1D24820FC((uint64_t)v4, (uint64_t)v73);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v77 = v11;
        v20 = sub_1D2481C44(v76);
        v21 = v11[2];
        v22 = (v19 & 1) == 0;
        v23 = v21 + v22;
        if (__OFADD__(v21, v22))
        {
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
        v24 = v19;
        if (v11[3] < v23)
        {
          sub_1D2481C74(v23, isUniquelyReferenced_nonNull_native);
          v11 = v77;
          v25 = sub_1D2481C44(v76);
          if ((v24 & 1) != (v26 & 1))
            goto LABEL_59;
          v20 = v25;
          v4 = (_OWORD *)v72;
          if ((v24 & 1) == 0)
            goto LABEL_30;
LABEL_43:
          v52 = (_OWORD *)(v11[7] + 32 * v20);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
          sub_1D2482278(v73, v52);
LABEL_44:
          swift_bridgeObjectRelease();
          v53 = v76;
          goto LABEL_52;
        }
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v4 = (_OWORD *)v72;
          if ((v19 & 1) != 0)
            goto LABEL_43;
        }
        else
        {
          sub_1D24823E4();
          v11 = v77;
          v4 = (_OWORD *)v72;
          if ((v24 & 1) != 0)
            goto LABEL_43;
        }
LABEL_30:
        v11[(v20 >> 6) + 8] |= 1 << v20;
        sub_1D24820C0(v76, v11[6] + 40 * v20);
        sub_1D2482278(v73, (_OWORD *)(v11[7] + 32 * v20));
        v27 = v11[2];
        v28 = __OFADD__(v27, 1);
        v29 = v27 + 1;
        if (v28)
          goto LABEL_63;
        v11[2] = v29;
        goto LABEL_44;
      }
      sub_1D24DFEA8();
      if ((swift_dynamicCast() & 1) == 0)
      {
        (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 552))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 496));
        sub_1D24820C0(v3, v65);
        v41 = sub_1D24DFCEC();
        v42 = sub_1D24DFE18();
        v43 = os_log_type_enabled(v41, v42);
        v44 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
        v62 = *(_QWORD *)(v0 + 512);
        v45 = *(_QWORD *)(v0 + 496);
        if (v43)
        {
          v46 = v1;
          v47 = swift_slowAlloc();
          v48 = swift_slowAlloc();
          v77 = (_QWORD *)v48;
          *(_DWORD *)v47 = 136315138;
          v49 = sub_1D24DFE84();
          *(_QWORD *)(v47 + 4) = sub_1D2481604(v49, v50, (uint64_t *)&v77);
          swift_bridgeObjectRelease();
          sub_1D2482204(v65);
          _os_log_impl(&dword_1D2419000, v41, v42, "VSAccountUpdateEvent received invalid metadata key: %s", (uint8_t *)v47, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D8236C38](v48, -1, -1);
          v51 = v47;
          v1 = v46;
          v0 = v58;
          MEMORY[0x1D8236C38](v51, -1, -1);

        }
        else
        {

          sub_1D2482204(v65);
        }
        v44(v62, v45);
        v4 = (_OWORD *)v72;
        __swift_destroy_boxed_opaque_existential_0(v72);
        sub_1D2482204(v3);
        v2 = v60;
        v5 = v71;
        if (v10)
          goto LABEL_4;
        goto LABEL_6;
      }
      *v61 = *v66;
      sub_1D2499690();
      sub_1D24DFEB4();
      sub_1D24820FC((uint64_t)v4, (uint64_t)v64);
      v30 = swift_isUniquelyReferenced_nonNull_native();
      v77 = v11;
      v32 = sub_1D2481C44(v68);
      v33 = v11[2];
      v34 = (v31 & 1) == 0;
      v35 = v33 + v34;
      if (__OFADD__(v33, v34))
        goto LABEL_62;
      v36 = v31;
      if (v11[3] >= v35)
      {
        if ((v30 & 1) != 0)
        {
          v4 = (_OWORD *)v72;
          if ((v31 & 1) == 0)
            goto LABEL_37;
        }
        else
        {
          sub_1D24823E4();
          v11 = v77;
          v4 = (_OWORD *)v72;
          if ((v36 & 1) == 0)
            goto LABEL_37;
        }
      }
      else
      {
        sub_1D2481C74(v35, v30);
        v11 = v77;
        v37 = sub_1D2481C44(v68);
        if ((v36 & 1) != (v38 & 1))
        {
LABEL_59:
          sub_1D24DFF98();
          return;
        }
        v32 = v37;
        v4 = (_OWORD *)v72;
        if ((v36 & 1) == 0)
        {
LABEL_37:
          v11[(v32 >> 6) + 8] |= 1 << v32;
          sub_1D24820C0(v68, v11[6] + 40 * v32);
          sub_1D2482278(v64, (_OWORD *)(v11[7] + 32 * v32));
          v39 = v11[2];
          v28 = __OFADD__(v39, 1);
          v40 = v39 + 1;
          if (v28)
            goto LABEL_64;
          v11[2] = v40;
          goto LABEL_51;
        }
      }
      v54 = (_OWORD *)(v11[7] + 32 * v32);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v54);
      sub_1D2482278(v64, v54);
LABEL_51:
      swift_bridgeObjectRelease();
      v53 = v68;
LABEL_52:
      sub_1D2482204(v53);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
      sub_1D2482204(v3);
      v5 = v71;
      if (v10)
        goto LABEL_4;
LABEL_6:
      v14 = v75 + 1;
      if (__OFADD__(v75, 1))
        goto LABEL_61;
      if (v14 < v63)
      {
        v15 = *(_QWORD *)(v59 + 8 * v14);
        if (v15)
          goto LABEL_9;
        v16 = v75 + 2;
        ++v75;
        if (v14 + 1 < v63)
        {
          v15 = *(_QWORD *)(v59 + 8 * v16);
          if (v15)
            goto LABEL_12;
          v75 = v14 + 1;
          if (v14 + 2 < v63)
          {
            v15 = *(_QWORD *)(v59 + 8 * (v14 + 2));
            if (v15)
            {
              v14 += 2;
              goto LABEL_9;
            }
            v16 = v14 + 3;
            v75 = v14 + 2;
            if (v14 + 3 < v63)
              break;
          }
        }
      }
LABEL_23:
      v10 = 0;
      *(_QWORD *)(v2 + 64) = 0;
      *(_OWORD *)(v2 + 32) = 0u;
      *(_OWORD *)(v2 + 48) = 0u;
      *(_OWORD *)v2 = 0u;
      *(_OWORD *)(v2 + 16) = 0u;
    }
    v15 = *(_QWORD *)(v59 + 8 * v16);
    if (v15)
    {
LABEL_12:
      v14 = v16;
LABEL_9:
      v10 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v14 << 6);
      v75 = v14;
      continue;
    }
    break;
  }
  while (1)
  {
    v14 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v14 >= v63)
    {
      v75 = v63 - 1;
      goto LABEL_23;
    }
    v15 = *(_QWORD *)(v59 + 8 * v14);
    ++v16;
    if (v15)
      goto LABEL_9;
  }
LABEL_65:
  __break(1u);
}

uint64_t VSAccountUpdateEvent.init(userAccount:source:updateType:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[141] = a6;
  v6[140] = a5;
  v6[139] = a4;
  v6[138] = a3;
  v6[137] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E868);
  v6[142] = swift_task_alloc();
  v6[143] = swift_task_alloc();
  v8 = sub_1D24DFCBC();
  v6[144] = v8;
  v6[145] = *(_QWORD *)(v8 - 8);
  v6[146] = swift_task_alloc();
  v9 = sub_1D24DFC20();
  v6[147] = v9;
  v6[148] = *(_QWORD *)(v9 - 8);
  v6[149] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E870);
  v6[150] = swift_task_alloc();
  v10 = sub_1D24DFC8C();
  v6[151] = v10;
  v6[152] = *(_QWORD *)(v10 - 8);
  v6[153] = swift_task_alloc();
  v6[154] = swift_task_alloc();
  v6[155] = *a2;
  return swift_task_switch();
}

uint64_t sub_1D24988B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  _OWORD *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t, uint64_t, uint64_t);
  int v86;
  char v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  void *v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _OWORD *v111;
  uint64_t v112;
  uint64_t v113;
  _OWORD *v114;
  uint64_t v115;
  _OWORD *v116;
  uint64_t v117;
  uint64_t v118;
  _OWORD *v119;
  _OWORD *v120;
  _OWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _OWORD *v125;
  _OWORD *v126;
  _OWORD *v127;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;
  uint64_t v131;
  _QWORD v132[2];

  v122 = v0 + 416;
  v125 = (_OWORD *)(v0 + 664);
  v112 = *(_QWORD *)(v0 + 1128);
  v113 = *(_QWORD *)(v0 + 1240);
  v1 = *(_QWORD *)(v0 + 1120);
  v2 = *(_QWORD *)(v0 + 1112);
  v3 = *(_QWORD *)(v0 + 1104);
  v4 = (uint64_t *)sub_1D2497CA8();
  v5 = v4[1];
  v128 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7EB78);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1D24E9970;
  *(_BYTE *)(v0 + 1251) = 1;
  sub_1D2499690();
  v129 = v5;
  swift_bridgeObjectRetain();
  sub_1D24DFEB4();
  v7 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 72) = v3;
  *(_QWORD *)(v6 + 80) = v2;
  *(_BYTE *)(v0 + 1263) = 3;
  v8 = v7;
  sub_1D24DFEB4();
  *(_QWORD *)(v6 + 168) = v8;
  *(_QWORD *)(v6 + 144) = v1;
  *(_QWORD *)(v6 + 152) = v112;
  v9 = sub_1D248EE98(v6);
  *(_QWORD *)&v130 = v113;
  VSUserAccount.accountType.getter((char *)v132);
  *(_BYTE *)(v0 + 1262) = v132[0];
  *(_BYTE *)(v0 + 1260) = 0;
  sub_1D2486878();
  sub_1D24DFDAC();
  sub_1D24DFDAC();
  if (*(_QWORD *)(v0 + 1080) == *(_QWORD *)(v0 + 1088))
  {
    v10 = (_OWORD *)(v0 + 1048);
    v11 = v0 + 56;
    v131 = v8;
    *(_QWORD *)&v130 = sub_1D24DFD70();
    *((_QWORD *)&v130 + 1) = v12;
    *(_BYTE *)(v0 + 1264) = 5;
  }
  else
  {
    v10 = (_OWORD *)(v0 + 888);
    v11 = v0 + 296;
    v131 = v8;
    *(_QWORD *)&v130 = sub_1D24DFD70();
    *((_QWORD *)&v130 + 1) = v13;
    *(_BYTE *)(v0 + 1259) = 5;
  }
  sub_1D24DFEB4();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v132[0] = v9;
  sub_1D24996D4(&v130, v11, isUniquelyReferenced_nonNull_native, v10);
  v15 = v132[0];
  swift_bridgeObjectRelease();
  sub_1D2482204(v11);
  sub_1D24868BC((uint64_t)v10, &qword_1EFC7E7B0);
  v114 = (_OWORD *)(v0 + 600);
  *(_QWORD *)&v130 = *(_QWORD *)(v0 + 1240);
  VSUserAccount.authenticationData.getter();
  if (v16)
  {
    v17 = sub_1D24DFD88();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = 0;
  }
  v117 = v0 + 336;
  v119 = (_OWORD *)(v0 + 696);
  v18 = *(_QWORD *)(v0 + 1240);
  v19 = MEMORY[0x1E0DEB418];
  v131 = MEMORY[0x1E0DEB418];
  *(_QWORD *)&v130 = v17;
  *(_BYTE *)(v0 + 1257) = 12;
  sub_1D24DFEB4();
  v20 = swift_isUniquelyReferenced_nonNull_native();
  v132[0] = v15;
  sub_1D24996D4(&v130, v122, v20, v125);
  v21 = v132[0];
  swift_bridgeObjectRelease();
  sub_1D2482204(v122);
  sub_1D24868BC((uint64_t)v125, &qword_1EFC7E7B0);
  *(_QWORD *)&v130 = v18;
  v22 = VSUserAccount.tierIdentifiers.getter();
  if (v22)
  {
    v23 = *(_QWORD *)(v22 + 16);
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
  }
  v121 = (_OWORD *)(v0 + 632);
  v123 = v0 + 216;
  v126 = (_OWORD *)(v0 + 856);
  v24 = *(_QWORD *)(v0 + 1240);
  v131 = v19;
  *(_QWORD *)&v130 = v23;
  *(_BYTE *)(v0 + 1256) = 10;
  sub_1D24DFEB4();
  v25 = swift_isUniquelyReferenced_nonNull_native();
  v132[0] = v21;
  sub_1D24996D4(&v130, v0 + 496, v25, (_OWORD *)(v0 + 536));
  v26 = v132[0];
  swift_bridgeObjectRelease();
  sub_1D2482204(v0 + 496);
  sub_1D24868BC(v0 + 536, &qword_1EFC7E7B0);
  *(_QWORD *)&v130 = v24;
  v27 = VSUserAccount.modifierIdentifier.getter();
  v29 = MEMORY[0x1E0DEA968];
  v131 = MEMORY[0x1E0DEA968];
  v30 = 0x6E776F6E6B6E75;
  if (v28)
  {
    v30 = v27;
    v31 = v28;
  }
  else
  {
    v31 = 0xE700000000000000;
  }
  v32 = *(_QWORD *)(v0 + 1240);
  *(_QWORD *)&v130 = v30;
  *((_QWORD *)&v130 + 1) = v31;
  *(_BYTE *)(v0 + 1254) = 8;
  sub_1D24DFEB4();
  v33 = swift_isUniquelyReferenced_nonNull_native();
  v132[0] = v26;
  sub_1D24996D4(&v130, v0 + 16, v33, v114);
  v34 = v132[0];
  swift_bridgeObjectRelease();
  sub_1D2482204(v0 + 16);
  sub_1D24868BC((uint64_t)v114, &qword_1EFC7E7B0);
  *(_QWORD *)&v130 = v32;
  v35 = sub_1D248BA20();
  if (v35)
  {
    v36 = v35;
    type metadata accessor for VSMetricAccountUpdateValue(0);
    *(_QWORD *)(v0 + 784) = v37;
    *(_QWORD *)(v0 + 760) = v36;
    v38 = (_OWORD *)(v0 + 728);
    sub_1D2482278((_OWORD *)(v0 + 760), (_OWORD *)(v0 + 728));
  }
  else
  {
    *(_QWORD *)(v0 + 752) = v29;
    *(_QWORD *)(v0 + 728) = 0x6E776F6E6B6E75;
    *(_QWORD *)(v0 + 736) = 0xE700000000000000;
    v38 = (_OWORD *)(v0 + 728);
  }
  v39 = *(_QWORD *)(v0 + 1240);
  *(_BYTE *)(v0 + 1253) = 7;
  sub_1D24DFEB4();
  v40 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v130 = v34;
  sub_1D24996D4(v38, v117, v40, v119);
  v41 = v130;
  swift_bridgeObjectRelease();
  sub_1D2482204(v117);
  sub_1D24868BC((uint64_t)v119, &qword_1EFC7E7B0);
  *(_QWORD *)&v130 = v39;
  v42 = sub_1D248BABC();
  if (v42)
  {
    v43 = v42;
    type metadata accessor for VSMetricAccountUpdateValue(0);
    *(_QWORD *)(v0 + 944) = v44;
    *(_QWORD *)(v0 + 920) = v43;
    sub_1D2482278((_OWORD *)(v0 + 920), v121);
  }
  else
  {
    *(_QWORD *)(v0 + 656) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v0 + 632) = 0x6E776F6E6B6E75;
    *(_QWORD *)(v0 + 640) = 0xE700000000000000;
  }
  v115 = v0 + 96;
  v116 = (_OWORD *)(v0 + 952);
  v118 = v0 + 256;
  v120 = (_OWORD *)(v0 + 984);
  v45 = *(_QWORD *)(v0 + 1240);
  *(_BYTE *)(v0 + 1250) = 2;
  sub_1D24DFEB4();
  v46 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v130 = v41;
  sub_1D24996D4(v121, v123, v46, v126);
  v47 = v130;
  swift_bridgeObjectRelease();
  sub_1D2482204(v123);
  sub_1D24868BC((uint64_t)v126, &qword_1EFC7E7B0);
  *(_QWORD *)&v130 = v45;
  VSUserAccount.billingIdentifier.getter();
  if (v48 && (v49 = sub_1D24DFD88(), swift_bridgeObjectRelease(), v49 > 0))
  {
    v50 = 0xE400000000000000;
    v51 = 1702195828;
  }
  else
  {
    v50 = 0xE500000000000000;
    v51 = 0x65736C6166;
  }
  v124 = v0 + 376;
  v127 = (_OWORD *)(v0 + 824);
  v52 = *(_QWORD *)(v0 + 1240);
  v53 = *(_QWORD *)(v0 + 1216);
  v54 = *(_QWORD *)(v0 + 1208);
  v55 = *(_QWORD *)(v0 + 1200);
  v131 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v130 = v51;
  *((_QWORD *)&v130 + 1) = v50;
  *(_BYTE *)(v0 + 1248) = 11;
  sub_1D24DFEB4();
  v56 = swift_isUniquelyReferenced_nonNull_native();
  v132[0] = v47;
  sub_1D24996D4(&v130, v0 + 176, v56, (_OWORD *)(v0 + 1016));
  v57 = v132[0];
  swift_bridgeObjectRelease();
  sub_1D2482204(v0 + 176);
  sub_1D24868BC(v0 + 1016, &qword_1EFC7E7B0);
  *(_QWORD *)&v130 = v52;
  VSUserAccount.subscriptionBillingCycleEndDate.getter(v55);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v55, 1, v54) == 1)
  {
    sub_1D24868BC(*(_QWORD *)(v0 + 1200), &qword_1EFC7E870);
  }
  else
  {
    v110 = v0 + 136;
    v111 = (_OWORD *)(v0 + 792);
    v58 = *(_QWORD *)(v0 + 1224);
    v59 = *(_QWORD *)(v0 + 1216);
    v104 = *(_QWORD *)(v0 + 1232);
    v105 = *(_QWORD *)(v0 + 1208);
    v60 = *(_QWORD *)(v0 + 1192);
    v109 = *(_QWORD *)(v0 + 1176);
    v61 = *(_QWORD *)(v0 + 1168);
    v106 = *(_QWORD *)(v0 + 1160);
    v107 = *(_QWORD *)(v0 + 1152);
    v108 = *(_QWORD *)(v0 + 1184);
    (*(void (**)(void))(v59 + 32))();
    sub_1D24DFCA4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC7E880);
    v62 = sub_1D24DFCB0();
    v63 = *(_QWORD *)(v62 - 8);
    v64 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
    v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = xmmword_1D24E8C70;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v63 + 104))(v65 + v64, *MEMORY[0x1E0CB1130], v62);
    sub_1D24858A4(v65);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1D24DFC80();
    sub_1D24DFC98();
    swift_bridgeObjectRelease();
    v66 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
    v66(v58, v105);
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v61, v107);
    v67 = sub_1D24DFC14();
    LOBYTE(v58) = v68;
    (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v60, v109);
    if ((v58 & 1) != 0)
      v69 = 0;
    else
      v69 = v67;
    v131 = MEMORY[0x1E0DEB418];
    *(_QWORD *)&v130 = v69;
    *(_BYTE *)(v0 + 1261) = 9;
    sub_1D24DFEB4();
    v70 = swift_isUniquelyReferenced_nonNull_native();
    v132[0] = v57;
    sub_1D24996D4(&v130, v110, v70, v111);
    v57 = v132[0];
    swift_bridgeObjectRelease();
    sub_1D2482204(v110);
    sub_1D24868BC((uint64_t)v111, &qword_1EFC7E7B0);
    v66(v104, v105);
  }
  *(_QWORD *)&v130 = *(_QWORD *)(v0 + 1240);
  v71 = v130;
  v72 = VSUserAccount.sourceIdentifier.getter();
  v73 = MEMORY[0x1E0DEA968];
  v131 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v130 = v72;
  *((_QWORD *)&v130 + 1) = v74;
  *(_BYTE *)(v0 + 1249) = 1;
  sub_1D24DFEB4();
  v75 = swift_isUniquelyReferenced_nonNull_native();
  v132[0] = v57;
  sub_1D24996D4(&v130, v115, v75, v116);
  v76 = v132[0];
  swift_bridgeObjectRelease();
  sub_1D2482204(v115);
  sub_1D24868BC((uint64_t)v116, &qword_1EFC7E7B0);
  *(_QWORD *)&v130 = v71;
  VSUserAccount.sourceType.getter(v132);
  v77 = *(_QWORD *)(v0 + 1240);
  v78 = *(_QWORD *)(v0 + 1144);
  v79 = sub_1D24DFD70();
  v131 = v73;
  *(_QWORD *)&v130 = v79;
  *((_QWORD *)&v130 + 1) = v80;
  *(_BYTE *)(v0 + 1252) = 0;
  sub_1D24DFEB4();
  v81 = swift_isUniquelyReferenced_nonNull_native();
  v132[0] = v76;
  sub_1D24996D4(&v130, v118, v81, v120);
  v82 = v132[0];
  swift_bridgeObjectRelease();
  sub_1D2482204(v118);
  sub_1D24868BC((uint64_t)v120, &qword_1EFC7E7B0);
  *(_QWORD *)&v130 = v77;
  VSUserAccount.updateURL.getter(v78);
  v83 = sub_1D24DFC5C();
  v84 = *(_QWORD *)(v83 - 8);
  v85 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
  v86 = v85(v78, 1, v83);
  sub_1D24868BC(v78, &qword_1EFC7E868);
  v87 = 0;
  if (v86 != 1)
  {
    v88 = *(_QWORD *)(v0 + 1136);
    *(_QWORD *)&v130 = *(_QWORD *)(v0 + 1240);
    VSUserAccount.updateURL.getter(v88);
    v89 = v85(v88, 1, v83);
    v90 = *(_QWORD *)(v0 + 1136);
    if (v89 == 1)
    {
      sub_1D24868BC(*(_QWORD *)(v0 + 1136), &qword_1EFC7E868);
      v87 = 1;
    }
    else
    {
      v91 = sub_1D24DFC38();
      v93 = v92;
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v90, v83);
      if (v91 || v93 != 0xE000000000000000)
      {
        v94 = sub_1D24DFF74();
        swift_bridgeObjectRelease();
        v87 = v94 ^ 1;
      }
      else
      {
        swift_bridgeObjectRelease();
        v87 = 0;
      }
    }
  }
  v95 = *(void **)(v0 + 1240);
  v131 = MEMORY[0x1E0DEAFA0];
  LOBYTE(v130) = v87 & 1;
  *(_BYTE *)(v0 + 1255) = 6;
  sub_1D24DFEB4();
  v96 = swift_isUniquelyReferenced_nonNull_native();
  v132[0] = v82;
  sub_1D24996D4(&v130, v124, v96, v127);
  v97 = v132[0];
  swift_bridgeObjectRelease();
  sub_1D2482204(v124);
  sub_1D24868BC((uint64_t)v127, &qword_1EFC7E7B0);
  *(_QWORD *)&v130 = v95;
  v98 = VSUserAccount.accountProviderIdentifier.getter();
  v100 = v99;

  if (v100)
  {
    v131 = v73;
    *(_QWORD *)&v130 = v98;
    *((_QWORD *)&v130 + 1) = v100;
    *(_BYTE *)(v0 + 1258) = 4;
    sub_1D24DFEB4();
    v101 = swift_isUniquelyReferenced_nonNull_native();
    v132[0] = v97;
    sub_1D24996D4(&v130, v0 + 456, v101, (_OWORD *)(v0 + 568));
    v97 = v132[0];
    swift_bridgeObjectRelease();
    sub_1D2482204(v0 + 456);
    sub_1D24868BC(v0 + 568, &qword_1EFC7E7B0);
  }
  v102 = *(_QWORD *)(v0 + 1096);
  strcpy((char *)v102, "account_update");
  *(_BYTE *)(v102 + 15) = -18;
  *(_QWORD *)(v102 + 16) = v97;
  *(_QWORD *)(v102 + 24) = v128;
  *(_QWORD *)(v102 + 32) = v129;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2499648()
{
  char v1;

  VSUserAccount.sourceType.getter(&v1);
  return sub_1D24DFD70();
}

unint64_t sub_1D2499690()
{
  unint64_t result;

  result = qword_1EFC7EC70;
  if (!qword_1EFC7EC70)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSAccountUpdateKeys, &type metadata for VSAccountUpdateKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC7EC70);
  }
  return result;
}

_OWORD *sub_1D24996D4@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _OWORD *a4@<X8>)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *result;
  unint64_t v20;
  char v21;
  _BYTE v22[40];

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1D2481C44(a2);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a3 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        sub_1D2482278((_OWORD *)(v18[7] + 32 * v12), a4);
        return sub_1D2482278(a1, (_OWORD *)(v18[7] + 32 * v12));
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a3 & 1) == 0)
    {
      sub_1D24823E4();
      goto LABEL_7;
    }
    sub_1D2481C74(v15, a3 & 1);
    v20 = sub_1D2481C44(a2);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D24820C0(a2, (uint64_t)v22);
      result = sub_1D24822A8(v12, (uint64_t)v22, a1, v18);
      *a4 = 0u;
      a4[1] = 0u;
      return result;
    }
  }
  result = (_OWORD *)sub_1D24DFF98();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for VSAccountUpdateEvent()
{
  return &type metadata for VSAccountUpdateEvent;
}

VideoSubscriberAccount::VSAccountUpdateKeys_optional __swiftcall VSAccountUpdateKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  VideoSubscriberAccount::VSAccountUpdateKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D24DFF5C();
  result.value = swift_bridgeObjectRelease();
  v5 = 13;
  if (v3 < 0xD)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static VSAccountUpdateKeys.allCases.getter()
{
  return &unk_1E93A31D0;
}

uint64_t VSAccountUpdateKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D24998C8 + 4 * aI_3[*v0]))(0x7954656372756F73, 0xEA00000000006570);
}

uint64_t sub_1D24998C8()
{
  return 0x4449656372756F73;
}

uint64_t sub_1D24998E0()
{
  return 0x65707954697061;
}

uint64_t sub_1D24998F8()
{
  return 0x7079546574697277;
}

uint64_t sub_1D2499914()
{
  return 0x72656469766F7270;
}

uint64_t sub_1D2499930()
{
  return 0x54746E756F636361;
}

unint64_t sub_1D2499950()
{
  return 0xD000000000000011;
}

uint64_t sub_1D2499970()
{
  return 0x7265696669646F6DLL;
}

uint64_t sub_1D2499998()
{
  return 7107700;
}

uint64_t sub_1D24999A8()
{
  return 0x69547265626D756ELL;
}

unint64_t sub_1D24999C8()
{
  return 0xD000000000000018;
}

uint64_t sub_1D24999F0()
{
  return sub_1D2499A44();
}

unint64_t sub_1D2499A00()
{
  unint64_t result;

  result = qword_1EFC7EC88;
  if (!qword_1EFC7EC88)
  {
    result = MEMORY[0x1D8236BCC](&protocol conformance descriptor for VSAccountUpdateKeys, &type metadata for VSAccountUpdateKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC7EC88);
  }
  return result;
}

uint64_t sub_1D2499A44()
{
  uint64_t updated;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  updated = VSAccountUpdateKeys.rawValue.getter();
  v2 = v1;
  if (updated == VSAccountUpdateKeys.rawValue.getter() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1D24DFF74();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1D2499AD8()
{
  sub_1D24DFFA4();
  VSAccountUpdateKeys.rawValue.getter();
  sub_1D24DFD7C();
  swift_bridgeObjectRelease();
  return sub_1D24DFFBC();
}

uint64_t sub_1D2499B3C()
{
  VSAccountUpdateKeys.rawValue.getter();
  sub_1D24DFD7C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2499B8C()
{
  sub_1D24DFFA4();
  VSAccountUpdateKeys.rawValue.getter();
  sub_1D24DFD7C();
  swift_bridgeObjectRelease();
  return sub_1D24DFFBC();
}

VideoSubscriberAccount::VSAccountUpdateKeys_optional sub_1D2499BEC(Swift::String *a1)
{
  return VSAccountUpdateKeys.init(rawValue:)(*a1);
}

uint64_t sub_1D2499BF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = VSAccountUpdateKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1D2499C20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFC7EC90;
  if (!qword_1EFC7EC90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC7EC98);
    result = MEMORY[0x1D8236BCC](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFC7EC90);
  }
  return result;
}

void sub_1D2499C6C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E93A31D0;
}

uint64_t getEnumTagSinglePayload for VSAccountUpdateKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VSAccountUpdateKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1D2499D58 + 4 * byte_1D24E9DD2[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1D2499D8C + 4 * byte_1D24E9DCD[v4]))();
}

uint64_t sub_1D2499D8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2499D94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2499D9CLL);
  return result;
}

uint64_t sub_1D2499DA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2499DB0);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1D2499DB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2499DBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VSAccountUpdateKeys()
{
  return &type metadata for VSAccountUpdateKeys;
}

uint64_t sub_1D2499DD8()
{
  return 0x74656D5F72657375;
}

uint64_t VSUserMetadataEvent.eventType.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSUserMetadataEvent.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VSUserMetadataEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*VSUserMetadataEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSUserMetadataEvent.topic.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSUserMetadataEvent.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*VSUserMetadataEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSUserMetadataEvent.init(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[60] = a1;
  v2[61] = a2;
  v3 = sub_1D24DFD04();
  v2[62] = v3;
  v2[63] = *(_QWORD *)(v3 - 8);
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D2499F48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;

  v1 = v0[65];
  v2 = v0[62];
  v3 = v0[63];
  v4 = sub_1D2497CA8();
  v0[66] = *v4;
  v0[67] = v4[1];
  swift_bridgeObjectRetain();
  v5 = sub_1D249A8C8();
  v0[68] = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[69] = v6;
  v6(v1, v5, v2);
  v7 = sub_1D24DFCEC();
  v8 = sub_1D24DFE0C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1D2419000, v7, v8, "VSUserMetadataEvent", v9, 2u);
    MEMORY[0x1D8236C38](v9, -1, -1);
  }
  v10 = v0[65];
  v11 = v0[62];
  v12 = v0[63];

  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v0[70] = v13;
  v13(v10, v11);
  v14 = (_QWORD *)swift_task_alloc();
  v0[71] = v14;
  *v14 = v0;
  v14[1] = sub_1D249A074;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1D249A074(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 576) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_1D249A0D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  __int128 v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  char v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  BOOL v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  uint64_t v53;
  _OWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  int64_t v63;
  _OWORD *v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  _OWORD *v73;
  _OWORD *v74;
  int64_t v75;
  uint64_t v76;
  _QWORD *v77;

  v1 = v0 + 16;
  v2 = v0 + 88;
  v3 = v0 + 160;
  v75 = 0;
  v76 = v0 + 200;
  v65 = v0 + 280;
  v68 = v0 + 240;
  v73 = (_OWORD *)(v0 + 352);
  v4 = (_OWORD *)(v0 + 384);
  v64 = (_OWORD *)(v0 + 448);
  v61 = (_BYTE *)(v0 + 584);
  v5 = (_BYTE *)(v0 + 585);
  v66 = (_BYTE *)(v0 + 587);
  v67 = (_BYTE *)(v0 + 586);
  v6 = *(_QWORD *)(v0 + 488);
  v7 = *(_QWORD *)(v6 + 64);
  v59 = v6 + 64;
  v70 = v6;
  v8 = -1;
  v9 = -1 << *(_BYTE *)(v70 + 32);
  if (-v9 < 64)
    v8 = ~(-1 << -(char)v9);
  v10 = v8 & v7;
  v69 = v0 + 128;
  v74 = (_OWORD *)(v0 + 56);
  v63 = (unint64_t)(63 - v9) >> 6;
  v11 = *(_QWORD **)(v0 + 576);
  v72 = v0 + 384;
  v71 = (_BYTE *)(v0 + 585);
  v60 = v0 + 88;
  if ((v8 & v7) == 0)
    goto LABEL_6;
LABEL_4:
  v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  v13 = v12 | (v75 << 6);
  while (2)
  {
    sub_1D24820C0(*(_QWORD *)(v70 + 48) + 40 * v13, v2);
    sub_1D24820FC(*(_QWORD *)(v70 + 56) + 32 * v13, v69);
    while (1)
    {
      sub_1D2482138(v2, v1);
      if (!*(_QWORD *)(v0 + 40))
      {
        v55 = *(_QWORD *)(v0 + 536);
        v56 = *(_QWORD *)(v0 + 528);
        v57 = *(_QWORD *)(v0 + 480);
        swift_release();
        strcpy((char *)v57, "user_metadata");
        *(_WORD *)(v57 + 14) = -4864;
        *(_QWORD *)(v57 + 16) = v11;
        *(_QWORD *)(v57 + 24) = v56;
        *(_QWORD *)(v57 + 32) = v55;
        swift_task_dealloc();
        swift_task_dealloc();
        (*(void (**)(void))(v0 + 8))();
        return;
      }
      v17 = *(_OWORD *)(v1 + 16);
      *(_OWORD *)v3 = *(_OWORD *)v1;
      *(_OWORD *)(v3 + 16) = v17;
      *(_QWORD *)(v3 + 32) = *(_QWORD *)(v1 + 32);
      sub_1D2482278(v74, v4);
      sub_1D24DFEA8();
      if ((swift_dynamicCast() & 1) != 0)
      {
        *v67 = *v5;
        sub_1D24825C8();
        sub_1D24DFEB4();
        sub_1D24820FC((uint64_t)v4, (uint64_t)v73);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v77 = v11;
        v20 = sub_1D2481C44(v76);
        v21 = v11[2];
        v22 = (v19 & 1) == 0;
        v23 = v21 + v22;
        if (__OFADD__(v21, v22))
        {
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
        v24 = v19;
        if (v11[3] < v23)
        {
          sub_1D2481C74(v23, isUniquelyReferenced_nonNull_native);
          v11 = v77;
          v25 = sub_1D2481C44(v76);
          if ((v24 & 1) != (v26 & 1))
            goto LABEL_59;
          v20 = v25;
          v4 = (_OWORD *)v72;
          if ((v24 & 1) == 0)
            goto LABEL_30;
LABEL_43:
          v52 = (_OWORD *)(v11[7] + 32 * v20);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
          sub_1D2482278(v73, v52);
LABEL_44:
          swift_bridgeObjectRelease();
          v53 = v76;
          goto LABEL_52;
        }
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v4 = (_OWORD *)v72;
          if ((v19 & 1) != 0)
            goto LABEL_43;
        }
        else
        {
          sub_1D24823E4();
          v11 = v77;
          v4 = (_OWORD *)v72;
          if ((v24 & 1) != 0)
            goto LABEL_43;
        }
LABEL_30:
        v11[(v20 >> 6) + 8] |= 1 << v20;
        sub_1D24820C0(v76, v11[6] + 40 * v20);
        sub_1D2482278(v73, (_OWORD *)(v11[7] + 32 * v20));
        v27 = v11[2];
        v28 = __OFADD__(v27, 1);
        v29 = v27 + 1;
        if (v28)
          goto LABEL_63;
        v11[2] = v29;
        goto LABEL_44;
      }
      sub_1D24DFEA8();
      if ((swift_dynamicCast() & 1) == 0)
      {
        (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 552))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 496));
        sub_1D24820C0(v3, v65);
        v41 = sub_1D24DFCEC();
        v42 = sub_1D24DFE18();
        v43 = os_log_type_enabled(v41, v42);
        v44 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
        v62 = *(_QWORD *)(v0 + 512);
        v45 = *(_QWORD *)(v0 + 496);
        if (v43)
        {
          v46 = v1;
          v47 = swift_slowAlloc();
          v48 = swift_slowAlloc();
          v77 = (_QWORD *)v48;
          *(_DWORD *)v47 = 136315138;
          v49 = sub_1D24DFE84();
          *(_QWORD *)(v47 + 4) = sub_1D2481604(v49, v50, (uint64_t *)&v77);
          swift_bridgeObjectRelease();
          sub_1D2482204(v65);
          _os_log_impl(&dword_1D2419000, v41, v42, "VSUserMetadataEvent received invalid metadata key: %s", (uint8_t *)v47, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D8236C38](v48, -1, -1);
          v51 = v47;
          v1 = v46;
          v0 = v58;
          MEMORY[0x1D8236C38](v51, -1, -1);

        }
        else
        {

          sub_1D2482204(v65);
        }
        v44(v62, v45);
        v4 = (_OWORD *)v72;
        __swift_destroy_boxed_opaque_existential_0(v72);
        sub_1D2482204(v3);
        v2 = v60;
        v5 = v71;
        if (v10)
          goto LABEL_4;
        goto LABEL_6;
      }
      *v61 = *v66;
      sub_1D2493A30();
      sub_1D24DFEB4();
      sub_1D24820FC((uint64_t)v4, (uint64_t)v64);
      v30 = swift_isUniquelyReferenced_nonNull_native();
      v77 = v11;
      v32 = sub_1D2481C44(v68);
      v33 = v11[2];
      v34 = (v31 & 1) == 0;
      v35 = v33 + v34;
      if (__OFADD__(v33, v34))
        goto LABEL_62;
      v36 = v31;
      if (v11[3] >= v35)
      {
        if ((v30 & 1) != 0)
        {
          v4 = (_OWORD *)v72;
          if ((v31 & 1) == 0)
            goto LABEL_37;
        }
        else
        {
          sub_1D24823E4();
          v11 = v77;
          v4 = (_OWORD *)v72;
          if ((v36 & 1) == 0)
            goto LABEL_37;
        }
      }
      else
      {
        sub_1D2481C74(v35, v30);
        v11 = v77;
        v37 = sub_1D2481C44(v68);
        if ((v36 & 1) != (v38 & 1))
        {
LABEL_59:
          sub_1D24DFF98();
          return;
        }
        v32 = v37;
        v4 = (_OWORD *)v72;
        if ((v36 & 1) == 0)
        {
LABEL_37:
          v11[(v32 >> 6) + 8] |= 1 << v32;
          sub_1D24820C0(v68, v11[6] + 40 * v32);
          sub_1D2482278(v64, (_OWORD *)(v11[7] + 32 * v32));
          v39 = v11[2];
          v28 = __OFADD__(v39, 1);
          v40 = v39 + 1;
          if (v28)
            goto LABEL_64;
          v11[2] = v40;
          goto LABEL_51;
        }
      }
      v54 = (_OWORD *)(v11[7] + 32 * v32);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v54);
      sub_1D2482278(v64, v54);
LABEL_51:
      swift_bridgeObjectRelease();
      v53 = v68;
LABEL_52:
      sub_1D2482204(v53);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
      sub_1D2482204(v3);
      v5 = v71;
      if (v10)
        goto LABEL_4;
LABEL_6:
      v14 = v75 + 1;
      if (__OFADD__(v75, 1))
        goto LABEL_61;
      if (v14 < v63)
      {
        v15 = *(_QWORD *)(v59 + 8 * v14);
        if (v15)
          goto LABEL_9;
        v16 = v75 + 2;
        ++v75;
        if (v14 + 1 < v63)
        {
          v15 = *(_QWORD *)(v59 + 8 * v16);
          if (v15)
            goto LABEL_12;
          v75 = v14 + 1;
          if (v14 + 2 < v63)
          {
            v15 = *(_QWORD *)(v59 + 8 * (v14 + 2));
            if (v15)
            {
              v14 += 2;
              goto LABEL_9;
            }
            v16 = v14 + 3;
            v75 = v14 + 2;
            if (v14 + 3 < v63)
              break;
          }
        }
      }
LABEL_23:
      v10 = 0;
      *(_QWORD *)(v2 + 64) = 0;
      *(_OWORD *)(v2 + 32) = 0u;
      *(_OWORD *)(v2 + 48) = 0u;
      *(_OWORD *)v2 = 0u;
      *(_OWORD *)(v2 + 16) = 0u;
    }
    v15 = *(_QWORD *)(v59 + 8 * v16);
    if (v15)
    {
LABEL_12:
      v14 = v16;
LABEL_9:
      v10 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v14 << 6);
      v75 = v14;
      continue;
    }
    break;
  }
  while (1)
  {
    v14 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v14 >= v63)
    {
      v75 = v63 - 1;
      goto LABEL_23;
    }
    v15 = *(_QWORD *)(v59 + 8 * v14);
    ++v16;
    if (v15)
      goto LABEL_9;
  }
LABEL_65:
  __break(1u);
}

ValueMetadata *type metadata accessor for VSUserMetadataEvent()
{
  return &type metadata for VSUserMetadataEvent;
}

uint64_t sub_1D249A8B4(uint64_t a1)
{
  return sub_1D249A92C(a1, qword_1EFC81EB8);
}

uint64_t sub_1D249A8C8()
{
  return sub_1D249A9C8(&qword_1EFC81EB0, (uint64_t)qword_1EFC81EB8);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t debugLog.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D249AA24(&qword_1EFC81EB0, (uint64_t)qword_1EFC81EB8, a1);
}

uint64_t sub_1D249A918(uint64_t a1)
{
  return sub_1D249A92C(a1, qword_1EFC81ED8);
}

uint64_t sub_1D249A92C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1D24DFD04();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  sub_1D24DFD70();
  sub_1D24DFD70();
  return sub_1D24DFCF8();
}

uint64_t sub_1D249A9AC()
{
  return sub_1D249A9C8(&qword_1EFC81ED0, (uint64_t)qword_1EFC81ED8);
}

uint64_t sub_1D249A9C8(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = sub_1D24DFD04();
  return __swift_project_value_buffer(v3, a2);
}

uint64_t errorLog.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D249AA24(&qword_1EFC81ED0, (uint64_t)qword_1EFC81ED8, a1);
}

uint64_t sub_1D249AA24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1D24DFD04();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

Swift::Void __swiftcall VSMetricsEventProtocol.record()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_0;
  void (*v7)(uint64_t *);
  uint64_t v8[5];

  v3 = v1;
  v4 = v0;
  v5 = *sub_1D248E3CC();
  v8[3] = v4;
  v8[4] = v3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(boxed_opaque_existential_0, v2, v4);
  v7 = *(void (**)(uint64_t *))(*(_QWORD *)v5 + 96);
  swift_retain();
  v7(v8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
}

uint64_t sub_1D249AB50()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1D24815B4;
  return swift_task_switch();
}

uint64_t static VSMetricsEventProtocol.generateBaseFields()()
{
  return swift_task_switch();
}

uint64_t sub_1D249ABBC()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  char isUniquelyReferenced_nonNull_native;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v1 = sub_1D248EE98(MEMORY[0x1E0DEE9D8]);
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedAccountStore);
  v3 = objc_msgSend(v2, sel_firstAccount);

  if (v3)
  {
    v4 = objc_msgSend(v3, sel_identityProviderID);

    v5 = objc_msgSend(v4, sel_object);
    if (v5)
    {
      *(_BYTE *)(v0 + 56) = 3;
      sub_1D24825C8();
      sub_1D24DFEB4();
      *(_QWORD *)(v0 + 112) = sub_1D249B1D8();
      *(_QWORD *)(v0 + 88) = v5;
      sub_1D2482278((_OWORD *)(v0 + 88), (_OWORD *)(v0 + 56));
      v6 = v5;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1D2481F88((_OWORD *)(v0 + 56), v0 + 16, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      sub_1D2482204(v0 + 16);

    }
  }
  *(_BYTE *)(v0 + 56) = 4;
  sub_1D24825C8();
  sub_1D24DFEB4();
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  v10 = objc_msgSend(v8, sel_userAgentForProcessInfo_, v9);

  v11 = sub_1D24DFD70();
  v13 = v12;

  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 112) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 88) = v11;
  *(_QWORD *)(v0 + 96) = v13;
  sub_1D2482278((_OWORD *)(v0 + 88), (_OWORD *)(v0 + 56));
  v15 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D2481F88((_OWORD *)(v0 + 56), v0 + 16, v15);
  swift_bridgeObjectRelease();
  sub_1D2482204(v0 + 16);
  v16 = objc_msgSend((id)objc_opt_self(), sel_ams_sharedAccountStoreForMediaType_, 0);
  v17 = objc_msgSend(v16, sel_ams_activeiTunesAccount);

  if (v17)
  {
    *(_BYTE *)(v0 + 56) = 5;
    sub_1D24DFEB4();
    v18 = objc_msgSend(v17, sel_ams_storefront);
    if (v18)
    {
      v19 = v18;
      v20 = sub_1D24DFD70();
      v22 = v21;

      *(_QWORD *)(v0 + 80) = v14;
      *(_QWORD *)(v0 + 56) = v20;
      *(_QWORD *)(v0 + 64) = v22;
      sub_1D2482278((_OWORD *)(v0 + 56), (_OWORD *)(v0 + 88));
      v23 = swift_isUniquelyReferenced_nonNull_native();
      sub_1D2481F88((_OWORD *)(v0 + 88), v0 + 16, v23);
      swift_bridgeObjectRelease();
      sub_1D2482204(v0 + 16);

      return (*(uint64_t (**)(unint64_t))(v0 + 8))(v1);
    }
    sub_1D249AF28(v0 + 16, (_OWORD *)(v0 + 88));
    sub_1D2482204(v0 + 16);
    sub_1D2482238(v0 + 88);

  }
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v1);
}

double sub_1D249AF28@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1D2481C44(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D24823E4();
      v9 = v11;
    }
    sub_1D2482204(*(_QWORD *)(v9 + 48) + 40 * v6);
    sub_1D2482278((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_1D249B010(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

unint64_t sub_1D249B010(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _BYTE v28[40];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1D24DFE78();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1D24820C0(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        v10 = sub_1D24DFE90();
        result = sub_1D2482204((uint64_t)v28);
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = *(_QWORD *)(a2 + 48);
            v15 = v14 + 40 * v3;
            v16 = (__int128 *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              v17 = *v16;
              v18 = v16[1];
              *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
              *(_OWORD *)v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_OWORD *)(v19 + 32 * v3);
            v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 2))
            {
              v9 = v21[1];
              *v20 = *v21;
              v20[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D249B1D8()
{
  unint64_t result;

  result = qword_1EFC7ECB8;
  if (!qword_1EFC7ECB8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFC7ECB8);
  }
  return result;
}

uint64_t dispatch thunk of VSMetricsEventProtocol.eventType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of VSMetricsEventProtocol.eventData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of VSMetricsEventProtocol.eventData.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of VSMetricsEventProtocol.eventData.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of VSMetricsEventProtocol.topic.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of VSMetricsEventProtocol.record()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of static VSMetricsEventProtocol.generateBaseFields()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 56) + *(_QWORD *)(a2 + 56));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D24876E4;
  return v7(a1, a2);
}

unint64_t sub_1D249B2B0()
{
  return 0xD000000000000019;
}

uint64_t VSProhibitedTemplateEvent.eventType.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSProhibitedTemplateEvent.eventData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VSProhibitedTemplateEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*VSProhibitedTemplateEvent.eventData.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSProhibitedTemplateEvent.topic.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VSProhibitedTemplateEvent.topic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*VSProhibitedTemplateEvent.topic.modify())()
{
  return VSWaitForDebuggerUntilDate;
}

uint64_t VSProhibitedTemplateEvent.init(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[60] = a1;
  v2[61] = a2;
  v3 = sub_1D24DFD04();
  v2[62] = v3;
  v2[63] = *(_QWORD *)(v3 - 8);
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D249B418()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;

  v1 = v0[65];
  v2 = v0[62];
  v3 = v0[63];
  v4 = sub_1D2497CA8();
  v0[66] = *v4;
  v0[67] = v4[1];
  swift_bridgeObjectRetain();
  v5 = sub_1D249A8C8();
  v0[68] = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[69] = v6;
  v6(v1, v5, v2);
  v7 = sub_1D24DFCEC();
  v8 = sub_1D24DFE0C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1D2419000, v7, v8, "VSProhibitedTemplateEvent", v9, 2u);
    MEMORY[0x1D8236C38](v9, -1, -1);
  }
  v10 = v0[65];
  v11 = v0[62];
  v12 = v0[63];

  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v0[70] = v13;
  v13(v10, v11);
  v14 = (_QWORD *)swift_task_alloc();
  v0[71] = v14;
  *v14 = v0;
  v14[1] = sub_1D249B544;
  return static VSMetricsEventProtocol.generateBaseFields()();
}

uint64_t sub_1D249B544(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 576) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_1D249B5A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  __int128 v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  char v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  BOOL v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  uint64_t v53;
  _OWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  int64_t v63;
  _OWORD *v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  _OWORD *v73;
  _OWORD *v74;
  int64_t v75;
  uint64_t v76;
  _QWORD *v77;

  v1 = v0 + 16;
  v2 = v0 + 88;
  v3 = v0 + 160;
  v75 = 0;
  v76 = v0 + 200;
  v65 = v0 + 280;
  v68 = v0 + 240;
  v73 = (_OWORD *)(v0 + 352);
  v4 = (_OWORD *)(v0 + 384);
  v64 = (_OWORD *)(v0 + 448);
  v61 = (_BYTE *)(v0 + 584);
  v5 = (_BYTE *)(v0 + 585);
  v66 = (_BYTE *)(v0 + 587);
  v67 = (_BYTE *)(v0 + 586);
  v6 = *(_QWORD *)(v0 + 488);
  v7 = *(_QWORD *)(v6 + 64);
  v59 = v6 + 64;
  v70 = v6;
  v8 = -1;
  v9 = -1 << *(_BYTE *)(v70 + 32);
  if (-v9 < 64)
    v8 = ~(-1 << -(char)v9);
  v10 = v8 & v7;
  v69 = v0 + 128;
  v74 = (_OWORD *)(v0 + 56);
  v63 = (unint64_t)(63 - v9) >> 6;
  v11 = *(_QWORD **)(v0 + 576);
  v72 = v0 + 384;
  v71 = (_BYTE *)(v0 + 585);
  v60 = v0 + 88;
  if ((v8 & v7) == 0)
    goto LABEL_6;
LABEL_4:
  v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  v13 = v12 | (v75 << 6);
  while (2)
  {
    sub_1D24820C0(*(_QWORD *)(v70 + 48) + 40 * v13, v2);
    sub_1D24820FC(*(_QWORD *)(v70 + 56) + 32 * v13, v69);
    while (1)
    {
      sub_1D2482138(v2, v1);
      if (!*(_QWORD *)(v0 + 40))
      {
        v55 = *(_QWORD *)(v0 + 536);
        v56 = *(_QWORD *)(v0 + 528);
        v57 = *(_QWORD **)(v0 + 480);
        swift_release();
        *v57 = 0xD000000000000019;
        v57[1] = 0x80000001D2503820;
        v57[2] = v11;
        v57[3] = v56;
        v57[4] = v55;
        swift_task_dealloc();
        swift_task_dealloc();
        (*(void (**)(void))(v0 + 8))();
        return;
      }
      v17 = *(_OWORD *)(v1 + 16);
      *(_OWORD *)v3 = *(_OWORD *)v1;
      *(_OWORD *)(v3 + 16) = v17;
      *(_QWORD *)(v3 + 32) = *(_QWORD *)(v1 + 32);
      sub_1D2482278(v74, v4);
      sub_1D24DFEA8();
      if ((swift_dynamicCast() & 1) != 0)
      {
        *v67 = *v5;
        sub_1D24825C8();
        sub_1D24DFEB4();
        sub_1D24820FC((uint64_t)v4, (uint64_t)v73);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v77 = v11;
        v20 = sub_1D2481C44(v76);
        v21 = v11[2];
        v22 = (v19 & 1) == 0;
        v23 = v21 + v22;
        if (__OFADD__(v21, v22))
        {
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
        v24 = v19;
        if (v11[3] < v23)
        {
          sub_1D2481C74(v23, isUniquelyReferenced_nonNull_native);
          v11 = v77;
          v25 = sub_1D2481C44(v76);
          if ((v24 & 1) != (v26 & 1))
            goto LABEL_59;
          v20 = v25;
          v4 = (_OWORD *)v72;
          if ((v24 & 1) == 0)
            goto LABEL_30;
LABEL_43:
          v52 = (_OWORD *)(v11[7] + 32 * v20);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
          sub_1D2482278(v73, v52);
LABEL_44:
          swift_bridgeObjectRelease();
          v53 = v76;
          goto LABEL_52;
        }
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v4 = (_OWORD *)v72;
          if ((v19 & 1) != 0)
            goto LABEL_43;
        }
        else
        {
          sub_1D24823E4();
          v11 = v77;
          v4 = (_OWORD *)v72;
          if ((v24 & 1) != 0)
            goto LABEL_43;
        }
LABEL_30:
        v11[(v20 >> 6) + 8] |= 1 << v20;
        sub_1D24820C0(v76, v11[6] + 40 * v20);
        sub_1D2482278(v73, (_OWORD *)(v11[7] + 32 * v20));
        v27 = v11[2];
        v28 = __OFADD__(v27, 1);
        v29 = v27 + 1;
        if (v28)
          goto LABEL_63;
        v11[2] = v29;
        goto LABEL_44;
      }
      sub_1D24DFEA8();
      if ((swift_dynamicCast() & 1) == 0)
      {
        (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 552))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 496));
        sub_1D24820C0(v3, v65);
        v41 = sub_1D24DFCEC();
        v42 = sub_1D24DFE18();
        v43 = os_log_type_enabled(v41, v42);
        v44 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
        v62 = *(_QWORD *)(v0 + 512);
        v45 = *(_QWORD *)(v0 + 496);
        if (v43)
        {
          v46 = v1;
          v47 = swift_slowAlloc();
          v48 = swift_slowAlloc();
          v77 = (_QWORD *)v48;
          *(_DWORD *)v47 = 136315138;
          v49 = sub_1D24DFE84();
          *(_QWORD *)(v47 + 4) = sub_1D2481604(v49, v50, (uint64_t *)&v77);
          swift_bridgeObjectRelease();
          sub_1D2482204(v65);
          _os_log_impl(&dword_1D2419000, v41, v42, "VSProhibitedTemplateEvent received invalid metadata key: %s", (uint8_t *)v47, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D8236C38](v48, -1, -1);
          v51 = v47;
          v1 = v46;
          v0 = v58;
          MEMORY[0x1D8236C38](v51, -1, -1);

        }
        else
        {

          sub_1D2482204(v65);
        }
        v44(v62, v45);
        v4 = (_OWORD *)v72;
        __swift_destroy_boxed_opaque_existential_0(v72);
        sub_1D2482204(v3);
        v2 = v60;
        v5 = v71;
        if (v10)
          goto LABEL_4;
        goto LABEL_6;
      }
      *v61 = *v66;
      sub_1D2493A30();
      sub_1D24DFEB4();
      sub_1D24820FC((uint64_t)v4, (uint64_t)v64);
      v30 = swift_isUniquelyReferenced_nonNull_native();
      v77 = v11;
      v32 = sub_1D2481C44(v68);
      v33 = v11[2];
      v34 = (v31 & 1) == 0;
      v35 = v33 + v34;
      if (__OFADD__(v33, v34))
        goto LABEL_62;
      v36 = v31;
      if (v11[3] >= v35)
      {
        if ((v30 & 1) != 0)
        {
          v4 = (_OWORD *)v72;
          if ((v31 & 1) == 0)
            goto LABEL_37;
        }
        else
        {
          sub_1D24823E4();
          v11 = v77;
          v4 = (_OWORD *)v72;
          if ((v36 & 1) == 0)
            goto LABEL_37;
        }
      }
      else
      {
        sub_1D2481C74(v35, v30);
        v11 = v77;
        v37 = sub_1D2481C44(v68);
        if ((v36 & 1) != (v38 & 1))
        {
LABEL_59:
          sub_1D24DFF98();
          return;
        }
        v32 = v37;
        v4 = (_OWORD *)v72;
        if ((v36 & 1) == 0)
        {
LABEL_37:
          v11[(v32 >> 6) + 8] |= 1 << v32;
          sub_1D24820C0(v68, v11[6] + 40 * v32);
          sub_1D2482278(v64, (_OWORD *)(v11[7] + 32 * v32));
          v39 = v11[2];
          v28 = __OFADD__(v39, 1);
          v40 = v39 + 1;
          if (v28)
            goto LABEL_64;
          v11[2] = v40;
          goto LABEL_51;
        }
      }
      v54 = (_OWORD *)(v11[7] + 32 * v32);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v54);
      sub_1D2482278(v64, v54);
LABEL_51:
      swift_bridgeObjectRelease();
      v53 = v68;
LABEL_52:
      sub_1D2482204(v53);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
      sub_1D2482204(v3);
      v5 = v71;
      if (v10)
        goto LABEL_4;
LABEL_6:
      v14 = v75 + 1;
      if (__OFADD__(v75, 1))
        goto LABEL_61;
      if (v14 < v63)
      {
        v15 = *(_QWORD *)(v59 + 8 * v14);
        if (v15)
          goto LABEL_9;
        v16 = v75 + 2;
        ++v75;
        if (v14 + 1 < v63)
        {
          v15 = *(_QWORD *)(v59 + 8 * v16);
          if (v15)
            goto LABEL_12;
          v75 = v14 + 1;
          if (v14 + 2 < v63)
          {
            v15 = *(_QWORD *)(v59 + 8 * (v14 + 2));
            if (v15)
            {
              v14 += 2;
              goto LABEL_9;
            }
            v16 = v14 + 3;
            v75 = v14 + 2;
            if (v14 + 3 < v63)
              break;
          }
        }
      }
LABEL_23:
      v10 = 0;
      *(_QWORD *)(v2 + 64) = 0;
      *(_OWORD *)(v2 + 32) = 0u;
      *(_OWORD *)(v2 + 48) = 0u;
      *(_OWORD *)v2 = 0u;
      *(_OWORD *)(v2 + 16) = 0u;
    }
    v15 = *(_QWORD *)(v59 + 8 * v16);
    if (v15)
    {
LABEL_12:
      v14 = v16;
LABEL_9:
      v10 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v14 << 6);
      v75 = v14;
      continue;
    }
    break;
  }
  while (1)
  {
    v14 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v14 >= v63)
    {
      v75 = v63 - 1;
      goto LABEL_23;
    }
    v15 = *(_QWORD *)(v59 + 8 * v14);
    ++v16;
    if (v15)
      goto LABEL_9;
  }
LABEL_65:
  __break(1u);
}

ValueMetadata *type metadata accessor for VSProhibitedTemplateEvent()
{
  return &type metadata for VSProhibitedTemplateEvent;
}

uint64_t sub_1D249BD7C()
{
  return swift_deallocClassInstance();
}

id sub_1D249BD8C()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for ResourceBundleClass();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1EFC81EF8 = (uint64_t)result;
  return result;
}

uint64_t sub_1D249BDDC()
{
  uint64_t v0;
  id v1;

  v0 = sub_1D24DFCE0();
  __swift_allocate_value_buffer(v0, qword_1EFC81F30);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EFC81F30);
  if (qword_1EFC81EF0 != -1)
    swift_once();
  v1 = (id)qword_1EFC81EF8;
  return sub_1D24DFCD4();
}

uint64_t sub_1D249BE80()
{
  uint64_t v0;

  if (qword_1EFC81F00 != -1)
    swift_once();
  v0 = sub_1D24DFCE0();
  return __swift_project_value_buffer(v0, (uint64_t)qword_1EFC81F30);
}

uint64_t sub_1D249BEC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EFC81F00 != -1)
    swift_once();
  v2 = sub_1D24DFCE0();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFC81F30);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self();
}

_QWORD *sub_1D249BF58(_QWORD *result)
{
  *result = ++qword_1EFC81F08;
  return result;
}

uint64_t sub_1D249BF74(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, _QWORD *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v17;
  mach_port_t reply_port;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int v27;
  mach_msg_header_t msg;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v30 = 1;
  v31 = a4;
  v32 = 16777472;
  v33 = a5;
  v34 = *MEMORY[0x1E0C804E8];
  v17 = *a3;
  v35 = a2;
  v36 = v17;
  v37 = a5;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B000000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v19)
    {
      if (msg.msgh_id == 71)
      {
        v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            v21 = v33;
            if (v33 == v47)
            {
              v20 = 0;
              v22 = v34;
              *a3 = v38;
              v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port)
              v20 = 4294966996;
            else
              v20 = HIDWORD(v31);
          }
        }
        else
        {
          v20 = 4294966996;
        }
      }
      else
      {
        v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_1D249C1CC(mach_port_t a1, unsigned int a2, __int128 *a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  mach_port_t reply_port;
  uint64_t v9;
  uint64_t v10;
  mach_msg_header_t msg;
  uint64_t v13;
  unsigned int v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v4 = a3[5];
  v19 = a3[4];
  v20 = v4;
  v5 = a3[7];
  v21 = a3[6];
  v22 = v5;
  v6 = a3[1];
  v15 = *a3;
  v16 = v6;
  v7 = a3[3];
  v17 = a3[2];
  v13 = *MEMORY[0x1E0C804E8];
  v14 = a2;
  v18 = v7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B100000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if ((_DWORD)v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    v10 = 4294966995;
    goto LABEL_17;
  }
  v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0)
    goto LABEL_17;
  if (msg.msgh_size != 36)
    goto LABEL_17;
  if (msg.msgh_remote_port)
    goto LABEL_17;
  v10 = v14;
  if (v14)
    goto LABEL_17;
  return v10;
}

uint64_t sub_1D249C358(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, _QWORD *a9, _DWORD *a10)
{
  mach_port_t reply_port;
  uint64_t v13;
  uint64_t v14;
  int v15;
  mach_msg_header_t msg;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  _BYTE v23[28];
  int v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v18 = 1;
  v19 = a6;
  v20 = 16777472;
  v21 = a7;
  v22 = *MEMORY[0x1E0C804E8];
  *(_DWORD *)v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  v24 = a7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B200000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v13)
    {
      if (msg.msgh_id == 71)
      {
        v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port)
              v14 = 4294966996;
            else
              v14 = HIDWORD(v19);
          }
        }
        else
        {
          v14 = 4294966996;
        }
      }
      else
      {
        v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_1D249C544(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  int v15;
  int v16;
  mach_msg_header_t msg;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v22;

  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B300000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if ((_DWORD)v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            v12 = v18;
            if (!v18)
            {
              v15 = v20;
              *a2 = v19;
              *a3 = v15;
              v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port)
            v13 = 1;
          else
            v13 = v18 == 0;
          if (v13)
            v12 = 4294966996;
          else
            v12 = v18;
          goto LABEL_23;
        }
      }
      v12 = 4294966996;
    }
    else
    {
      v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

void sub_1D249C6BC(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 8) + 1755732067 * ((((2 * a1) | 0x5E2356CE) - a1 - 789687143) ^ 0xF1D716BC);
  v2 = *(_QWORD *)a1;
  if (*(_DWORD *)(*(_QWORD *)a1 - 0x454517534C5DD3E1) - 1574925169 >= 0)
    v4 = *(_DWORD *)(*(_QWORD *)a1 - 0x454517534C5DD3E1) - 1574925169;
  else
    v4 = 1574925169 - *(_DWORD *)(*(_QWORD *)a1 - 0x454517534C5DD3E1);
  v3 = *(_QWORD *)(a1 + 16);
  if (*(_DWORD *)(v3 - 0x454517534C5DD3E1) - 1574925169 >= 0)
    v5 = *(_DWORD *)(v3 - 0x454517534C5DD3E1) - 1574925169;
  else
    v5 = 1574925169 - *(_DWORD *)(v3 - 0x454517534C5DD3E1);
  v8 = v1 - 1178560073 * (&v7 ^ 0xAD973CA5) + 287;
  v7 = v2;
  sub_1D24C843C((uint64_t)&v7);
  if (v4 >= v5)
    v6 = v5;
  else
    v6 = v4;
  __asm { BR              X14 }
}

uint64_t sub_1D249C838@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;

  v12 = (v5 | 0x84) - 89;
  v13 = 4 * (v9 + v6);
  v14 = v10
      + 1251276903
      + (*(_DWORD *)(*(_QWORD *)(v8 - 0x454517534C5DD3DDLL) + v13) ^ v11)
      + (*(_DWORD *)(*(_QWORD *)(a3 - 0x454517534C5DD3DDLL) + v13) ^ v11);
  *(_DWORD *)(*(_QWORD *)(a1 - 0x454517534C5DD3DDLL) + v13) = v14 + ((v12 - 674) ^ (v11 + 153)) - (v7 & (2 * v14));
  v15 = v9 - 402599781 < (int)(v4 + 853457864);
  if (v4 > 0x4D214437 != v9 - 402599781 < -1294025784)
    v15 = v4 > 0x4D214437;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((235 * v15) ^ v12)) - 12))();
}

uint64_t sub_1D249C964()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;

  v4 = v2 - 1130986908 < (int)(v3 + 125070738);
  if (v3 > 0x788B926D != v2 - 1130986908 < -2022412910)
    v4 = v3 > 0x788B926D;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((v4 * (((v1 + 674) ^ 0x2EB) - 306)) ^ v1)) - 8))();
}

uint64_t sub_1D249C9D4@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  _BOOL4 v17;
  uint64_t v18;
  int v19;
  int v20;
  _BOOL4 v21;

  v15 = a1 - 423;
  v16 = a1 - 674;
  v17 = v14 > v7;
  v18 = 4 * (v11 + v8);
  v19 = v3 + v12 + (*(_DWORD *)(*(_QWORD *)(v10 - 0x454517534C5DD3DDLL) + v18) ^ v13);
  *(_DWORD *)(*(_QWORD *)(a2 - 0x454517534C5DD3DDLL) + v18) = v19 + (v15 ^ (v13 - 90)) - (v9 & (2 * v19));
  v20 = v11 + 1 + v4;
  LODWORD(v18) = v17 ^ (v20 < v5);
  v21 = v20 < v6;
  if (!(_DWORD)v18)
    v17 = v21;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1288 * v17) ^ v16)) - 8))();
}

uint64_t sub_1D249CAAC()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  BOOL v4;

  v4 = v2 - 982880553 < (int)(v3 + 273177093);
  if (v3 > 0x6FB7A5FA != v2 - 982880553 < -1874306555)
    v4 = v3 > 0x6FB7A5FA;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (((4 * (((v1 - 31) ^ v4) & 1)) & 0xEF | (16
                                                                                                  * (((v1 - 31) ^ v4) & 1))) ^ v1))
                            - ((v1 + 831) ^ 0x4EDLL)))();
}

uint64_t sub_1D249CB3C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((1450 * (v1 != ((v2 - 1674638890) & 0x63D0F7EF ^ 0x25FD16204A94FB2ALL))) ^ v2))
                            - 8))();
}

void sub_1D249CB8C(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;

  *(_DWORD *)(*(_QWORD *)(a1 - 0x454517534C5DD3DDLL) + 4 * (v5 + v3)) = v1
                                                                        - ((((v2 + 606141910) & 0x1BDF03EF ^ 0x2AD60C7F)
                                                                          + 2 * v1) & v4)
                                                                        + 1420183266;
  *(_DWORD *)(a1 - 0x454517534C5DD3E1) = (((v5 + 1 + v3) * (v6 - 680783111)) ^ 0x7DDFF771)
                                         - 536904704
                                         + ((2 * (v5 + 1 + v3) * (v6 - 680783111)) & 0xFBBFEEE2);
}

uint64_t sub_1D249CD74(_DWORD *a1)
{
  unsigned int v2;
  unsigned int v3;
  int v4;
  uint64_t result;
  unsigned int v6;
  uint64_t v7;
  _DWORD v8[2];
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v2 = 1225351577 * (a1 ^ 0x239AD816);
  v3 = a1[8] - v2;
  v4 = a1[12] + v2;
  v8[1] = v3
        - 1734042137
        * (((v8 | 0xB8B61934) - v8 + (v8 & 0x4749E6C8)) ^ 0xE478DA79)
        - 1404134225;
  result = VSWaitForDebuggerUntilDate(v8);
  if (v4 > 937311590)
  {
    if (v4 == 1222524262)
    {
      v6 = 3;
    }
    else
    {
      if (v4 != 937311591)
        goto LABEL_11;
      v6 = 1;
    }
LABEL_10:
    v7 = *(_QWORD *)((char *)*(&off_1E93A7480 + (int)(v3 - 1172345352))
                   + 8
                   * (int)(((((uint64_t (*)(_QWORD, uint64_t))*(&off_1E93A7480 + (int)(v3 - 1172345378)))((*((_DWORD *)*(&off_1E93A7480 + (int)(v3 - 1172345349)) + 6 * v6 + 1)- 1699122660), 3511634213) == 0)* ((v3 ^ 0x45E09341) - 276)) ^ (v3 - 1172343696))- 4)- 4;
    __asm { BR              X9 }
  }
  if (v4 == 937311587)
  {
    v6 = 0;
    goto LABEL_10;
  }
  if (v4 == 937311590)
  {
    v6 = 2;
    goto LABEL_10;
  }
LABEL_11:
  a1[4] = -137501369;
  return result;
}

void sub_1D249D39C(uint64_t a1)
{
  int v1;

  v1 = 535753261 * ((2 * (a1 & 0x6240BBC7) - a1 + 499074104) ^ 0x174B4A17);
  __asm { BR              X10 }
}

uint64_t sub_1D249D434@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((v2 == ((((v1 - 1004) | 0x80) - 254725949) & 0xF2ECEDB ^ 0x39944A9F))
                                     * (((((v1 - 1004) | 0x80) + 1178494554) & 0xB9C19BFF) - 661)) ^ ((v1 - 1004) | 0x80))))();
}

uint64_t sub_1D249D4B4@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v1 + 1099)) - 8))();
}

uint64_t sub_1D249D5C4@<X0>(unsigned int a1@<W5>, int a2@<W6>, int a3@<W7>, uint64_t a4@<X8>)
{
  int v4;
  int v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(a4 + 8 * (((v5 == 5 * (v6 ^ a2) + v4) * a3) ^ v6))
                            - ((v6 + 63) | a1)
                            + 1178))();
}

uint64_t sub_1D249D5F8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(a1 + 8 * ((((v2 ^ 0x3C3) - 367) * (v1 != 0)) ^ v2)))();
}

uint64_t sub_1D249D61C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;

  v6 = 34 * (v5 ^ 0xDA);
  v7 = v3 + v2;
  v8 = v3 + 1;
  *(_DWORD *)(*(_QWORD *)(v1 - 0x454517534C5DD3DDLL) + 4 * (v7 + v6)) = v4;
  *(_DWORD *)(v1 - 0x454517534C5DD3E1) = v8;
  v9 = v2 + v8;
  v10 = v9 + 782;
  if (v9 + 782 < 0)
    v10 = -782 - v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((1960
                                          * ((int)((v10 ^ 0xFFFF77FD)
                                                 + (((19 * (v6 ^ 0x33B)) ^ 0xFFFEEC15) & (2 * v10))
                                                 + 34818) > 23 * (((19 * (v6 ^ 0x33B) - 975) | 0x400) ^ 0x402) - 783)) ^ (19 * (v6 ^ 0x33B))))
                            - 12))();
}

uint64_t sub_1D249D718@<X0>(uint64_t a1@<X8>)
{
  int v1;
  _QWORD *v2;
  unsigned int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((225 * (*(_DWORD *)(*v2 + 4 * v3) != (((v4 - 545) | 0x302) ^ (v1 - 675)))) | v4))
                            - 12))();
}

uint64_t sub_1D249D754@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8
                                             * ((1960 * (v1 - 1 > 23 * (((v2 - 975) | 0x400) ^ 0x402) - 783)) ^ v2))
                            - 12))();
}

uint64_t sub_1D249D79C(uint64_t result)
{
  int v1;
  int v2;
  int *v3;
  int v4;
  int v5;

  if ((v2 + 781) >= 0x7FFFFFFF)
    v5 = -v1;
  else
    v5 = v4;
  *v3 = v5;
  *(_DWORD *)(result + 8) = 1310800152;
  return result;
}

void sub_1D249D7D8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 48) + 3804331 * ((((2 * a1) | 0xC074C718) - a1 - 1614439308) ^ 0x4E7BE040);
  __asm { BR              X10 }
}

uint64_t sub_1D249D914()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = (*(_DWORD *)v2 ^ v0) != ((v1 + 1250) | 0x1D) + 1550689792 && (*(_QWORD *)(v2 + 64) | *(_QWORD *)(v2 + 8)) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((v5 * ((v1 + 2147158577) & 0x8004F5B5 ^ 0x4BB)) ^ v1)))();
}

uint64_t sub_1D249D984()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v4;

  v4 = *(_QWORD *)(v1 + 56) != 0x6706F2AA71676D5CLL && *(_OWORD *)(v1 + 16) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v4 * (((v0 - 829) | 0x81) - 895)) ^ v0)) - 8))();
}

uint64_t sub_1D249D9D8(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * ((((v2 ^ 0x23A) - 412) * (v1 == 0)) ^ v2))
                                                   - 8))(a1, 1759421093);
}

uint64_t sub_1D249DAE0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  void (*v29)(uint64_t);
  void (*v30)(uint64_t);
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  void (*v44)(uint64_t);
  uint64_t v45;

  v27 = (v19 - 400) | 0x180;
  v28 = 535753261 * (((v26 - 144) & 0xBF3BDFB1 | ~((v26 - 144) | 0xBF3BDFB1)) ^ 0x4A302E61);
  *(_DWORD *)(v26 - 120) = ((v27 ^ 0xDD269F24) + v20) ^ v28;
  *(_DWORD *)(v26 - 116) = v28 + v19 + 613;
  *(_QWORD *)(v26 - 128) = v17;
  *(_QWORD *)(v26 - 144) = a17;
  v45 = a1 + v18;
  ((void (*)(uint64_t))(*(_QWORD *)(v21 + 8 * (v19 ^ 0x13F)) - 8))(v26 - 144);
  HIDWORD(v43) = (v27 + 1456680906) & 0xA92CCFAF;
  HIDWORD(a8) = v27 - 134;
  LODWORD(v43) = v27 - 338;
  *(_DWORD *)(v26 - 144) = v27
                         - 338
                         - 1224239923 * (((v26 - 144) & 0x2D9ACFFC | ~((v26 - 144) | 0x2D9ACFFC)) ^ 0x20D6CDD4);
  *(_QWORD *)(v26 - 136) = a16;
  *(_QWORD *)(v26 - 128) = a15;
  v42 = *(void (**)(uint64_t))(v21 + 8 * (v27 ^ 0x129));
  v42(v26 - 144);
  HIDWORD(a5) = v27 + 772;
  *(_QWORD *)(v26 - 112) = v24;
  *(_DWORD *)(v26 - 120) = v27
                         + 772
                         - 1225351577 * (((v26 - 144) & 0xF685824A | ~((v26 - 144) | 0xF685824A)) ^ 0x2AE0A5A3);
  *(_QWORD *)(v26 - 144) = a16;
  *(_QWORD *)(v26 - 136) = a15;
  *(_QWORD *)(v26 - 128) = a17;
  v29 = (void (*)(uint64_t))(*(_QWORD *)(v21 + 8 * (v27 ^ 0x175)) - 8);
  v29(v26 - 144);
  LODWORD(v41) = v27 + 1157;
  *(_QWORD *)(v26 - 128) = a15;
  *(_QWORD *)(v26 - 120) = v22;
  *(_DWORD *)(v26 - 104) = v27
                         + 1157
                         + 628203409
                         * (((((v26 - 144) | 0xE27D8628) ^ 0xFFFFFFFE) - (~(v26 - 144) | 0x1D8279D7)) ^ 0x9F0A75E4);
  *(_QWORD *)(v26 - 144) = v24;
  *(_QWORD *)(v26 - 136) = a16;
  *(_QWORD *)(v26 - 112) = v24;
  v30 = (void (*)(uint64_t))((char *)*(&off_1E93A7480 + v27 - 269) - 8);
  v30(v26 - 144);
  HIDWORD(v41) = v27 + 593;
  *(_DWORD *)(v26 - 144) = v27
                         + 593
                         + 1225351577 * ((((v26 - 144) | 0xBB001FD) + (~(v26 - 144) | 0xF44FFE02)) ^ 0x282AD9EA);
  *(_QWORD *)(v26 - 112) = a15;
  *(_QWORD *)(v26 - 104) = v24;
  *(_QWORD *)(v26 - 128) = a7;
  *(_QWORD *)(v26 - 120) = a16;
  *(_QWORD *)(v26 - 136) = v24;
  v44 = (void (*)(uint64_t))((char *)*(&off_1E93A7480 + v27 - 270) - 8);
  v44(v26 - 144);
  *(_DWORD *)(v26 - 144) = v27 - 338 - 1224239923 * ((v26 - 144) ^ 0xF2B3FDD7);
  *(_QWORD *)(v26 - 136) = a16;
  *(_QWORD *)(v26 - 128) = a11;
  v42(v26 - 144);
  v31 = 2 * (v26 - 144);
  *(_QWORD *)(v26 - 136) = a11;
  *(_QWORD *)(v26 - 128) = a17;
  *(_QWORD *)(v26 - 112) = v25;
  *(_DWORD *)(v26 - 120) = v27 + 772 - 1225351577 * (((v31 | 0x3BDADB1A) - (v26 - 144) + 1645384307) ^ 0xBE77B59B);
  *(_QWORD *)(v26 - 144) = a16;
  v29(v26 - 144);
  *(_DWORD *)(v26 - 104) = v27
                         + 1157
                         + 628203409
                         * ((1756774229 - ((v26 - 144) | 0x68B63F55) + ((v26 - 144) | 0x9749C0AA)) ^ 0x15C1CC99);
  *(_QWORD *)(v26 - 120) = v22;
  *(_QWORD *)(v26 - 112) = v25;
  *(_QWORD *)(v26 - 144) = v25;
  *(_QWORD *)(v26 - 136) = a16;
  *(_QWORD *)(v26 - 128) = a11;
  v30(v26 - 144);
  *(_DWORD *)(v26 - 144) = v27
                         + 593
                         + 1225351577
                         * ((-524960656
                           - ((v26 - 144) ^ 0x3D317971 | 0xE0B5BC70)
                           + ((v26 - 144) ^ 0x3D317971 | 0x1F4A438F)) ^ 0x1E1E2E8);
  *(_QWORD *)(v26 - 120) = a16;
  *(_QWORD *)(v26 - 112) = a11;
  *(_QWORD *)(v26 - 136) = v25;
  *(_QWORD *)(v26 - 128) = a9;
  *(_QWORD *)(v26 - 104) = v25;
  v44(v26 - 144);
  *(_DWORD *)(v26 - 128) = v27 + 1178560073 * (((v31 | 0x7F00DAE2) - (v26 - 144) - 1065381233) ^ 0x921751D4) + 251;
  *(_QWORD *)(v26 - 144) = v24;
  *(_QWORD *)(v26 - 136) = v25;
  ((void (*)(uint64_t))*(&off_1E93A7480 + v27 - 418))(v26 - 144);
  *(_DWORD *)(v26 - 132) = v27 - 1178560073 * ((v26 - 144) ^ 0xAD973CA5) + 705;
  *(_QWORD *)(v26 - 144) = v25;
  sub_1D24C843C(v26 - 144);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t), uint64_t, uint64_t, void (*)(uint64_t), uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v23 + 8 * (((*(_DWORD *)(v26 - 136) < (HIDWORD(v43) ^ 0x2893EC22u)) * ((v27 - 134) ^ 0x321)) | v27)))(v32, v33, v34, v35, v36, v37, v38, v39, a2, v41, v42, a5, v43, v44, a8, *(&off_1E93A7480 + (v27 ^ 0x1C3)), v45, a11, a12);
}

uint64_t sub_1D249DFF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void (*a16)(uint64_t), uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void (*a24)(uint64_t),uint64_t a25,uint64_t a26,uint64_t a27)
{
  void (*v27)(uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_DWORD *)(v32 - 128) = (v28 + 343) ^ (1759421093
                                        * ((1606373337 - ((v32 - 144) | 0x5FBF4FD9) + ((v32 - 144) | 0xA040B026)) ^ 0x133D0072));
  *(_QWORD *)(v32 - 144) = v31;
  *(_QWORD *)(v32 - 136) = v30;
  v27(v32 - 144);
  *(_DWORD *)(v32 - 104) = v28
                         + 1291
                         + 628203409 * ((((v32 - 144) | 0x3EE1B2EB) + (~(v32 - 144) | 0xC11E4D14)) ^ 0xBC69BED9);
  *(_QWORD *)(v32 - 128) = v30;
  *(_QWORD *)(v32 - 120) = a27;
  *(_QWORD *)(v32 - 112) = v31;
  *(_QWORD *)(v32 - 144) = v31;
  *(_QWORD *)(v32 - 136) = a23;
  a24(v32 - 144);
  *(_DWORD *)(v32 - 104) = v28
                         + 1291
                         + 628203409
                         * ((((v32 - 144) | 0x8BC5C813) - (v32 - 144) + ((v32 - 144) & 0x743A37E8)) ^ 0x94DC420);
  *(_QWORD *)(v32 - 120) = v31;
  *(_QWORD *)(v32 - 112) = a17;
  *(_QWORD *)(v32 - 144) = v31;
  *(_QWORD *)(v32 - 136) = a23;
  *(_QWORD *)(v32 - 128) = v30;
  a24(v32 - 144);
  *(_DWORD *)(v32 - 128) = (v28 + 426522724) ^ (235795823
                                              * (((((v32 - 144) | 0x19836934) ^ 0xFFFFFFFE) - (~(v32 - 144) | 0xE67C96CB)) ^ 0x72D1DF92));
  *(_QWORD *)(v32 - 144) = v31;
  *(_QWORD *)(v32 - 136) = a22;
  sub_1D24D9CF0(v32 - 144);
  *(_DWORD *)(v32 - 128) = (v28 + 343) ^ (1759421093
                                        * ((((v32 - 144) | 0xBD2D622E) - (v32 - 144) + ((v32 - 144) & 0x42D29DD0)) ^ 0xE50D27A));
  *(_QWORD *)(v32 - 144) = v31;
  *(_QWORD *)(v32 - 136) = a25;
  a16(v32 - 144);
  *(_DWORD *)(v32 - 136) = v28 + 1178560073 * ((v32 + 1554233686 - 2 * ((v32 - 144) & 0x5CA3B9E6)) ^ 0xF1348543) + 380;
  *(_QWORD *)(v32 - 144) = v31;
  *(_QWORD *)(v32 - 128) = a25;
  v33 = sub_1D24C193C(v32 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v29
                                                      + 8
                                                      * ((236 * (((a19 == 0) ^ (v28 + 56)) & 1)) ^ (v28 + 39)))
                                          - 12))(v33);
}

uint64_t sub_1D249E268()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t result;
  uint64_t v9;
  int v10;

  v5 = v0 | 2;
  v6 = (((v0 | 2) - 289) ^ 0xC0A871B8) + v10;
  v7 = 1225351577 * ((v4 - 144) ^ 0x239AD816);
  *(_QWORD *)(v4 - 120) = v2;
  *(_QWORD *)(v4 - 136) = v3;
  *(_DWORD *)(v4 - 128) = v6 ^ v7;
  *(_DWORD *)(v4 - 124) = v7 + v5 - 328;
  result = ((uint64_t (*)(uint64_t))((char *)*(&off_1E93A7480 + (v5 ^ 0x2D6)) - 12))(v4 - 144);
  *(_DWORD *)(v9 - 0x6706F2AA71676D5CLL) = v10;
  *(_DWORD *)(v1 + 32) = 137543419;
  return result;
}

void sub_1D249E3D0(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)a1 - 235795823 * ((a1 + 172801228 - 2 * (a1 & 0xA4CBCCC)) ^ 0x9EE1F595);
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_DWORD *)(v2 - 0x454517534C5DD3E1);
  v5 = v1 - 1178560073 * (&v4 ^ 0xAD973CA5) - 566;
  v4 = v2;
  sub_1D24C843C((uint64_t)&v4);
  __asm { BR              X9 }
}

uint64_t sub_1D249E4E0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(a1 + 8 * (v1 ^ (482 * (((v3 + v2) & 0x1F) != 0xE)))))();
}

uint64_t sub_1D249E534@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((((v3 ^ 0x3BFCEFDE) - 956828864 + (v2 & 0x77F9DFBC) - 49603359 > (int)((v1 + 1463096308) & 0xA8CAEB75 ^ 0xFFFFFDAE))
                                          * (((v1 - 159212267) & 0x97D60BF) + 1812)) ^ (v1 + 224)))
                            - 4))();
}

uint64_t sub_1D249E5F4@<X0>(int a1@<W0>, int a2@<W5>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  int v5;
  char v6;
  int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;

  v10 = *(_DWORD *)(*(_QWORD *)(v9 - 0x454517534C5DD3DDLL) + 4 * (v7 + v8)) ^ v5;
  *(_DWORD *)(*(_QWORD *)(v9 - 0x454517534C5DD3DDLL) + 4 * (v3 + v4)) = ((v10 >> (32 - v6)) | a2 ^ v5)
                                                                        + v5
                                                                        - ((2 * ((v10 >> (32 - v6)) | a2 ^ v5)) & 0x3E767E92);
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (int)((406 * ((v7 + v8 - 1) >> 31)) ^ a1)) - 4))();
}

void sub_1D249E690()
{
  JUMPOUT(0x1D249E62CLL);
}

uint64_t sub_1D249E698@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v5;

  v4 = (v1 - 647) | 0x408;
  v5 = (v3 ^ 0x9FED937D) + 2035810271 + ((v4 + 1071325842) & v2) + ((v4 + 416973199) & 0xE7257FB8) - 423991565 < 0x7FFFFFFF;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((v5 | (2 * v5)) ^ v4)) - (v4 - 896) + 224))();
}

uint64_t sub_1D249E728@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 - 0x454517534C5DD3DDLL) + 4 * (v1 + 1761296710 + v2)) = *(_DWORD *)(*(_QWORD *)(v5 - 0x454517534C5DD3DDLL)
                                                                                                 + 4
                                                                                                 * (v3 + v2 + 1456));
  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(a1
                                                              + 8
                                                              * (((((v3 + v2 + 1455) > 0x7FFFFFFE) << 7) | (((v3 + v2 + 1455) > 0x7FFFFFFE) << 10)) ^ v4))
                                                  - 8))(v4 ^ 0xFFFFFF17, 2147483646);
}

void sub_1D249E798()
{
  JUMPOUT(0x1D249E758);
}

uint64_t sub_1D249E7A0@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 - 0x454517534C5DD3DDLL) + 4 * (v4 + v2)) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((438 * (v4 + v2 > 0)) ^ v3)) - (v3 + 1086) + 1262))();
}

uint64_t sub_1D249E7E8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  _QWORD *v3;
  int v4;
  int v5;
  int v6;
  int v7;

  *(_DWORD *)(*v3 + 4 * (v7 - 1 + v1)) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((v5 ^ (v1 - 876)) + v7 >= 0) * v6) ^ v4)) - 12))();
}

void sub_1D249E820()
{
  int v0;
  int v1;
  int v2;
  int v3;
  _QWORD *v4;
  int v5;
  _DWORD *v6;
  _BOOL4 v7;

  v7 = *(_DWORD *)(*v4 + 4 * (v0 + v2)) == v3;
  *v6 = (((v5 + 264) | 0xA0) ^ 0xFD8C2F40) - 680783111 * (v0 - v7) + v1 + v1 * (v2 + v0 - v7);
}

void sub_1D249E9B4(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 16) - 1225351577 * (((a1 | 0x28B74694) - a1 + (a1 & 0xD748B96B)) ^ 0xB2D9E82);
  v2 = *(_QWORD *)(a1 + 8);
  v5 = v1 + 460628867 * (((&v3 | 0xE1CD3823) + (~&v3 | 0x1E32C7DC)) ^ 0xAD5BBA5F) - 1110;
  v3 = v2;
  sub_1D24D9068((uint64_t)&v3);
  __asm { BR              X9 }
}

uint64_t sub_1D249EAFC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  unsigned int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v7;

  v5 = (((v4 ^ v3) >> 4) & 0xEFFFF9E ^ 0xA63F098) + (((v4 ^ v3) >> 5) ^ 0xF2CE07B3) + 684992165;
  v7 = v5 > ((7 * (v1 ^ 0x1CE) - 1432388896) & 0x556086D7u) + 542384030 && v5 < v2 + 542385780;
  return (*(uint64_t (**)(void))(a1 + 8 * ((1905 * v7) ^ v1)))();
}

uint64_t sub_1D249EB90@<X0>(uint64_t a1@<X8>)
{
  char v1;
  unsigned int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((47 * ((((v2 - 1473) ^ ((v1 & 0x1F) == 0x19)) & 1) == 0)) ^ v2))
                            - ((v2 + 1655328040) & 0x9D55AC9F)
                            + 145))();
}

uint64_t sub_1D249EBEC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1898 * (v1 - 142606387 < (v2 ^ 0x61u) + 2147483274)) ^ v2)) - 4))();
}

uint64_t sub_1D249EC4C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  char v3;
  unsigned int v4;
  int v5;
  int v6;
  uint64_t v7;
  _QWORD *v8;
  unsigned int v9;

  v8 = (_QWORD *)(v7 - 0x454517534C5DD3DDLL);
  v9 = ((2 * (((v6 ^ 0x409) - 936) ^ (v4 - 269) ^ *(_DWORD *)(*v8 + 4 * (v1 + 142606386)))) << (v3 ^ 0x1F)) | ((*(_DWORD *)(*v8 + 4 * (v1 + 142606385)) ^ v4) >> v3);
  *(_DWORD *)*v8 = v9 + v4 - (v5 & (2 * v9));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a1
                                                      + 8
                                                      * (((16 * ((int)((v6 ^ 0xB5F7CF03) + v2) > -1099444662)) | (32 * ((int)((v6 ^ 0xB5F7CF03) + v2) > -1099444662))) ^ ((v6 ^ 0x409) - 1033)))
                                          - 4))(3676589802);
}

void sub_1D249ED20()
{
  JUMPOUT(0x1D249ECB4);
}

void sub_1D249ED28()
{
  _DWORD *v0;

  *v0 = 1574925169;
}

void sub_1D249EEDC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X12 }
}

uint64_t sub_1D249EF2C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;
  int v4;
  int v5;

  *(_DWORD *)(*(_QWORD *)(a2 + 96) + 24) = v4;
  v5 = *(_DWORD *)(a1 + 4) - ((2 * *(_DWORD *)(a1 + 4) + 896721976) & 0x7E107264) + 1505864526;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2
                                                     + 8
                                                     * ((1362
                                                       * (((2 * v5) & 0xA29D5B96 ^ 0x22105204)
                                                        + (v5 ^ 0x6E4694F9)
                                                        + 1861875646 != 1078502793)) ^ v3))
                                         - 4))(0);
}

uint64_t sub_1D249EFC0()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((57 * ((v2 + v1 + 783372853) < 8)) ^ 0x54A)) - 12))();
}

uint64_t sub_1D249F028(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((97 * (v2 - v3 - 4 < ((9 * (a1 ^ 0x489u)) ^ 0x109uLL))) ^ a1))
                            - 8))();
}

uint64_t sub_1D249F074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  _BOOL4 v8;

  v8 = v7 >= ((a5 - v6 - 197) ^ 0x2C337E05 ^ ((a5 + 229) | 0x181u));
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((2 * v8) | (4 * v8)) ^ a5)) - 4))();
}

uint64_t sub_1D249F0C0@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v10 = v8 + v6 + v7 + 1395;
  v11 = v4 + v10;
  v12 = *(_OWORD *)(v11 - 31);
  v13 = a2 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v3 + a1 + 180) | (4 * ((v5 & 0xFFFFFFE0) == 32))))
                            - ((5 * (a1 ^ (v9 + 1253))) ^ 0x6CLL)))();
}

void sub_1D249F124()
{
  JUMPOUT(0x1D249F0D8);
}

uint64_t sub_1D249F130(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  int v7;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v6 + 8 * (((a6 + (a6 ^ 0x14D) - 202) * (v7 != a2)) ^ a6)) - 4))(0);
}

uint64_t sub_1D249F160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  char v6;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v5 + 8 * (a5 ^ (1997 * ((v6 & 0x18) == 0))))
                                         - ((a5 - 785268266) & 0x2ECE3FDF ^ 0x2DBLL)))((a5 + 614));
}

uint64_t sub_1D249F1A8@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;

  *(_QWORD *)(a3 - 7 + v6 + v7 + v8 - a2 + 9 * (a1 ^ 0x314u)) = *(_QWORD *)(v4
                                                                          - 7
                                                                          + v6
                                                                          + v7
                                                                          + v8
                                                                          - a2
                                                                          + 9 * (a1 ^ 0x314u));
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1712 * (a2 - (v5 & 0xFFFFFFF8) == -8)) ^ a1)) - 4))();
}

void sub_1D249F204()
{
  JUMPOUT(0x1D249F1D8);
}

uint64_t sub_1D249F210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6;
  int v7;
  unsigned int v8;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v6 + 8 * (((((a6 - 874) | 0xD6) ^ 0x1CD) * (v7 == a5)) ^ a6))
                                         - (a6 ^ v8)
                                         + 741571998))(0);
}

uint64_t sub_1D249F254@<X0>(int a1@<W2>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(a3 + (a2 - 1078502794)) = *(_BYTE *)(v5 + (a2 - 1078502794));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v3
                                                     + 8 * ((43 * (a2 - 1 == ((a1 - v4 - 635) ^ 0x6C7BD823))) ^ a1))
                                         - 8))(0);
}

void sub_1D249F2AC()
{
  uint64_t v0;
  int v1;

  v0 = MEMORY[0x1E0C80A78]();
  v1 = *(_DWORD *)v0 - 1225351577 * (((v0 | 0x4730D9F4) - v0 + (v0 & 0xB8CF260B)) ^ 0x64AA01E2);
  __asm { BR              X12 }
}

uint64_t sub_1D249F408()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_DWORD *)(v2 + v1) = v0;
  *(_QWORD *)(v6 - 144) = v4;
  *(_DWORD *)(v6 - 136) = v5 - 143 + ((((v6 - 144) | 0xA211F157) - ((v6 - 144) & 0xA211F157)) ^ 0xF86CDF2) * v3 - 347;
  *(_QWORD *)(v6 - 128) = v2;
  return sub_1D24C193C(v6 - 144);
}

void sub_1D24A06F8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 1374699841 * (a1 ^ 0x6DF41809);
  __asm { BR              X9 }
}

uint64_t sub_1D24A0780()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 ^ 0x2AB)))(200, 2354554103) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1829 * v3) ^ v0)) - 4))();
}

uint64_t sub_1D24A07C4(uint64_t a1)
{
  int *v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  int v9;

  result = (*(uint64_t (**)(uint64_t, _QWORD))(v5 + 8 * (v4 - 533)))(a1, 0);
  if ((_DWORD)result == 16)
  {
    ++v3;
    goto LABEL_7;
  }
  if ((_DWORD)result == 12)
  {
LABEL_7:
    result = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v4 - 632)))(a1);
    v9 = v3;
    goto LABEL_8;
  }
  if ((_DWORD)result)
  {
    v3 += 2;
    goto LABEL_7;
  }
  *v6 = a1;
  v9 = -509880201;
LABEL_8:
  *v1 = v9 ^ v2;
  return result;
}

void sub_1D24A083C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1D24A08A4()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((56 * (v1 == 1699122660)) ^ 0x1CDu)) - 8))();
}

uint64_t sub_1D24A08DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;

  *(_DWORD *)(*(_QWORD *)(v1 + 96) + 528) = 2031918701;
  *(_DWORD *)(*(_QWORD *)(v1 + 96) + 532) = 1574925169;
  *(_QWORD *)(*(_QWORD *)(v1 + 96) + 536) = *(_QWORD *)(v1 + 96) + 544;
  v4 = *(_QWORD *)(v1 + 96) + 0x454517534C5DD5F5;
  v5 = *(_QWORD *)(v2 + 8) + (*(_DWORD *)(v2 + 4) - v3);
  v6 = 535753261 * (((&v9 | 0xA6D25F5B) - (&v9 & 0xA6D25F5B)) ^ 0xAC265174);
  v12 = (v3 - 733102872) ^ v6;
  v13 = v6 + 1056;
  v11 = v5;
  v9 = v4;
  ((void (*)(uint64_t *))(*(_QWORD *)(a1 + 1056) - 8))(&v9);
  v7 = v10;
  *(_QWORD *)(*(_QWORD *)(v1 + 96) + 512) = *(_QWORD *)(v2 + 8) + (*(_DWORD *)(v2 + 4) - v3);
  return (v7 - 1310800152);
}

void sub_1D24A0A3C(uint64_t a1)
{
  __asm { BR              X12 }
}

void sub_1D24A0B68(uint64_t a1@<X2>, int a2@<W4>, int a3@<W5>, uint64_t a4@<X6>, int a5@<W8>)
{
  int v6;
  uint64_t v7;
  int v8;
  unsigned __int8 *v9;
  uint64_t v10;
  _BOOL4 v12;

  v8 = a5 - a3;
  v9 = *(unsigned __int8 **)(v7 + 8 * ((a5 - a3) ^ (v6 + 120)));
  v10 = ((((v8 ^ (v6 - 272) ^ 0x3D1) + 894813082) & 0xCAAA3FDE) - 1129) | 0x44A;
  v12 = ((**(unsigned __int8 **)(a4 + 80) - (*v9 ^ 0x67)) ^ 0x79FEFFD7)
      + (((**(unsigned __int8 **)(a4 + 80) - (*v9 ^ 0x67)) << ((v10 - 56) & 0xBF ^ (v6 - 1))) & 0xF3FDFFAE)
      - 9061141 == a2
     && a1 - 0x2B1ECB32CE02AB8ALL + (v10 ^ 0x2B1ECB31EF266BAALL) != 0;
  __asm { BR              X15 }
}

uint64_t sub_1D24A1CCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(v1 + (v4 + v3)) = *(_BYTE *)(a1 + (v4 + v3));
  return (*(uint64_t (**)(void))(v6 + 8 * ((1470 * (((v5 + 768846887) & 0xD22C53FF ^ 0xFFFFFC15) + v4 == v2)) ^ v5)))();
}

void sub_1D24A1D1C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) ^ (1225351577 * ((-2 - ((a1 | 0x21ABC784) + (~(_DWORD)a1 | 0xDE54387B))) ^ 0xFDCEE06D));
  __asm { BR              X10 }
}

uint64_t sub_1D24A1DF0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 1755732067 * (((&a4 | 0xC5DC4A97) - (&a4 & 0xC5DC4A97)) ^ 0x1B1AF74C);
  a7 = &STACK[0x7FBF06AA705C9927];
  a8 = v12 ^ 0x4B90D2BE;
  a4 = &STACK[0x7897A35BDEA4E5E4];
  a5 = v11;
  a6 = (v10 - 387) ^ v12;
  v13 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(a1 + 8 * (v10 - 559)) - 4))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * (int)(((*(_DWORD *)(v11 - 0x1DC828355A88D58FLL) == v8)
                                                             * ((v10 + 1084346271) & 0xBF5E2EFF ^ 0xC2)) ^ v10))
                                          - 8))(v13);
}

uint64_t sub_1D24A1EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  int v11;
  uint64_t v12;
  int v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((459 * (a11 != ((v13 + 353) ^ (v11 - 600)))) ^ v13)) - 4))();
}

uint64_t sub_1D24A1F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;

  *(_BYTE *)(v11 + (v15 + v12)) = *(_BYTE *)(a9 + (v15 + v12)) ^ 0x67;
  return ((uint64_t (*)(void))(*(_QWORD *)(v16
                                        + 8
                                        * (((v15 + 1 + v12 < ((v17 + 1936571139) & 0x8C92465D ^ v13 ^ a11)) * v14) ^ v17))
                            - 4))();
}

void sub_1D24A1F88(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(*(_QWORD *)(v2 + 24) - 0x47D9D7009185DFBLL) = v1;
  *(_DWORD *)(v4 - 0x4876C81C893559F5) = v3;
  *(_DWORD *)v2 = *a1;
}

uint64_t sub_1D24A1FF0(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;

  v1 = 1225351577 * (a1 ^ 0x239AD816);
  v2 = *a1 + v1;
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1E93A7480 + (int)(v2 - 1595))
                                        + 8
                                        * (int)((((a1[1] ^ v1 ^ 0x832BEFB) - 1 < 0x63) * (((v2 - 1406) | 0xC0) ^ 0x1C0)) ^ v2)
                                        - 4)
                            - (((v2 - 1550) | 0x150) ^ 0x1DCLL)))();
}

uint64_t sub_1D24A2074@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  int v2;

  *(_DWORD *)(*(_QWORD *)(result + 8) - 0x37D4814AE11E3ECELL) = (a2 ^ 0xF7CD4104)
                                                              - ((((2 * (v2 ^ 0x297)) ^ 0x1FFEB5BC)
                                                                + 2 * (a2 ^ 0xF7CD4104)) & 0x10657DF6)
                                                              + 137500820;
  return result;
}

uint64_t sub_1D24A2128(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  int v3;
  char *v4;
  int v5;
  char v7;

  v2 = (qword_1EFC7F970 - qword_1EFC7F980) ^ (unint64_t)&v7;
  qword_1EFC7F980 = 536075833 * (v2 + 0x793AB71194CDC804);
  qword_1EFC7F970 = 536075833 * (v2 ^ 0x86C548EE6B3237FCLL);
  v3 = *(_DWORD *)(a2 + 4);
  v4 = (char *)*(&off_1E93A7480
               + ((57 * ((qword_1EFC7F970 + 57 * (v2 + 4)) ^ 0xFC)) ^ byte_1D24F6770[byte_1D24F2BF0[(57 * ((qword_1EFC7F970 + 57 * (v2 + 4)) ^ 0xFC))] ^ 0xC4])
               - 107)
     - 4;
  if (v3 == 1699122663)
    __asm { BR              X17 }
  if (v3 == 1699122670)
  {
    v5 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BR              X2 }
  }
  return 4294925278;
}

void sub_1D24A27D8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 36) ^ (235795823
                             * ((-2 - ((a1 ^ 0x29040430 | 0x96E8ABCB) + (a1 ^ 0x10C0A082 | 0x69175434))) ^ 0x52961214));
  __asm { BR              X14 }
}

uint64_t sub_1D24A2918()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1655 * (v0 != 0xA531F30B)) ^ v1)) - 8))();
}

uint64_t sub_1D24A2980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;

  v11 = v6 > 0x6B44DE1;
  v12 = (v8 - 135319999);
  *(_BYTE *)(*(_QWORD *)(v10 - 120) + v12) = *(_BYTE *)(v0 + v12) ^ *(_BYTE *)(v2 + (v12 & 0xF)) ^ *(_BYTE *)(v1 + (v12 & 0xF)) ^ *(_BYTE *)(v3 + (v12 & 0xF)) ^ (97 * ((v8 + 65) & 0xF)) ^ 0x67;
  if (v11 == v8 - 247799712 < ((310 * (v5 ^ 0x588)) ^ (v4 + 1192)))
    v11 = v8 - 247799712 < v7;
  return (*(uint64_t (**)(void))(v9 + 8 * ((951 * v11) ^ v5)))();
}

uint64_t sub_1D24A2A30()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((88
                                * (((2 * v1) & 0xD8F7F756 ^ 0x4863E616) + (v1 ^ 0xC94A08A0) - 1141047809 != (((v0 - 768) | 0xB0) ^ 0x2878FD1B))) ^ (v0 - 373))))();
}

uint64_t sub_1D24A2AA4(int a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5 + 8 * ((125 * (a1 + v4 - 1820064683 >= ((a4 + 79) | 0x201u) - 1785)) ^ a4)))();
}

uint64_t sub_1D24A2AF0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((7
                                          * (a5 + ((((a8 - 1281) | 0x501) + a2) ^ (a8 - 1080369158) & 0x406519EDu) < 0xFFFFFFF0)) ^ (a8 - 1574)))
                            - 8))();
}

uint64_t sub_1D24A2B4C(int a1, int a2, uint64_t a3, unsigned int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _BOOL4 v20;

  v11 = *(_QWORD *)(v10 - 120);
  v12 = a1 + v8 + ((((a4 + 1303) | 0x101) - 1417) ^ (a2 + 1920)) + v11;
  v13 = ((_BYTE)a1 + (_BYTE)v8 + ((((a4 + 23) | 1) + 119) ^ (a2 + 0x80))) & 0xF;
  v14 = v13 + v6 - v12;
  v15 = (v13 | v5) - v12;
  v16 = (v13 | v7) - v12;
  v20 = (unint64_t)(v4 - v11) < 0x10 || v14 < 0x10 || v15 < 0x10 || v16 < 0x10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((4 * v20) | (16 * v20) | a4)) - 12))();
}

uint64_t sub_1D24A2BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5
                                                                                + 8
                                                                                * ((883
                                                                                  * (v4 < ((4
                                                                                          * (((v3 - 352) | 0x325) ^ 0x3D9)) ^ 0x380u))) ^ v3))
                                                                    - 12))(a1, a2, a3, 0);
}

uint64_t sub_1D24A2C08(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  int8x16_t v49;
  int8x16_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int8x16x4_t v55;
  int8x16x4_t v56;

  v55.val[1].i64[0] = ((_BYTE)a3 + 3) & 0xF;
  v55.val[1].i64[1] = ((_BYTE)a3 + 2) & 0xF;
  v55.val[2].i64[0] = ((_BYTE)a3 + 1) & 0xF;
  v55.val[2].i64[1] = a3 & 0xF;
  v55.val[3].i64[0] = ((_BYTE)a3 - 1) & 0xF;
  v55.val[3].i64[1] = ((_BYTE)a3 + 14) & 0xF;
  v56.val[0].i64[0] = ((_BYTE)a3 + 13) & 0xF;
  v56.val[0].i64[1] = ((_BYTE)a3 + 12) & 0xF;
  v56.val[1].i64[0] = ((_BYTE)a3 + 11) & 0xF;
  v56.val[1].i64[1] = ((_BYTE)a3 + 10) & 0xF;
  v56.val[2].i64[0] = (a3 + 9) & 0xF;
  v56.val[2].i64[1] = (a3 + 8) & 0xF;
  v56.val[3].i64[0] = ((_BYTE)a3 + 7) & 0xF;
  v56.val[3].i64[1] = ((_BYTE)a3 + 6) & 0xF;
  v49.i64[0] = 0x6161616161616161;
  v49.i64[1] = 0x6161616161616161;
  v50.i64[0] = 0x6767676767676767;
  v50.i64[1] = 0x6767676767676767;
  v55.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)v46) & 0xF;
  v55.val[0].i64[1] = ((_BYTE)a3 + 4) & 0xF;
  v51.i64[0] = vqtbl4q_s8(v55, (int8x16_t)xmmword_1D24F95A0).u64[0];
  v51.i64[1] = vqtbl4q_s8(v56, (int8x16_t)xmmword_1D24F95A0).u64[0];
  v52 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v42 - 15 + (a3 + v46)), *(int8x16_t *)(v44 + v55.val[0].i64[0] - 15)), veorq_s8(*(int8x16_t *)(v43 + v55.val[0].i64[0] - 15), *(int8x16_t *)(v45 + v55.val[0].i64[0] - 15))));
  v53 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v52, v52, 8uLL), v50), vmulq_s8(v51, v49)));
  *(int8x16_t *)(*(_QWORD *)(v48 - 120) - 15 + (a3 + v46)) = vextq_s8(v53, v53, 8uLL);
  return (*(uint64_t (**)(void))(a42 + 8 * ((1422 * (((a5 - 211) ^ 0x27A) == (v47 & 0xFFFFFFF0))) ^ a5)))();
}

uint64_t sub_1D24A2D78(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a7 ^ (207 * (v7 == a4))))
                            - ((a7 - 1979929708) & 0x760356D9)
                            - (((a7 - 602) | 0xEDu) ^ 0xFFFFFFFFFFFFFBCDLL)))();
}

uint64_t sub_1D24A2DCC()
{
  unsigned int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(((((v1 - 109) | 0x300) - 154) * ((v0 >> 3) & 1)) ^ v1))
                            - (v1 ^ 0xF1)))();
}

uint64_t sub_1D24A2E04@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  int v43;
  int v44;
  uint64_t v45;
  unsigned int v46;
  int v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  unsigned int v53;
  int8x16x4_t v55;

  *(_DWORD *)(v45 - 144) = v44;
  *(_QWORD *)(v45 - 128) = v38 - 7;
  *(_QWORD *)(v45 - 136) = *(_QWORD *)(v45 - 120) - 7;
  *(_DWORD *)(v45 - 152) = v44 & 0xFFFFFFF8;
  v46 = a3 - (v44 & 0xFFFFFFF8) + 8;
  v47 = a1 + v43;
  v48 = a1 + v43 + v42;
  v49 = v48 - a3;
  v50 = v48 - a3 + 14;
  v51 = v48 - a3 + 15;
  v52 = v48 + a4 - a3 + 113;
  v53 = a2 + v47 - a3 + 1704;
  v55.val[0].i64[0] = v53 & 0xF;
  v55.val[0].i64[1] = (v49 + 4) & 0xF;
  v55.val[1].i64[0] = (v49 + 3) & 0xF;
  v55.val[1].i64[1] = (v49 + 2) & 0xF;
  v55.val[2].i64[0] = v52 & 0xF;
  v55.val[2].i64[1] = v49 & 0xF;
  v55.val[3].i64[0] = v51 & 0xF;
  v55.val[3].i64[1] = v50 & 0xF;
  *(int8x8_t *)(*(_QWORD *)(v45 - 136) + v53) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(*(_QWORD *)(v45 - 128) + v53), *(int8x8_t *)(v40 + v55.val[0].i64[0] - 7)), veor_s8(*(int8x8_t *)(v39 + v55.val[0].i64[0] - 7), *(int8x8_t *)(v41 + v55.val[0].i64[0] - 7)))), (int8x8_t)0x6767676767676767), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v55, (int8x16_t)xmmword_1D24F95B0), (int8x8_t)0x6161616161616161)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a38 + 8 * ((46 * (v46 == 0)) | a4)) - 8))((__n128)xmmword_1D24F95B0);
}

void sub_1D24A2F60()
{
  JUMPOUT(0x1D24A2E88);
}

uint64_t sub_1D24A2F68@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((a1 + 1466661705) & 0xA89485FE ^ 0x2E4 ^ ((a1 - 912) | 0x701))
                                     * (*(_DWORD *)(v2 - 144) == *(_DWORD *)(v2 - 152))) ^ (a1 + 289))))();
}

uint64_t sub_1D24A2FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = (a6 + v13);
  *(_BYTE *)(*(_QWORD *)(v15 - 120) + v16) = *(_BYTE *)(v8 + v16) ^ *(_BYTE *)(v10 + (v16 & 0xF)) ^ *(_BYTE *)(v9 + (v16 & 0xF)) ^ *(_BYTE *)(v11 + (v16 & 0xF)) ^ (97 * (v16 & 0xF)) ^ 0x67;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * (((a6 - 1 == v12) * (((a8 - 705) | 0x98) ^ 0x68F)) ^ (a8 - 1551)))
                            - 8))();
}

uint64_t sub_1D24A303C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  int v39;

  v37 = *(_QWORD *)(v34 + 24);
  *(int8x16_t *)(v36 - 112) = veorq_s8(*(int8x16_t *)(*(_QWORD *)(v34 + 40) - 0x255BEB2B24085531), (int8x16_t)xmmword_1D24F95C0);
  if (*(_QWORD *)(v36 - 120))
    v38 = v37 == 0x5A86EB189CF12664;
  else
    v38 = 1;
  v39 = !v38;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 + 8 * (int)((493 * v39) ^ a5)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_1D24A30BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  uint64_t v43;
  int v44;
  int v45;
  unsigned int v46;
  _BOOL4 v48;

  v44 = a43 + 82;
  v45 = HIDWORD(a11) - (((HIDWORD(a11) + 1544179892) & 0x54D2BBF7 ^ BYTE4(a11) & 1) << ((a43 + 82) ^ 0xA6)) - 1327690582;
  v46 = ((2 * v45) & 0x5FAF3F1C ^ 0x9A5370C) + (v45 ^ 0xFB052478);
  v48 = (((a43 - 412) ^ 0x3B6) & (v46 + 2)) != 0 || v46 == (v44 ^ 0xF2) + 802658873;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * (((2 * v48) | (16 * v48)) ^ v44)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_1D24A3180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45)
{
  uint64_t v45;
  int v46;

  v46 = a13 - ((a45 + 5507345) & (2 * a10)) + 1546934247;
  return (*(uint64_t (**)(void))(v45
                              + 8
                              * ((63
                                * (((2 * v46) & 0xFFBD7EFE ^ 0x140E66) + (v46 ^ (a45 - 740617)) - 121899018 != 2023405429)) ^ a45)))();
}

uint64_t sub_1D24A322C(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((7 * ((a1 + v2 + v1 - 2145304020 - 1792) > 7)) ^ (v1 - 883)))
                            - 4))();
}

uint64_t sub_1D24A32A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((1327 * ((a6 & 0xFFFFFFF0) == (((a3 ^ 0x7C4) + 219) ^ 0x7FDEB881))) ^ a3))
                            - 4))();
}

uint64_t sub_1D24A32E0(int a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _BOOL4 v21;
  int v24;

  v9 = (a1 + v5 + v6);
  v10 = *(_QWORD *)(v8 - 120);
  v11 = v9 + v10 + 1;
  v12 = (a1 + v5) & 0xF;
  v13 = v12 - v9;
  v14 = v2 + v13;
  v15 = v12 + v2 + 1;
  v16 = v13 + v4 + 2;
  v17 = v12 + v4 + 3;
  v18 = v13 + (a2 - 763) + v3 - 807;
  v19 = v12 + 11 * (a2 ^ 0x685u) + v3 - 1788;
  v21 = v15 > v10 && v14 < v11;
  if (v17 > v10 && v16 < v11)
    v21 = 1;
  v24 = v19 > v10 && v18 < v11 || v21;
  return (*(uint64_t (**)(void))(v7 + 8 * ((23 * v24) ^ a2)))();
}

uint64_t sub_1D24A3380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v7
                                                                      + 8
                                                                      * (((9 * (a6 ^ 0x318) - 311) * (v6 > 0xF)) ^ a6))
                                                          - 4))(a1, a6 ^ 0x7C2u, 0);
}

uint64_t sub_1D24A33B8(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  int v47;
  int v48;
  uint64_t v49;
  unsigned int v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int8x16x4_t v55;
  int8x16x4_t v56;

  *(_DWORD *)(v49 - 136) = v48 + 2;
  v55.val[1].i64[0] = ((_BYTE)v48 + 8) & 0xF;
  v55.val[1].i64[1] = ((_BYTE)v48 + 7) & 0xF;
  v55.val[2].i64[0] = ((_BYTE)v48 + 6) & 0xF;
  v55.val[2].i64[1] = ((_BYTE)v48 + 5) & 0xF;
  v55.val[3].i64[0] = ((_BYTE)v48 + 4) & 0xF;
  v55.val[3].i64[1] = ((_BYTE)v48 + 3) & 0xF;
  v50 = a1 + v46 + v47;
  v51.i64[0] = 0x7777777777777777;
  v51.i64[1] = 0x7777777777777777;
  v55.val[0].i64[0] = v50 & 0xF;
  v55.val[0].i64[1] = ((_BYTE)v48 + 9) & 0xF;
  v52.i64[0] = vqtbl4q_s8(v55, (int8x16_t)xmmword_1D24F95A0).u64[0];
  v56.val[0].i64[1] = ((_BYTE)v48 + 1) & 0xF;
  v56.val[1].i64[1] = ((_BYTE)v48 - 1) & 0xF;
  v56.val[2].i64[1] = (v48 + 13) & 0xF;
  v56.val[3].i64[1] = ((_BYTE)v48 + 11) & 0xF;
  v56.val[0].i64[0] = *(_DWORD *)(v49 - 136) & 0xF;
  v56.val[1].i64[0] = v48 & 0xF;
  v56.val[2].i64[0] = (v48 + 14) & 0xF;
  v56.val[3].i64[0] = (v48 + 12) & 0xF;
  v52.i64[1] = vqtbl4q_s8(v56, (int8x16_t)xmmword_1D24F95A0).u64[0];
  v53 = vrev64q_s8(vmulq_s8(v52, v51));
  *(int8x16_t *)(*(_QWORD *)(v49 - 120) - 15 + v50) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v42 + v55.val[0].i64[0] - 15), *(int8x16_t *)(*(_QWORD *)(v49 - 120) - 15 + v50)), veorq_s8(*(int8x16_t *)(v55.val[0].i64[0] + v44 - 13), *(int8x16_t *)(v55.val[0].i64[0] + v43 - 11))), vextq_s8(v53, v53, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a42 + 8 * ((((v45 & 0xFFFFFFF0) == 16) * (57 * (a4 ^ 0x1C9) + 915)) ^ a4))
                            - 8))();
}

void sub_1D24A3524()
{
  JUMPOUT(0x1D24A34ACLL);
}

uint64_t sub_1D24A3530@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v35;
  unsigned __int8 *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  unint64_t v41;
  int v42;
  char *v43;
  int v44;
  int v45;
  char *v46;
  char *v47;
  char v48;
  int v49;
  int v50;
  uint64_t v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  int v55;
  int v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  int v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  unsigned int v64;
  char *v65;
  int v66;
  uint64_t v67;
  char *v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned __int8 *v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  uint64_t v115;
  int v116;
  char *v117;
  char *v118;
  unsigned int v119;
  int v120;
  int v121;
  int v122;
  unsigned int v123;
  char *v124;
  int v125;
  unsigned int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  unsigned int v158;
  int v159;
  int v160;
  int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  int v179;
  unsigned int v180;
  int v181;
  int v182;
  int v183;
  uint64_t v184;
  unsigned int v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  int v190;
  unsigned int v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  int v195;
  uint64_t v196;
  unsigned int v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  int v230;
  int v231;
  int v232;
  unsigned int v233;
  int v234;
  unsigned int v235;
  unsigned int v236;

  *(_DWORD *)(v38 - 136) = a1;
  v39 = (uint64_t)*(&off_1E93A7480 + (v37 ^ 0x300));
  v40 = *(unsigned __int8 *)(v39 + (*(unsigned __int8 *)(v35 - 0x5A86EB189CF12663) ^ 0x85));
  HIDWORD(v41) = v40 ^ 0x32;
  LODWORD(v41) = (v40 ^ 0x80) << 24;
  v42 = (v41 >> 30) ^ 0x9F;
  v43 = (char *)*(&off_1E93A7480 + v37 - 934) - 4;
  v44 = v43[*(unsigned __int8 *)(v35 - 0x5A86EB189CF12659) ^ 0xBFLL];
  HIDWORD(v41) = (v37 + 840) ^ 0xA ^ v44;
  LODWORD(v41) = (v44 ^ 0xFFFFFF9F) << 24;
  LOBYTE(v44) = v41 >> 28;
  v45 = *(unsigned __int8 *)(v39 + (*(unsigned __int8 *)(v35 - 0x5A86EB189CF1265FLL) ^ 0x6FLL));
  HIDWORD(v41) = v45 ^ 0x32;
  LODWORD(v41) = (v45 ^ 0x80) << 24;
  v46 = (char *)*(&off_1E93A7480 + v37 - 755) - 4;
  v47 = (char *)*(&off_1E93A7480 + v37 - 790) - 8;
  v48 = v47[*(unsigned __int8 *)(v35 - 0x5A86EB189CF12658) ^ 0xD8];
  v49 = (((v41 >> 30) ^ 0x68) << 16) | ((v46[*(unsigned __int8 *)(v35
                                                                                                  - 0x5A86EB189CF1265ELL) ^ 0xDFLL] ^ 1) << 8);
  v50 = v43[*(unsigned __int8 *)(v35 - 0x5A86EB189CF12655) ^ 0xBCLL];
  HIDWORD(v41) = v50 ^ 0xB;
  LODWORD(v41) = (v50 ^ 0xFFFFFF9F) << 24;
  LOBYTE(v50) = v41 >> 28;
  v51 = v50 ^ 0x68;
  v52 = v49 | ((v47[*(unsigned __int8 *)(v35 - 0x5A86EB189CF12660) ^ 0xAFLL] ^ 0x88888888) << 24);
  v53 = v43[*(unsigned __int8 *)(v35 - 0x5A86EB189CF1265DLL) ^ 0x98];
  HIDWORD(v41) = v53 ^ 0xB;
  LODWORD(v41) = (v53 ^ 0xFFFFFF9F) << 24;
  v54 = v52 & 0xFFFFFF00 | (v41 >> 28);
  v55 = (v42 << 16) | ((v46[*(unsigned __int8 *)(v35 - 0x5A86EB189CF12662) ^ 0x49] ^ 0x8B) << 8) | ((v47[*v36 ^ 0xFELL] ^ 0x51) << 24);
  v56 = v43[*(unsigned __int8 *)(v35 - 0x5A86EB189CF12661) ^ 0xD0];
  HIDWORD(v41) = v56 ^ 0xB;
  LODWORD(v41) = (v56 ^ 0xFFFFFF9F) << 24;
  v57 = *(unsigned __int8 *)(v39 + (*(unsigned __int8 *)(v35 - 0x5A86EB189CF12657) ^ 0xB6));
  LOBYTE(v56) = (v41 >> 28) ^ 0x3C;
  HIDWORD(v41) = v57 ^ 0x32;
  LODWORD(v41) = (v57 ^ 0x80) << 24;
  v58 = v55 & 0xFFFFFF00 | v56;
  v59 = (v41 >> 30) ^ 0x21;
  v60 = *(unsigned __int8 *)(v39 + (*(unsigned __int8 *)(v35 - 0x5A86EB189CF1265BLL) ^ 0xC8));
  HIDWORD(v41) = v60 ^ 0x32;
  LODWORD(v41) = (v60 ^ 0x80) << 24;
  v61 = (((v46[*(unsigned __int8 *)(v35 - 0x5A86EB189CF12656) ^ 0xC7] ^ 0xC0) << 8) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(v48 ^ 0x58u) << 24) | (v59 << 16) | v51) ^ 0x75F49EF4;
  v62 = ((unsigned __int16)((((v46[*(unsigned __int8 *)(v35 - 0x5A86EB189CF12656) ^ 0xC7] ^ 0xC0) << 8) | v51) ^ 0x9EF4) >> 8);
  v63 = (char *)*(&off_1E93A7480 + (v37 ^ 0x3E7)) - 8;
  v64 = v44 | ((v46[*(unsigned __int8 *)(v35 - 0x5A86EB189CF1265ALL) ^ 0xB7] ^ 0x20) << 8) & 0xFF00FFFF | (((v41 >> 30) ^ 0x37) << 16) | ((v47[*(unsigned __int8 *)(v35 - 0x5A86EB189CF1265CLL) ^ 0x18] ^ 0x17) << 24);
  LODWORD(v62) = (v62 - ((2 * (v61 >> 8)) & 0x54) + 1844058666) ^ *(_DWORD *)&v63[4 * (v62 ^ 0xF5)];
  v65 = (char *)*(&off_1E93A7480 + v37 - 742) - 4;
  v66 = *(_DWORD *)&v65[4 * (v48 ^ 0x47)];
  HIDWORD(v41) = ~v66;
  LODWORD(v41) = v66 ^ 0xB870D538;
  v67 = (uint64_t)*(&off_1E93A7480 + (v37 ^ 0x376));
  LODWORD(v62) = (v41 >> 2) ^ *(_DWORD *)(v67 + 4 * (v59 ^ 0xDD)) ^ (v62
                                                                                   - ((2 * v62) & 0x2E703170)
                                                                                   - 1757931336);
  v68 = (char *)*(&off_1E93A7480 + (v37 ^ 0x319)) - 8;
  v235 = v58;
  v236 = v54;
  v69 = *(_DWORD *)&v68[4 * (v50 ^ 0xD9)] ^ v58 ^ (v62 - ((2 * v62) & 0x30E5F1F4) + 410188026);
  v233 = v64;
  v231 = v69 ^ v54 ^ 0x2789BBD4;
  v70 = v64 ^ 0xE6 ^ v231;
  v71 = *(_DWORD *)&v65[4 * (((v70 ^ v61) >> 24) ^ 0x21)];
  HIDWORD(v41) = ~v71;
  LODWORD(v41) = v71 ^ 0xB870D538;
  v72 = ((v41 >> 2) - ((2 * (v41 >> 2)) & 0x30E5F1F4) + 410188026) ^ *(_DWORD *)&v68[4
                                                                                   * ((v70 ^ v61) ^ 0xDE)];
  HIDWORD(v229) = v70 ^ v61;
  v232 = v69;
  LODWORD(v229) = *(_DWORD *)&v63[4 * (((unsigned __int16)(v70 ^ v61) >> 8) ^ 0x1E)] ^ *(_DWORD *)(v67 + 4 * (((v70 ^ v61) >> 16) ^ 0x8Fu)) ^ v69 ^ ((((unsigned __int16)(v70 ^ v61) >> 8) ^ 0xEB) - ((2 * (((v70 ^ v61) >> 8) ^ 0x4BA6EB)) & 0x54) + 1844058666) ^ (v72 - 1757931336 + (~(2 * v72) | 0xD18FCE8F) + 1);
  v73 = v229 ^ 0x76E748E2 ^ v69 ^ v54;
  v234 = v61;
  LODWORD(v62) = *(_DWORD *)&v65[4 * (((v73 ^ v61) >> 24) ^ 0xA2)];
  HIDWORD(v41) = ~(_DWORD)v62;
  LODWORD(v41) = v62 ^ 0xB870D538;
  v74 = v73 ^ v61 ^ 0xC84590C6;
  LODWORD(v62) = *(_DWORD *)&v63[4 * (BYTE1(v74) ^ 0xF5)] ^ *(_DWORD *)(v67
                                                                      + 4
                                                                      * (((v73 ^ v61) >> 16) ^ 0x6Cu)) ^ (BYTE1(v74) - (((v73 ^ v61) >> 7) & 0x54) + 1844058666) ^ ((v41 >> 2) - ((2 * (v41 >> 2)) & 0x2E703170) - 1757931336);
  HIDWORD(v227) = v229 ^ 0x76E748E2 ^ *(_DWORD *)&v68[4 * ((v73 ^ v61) ^ 0x83)] ^ (v62
                                                                                                  - ((2 * v62) & 0x30E5F1F4)
                                                                                                  + 410188026);
  LODWORD(v228) = v73 ^ v61;
  v75 = HIDWORD(v227) ^ 0x2789BBD4 ^ v73 ^ 0x8EDEEA78;
  v230 = v70;
  HIDWORD(v228) = v73;
  HIDWORD(v226) = v73 ^ v70;
  LODWORD(v227) = HIDWORD(v227) ^ 0x2789BBD4 ^ v73;
  v76 = v75 ^ v73 ^ v70;
  LODWORD(v51) = *(_DWORD *)&v65[4 * (((v76 ^ v74) >> 24) ^ 0x67)];
  HIDWORD(v41) = ~(_DWORD)v51;
  LODWORD(v41) = v51 ^ 0xB870D538;
  LODWORD(v51) = (v41 >> 2) ^ *(_DWORD *)&v63[4 * (((unsigned __int16)(v76 ^ v74) >> 8) ^ 0x97)] ^ ((((unsigned __int16)(v76 ^ v74) >> 8) ^ 0x62) - ((2 * (((v76 ^ v74) >> 8) ^ 0xD8B62)) & 0x54) + 1844058666);
  LODWORD(v51) = (v51 - ((2 * v51) & 0x30E5F1F4) + 410188026) ^ *(_DWORD *)&v68[4
                                                                              * ((v76 ^ v74) ^ 0xE1)];
  v77 = HIDWORD(v227) ^ 0x2789BBD4 ^ *(_DWORD *)(v67 + 4 * (((v76 ^ v74 ^ 0x2142BA5) >> 16) ^ 0xB6u)) ^ (v51 - ((2 * v51) & 0x2E703170) - 1757931336);
  HIDWORD(v225) = v76 ^ v74;
  LODWORD(v226) = v76;
  HIDWORD(v224) = v77 ^ v75;
  LODWORD(v51) = v77 ^ v75 ^ 0x307C325C;
  LODWORD(v224) = v51 ^ v76 ^ 0x5EF1BA37;
  v78 = *(_DWORD *)&v65[4 * (((v224 ^ v76 ^ v74) >> 24) ^ 0xA4)];
  HIDWORD(v41) = ~v78;
  LODWORD(v41) = v78 ^ 0xB870D538;
  v79 = ((v41 >> 2) - ((2 * (v41 >> 2)) & 0x30E5F1F4) + 410188026) ^ *(_DWORD *)&v68[4
                                                                                   * ((v224 ^ v76 ^ v74) ^ 0x18)];
  HIDWORD(v223) = v224 ^ v76 ^ v74;
  LODWORD(v225) = v77;
  v80 = *(_DWORD *)(v67 + 4 * (BYTE6(v223) ^ 0xCAu)) ^ *(_DWORD *)&v63[4
                                                                       * (((unsigned __int16)(WORD2(v223) ^ 0x7B5D) >> 8) ^ 0xF5)] ^ v77 ^ (((unsigned __int16)(WORD2(v223) ^ 0x7B5D) >> 8) - (((HIDWORD(v223) ^ 0xCEE37B5D) >> 7) & 0x54) + 1844058666) ^ 0xCC45F02D ^ (v79 - ((2 * v79) & 0x2E703170) - 1757931336);
  v81 = v80 ^ ((v76 ^ 0x5EF1BA37) - ((2 * (v76 ^ 0x5EF1BA37)) & 0x988BE05A) - 867831763);
  LODWORD(v62) = *(_DWORD *)&v65[4 * (((v81 ^ HIDWORD(v223) ^ 0xCEE37B5D) >> 24) ^ 0x70)];
  HIDWORD(v41) = ~(_DWORD)v62;
  LODWORD(v41) = v62 ^ 0xB870D538;
  LODWORD(v62) = ((v41 >> 2) - ((2 * (v41 >> 2)) & 0x2E703170) - 1757931336) ^ *(_DWORD *)(v67
                                                                                         + 4
                                                                                         * (((v81 ^ HIDWORD(v223) ^ 0xCEE37B5D ^ 0xF3443494) >> 16) ^ 0xE4u));
  LODWORD(v62) = (v62 - ((2 * v62) & 0x30E5F1F4) + 410188026) ^ *(_DWORD *)&v68[4
                                                                              * ((v81 ^ BYTE4(v223) ^ 0x5D) ^ 0x91)];
  LODWORD(v222) = v81 ^ HIDWORD(v223) ^ 0xCEE37B5D;
  HIDWORD(v222) = v81;
  LODWORD(v62) = (v62 - ((2 * v62) & 0xDBD43454) + 1844058666) ^ *(_DWORD *)&v63[4
                                                                               * (((unsigned __int16)(v222 ^ 0xBBD4) >> 8) ^ 0xF5)];
  v82 = v80 ^ ((unsigned __int16)(v222 ^ 0xBBD4) >> 8) ^ (v62 - 867831762 + (~(2 * v62) | 0x67741FA5));
  LODWORD(v223) = v80;
  LODWORD(v221) = v80 ^ (v51 - 867831762 + (~(2 * v51) | 0x67741FA5));
  HIDWORD(v220) = v82 ^ v221;
  LODWORD(v62) = v82 ^ v221 ^ 0xE6F58988;
  v83 = v62 ^ v81;
  LODWORD(v51) = *(_DWORD *)&v65[4 * (((v83 ^ v222 ^ 0x1A89BBD4) >> 24) ^ 0x43)];
  HIDWORD(v41) = ~(_DWORD)v51;
  LODWORD(v41) = v51 ^ 0xB870D538;
  HIDWORD(v219) = v83 ^ v222 ^ 0x1A89BBD4;
  LODWORD(v51) = *(_DWORD *)&v63[4 * (((unsigned __int16)(WORD2(v219) ^ 0x7ABE) >> 8) ^ 0xF5)] ^ *(_DWORD *)(v67 + 4 * (((HIDWORD(v219) ^ 0x4D501F31u) >> 16) ^ 0xE2u)) ^ (((unsigned __int16)(WORD2(v219) ^ 0x7ABE) >> 8) - (((HIDWORD(v219) ^ 0x299B7ABEu) >> 7) & 0x54) + 1844058666) ^ ((v41 >> 2) - ((2 * (v41 >> 2)) & 0x2E703170) - 1757931336);
  HIDWORD(v221) = v82;
  v84 = v82 ^ *(_DWORD *)&v68[4 * ((v83 ^ v222 ^ 0xD4) ^ 0xFB)] ^ (v51
                                                                                  - ((2 * v51) & 0x30E5F1F4)
                                                                                  + 410188026);
  HIDWORD(v218) = v84 ^ v62;
  LODWORD(v62) = v84 ^ v62 ^ 0x5BF36347;
  LODWORD(v220) = v83;
  LODWORD(v218) = v62 ^ v83;
  LODWORD(v51) = v62 ^ v83 ^ 0x2745D0FF;
  v85 = v51 ^ HIDWORD(v219) ^ 0x299B7ABE ^ 0x3DCC6B2B;
  LODWORD(v46) = (BYTE1(v85) - ((v85 >> 7) & 0x54) + 1844058666) ^ *(_DWORD *)&v63[4 * (BYTE1(v85) ^ 0xF5)];
  v86 = ((_DWORD)v46 - ((2 * (_DWORD)v46) & 0x30E5F1F4) + 410188026) ^ *(_DWORD *)&v68[4
                                                                                     * ((~(v62 ^ v83) ^ BYTE4(v219) ^ 0xBE) ^ 0x6E)];
  HIDWORD(v217) = v51 ^ HIDWORD(v219) ^ 0x299B7ABE;
  LODWORD(v46) = *(_DWORD *)&v65[4 * (HIBYTE(HIDWORD(v217)) ^ 0x57)];
  HIDWORD(v41) = ~(_DWORD)v46;
  LODWORD(v41) = v46 ^ 0xB870D538;
  LODWORD(v219) = v84;
  LODWORD(v217) = (v41 >> 2) ^ *(_DWORD *)(v67 + 4 * (((HIDWORD(v217) ^ 0x516EF336u) >> 16) ^ 0x8Bu)) ^ v84 ^ (v86 - ((2 * v86) & 0x2E703170) - 1757931336);
  HIDWORD(v216) = v217 ^ 0x930000ED ^ v62;
  LODWORD(v216) = HIDWORD(v216) ^ 0x8D06EA22 ^ v51;
  v87 = v216 ^ v85;
  LODWORD(v46) = v216 ^ v85 ^ 0x9289BB39;
  v88 = (v216 ^ v85) ^ 4;
  v89 = v216 ^ v85 ^ 0x53DEAA41;
  HIDWORD(v215) = v87;
  LODWORD(v61) = *(_DWORD *)&v65[4 * (HIBYTE(v87) ^ 0x39)];
  HIDWORD(v41) = ~(_DWORD)v61;
  LODWORD(v41) = v61 ^ 0xB870D538;
  v90 = *(_DWORD *)&v63[4 * (BYTE1(v89) ^ 0xF5)] ^ *(_DWORD *)&v68[4 * v88] ^ (v41 >> 2);
  LODWORD(v61) = *(_DWORD *)(v67 + 4 * (BYTE2(v46) ^ 0x7Eu)) ^ v217 ^ 0x930000ED ^ BYTE1(v89) ^ 0xDEF772AE ^ ((v90 ^ 0x7598E2D0) - 2 * ((v90 ^ 0x7598E2D0) & 0x173818BD ^ v90 & 5) - 1757931336);
  LODWORD(v62) = v61 ^ (v51 - ((2 * v51) & 0xBDEEE55C) - 554208594);
  LODWORD(v46) = v62 ^ v89;
  LODWORD(v65) = *(_DWORD *)&v65[4 * (((v62 ^ v89) >> 24) ^ 0x44)];
  HIDWORD(v41) = ~(_DWORD)v65;
  LODWORD(v41) = v65 ^ 0xB870D538;
  HIDWORD(v214) = v62 ^ v89 ^ 0xF033E4D9;
  v91 = *(_DWORD *)&v63[4 * (BYTE1(v46) ^ 0xFD)] ^ *(_DWORD *)&v68[4 * ((v62 ^ v89) ^ 0xC4)] ^ ((BYTE1(v46) ^ 8) - 2 * ((BYTE1(v46) ^ 8) & 0x3F ^ (v46 >> 8) & 0x15) + 1844058666) ^ ((v41 >> 2) - ((2 * (v41 >> 2)) & 0x30E5F1F4) + 410188026);
  v92 = (v91 - ((2 * v91) & 0x2E703170) - 1757931336) ^ *(_DWORD *)(v67
                                                                  + 4
                                                                  * (((v62 ^ v89) >> 16) ^ 0x16u));
  LODWORD(v67) = v62 ^ 0x626A2240;
  v93 = (char *)*(&off_1E93A7480 + (v37 ^ 0x3D7)) - 12;
  v94 = (char *)*(&off_1E93A7480 + (v37 ^ 0x3F7)) - 12;
  LODWORD(v63) = v94[*(unsigned __int8 *)(v38 - 109) ^ 0xA5];
  HIDWORD(v41) = v63 ^ 0x1A;
  LODWORD(v41) = (v63 ^ 0x80) << 24;
  v95 = (uint64_t)*(&off_1E93A7480 + (v37 ^ 0x3E3));
  v96 = (char *)*(&off_1E93A7480 + (v37 & 0x4F8BD010)) - 12;
  v212 = v94;
  v213 = v93;
  v97 = (v94[*(unsigned __int8 *)(v38 - 97) ^ 0x7BLL] ^ 0xE5) & 0xFFFF00FF | ((((*(_BYTE *)(v38 - 98) ^ 0xD0) + v93[*(unsigned __int8 *)(v38 - 98) ^ 0xDFLL] + 56) ^ 0xE4) << 8) | ((*(unsigned __int8 *)(v95 + (*(unsigned __int8 *)(v38 - 99) ^ 0xAALL)) ^ 0xF8) << 16);
  LODWORD(v62) = (v94[*(unsigned __int8 *)(v38 - 101) ^ 0x60] ^ 0x51) & 0xFFFF00FF | ((*(unsigned __int8 *)(v95 + (*(unsigned __int8 *)(v38 - 103) ^ 5)) ^ 0xCA) << 16) | (((v93[*(unsigned __int8 *)(v38 - 102) ^ 4] + (*(_BYTE *)(v38 - 102) ^ 0xB) + 56) ^ 0x33) << 8) | ((v96[*(unsigned __int8 *)(v38 - 104) ^ 0x1CLL] ^ 0xA8) << 24);
  v210 = v96;
  v211 = v95;
  v98 = (v94[*(unsigned __int8 *)(v38 - 105) ^ 0x28] ^ 0x90) & 0xFFFF00FF | ((((*(_BYTE *)(v38 - 106) ^ 0xAC) + v93[*(unsigned __int8 *)(v38 - 106) ^ 0xA3] + 56) ^ 0xF6) << 8) | ((v96[*(unsigned __int8 *)(v38 - 108) ^ 0xB2] ^ 0x5F) << 24);
  LODWORD(v93) = (((((v41 >> 30) ^ 0xDB) >> 2) | (((v41 >> 30) ^ 0xDB) << 6)) | ((*(unsigned __int8 *)(v95 + (*(unsigned __int8 *)(v38 - 111) ^ 0x7ALL)) ^ 0x9B) << 16) | ((v96[*(unsigned __int8 *)(v38 - 112) ^ 0x78] ^ 0x5D) << 24) | (((v93[*(unsigned __int8 *)(v38 - 110) ^ 0x5DLL] + (*(_BYTE *)(v38 - 110) ^ 0x52) + 56) ^ 0x5D) << 8)) ^ 0xE31C8E11;
  v99 = v62 ^ 0xA1CDC83F;
  v100 = (v98 | ((*(unsigned __int8 *)(v95 + (*(unsigned __int8 *)(v38 - 107) ^ 0x27)) ^ 0xAE) << 16)) ^ 0x7DE04AB9;
  LODWORD(v95) = (v97 | ((v96[*(unsigned __int8 *)(v38 - 100) ^ 0x45] ^ 0x67) << 24)) ^ 0xA4B5B585;
  HIDWORD(v209) = *(_DWORD *)(v38 - 136) - 802660238;
  v101 = (HIDWORD(v216) ^ 0x8D06EA22) - ((2 * (HIDWORD(v216) ^ 0x8D06EA22)) & 0xBDEEE55C) - 554208594;
  v102 = v92 - ((2 * v92) & 0xBDEEE55C) - 554208594;
  HIDWORD(v208) = (v37 + 840) ^ 0x742;
  HIDWORD(v207) = v61 ^ v101;
  LODWORD(v208) = (v37 + 840) ^ 0x715;
  LODWORD(v207) = (v37 + 840) ^ 0x73C;
  LODWORD(v215) = v61;
  LODWORD(v206) = v102 ^ v61;
  HIDWORD(v206) = (v37 + 840) ^ 0x7B1;
  *(_DWORD *)(v38 - 128) = v37 + 840;
  HIDWORD(v205) = (v37 + 840) ^ 0x7B0;
  LODWORD(v214) = v67;
  LODWORD(v209) = v101 ^ 0x3DC8BA5D ^ v102;
  LODWORD(v205) = v209 ^ v67;
  v103 = *(unsigned __int8 **)(v38 - 120);
  v104 = *(_DWORD *)(v38 - 128);
  *(_QWORD *)(v38 - 208) = 7;
  *(_DWORD *)(v38 - 216) = 841929191;
  v105 = v103[7];
  v106 = ((v104 - 497) | 0x45) ^ 0x559u;
  *(_QWORD *)(v38 - 176) = v106;
  v107 = v94[v105 ^ 0x41];
  v108 = v103[v106] ^ 0x60;
  *(_QWORD *)(v38 - 168) = 8;
  *(_QWORD *)(v38 - 136) = 1;
  LODWORD(v108) = v96[v108] ^ 0xDC;
  LODWORD(v62) = v96[v103[8] ^ 0xC1] ^ 0x68;
  LODWORD(v96) = *(unsigned __int8 *)(v211 + (v103[1] ^ 0x66)) ^ 0x77;
  *(_QWORD *)(v38 - 144) = 15;
  v109 = v103[15] ^ 0xE9;
  *(_QWORD *)(v38 - 160) = 11;
  LODWORD(v109) = v94[v109] ^ 0x47;
  v110 = v94[v103[11] ^ 0xC3];
  *(_QWORD *)(v38 - 184) = 0;
  LODWORD(v61) = ((_DWORD)v96 << 16) | ((v210[*v103 ^ 0x30] ^ 0xEC) << 24);
  LOBYTE(v96) = v110 ^ 0x8D;
  *(_QWORD *)(v38 - 152) = 2;
  LODWORD(v61) = v61 & 0xFFFF00FF | (((v213[v103[2] ^ 0xC0] + (v103[2] ^ 0xCF) + 56) ^ 0xF9) << 8);
  *(_QWORD *)(v38 - 224) = 9;
  v111 = *(unsigned __int8 *)(v211 + (v103[9] ^ 0x5DLL));
  *(_QWORD *)(v38 - 256) = 4;
  *(_QWORD *)(v38 - 192) = 10;
  LODWORD(v62) = ((v111 ^ 0xA4) << 16) | (((v213[v103[10] ^ 0xD5] + (v103[10] ^ 0xDA) + 56) ^ 0xCF) << 8) | v110 ^ 0x8D | ((_DWORD)v62 << 24);
  *(_QWORD *)(v38 - 200) = 14;
  LODWORD(v67) = (v213[v103[14] ^ 0xE4] + (v103[14] ^ 0xEB) - 72) << 8;
  *(_QWORD *)(v38 - 232) = 3;
  *(_QWORD *)(v38 - 248) = 13;
  v112 = v94[v103[3] ^ 0xDCLL] ^ 0x53;
  LODWORD(v67) = v67 | ((*(unsigned __int8 *)(v211 + (v103[13] ^ 0x92)) ^ 0x99) << 16) | v109 | ((_DWORD)v108 << 24);
  *(_DWORD *)(v38 - 212) = 841929186;
  LODWORD(v62) = v62 + 410284422 - 2 * (v62 & 0x1874719E ^ v96 & 0x18);
  LOBYTE(v96) = v213[v103[6] ^ 0x4FLL] + (v103[6] ^ 0x40);
  *(_QWORD *)(v38 - 240) = 5;
  v107 ^= 0x97u;
  LODWORD(v96) = ((*(unsigned __int8 *)(v211 + (v103[5] ^ 0xA9)) ^ 0x4A) << 16) | ((((_BYTE)v96 + 56) ^ 0xB7) << 8) | v107 | ((v210[v103[4] ^ 0xFCLL] ^ 0x52) << 24);
  LODWORD(v96) = (_DWORD)v96 - 2 * (v96 & 0x4459F308 ^ v107 & 8) - 1000738048;
  v113 = v93 ^ v235 ^ ((v112 | v61) + 1520777000 - 2 * ((v112 | v61) & 0x5AA5373D ^ v112 & 0x15));
  LODWORD(v96) = v100 ^ v236 ^ v96;
  v114 = v95 ^ v234 ^ (v67 + 487328828 - 2 * (v67 & 0x1D0C0C3F ^ v109 & 3));
  LODWORD(v109) = v99 ^ v233 ^ v62;
  LODWORD(v93) = (v93 ^ v235 ^ ((v112 | v61)
                                                                + 40
                                                                - 2 * ((v112 | v61) & 0x3D ^ v112 & 0x15)));
  v115 = (uint64_t)*(&off_1E93A7480 + v104 - 1577);
  v116 = *(_DWORD *)(v115 + 4 * (BYTE3(v109) ^ 0x3F));
  HIDWORD(v41) = ~v116;
  LODWORD(v41) = v116 ^ 0xDDB39D1A;
  v117 = (char *)*(&off_1E93A7480 + v104 - 1594) - 4;
  LODWORD(v62) = (v41 >> 1) ^ *(_DWORD *)&v117[4 * (BYTE2(v114) ^ 0x34)] ^ ((BYTE2(v114) ^ 0x68)
                                                                          - 126868498
                                                                          - 2
                                                                          * ((BYTE2(v114) ^ 0x68) & 0xFE ^ HIWORD(v114) & 0x10));
  v118 = (char *)*(&off_1E93A7480 + SHIDWORD(v208)) - 8;
  LODWORD(v67) = *(_DWORD *)&v118[4 * (v109 ^ 0xC6)] ^ ((BYTE2(v113) ^ 0xD5)
                                                                       - 126868498
                                                                       - ((2 * (HIWORD(v113) ^ 0x6CD5)) & 0x1DC)) ^ ((v109 ^ 0xAB) + 2020718985 + ((2 * (v109 ^ 0xAB) + 254) & 0x212 ^ 0xCDDA7BFF)) ^ *(_DWORD *)&v117[4 * (BYTE2(v113) ^ 0x89)];
  v119 = *(_DWORD *)&v117[4 * (BYTE2(v96) ^ 0x8C)] ^ *(_DWORD *)&v118[4 * (v114 ^ 0xB6)] ^ ((v114 ^ 0xDB) + 2020718985 + ((2 * (v114 ^ 0xDB) + 254) & 0x212 ^ 0xCDDA7BFF)) ^ ((BYTE2(v96) ^ 0xD0) - 126868498 - 2 * (((v96 >> 16) ^ 0xC8D0) & 0xEF ^ (v96 >> 16) & 1));
  LODWORD(v51) = *(_DWORD *)(v115 + 4 * ((v96 >> 24) ^ 0xC8));
  HIDWORD(v41) = ~(_DWORD)v51;
  LODWORD(v41) = v51 ^ 0xDDB39D1A;
  LODWORD(v51) = v119 - 1614574754 - ((2 * v119) & 0x3F8716BC);
  v120 = *(_DWORD *)(v115 + 4 * (HIBYTE(v113) ^ 0x6C));
  LODWORD(v93) = ((BYTE2(v109) ^ 0xAD) - 126868498 - ((2 * (WORD1(v109) ^ 0x3FAD)) & 0x1DC)) ^ *(_DWORD *)&v118[4 * (v93 ^ 0x1C)] ^ ((v93 ^ 0x71) + 2020718985 + ((2 * (v93 ^ 0x71) + 254) & 0x212 ^ 0xCDDA7BFF)) ^ *(_DWORD *)&v117[4 * (BYTE2(v109) ^ 0xF1)] ^ (v41 >> 1);
  HIDWORD(v41) = ~v120;
  LODWORD(v41) = v120 ^ 0xDDB39D1A;
  v121 = v41 >> 1;
  v122 = (_DWORD)v93 - 1614574754 - ((2 * (_DWORD)v93) & 0x3F8716BC);
  LODWORD(v93) = *(_DWORD *)(v115 + 4 * (HIBYTE(v114) ^ 0xB7));
  HIDWORD(v41) = ~(_DWORD)v93;
  LODWORD(v41) = v93 ^ 0xDDB39D1A;
  v123 = (v96 ^ 0x10) + 2020718985 + ((2 * (v96 ^ 0x10) + 254) & 0x212 ^ 0xCDDA7BFF);
  v124 = (char *)*(&off_1E93A7480 + (int)v208) - 12;
  LODWORD(v62) = *(_DWORD *)&v124[4 * (BYTE1(v113) ^ 0xDE)] ^ v230 ^ *(_DWORD *)&v118[4 * (v96 ^ 0x7D)] ^ (v62 - 1614574754 - ((2 * v62) & 0x3F8716BC));
  v125 = (v67 - 1614574754 - ((2 * v67) & 0x3F8716BC)) ^ *(_DWORD *)&v124[4 * (BYTE1(v96) ^ 0x2F)] ^ (v41 >> 1);
  LODWORD(v61) = v125 - ((2 * v125) & 0x7FB87DAE);
  v126 = *(_DWORD *)&v124[4 * (BYTE1(v109) ^ 0x29)] ^ v232 ^ v121 ^ v51;
  LODWORD(v109) = v62 ^ v123;
  LODWORD(v96) = *(_DWORD *)&v124[4 * (BYTE1(v114) ^ 0x66)] ^ v231 ^ v122;
  LODWORD(v62) = *(_DWORD *)(v115 + 4 * ((v62 ^ ~v123) >> 24));
  HIDWORD(v41) = ~(_DWORD)v62;
  LODWORD(v41) = v62 ^ 0xDDB39D1A;
  v127 = v41 >> 1;
  v128 = *(_DWORD *)(v115 + 4 * (HIBYTE(v126) ^ 0x91));
  HIDWORD(v41) = ~v128;
  LODWORD(v41) = v128 ^ 0xDDB39D1A;
  v129 = v41 >> 1;
  LODWORD(v51) = *(_DWORD *)(v115 + 4 * ((v96 >> 24) ^ 0xA3));
  HIDWORD(v41) = ~(_DWORD)v51;
  LODWORD(v41) = v51 ^ 0xDDB39D1A;
  LODWORD(v94) = v129 ^ *(_DWORD *)&v117[4 * (BYTE2(v96) ^ 0xF0)] ^ ((BYTE2(v96) ^ 0xAC)
                                                                   - 126868498
                                                                   - 2
                                                                   * ((BYTE2(v96) ^ 0xAC) & 0xFE ^ (v96 >> 16) & 0x10));
  v130 = (v41 >> 1) ^ *(_DWORD *)&v118[4 * (v126 ^ 0x7B)] ^ *(_DWORD *)&v117[4 * (BYTE2(v109) ^ 0x15)] ^ ((BYTE2(v109) ^ 0x49) - 126868498 - ((2 * (WORD1(v109) ^ 0xFF49)) & 0x1DC)) ^ ((v126 ^ 0x16) + 2020718985 + ((2 * (v126 ^ 0x16) + 254) & 0x212 ^ 0xCDDA7BFF));
  v131 = v130 - 1614574754 - ((2 * v130) & 0x3F8716BC);
  LODWORD(v67) = (v61 - 1076085033) ^ HIDWORD(v229);
  LODWORD(v94) = ((_DWORD)v94 - 1614574754 - ((2 * (_DWORD)v94) & 0x3F8716BC)) ^ *(_DWORD *)&v124[4
                                                                                                * (BYTE1(v109) ^ 0x2C)];
  LODWORD(v62) = v127 ^ *(_DWORD *)&v118[4 * (v96 ^ 3)] ^ ((v96 ^ 0x6E)
                                                                          + 2020718985
                                                                          + ((2 * (v96 ^ 0x6E) + 254) & 0x212 ^ 0xCDDA7BFF)) ^ *(_DWORD *)&v117[4 * (BYTE2(v67) ^ 0xB9)] ^ ((BYTE2(v67) ^ 0xE5) - 126868498 - ((2 * (WORD1(v67) ^ 0xD1E5)) & 0x1DC));
  v132 = *(_DWORD *)&v117[4 * (BYTE2(v126) ^ 0x2E)] ^ ((BYTE2(v126) ^ 0x72)
                                                     - 126868498
                                                     - ((2 * (HIWORD(v126) ^ 0x9172)) & 0x1DC));
  v133 = *(_DWORD *)(v115 + 4 * (BYTE3(v67) ^ 0xD1));
  HIDWORD(v41) = ~v133;
  LODWORD(v41) = v133 ^ 0xDDB39D1A;
  v134 = ((v109 ^ 0xFC) + 2020718985 + ((2 * (v109 ^ 0xFC) + 254) & 0x212 ^ 0xCDDA7BFF)) ^ *(_DWORD *)&v124[4 * (BYTE1(v96) ^ 0xBD)] ^ *(_DWORD *)&v118[4 * (v109 ^ 0x91)] ^ (v132 - 1614574754 - ((2 * v132) & 0x3F8716BC)) ^ (v41 >> 1);
  LODWORD(v96) = ((((v61 - 41) ^ BYTE4(v229)) ^ 0x9A) - 1726037377) ^ v229 ^ *(_DWORD *)&v118[4 * (((v61 - 41) ^ BYTE4(v229)) ^ 0xF7)] ^ ((_DWORD)v94 - 548210935 - ((2 * (_DWORD)v94) & 0xBEA5EE12));
  v135 = *(_DWORD *)&v124[4 * (BYTE1(v126) ^ 0x57)] ^ HIDWORD(v226) ^ (v62 - 1614574754 - ((2 * v62) & 0x3F8716BC));
  LODWORD(v109) = (v134 - ((2 * v134) & 0xFEACAB26) - 11119213) ^ v228;
  LODWORD(v61) = *(_DWORD *)&v124[4 * (((unsigned __int16)((v61 + 16087) ^ WORD2(v229)) >> 8) ^ 0xA5)] ^ HIDWORD(v228) ^ v131;
  LODWORD(v62) = *(_DWORD *)(v115 + 4 * (BYTE3(v109) ^ 0x12));
  HIDWORD(v41) = ~(_DWORD)v62;
  LODWORD(v41) = v62 ^ 0xDDB39D1A;
  v136 = ((v61 ^ 0xA1) + 2020718985 + ((2 * (v61 ^ 0xA1) + 254) & 0x212 ^ 0xCDDA7BFF)) ^ *(_DWORD *)&v118[4 * (v61 ^ 0xCC)];
  LODWORD(v62) = *(_DWORD *)&v117[4 * (BYTE2(v96) ^ 0xDB)] ^ ((BYTE2(v96) ^ 0x87)
                                                            - 126868498
                                                            - ((2 * ((v96 >> 16) ^ 0x3A87)) & 0x1DC)) ^ (v41 >> 1);
  v137 = (v136 - 1614574754 - ((2 * v136) & 0x3F8716BC)) ^ *(_DWORD *)&v124[4 * (BYTE1(v96) ^ 0xDE)];
  LODWORD(v67) = ((v96 ^ 0x9E)
                + 2020718985
                + ((2 * (v96 ^ 0x9E) + 254) & 0x212 ^ 0xCDDA7BFF)) ^ *(_DWORD *)&v118[4 * (v96 ^ 0xF3)];
  v138 = v67 - 1614574754 - ((2 * v67) & 0x3F8716BC);
  LODWORD(v62) = (v62 - 1614574754 - ((2 * v62) & 0x3F8716BC)) ^ *(_DWORD *)&v124[4 * (BYTE1(v61) ^ 0x57)];
  LODWORD(v67) = *(_DWORD *)(v115 + 4 * (HIBYTE(v135) ^ 0x37));
  HIDWORD(v41) = ~(_DWORD)v67;
  LODWORD(v41) = v67 ^ 0xDDB39D1A;
  LODWORD(v67) = v41 >> 1;
  LODWORD(v94) = *(_DWORD *)(v115 + 4 * ((v96 >> 24) ^ 0x3A));
  HIDWORD(v41) = ~(_DWORD)v94;
  LODWORD(v41) = v94 ^ 0xDDB39D1A;
  v139 = ((v135 ^ 0x740CBC3A) >> 16);
  v140 = v139 - 126868498 - (((v135 ^ 0x740CBC3A) >> 15) & 0x1DC);
  LODWORD(v94) = BYTE2(v61) ^ *(_DWORD *)&v117[4 * (BYTE2(v61) ^ 0xF6)] ^ *(_DWORD *)&v124[4
                                                                                         * ((unsigned __int16)(v135 ^ 0xBC3A) >> 8)] ^ 0x67B3A81A ^ (v41 >> 1);
  LODWORD(v96) = ((v109 ^ 0x83) - 1726037377) ^ HIDWORD(v227) ^ *(_DWORD *)&v118[4
                                                                                                * (v109 ^ 0xEE)] ^ ((_DWORD)v94 - 548210935 - ((2 * (_DWORD)v94) & 0xBEA5EE12));
  LODWORD(v94) = *(_DWORD *)(v115 + 4 * (BYTE3(v61) ^ 0x7C));
  HIDWORD(v41) = ~(_DWORD)v94;
  LODWORD(v41) = v94 ^ 0xDDB39D1A;
  v141 = ((v135 ^ 0x3A) - 1726037377) ^ HIDWORD(v225) ^ *(_DWORD *)&v118[4
                                                                                        * (v135 ^ 0x57)] ^ (v62 - 548210935 - ((2 * v62) & 0xBEA5EE12));
  LODWORD(v62) = *(_DWORD *)&v117[4 * (BYTE2(v109) ^ 0xD0)] ^ v226 ^ BYTE2(v109) ^ v67 ^ (v137
                                                                                        - 126868498
                                                                                        - ((2 * v137) & 0xF0E047DC));
  v142 = *(_DWORD *)&v124[4 * (BYTE1(v109) ^ 0xB5)] ^ v227 ^ v140 ^ *(_DWORD *)&v117[4 * (v139 ^ 0x5C)] ^ (v41 >> 1) ^ v138;
  LODWORD(v61) = v62 ^ 0xFA64A54F;
  v143 = ((v62 ^ 0x4F) + 2020718985 + ((2 * (v62 ^ 0x4F) + 254) & 0x212 ^ 0xCDDA7BFF)) ^ *(_DWORD *)&v118[4 * (v62 ^ 0x22)];
  v144 = v143 - 1614574754 - ((2 * v143) & 0x3F8716BC);
  v145 = *(_DWORD *)(v115 + 4 * ((v96 >> 24) ^ 0x5B));
  HIDWORD(v41) = ~v145;
  LODWORD(v41) = v145 ^ 0xDDB39D1A;
  LODWORD(v67) = *(_DWORD *)(v115 + 4 * (HIBYTE(v141) ^ 0x28));
  v146 = (v41 >> 1) ^ *(_DWORD *)&v118[4 * (v141 ^ 0x1F)] ^ ((v141 ^ 0x72)
                                                                            + 2020718985
                                                                            + ((2 * (v141 ^ 0x72) + 254) & 0x212 ^ 0xCDDA7BFF));
  HIDWORD(v41) = ~(_DWORD)v67;
  LODWORD(v41) = v67 ^ 0xDDB39D1A;
  v147 = v41 >> 1;
  LODWORD(v62) = *(_DWORD *)(v115 + 4 * (BYTE3(v62) ^ 0xB9));
  HIDWORD(v41) = ~(_DWORD)v62;
  LODWORD(v41) = v62 ^ 0xDDB39D1A;
  LODWORD(v62) = v41 >> 1;
  LODWORD(v94) = *(_DWORD *)(v115 + 4 * (HIBYTE(v142) ^ 0xB4));
  HIDWORD(v41) = ~(_DWORD)v94;
  LODWORD(v41) = v94 ^ 0xDDB39D1A;
  LODWORD(v62) = v62 ^ *(_DWORD *)&v118[4 * (v142 ^ 0x8B)] ^ ((v142 ^ 0xE6)
                                                                             + 2020718985
                                                                             + ((2 * (v142 ^ 0xE6) + 254) & 0x212 ^ 0xCDDA7BFF));
  v148 = BYTE2(v96) ^ 0x95;
  LODWORD(v51) = v148 - 126868498 - ((2 * ((v96 >> 16) ^ 0x5B95)) & 0x1DC);
  v149 = v96;
  LODWORD(v108) = (v96 ^ 0xF4)
                + 2020718985
                + ((2 * (v96 ^ 0xF4) + 254) & 0x212 ^ 0xCDDA7BFF);
  LODWORD(v109) = ((BYTE2(v141) ^ 0x14) - 126868498 - 2 * ((HIWORD(v141) ^ 0x2814) & 0xEF ^ HIWORD(v141) & 1)) ^ v224 ^ *(_DWORD *)&v124[4 * (BYTE1(v96) ^ 0x1F)] ^ (v62 - 1614574754 - ((2 * v62) & 0x3F8716BC)) ^ *(_DWORD *)&v117[4 * (BYTE2(v141) ^ 0x48)];
  LODWORD(v96) = *(_DWORD *)&v124[4 * BYTE1(v61)] ^ v225 ^ ((BYTE2(v142) ^ 0x59)
                                                          - 126868498
                                                          - ((2 * (HIWORD(v142) ^ 0xB459)) & 0x1DC)) ^ *(_DWORD *)&v117[4 * (BYTE2(v142) ^ 5)] ^ (v146 - 1614574754 - ((2 * v146) & 0x3F8716BC));
  v150 = (BYTE2(v61) - 126868498 - ((v61 >> 15) & 0x1DC)) ^ HIDWORD(v224) ^ *(_DWORD *)&v118[4 * (v149 ^ 0x99)] ^ v108 ^ ((v41 >> 1) - 1614574754 - ((2 * (v41 >> 1)) & 0x3F8716BC)) ^ *(_DWORD *)&v117[4 * (BYTE2(v61) ^ 0x5C)] ^ *(_DWORD *)&v124[4 * (BYTE1(v141) ^ 0x12)];
  v151 = *(_DWORD *)&v124[4 * (BYTE1(v142) ^ 0x34)] ^ HIDWORD(v223) ^ v51 ^ *(_DWORD *)&v117[4 * (v148 ^ 0x5C)] ^ v144 ^ v147;
  LODWORD(v106) = *(_DWORD *)(v115 + 4 * (HIBYTE(v151) ^ 0xEB));
  HIDWORD(v41) = ~(_DWORD)v106;
  LODWORD(v41) = v106 ^ 0xDDB39D1A;
  LODWORD(v61) = (v41 >> 1) - 1614574754 - ((2 * (v41 >> 1)) & 0x3F8716BC);
  LODWORD(v108) = ((BYTE2(v150) ^ 0x81) - 126868498 - ((2 * (HIWORD(v150) ^ 0x1481)) & 0x1DC)) ^ *(_DWORD *)&v117[4 * (BYTE2(v150) ^ 0xDD)];
  v152 = ((v150 ^ 0x51) + 2020718985 + ((2 * (v150 ^ 0x51) + 254) & 0x212 ^ 0xCDDA7BFF)) ^ *(_DWORD *)&v118[4 * (v150 ^ 0x3C)];
  LODWORD(v67) = *(_DWORD *)&v117[4 * (BYTE2(v109) ^ 0xDB)] ^ ((BYTE2(v109) ^ 0x87)
                                                             - 126868498
                                                             - 2 * ((BYTE2(v109) ^ 0x87) & 0xFE ^ WORD1(v109) & 0x10));
  v153 = *(_DWORD *)(v115 + 4 * (HIBYTE(v150) ^ 0x14));
  HIDWORD(v41) = ~v153;
  LODWORD(v41) = v153 ^ 0xDDB39D1A;
  LODWORD(v94) = v41 >> 1;
  v154 = *(_DWORD *)(v115 + 4 * ((v96 >> 24) ^ 0x9A));
  HIDWORD(v41) = ~v154;
  LODWORD(v41) = v154 ^ 0xDDB39D1A;
  LODWORD(v106) = *(_DWORD *)&v117[4 * (((v151 ^ 0xA87CE98B) >> 16) ^ 0x5C)] ^ ((v151 ^ 0xA87CE98B) >> 16) ^ (v152 - 126868498 - ((2 * v152) & 0xF0E047DC));
  LODWORD(v108) = *(_DWORD *)&v118[4 * (v151 ^ 0xE6)] ^ *(_DWORD *)&v124[4 * (BYTE1(v109) ^ 0xDE)] ^ ((v151 ^ 0x8B) + 2020718985 + ((2 * (v151 ^ 0x8B) + 254) & 0x212 ^ 0xCDDA7BFF)) ^ (v108 - 1614574754 - ((2 * v108) & 0x3F8716BC)) ^ (v41 >> 1);
  v155 = *(_DWORD *)(v115 + 4 * (BYTE3(v109) ^ 0x77));
  HIDWORD(v41) = ~v155;
  LODWORD(v41) = v155 ^ 0xDDB39D1A;
  v156 = *(_DWORD *)&v124[4 * (BYTE1(v150) ^ 0x34)] ^ v222 ^ ((BYTE2(v96) ^ 0xE9)
                                                            - 126868498
                                                            - ((2 * ((v96 >> 16) ^ 0x9AE9)) & 0x1DC)) ^ *(_DWORD *)&v117[4 * (BYTE2(v96) ^ 0xB5)] ^ ((v109 ^ 0x9E) + 2020718985 + ((2 * (v109 ^ 0x9E) + 254) & 0x212 ^ 0xCDDA7BFF)) ^ v61 ^ *(_DWORD *)&v118[4 * (v109 ^ 0xF3)];
  LODWORD(v67) = *(_DWORD *)&v124[4 * (BYTE1(v151) ^ 0xB)] ^ v221 ^ ((v96 ^ 0xA8)
                                                                   + 2020718985
                                                                   + ((2 * (v96 ^ 0xA8) + 254) & 0x212 ^ 0xCDDA7BFF)) ^ *(_DWORD *)&v118[4 * (v96 ^ 0xC5)] ^ v94 ^ (v67 - 1614574754 - ((2 * v67) & 0x3F8716BC));
  LODWORD(v109) = *(_DWORD *)&v124[4 * (BYTE1(v96) ^ 0x2D)] ^ HIDWORD(v222) ^ (v41 >> 1) ^ (v106
                                                                                          - 1614574754
                                                                                          - ((2 * v106) & 0x3F8716BC));
  LODWORD(v106) = ((v67 ^ 0x2E0E654A) >> 16);
  LODWORD(v62) = *(_DWORD *)(v115 + 4 * (BYTE3(v67) ^ 0x6D));
  v157 = v106 - 126868498 - (((v67 ^ 0x2E0E654A) >> 15) & 0x1DC);
  HIDWORD(v41) = ~(_DWORD)v62;
  LODWORD(v41) = v62 ^ 0xDDB39D1A;
  LODWORD(v62) = v41 >> 1;
  v158 = (v108 - 867831763 - ((2 * v108) & 0x988BE05A)) ^ v223;
  LODWORD(v108) = *(_DWORD *)&v117[4 * (v106 ^ 0x5C)];
  LODWORD(v106) = *(_DWORD *)(v115 + 4 * (HIBYTE(v158) ^ 0xFD));
  LODWORD(v108) = v108 ^ (~(_DWORD)v106 << 31) ^ (v106 >> 1) ^ v157 ^ 0x6ED9CE8D;
  LODWORD(v106) = ((v67 ^ 0x4A)
                 + 2020718985
                 + ((2 * (v67 ^ 0x4A) + 254) & 0x212 ^ 0xCDDA7BFF)) ^ *(_DWORD *)&v118[4 * (v67 ^ 0x27)];
  LODWORD(v61) = v108 - 1614574754 - ((2 * v108) & 0x3F8716BC);
  LODWORD(v108) = *(_DWORD *)(v115 + 4 * (BYTE3(v109) ^ 0xAE));
  HIDWORD(v41) = ~(_DWORD)v108;
  LODWORD(v41) = v108 ^ 0xDDB39D1A;
  LODWORD(v108) = (v41 >> 1) ^ *(_DWORD *)&v124[4 * (BYTE1(v158) ^ 0xA4)] ^ (v106
                                                                           - 1614574754
                                                                           - ((2 * v106) & 0x3F8716BC));
  v159 = v108 - 126868498 - ((2 * v108) & 0xF0E047DC);
  LODWORD(v108) = *(_DWORD *)&v117[4 * (BYTE2(v109) ^ 0x3A)] ^ v62 ^ *(_DWORD *)&v118[4 * (v158 ^ 0x4D)] ^ ((v158 ^ 0x20) + 2020718985 + ((2 * (v158 ^ 0x20) + 254) & 0x212 ^ 0xCDDA7BFF)) ^ ((BYTE2(v109) ^ 0x66) - 126868498 - 2 * (BYTE2(v109) ^ 0x66 ^ WORD1(v109) & 0x11));
  LODWORD(v67) = ((v109 ^ 0xB3)
                - ((2 * (v109 ^ 0xB3) + 842892542) & 0x320506BC)
                + 954355165) ^ *(_DWORD *)&v124[4 * ((unsigned __int16)(v67 ^ 0x654A) >> 8)];
  v160 = (v67 - 548210935 - ((2 * v67) & 0xBEA5EE12)) ^ *(_DWORD *)&v118[4 * (v109 ^ 0xDE)];
  LODWORD(v67) = *(_DWORD *)&v117[4 * (BYTE2(v158) ^ 0x40)] ^ ((BYTE2(v158) ^ 0x1C)
                                                             - 126868498
                                                             - 2 * ((HIWORD(v158) ^ 0xFD1C) & 0xEF ^ HIWORD(v158) & 1));
  v161 = (v67 ^ 0xD9E215AF ^ -(v67 ^ 0xD9E215AF) ^ ((v67 ^ v160 ^ 0x431D28D3) + (v160 ^ 0x6500C283) + 1))
       + (v160 ^ 0x6500C283);
  LODWORD(v67) = *(_DWORD *)(v115 + 4 * ((v156 ^ 0x3F162902u) >> 24));
  HIDWORD(v41) = ~(_DWORD)v67;
  LODWORD(v41) = v67 ^ 0xDDB39D1A;
  LODWORD(v96) = ((v156 ^ 0x3F162902u) >> 16) ^ v220 ^ *(_DWORD *)&v117[4 * (((v156 ^ 0x3F162902u) >> 16) ^ 0x5C)] ^ v159;
  LODWORD(v106) = *(_DWORD *)&v124[4 * (BYTE1(v109) ^ 0x7C)];
  v162 = (v41 >> 1) ^ HIDWORD(v219) ^ v161;
  LODWORD(v109) = *(_DWORD *)&v124[4 * (BYTE1(v156) ^ 0xCB)] ^ HIDWORD(v220) ^ (v108
                                                                              - 1614574754
                                                                              - ((2 * v108) & 0x3F8716BC));
  v163 = v106 ^ HIDWORD(v221) ^ ((v156 ^ 2)
                               + 2020718985
                               + ((2 * (v156 ^ 2) + 254) & 0x212 ^ 0xCDDA7BFF)) ^ *(_DWORD *)&v118[4 * (v156 ^ 0x6F)] ^ v61;
  LODWORD(v108) = ((BYTE2(v163) ^ 0xE9) - 126868498 - 2 * ((BYTE2(v163) ^ 0xE9) & 0xFE ^ HIWORD(v163) & 0x10)) ^ *(_DWORD *)&v117[4 * (BYTE2(v163) ^ 0xB5)];
  v164 = v108 - 1614574754 - ((2 * v108) & 0x3F8716BC);
  LODWORD(v62) = *(_DWORD *)(v115 + 4 * ((v96 >> 24) ^ 0x9D));
  HIDWORD(v41) = ~(_DWORD)v62;
  LODWORD(v41) = v62 ^ 0xDDB39D1A;
  v165 = v41 >> 1;
  LODWORD(v51) = *(_DWORD *)(v115 + 4 * (BYTE3(v109) ^ 0x61));
  HIDWORD(v41) = ~(_DWORD)v51;
  LODWORD(v41) = v51 ^ 0xDDB39D1A;
  LODWORD(v108) = *(_DWORD *)&v118[4 * (v163 ^ 0xC5)] ^ *(_DWORD *)&v117[4 * (BYTE2(v96) ^ 0x28)] ^ ((v163 ^ 0xA8) + 2020718985 + ((2 * (v163 ^ 0xA8) + 254) & 0x212 ^ 0xCDDA7BFF)) ^ (v41 >> 1) ^ ((BYTE2(v96) ^ 0x74) - 126868498 - ((2 * ((v96 >> 16) ^ 0x9D74)) & 0x1DC));
  LODWORD(v106) = v165 ^ ((BYTE2(v162) ^ 0xE6) - 126868498 - 2 * ((HIWORD(v162) ^ 0xB0E6) & 0xEF ^ HIWORD(v162) & 1)) ^ *(_DWORD *)&v117[4 * (BYTE2(v162) ^ 0xBA)];
  v166 = v109;
  v167 = *(_DWORD *)(v115 + 4 * (HIBYTE(v163) ^ 0xB8));
  v168 = (v109 ^ 0x85) + 2020718985 + ((2 * (v109 ^ 0x85) + 254) & 0x212 ^ 0xCDDA7BFF);
  HIDWORD(v41) = ~v167;
  LODWORD(v41) = v167 ^ 0xDDB39D1A;
  LODWORD(v62) = ((BYTE2(v109) ^ 8) - 126868498 - 2 * ((BYTE2(v109) ^ 8) & 0xFE ^ WORD1(v109) & 0x10)) ^ *(_DWORD *)&v117[4 * (BYTE2(v109) ^ 0x54)] ^ *(_DWORD *)&v118[4 * (v162 ^ 0x29)] ^ ((v162 ^ 0x44) + 2020718985 + ((2 * (v162 ^ 0x44) + 254) & 0x212 ^ 0xCDDA7BFF)) ^ (v41 >> 1);
  v169 = *(_DWORD *)&v124[4 * (BYTE1(v162) ^ 0xDD)] ^ HIDWORD(v218) ^ (v108 - 1614574754 - ((2 * v108) & 0x3F8716BC));
  LODWORD(v108) = *(_DWORD *)(v115 + 4 * (HIBYTE(v162) ^ 0xB0));
  HIDWORD(v41) = ~(_DWORD)v108;
  LODWORD(v41) = v108 ^ 0xDDB39D1A;
  v170 = *(_DWORD *)&v124[4 * (BYTE1(v96) ^ 0xBD)] ^ v219 ^ (v62 - 1614574754 - ((2 * v62) & 0x3F8716BC));
  LODWORD(v109) = *(_DWORD *)&v124[4 * (BYTE1(v109) ^ 0x8F)] ^ HIDWORD(v217) ^ *(_DWORD *)&v118[4
                                                                                              * (v96 ^ 0xB4)] ^ ((v96 ^ 0xD9) + 2020718985 + ((2 * (v96 ^ 0xD9) + 254) & 0x212 ^ 0xCDDA7BFF)) ^ (v41 >> 1) ^ v164;
  v171 = v168 ^ v218 ^ *(_DWORD *)&v118[4 * (v166 ^ 0xE8)] ^ *(_DWORD *)&v124[4 * (BYTE1(v163) ^ 0x2D)] ^ (v106 - 1614574754 - ((2 * v106) & 0x3F8716BC));
  LODWORD(v108) = *(_DWORD *)(v115 + 4 * (BYTE3(v109) ^ 0x18));
  LODWORD(v106) = ((BYTE2(v171) ^ 0x66) - 126868498 - 2 * (BYTE2(v171) ^ 0x66 ^ HIWORD(v171) & 0x11)) ^ *(_DWORD *)&v117[4 * (BYTE2(v171) ^ 0x3A)];
  HIDWORD(v41) = ~(_DWORD)v108;
  LODWORD(v41) = v108 ^ 0xDDB39D1A;
  LODWORD(v61) = BYTE2(v170);
  v172 = ((v41 >> 1) - 126868498 - ((2 * (v41 >> 1)) & 0xF0E047DC)) ^ *(_DWORD *)&v117[4 * (BYTE2(v170) ^ 0x40)];
  LODWORD(v67) = *(_DWORD *)(v115 + 4 * (HIBYTE(v170) ^ 0xEF));
  HIDWORD(v41) = ~(_DWORD)v67;
  LODWORD(v41) = v67 ^ 0xDDB39D1A;
  LODWORD(v108) = (v41 >> 1) ^ *(_DWORD *)&v118[4 * (v109 ^ 0x90)] ^ ((v109 ^ 0xFD)
                                                                                     + 2020718985
                                                                                     + ((2
                                                                                       * (v109 ^ 0xFD)
                                                                                       + 254) & 0x212 ^ 0xCDDA7BFF));
  v173 = v106 - 1614574754 - ((2 * v106) & 0x3F8716BC);
  LODWORD(v106) = *(_DWORD *)&v118[4 * (v169 ^ 0x27)] ^ ((v169 ^ 0x4A)
                                                                        + 2020718985
                                                                        + ((2 * (v169 ^ 0x4A) + 254) & 0x212 ^ 0xCDDA7BFF));
  v174 = *(_DWORD *)(v115 + 4 * (HIBYTE(v171) ^ 0xAE));
  HIDWORD(v41) = ~v174;
  LODWORD(v41) = v174 ^ 0xDDB39D1A;
  LODWORD(v106) = (v41 >> 1) ^ *(_DWORD *)&v117[4 * (BYTE2(v109) ^ 0xF)] ^ (v106 - 126868498 - ((2 * v106) & 0xF0E047DC));
  LODWORD(v94) = *(_DWORD *)(v115 + 4 * (HIBYTE(v169) ^ 0xDC));
  HIDWORD(v41) = ~(_DWORD)v94;
  LODWORD(v41) = v94 ^ 0xDDB39D1A;
  v175 = v172 - 1614574754 - ((2 * v172) & 0x3F8716BC);
  v176 = ((BYTE2(v169) ^ 0xE) - 126868498 - ((2 * (HIWORD(v169) ^ 0xDC0E)) & 0x1DC)) ^ v217 ^ *(_DWORD *)&v124[4 * (BYTE1(v171) ^ 0x7C)] ^ *(_DWORD *)&v117[4 * (BYTE2(v169) ^ 0x52)] ^ (v108 - 1614574754 - ((2 * v108) & 0x3F8716BC));
  LODWORD(v108) = v171;
  v177 = (v171 ^ 0xB3) + 2020718985 + ((2 * (v171 ^ 0xB3) + 254) & 0x212 ^ 0xCDDA7BFF);
  v178 = *(_DWORD *)&v124[4 * (BYTE1(v109) ^ 0x1B)] ^ HIDWORD(v216) ^ *(_DWORD *)&v118[4
                                                                                     * (v170 ^ 0x4D)] ^ ((v170 ^ 0x20) + 2020718984 - ((2 * (v170 ^ 0x20) + 842892542) & 0x32258612)) ^ (v41 >> 1) ^ v173;
  v179 = v177 ^ HIDWORD(v215) ^ *(_DWORD *)&v124[4 * (BYTE1(v169) ^ 0x65)] ^ *(_DWORD *)&v118[4
                                                                                            * (v108 ^ 0xDE)] ^ v175;
  v180 = *(_DWORD *)&v124[4 * (BYTE1(v170) ^ 0xA4)] ^ v216 ^ (v106 - 1614574754 - ((2 * v106) & 0x3F8716BC));
  LODWORD(v108) = (v180 ^ BYTE2(v109));
  LOBYTE(v173) = v179 ^ v61;
  LODWORD(v67) = v179 ^ v61 ^ 0x7641388B;
  LODWORD(v62) = *(_DWORD *)(v115 + 4 * BYTE3(v67));
  HIDWORD(v41) = ~(_DWORD)v62;
  LODWORD(v41) = v62 ^ 0xDDB39D1A;
  v181 = v41 >> 1;
  LODWORD(v109) = *(_DWORD *)(v115 + 4 * ((v176 ^ 0xF7E9CFA8) >> 24));
  HIDWORD(v41) = ~(_DWORD)v109;
  LODWORD(v41) = v109 ^ 0xDDB39D1A;
  v182 = v41 >> 1;
  LODWORD(v109) = (BYTE2(v67) - 126868498 - ((v67 >> 15) & 0x1DC)) ^ *(_DWORD *)&v117[4 * (BYTE2(v67) ^ 0x5C)];
  v183 = *(_DWORD *)(v115 + 4 * (HIBYTE(v180) ^ 0xE7));
  HIDWORD(v41) = ~v183;
  LODWORD(v41) = v183 ^ 0xDDB39D1A;
  LODWORD(v61) = v41 >> 1;
  LODWORD(v108) = v181 ^ *(_DWORD *)&v118[4 * (v108 ^ 0x18)] ^ (((v176 ^ 0xF7E9CFA8) >> 16)
                                                                            - 126868498
                                                                            - (((v176 ^ 0xF7E9CFA8) >> 15) & 0x1DC)) ^ *(_DWORD *)&v117[4 * (((v176 ^ 0xF7E9CFA8) >> 16) ^ 0x5C)] ^ ((v108 ^ 0x75) + 2020718985 + ((2 * (v108 ^ 0x75) + 254) & 0x212 ^ 0xCDDA7BFF));
  LODWORD(v108) = (v108 - 1614574754 - ((2 * v108) & 0x3F8716BC)) ^ *(_DWORD *)&v124[4 * (BYTE1(v178) ^ 0xEC)];
  v184 = *(_QWORD *)(v38 - 120);
  LODWORD(v106) = v182 ^ *(_DWORD *)&v117[4 * (BYTE2(v178) ^ 0xA7)] ^ ((BYTE2(v178) ^ 0xFB)
                                                                     - 126868498
                                                                     - ((2 * (HIWORD(v178) ^ 0x57FB)) & 0x1DC)) ^ (v67 + 2020718985 + ((2 * v67 + 254) & 0x212 ^ 0xCDDA7BFF)) ^ *(_DWORD *)&v118[4 * (v173 ^ 0xE6)];
  LODWORD(v115) = *(_DWORD *)(v115 + 4 * (HIBYTE(v178) ^ 0x57));
  HIDWORD(v41) = ~(_DWORD)v115;
  LODWORD(v41) = v115 ^ 0xDDB39D1A;
  LODWORD(v106) = (v106 - 1614574754 - ((2 * v106) & 0x3F8716BC)) ^ *(_DWORD *)&v124[4 * (BYTE1(v180) ^ 0x6D)];
  LODWORD(v67) = *(_DWORD *)&v118[4 * (v178 ^ 0x42)];
  LODWORD(v94) = *(_DWORD *)&v124[4 * (BYTE1(v176) ^ 0x2D)];
  LODWORD(v115) = ((v176 ^ 0xA8)
                 + 2020718985
                 + ((2 * (v176 ^ 0xA8) + 254) & 0x212 ^ 0xCDDA7BFF)) ^ *(_DWORD *)&v118[4 * (v176 ^ 0xC5)] ^ ((BYTE2(v180) ^ 0x31) - 126868498 - ((2 * (HIWORD(v180) ^ 0xE731)) & 0x1DC)) ^ *(_DWORD *)&v117[4 * (BYTE2(v180) ^ 0x6D)] ^ (v41 >> 1);
  LODWORD(v115) = HIDWORD(v207) ^ *(_DWORD *)&v124[4 * (BYTE1(v179) ^ 0xDA)] ^ (v115
                                                                              - 1614574754
                                                                              - ((2 * v115) & 0x3F8716BC));
  v185 = (v106 - 554208594 - ((2 * v106) & 0xBDEEE55C)) ^ v215;
  LODWORD(v118) = v108 - 569578408 - ((2 * v108) & 0xBC19D8B0);
  LODWORD(v96) = v94 ^ v214 ^ ((v178 ^ 0x2F)
                                           + 2020718984
                                           - ((2 * (v178 ^ 0x2F) + 842892542) & 0x32258612)) ^ v61 ^ v67 ^ (v109 - 1614574754 - ((2 * v109) & 0x3F8716BC));
  v186 = *(unsigned int *)(v38 - 128);
  v187 = (char *)*(&off_1E93A7480 + (int)v186 - 1684) - 8;
  v188 = (char *)*(&off_1E93A7480 + SHIDWORD(v206)) - 8;
  LODWORD(v108) = *(_DWORD *)&v187[4
                                 * ((v94 ^ v214 ^ ((v178 ^ 0x2F)
                                                                                   - 120
                                                                                   - ((2 * (v178 ^ 0x2F) - 2) & 0x12)) ^ v61 ^ v67 ^ (v109 + 94 - ((2 * v109) & 0xBC))) ^ 0xC9)]
                - 1663827688;
  v189 = (uint64_t)*(&off_1E93A7480 + (int)v186 - 1634);
  LODWORD(v108) = (*(_DWORD *)(v189 + 4 * (BYTE2(v185) ^ 0x9Eu)) - 1514919915) ^ v108;
  v190 = *(_DWORD *)&v187[4 * (v115 ^ 0xC8)];
  v191 = v118 ^ HIDWORD(v214);
  LODWORD(v51) = v118 ^ HIDWORD(v214) ^ 0x351D74B9;
  LODWORD(v118) = *(_DWORD *)&v187[4 * ((v118 ^ BYTE4(v214)) ^ 0xB9)];
  v192 = *(unsigned int *)&v188[4 * (HIBYTE(v185) ^ 0xE7)];
  v193 = *(unsigned int *)&v188[4 * ((v96 >> 24) ^ 0xB8)];
  LODWORD(v187) = (*(_DWORD *)(v189 + 4 * (BYTE2(v96) ^ 0x38u)) - 1514919915) ^ (*(_DWORD *)&v188[4 * ((v115 ^ 0x898C5DC8) >> 24)]
                                                                                 - 1692466918) ^ (*(_DWORD *)&v187[4 * (v185 ^ 0xA2)]
                                                                                                - 1663827688);
  v194 = (char *)*(&off_1E93A7480 + (int)v207) - 8;
  LODWORD(v117) = *(_DWORD *)&v194[4 * (BYTE1(v96) ^ 0xE9)];
  LODWORD(v108) = (v108 - 1036870094 - ((2 * v108) & 0x84653C64)) ^ *(_DWORD *)&v194[4 * (BYTE1(v115) ^ 0x61)] ^ (*(_DWORD *)&v188[4 * (HIBYTE(v191) ^ 0x65)] - 1692466918);
  v195 = *(_DWORD *)(v189 + 4 * (BYTE2(v115) ^ 0x8Cu));
  v196 = *(_DWORD *)&v194[4 * BYTE1(v51)] ^ v209 ^ ((_DWORD)v187
                                                                - 1036870094
                                                                - ((2 * (_DWORD)v187) & 0x84653C64));
  LODWORD(v115) = v205 ^ HIDWORD(v214) ^ (v108 - 569578408 - ((2 * v108) & 0xBC19D8B0));
  v197 = *(_DWORD *)&v194[4 * (BYTE1(v185) ^ 0xA0)] ^ v205 ^ (v190 - ((2 * v190 + 967311920) & 0x84653C64) + 1594269514) ^ (v193 - 1692466918) ^ (*(_DWORD *)(v189 + 4 * BYTE2(v51)) - 1514919915);
  v198 = (char *)*(&off_1E93A7480 + (int)v186 - 1649) - 8;
  *(_BYTE *)(v184 + 6) = v198[BYTE1(v196) ^ 0x99] ^ 0xA5;
  v199 = (char *)*(&off_1E93A7480 + SHIDWORD(v205)) - 8;
  *(_BYTE *)(v184 + *(_QWORD *)(v38 - 248)) = (v199[BYTE2(v115) ^ 0xADLL] - 14) ^ 0xC5;
  v200 = (uint64_t)*(&off_1E93A7480 + (int)v186 - 1627);
  *(_BYTE *)(v184 + *(_QWORD *)(v38 - 208)) = *(_BYTE *)(v200 + (v196 ^ 0xFCLL)) ^ 0x9F;
  *(_BYTE *)(v184 + *(_QWORD *)(v38 - 224)) = (v199[BYTE2(v197) ^ 0x8CLL] - 14) ^ 0x47;
  v201 = (uint64_t)*(&off_1E93A7480 + (int)v186 - 1738);
  *(_BYTE *)(v184 + *(_QWORD *)(v38 - 256)) = (*(_BYTE *)(v201 + (BYTE3(v196) ^ 0xDELL)) - 52) ^ 0x1B;
  *(_BYTE *)(v184 + *(_QWORD *)(v38 - 240)) = ((v199[BYTE2(v196) ^ 0x15]
                                              + ((v199[BYTE2(v196) ^ 0x15] - 14) ^ 0xDA)
                                              - 13) ^ 0xFE)
                                            + v199[BYTE2(v196) ^ 0x15]
                                            - 14;
  v202 = v206 ^ v117 ^ (v195 - 1514919915) ^ ((_DWORD)v118 - 1663827688) ^ ((_DWORD)v192 - ((2 * (_DWORD)v192 + 910033460) & 0x84653C64) + 1565630284);
  *(_BYTE *)(v184 + *(_QWORD *)(v38 - 232)) = *(_BYTE *)(v200 + (v202 ^ 5)) ^ 0x6D;
  v203 = *(_QWORD *)(v38 - 184);
  *(_BYTE *)(v184 + *(_QWORD *)(v38 - 176)) = (*(_BYTE *)(v201 + (BYTE3(v115) ^ 0x4ELL)) - 52) ^ 0xE6;
  *(_BYTE *)(v184 + *(_QWORD *)(v38 - 168)) = (*(_BYTE *)(v201 + (HIBYTE(v197) ^ 0x9CLL)) - 52) ^ 0xB8;
  *(_BYTE *)(v184 + v203) = (*(_BYTE *)(v201 + (BYTE3(v202) ^ 0x67)) - 52) ^ 0x91;
  *(_BYTE *)(v184 + *(_QWORD *)(v38 - 160)) = *(_BYTE *)(v200 + (v197 ^ 0xF2)) ^ 0x67;
  *(_BYTE *)(v184 + *(_QWORD *)(v38 - 192)) = v198[BYTE1(v197) ^ 0x1ELL] ^ 6;
  *(_BYTE *)(v184 + *(_QWORD *)(v38 - 152)) = v198[BYTE1(v202) ^ 0x33] ^ 0x1F;
  *(_BYTE *)(v184 + *(_QWORD *)(v38 - 200)) = v198[BYTE1(v115) ^ 0xBCLL] ^ 0xD1;
  *(_BYTE *)(v184 + *(_QWORD *)(v38 - 144)) = *(_BYTE *)(v200 + (v115 ^ 0x9FLL)) ^ 0x9F;
  *(_BYTE *)(v184 + *(_QWORD *)(v38 - 136)) = (v199[BYTE2(v202) ^ 0xDLL] - 14) ^ 0x8E;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a35 + 8 * ((458 * ((((_DWORD)v203 + 841929202 - 2 * (((_DWORD)v203 + 16) & *(_DWORD *)(v38 - 216) ^ *(_DWORD *)(v38 - 212) & 5)) ^ 0x322ED1E2u) < HIDWORD(v209))) ^ ((int)v186 - 553))) - 8))(v198, 5, v200, v202, v196, v186, v192, v193, a2, a3, a4, v205, v206, v207, v208, v209, v210, v211, v212,
           v213,
           v214,
           v215,
           v216,
           v217,
           v218,
           v219,
           v220,
           v221,
           v222,
           v223,
           v224,
           v225,
           v226,
           v227,
           v228,
           v229);
}

void sub_1D24A6590()
{
  JUMPOUT(0x1D24A4370);
}

uint64_t sub_1D24A65C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (((((v8 == a3) ^ a8 ^ 0x79) & 1) * ((a8 ^ 0x79) + 302)) ^ a8))
                            - 12))();
}

uint64_t sub_1D24A65F4(uint64_t a1, int a2)
{
  char v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((1008 * ((((v2 & 8) == 0) ^ (((a2 - 10) | 0xE8) + 24)) & 1)) ^ (a2 + 497)))
                            - 12))();
}

uint64_t sub_1D24A6634(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  char v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  int v54;
  char v55;
  uint64_t v56;
  int8x16x4_t v58;

  *(_DWORD *)(v50 - 128) = v49;
  v51 = a2 ^ 8;
  *(_DWORD *)(v50 - 136) = v45;
  v52 = (a2 ^ 0xFFFFFB11) & v45;
  v53 = *(_QWORD *)(v50 - 120) - 7;
  v54 = -a3;
  *(_DWORD *)(v50 - 144) = v52;
  v55 = v46 + a1 + v47;
  v56 = v54 + v48 + a1 + v47 - 482 + ((v51 + 1495529230) & 0xA6DC05F2);
  v58.val[0].i64[0] = ((_BYTE)v54 + (_BYTE)v48 + (_BYTE)a1 + (_BYTE)v47 + 30 + (((_BYTE)v51 + 14) & 0xF2)) & 0xF;
  v58.val[0].i64[1] = ((_BYTE)v54 + v55 + 9) & 0xF;
  v58.val[1].i64[0] = ((_BYTE)v54 + v55 + 8) & 0xF;
  v58.val[1].i64[1] = ((_BYTE)v54 + v55 + 7) & 0xF;
  v58.val[2].i64[0] = ((_BYTE)v54 + v55 + 6) & 0xF;
  v58.val[2].i64[1] = ((_BYTE)v54 + v55 + 5) & 0xF;
  v58.val[3].i64[0] = ((_BYTE)v54 + v55 + 4) & 0xF;
  v58.val[3].i64[1] = ((_BYTE)v54 + v55 + 3) & 0xF;
  *(int8x8_t *)(v53 + v56) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v42 + (v56 & 0xF) - 7), *(int8x8_t *)(v53 + v56)), veor_s8(*(int8x8_t *)((v56 & 0xF) + v44 - 5), *(int8x8_t *)((v56 & 0xF) + v43 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v58, (int8x16_t)xmmword_1D24F95B0), (int8x8_t)0x7777777777777777)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a42 + 8 * (v51 | (8 * (v54 != 8 - v52)))) - 4))((__n128)xmmword_1D24F95B0);
}

void sub_1D24A6780()
{
  JUMPOUT(0x1D24A66B8);
}

uint64_t sub_1D24A67A8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ (878 * (*(_DWORD *)(v2 - 136) == *(_DWORD *)(v2 - 144)))))
                            - (v0 + 1311)
                            - ((v0 + 1114811819) & 0xBD8D5773)
                            + 3582))();
}

uint64_t sub_1D24A67F8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = (a4 - 2023405430);
  *(_BYTE *)(*(_QWORD *)(v10 - 120) + v11) ^= *(_BYTE *)(v6 + (v11 & 0xF)) ^ *(_BYTE *)((v11 & 0xF) + v8 + 2) ^ *(_BYTE *)((v11 & 0xF) + v7 + 4) ^ (119 * (v11 & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((254 * (a4 - 1 != v5)) ^ (a5 - 1679))) - 12))();
}

void sub_1D24A6868()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 130835638)
    v1 = 137543419;
  else
    v1 = -137501405;
  *(_DWORD *)(v2 + 32) = v1;
}

void sub_1D24A68CC(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x454517534C5DD3E1) - 410422191;
  v3 = *(_DWORD *)(*(_QWORD *)a1 - 0x454517534C5DD3E1) - 410422191;
  v4 = (v2 < -982980670) ^ (v3 < -982980670);
  v5 = v2 > v3;
  if (v4)
    v6 = v2 < -982980670;
  else
    v6 = v5;
  v1 = *(_DWORD *)(a1 + 20) - 1374699841 * ((a1 + 1891232920 - 2 * (a1 & 0x70B9EC98)) ^ 0x1D4DF491);
  __asm { BR              X12 }
}

uint64_t sub_1D24A69B4()
{
  uint64_t v0;
  int v1;
  unsigned int v2;
  int v3;
  int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v4 = v1 - 1701418598;
  v5 = v4 < (int)((2 * v2) ^ 0x7875DF7F);
  v6 = v3 - 1701418598 < v4;
  if (v3 - 1701418598 < 2020990219 != v5)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (int)((750 * !v6) ^ v2)) - (v2 ^ 0x136)))();
}

uint64_t sub_1D24A6A34(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  v4 = 157 * (v2 ^ 0x280);
  if ((v4 ^ 0x22208DB5) + v3 >= 0)
    v3 = -1145116958 - v3;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * ((94 * (v3 - 1574925170 >= 0)) ^ v4)) - 12))(a1, 4294966904);
}

uint64_t sub_1D24A6ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6)
{
  uint64_t v6;
  int v7;
  _QWORD *v8;
  _QWORD *v9;
  int v10;
  unsigned int v11;
  _BOOL4 v12;

  v12 = (*(_DWORD *)(*v9 + 4 * v11) ^ (((v10 + 949) ^ a5) + v7)) <= (*(_DWORD *)(*v8 + 4 * v11) ^ (v7 + 62 * ((v10 + 949) ^ a6) + 764));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((8 * v12) | (16 * v12)) ^ (v10 + 949))) - 4))();
}

uint64_t sub_1D24A6B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (((a8 & ~((v11 - 306) ^ (v12 < v13))) * (((v11 ^ a7) * v9) ^ v10)) ^ v11))
                            - 8))();
}

void sub_1D24A6B70()
{
  JUMPOUT(0x1D24A6AB8);
}

uint64_t sub_1D24A6B8C(uint64_t result)
{
  int v1;
  int v2;

  *(_DWORD *)(result + 16) = ((v2 + 1070) ^ 0x82EFB7F0) - v1;
  return result;
}

void sub_1D24A6BB8(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 8) - 535753261 * (((a1 | 0x623F3C2F) - (a1 & 0x623F3C2F)) ^ 0x68CB3200);
  v2 = *(_QWORD *)a1;
  ((void (*)(char *, void (*)()))*(&off_1E93A7480 + v1 - 499))((char *)*(&off_1E93A7480 + v1 - 555) - 12, sub_1D24DA534);
  __asm { BR              X10 }
}

uint64_t sub_1D24A6C60@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((73 * (*(_QWORD *)(*(_QWORD *)(v2 + 8 * (a1 ^ 0x22B)) - 4) != 0)) ^ a1))
                            - ((a1 + 73) ^ 0x251)))();
}

uint64_t sub_1D24A6C9C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 - 385)))(v1);
}

uint64_t sub_1D24A6CC8(uint64_t result)
{
  uint64_t v1;
  __int16 v2;
  unsigned int v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 8);
  v2 = *(_DWORD *)(result + 4) - 24687 * ((2 * (result & 0xB783) - result + 18556) ^ 0x444F);
  v3 = (((2 * (v2 & 0x1FF ^ 0x45)) | 0x3E2292E4) - (v2 & 0x1FF ^ 0x45) + 1626257038) ^ 0xD038887A;
  *(_DWORD *)(v1 - 0x5C256D3C5DC220D0) = (v3 - ((2 * v3) & 0xEA23B8) + 7672284) ^ 0x1ECF599F;
  *(_QWORD *)(v1 - 0x5C256D3C5DC220F0) = 0x618F3049E9FA1B2;
  *(_DWORD *)(v1 - 0x5C256D3C5DC220D4) = 108174678;
  v4 = v2 ^ 0xC9;
  if (v4 == 1)
  {
    v5 = 108174694;
    goto LABEL_5;
  }
  if (v4 == 2)
  {
    *(_DWORD *)(v1 - 0x5C256D3C5DC220D8) = -1184159187;
    v5 = 108174698;
LABEL_5:
    *(_QWORD *)(v1 - 0x5C256D3C5DC220E8) = 0x957460541DFCE8DCLL;
    *(_QWORD *)(v1 - 0x5C256D3C5DC220E0) = 0x6A8B9FABE2031723;
    *(_DWORD *)(v1 - 0x5C256D3C5DC220D4) = v5;
  }
  *(_DWORD *)result = 193010986;
  return result;
}

void sub_1D24A6E58(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v1 = 460628867 * (a1 ^ 0x4C96827D);
  v2 = *(_DWORD *)(a1 + 12) - v1;
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_DWORD *)(a1 + 28) ^ v1;
  v6 = 155086793 * (*(_DWORD *)(a1 + 24) ^ v1) - 137631681;
  v15 = *(_QWORD *)(a1 + 16);
  v7 = 3804331 * (((~&v8 & 0x11140AA) - (~&v8 | 0x11140AB)) ^ 0x2F50C367);
  v14 = (157212635 * v5 - 1626598378) ^ v7;
  v11 = v7 ^ v6;
  v12 = v4;
  v13 = v4;
  v8 = v2 + v7 + 1695026497;
  v9 = v3;
  sub_1D24D9DF8((uint64_t)&v8);
  __asm { BR              X8 }
}

uint64_t sub_1D24A6F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unint64_t *a12, char a13, int a14, uint64_t a15, int a16)
{
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;
  int v22;
  unsigned int v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v23 = 1759421093 * ((~&a11 & 0x1263E600 | &a11 & 0xED9C19FF) ^ 0xA11E5654);
  v24 = v20 + *(_BYTE *)(v16 + 48) - 14;
  a16 = v19 - v23 - 83;
  a12 = &STACK[0x4A03747B2680DE0A];
  a13 = v24 ^ (-91 * (&a11 ^ 0x54));
  a15 = v21;
  a14 = v22 + v23 - 676509991;
  sub_1D24ACC98((uint64_t)&a11);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18
                                                                                         + 8
                                                                                         * (((a11 == v17) * (v19 + 686)) ^ v19)))(v25, v26, v27, v28, v29, v30);
}

uint64_t sub_1D24A7058()
{
  uint64_t v0;
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((((v1 - 341562879) < 0xFFFFFFFE) ^ (((v2 - 65) ^ 0xC5) + 114)) & 1)
                                * ((5 * ((v2 - 833) ^ 0xC5)) ^ 0x342)) ^ (v2 - 833))))();
}

void sub_1D24A70A4(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  *(_DWORD *)(a1 - 0x5709FBB830BDBF48) = v2 - 1;
  *(_DWORD *)(v1 + 8) = 137543419;
}

void sub_1D24A7220(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  __asm { BR              X10 }
}

uint64_t sub_1D24A731C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((2009
                                          * (((2 * v0) & 0xDFFBF774 ^ 0x4D230630)
                                           + (v0 ^ 0xD96C7CA7)
                                           + v1
                                           + 465
                                           + 2071188384 != 1802621626)) ^ v1))
                            - 12))();
}

uint64_t sub_1D24A7398@<X0>(int a1@<W1>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8
                                   * ((((a1 + a2 + v2 + 268566758) > 7) * ((v2 + 152) ^ 0x6DA)) ^ v2)))();
}

uint64_t sub_1D24A740C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (((a3 + ((a6 - 679895258) & 0x28865F7Cu) + a8 + 332 < 0xFFFFFFF0)
                                          * ((a6 - 197) ^ 0x384)) ^ a6))
                            - 8))();
}

uint64_t sub_1D24A745C@<X0>(int a1@<W1>, int a2@<W2>, unsigned int a3@<W4>, int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v16;
  unint64_t v17;
  int v19;

  v10 = (a2 + a1 + a4 + 1212) + v8;
  v11 = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a4 - 68) & 0xF;
  v12 = v11 - v10;
  v13 = (v6 | v11) - v10;
  v14 = (v7 | v11) - v10;
  v16 = (unint64_t)(v4 - v8) > 0xF
     && (unint64_t)(v12 + v5) > 0xF
     && v13 + 4 >= (unint64_t)((a3 ^ 0x5F0) - 664) - 1000;
  v17 = v14 + 3;
  v19 = v16 && v17 > 0xF;
  return (*(uint64_t (**)(void))(v9 + 8 * ((4 * v19) | (16 * v19) | a3)))();
}

uint64_t sub_1D24A74D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                                         + 8
                                                                                         * (((((v5 + 115232879) & 0x7921ABCC)
                                                                                            - 711)
                                                                                           * (v4 < 0x10)) ^ v5))
                                                                             - 12))(a1, a2, a3, a4, 0);
}

uint64_t sub_1D24A7514(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int8x16_t v65;
  uint64_t v66;
  int8x16_t v67;
  int8x16_t v68;
  int8x16x4_t v70;
  int8x16x4_t v71;

  *(_DWORD *)(v64 - 120) = a4 + 13;
  *(_DWORD *)(v64 - 128) = a4 + 12;
  *(_DWORD *)(v64 - 132) = a4 + 11;
  v70.val[1].i64[0] = ((_BYTE)a4 + 3) & 0xF;
  v70.val[1].i64[1] = ((_BYTE)a4 + 2) & 0xF;
  v70.val[2].i64[0] = ((_BYTE)a4 + 1) & 0xF;
  v70.val[2].i64[1] = a4 & 0xF;
  v70.val[3].i64[0] = ((_BYTE)a4 - 1) & 0xF;
  v70.val[3].i64[1] = ((_BYTE)a4 + 14) & 0xF;
  v65.i64[0] = 0x8383838383838383;
  v65.i64[1] = 0x8383838383838383;
  v66 = (a4 + v59);
  v70.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)v59) & 0xF;
  v70.val[0].i64[1] = ((_BYTE)a4 + 4) & 0xF;
  v67.i64[0] = vqtbl4q_s8(v70, (int8x16_t)xmmword_1D24F95A0).u64[0];
  v71.val[0].i64[1] = *(_DWORD *)(v64 - 128) & 0xF;
  v71.val[1].i64[1] = ((_BYTE)a4 + 10) & 0xF;
  v71.val[2].i64[1] = ((_BYTE)a4 + 8) & 0xF;
  v71.val[3].i64[1] = ((_BYTE)a4 + 6) & 0xF;
  v71.val[0].i64[0] = *(_DWORD *)(v64 - 120) & 0xF;
  v71.val[1].i64[0] = *(_DWORD *)(v64 - 132) & 0xF;
  v71.val[2].i64[0] = ((_BYTE)a4 + 9) & 0xF;
  v71.val[3].i64[0] = ((_BYTE)a4 + 7) & 0xF;
  v67.i64[1] = vqtbl4q_s8(v71, (int8x16_t)xmmword_1D24F95A0).u64[0];
  v68 = vrev64q_s8(vmulq_s8(v67, v65));
  *(int8x16_t *)(a55 - 15 + v66) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v60 + (v66 & 0xF) - 15), *(int8x16_t *)(v58 - 15 + v66)), veorq_s8(*(int8x16_t *)((v66 & 0xF) + v61 - 11), *(int8x16_t *)((v66 & 0xF) + v62 - 12))), vextq_s8(v68, v68, 8uLL));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a58
                                                      + 8
                                                      * ((432 * ((((a6 - 573) | 0x100) ^ 0x19F) == (v63 & 0xFFFFFFF0))) ^ a6))
                                          - 8))(v63);
}

uint64_t sub_1D24A7698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                                                  + 8 * ((725 * (v6 + 915506574 != v5)) ^ v6))
                                                                                      - 12))(a1, a2, a3, a4, a5, (v6 + 69));
}

uint64_t sub_1D24A76E4()
{
  uint64_t v0;
  int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  uint64_t v11;

  v10 = v2 > 0xA9C9485E;
  v11 = (v5 - 230420395);
  *(_BYTE *)(v8 + v11) = *(_BYTE *)(*(_QWORD *)(v7 + 8 * (v6 - 317)) + (v11 & 0xF) - 4) ^ *(_BYTE *)(v0 + v11) ^ (23 * (v11 & 0xF)) ^ *(_BYTE *)(*(_QWORD *)(v7 + 8 * (v6 ^ 0x141)) + (v11 & 0xF) - 8) ^ *(_BYTE *)(*(_QWORD *)(v7 + 8 * (v6 ^ 0x15A)) + (v11 & 0xF) - 7);
  if (v10 == v5 + 1216006135 < ((v6 + 422853192) & 0xE6CBC5FC) + v1)
    v10 = v5 + 1216006135 < v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((v10 * v4) ^ v6)) - 12))();
}

uint64_t sub_1D24A77B8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v24;
  uint64_t v25;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25
                                                      + 8
                                                      * ((((714 * (((v24 + 53) | 0x10) ^ 0x1D6)) ^ 0x5BE) * (a1 != a5)) ^ v24))
                                          - 12))(a24);
}

uint64_t sub_1D24A7804()
{
  char v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (83 * ((v0 & 8) == 0))))
                            - ((186 * (v1 ^ 0x596) - 1843772789) & 0x6DE5BFF8)
                            + 1012))();
}

uint64_t sub_1D24A7854@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W4>, int a4@<W7>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int v64;
  int v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  int8x16x4_t v70;

  *(_DWORD *)(v63 - 136) = v60;
  v64 = v60 & 0xFFFFFFF8;
  *(_QWORD *)(v63 - 128) = v62 - 7;
  *(_QWORD *)(v63 - 120) = v55 - 7;
  *(_DWORD *)(v63 - 140) = v64;
  *(_DWORD *)(v63 - 132) = a3 - v64 + 8;
  v65 = a1 + v59 + a5;
  v66 = v61 + v65 - a3;
  v67 = a2 + v65 - a3 + 813;
  v68 = (4 * a4) ^ 0x6B0u;
  *(_QWORD *)(v63 - 152) = v68;
  v70.val[0].i64[0] = v67 & ((_DWORD)v68 - 849);
  v70.val[0].i64[1] = (v66 - 43) & 0xF;
  v70.val[1].i64[0] = (v66 - 44) & 0xF;
  v70.val[1].i64[1] = (v66 - 45) & 0xF;
  v70.val[2].i64[0] = (v66 - 46) & 0xF;
  v70.val[2].i64[1] = (v66 - 47) & 0xF;
  v70.val[3].i64[0] = (v66 - 32) & 0xF;
  v70.val[3].i64[1] = (v66 - 33) & 0xF;
  *(int8x8_t *)(*(_QWORD *)(v63 - 128) + v67) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v56 + v70.val[0].i64[0] - 7), *(int8x8_t *)(*(_QWORD *)(v63 - 120) + v67)), veor_s8(*(int8x8_t *)(v70.val[0].i64[0] + v57 - 3), *(int8x8_t *)(v70.val[0].i64[0] + v58 - 4))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v70, (int8x16_t)xmmword_1D24F95B0), (int8x8_t)0x8383838383838383)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a55 + 8 * ((1357 * (*(_DWORD *)(v63 - 132) == 0)) ^ a4)) - 4))((__n128)xmmword_1D24F95B0);
}

void sub_1D24A79B0()
{
  JUMPOUT(0x1D24A78DCLL);
}

uint64_t sub_1D24A79B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;

  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * (int)(((*(_QWORD *)(v24 - 152)
                                                    - 396
                                                    + (*(_QWORD *)(v24 - 152) ^ 0x98)
                                                    - 166)
                                                   * (*(_DWORD *)(v24 - 136) == *(_DWORD *)(v24 - 140))) ^ *(_QWORD *)(v24 - 152))))(a24);
}

uint64_t sub_1D24A79FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = (a7 + v9);
  *(_BYTE *)(v14 + v16) = *(_BYTE *)(v10 + (v16 & 0xF)) ^ *(_BYTE *)(v7 + v16) ^ *(_BYTE *)((v16 & 0xF) + v11 + 4) ^ *(_BYTE *)(v12 + (v16 & 0xF) + ((v13 - 548) ^ 0x1D7)) ^ (-125 * (v16 & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (((4 * (a7 - 1 == v8)) | (8 * (a7 - 1 == v8))) ^ (v13 + 511)))
                            - 4))();
}

uint64_t sub_1D24A7A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int8x16_t v52;
  BOOL v53;
  int v54;
  uint64_t v55;

  v52 = veorq_s8(*(int8x16_t *)(*(_QWORD *)(a1 + 16) - 0x391216791EC5A4A5), (int8x16_t)xmmword_1D24F95D0);
  if (v49)
    v53 = *(_QWORD *)(a1 + 24) == 0x5A86EB189CF12664;
  else
    v53 = 1;
  v54 = !v53;
  v55 = *(_QWORD *)(v51 + 8 * (int)((1279 * v54) ^ a6));
  *(int8x16_t *)(v50 - 112) = v52;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 - ((a6 ^ 0xFFFFFFFFFFFFFFB7) + 5 * (a6 ^ 0x181))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_1D24A7AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  int v49;
  uint64_t v50;
  _BOOL4 v52;

  v52 = (((_BYTE)a25 + 7) & 0xF) != 0 || (_DWORD)a25 == 308827769;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 + 8 * ((((((v49 - 377) | 0x203) - 372) ^ 0xC2) * v52) ^ v49)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_1D24A7B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57,int a58)
{
  uint64_t v58;
  unsigned int v59;

  v59 = a25 - ((a56 << (((a58 - 1) | 4) - 53)) & 0xC109873A) - 836997852;
  return (*(uint64_t (**)(void))(v58
                              + 8
                              * ((1915
                                * ((v59 ^ 0x2D79886A) + 2147483645 + ((2 * v59) & 0x9BFA97EE ^ 0x8108872A) != 1308445684)) ^ a58)))();
}

uint64_t sub_1D24A7C0C(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((1214 * (a1 + v2 + ((((v1 - 198) | 0x288) - 452) ^ 0x3202B63Du) > 7)) ^ v1))
                            - 12))();
}

uint64_t sub_1D24A7C80(uint64_t a1, int a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a2 | (2 * (v4 + a4 - 16 < ((a2 + 452) ^ 0xFFFFFC08)))))
                            - (a2 - 231)
                            + 321))();
}

uint64_t sub_1D24A7CB8(int a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BOOL4 v20;
  int v22;
  int v24;

  v9 = (a1 + v5 + v6);
  v10 = v9 + v7 + 1;
  v11 = ((_BYTE)a1 + (_BYTE)v5 + (_BYTE)v6) & 0xF;
  v12 = v11 - v9;
  v13 = v4 + v12;
  ++v11;
  v14 = v4 + v11;
  v15 = v3 + v12;
  v16 = v3 + v11;
  v17 = v2 + v12;
  v18 = v2 + v11;
  v20 = v16 > v7 && v15 < v10;
  v22 = v14 > v7 && v13 < v10 || v20;
  if (v18 <= v7 || v17 >= v10)
    v24 = v22;
  else
    v24 = 1;
  return (*(uint64_t (**)(void))(v8 + 8 * (((((v1 ^ 0x5F3) - 198) ^ 0x3E2) * (v24 ^ 1)) ^ v1)))();
}

uint64_t sub_1D24A7D3C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v5
                                                    + 8
                                                    * ((440
                                                      * (v4 < (((a4 ^ 0x4A7) + 940) ^ 0x1EA ^ (23 * (a4 ^ 0x4A7u))))) ^ a4)))(a1, 0);
}

uint64_t sub_1D24A7D7C(int a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int8x16_t v12;
  int8x16_t v13;
  unsigned int v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16x4_t v19;
  int8x16x4_t v20;

  v19.val[1].i64[0] = ((_BYTE)v6 + 8) & 0xF;
  v19.val[1].i64[1] = ((_BYTE)v6 + 7) & 0xF;
  v19.val[2].i64[0] = ((_BYTE)v6 + 6) & 0xF;
  v19.val[2].i64[1] = ((_BYTE)v6 + 5) & 0xF;
  v19.val[3].i64[0] = ((_BYTE)v6 + 4) & 0xF;
  v19.val[3].i64[1] = ((_BYTE)v6 + 3) & 0xF;
  v12.i64[0] = 0x505050505050505;
  v12.i64[1] = 0x505050505050505;
  v13.i64[0] = 0x6767676767676767;
  v13.i64[1] = 0x6767676767676767;
  v14 = a1 + v8 + v9;
  v19.val[0].i64[0] = v14 & 0xF;
  v19.val[0].i64[1] = ((_BYTE)v6 + 9) & 0xF;
  v15.i64[0] = vqtbl4q_s8(v19, (int8x16_t)xmmword_1D24F95A0).u64[0];
  v20.val[0].i64[1] = ((_BYTE)v6 + 1) & 0xF;
  v20.val[1].i64[1] = ((_BYTE)v6 - 1) & 0xF;
  v20.val[2].i64[1] = (v6 + 13) & 0xF;
  v20.val[3].i64[1] = (v6 + 11) & 0xF;
  v20.val[0].i64[0] = ((_BYTE)v6 + 2) & 0xF;
  v20.val[1].i64[0] = v6 & 0xF;
  v20.val[2].i64[0] = (v6 + 14) & 0xF;
  v20.val[3].i64[0] = (v6 + 12) & 0xF;
  v15.i64[1] = vqtbl4q_s8(v20, (int8x16_t)xmmword_1D24F95A0).u64[0];
  v16 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v10 - 15 + v14), *(int8x16_t *)(v5 + v19.val[0].i64[0] - 15)), veorq_s8(*(int8x16_t *)(v4 + v19.val[0].i64[0] - 15), *(int8x16_t *)(v3 + v19.val[0].i64[0] - 15))));
  v17 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v16, v16, 8uLL), v13), vmulq_s8(v15, v12)));
  *(int8x16_t *)(v10 - 15 + v14) = vextq_s8(v17, v17, 8uLL);
  return (*(uint64_t (**)(void))(v11 + 8 * ((((v7 & 0xFFFFFFF0) == 16) * (((a3 << 7) ^ 0x1E780) + 414)) ^ a3)))();
}

void sub_1D24A7ED8()
{
  JUMPOUT(0x1D24A7E58);
}

uint64_t sub_1D24A7EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,unsigned __int8 *a55,unsigned int a56,uint64_t a57,uint64_t a58)
{
  uint64_t v58;
  unsigned __int8 *v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  int v68;
  unsigned __int8 v69;
  unint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  char v77;
  unsigned int v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  unsigned int v87;
  int v88;
  int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  unsigned int v102;
  int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  int v118;
  int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  int v145;
  unsigned int v146;
  int v147;
  char *v148;
  char *v149;
  char *v150;
  int v151;
  char *v152;
  int v153;
  int v154;
  int v155;
  int v156;
  unsigned int v157;
  int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  int v165;
  unsigned int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  int v174;
  int v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  unsigned int v192;
  int v193;
  int v194;
  int v195;
  unsigned int v196;
  int v197;
  unsigned int v198;
  unsigned int v199;
  int v200;
  int v201;
  unsigned int v202;
  int v203;
  int v204;
  int v205;
  unsigned int v206;
  int v207;
  unsigned int v208;
  int v209;
  unsigned int v210;
  int v211;
  int v212;
  char *v213;
  char *v214;
  uint64_t v215;
  char *v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  char v225;
  uint64_t v226;
  uint64_t v227;
  int v228;
  uint64_t v229;
  int v230;
  uint64_t v231;
  unsigned int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  uint64_t v237;
  int v238;
  uint64_t v239;
  unsigned int v240;
  int v241;
  char *v242;
  unsigned int v243;
  uint64_t v244;
  unsigned int v245;
  int v246;
  unsigned int v247;
  uint64_t v248;
  int v249;
  int v250;
  unint64_t v251;
  int v252;
  char *v253;
  int v254;
  int v255;
  int v256;
  unsigned int v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  int v270;
  int v271;
  int v272;
  unsigned int v273;
  unsigned int v274;
  int v275;
  int v276;
  int v277;
  unsigned int v278;
  unsigned int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  unsigned int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  unsigned int v290;
  int v291;
  unsigned int v292;
  int v293;
  int v294;
  unsigned int v295;
  int v296;
  unsigned int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  int v302;
  unsigned int v303;
  int v304;
  int v305;
  unsigned int v306;
  int v307;
  unsigned int v308;
  int v309;
  unsigned int v310;
  int v311;
  int v312;
  unsigned int v313;
  unsigned int v314;
  int v315;
  unsigned int v316;
  int v317;
  int v318;
  unsigned int v319;
  unsigned int v320;
  unsigned int v321;
  unsigned int v322;
  int v323;
  int v324;
  unsigned int v325;
  int v326;
  int v327;
  int v328;
  unsigned int v329;
  unsigned int v330;
  int v331;
  int v332;
  unsigned int v333;
  int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  unsigned int v338;
  int v339;
  unsigned int v340;
  int v341;
  unsigned int v342;
  int v343;
  int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  unsigned int v348;
  int v349;
  int v350;
  int v351;
  int v352;
  int v353;
  unsigned int v354;
  int v355;
  int v356;
  int v357;
  int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  int v362;
  int v363;
  int v364;
  unsigned int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  unsigned int v371;
  int v372;
  int v373;
  int v374;
  unsigned int v375;
  unsigned int v376;
  char *v377;
  uint64_t v378;
  int v379;
  int v380;
  int v381;
  char *v382;
  uint64_t v383;
  int v384;
  int v385;
  unsigned int v386;
  char *v387;
  int v388;
  int v389;
  uint64_t v390;
  int v391;
  uint64_t v392;
  char *v393;
  unsigned int v394;
  int v395;
  unsigned int v396;
  char *v397;
  char *v398;
  unsigned int v399;
  unsigned int v400;
  uint64_t v401;
  int v402;
  char *v403;
  int v404;
  int v405;
  unsigned int v406;
  int v407;
  uint64_t v408;
  int v409;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  unsigned int v416;
  uint64_t v417;
  unsigned int v418;
  uint64_t v419;
  int v420;
  unsigned int v421;
  uint64_t v422;
  unsigned int v423;
  uint64_t v424;
  unsigned __int8 v425;
  unsigned int v426;
  uint64_t v427;
  int v428;
  int v429;
  uint64_t v430;
  unsigned int v431;
  int v432;
  uint64_t v433;
  unsigned __int8 v434;
  uint64_t v435;
  unsigned int v436;
  unsigned int v437;
  unsigned int v438;
  int v439;
  unsigned int v440;
  uint64_t v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  uint64_t v445;
  unsigned int v446;
  int v447;
  unsigned int v448;
  int v449;
  uint64_t v450;
  unsigned __int8 v451;
  int v452;
  int v453;
  int v454;
  int v455;
  uint64_t v456;
  int v457;
  unsigned int v458;
  int v459;
  __int16 v460;
  int v461;
  uint64_t v462;
  int v463;
  int v464;
  int v465;
  int v466;
  unsigned int v467;
  uint64_t v468;
  int v469;
  int v470;
  int v471;
  int v472;
  uint64_t v473;
  unsigned int v474;
  int v475;
  unsigned int v476;
  int v477;
  int v478;
  uint64_t v479;
  int v480;
  int v481;
  unsigned int v482;
  unsigned int v483;
  uint64_t v484;
  unsigned int v485;
  unsigned int v486;
  int v487;
  int v488;
  uint64_t v489;
  unsigned int v490;
  int v491;
  int v492;
  unsigned int v493;
  uint64_t v494;
  int v495;
  int v496;
  int v497;
  int v498;
  uint64_t v499;
  int v500;
  int v501;
  int v502;
  int v503;
  unsigned int v504;
  uint64_t v505;
  int v506;
  int v507;
  unsigned int v508;
  int v509;
  uint64_t v510;
  int v511;
  int v512;
  int v513;
  unsigned int v514;
  int v515;
  uint64_t v516;
  unsigned int v517;
  int v518;
  int v519;
  uint64_t v520;
  int v521;
  int v522;
  int v523;
  unsigned int v524;
  int v525;
  uint64_t v526;
  int v527;
  unsigned int v528;
  unsigned int v529;
  int v530;
  uint64_t v531;
  int v532;
  int v533;
  int v534;
  unsigned int v535;
  int v536;
  uint64_t v537;
  int v538;
  unsigned int v539;
  unsigned int v540;
  int v541;
  uint64_t v542;
  unsigned int v543;
  int v544;
  unsigned int v545;
  char *v546;
  int v547;
  int v548;
  uint64_t v549;
  unsigned int v550;
  char *v551;
  int v552;
  char *v553;
  uint64_t v554;
  uint64_t v555;
  unint64_t v556;
  unint64_t v557;
  int v558;
  uint64_t v559;
  int v560;
  int v561;
  unsigned int v562;
  int v563;
  int v564;
  unsigned int v565;
  int v566;
  int v567;
  int v568;
  unsigned int v569;
  int v570;
  int v571;
  int v572;
  int v573;
  int v574;
  int v575;
  int v576;
  unsigned int v577;
  int v578;

  v63 = *(_QWORD *)(v61 + 8 * (v60 & 0x1A13E5C6)) - 12;
  v64 = *v59 ^ 0xB1;
  v65 = *(_QWORD *)(v61 + 8 * (v60 ^ 0xE6)) - 4;
  v66 = *(_QWORD *)(v61 + 8 * (v60 ^ 0x64)) - 8;
  v67 = *(unsigned __int8 *)(v66 + (*(unsigned __int8 *)(v58 - 0x5A86EB189CF12657) ^ 0x49));
  v68 = ((*(unsigned __int8 *)(v65 + v64) ^ 0xB5) << (v60 + 89)) | ((*(unsigned __int8 *)(v63
                                                                                        + (*(unsigned __int8 *)(v58 - 0x5A86EB189CF12662) ^ 0xD7)) ^ 0x50) << 8);
  HIDWORD(v70) = v67 ^ 2;
  LODWORD(v70) = (v67 ^ 0x94) << 24;
  v69 = v70 >> 26;
  v71 = *(_QWORD *)(v61 + 8 * (v60 ^ 0xC8));
  LODWORD(v64) = *(unsigned __int8 *)(v65 + (*(unsigned __int8 *)(v58 - 0x5A86EB189CF12658) ^ 0xB8));
  v72 = *(unsigned __int8 *)(v66 + (*(unsigned __int8 *)(v58 - 0x5A86EB189CF1265BLL) ^ 0x6BLL));
  HIDWORD(v70) = v72 ^ 2;
  LODWORD(v70) = (v72 ^ 0x94) << 24;
  v73 = ((v70 >> 26) ^ 0x53) << 16;
  LOBYTE(v67) = *(_BYTE *)(v63 + (*(unsigned __int8 *)(v58 - 0x5A86EB189CF12656) ^ 0x2ELL));
  v74 = *(unsigned __int8 *)(v66 + (*(unsigned __int8 *)(v58 - 0x5A86EB189CF12663) ^ 0x47));
  HIDWORD(v70) = v74 ^ 2;
  LODWORD(v70) = (v74 ^ 0x94) << 24;
  v75 = v68 | ((*(_BYTE *)(v71 + (*(unsigned __int8 *)(v58 - 0x5A86EB189CF12661) ^ 0xECLL)) ^ 9) + 112) | (((v70 >> 26) ^ 0x1E) << 16);
  v76 = v73 | ((*(unsigned __int8 *)(v63 + (*(unsigned __int8 *)(v58 - 0x5A86EB189CF1265ALL) ^ 0x77)) ^ 0x9F) << 8);
  LODWORD(v66) = *(unsigned __int8 *)(v66 + (*(unsigned __int8 *)(v58 - 0x5A86EB189CF1265FLL) ^ 0xCBLL));
  HIDWORD(v70) = v66 ^ 2;
  LODWORD(v70) = (v66 ^ 0x94) << 24;
  v77 = *(_BYTE *)(v71 + (*(unsigned __int8 *)(v58 - 0x5A86EB189CF12659) ^ 0xB5));
  v78 = (*(_BYTE *)(v71 + (*(unsigned __int8 *)(v58 - 0x5A86EB189CF12655) ^ 0x36)) + 112) ^ 0x2A | ((v67 ^ 0x95) << 8) | ((v69 ^ 0xFB) << 16) | ((v64 ^ 0xD) << 24);
  v79 = ((*(_BYTE *)(v71 + (*(unsigned __int8 *)(v58 - 0x5A86EB189CF1265DLL) ^ 0xA9)) + 112) | ((*(unsigned __int8 *)(v63 + (*(unsigned __int8 *)(v58 - 0x5A86EB189CF1265ELL) ^ 0x30)) ^ 0x65) << 8)) & 0xFF00FFFF | (((v70 >> 26) ^ 0xBA) << 16) | ((*(unsigned __int8 *)(v65 + (*(unsigned __int8 *)(v58 - 0x5A86EB189CF12660) ^ 0x35)) ^ 0x7A) << 24);
  LODWORD(v63) = *(unsigned __int8 *)(v65 + (*(unsigned __int8 *)(v58 - 0x5A86EB189CF1265CLL) ^ 0xBFLL)) ^ 0x63;
  v80 = (*(_BYTE *)(v71 + (*(unsigned __int8 *)(v58 - 0x5A86EB189CF12655) ^ 0x36)) + 112) ^ 0xFDu;
  v81 = *(_QWORD *)(v61 + 8 * (v60 - 181));
  v82 = v76 | ((_DWORD)v63 << 24);
  LODWORD(v63) = *(_DWORD *)(v81 + 4 * v80) ^ 0x80B4821D;
  v83 = *(_QWORD *)(v61 + 8 * (v60 ^ 0x38)) - 8;
  LODWORD(v63) = v63 ^ *(_DWORD *)(v83 + 4 * (v69 ^ 0x61u));
  v84 = *(_QWORD *)(v61 + 8 * (v60 ^ 0x7E)) - 4;
  LODWORD(v64) = (v63 - ((2 * v63) & 0x85E4E9E4) + 1123185906) ^ *(_DWORD *)(v84 + 4 * (v64 ^ 0x98u));
  LODWORD(v66) = v64 - ((2 * v64) & 0x109610FA);
  v85 = *(_QWORD *)(v61 + 8 * (v60 ^ 0x29)) - 8;
  v86 = *(_DWORD *)(v85 + 4 * (v67 ^ 0xADu)) ^ v75 ^ (v66 - 2008348547);
  v557 = __PAIR64__(v75, v78);
  LOBYTE(v66) = (v77 + 112) ^ 0xA8;
  v87 = v82 & 0xFFFFFF00 | v66;
  v466 = v86;
  v88 = v86 ^ v79 ^ 0x4D;
  *(_DWORD *)(v62 - 160) = v86 ^ v79;
  *(_DWORD *)(v62 - 120) = v88 ^ v87;
  v89 = v88;
  v451 = v86 ^ v79 ^ 0x4D;
  v90 = v88 ^ v87 ^ (v78 - ((2 * v78) & 0xF60C56EE) + 2064001911);
  v492 = BYTE1(v90);
  v480 = BYTE2(v90);
  v91 = *(_DWORD *)(v83 + 4 * (BYTE2(v90) ^ 0xB8u)) ^ *(_DWORD *)(v85 + 4 * (BYTE1(v90) ^ 0xD1u));
  v92 = v90 ^ 0xC1F106DE;
  v487 = v90;
  v93 = ((v91 ^ 0x5E5CF7E6) - 2 * ((v91 ^ 0x5E5CF7E6) & 0x56A37D96 ^ v91 & 0x10) + 1453555078) ^ *(_DWORD *)(v81 + 4 * (v90 ^ 0x5Eu));
  v485 = HIBYTE(v92);
  v94 = v86 ^ *(_DWORD *)(v84 + 4 * (HIBYTE(v92) ^ 0x65)) ^ (v93 - ((2 * v93) & 0x85E4E9E4) + 1123185906);
  v556 = __PAIR64__(v79, v87);
  v95 = v94 ^ 0xD6B9CEAE;
  v96 = v94;
  *(_DWORD *)(v62 - 152) = v94;
  v97 = v94 ^ 0xD6B9CEAE ^ (v87 - 2 * (v87 & 0x56B9CEAF ^ v66 & 1) - 692466002);
  LODWORD(v66) = v97 ^ v92;
  *(_DWORD *)(v62 - 128) = v97;
  v500 = ((v97 ^ v92) >> 16);
  v98 = *(_DWORD *)(v83 + 4 * (v500 ^ 0x2Eu));
  *(_DWORD *)(v62 - 184) = (v86 ^ v79 ^ 0xBAF72DE4) - ((2 * (v86 ^ v79 ^ 0xBAF72DE4)) & 0xAD739D5C) - 692466002;
  v503 = BYTE1(v66);
  v99 = *(_DWORD *)(v85 + 4 * (BYTE1(v66) ^ 0x9Bu)) ^ v98;
  *(_DWORD *)(v62 - 240) = v66;
  v100 = ((v99 ^ 0x5E5CF7E6) - 2 * ((v99 ^ 0x5E5CF7E6) & 0x56A37D9F ^ v99 & 0x19) + 1453555078) ^ *(_DWORD *)(v81 + 4 * (v66 ^ 0xD2u));
  v101 = v66 ^ 0x338DCD6F;
  LODWORD(v66) = BYTE3(v66);
  *(_DWORD *)(v62 - 192) = v66;
  v102 = (v100 - ((2 * v100) & 0x85E4E9E4) + 1123185906) ^ *(_DWORD *)(v84 + 4 * (v66 ^ 0x69));
  v103 = v102 ^ v89 ^ 0x1B9114B3;
  v538 = v102 ^ v89;
  v104 = v103 ^ v97;
  *(_DWORD *)(v62 - 140) = v104;
  v105 = ((v104 ^ 0x81171959) - ((2 * (v104 ^ 0x81171959)) & 0x8E54D84C) + 1193962534) ^ v101;
  v106 = v105 ^ 0x9547167F;
  v544 = ((v105 ^ 0x9547167F) >> 16);
  v560 = ((unsigned __int16)(v105 ^ 0x167F) >> 8);
  v107 = *(_DWORD *)(v85 + 4 * (v560 ^ 0x3Au)) ^ *(_DWORD *)(v83 + 4 * (v544 ^ 0x89u));
  v558 = (((v104 ^ 0x59) - ((2 * (v104 ^ 0x59)) & 0x4C) + 38) ^ v101);
  v108 = ((v107 ^ 0x5E5CF7E6) - 2 * ((v107 ^ 0x5E5CF7E6) & 0x56A37D96 ^ v107 & 0x10) + 1453555078) ^ *(_DWORD *)(v81 + 4 * (v558 ^ 0xE4u));
  v562 = HIBYTE(v106);
  v109 = (v108 - ((2 * v108) & 0x85E4E9E4) + 1123185906) ^ *(_DWORD *)(v84 + 4 * (HIBYTE(v106) ^ 0x1D));
  v517 = v102 ^ v96;
  v110 = (v109 - ((2 * v109) & 0x95D1913E) - 890713953) ^ v102 ^ v96;
  *(_DWORD *)(v62 - 248) = v110;
  v110 ^= 0xCAE8C89F;
  v111 = v110 ^ v102 ^ v89;
  v112 = v110;
  *(_DWORD *)(v62 - 224) = v110;
  v577 = v111;
  v113 = ((v111 ^ 0xFE25CD6D) - ((2 * (v111 ^ 0xFE25CD6D)) & 0x8E54D84C) + 1193962534) ^ v101;
  *(_DWORD *)(v62 - 200) = BYTE1(v113);
  v114 = *(_DWORD *)(v85 + 4 * (BYTE1(v113) ^ 0x6Fu));
  *(_DWORD *)(v62 - 208) = BYTE2(v113);
  v115 = *(_DWORD *)(v83 + 4 * (BYTE2(v113) ^ 0xA8u)) ^ v114;
  v569 = HIBYTE(v113);
  v116 = ((v115 ^ 0x5E5CF7E6) - 2 * ((v115 ^ 0x5E5CF7E6) & 0x42F274FB ^ v115 & 9) + 1123185906) ^ *(_DWORD *)(v84 + 4 * (HIBYTE(v113) ^ 0x85));
  v573 = v113;
  v117 = (v116 - ((2 * v116) & 0xAD46FB0C) + 1453555078) ^ *(_DWORD *)(v81 + 4 * (v113 ^ 0x25u));
  v571 = v111 ^ v104;
  v438 = (v117 - ((2 * v117) & 0x42CC7234) - 1587136230) ^ v103 ^ v111 ^ v104;
  v442 = (v117 - ((2 * v117) & 0x42CC7234) - 1587136230) ^ v103;
  v118 = v113 ^ v438 ^ 0x56A68D6A;
  *(_DWORD *)(v62 - 232) = v113;
  v474 = (v118 ^ 0xC0C52330) >> 24;
  v463 = ((v118 ^ 0xC0C52330) >> 16);
  v119 = *(_DWORD *)(v83 + 4 * (v463 ^ 0x89u)) ^ *(_DWORD *)(v84 + 4 * (v474 ^ 0x1D));
  v469 = ((unsigned __int16)(v118 ^ 0x2330) >> 8);
  v120 = ((v119 ^ 0x94E58B69) - 2 * ((v119 ^ 0x94E58B69) & 0x84B087F ^ v119 & 2) - 2008348547) ^ *(_DWORD *)(v85 + 4 * (v469 ^ 0x3Au));
  v457 = (v113 ^ v438 ^ 0x6A);
  v121 = *(_DWORD *)(v81 + 4 * (v457 ^ 0xABu));
  *(_DWORD *)(v62 - 168) = v112 ^ v117;
  v122 = v112 ^ v117 ^ v121 ^ (v120 - ((2 * v120) & 0xAD46FB0C) + 1453555078);
  v123 = v122 ^ v442 ^ 0x7C166C11;
  v540 = v122;
  v124 = (v123 ^ v113) >> 24;
  *(_DWORD *)(v62 - 212) = v124;
  v125 = v123 ^ v113;
  v547 = v125;
  v126 = *(_DWORD *)(v84 + 4 * (v124 ^ 0x9B)) ^ *(_DWORD *)(v81 + 4 * (v125 ^ 0x31u)) ^ 0x14510974;
  v523 = (v125 >> 8) ^ 0x86839A;
  v527 = BYTE1(v125) ^ 0x9A;
  LODWORD(v63) = (v126 - ((2 * v126) & 0x109610FA) - 2008348547) ^ *(_DWORD *)(v85 + 4 * (BYTE1(v125) ^ 0xA0u));
  v518 = BYTE2(v125);
  v508 = v125;
  v127 = (v63 - ((2 * v63) & 0xAC2FFF36) - 703070309) ^ *(_DWORD *)(v83 + 4 * (BYTE2(v125) ^ 0xAu));
  v426 = (v127 - ((2 * v127) & 0xE5192A32) + 1921815833) ^ v122;
  v460 = (v127 - ((2 * v127) & 0x2A32) - 27367) ^ v122 ^ 0xFB3;
  v476 = v426 ^ 0x8F0F0FB3 ^ v123;
  v529 = v123 ^ v438 ^ 0x56A68D6A;
  v513 = v123;
  *(_DWORD *)(v62 - 136) = v529 ^ 0x226CEABB;
  v128 = ((v476 ^ 0x5A137D54) - ((2 * (v476 ^ 0x5A137D54)) & 0x1C55AF46) + 237688739) ^ v529 ^ 0x226CEABB;
  *(_DWORD *)(v62 - 132) = v128;
  v129 = v128 ^ 0x28D21D32;
  v130 = v125 ^ 0xFB458BB;
  v131 = ((v128 ^ 0xAF4DC532) - 2 * ((v128 ^ 0x28D21D32) & 0xA ^ (v128 ^ 0xAF4DC532) & 0x937C21B) - 1992834543) ^ v125 ^ 0xFB458BB;
  v132 = v131 ^ 0x479AB031;
  v552 = v131;
  v133 = *(_DWORD *)(v81 + 4 * (v131 ^ 0xAAu)) ^ 0xDEE875FB;
  *(_DWORD *)(v62 - 256) = BYTE1(v132);
  v134 = *(_DWORD *)(v85 + 4 * (BYTE1(v132) ^ 0x3Au)) ^ v133;
  v135 = BYTE2(v132);
  v136 = (v134 - ((2 * v134) & 0xAC2FFF36) - 703070309) ^ *(_DWORD *)(v83 + 4 * (BYTE2(v132) ^ 0x89u));
  v482 = HIBYTE(v132);
  v137 = (v136 - ((2 * v136) & 0x85E4E9E4) + 1123185906) ^ *(_DWORD *)(v84 + 4 * (HIBYTE(v132) ^ 0x1D));
  LODWORD(v71) = v137 ^ v123;
  v138 = ((v137 ^ v123 ^ 0xA6C48CD5) - ((2 * (v137 ^ v123 ^ 0xA6C48CD5)) & 0x126F8422) - 1992834543) ^ v130;
  v139 = HIBYTE(v138);
  v575 = BYTE1(v138);
  v140 = *(_DWORD *)(v85 + 4 * (BYTE1(v138) ^ 0x6Fu)) ^ *(_DWORD *)(v84 + 4 * (HIBYTE(v138) ^ 5));
  v534 = v138;
  v141 = ((v140 ^ 0xCAB97C8F) - 2 * ((v140 ^ 0xCAB97C8F) & 0x56A37D96 ^ v140 & 0x10) + 1453555078) ^ *(_DWORD *)(v81 + 4 * (v138 ^ 0x25u));
  v142 = v141 - ((2 * v141) & 0xAC2FFF36);
  v143 = v426 ^ 0x8F0F0FB3 ^ v137;
  v144 = BYTE2(v138);
  v145 = v143 ^ *(_DWORD *)(v83 + 4 * (BYTE2(v138) ^ 0xA8u)) ^ (v142 - 703070309);
  v146 = v129 ^ v145 ^ v138;
  v506 = v129 ^ v145;
  v567 = BYTE1(v146);
  v147 = v95 ^ *(_DWORD *)(v62 - 184);
  LODWORD(v84) = *(_DWORD *)(v85 + 4 * (BYTE1(v146) ^ 0x44u)) ^ *(_DWORD *)(v84 + 4 * (HIBYTE(v146) ^ 0x47)) ^ 0xCAB97C8F;
  LODWORD(v81) = (v84 - ((2 * v84) & 0xAD46FB0C) + 1453555078) ^ *(_DWORD *)(v81 + 4 * (v146 ^ 0xD5u));
  LODWORD(v63) = (v81 - ((2 * v81) & 0xAC2FFF36) - 703070309) ^ *(_DWORD *)(v83 + 4 * (BYTE2(v146) ^ 0xCBu));
  *(_DWORD *)(v62 - 176) = v145;
  HIDWORD(v555) = v145 ^ 0xEA39D864 ^ (v63 - ((2 * v63) & 0xD59DEB9A) + 1791948237);
  v432 = v145 ^ v71;
  v429 = v129 ^ v145 ^ 0x42632BF0;
  LODWORD(v555) = v145 ^ v71 ^ 0x4DA330B4 ^ (HIDWORD(v555) - ((2 * HIDWORD(v555)) & 0xD203FF40) + 1761738656);
  HIDWORD(v554) = v555 ^ v429 ^ 0x4662A266;
  LODWORD(v554) = (HIDWORD(v554) - 2 * (HIDWORD(v554) & 0x7F608BCB ^ (v555 ^ v429) & 8) + 2137033667) ^ v146;
  v148 = (char *)*(&off_1E93A7480 + (v60 ^ 0xD6)) - 12;
  LODWORD(v63) = (((v143 ^ 0x1B9155BD) >> 16)
                + 615523942
                + ((2 * ((v143 ^ 0x1B9155BD) >> 16) + 88) & 0x72 ^ 0xF67F6FFF)) ^ *(_DWORD *)&v148[4
                                                                                                 * (((v143 ^ 0x1B9155BD) >> 16) ^ 0x2D)];
  LODWORD(v84) = ((v144 ^ 0x89) + 615523941 - ((2 * (v144 ^ 0x89) + 160207960) & 0x9809072)) ^ *(_DWORD *)&v148[4 * (v144 ^ 0xA4)];
  v564 = v60;
  v149 = (char *)*(&off_1E93A7480 + (v60 & 0x853EEC8)) - 8;
  LODWORD(v66) = (v63 - ((2 * v63) & 0x7F1C7E72) + 1066286905) ^ *(_DWORD *)&v149[4 * (BYTE1(v143) ^ 0x47)];
  LODWORD(v63) = v84 - ((2 * v84) & 0xAD64A0A8);
  v150 = (char *)*(&off_1E93A7480 + v60 - 12) - 4;
  v151 = (v63 - 692957100) ^ *(_DWORD *)&v150[4 * (v139 ^ 0xCC)];
  v152 = (char *)*(&off_1E93A7480 + (v60 ^ 0xCC)) - 8;
  v153 = *(_DWORD *)&v152[4 * ((v129 ^ v71) ^ 0x53)];
  v425 = BYTE1(v129) ^ BYTE1(v71);
  LODWORD(v85) = *(_DWORD *)&v148[4 * (((v129 ^ v71) >> 16) ^ 0xAA)] ^ *(_DWORD *)&v150[4 * (((v129 ^ v71) >> 24) ^ 0x3E)] ^ ((((v129 ^ v71) >> 16) ^ 0x87) + 615523941 - ((2 * (((v129 ^ v71) >> 16) ^ 0x87) + 160207960) & 0x9809072)) ^ (181304767 * v153 - ((362609534 * v153 - 287982988) & 0xAD64A0A8) - 836948594);
  v154 = *(_DWORD *)&v152[4 * (v71 ^ 0x74)];
  v155 = (181304767 * v154 - ((362609534 * v154 + 1859500660) & 0x7F1C7E72) + 922295411) ^ *(_DWORD *)&v149[4 * (BYTE1(v71) ^ 0x5A)];
  v550 = v155 - ((2 * v155) & 0xAD64A0A8);
  v543 = BYTE3(v71) ^ 0xB2;
  v511 = BYTE2(v71);
  *(_DWORD *)(v62 - 184) = 159420421;
  v565 = (BYTE2(v71) ^ 0x4C)
       + 615523942
       + ((2 * (((BYTE2(v71) ^ 0x4C) + 44) & 0x3B ^ (WORD1(v71) | 0x7FFFFFFD))) ^ 0x9809005);
  v532 = v151 - ((2 * v151) & 0x7F1C7E72);
  v521 = v85 - ((2 * v85) & 0x7F1C7E72);
  HIDWORD(v559) = (v66 - ((2 * v66) & 0xAD64A0A8) - 692957100) ^ *(_DWORD *)&v150[4 * ((v143 ^ 0x1B9155BD) >> 24)] ^ (181304767 * *(_DWORD *)&v152[4 * (v143 ^ 0x7D)] - 143991494);
  v434 = v147;
  v156 = *(_DWORD *)&v148[4 * (((v147 ^ 0xE9B45E6C) >> 16) ^ 0xF5)] ^ ((((v147 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                      + 615523941
                                                                                      - ((2
                                                                                        * (((v147 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                        + 160207960) & 0x9809072));
  LODWORD(v85) = *(_DWORD *)(v62 - 128) ^ 0x31676F78;
  v157 = *(_DWORD *)&v148[4 * (BYTE2(v85) ^ 0x7B)] ^ ((BYTE2(v85) ^ 0x56)
                                                    + 615523942
                                                    + ((2 * (BYTE2(v85) ^ 0x56) + 88) & 0x72 ^ 0xF67F6FFF));
  LODWORD(v85) = (v157 - ((2 * v157) & 0xAD64A0A8) - 692957100) ^ *(_DWORD *)&v150[4 * BYTE3(v85)];
  v158 = *(_DWORD *)&v148[4 * (v500 ^ 0x34)] ^ ((v500 ^ 0x19) + 615523941 - ((2 * (v500 ^ 0x19) + 160207960) & 0x9809072));
  v159 = (v158 - ((2 * v158) & 0x7F1C7E72) + 1066286905) ^ *(_DWORD *)&v149[4 * (v503 ^ 5)];
  v501 = v85 - ((2 * v85) & 0x7F1C7E72);
  v504 = v159 - ((2 * v159) & 0xAD64A0A8);
  LODWORD(v85) = *(_DWORD *)&v152[4 * (*(_DWORD *)(v62 - 152) ^ 0xDF)];
  v160 = *(_DWORD *)(v62 - 152) ^ 0x5A18571F;
  LODWORD(v85) = *(_DWORD *)&v150[4 * HIBYTE(v160)] ^ ((BYTE2(v160) ^ 0xC1)
                                                     + 615523942
                                                     + ((2 * (BYTE2(v160) ^ 0xC1) + 88) & 0x72 ^ 0xF67F6FFF)) ^ *(_DWORD *)&v148[4 * (BYTE2(v160) ^ 0xEC)] ^ (181304767 * v85 - ((362609534 * v85 - 287982988) & 0xAD64A0A8) - 836948594);
  v497 = v85 - ((2 * v85) & 0x7F1C7E72);
  LODWORD(v85) = *(_DWORD *)&v150[4 * ((v147 ^ 0xE9B45E6C) >> 24)] ^ (v156 - ((2 * v156) & 0xAD64A0A8) - 692957100);
  v490 = BYTE1(v147) ^ 0xB4;
  v495 = v85 - ((2 * v85) & 0x7F1C7E72);
  LOWORD(v71) = v476 ^ 0x8EA4;
  v161 = v476 ^ 0x35C48CD5;
  LODWORD(v85) = *(_DWORD *)&v148[4 * (v135 ^ 0xDE)] ^ ((v135 ^ 0xF3)
                                                      + 615523941
                                                      - ((2 * (v135 ^ 0xF3) + 160207960) & 0x9809072));
  v162 = *(_DWORD *)&v148[4 * (((v476 ^ 0x35C48CD5) >> 16) ^ 0xFE)] ^ ((((v476 ^ 0x35C48CD5) >> 16) ^ 0xD3)
                                                                                      + 615523942
                                                                                      + ((2
                                                                                        * (((v476 ^ 0x35C48CD5) >> 16) ^ 0xD3)
                                                                                        + 88) & 0x72 ^ 0xF67F6FFF));
  v163 = v162 - ((2 * v162) & 0xAD64A0A8);
  v164 = *(_DWORD *)&v152[4 * (v129 ^ 0xC5)];
  v165 = 181304767 * v164 - ((362609534 * v164 + 1859500660) & 0x7F1C7E72);
  LODWORD(v85) = (v85 - ((2 * v85) & 0xAD64A0A8) - 692957100) ^ *(_DWORD *)&v150[4 * (v482 ^ 0x36)];
  v166 = *(_DWORD *)&v148[4 * (BYTE2(v426) ^ 0x23)] ^ ((BYTE2(v426) ^ 0xE)
                                                     + 615523942
                                                     + ((2 * (BYTE2(v426) ^ 0xE) + 88) & 0x72 ^ 0xF67F6FFF));
  v167 = (v166 - ((2 * v166) & 0x7F1C7E72) + 1066286905) ^ *(_DWORD *)&v149[4 * (HIBYTE(v460) ^ 0x8B)];
  v477 = v85 - ((2 * v85) & 0x7F1C7E72);
  v483 = v167 - ((2 * v167) & 0xAD64A0A8);
  LODWORD(v85) = *(_DWORD *)(v62 - 132) ^ 0x4A4DC532;
  LODWORD(v85) = *(_DWORD *)&v149[4 * (BYTE1(v85) ^ 0x20)] ^ ((BYTE2(v85) ^ 0xD7)
                                                            + 615523942
                                                            + ((2 * (BYTE2(v85) ^ 0xD7) + 88) & 0x72 ^ 0xF67F6FFF)) ^ *(_DWORD *)&v148[4 * (BYTE2(v85) ^ 0xFA)] ^ (v165 + 922295411);
  v168 = (v163 - 692957100) ^ *(_DWORD *)&v150[4 * HIBYTE(v161)] ^ (181304767
                                                                  * *(_DWORD *)&v152[4 * (v71 ^ 0x99)]
                                                                  - 143991494);
  v448 = BYTE1(v71) ^ 0x14;
  v423 = v460 ^ 0xA3;
  v454 = v168 - ((2 * v168) & 0x7F1C7E72);
  v461 = v85 - ((2 * v85) & 0xAD64A0A8);
  v169 = *(_DWORD *)(v62 - 120);
  v437 = BYTE1(v169) ^ 0xF5;
  v446 = v466 ^ 0x2BEAE26B;
  LODWORD(v85) = *(_DWORD *)&v148[4 * (((v466 ^ 0x2BEAE26Bu) >> 16) ^ 0xEC)] ^ ((((v466 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                               + 615523942
                                                                                               + ((2
                                                                                                 * (((v466 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                                 + 88) & 0x72 ^ 0xF67F6FFF)) ^ (181304767 * *(_DWORD *)&v152[4 * (v466 ^ 0x1E)] - 143991494);
  LODWORD(v85) = (v85 - ((2 * v85) & 0x7F1C7E72) + 1066286905) ^ *(_DWORD *)&v149[4 * (BYTE1(v466) ^ 8)];
  LODWORD(v71) = *(_DWORD *)&v148[4 * (v480 ^ 0x26)] ^ ((v480 ^ 0xB)
                                                      + 615523942
                                                      + ((2 * (v480 ^ 0xB) + 88) & 0x72 ^ 0xF67F6FFF));
  v170 = *(_DWORD *)&v152[4 * (v451 ^ 0x55)];
  v481 = v85 - ((2 * v85) & 0xAD64A0A8);
  v428 = BYTE2(v169);
  v467 = (BYTE2(v169) ^ 0xA7) + 615523942 + ((2 * (BYTE2(v169) ^ 0xA7) + 88) & 0x72 ^ 0xF67F6FFF);
  LODWORD(v85) = (v71 - ((2 * v71) & 0x7F1C7E72) + 1066286905) ^ *(_DWORD *)&v149[4 * (v492 ^ 0xBB)] ^ (181304767 * *(_DWORD *)&v152[4 * (v487 ^ 0x2D)] - 143991494);
  v171 = *(_DWORD *)(v62 - 160);
  v488 = v85 - ((2 * v85) & 0xAD64A0A8);
  v172 = *(_DWORD *)(v62 - 184);
  LODWORD(v85) = (181304767 * v170 - ((362609534 * v170 - 287982988) & 0xAD64A0A8) - 836948594) ^ ((BYTE2(v171) ^ 0xBA)
                                                                                                 + 615523942
                                                                                                 + (v172 ^ (2 * (((BYTE2(v171) ^ 0xBA) + 44) & 0x3B ^ (BYTE2(v171) ^ 0xBA | 0x7FFFFFFD))))) ^ *(_DWORD *)&v150[4 * (HIBYTE(v171) ^ 0x2F)] ^ *(_DWORD *)&v148[4 * (BYTE2(v171) ^ 0x97)];
  v452 = v85 - ((2 * v85) & 0x7F1C7E72);
  LODWORD(v85) = *(_DWORD *)&v148[4 * (BYTE2(v438) ^ 0x94)] ^ ((BYTE2(v438) ^ 0xB9)
                                                             + 615523941
                                                             - ((2 * (BYTE2(v438) ^ 0xB9) + 160207960) & 0x9809072));
  v173 = *(_DWORD *)(v62 - 168);
  LODWORD(v71) = *(_DWORD *)&v148[4 * (BYTE2(v173) ^ 0x56)] ^ ((BYTE2(v173) ^ 0x7B)
                                                             + 615523942
                                                             + (v172 ^ (2
                                                                      * (((BYTE2(v173) ^ 0x7B) + 44) & 0x3B ^ (BYTE2(v173) ^ 0x7B | 0x7FFFFFFD)))));
  v174 = *(_DWORD *)&v152[4 * (v442 ^ 0xFB)];
  LODWORD(v85) = (v85 - ((2 * v85) & 0x7F1C7E72) + 1066286905) ^ *(_DWORD *)&v149[4
                                                                                * (((unsigned __int16)(v438 ^ 0x8D6A) >> 8) ^ 0x63)] ^ (181304767 * *(_DWORD *)&v152[4 * (v438 ^ 0x29)] - 143991494);
  v175 = (181304767 * v174 - ((362609534 * v174 + 1859500660) & 0x7F1C7E72) + 922295411) ^ *(_DWORD *)&v149[4 * (BYTE1(v442) ^ 0xEF)];
  HIDWORD(v433) = v85 - ((2 * v85) & 0xAD64A0A8);
  HIDWORD(v424) = v175 - ((2 * v175) & 0xAD64A0A8);
  LODWORD(v85) = (v71 - ((2 * v71) & 0xAD64A0A8) - 692957100) ^ *(_DWORD *)&v150[4 * (HIBYTE(v173) ^ 0xD9)] ^ (181304767 * *(_DWORD *)&v152[4 * (v173 ^ 0x79)] - 143991494);
  LODWORD(v71) = *(_DWORD *)&v148[4 * (v463 ^ 0x86)] ^ ((v463 ^ 0xAB)
                                                      + 615523942
                                                      + (v172 ^ (2
                                                               * (((v463 ^ 0xAB) + 44) & 0x3B ^ (v463 ^ 0xAB | 0x7FFFFFFD)))));
  LODWORD(v71) = (v71 - ((2 * v71) & 0xAD64A0A8) - 692957100) ^ *(_DWORD *)&v150[4 * v474];
  v421 = v469 ^ 0xEE;
  v418 = v457 ^ 0xD;
  v470 = v71 - ((2 * v71) & 0x7F1C7E72);
  v464 = v85 - ((2 * v85) & 0x7F1C7E72);
  v420 = BYTE2(v442) ^ 0x16;
  v493 = (BYTE2(v442) ^ 0x73) + 615523942 + ((2 * (BYTE2(v442) ^ 0x73) + 88) & 0x72 ^ 0xF67F6FFF);
  LODWORD(v85) = *(_DWORD *)&v148[4 * (BYTE2(v146) ^ 0x8B)] ^ ((BYTE2(v146) ^ 0xA6)
                                                             + 615523941
                                                             - ((2 * (BYTE2(v146) ^ 0xA6) + 160207960) & 0x9809072));
  v475 = (BYTE2(v429) ^ 0xEC) + 615523941 - ((2 * (BYTE2(v429) ^ 0xEC) + 160207960) & 0x9809072);
  v458 = HIBYTE(v442) ^ 0xE8;
  v176 = *(_DWORD *)&v148[4 * (BYTE2(*(_DWORD *)(v62 - 176)) ^ 0xE8)] ^ ((BYTE2(*(_DWORD *)(v62 - 176)) ^ 0xC5)
                                                                                        + 615523941
                                                                                        - ((2
                                                                                          * (BYTE2(*(_DWORD *)(v62 - 176)) ^ 0xC5)
                                                                                          + 160207960) & 0x9809072));
  v431 = v425 ^ 0x8E;
  v177 = (181304767 * *(_DWORD *)&v152[4 * (*(_DWORD *)(v62 - 176) ^ 0xCA)] - 143991494) ^ *(_DWORD *)&v150[4 * (HIBYTE(*(_DWORD *)(v62 - 176)) ^ 0x8E)] ^ (v176 - ((2 * v176) & 0xAD64A0A8) - 692957100);
  v443 = v432 ^ 0x44039AAA;
  v178 = (181304767 * *(_DWORD *)&v152[4 * (v432 ^ 0xDB)] - 143991494) ^ (((v432 ^ 0x44039AAAu) >> 16)
                                                                                         + 615523942
                                                                                         + ((2
                                                                                           * ((v432 ^ 0x44039AAAu) >> 16)
                                                                                           + 88) & 0x72 ^ 0xF67F6FFF)) ^ *(_DWORD *)&v148[4 * (((v432 ^ 0x44039AAAu) >> 16) ^ 0x2D)];
  v436 = v177 - ((2 * v177) & 0x7F1C7E72);
  v179 = (v178 - ((2 * v178) & 0x7F1C7E72) + 1066286905) ^ *(_DWORD *)&v149[4 * (BYTE1(v432) ^ 0xC0)];
  LODWORD(v85) = *(_DWORD *)&v150[4 * (HIBYTE(v146) ^ 0x22)] ^ (181304767
                                                              * *(_DWORD *)&v152[4 * (v146 ^ 0xFE)]
                                                              - 143991494) ^ (v85 - ((2 * v85) & 0xAD64A0A8) - 692957100);
  v444 = v179 - ((2 * v179) & 0xAD64A0A8);
  v472 = v85 + 1066286905 + (~(2 * v85) | 0x80E3818D);
  LODWORD(v85) = *(_DWORD *)&v152[4 * (v517 ^ 0xEC)];
  LODWORD(v71) = *(_DWORD *)&v148[4 * (v544 ^ 0x32)] ^ ((v544 ^ 0x1F)
                                                      + 615523942
                                                      + ((2 * (v544 ^ 0x1F) + 88) & 0x72 ^ 0xF67F6FFF));
  v180 = *(_DWORD *)&v152[4 * (v538 ^ 0xE6)];
  LODWORD(v85) = *(_DWORD *)&v150[4 * (HIBYTE(v517) ^ 0xCA)] ^ ((BYTE2(v517) ^ 0x2F)
                                                              + 615523941
                                                              - ((2 * (BYTE2(v517) ^ 0x2F) + 160207960) & 0x9809072)) ^ *(_DWORD *)&v148[4 * (BYTE2(v517) ^ 2)] ^ (181304767 * v85 - ((362609534 * v85 - 287982988) & 0xAD64A0A8) - 836948594);
  v545 = HIBYTE(v438) ^ 0xD9;
  LODWORD(v71) = (v71 - ((2 * v71) & 0x7F1C7E72) + 1066286905) ^ *(_DWORD *)&v149[4 * (v560 ^ 0x8C)] ^ (181304767 * *(_DWORD *)&v152[4 * (v558 ^ 0xD9)] - 143991494);
  v181 = *(_DWORD *)&v150[4 * ((v538 ^ 0x49A657C7u) >> 24)] ^ ((((v538 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                             + 615523942
                                                             + ((2
                                                               * (((v538 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                               + 88) & 0x72 ^ 0xF67F6FFF)) ^ *(_DWORD *)&v148[4 * (((v538 ^ 0x49A657C7u) >> 16) ^ 0x18)] ^ (181304767 * v180 - ((362609534 * v180 - 287982988) & 0xAD64A0A8) - 836948594);
  v182 = *(_DWORD *)&v148[4 * (((*(_DWORD *)(v62 - 140) ^ 0xBFEA0F26) >> 16) ^ 0x2D)] ^ (((*(_DWORD *)(v62 - 140) ^ 0xBFEA0F26) >> 16) + 615523942 + ((2 * ((*(_DWORD *)(v62 - 140) ^ 0xBFEA0F26) >> 16) + 88) & 0x72 ^ 0xF67F6FFF));
  LODWORD(v559) = (v85 - ((2 * v85) & 0x7F1C7E72) + 1066286905) ^ *(_DWORD *)&v149[4 * (BYTE1(v517) ^ 0x2E)];
  v561 = v71 - ((2 * v71) & 0xAD64A0A8);
  LODWORD(v433) = BYTE1(v538) ^ 0xB9;
  LODWORD(v85) = (v182 - ((2 * v182) & 0xAD64A0A8) - 692957100) ^ *(_DWORD *)&v150[4
                                                                                 * ((*(_DWORD *)(v62 - 140) ^ 0xBFEA0F26) >> 24)] ^ (181304767 * *(_DWORD *)&v152[4 * (*(_DWORD *)(v62 - 140) ^ 0xB6)] - 143991494);
  v539 = v181 - ((2 * v181) & 0x7F1C7E72);
  v439 = v85 - ((2 * v85) & 0x7F1C7E72);
  LODWORD(v66) = *(_DWORD *)&v148[4 * (v518 ^ 0xC1)] ^ ((v518 ^ 0xEC)
                                                      + 615523942
                                                      + (v172 ^ (2
                                                               * (((v518 ^ 0xEC) + 44) & 0x3B ^ (HIWORD(v508) | 0x7FFFFFFD)))));
  LODWORD(v71) = *(_DWORD *)(v62 - 136) ^ 0xC5;
  LODWORD(v85) = (v66 - ((2 * v66) & 0x7F1C7E72) + 1066286905) ^ *(_DWORD *)&v149[4
                                                                                * ((v527 - ((2 * v523) & 0x166) + 179) ^ 0x54)] ^ (181304767 * *(_DWORD *)&v152[4 * (v547 ^ 0xE2)] - 143991494);
  v524 = BYTE1(v540) ^ 0x77;
  LODWORD(v66) = (181304767 * *(_DWORD *)&v152[4 * v71]
                - ((362609534 * *(_DWORD *)&v152[4 * v71] - 287982988) & 0xAD64A0A8)
                - 836948594) ^ *(_DWORD *)&v150[4 * (HIBYTE(v529) ^ 0x93)];
  v548 = v85 - ((2 * v85) & 0xAD64A0A8);
  v519 = v66 - ((2 * v66) & 0x7F1C7E72);
  v528 = v513 ^ 0xEEA2BFA8;
  LODWORD(v66) = *(_DWORD *)&v148[4 * (((v513 ^ 0xEEA2BFA8) >> 16) ^ 0x86)] ^ ((((v513 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                              + 615523942
                                                                                              + ((2
                                                                                                * (((v513 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                                + 88) & 0x72 ^ 0xF67F6FFF));
  LODWORD(v85) = (181304767 * *(_DWORD *)&v152[4 * (v513 ^ 0x68)] - 143991494) ^ *(_DWORD *)&v149[4 * (BYTE1(v513) ^ 0x55)] ^ (v66 - ((2 * v66) & 0x7F1C7E72) + 1066286905);
  v416 = BYTE2(v429) ^ 0xC1;
  v514 = v540 ^ 0x231B9DB5;
  v183 = ((v540 ^ 0x231B9DB5) >> 16);
  *(_DWORD *)(v62 - 184) = (v183 ^ 0xC1) + 615523941 - ((2 * (v183 ^ 0xC1) + 160207960) & 0x9809072);
  v509 = v85 - ((2 * v85) & 0xAD64A0A8);
  v184 = BYTE2(v529);
  LODWORD(v66) = *(_DWORD *)(v62 - 248) ^ 0x5B4A078B;
  *(_DWORD *)(v62 - 248) = *(_DWORD *)&v152[4 * (v534 ^ 0x60)];
  v185 = *(_DWORD *)&v152[4 * (*(_DWORD *)(v62 - 240) ^ 0xFB)];
  v186 = *(_DWORD *)&v152[4 * (*(_DWORD *)(v62 - 128) ^ 0xB8)];
  v535 = v569 ^ 0x7B;
  v187 = *(_DWORD *)&v152[4 * (v434 ^ 0xAC)];
  v188 = *(_DWORD *)&v152[4 * v423];
  v189 = *(_DWORD *)&v152[4 * (v552 ^ 0xF0)];
  v190 = *(_DWORD *)&v152[4 * (*(_DWORD *)(v62 - 120) ^ 0x57)];
  v191 = *(_DWORD *)&v152[4 * v418];
  v192 = v506;
  v193 = *(_DWORD *)&v152[4 * (v506 ^ 0x78)];
  v194 = *(_DWORD *)&v152[4 * (v540 ^ 0x75)];
  LODWORD(v85) = *(_DWORD *)&v152[4 * (v573 ^ 0x74)];
  LODWORD(v71) = *(_DWORD *)&v152[4 * (v571 ^ 0x1B)];
  v195 = *(_DWORD *)&v152[4 * (v577 ^ 0x2A)];
  LODWORD(v63) = *(_DWORD *)&v152[4 * (v66 ^ 0x39)];
  *(_DWORD *)(v62 - 240) = 181304767 * *(_DWORD *)(v62 - 248) - 143991494;
  v574 = 181304767 * v185 - 143991494;
  LODWORD(v435) = 181304767 * v186 - 143991494;
  v570 = 181304767 * v187 - 143991494;
  HIDWORD(v417) = 181304767 * v189 - 143991494;
  LODWORD(v419) = 181304767 * v188 - 143991494;
  *(_DWORD *)(v62 - 248) = 181304767 * v190 - 143991494;
  LODWORD(v430) = 181304767 * v191 - 143991494;
  v541 = 181304767 * v193 - 143991494;
  HIDWORD(v422) = 181304767 * v194 - 143991494;
  LODWORD(v424) = 181304767 * v63 - 143991494;
  LODWORD(v63) = (181304767 * v85 - ((362609534 * v85 - 287982988) & 0xAD64A0A8) - 836948594) ^ *(_DWORD *)&v150[4 * v535];
  LODWORD(v152) = *(_DWORD *)&v148[4 * (BYTE2(v571) ^ 0xCA)] ^ ((BYTE2(v571) ^ 0xE7)
                                                              + 615523942
                                                              + ((2 * (BYTE2(v571) ^ 0xE7) + 88) & 0x72 ^ 0xF67F6FFF)) ^ (181304767 * v71 - 143991494);
  v196 = v571;
  LODWORD(v152) = ((_DWORD)v152 - ((2 * (_DWORD)v152) & 0x7F1C7E72) + 1066286905) ^ *(_DWORD *)&v149[4 * (BYTE1(v571) ^ 0xBD)];
  LODWORD(v85) = *(_DWORD *)&v148[4 * (BYTE2(v66) ^ 0x3C)] ^ ((BYTE2(v66) ^ 0x11)
                                                            + 615523942
                                                            + ((2 * (BYTE2(v66) ^ 0x11) + 88) & 0x72 ^ 0xF67F6FFF));
  v197 = (181304767 * v195 - 143991494) ^ ((BYTE2(v577) ^ 0x37)
                                         + 615523941
                                         - ((2 * (BYTE2(v577) ^ 0x37) + 160207960) & 0x9809072)) ^ *(_DWORD *)&v148[4 * (BYTE2(v577) ^ 0x1A)];
  v530 = *(_DWORD *)&v148[4 * (v511 ^ 0x61)];
  BYTE1(v142) = BYTE1(v577);
  v198 = (v197 - ((2 * v197) & 0xAD64A0A8) - 692957100) ^ *(_DWORD *)&v150[4 * (HIBYTE(v577) ^ 0xF9)];
  v199 = *(_DWORD *)(v62 - 256) ^ 0x1A;
  *(_DWORD *)(v62 - 256) = *(_DWORD *)&v148[4 * (v428 ^ 0x8A)];
  HIDWORD(v419) = *(_DWORD *)&v148[4 * (v420 ^ 0x48)];
  v200 = *(_DWORD *)(v62 - 208);
  v201 = v200 ^ 0x4C64A1B;
  v536 = *(_DWORD *)&v148[4 * v416];
  LODWORD(v417) = *(_DWORD *)&v148[4 * (v183 ^ 0xEC)];
  v512 = *(_DWORD *)&v148[4 * (v184 ^ 0xAC)];
  HIDWORD(v427) = *(_DWORD *)&v148[4 * (v200 ^ 0x1A)];
  v202 = *(_DWORD *)(v62 - 232);
  *(_DWORD *)(v62 - 208) = *(_DWORD *)&v149[4 * (v575 ^ 0xB0)];
  LODWORD(v415) = *(_DWORD *)&v149[4 * v431];
  HIDWORD(v415) = ((v202 >> 15) & 0x58 ^ 0x48)
                + v201
                + 535419962
                + ((2 * ((((v202 >> 15) & 0x58 ^ 0x48) + v201) & 0x3D ^ (HIWORD(v202) | 0x7FFFFFFB))) ^ 0x9809009);
  *(_DWORD *)(v62 - 232) = *(_DWORD *)&v149[4 * (BYTE1(*(_DWORD *)(v62 - 128)) ^ 0x85)];
  HIDWORD(v430) = *(_DWORD *)&v149[4 * (BYTE1(*(_DWORD *)(v62 - 152)) ^ 0xBD)];
  v576 = *(_DWORD *)&v149[4 * v490];
  HIDWORD(v414) = *(_DWORD *)&v149[4 * v199];
  v491 = (_DWORD)v152 - 692957100 + (~(2 * (_DWORD)v152) | 0x529B5F57);
  LODWORD(v414) = *(_DWORD *)&v149[4 * v448];
  v572 = *(_DWORD *)&v149[4 * v437];
  *(_DWORD *)(v62 - 160) = *(_DWORD *)&v149[4 * (BYTE1(*(_DWORD *)(v62 - 160)) ^ 0xD6)];
  v449 = *(_DWORD *)&v149[4 * v421];
  v578 = *(_DWORD *)&v149[4 * (BYTE1(*(_DWORD *)(v62 - 168)) ^ 0xD7)];
  LODWORD(v422) = *(_DWORD *)&v149[4 * (BYTE1(v506) ^ 0x76)];
  v203 = *(_DWORD *)&v149[4 * (BYTE1(*(_DWORD *)(v62 - 176)) ^ 0x16)];
  LODWORD(v413) = *(_DWORD *)&v149[4 * (v567 ^ 0xBE)];
  *(_DWORD *)(v62 - 168) = *(_DWORD *)&v149[4 * v433];
  *(_DWORD *)(v62 - 176) = *(_DWORD *)&v149[4 * (BYTE1(*(_DWORD *)(v62 - 140)) ^ 0x8F)];
  v507 = *(_DWORD *)&v149[4 * v524];
  HIDWORD(v413) = *(_DWORD *)&v149[4 * (BYTE1(*(_DWORD *)(v62 - 136)) ^ 0x1E)];
  *(_DWORD *)(v62 - 200) = *(_DWORD *)&v149[4 * (*(_DWORD *)(v62 - 200) ^ 0x84)];
  HIDWORD(a25) = *(_DWORD *)&v149[4 * (BYTE1(v142) ^ 0x2E)];
  LODWORD(v152) = *(_DWORD *)&v149[4 * (BYTE1(*(_DWORD *)(v62 - 224)) ^ 0xC8)];
  v525 = *(_DWORD *)&v150[4 * v543];
  LODWORD(v149) = v85 - ((2 * v85) & 0x7F1C7E72);
  *(_DWORD *)(v62 - 152) = v532 + 1066286905;
  v533 = v521 + 1066286905;
  *(_DWORD *)(v62 - 192) = *(_DWORD *)&v150[4 * (*(_DWORD *)(v62 - 192) ^ 7)];
  *(_DWORD *)(v62 - 224) = v501 + 1066286905;
  LODWORD(v433) = v497 + 1066286905;
  v568 = v495 + 1066286905;
  v522 = *(_DWORD *)&v150[4 * (HIBYTE(v426) ^ 0x63)];
  HIDWORD(v412) = v477 + 1066286905;
  LODWORD(v412) = v454 + 1066286905;
  LODWORD(v427) = *(_DWORD *)&v150[4 * (HIBYTE(*(_DWORD *)(v62 - 132)) ^ 0x3D)];
  LODWORD(v85) = HIBYTE(v446);
  v447 = *(_DWORD *)&v150[4 * (HIBYTE(*(_DWORD *)(v62 - 120)) ^ 0xB8)];
  *(_DWORD *)(v62 - 120) = *(_DWORD *)&v150[4 * v85];
  v455 = *(_DWORD *)&v150[4 * (v485 ^ 0x4B)];
  v453 = v452 + 1066286905;
  v502 = *(_DWORD *)&v150[4 * v545];
  v496 = *(_DWORD *)&v150[4 * v458];
  v498 = v470 + 1066286905;
  v459 = v464 + 1066286905;
  v204 = *(_DWORD *)&v150[4 * (HIBYTE(v192) ^ 0xA6)];
  v205 = *(_DWORD *)&v150[4 * HIBYTE(v443)];
  v206 = v436 + 1066286905;
  v486 = v539 + 1066286905;
  v478 = v439 + 1066286905;
  HIDWORD(v411) = v519 + 1066286905;
  v471 = v63 - ((2 * v63) & 0x7F1C7E72) + 1066286905;
  v563 = *(_DWORD *)&v150[4 * (v562 ^ 0xAA)];
  v207 = *(_DWORD *)&v150[4 * HIBYTE(v514)];
  HIDWORD(a10) = *(_DWORD *)&v150[4 * (*(_DWORD *)(v62 - 212) ^ 0x38)];
  v515 = *(_DWORD *)&v150[4 * HIBYTE(v528)];
  HIDWORD(v435) = *(_DWORD *)&v150[4 * (HIBYTE(v196) ^ 0x2B)];
  LODWORD(v411) = *(_DWORD *)&v150[4 * BYTE3(v66)];
  v208 = v550 - 692957100;
  v440 = v504 - 692957100;
  *(_DWORD *)(v62 - 212) = v481 - 692957100;
  v465 = v488 - 692957100;
  v209 = v548 - 692957100;
  v210 = (v152 ^ ((_DWORD)v149 + 1066286905))
       - ((2 * (v152 ^ ((_DWORD)v149 + 1066286905))) & 0xAD64A0A8)
       - 692957100;
  v211 = HIDWORD(v559) ^ v559 ^ 0x6285F181;
  v212 = v206 ^ v203 ^ v211;
  v213 = (char *)*(&off_1E93A7480 + (v564 ^ 0xC0)) - 8;
  v214 = (char *)*(&off_1E93A7480 + (v564 ^ 0x62)) - 4;
  v215 = (uint64_t)*(&off_1E93A7480 + (v564 ^ 0x69));
  v216 = (char *)*(&off_1E93A7480 + (v564 ^ 0xCA)) - 4;
  v217 = (v216[*(unsigned __int8 *)(v62 - 105) ^ 0xE4] ^ 0x86) & 0xFF00FFFF | ((v214[*(unsigned __int8 *)(v62 - 108) ^ 0x3ELL] ^ (*(unsigned __int8 *)(v62 - 108) - 2 * (*(_BYTE *)(v62 - 108) & 0x3F) + 63) ^ 0xFFFFFFE1) << 24) | (((v213[*(unsigned __int8 *)(v62 - 107) ^ 0x27] + 52) ^ 0x96) << 16);
  LODWORD(v63) = ((v214[*(unsigned __int8 *)(v62 - 104) ^ 0xD3] ^ (*(unsigned __int8 *)(v62 - 104)
                                                                                    - 2 * (*(_BYTE *)(v62 - 104) & 0x3F)
                                                                                    + 63) ^ 0xE0) << 24) | ((*(unsigned __int8 *)(v215 + (*(unsigned __int8 *)(v62 - 102) ^ 0xBELL)) ^ 0x81) << 8);
  v218 = (v216[*(unsigned __int8 *)(v62 - 109) ^ 0x41] ^ 0xB0) & 0xFF00FFFF | (((v213[*(unsigned __int8 *)(v62 - 111) ^ 0x40] + 52) ^ 0x5A) << 16) | ((*(unsigned __int8 *)(v215 + (*(unsigned __int8 *)(v62 - 110) ^ 0xBBLL)) ^ 0x23) << 8) | ((v214[*(unsigned __int8 *)(v62 - 112) ^ 0x1ELL] ^ (*(unsigned __int8 *)(v62 - 112) - 2 * (*(_BYTE *)(v62 - 112) & 0x3F) + 63) ^ 0x84) << 24);
  v549 = v215;
  v551 = v214;
  v219 = v216[*(unsigned __int8 *)(v62 - 97) ^ 0x74] ^ 0x17 | (((v213[*(unsigned __int8 *)(v62 - 99) ^ 0xF3] ^ 2)
                                                                                                  + 52) << 16) | ((*(unsigned __int8 *)(v215 + (*(unsigned __int8 *)(v62 - 98) ^ 0x20)) ^ 0xC9) << 8) | ((v214[*(unsigned __int8 *)(v62 - 100) ^ 0xF3] ^ (*(unsigned __int8 *)(v62 - 100) + (~(2 * *(_BYTE *)(v62 - 100)) | 0xFFFFFF81) + 64) ^ 0x85) << 24);
  v546 = v216;
  v553 = v213;
  v220 = v217 | ((*(unsigned __int8 *)(v215 + (*(unsigned __int8 *)(v62 - 106) ^ 9)) ^ 0x26) << 8);
  v221 = (v216[*(unsigned __int8 *)(v62 - 101) ^ 0xF2] ^ 0x3F | v63) & 0xFF00FFFF | (((v213[*(unsigned __int8 *)(v62 - 103) ^ 0xE9] + 52) ^ 0x8A) << 16);
  v222 = v212 ^ 0x2497E332;
  if ((v212 & 0x80) != 0)
    v223 = -128;
  else
    v223 = 128;
  *(_DWORD *)(v62 - 128) = v219 ^ 0xE86E3EA3;
  *(_DWORD *)(v62 - 132) = v218 ^ 0x323D553A;
  *(_DWORD *)(v62 - 136) = v220 ^ 0xFAF40D45;
  *(_DWORD *)(v62 - 140) = v221 ^ 0x7F1C00EC;
  HIDWORD(v542) = (v472 + 1) ^ v413;
  LODWORD(v542) = v204 ^ v475 ^ v422 ^ v536 ^ v541;
  HIDWORD(v537) = (v444 - 692957100) ^ v205;
  LODWORD(v537) = v533 ^ v415;
  HIDWORD(v531) = v525 ^ v530 ^ v565 ^ v208;
  LODWORD(v531) = v412 ^ v414;
  HIDWORD(v526) = HIDWORD(v412) ^ HIDWORD(v414) ^ HIDWORD(v417);
  LODWORD(v526) = (v483 - 692957100) ^ v522 ^ v419;
  HIDWORD(v520) = (v461 - 692957100) ^ v427;
  LODWORD(v520) = v507 ^ *(_DWORD *)(v62 - 184) ^ v207 ^ v417 ^ HIDWORD(v422);
  HIDWORD(v516) = HIDWORD(v413) ^ ((v184 ^ 0x81) + 615523941 - ((2 * (v184 ^ 0x81) + 160207960) & 0x9809072)) ^ v512 ^ HIDWORD(v411);
  LODWORD(v516) = (v509 - 692957100) ^ v515;
  HIDWORD(v510) = v209 ^ HIDWORD(a10);
  LODWORD(v510) = v459 ^ v578;
  HIDWORD(v505) = v496 ^ v493 ^ HIDWORD(v419) ^ (HIDWORD(v424) - 692957100);
  LODWORD(v505) = (HIDWORD(v433) - 692957100) ^ v502;
  HIDWORD(v499) = v430 ^ v449 ^ v498;
  LODWORD(v499) = v424 ^ v411 ^ v210;
  HIDWORD(v494) = (v198 - ((2 * v198) & 0x7F1C7E72) + 1066286905) ^ HIDWORD(a25);
  LODWORD(v494) = (v491 + 1) ^ HIDWORD(v435);
  HIDWORD(v489) = *(_DWORD *)(v62 - 200) ^ HIDWORD(v415) ^ HIDWORD(v427) ^ v471;
  LODWORD(v489) = (v561 - 692957100) ^ v563;
  HIDWORD(v484) = *(_DWORD *)(v62 - 168) ^ v486;
  LODWORD(v484) = v478 ^ *(_DWORD *)(v62 - 176);
  HIDWORD(v479) = v433 ^ HIDWORD(v430);
  LODWORD(v479) = *(_DWORD *)(v62 - 224) ^ *(_DWORD *)(v62 - 232) ^ v435;
  HIDWORD(v473) = v570 ^ v576 ^ v568;
  LODWORD(v473) = v574 ^ *(_DWORD *)(v62 - 192) ^ v440;
  HIDWORD(v468) = v453 ^ *(_DWORD *)(v62 - 160);
  LODWORD(v468) = v572 ^ v467 ^ v447 ^ *(_DWORD *)(v62 - 256) ^ *(_DWORD *)(v62 - 248);
  HIDWORD(v462) = v465 ^ v455;
  LODWORD(v462) = *(_DWORD *)(v62 - 212) ^ *(_DWORD *)(v62 - 120);
  HIDWORD(v456) = (v223 + v222) ^ v211;
  LODWORD(v456) = *(_DWORD *)(v62 - 152) ^ *(_DWORD *)(v62 - 208) ^ *(_DWORD *)(v62 - 240);
  HIDWORD(v450) = (v564 + 825) ^ 0x383;
  LODWORD(v450) = (v564 + 825) ^ 0x324;
  HIDWORD(v445) = (v564 + 825) ^ 0x3F5;
  LODWORD(v445) = (v564 + 825) & 0xA06B40BE;
  HIDWORD(v441) = (v564 + 825) ^ 0x3E5;
  LODWORD(v441) = (v564 + 825) ^ 0x36D;
  *(_DWORD *)(v62 - 120) = v564 + 825;
  HIDWORD(a25) = (v564 + 825) ^ 0x3B7;
  *(_QWORD *)(v62 - 176) = 13;
  v224 = *(_DWORD *)(v62 - 120);
  v225 = v213[a55[13] ^ 0xF3];
  *(_QWORD *)(v62 - 152) = 1;
  v226 = a55[1] ^ 0x57;
  *(_QWORD *)(v62 - 160) = 10;
  v227 = a55[10] ^ 0xB6;
  v228 = ((v213[v226] + 52) ^ 0xF6) << 16;
  *(_QWORD *)(v62 - 192) = 4;
  LODWORD(v227) = (*(unsigned __int8 *)(v549 + v227) ^ 0xAC) << 8;
  v229 = a55[4];
  v230 = v551[v229 ^ 0x9A];
  *(_QWORD *)(v62 - 232) = 7;
  LODWORD(v229) = v230 ^ (v229 - 2 * (v229 & 0x3F) + 63) ^ 0xFFFFFFCF;
  v231 = a55[7] ^ 0xD6;
  *(_QWORD *)(v62 - 224) = 2;
  LODWORD(v229) = v546[v231] ^ 0xD5 | ((_DWORD)v229 << 24);
  LODWORD(v231) = *(unsigned __int8 *)(v549 + a55[2]);
  *(_QWORD *)(v62 - 184) = 3;
  v232 = v228 | ((v231 ^ 0xBE) << 8);
  LODWORD(v231) = v546[a55[3] ^ 0x74];
  *(_QWORD *)(v62 - 168) = 12;
  v233 = v232 | v231 ^ 0x17;
  LODWORD(v231) = v551[a55[12] ^ 0x6ELL] ^ (a55[12] + (~(2 * a55[12]) | 0xFFFFFF81) + 64) ^ 0x51;
  *(_QWORD *)(v62 - 208) = 0;
  v234 = v233 | ((v551[*a55 ^ 0x15] ^ (*a55 - 2 * (*a55 & 0x3F) + 63) ^ 0xAE) << 24);
  LODWORD(v227) = v227 | ((v551[a55[8] ^ 0x46] ^ (a55[8] - 2 * (a55[8] & 0x3F) + 63) ^ 0xFFFFFFE7) << 24);
  *(_QWORD *)(v62 - 200) = 14;
  v235 = *(unsigned __int8 *)(v549 + (a55[14] ^ 0xD5)) ^ 0x36;
  *(_QWORD *)(v62 - 240) = 5;
  v236 = ((((v224 + 59) ^ 0x31 ^ v225) + 52) << 16) | ((_DWORD)v231 << 24) | (v235 << 8);
  v237 = a55[5];
  *(_QWORD *)(v62 - 256) = 11;
  LODWORD(v229) = v229 & 0xFF00FFFF | (((v553[v237 ^ 0x9D] + 52) ^ 0xF7) << 16);
  v238 = v546[a55[11] ^ 0xC2] ^ 0x32 | v227;
  *(_DWORD *)(v62 - 212) = 94890207;
  v239 = a55[6] ^ 0xA4;
  v240 = v238 & 0xFF00FFFF | (((v553[a55[9] ^ 0x3ELL] + 52) ^ 0xDF) << 16);
  *(_QWORD *)(v62 - 248) = 15;
  v241 = v546[a55[15] ^ 0x47] ^ 0x17 | v236;
  v566 = v229 | ((*(unsigned __int8 *)(v549 + v239) ^ 0x66) << 8);
  v242 = (char *)*(&off_1E93A7480 + v224 - 861) - 4;
  v243 = *(_DWORD *)&v242[4 * (((unsigned __int16)(v566 ^ v555) >> 8) ^ 0x21)] ^ ((((unsigned __int16)(v566 ^ v555) >> 8) ^ 0x4C)
                                                                                                 - 1340798920
                                                                                                 - ((2 * (((v566 ^ v555) >> 8) ^ 0xB71C4C)) & 0x70));
  v244 = (uint64_t)*(&off_1E93A7480 + SHIDWORD(v450));
  LODWORD(v237) = v234 ^ HIDWORD(v555) ^ 0x730032AA;
  v245 = (v243 - 387806001 - ((2 * v243) & 0xD1C5199E)) ^ *(_DWORD *)(v244
                                                                    + 4
                                                                    * ((v234 ^ BYTE4(v555)) ^ 0xAAu));
  LODWORD(v229) = *(_DWORD *)&v242[4 * (((unsigned __int16)(v554 ^ v241) >> 8) ^ 0x87)] ^ ((((unsigned __int16)(v554 ^ v241) >> 8) ^ 0xEA) - 1340798920 - ((2 * (((v554 ^ v241) >> 8) ^ 0x2990EA)) & 0x70));
  v246 = v229 - 516091572 - ((2 * v229) & 0xC27A2298);
  v247 = v240 ^ HIDWORD(v554);
  v248 = (uint64_t)*(&off_1E93A7480 + (int)v450);
  v249 = *(_DWORD *)(v248 + 4 * (((v240 ^ HIDWORD(v554)) >> 16) ^ 0x68u));
  HIDWORD(v251) = v249 ^ 0xA5A;
  LODWORD(v251) = v249 ^ 0xA9EBC000;
  v250 = v251 >> 12;
  v252 = *(_DWORD *)(v248 + 4 * ((v234 ^ HIDWORD(v555)) >> 16));
  HIDWORD(v251) = v252 ^ 0xA5A;
  LODWORD(v251) = v252 ^ 0xA9EBC000;
  v253 = (char *)*(&off_1E93A7480 + v224 - 940) - 4;
  v254 = v246 ^ *(_DWORD *)&v253[4 * (((v566 ^ v555) >> 24) ^ 0xB7)] ^ (v251 >> 12);
  v255 = *(_DWORD *)(v248 + 4 * (((v554 ^ v241) >> 16) ^ 0x90u));
  HIDWORD(v251) = v255 ^ 0xA5A;
  LODWORD(v251) = v255 ^ 0xA9EBC000;
  v256 = *(_DWORD *)(v244 + 4 * ((v566 ^ v555) ^ 0xFBu)) ^ BYTE1(v247) ^ *(_DWORD *)&v242[4 * (BYTE1(v247) ^ 0x23)] ^ 0x58F784B9 ^ (v251 >> 12);
  LODWORD(v239) = *(_DWORD *)(v248 + 4 * (((v566 ^ v555) >> 16) ^ 0x1Cu));
  HIDWORD(v251) = v239 ^ 0xA5A;
  LODWORD(v251) = v239 ^ 0xA9EBC000;
  LODWORD(v239) = *(_DWORD *)&v253[4 * (HIBYTE(v247) ^ 0xF6)] ^ (BYTE1(v237)
                                                               - 1340798920
                                                               - ((v237 >> 7) & 0x70)) ^ *(_DWORD *)&v242[4 * (BYTE1(v237) ^ 0x6D)] ^ ((v251 >> 12) - 516091572 - ((2 * (v251 >> 12)) & 0xC27A2298));
  v257 = v254 - 387806001 - ((2 * v254) & 0xD1C5199E);
  v258 = HIDWORD(v542) ^ *(_DWORD *)&v253[4 * (((v554 ^ v241) >> 24) ^ 0x29)] ^ v250 ^ (v245 - 516091572 - ((2 * v245) & 0xC27A2298));
  v259 = v542 ^ *(_DWORD *)(v244 + 4 * ((v554 ^ v241) ^ 0x8Cu)) ^ (v239
                                                                                    - 387806001
                                                                                    - ((2 * v239) & 0xD1C5199E));
  LODWORD(v239) = HIDWORD(v537) ^ *(_DWORD *)(v244 + 4 * (v247 ^ 0x5Fu)) ^ v257;
  v260 = HIDWORD(v456) ^ *(_DWORD *)&v253[4 * BYTE3(v237)] ^ (v256 - 516091572 - ((2 * v256) & 0xC27A2298));
  LODWORD(v237) = v258 ^ 0xF9388C2F;
  v261 = *(_DWORD *)(v248 + 4 * ((v258 ^ 0xF9388C2F) >> 16));
  HIDWORD(v251) = v261 ^ 0xA5A;
  LODWORD(v251) = v261 ^ 0xA9EBC000;
  v262 = v251 >> 12;
  v263 = *(_DWORD *)(v248 + 4 * (BYTE2(v259) ^ 0x44u));
  HIDWORD(v251) = v263 ^ 0xA5A;
  LODWORD(v251) = v263 ^ 0xA9EBC000;
  v264 = v251 >> 12;
  v265 = *(_DWORD *)(v248 + 4 * (BYTE2(v239) ^ 0x66u));
  HIDWORD(v251) = v265 ^ 0xA5A;
  LODWORD(v251) = v265 ^ 0xA9EBC000;
  v266 = (v251 >> 12) ^ *(_DWORD *)&v242[4 * (BYTE1(v260) ^ 5)] ^ ((BYTE1(v260) ^ 0x68)
                                                                 - 1340798920
                                                                 - 2
                                                                 * (((v260 >> 8) ^ 0x42BD68) & 0x39 ^ (v260 >> 8) & 1));
  v267 = (v262 - 387806001 - ((2 * v262) & 0xD1C5199E)) ^ *(_DWORD *)(v244 + 4 * (v239 ^ 0xB6u));
  v268 = (v266 - 387806001 - ((2 * v266) & 0xD1C5199E)) ^ *(_DWORD *)(v244 + 4 * (v258 ^ 0x61u));
  v269 = (BYTE1(v237) - 1340798920 - ((v237 >> 7) & 0x70)) ^ 0xD678EAEF ^ *(_DWORD *)&v242[4 * (BYTE1(v237) ^ 0x6D)];
  v270 = *(_DWORD *)&v253[4 * (BYTE3(v239) ^ 0x43)] ^ 0x43274AF2;
  v271 = v269 + v270 - 2 * (v269 & v270);
  v272 = *(_DWORD *)(v248 + 4 * (BYTE2(v260) ^ 0xBDu));
  HIDWORD(v251) = v272 ^ 0xA5A;
  LODWORD(v251) = v272 ^ 0xA9EBC000;
  LODWORD(v237) = *(_DWORD *)&v253[4 * BYTE3(v237)] ^ (v264 - 516091572 - ((2 * v264) & 0xC27A2298));
  LODWORD(v237) = (v237 - 387806001 - ((2 * v237) & 0xD1C5199E)) ^ *(_DWORD *)(v244
                                                                             + 4 * (v260 ^ 0xABu));
  v273 = *(_DWORD *)&v253[4 * (HIBYTE(v260) ^ 0x42)] ^ HIDWORD(v559) ^ *(_DWORD *)&v242[4 * (BYTE1(v259) ^ 0x99)] ^ ((BYTE1(v259) ^ 0xF4) - 1340798920 - 2 * (((v259 >> 8) ^ 0x3C44F4) & 0x39 ^ (v259 >> 8) & 1)) ^ (v267 - 516091572 - ((2 * v267) & 0xC27A2298));
  v274 = v456 ^ *(_DWORD *)&v242[4 * (BYTE1(v239) ^ 0x39)] ^ (v237 - 1340798920 - ((2 * v237) & 0x602A1070));
  v275 = v537 ^ *(_DWORD *)&v253[4 * (HIBYTE(v259) ^ 0x3C)] ^ (v268 - 516091572 - ((2 * v268) & 0xC27A2298));
  LODWORD(v237) = HIDWORD(v531) ^ *(_DWORD *)(v244 + 4 * (v259 ^ 5u)) ^ ((v271 ^ (v251 >> 12))
                                                                                          - 387806001
                                                                                          - ((2 * (v271 ^ (v251 >> 12))) & 0xD1C5199E));
  v276 = *(_DWORD *)(v248 + 4 * (BYTE2(v237) ^ 0x79u));
  HIDWORD(v251) = v276 ^ 0xA5A;
  LODWORD(v251) = v276 ^ 0xA9EBC000;
  BYTE1(v260) = BYTE1(v275) ^ 0x68;
  v277 = ((v251 >> 12) - 516091572 - ((2 * (v251 >> 12)) & 0xC27A2298)) ^ *(_DWORD *)&v253[4
                                                                                         * ((v275 ^ 0x2261685Eu) >> 24)];
  v278 = ((BYTE1(v237) ^ 0xD0)
        - 1340798920
        - 2 * (((v237 >> 8) ^ 0x679D0) & 0x3D ^ (v237 >> 8) & 5)) ^ *(_DWORD *)&v242[4 * (BYTE1(v237) ^ 0xBD)];
  v279 = (v278 - 387806001 - ((2 * v278) & 0xD1C5199E)) ^ *(_DWORD *)(v244 + 4 * (v273 ^ 0x76u));
  v280 = ((BYTE1(v274) ^ 0xEC) - 1340798920 - ((2 * ((v274 >> 8) ^ 0xE5FEC)) & 0x70)) ^ *(_DWORD *)&v242[4 * (BYTE1(v274) ^ 0x81)];
  v281 = *(_DWORD *)(v248 + 4 * (BYTE2(v274) ^ 0x5Fu));
  HIDWORD(v251) = v281 ^ 0xA5A;
  LODWORD(v251) = v281 ^ 0xA9EBC000;
  v282 = v251 >> 12;
  HIDWORD(v251) = *(_DWORD *)(v244 + 4 * (v275 ^ 0x5Eu)) ^ 0x1F5AB47;
  LODWORD(v251) = HIDWORD(v251);
  v283 = (v251 >> 28) ^ __ROR4__(*(_DWORD *)&v253[4 * (BYTE3(v237) ^ 6)] ^ 0x7462B151 ^ (v280- 516091572- ((2 * v280) & 0xC27A2298)), 28);
  v284 = (v282 - 516091572 - ((2 * v282) & 0xC27A2298)) ^ *(_DWORD *)&v253[4 * (HIBYTE(v273) ^ 0xD2)];
  LODWORD(v237) = (v284 - 387806001 - ((2 * v284) & 0xD1C5199E)) ^ *(_DWORD *)(v244
                                                                             + 4 * (v237 ^ 0x4Cu));
  v285 = *(_DWORD *)(v248 + 4 * (BYTE2(v275) ^ 0x1Bu));
  HIDWORD(v251) = v285 ^ 0xA5A;
  LODWORD(v251) = v285 ^ 0xA9EBC000;
  v286 = v251 >> 12;
  v287 = v237 - 1340798920 - ((2 * v237) & 0x602A1070);
  LODWORD(v237) = *(_DWORD *)(v248 + 4 * (BYTE2(v273) ^ 0xCCu));
  HIDWORD(v251) = v237 ^ 0xA5A;
  LODWORD(v251) = v237 ^ 0xA9EBC000;
  v288 = v412 ^ v414 ^ (v251 >> 12) ^ __ROR4__(v283 ^ 0x78071371, 4);
  LODWORD(v237) = HIDWORD(v526) ^ *(_DWORD *)&v253[4 * (HIBYTE(v274) ^ 0xE)] ^ v286 ^ (v279
                                                                                     - 516091572
                                                                                     - ((2 * v279) & 0xC27A2298));
  v289 = BYTE1(v260);
  v290 = v526 ^ *(_DWORD *)&v242[4 * (BYTE1(v260) ^ 0x6D)] ^ v287;
  v291 = HIDWORD(v520) ^ ((BYTE1(v273) ^ 0xC0) - 1340798920 - ((v273 >> 7) & 0x70)) ^ *(_DWORD *)(v244
                                                                                                + 4
                                                                                                * ((v274 ^ BYTE1(v239) ^ 0x54) ^ 0xCAu)) ^ *(_DWORD *)&v242[4 * (BYTE1(v273) ^ 0xAD)];
  v292 = v289 ^ 0x4552953C ^ v290;
  LODWORD(v239) = *(_DWORD *)(v248 + 4 * BYTE2(v292));
  HIDWORD(v251) = v239 ^ 0xA5A;
  LODWORD(v251) = v239 ^ 0xA9EBC000;
  v293 = v251 >> 12;
  BYTE1(v239) = BYTE1(v288) ^ 0xE7;
  v294 = *(_DWORD *)(v248 + 4 * ((v288 ^ 0x99FEE750) >> 16));
  HIDWORD(v251) = v294 ^ 0xA5A;
  LODWORD(v251) = v294 ^ 0xA9EBC000;
  v295 = v291 ^ (v277 - 387806001 - ((2 * v277) & 0xD1C5199E));
  v296 = BYTE1(v237) ^ 0x29;
  v297 = v296 - 1340798920 - ((2 * ((v237 >> 8) ^ 0xA73B29)) & 0x70);
  v298 = (BYTE1(v292) - 1340798920 - ((v292 >> 7) & 0x70)) ^ *(_DWORD *)(v244 + 4 * (v237 ^ 0x72u)) ^ *(_DWORD *)&v242[4 * (BYTE1(v292) ^ 0x6D)] ^ ((v251 >> 12) - 387806001 - ((2 * (v251 >> 12)) & 0xD1C5199E));
  v299 = *(_DWORD *)(v248 + 4 * (BYTE2(v295) ^ 2u));
  HIDWORD(v251) = v299 ^ 0xA5A;
  LODWORD(v251) = v299 ^ 0xA9EBC000;
  v300 = *(_DWORD *)&v253[4 * (BYTE3(v237) ^ 0xA7)] ^ (v251 >> 12);
  LODWORD(v237) = *(_DWORD *)(v248 + 4 * (BYTE2(v237) ^ 0x3Bu));
  HIDWORD(v251) = v237 ^ 0xA5A;
  LODWORD(v251) = v237 ^ 0xA9EBC000;
  v301 = v300 ^ *(_DWORD *)(v244 + 4 * v292);
  v302 = v520 ^ ((BYTE1(v295) ^ 0xD9) - 1340798920 - ((2 * ((v295 >> 8) ^ 0x9802D9)) & 0x70)) ^ *(_DWORD *)(v244 + 4 * (v288 ^ 0x1Eu)) ^ *(_DWORD *)&v242[4 * (BYTE1(v295) ^ 0xB4)] ^ (v251 >> 12) ^ *(_DWORD *)&v253[4 * (HIBYTE(v290) ^ 0x61)];
  v303 = HIDWORD(v516) ^ *(_DWORD *)&v253[4 * (HIBYTE(v295) ^ 0x98)] ^ (v298 - 516091572 - ((2 * v298) & 0xC27A2298));
  v304 = v516 ^ *(_DWORD *)(v244 + 4 * (v295 ^ 0x3Du)) ^ v297 ^ *(_DWORD *)&v253[4 * ((v288 ^ 0x99FEE750) >> 24)] ^ *(_DWORD *)&v242[4 * (v296 ^ 0x6D)];
  v305 = *(_DWORD *)(v248 + 4 * (BYTE2(v302) ^ 5u));
  v306 = v304 ^ v293;
  HIDWORD(v251) = v305 ^ 0xA5A;
  LODWORD(v251) = v305 ^ 0xA9EBC000;
  v307 = v251 >> 12;
  LODWORD(v237) = *(_DWORD *)(v248 + 4 * (BYTE2(v306) ^ 0x37u));
  HIDWORD(v251) = v237 ^ 0xA5A;
  LODWORD(v251) = v237 ^ 0xA9EBC000;
  v308 = HIDWORD(v510) ^ *(_DWORD *)&v242[4 * (BYTE1(v239) ^ 0x6D)] ^ ((v301 ^ 0x9DF9D83)
                                                                     - 1340798920
                                                                     - 2 * ((v301 ^ 0x9DF9D83) & 0x3015083C ^ v301 & 4));
  LOBYTE(v293) = v302 ^ 0x4E;
  v309 = *(_DWORD *)(v244
                   + 4
                   * ((BYTE4(v510) ^ v242[4 * (BYTE1(v239) ^ 0x6D)] ^ ((v301 ^ 0x83)
                                                                                      + 56
                                                                                      - 2
                                                                                      * ((v301 ^ 0x83) & 0x3C ^ v301 & 4)) ^ BYTE1(v239)) ^ 0x41u)) ^ (((unsigned __int16)(v302 ^ 0x6A4E) >> 8) - 1340798920 - (((v302 ^ 0x767F6A4Eu) >> 7) & 0x70)) ^ *(_DWORD *)&v242[4 * (((unsigned __int16)(v302 ^ 0x6A4E) >> 8) ^ 0x6D)] ^ ((v251 >> 12) - 387806001 - ((2 * (v251 >> 12)) & 0xD1C5199E));
  v310 = v309 - 516091572 - ((2 * v309) & 0xC27A2298);
  v311 = *(_DWORD *)(v248 + 4 * (BYTE2(v308) ^ 0x81u));
  HIDWORD(v251) = v311 ^ 0xA5A;
  LODWORD(v251) = v311 ^ 0xA9EBC000;
  v312 = ((v251 >> 12) - 516091572 - ((2 * (v251 >> 12)) & 0xC27A2298)) ^ *(_DWORD *)&v253[4
                                                                                         * ((v302 ^ 0x767F6A4Eu) >> 24)];
  v313 = (v312 - 387806001 - ((2 * v312) & 0xD1C5199E)) ^ *(_DWORD *)(v244 + 4 * (v306 ^ 0x86u));
  LODWORD(v239) = *(_DWORD *)(v248 + 4 * (BYTE2(v303) ^ 0xC6u));
  v314 = *(_DWORD *)(v244 + 4 * (v303 ^ 0xFCu)) ^ (v307 - 387806001 - ((2 * v307) & 0xD1C5199E)) ^ *(_DWORD *)&v242[4 * (BYTE1(v308) ^ 0xCD)] ^ ((BYTE1(v308) ^ 0xA0) - 1340798920 - 2 * (((v308 >> 8) ^ 0x6881A0) & 0x3B ^ (v308 >> 8) & 3));
  LODWORD(v251) = __ROR4__((v239 >> 12) ^ 0x267439E, 17) ^ 0xEE910136;
  HIDWORD(v251) = v251;
  v315 = (v251 >> 15) + ((_DWORD)v239 << 20);
  LODWORD(v239) = v510 ^ *(_DWORD *)&v242[4 * (BYTE1(v303) ^ 0x75)] ^ (v313 - 1340798920 - ((2 * v313) & 0x602A1070));
  v316 = HIDWORD(v505) ^ *(_DWORD *)&v253[4 * (HIBYTE(v306) ^ 0xDC)] ^ (v314 - 516091572 - ((2 * v314) & 0xC27A2298));
  v317 = *(_DWORD *)(v244 + 4 * v293);
  v318 = v505 ^ *(_DWORD *)&v253[4 * (HIBYTE(v303) ^ 0x5A)] ^ v310;
  v319 = HIDWORD(v499) ^ ((BYTE1(v306) ^ 0x62) - 1340798920 - ((2 * ((v306 >> 8) ^ 0xDC3762)) & 0x70)) ^ v317 ^ *(_DWORD *)&v242[4 * (BYTE1(v306) ^ 0xF)] ^ *(_DWORD *)&v253[4 * (HIBYTE(v308) ^ 0x68)] ^ v315;
  v320 = ((((unsigned __int16)(v510 ^ *(_WORD *)&v242[4 * (BYTE1(v303) ^ 0x75)] ^ (v313
                                                                                                  + 2104
                                                                                                  - ((2 * v313) & 0x1070))) >> 8) ^ 0x9D)
        - 1340798920
        - ((2 * ((v239 >> 8) ^ 0xC2489D)) & 0x70)) ^ *(_DWORD *)&v242[4
                                                                                  * (((unsigned __int16)(v510 ^ *(_WORD *)&v242[4 * (BYTE1(v303) ^ 0x75)] ^ (v313 + 2104 - ((2 * v313) & 0x1070))) >> 8) ^ 0xF0)];
  v321 = *(_DWORD *)(v248 + 4 * (BYTE2(v316) ^ 0x8Fu));
  v322 = *(_DWORD *)(v244 + 4 * (v319 ^ 9u)) ^ (v321 << 20) ^ (v321 >> 12) ^ 0xA5AA9EBC ^ (v320 - 387806001 - ((2 * v320) & 0xD1C5199E));
  LODWORD(v237) = v318 ^ 0xCFB8D782;
  v323 = *(_DWORD *)(v248 + 4 * ((v318 ^ 0xCFB8D782) >> 16));
  HIDWORD(v251) = v323 ^ 0xA5A;
  LODWORD(v251) = v323 ^ 0xA9EBC000;
  v324 = ((v251 >> 12) - 387806001 - ((2 * (v251 >> 12)) & 0xD1C5199E)) ^ *(_DWORD *)(v244
                                                                                    + 4
                                                                                    * ((v239 ^ BYTE1(v303)) ^ 0x3Fu));
  v325 = v324 - 516091572 - ((2 * v324) & 0xC27A2298);
  v326 = *(_DWORD *)(v248 + 4 * (BYTE2(v239) ^ 0x48u));
  HIDWORD(v251) = v326 ^ 0xA5A;
  LODWORD(v251) = v326 ^ 0xA9EBC000;
  v327 = ((BYTE1(v319) ^ 0xFD) - 1340798920 - 2 * (((v319 >> 8) ^ 0x8AF4FD) & 0x3A ^ (v319 >> 8) & 2)) ^ *(_DWORD *)(v244 + 4 * (v318 ^ 0xCCu)) ^ *(_DWORD *)&v242[4 * (BYTE1(v319) ^ 0x90)] ^ ((v251 >> 12) - 387806001 - ((2 * (v251 >> 12)) & 0xD1C5199E));
  v328 = *(_DWORD *)(v248 + 4 * (BYTE2(v319) ^ 0xF4u));
  HIDWORD(v251) = v328 ^ 0xA5A;
  LODWORD(v251) = v328 ^ 0xA9EBC000;
  LODWORD(v239) = v499 ^ (((unsigned __int16)(v318 ^ 0xD782) >> 8)
                        - 1340798920
                        - (((v318 ^ 0xCFB8D782) >> 7) & 0x70)) ^ *(_DWORD *)(v244 + 4
                                                                                  * (v316 ^ 0x50u)) ^ *(_DWORD *)&v242[4 * (((unsigned __int16)(v318 ^ 0xD782) >> 8) ^ 0x6D)] ^ (v251 >> 12) ^ *(_DWORD *)&v253[4 * (BYTE3(v239) ^ 0xC2)];
  v329 = HIDWORD(v494) ^ *(_DWORD *)&v253[4 * (HIBYTE(v316) ^ 0xC7)] ^ (v327 - 516091572 - ((2 * v327) & 0xC27A2298));
  v330 = v494 ^ *(_DWORD *)&v253[4 * BYTE3(v237)] ^ (v322 - 516091572 - ((2 * v322) & 0xC27A2298));
  v331 = *(_DWORD *)(v248 + 4 * (BYTE2(v329) ^ 0xE6u));
  HIDWORD(v251) = v331 ^ 0xA5A;
  LODWORD(v251) = v331 ^ 0xA9EBC000;
  v332 = v251 >> 12;
  v333 = HIDWORD(v489) ^ ((BYTE1(v316) ^ 0xD9) - 1340798920 - 2 * ((BYTE1(v316) ^ 0xD9) & 0x3C ^ (v316 >> 8) & 4)) ^ *(_DWORD *)&v253[4 * (HIBYTE(v319) ^ 0x8A)] ^ *(_DWORD *)&v242[4 * (BYTE1(v316) ^ 0xB4)] ^ v325;
  v334 = *(_DWORD *)(v248 + 4 * (BYTE2(v330) ^ 0x1Cu));
  HIDWORD(v251) = v334 ^ 0xA5A;
  LODWORD(v251) = v334 ^ 0xA9EBC000;
  v335 = (((unsigned __int16)(v333 ^ 0xCCA2) >> 8) - 1340798920 - (((v333 ^ 0x33C8CCA2) >> 7) & 0x70)) ^ *(_DWORD *)&v242[4 * (((unsigned __int16)(v333 ^ 0xCCA2) >> 8) ^ 0x6D)];
  v336 = (v251 >> 12) ^ *(_DWORD *)&v242[4 * (BYTE1(v329) ^ 0xD9)] ^ ((BYTE1(v329) ^ 0xB4)
                                                                    - 1340798920
                                                                    - ((2 * ((v329 >> 8) ^ 0x4FE6B4)) & 0x70));
  v337 = (v336 - 387806001 - ((2 * v336) & 0xD1C5199E)) ^ *(_DWORD *)(v244 + 4 * (v239 ^ 0x69u));
  v338 = (v335 - 387806001 - ((2 * v335) & 0xD1C5199E)) ^ *(_DWORD *)(v244 + 4 * (v330 ^ 0x3Au));
  v339 = *(_DWORD *)(v244 + 4 * (v329 ^ 0x96u));
  v340 = *(_DWORD *)(v244 + 4 * (v333 ^ 0xA2u)) ^ (((unsigned __int16)(v239 ^ 0x8969) >> 8)
                                                                    - 1340798920
                                                                    - (((v239 ^ 0x10EC8969) >> 7) & 0x70)) ^ *(_DWORD *)&v242[4 * (((unsigned __int16)(v239 ^ 0x8969) >> 8) ^ 0x6D)] ^ (v332 - 387806001 - ((2 * v332) & 0xD1C5199E));
  HIDWORD(v251) = v339 ^ 0x8E28CCF;
  LODWORD(v251) = ~v339;
  HIDWORD(v251) = (v251 >> 29) ^ 0x6615DA09;
  LODWORD(v251) = HIDWORD(v251);
  v341 = (v251 >> 3) - 1340798920 - ((2 * (v251 >> 3)) & 0x602A1070);
  v342 = v338 - 516091572 - ((2 * v338) & 0xC27A2298);
  v343 = *(_DWORD *)(v248 + 4 * ((v239 ^ 0x10EC8969) >> 16));
  HIDWORD(v251) = v343 ^ 0xA5A;
  LODWORD(v251) = v343 ^ 0xA9EBC000;
  v344 = v251 >> 12;
  LODWORD(v237) = *(_DWORD *)(v248 + 4 * ((v333 ^ 0x33C8CCA2) >> 16));
  HIDWORD(v251) = v237 ^ 0xA5A;
  LODWORD(v251) = v237 ^ 0xA9EBC000;
  v345 = v489 ^ *(_DWORD *)&v253[4 * (HIBYTE(v333) ^ 0x17)] ^ (v337 - 516091572 - ((2 * v337) & 0xC27A2298));
  v346 = v341 ^ *(_DWORD *)&v242[4 * (BYTE1(v330) ^ 0xD1)] ^ (v251 >> 12);
  v347 = *(_DWORD *)&v253[4 * (BYTE3(v239) ^ 0x34)] ^ v559 ^ (v346 - 516091572 - ((2 * v346) & 0xC27A2298));
  v348 = HIDWORD(v484) ^ *(_DWORD *)&v253[4 * (HIBYTE(v329) ^ 0x4F)] ^ v344 ^ v342;
  LODWORD(v239) = v484 ^ *(_DWORD *)&v253[4 * (HIBYTE(v330) ^ 0x1B)] ^ (v340 - 516091572 - ((2 * v340) & 0xC27A2298));
  v349 = *(_DWORD *)(v248 + 4 * (BYTE2(v239) ^ 0x7Eu));
  HIDWORD(v251) = v349 ^ 0xA5A;
  LODWORD(v251) = v349 ^ 0xA9EBC000;
  v350 = v251 >> 12;
  v351 = *(_DWORD *)(v248 + 4 * (BYTE2(v348) ^ 1u));
  HIDWORD(v251) = v351 ^ 0xA5A;
  LODWORD(v251) = v351 ^ 0xA9EBC000;
  v352 = ((v251 >> 12) - 387806001 - ((2 * (v251 >> 12)) & 0xD1C5199E)) ^ *(_DWORD *)(v244
                                                                                    + 4
                                                                                    * (v345 ^ 0xC6u));
  v353 = ((BYTE1(v345) ^ 0x71) - 1340798920 - ((2 * ((v345 >> 8) ^ 0xF25B71)) & 0x70)) ^ *(_DWORD *)&v242[4 * (BYTE1(v345) ^ 0x1C)];
  v354 = (v353 - 516091572 - ((2 * v353) & 0xC27A2298)) ^ *(_DWORD *)&v253[4 * (HIBYTE(v348) ^ 0x1F)];
  v355 = *(_DWORD *)(v248 + 4 * (BYTE2(v345) ^ 0x5Bu));
  HIDWORD(v251) = v355 ^ 0xA5A;
  LODWORD(v251) = v355 ^ 0xA9EBC000;
  v356 = v251 >> 12;
  LODWORD(v237) = BYTE1(v330) ^ 0x73F4E0AF ^ v347;
  v357 = *(_DWORD *)(v248 + 4 * BYTE2(v237));
  HIDWORD(v251) = v357 ^ 0xA5A;
  LODWORD(v251) = v357 ^ 0xA9EBC000;
  v358 = v251 >> 12;
  HIDWORD(v251) = v350 ^ ((BYTE1(v348) ^ 0x81) - 1340798920 - ((v348 >> 7) & 0x70)) ^ 0xD678EAEF ^ *(_DWORD *)&v242[4 * (BYTE1(v348) ^ 0xEC)];
  LODWORD(v251) = HIDWORD(v251);
  LODWORD(v251) = (v251 >> 11) ^ __ROR4__(*(_DWORD *)&v253[4 * (HIBYTE(v345) ^ 0xF2)] ^ 0x43274AF2, 11) ^ 0xD490839A;
  HIDWORD(v251) = v251;
  v359 = v433 ^ HIDWORD(v430) ^ *(_DWORD *)(v244 + 4 * (v348 ^ 0xB8u)) ^ ((BYTE1(v239) ^ 0xAA)
                                                                                           - 1340798920
                                                                                           - 2
                                                                                           * (((v239 >> 8) ^ 0x967EAA) & 0x3D ^ (v239 >> 8) & 5)) ^ *(_DWORD *)&v253[4 * (HIBYTE(v347) ^ 0x57)] ^ v356 ^ *(_DWORD *)&v242[4 * (BYTE1(v239) ^ 0xC7)];
  v360 = v479 ^ *(_DWORD *)&v253[4 * (BYTE3(v239) ^ 0x96)] ^ (BYTE1(v237)
                                                            - 1340798920
                                                            - ((v237 >> 7) & 0x70)) ^ *(_DWORD *)&v242[4 * (BYTE1(v237) ^ 0x6D)] ^ (v352 - 516091572 - ((2 * v352) & 0xC27A2298));
  v361 = HIDWORD(v473) ^ *(_DWORD *)(v244 + 4 * (v239 ^ 0x88u)) ^ v358 ^ (v354
                                                                                           - 387806001
                                                                                           - ((2 * v354) & 0xD1C5199E));
  LODWORD(v237) = v473 ^ *(_DWORD *)(v244 + 4 * v237) ^ ((v251 >> 21)
                                                                          - 387806001
                                                                          - ((2 * (v251 >> 21)) & 0xD1C5199E));
  BYTE2(v239) = BYTE2(v361) ^ 0x4A;
  v362 = *(_DWORD *)(v248 + 4 * (BYTE2(v359) ^ 0x34u));
  HIDWORD(v251) = v362 ^ 0xA5A;
  LODWORD(v251) = v362 ^ 0xA9EBC000;
  v363 = v251 >> 12;
  v364 = *(_DWORD *)&v242[4 * (BYTE1(v360) ^ 0x96)] ^ ((BYTE1(v360) ^ 0xFB)
                                                     - 1340798920
                                                     - ((2 * ((v360 >> 8) ^ 0x3EA2FB)) & 0x70));
  v365 = (v364 - 387806001 - ((2 * v364) & 0xD1C5199E)) ^ *(_DWORD *)(v244 + 4 * (v361 ^ 0x75u));
  v366 = *(_DWORD *)(v248 + 4 * (BYTE2(v360) ^ 0xA2u));
  HIDWORD(v251) = v366 ^ 0xA5A;
  LODWORD(v251) = v366 ^ 0xA9EBC000;
  v367 = (((unsigned __int16)(v361 ^ 0xF075) >> 8) - 1340798920 - (((v361 ^ 0xB54AF075) >> 7) & 0x70)) ^ (v251 >> 12) ^ *(_DWORD *)&v242[4 * (((unsigned __int16)(v361 ^ 0xF075) >> 8) ^ 0x6D)];
  v368 = *(_DWORD *)&v253[4 * (HIBYTE(v361) ^ 0x91)];
  v369 = *(_DWORD *)&v253[4 * (HIBYTE(v360) ^ 0x3E)];
  v370 = *(_DWORD *)&v253[4 * (HIBYTE(v359) ^ 0xCE)];
  v371 = (v367 - 516091572 - ((2 * v367) & 0xC27A2298)) ^ *(_DWORD *)&v253[4 * (BYTE3(v237) ^ 0xED)];
  LODWORD(v237) = v237 ^ 0xC9AF1D8F;
  v372 = *(_DWORD *)(v244 + 4 * v237);
  v373 = BYTE1(v237);
  LODWORD(v253) = BYTE1(v237) - 1340798920 - ((v237 >> 7) & 0x70);
  LODWORD(v237) = *(_DWORD *)(v248 + 4 * BYTE2(v237));
  LODWORD(v248) = *(_DWORD *)(v248 + 4 * BYTE2(v239));
  HIDWORD(v251) = v248 ^ 0xA5A;
  LODWORD(v251) = v248 ^ 0xA9EBC000;
  v374 = *(_DWORD *)&v242[4 * (BYTE1(v359) ^ 0x30)];
  LODWORD(v242) = HIDWORD(v468) ^ *(_DWORD *)(v244 + 4 * (v360 ^ 0x9Au)) ^ v363 ^ v368 ^ v253 ^ *(_DWORD *)&v242[4 * (v373 ^ 0x6D)];
  LODWORD(v239) = v468 ^ ((BYTE1(v359) ^ 0x5D) - 1340798920 - ((2 * ((v359 >> 8) ^ 0xCE345D)) & 0x70)) ^ v369 ^ v374 ^ v372 ^ (v251 >> 12);
  v375 = HIDWORD(v462) ^ *(_DWORD *)(v244 + 4 * (v359 ^ 0xECu)) ^ (v371
                                                                                    - 387806001
                                                                                    - ((2 * v371) & 0xD1C5199E));
  v376 = v462 ^ v370 ^ (v237 >> 12) ^ ((_DWORD)v237 << 20) ^ (v365 - 516091572 - ((2 * v365) & 0xC27A2298));
  v377 = (char *)*(&off_1E93A7480 + SHIDWORD(v445)) - 12;
  v378 = (uint64_t)*(&off_1E93A7480 + (int)v445);
  v379 = *(_DWORD *)(v378 + 4 * (BYTE1(v376) ^ 0xBDu)) ^ *(_DWORD *)&v377[4 * (v375 ^ 7)];
  LODWORD(v237) = (v379 ^ 0xB6A96BC2) + 1316140811 - 2 * ((v379 ^ 0xB6A96BC2) & 0x4E72B71B ^ v379 & 0x10);
  LODWORD(v248) = *(_DWORD *)(v378 + 4 * (BYTE1(v242) ^ 0xECu));
  v380 = *(_DWORD *)(v378 + 4 * ((unsigned __int16)(v375 ^ 0x6F07) >> 8));
  v381 = *(_DWORD *)(v378 + 4 * (BYTE1(v239) ^ 0xB7u));
  v382 = (char *)*(&off_1E93A7480 + SHIDWORD(v441)) - 12;
  v383 = *(unsigned int *)&v382[4 * (HIBYTE(v375) ^ 0xEF)];
  v384 = *(_DWORD *)&v382[4 * (BYTE3(v239) ^ 0x1E)];
  LODWORD(v253) = *(_DWORD *)&v382[4 * (HIBYTE(v376) ^ 0x38)];
  v385 = *(_DWORD *)&v382[4 * ((v242 >> 24) ^ 0x38)];
  v386 = *(_DWORD *)(v62 - 120);
  v387 = (char *)*(&off_1E93A7480 + (int)(v386 - 878)) - 8;
  v388 = *(_DWORD *)&v387[4 * (BYTE2(v376) ^ 0x16)];
  v389 = *(_DWORD *)&v387[4 * (BYTE2(v375) ^ 0x2A)];
  v390 = *(unsigned int *)&v387[4 * (BYTE2(v239) ^ 0x69)];
  v391 = *(_DWORD *)&v377[4 * (v242 ^ 0x5F)];
  LODWORD(v239) = *(_DWORD *)&v377[4 * (v239 ^ 0xC9)];
  LODWORD(v387) = *(_DWORD *)&v387[4 * (BYTE2(v242) ^ 0x54)] ^ ((v237 ^ v384)
                                                              + 1327878781
                                                              - ((2 * (v237 ^ v384)) & 0x9E4BA4FA));
  LODWORD(v237) = *(_DWORD *)&v377[4 * (v376 ^ 0x67)];
  v392 = *(_DWORD *)(v62 - 140) ^ v556 ^ ((_DWORD)v387 - ((2 * (_DWORD)v387) & 0xFB3D04DC) - 39943570);
  v393 = (char *)*(&off_1E93A7480 + (int)(v386 - 978)) - 4;
  a55[8] = v393[BYTE3(v392) ^ 0xD7] ^ 0x4E;
  v394 = ((v388 ^ 0x52DF19F5 ^ v380) + 1316140811 - ((2 * (v388 ^ 0x52DF19F5 ^ v380)) & 0x9CE56E16)) ^ v385;
  v395 = (v394 - 1420582838 - ((2 * v394) & 0x56A74094)) ^ v239;
  v396 = *(_DWORD *)(v62 - 136) ^ HIDWORD(v556) ^ (v395 - ((2 * v395) & 0xF0ED1F8E) + 2021035975);
  v397 = (char *)*(&off_1E93A7480 + (int)(v386 - 1009)) - 12;
  a55[*(_QWORD *)(v62 - 232)] = (v397[v396 ^ 0xC7] - 94) ^ 0x5F;
  v398 = (char *)*(&off_1E93A7480 + (int)v441) - 4;
  LODWORD(v387) = v398[BYTE1(v396) ^ 0x13];
  HIDWORD(v251) = v387 ^ 0x18;
  LODWORD(v251) = (_DWORD)v387 << 24;
  a55[6] = (v251 >> 30) ^ 0x40;
  v399 = ((v391 ^ 0xE4767237 ^ v389) + 1316140811 - ((2 * (v391 ^ 0xE4767237 ^ v389)) & 0x9CE56E16)) ^ v253;
  v400 = (v399 + 502975369 + (~(2 * v399) | 0xC40A68EF)) ^ v381;
  v401 = *(_DWORD *)(v62 - 132) ^ HIDWORD(v557) ^ (v400 - ((2 * v400) & 0x617FAF70) - 1329604680);
  v402 = v398[BYTE1(v401)];
  HIDWORD(v251) = v402 ^ 0x18;
  LODWORD(v251) = v402 << 24;
  a55[*(_QWORD *)(v62 - 224)] = (v251 >> 30) ^ 0x7E;
  v403 = (char *)*(&off_1E93A7480 + SHIDWORD(a25)) - 8;
  a55[9] = v403[BYTE2(v392) ^ 0xFBLL] ^ 0x40;
  v404 = ((v248 ^ 0x53887C83 ^ v383) + 1327878781 - ((2 * (v248 ^ 0x53887C83 ^ v383)) & 0x9E4BA4FA)) ^ v390;
  v405 = v237 ^ (v404 - 1420582838 - ((2 * v404) & 0x56A74094));
  v406 = *(_DWORD *)(v62 - 128) ^ v557 ^ (v405 - ((2 * v405) & 0xD5D97904) + 1793899650);
  a55[*(_QWORD *)(v62 - 176)] = v403[BYTE2(v406) ^ 0xB8] ^ 0x93;
  a55[*(_QWORD *)(v62 - 256)] = (v397[v392 ^ 0x1BLL] - 94) ^ 0x7D;
  a55[*(_QWORD *)(v62 - 240)] = v403[BYTE2(v396) ^ 3] ^ 0xED;
  a55[*(_QWORD *)(v62 - 192)] = v393[HIBYTE(v396) ^ 0x6DLL] ^ 0xB6;
  v407 = v398[BYTE1(v392) ^ 0x92];
  HIDWORD(v251) = v407 ^ 0x18;
  LODWORD(v251) = v407 << 24;
  a55[*(_QWORD *)(v62 - 160)] = (v251 >> 30) ^ 0xD2;
  v408 = *(_QWORD *)(v62 - 208);
  a55[v408] = v393[BYTE3(v401) ^ 0x53] ^ 0x5A;
  a55[*(_QWORD *)(v62 - 184)] = (v397[v401 ^ 0x95] - 94) ^ 0xAF;
  a55[*(_QWORD *)(v62 - 248)] = (v397[v406 ^ 0x64] - 94) ^ 0x27;
  a55[*(_QWORD *)(v62 - 168)] = v393[HIBYTE(v406) ^ 0x6ELL] ^ 0xCC;
  v409 = v398[BYTE1(v406) ^ 0x1FLL];
  HIDWORD(v251) = v409 ^ 0x18;
  LODWORD(v251) = v409 << 24;
  a55[*(_QWORD *)(v62 - 200)] = (v251 >> 30) ^ 0x58;
  a55[*(_QWORD *)(v62 - 152)] = v403[BYTE2(v401) ^ 0xC8] ^ 0xC2;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, char *, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, unsigned __int8 *, _QWORD))(*(_QWORD *)(a58 + 8 * (int)((1245 * ((((_DWORD)v408 + 94890222 - 2 * (((_DWORD)v408 + 16) & *(_DWORD *)(v62 - 212))) ^ 0x5A7E8DEu) < a56)) ^ (v386 - 548))) - 12))(1453801620, v383, v390, v392, v401, 6, v386, 3519355294, a9, a10, v411, v412, v413, v414, v415, v417, v419, v422, v424,
           v427,
           v430,
           v433,
           v435,
           a24,
           a25,
           v441,
           v445,
           v450,
           v456,
           v462,
           v468,
           v473,
           v479,
           v484,
           v489,
           v494,
           v499,
           v505,
           v510,
           v516,
           v520,
           v526,
           v531,
           v537,
           v542,
           v546,
           v549,
           v551,
           v553,
           v554,
           v555,
           v556,
           v557,
           v559,
           a55,
           a56);
}

void sub_1D24AC750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60,int a61,int a62,int a63)
{
  uint64_t v63;

  *(_DWORD *)(v63 - 128) = a60 ^ 0xB1DEE7AE;
  *(_DWORD *)(v63 - 140) = a62 ^ 0x46C7E3C1;
  *(_DWORD *)(v63 - 132) = a63 ^ 0xC4A91E40;
  *(_DWORD *)(v63 - 136) = a61 ^ 0x812A10DB;
  JUMPOUT(0x1D24AAAACLL);
}

uint64_t sub_1D24AC7A4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a5 ^ ((v5 == a2) | (32 * (v5 == a2)))))
                            - (((a5 + 798515960) & 0xD0679BFF)
                             - 450)
                            + 558))();
}

uint64_t sub_1D24AC7E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6 + 8 * (int)(a4 ^ (336 * ((v5 >> 3) & 1))))
                                                           - ((a4 ^ 0x1CEu)
                                                            - 441)
                                                           + 563))(a1, a2, (v4 - a2));
}

uint64_t sub_1D24AC810(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  int v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  unsigned int v69;
  int v70;
  uint64_t v71;
  int8x16x4_t v73;

  v68 = (v58 - 1765276622) & 0x6937FBBE;
  *(_DWORD *)(v67 - 120) = v63;
  v69 = (v68 ^ 0xFFFFFDC8) & v63;
  v70 = -a2;
  *(_DWORD *)(v67 - 128) = v69;
  v71 = (v70 + a1 + v64 + v65);
  v73.val[0].i64[0] = ((_BYTE)v70 + (_BYTE)a1 + (_BYTE)v64 + (_BYTE)v65) & 0xF;
  v73.val[0].i64[1] = ((_BYTE)v70 + (_BYTE)a1 + (_BYTE)v64 + 7) & 0xF;
  v73.val[1].i64[0] = ((_BYTE)v70 + (_BYTE)a1 + (_BYTE)v64 + 6) & 0xF;
  v73.val[1].i64[1] = ((_BYTE)v70 + v62 + ((v68 + 29) ^ 0xAA)) & 0xF;
  v73.val[2].i64[0] = ((_BYTE)v70 + (_BYTE)a1 + (_BYTE)v64 + 4) & 0xF;
  v73.val[2].i64[1] = ((_BYTE)v70 + (_BYTE)a1 + (_BYTE)v64 + 3) & 0xF;
  v73.val[3].i64[0] = ((_BYTE)v70 + (_BYTE)a1 + (_BYTE)v64 + 2) & 0xF;
  v73.val[3].i64[1] = ((_BYTE)v70 + (_BYTE)a1 + (_BYTE)v64 + 1) & 0xF;
  *(int8x8_t *)(v66 - 7 + v71) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v66 - 7 + v71), *(int8x8_t *)(v61 + (v71 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v60 + (v71 & 0xF) - 7), *(int8x8_t *)(v59 + (v71 & 0xF) - 7)))), (int8x8_t)0x6767676767676767), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v73, (int8x16_t)xmmword_1D24F95B0), (int8x8_t)0x505050505050505)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a58 + 8 * ((15 * (v70 != 8 - v69)) ^ v68)) - 12))((__n128)xmmword_1D24F95B0);
}

void sub_1D24AC96C()
{
  JUMPOUT(0x1D24AC890);
}

uint64_t sub_1D24AC994()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v0 + 115014322) & 0xF92507F8) + ((v0 - 85) | 0x300) - 1138)
                                     * (*(_DWORD *)(v1 - 120) == *(_DWORD *)(v1 - 128))) ^ v0)))();
}

uint64_t sub_1D24AC9E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = (a3 - 1308443638);
  *(_BYTE *)(v9 + v11) ^= *(_BYTE *)(v7 + (v11 & 0xF)) ^ *(_BYTE *)(v6 + (v11 & 0xF)) ^ *(_BYTE *)(v5 + (v11 & 0xF)) ^ (5 * (v11 & 0xF)) ^ 0x67;
  return (*(uint64_t (**)(void))(v10 + 8 * ((28 * (a3 - 1 == v8)) ^ (a5 - 457))))();
}

void sub_1D24ACA48()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 282813386)
    v1 = 137543419;
  else
    v1 = -137501405;
  *(_DWORD *)(v2 + 40) = v1;
}

uint64_t sub_1D24ACAAC(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;
  int v5;

  v1 = *(_DWORD *)(a1 + 12) - 1224239923 * (((a1 | 0x8C9528F6) - a1 + (a1 & 0x736AD709)) ^ 0x7E26D521) - 77;
  v2 = v1 + *(_DWORD *)(*(_QWORD *)a1 - 0x454517534C5DD3E1);
  v4 = v2 - 1574925479;
  v3 = v2 - 1574925479 < 0;
  v5 = 1574925479 - v2;
  if (!v3)
    v5 = v4;
  return (*(uint64_t (**)(void))((char *)*(&off_1E93A7480 + (v1 ^ 0x165))
                              + 8
                              * ((((v5 ^ 0x55BDF2DF) - 1359282312 + ((2 * v5) & 0xAB7BE5BE) - 79229528 < 0x7FFFFFFF)
                                * ((3 * (v1 ^ 0x1B7)) ^ 0x1F5)) ^ v1)
                              - 4))();
}

uint64_t sub_1D24ACBC0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((*(_DWORD *)(*v7 + 4 * a4) != v4) * (v5 - 263)) ^ v5 ^ v8))
                            - 12))();
}

void sub_1D24ACBF0()
{
  JUMPOUT(0x1D24ACB8CLL);
}

uint64_t sub_1D24ACBF8(uint64_t result)
{
  *(_DWORD *)(result + 8) = 135985007;
  return result;
}

uint64_t sub_1D24ACC08(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (int)((14 * ((a4 ^ v4) >> 31)) ^ (v5 + 1166))) - (v5 ^ 0x132)))();
}

uint64_t sub_1D24ACC48()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  char v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((14 * ((v3 >> (v4 + 31)) & 1)) ^ v1)) - (v0 ^ 0x132)))();
}

uint64_t sub_1D24ACC78@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  char v2;
  int v3;

  *(_DWORD *)(result + 8) = (a2 << (v2 - 49)) + v3 + 1895607440;
  return result;
}

void sub_1D24ACC98(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  v1 = 1759421093 * (a1 ^ 0xB37DB054);
  if (*(_QWORD *)(a1 + 24))
    v2 = *(_DWORD *)(a1 + 20) - v1 == 1233559901;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_1D24ACD40()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BOOL4 v3;

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v2 - 1481)))(32, 0x101004023FF3BD5) == 0;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v3 * ((v2 - 666) ^ 0x7A4 ^ ((v2 - 1530) | 0x4D2))) ^ v2)))();
}

uint64_t sub_1D24ACDA8()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 != v0 + v3 - 370 - 872) | v3)) - (v3 ^ 0x7B2u) + 860))();
}

uint64_t sub_1D24ACDF0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;

  v11 = v2 - 1233559902;
  v12 = v2 - 1;
  v13 = *(unsigned __int8 *)(v6 + v11);
  if (v13 == 103)
    __asm { BR              X11 }
  if (v13 == 231)
  {
    v14 = 137543419;
    v15 = *(_QWORD *)(v4 + 8);
    v16 = *(unsigned __int8 *)(v4 + 16) ^ v5;
    *(_QWORD *)result = v6;
    *(_DWORD *)(result + 8) = v7;
    *(_DWORD *)(result + 12) = v12;
    if (v16 == 28)
      v17 = -314121227;
    else
      v17 = -314121228;
    *(_DWORD *)(result + 16) = 1540181987;
    *(_DWORD *)(result + 20) = v17;
    *(_DWORD *)(result + 24) = 137543419;
    *(_QWORD *)(v15 - 0x4A03747B2680DE02) = a2;
  }
  else
  {
    result = (*(uint64_t (**)(void))(v8 + 8 * (v9 - 846)))();
    v14 = -137501406;
  }
  *(_DWORD *)v4 = v14;
  return result;
}

void sub_1D24ACEC8(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 24) ^ (460628867 * ((a1 & 0x2C14B2F1 | ~(a1 | 0x2C14B2F1)) ^ 0x9F7DCF73));
  v3 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v3 - 0x454517534C5DD3E1) - 1574925169 >= 0)
    v4 = *(_DWORD *)(v3 - 0x454517534C5DD3E1) - 1574925169;
  else
    v4 = 1574925169 - *(_DWORD *)(v3 - 0x454517534C5DD3E1);
  v2 = *(_QWORD *)(a1 + 16);
  if (*(_DWORD *)(v2 - 0x454517534C5DD3E1) - 1574925169 >= 0)
    v5 = *(_DWORD *)(v2 - 0x454517534C5DD3E1) - 1574925169;
  else
    v5 = 1574925169 - *(_DWORD *)(v2 - 0x454517534C5DD3E1);
  v8 = v1 - 1178560073 * ((2 * (&v7 & 0x6F62F540) - &v7 + 278727356) ^ 0xBD0A3619) + 584;
  v7 = v3;
  sub_1D24C843C((uint64_t)&v7);
  if (v4 >= v5)
    v6 = v5;
  else
    v6 = v4;
  __asm { BR              X13 }
}

uint64_t sub_1D24AD078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  _BOOL4 v23;

  v20 = v13 ^ 0x87;
  v21 = 4 * (v15 + v14);
  v22 = v18
      + 534536587
      + (*(_DWORD *)(*(_QWORD *)(v19 - 0x454517534C5DD3DDLL) + v21) ^ v16)
      - (*(_DWORD *)(*(_QWORD *)(a9 - 0x454517534C5DD3DDLL) + v21) ^ v16)
      + 277;
  *(_DWORD *)(*(_QWORD *)(a11 - 0x454517534C5DD3DDLL) + v21) = v22
                                                             + v16
                                                             - (((v20 - 927251863) & 0x3744BFFF ^ (v17 - 1139)) & (2 * v22));
  v23 = v15 - 512224152 < (int)(v12 + 1499962195);
  if (v12 > 0x269864AC != v15 - 512224152 < -647521453)
    v23 = v12 > 0x269864AC;
  return (*(uint64_t (**)(void))(v11 + 8 * ((135 * v23) ^ v20)))();
}

uint64_t sub_1D24AD1B4()
{
  uint64_t v0;
  unsigned int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v5 = v2 - 2138520502 > 2021149493 || v2 - 2138520502 < (int)(((v1 - 888) ^ 0xF8784EAF ^ ((v1 - 133) | 0x84)) + v3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((112 * v5) | v1)) - 4))();
}

uint64_t sub_1D24AD214()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  _BOOL4 v17;

  v13 = 4 * (v7 + v6);
  v14 = v1 + v11 + v4 - 887 + (*(_DWORD *)(*(_QWORD *)(v12 - 0x454517534C5DD3DDLL) + v13) ^ v8);
  *(_DWORD *)(*(_QWORD *)(v10 - 0x454517534C5DD3DDLL) + v13) = v14 + v8 - (v9 & (2 * v14));
  v15 = v7 + 1 + v2;
  v17 = v15 <= v3 && v15 >= v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v17 | v4)) - 4))();
}

uint64_t sub_1D24AD2C4()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;

  v4 = v2 - 1087375370 < (int)(v3 + 924810978);
  if (v3 > 0x48E0811D != v2 - 1087375370 < ((83 * (v1 ^ 0x116) - 1222674577) ^ (v1 + 1397)))
    v4 = v3 > 0x48E0811D;
  return (*(uint64_t (**)(void))(v0 + 8 * ((1470 * v4) ^ v1)))();
}

uint64_t sub_1D24AD340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  uint64_t v20;
  _BOOL4 v21;
  uint64_t v22;
  unsigned int v23;
  int v24;
  _BOOL4 v25;

  v21 = v19 > v14;
  v22 = 4 * (v16 + v15);
  v23 = ((v12 + 1425) ^ 0xE02398FC) + v10 + (*(_DWORD *)(*(_QWORD *)(a9 - 0x454517534C5DD3DDLL) + v22) ^ 0x60C4C0B6);
  *(_DWORD *)(*(_QWORD *)(v20 - 0x454517534C5DD3DDLL) + v22) = v23 + v17 - (v18 & (2 * v23));
  v24 = v16 + 1 + v11;
  LODWORD(v22) = v21 ^ (v24 < a7 + 1907);
  v25 = v24 < v13;
  if (!(_DWORD)v22)
    v21 = v25;
  return (*(uint64_t (**)(void))(v9 + 8 * ((492 * !v21) ^ v12)))();
}

uint64_t sub_1D24AD42C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v0 + 8 * ((23 * (v1 != ((v2 - 1126) ^ 0x258u) + 0x5A748F8B1FDC610ELL)) ^ v2)))();
}

uint64_t sub_1D24AD46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11)
{
  uint64_t v11;
  unsigned int v12;
  int v13;
  int v14;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v11
                                                                                         + 8
                                                                                         * (int)((1611
                                                                                                * ((v13 + v14 - 1) < 0x7FFFFFFF)) ^ (v12 + 381)))
                                                                             - (v12 ^ 0x22CLL)))(a1, a2, a3, a4, a11);
}

uint64_t sub_1D24AD5F4()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v0
                                                      + 8
                                                      * ((1291
                                                        * (*(_DWORD *)(*(_QWORD *)(v5 - 0x454517534C5DD3DDLL)
                                                                     + 4 * (v2 + v3 - 1)) == (((v1 ^ 0x3D5) + 999061844) & 0xC473837E ^ (v4 - 504)) + (((v1 ^ 0x3D5) - 385) | 4))) ^ v1 ^ 0x3D5))
                                          - 8))(497);
}

uint64_t sub_1D24AD674(int a1, int a2, int a3)
{
  uint64_t v3;
  unsigned int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((a3 - 2 >= ((a2 + 813) ^ v4)) * ((a2 + 432) ^ a1)) ^ a2)) - 8))();
}

void sub_1D24AD6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  *(_DWORD *)(v7 - 0x454517534C5DD3E1) = (((v6 + v5) * (a5 - 680783111)) ^ 0xDDFFFF71)
                                         + 2145350656
                                         + ((2 * (v6 + v5) * (a5 - 680783111)) & 0xBBFFFEE2);
}

uint64_t sub_1D24AD738(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)&unk_1E93A39F4
                                        + 8 * ((1255 * (*(_DWORD *)(a2 + 4) == 1699122661)) ^ 0x204u)
                                        - 4)
                            - 12))();
}

uint64_t sub_1D24AD778(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0x1ED72FEA)
                       - 412167176
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0x1D4);
  return 0;
}

uint64_t sub_1D24AD7B0()
{
  return 4294925278;
}

void sub_1D24AD7B8(uint64_t a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  _BOOL4 v5;

  v1 = 1734042137 * (((a1 ^ 0xE6425DAD | 0xA65DFB69) - ((a1 ^ 0xE6425DAD) & 0xA65DFB69)) ^ 0x1CD16589);
  v2 = *(_DWORD *)(*(_QWORD *)a1 - 0x1DC828355A88D59BLL) + 1020912944;
  v3 = (*(_DWORD *)(a1 + 16) ^ v1) + 391848973;
  v4 = (v3 < 0x8660868D) ^ (v2 < 0x8660868D);
  v5 = v2 < v3;
  if (v4)
    v5 = v3 < 0x8660868D;
  __asm { BR              X11 }
}

uint64_t sub_1D24AD8D4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((60
                                          * ((((479 * (v0 ^ 0x218)) ^ 0x59C) & *(_DWORD *)(v1 - 0x1DC828355A88D593)) == ((v0 + 117) ^ 0x290))) ^ v0))
                            - 12))();
}

uint64_t sub_1D24AD930@<X0>(int a1@<W8>, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  _BOOL4 v5;
  va_list va;

  va_start(va, a2);
  v5 = (*(uint64_t (**)(_QWORD, char *, _QWORD, uint64_t))(v3 + 8 * (v4 - 1232)))(**(unsigned int **)(v3 + 8 * (v4 - 1368)), va, ((a1 - 1862619777) & 0xFFFFF000 ^ 0xD9EFEBFF)+ ((2 * (a1 - 1862619777)) & 0xB3DFC000)+ 638587553+ ((v4 - 1500937761) & 0x597679E3), 1) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((51 * v5) ^ v4)) - 8))();
}

uint64_t sub_1D24AD9C4()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((29 * (*(_QWORD *)(v0 - 0x1DC828355A88D5A7) == 0)) ^ v2))
                            - ((((v2 + 176) | 0x80) + 41) ^ v2 ^ 0x3DD)))();
}

void sub_1D24ADA2C()
{
  uint64_t v0;
  _DWORD *v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;

  *v4 = v3;
  *(_DWORD *)(v0 - 0x1DC828355A88D59FLL) = v2;
  *v1 = v2;
}

uint64_t sub_1D24ADF74(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  BOOL v4;
  unsigned int v5;
  uint64_t v6;

  v1 = 1759421093 * ((-2 - ((a1 | 0xA0001F4D) + (~(_DWORD)a1 | 0x5FFFE0B2))) ^ 0xEC8250E6);
  v2 = *(_DWORD *)(a1 + 12) - v1;
  v3 = v1 + *(_DWORD *)(a1 + 8);
  v5 = v3 - 483381750;
  v4 = v3 - 483381750 < 0;
  LODWORD(v6) = 483381750 - v3;
  if (v4)
    v6 = v6;
  else
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1E93A7480 + (v2 ^ 0x2FC))
                                        + 8 * ((126 * (v6 != ((2 * (_DWORD)v6) & 0xA5301FE4))) ^ v2)
                                        - 4)
                            - 12))();
}

void sub_1D24AE02C(int a1@<W8>)
{
  uint64_t v1;
  int v2;

  **(_DWORD **)(v1 - 0x454517534C5DD3DDLL) = (v2 - 761786382) ^ 0x4DA330BB;
  *(_DWORD *)(v1 - 0x454517534C5DD3E1) = a1 + 1;
}

void sub_1D24AE084()
{
  unint64_t v0;
  uint64_t v1;
  _BYTE v2[1208];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v0 = (unint64_t)&v2[qword_1EFC7F970 ^ qword_1EFC7F9C8];
  qword_1EFC7F9C8 = 536075833 * (v0 + 0x793AB71194CDC804);
  qword_1EFC7F970 = 536075833 * (v0 ^ 0x86C548EE6B3237FCLL);
  *(_DWORD *)*(&off_1E93A7480
             + ((57 * ((qword_1EFC7F970 - qword_1EFC7F9C8) ^ 0xFC)) ^ byte_1D24F6770[byte_1D24F2BF0[(57 * ((qword_1EFC7F970 - qword_1EFC7F9C8) ^ 0xFC))] ^ 0x20])
             - 12) = 137543419;
  v1 = ((uint64_t (*)(uint64_t, uint64_t))*(&off_1E93A7480
                                                  + ((57 * ((qword_1EFC7F970 + qword_1EFC7F9C8) ^ 0xFC)) ^ byte_1D24F29F0[byte_1D24EE1B0[(57 * ((qword_1EFC7F970 + qword_1EFC7F9C8) ^ 0xFC))] ^ 0x85])
                                                  - 147))(512, 1509315540);
  *(_QWORD *)*(&off_1E93A7480
             + ((57 * ((qword_1EFC7F970 + qword_1EFC7F9C8) ^ 0xFC)) ^ byte_1D24F6770[byte_1D24F2BF0[(57 * ((qword_1EFC7F970 + qword_1EFC7F9C8) ^ 0xFC))] ^ 0xC9])
             + 104) = v1;
  __asm { BR              X8 }
}

uint64_t sub_1D24AE224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = dword_1EFC7EDD0;
  v3 = 628203409 * ((((v1 - 144) | 0x23236474E8752B71) - ((v1 - 144) & 0x23236474E8752B71)) ^ 0x1C7FCE616AFD2742);
  *(_QWORD *)(v1 - 144) = v3 ^ 0x284A12B;
  *(_QWORD *)(v1 - 112) = v2 - v3;
  *(_DWORD *)(v1 - 124) = v3 - 1045703288;
  *(_DWORD *)(v1 - 120) = v3 - 1045703233;
  *(_DWORD *)(v1 - 116) = v3;
  *(_DWORD *)(v1 - 136) = 2104632390 - v3;
  *(_DWORD *)(v1 - 132) = v3 - 1045703195;
  v4 = sub_1D24DAC48(v1 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v0 + 8 * *(int *)(v1 - 128)) - 8))(v4);
}

uint64_t sub_1D24AE540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(uint64_t, uint64_t))
{
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t (*v17)(void);
  int v18;
  unsigned int *v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;

  v20 = v13 + v14;
  a13(a12, 2965982036);
  v21 = v17();
  v22 = v21 + 1409224802 - ((v21 << (v20 + 2)) & v18);
  *v19 = v22;
  v23 = (((v22 >> 30) ^ 1) + 1409224802 + 2 * (((v22 >> 30) ^ 1 | 0x7FFFFFF6) ^ (v22 >> 30)) + 18) ^ v22;
  v19[1] = v16 + 1812433253 * v23 - ((2 - 670100790 * v23) & (v18 + ((v20 - 566508560) & 0x21C43DD7) - 455));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 + 8 * (v20 + 359)) - 8))(1812433253, 3728458377, 566509015, 3624866506);
}

void sub_1D24AE62C()
{
  JUMPOUT(0x1D24AE5B4);
}

uint64_t sub_1D24AE640(double a1, int8x16_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t a17, int32x4_t a18, int8x16_t a19, int8x16_t a20,int8x16_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int8x16_t v24;
  int8x16_t v25;
  int8x16_t v26;
  int8x16_t v27;
  int32x4_t v28;
  int8x16_t v29;

  v24 = (int8x16_t)vld1q_dup_f32((const float *)v23);
  v25.i64[0] = 0x8000000080000000;
  v25.i64[1] = 0x8000000080000000;
  a2.i64[0] = *(_QWORD *)(v23 + 4);
  a2.i32[2] = *(_DWORD *)(v23 + 12);
  v26 = vextq_s8(v24, a2, 0xCuLL);
  v27 = a2;
  v27.i32[3] = *(_DWORD *)(v23 + 16);
  v28 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v27, a21), vandq_s8(v26, v25)), 1uLL), a20);
  v29.i32[0] = *(_DWORD *)(v22 + 4 * (*(_DWORD *)(v23 + 4) & 1));
  v29.i32[1] = *(_DWORD *)(v22 + 4 * (*(_DWORD *)(v23 + 8) & 1));
  v29.i32[2] = *(_DWORD *)(v22 + 4 * (*(_DWORD *)(v23 + 12) & 1));
  v29.i32[3] = *(_DWORD *)(v22 + 4 * (v27.i8[12] & 1));
  *(int8x16_t *)v23 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v23 + 1588), v29), a17), (int8x16_t)vaddq_s32(vsubq_s32(v28, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v28, v28), a19)), a18));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8584))(1409224802, 704612401, 1269874642, 1216, 1236);
}

uint64_t sub_1D24AEDC4(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unsigned int *v15;
  uint64_t v16;
  int v17;
  unsigned int v18;

  v15 = (unsigned int *)(v14 + 4 * v10);
  v16 = (v8 ^ a7) + v10 - 965;
  v17 = *(_DWORD *)(v14 + 4 * v16);
  v18 = a2 ^ ((v17 & 0x7FFFFFFE | v9 & 0x80000000) >> 1);
  *v15 = v15[397] ^ a3 ^ *(_DWORD *)(v12 + 4 * (v17 & 1)) ^ (v18 + a1 - (v13 & (2 * v18)));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v16 == 227) * a8) ^ v8)))();
}

uint64_t sub_1D24AEE2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>, int8x16_t a5@<Q1>, int8x16_t a6@<Q4>, int8x16_t a7@<Q5>, int8x16_t a8@<Q6>, int32x4_t a9@<Q7>)
{
  uint64_t v9;
  uint64_t v10;
  int8x16_t *v11;
  int8x16_t v12;
  int8x16_t v13;
  const float *v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int32x4_t v18;
  int8x16_t v19;

  v14 = (const float *)&v11[56].i32[3];
  v15 = (int8x16_t)vld1q_dup_f32(v14);
  a5.i64[0] = v11[57].i64[0];
  a5.i32[2] = v11[57].i32[2];
  v16 = vextq_s8(v15, a5, 0xCuLL);
  v17 = a5;
  v17.i32[3] = v11[57].i32[3];
  v18 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v17, a6), vandq_s8(v16, v12)), 1uLL), a7);
  v19.i32[0] = *(_DWORD *)(v10 + 4 * (v11[57].i32[0] & 1));
  v19.i32[1] = *(_DWORD *)(v10 + 4 * (v11[57].i32[1] & 1));
  v19.i32[2] = *(_DWORD *)(v10 + 4 * (v11[57].i32[2] & 1));
  v19.i32[3] = *(_DWORD *)(v10 + 4 * (v17.i8[12] & 1));
  *(int8x16_t *)((char *)v11 + 4 * (((a4 - 958) | 0x83u) ^ 0x68)) = veorq_s8(veorq_s8(veorq_s8(*v11, v19), v13), (int8x16_t)vaddq_s32(vsubq_s32(v18, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v18, v18), a8)), a9));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * a4) - 4))(a1, a2, a3, 131, 104);
}

void sub_1D24AEF04()
{
  JUMPOUT(0x1D24AEE44);
}

uint64_t sub_1D24AEF10(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,unsigned int a46)
{
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  _DWORD *v50;
  unsigned int v51;

  v51 = (v50[623] & 0x80000000 | *v50 & 0x7FFFFFFF) >> 1;
  v50[623] = v50[396] ^ a3 ^ *(_DWORD *)(v49 + 4 * (*v50 & 1)) ^ (((v46 - 985416140) & 0xBEFDEFFB)
                                                                  + (v51 ^ a2)
                                                                  - 2
                                                                  * ((v51 ^ a2) & (a1 + 8) ^ v51 & (((v46 + 4300845) | 0x84000E03) ^ (v47 - 8)))
                                                                  - 809672281);
  return (*(uint64_t (**)(void))(v48 + 8 * ((21 * (a46 > 0x26F)) ^ v46)))();
}

uint64_t sub_1D24AEFBC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,_DWORD *a25)
{
  int v25;
  _DWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  uint64_t v32;

  *a25 = 1730004588;
  v29 = (*v26 - 1698996087);
  v30 = 460628867
      * ((~((v28 - 144) | 0x5E548C2A7D94C80) + ((v28 - 144) & 0x5E548C2A7D94C80)) ^ 0xB885FA5314B03102);
  *(_QWORD *)(v28 - 112) = 2638217652u - v30;
  *(_QWORD *)(v28 - 144) = v29 ^ v30;
  v31 = a1 + 466912807 + v30;
  *(_DWORD *)(v28 - 136) = v30 ^ 1;
  *(_DWORD *)(v28 - 132) = v31 - 70;
  *(_DWORD *)(v28 - 128) = v30 ^ (a1 + 466912807) ^ 0xFB;
  *(_DWORD *)(v28 - 124) = v31;
  *(_DWORD *)(v28 - 120) = v30 + a1 + 387018711;
  v32 = ((uint64_t (*)(uint64_t))((char *)*(&off_1E93A7480 + v25 + a1 + 189) - 12))(v28 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27 + 8 * *(int *)(v28 - 116)) - 4))(v32);
}

uint64_t sub_1D24AF0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,_QWORD *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unint64_t a32,uint64_t a33,int *a34)
{
  unsigned int v34;
  int v35;
  unsigned int v36;
  int v37;
  uint64_t v38;
  unsigned int v39;
  int v40;
  int v41;
  unsigned int v42;

  if (v36 >= v39)
    v40 = *a34 + 1;
  else
    v40 = v37;
  *a34 = v40;
  v41 = (((v34 >> 11) ^ 0xA7FE2) - 2 * (((v34 >> 11) ^ 0xA7FE2) & 0x1F107B ^ (v34 >> 11) & 0x19) + a15) ^ v34;
  v42 = (((v41 << 7) & 0x9D2C5680 ^ v41) << 15) & 0xEFC60000 ^ (v41 << 7) & 0x9D2C5680 ^ v41;
  *(_DWORD *)(*a27 + a32) ^= v42 ^ (v42 >> 18);
  return (*(uint64_t (**)(void))(v38 + 8 * ((v35 - 2076069550) ^ (8 * (a32 > 0x1FB)))))();
}

void sub_1D24AF194()
{
  JUMPOUT(0x1D24AE3C8);
}

void sub_1D24AF1A8()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
}

void sub_1D24B5788(uint64_t a1)
{
  int v1;
  int v2;

  v1 = 3804331 * (a1 ^ 0x2E4183CC);
  v2 = *(_DWORD *)(a1 + 12) + v1;
  __asm { BR              X14 }
}

uint64_t sub_1D24B583C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  unsigned int v5;
  int v7;
  uint64_t v8;
  int v9;

  v5 = 1225351577 * ((&v7 & 0x17A97877 | ~(&v7 | 0x17A97877)) ^ 0xCBCC5F9E);
  v7 = (v1 - ((v4 + v3 + 81901625) & 0x6C7E1F32) + 951053887) ^ v5;
  v9 = v5 + v3 + 10;
  v8 = v2;
  return ((uint64_t (*)(int *))(*(_QWORD *)(a1 + 8 * (v3 - 1250)) - 4))(&v7);
}

void sub_1D24B5984(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)a1 ^ (1178560073 * ((a1 - 594316138 - 2 * (a1 & 0xDC937496)) ^ 0x71044833));
  v2 = *(_QWORD *)(a1 + 8);
  ((void (*)(char *, void (*)()))*(&off_1E93A7480 + v1 - 49))((char *)*(&off_1E93A7480 + v1 - 105) - 12, sub_1D24DA534);
  __asm { BR              X11 }
}

uint64_t sub_1D24B5A4C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((292 * (*(_QWORD *)(*(_QWORD *)(v1 + 8 * (v2 - 92)) - 4) == 0)) | v2))
                            - (v2 + 292)
                            + 443))();
}

uint64_t sub_1D24B5A90@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 - 306)))(v1);
}

void pggRSNuJfiTW0g(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  int v3;

  if (a1)
    v2 = a2 == 0;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_1D24B5B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;

  a16 = 3804331
      * (((&a15 | 0x2DFEBACD) - &a15 + (&a15 & 0xD2014530)) ^ 0x3BF3901)
      - 504207030;
  v19 = sub_1D24DA9AC(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17 + 8 * ((14 * (a15 != ((v16 - 647) ^ v18))) | 0x281u)) - 8))(v19);
}

uint64_t sub_1D24B5BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  a15 = &STACK[0x5D7F2CB27906C8C5];
  a17 = v19
      - 460628867
      * ((((&a15 | 0x79A029F4) ^ 0xFFFFFFFE) - (~&a15 | 0x865FD60B)) ^ 0xCAC95476)
      - 181;
  sub_1D24C37A0((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(1889256331 - (v19 + 1889255688) + *(_QWORD *)(v18 + 8 * ((1847 * (a16 == v17 + (v19 ^ 0x756) - 1497)) ^ v19)) + 4))(v20, v21, v22, v23, v24, v25, v26, v27);
}

uint64_t sub_1D24B5C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, int a17, uint64_t a18, int a19, unint64_t *a20)
{
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;

  v23 = 1374699841 * ((&a15 - 692440864 - 2 * ((unint64_t)&a15 & 0xD6BA30E0)) ^ 0xBB4E28E9);
  a15 = v23 + 2061378286;
  a16 = (v22 - 2024874580) ^ v23;
  a17 = -586213626 - v23;
  a18 = a11;
  a20 = &STACK[0x308D9258D9195691];
  v24 = sub_1D24DA6EC((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21 + 8 * (((a19 == v20) * ((v22 - 842) ^ 0x28B)) ^ v22))
                                          - (v22 ^ 0x6D2u)
                                          + 771))(v24);
}

uint64_t sub_1D24B5D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, unint64_t *a17, uint64_t a18)
{
  int v18;
  uint64_t v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;

  a15 = (v21 + 158) ^ (((&a15 + 1783994424 - 2 * ((unint64_t)&a15 & 0x6A559838)) ^ 0x7A18031) * v20);
  a17 = &STACK[0x5709FBB830BDBF6C];
  a18 = a12;
  v23 = ((uint64_t (*)(int *))(*(_QWORD *)(v22 + 8 * (int)(v21 - 562)) - 4))(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * ((1707 * (a16 == ((v21 + 209580754) & 0xFFB ^ (v18 - 985)))) ^ v21))
                                          - 8))(v23);
}

uint64_t sub_1D24B5E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v14;
  uint64_t v15;
  unsigned int v16;

  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (((499 * (v16 ^ 0x308) + 125) * (a14 == v14)) ^ v16)) - 8))();
}

uint64_t sub_1D24B5E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, unint64_t *a17, unint64_t *a18, unsigned int a19)
{
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;

  v23 = v21 ^ 0x1D8;
  a16 = a12;
  a17 = &STACK[0x4876C81C89355A15];
  a19 = (v23 - 123) ^ (1225351577
                     * ((((2 * &a15) | 0x454074FC) - &a15 - 580926078) ^ 0x13AE268));
  a18 = &STACK[0x47D9D7009185E23];
  v24 = ((uint64_t (*)(int *))(*(_QWORD *)(v22 + 8 * (v23 - 607)) - 12))(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * (((a15 != v19) * (41 * (v23 ^ 0x2C0) - 307)) ^ v23))
                                          - ((v23 ^ 0x2C0u)
                                           + 1478)
                                          + 1489))(v24);
}

uint64_t sub_1D24B5F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, int a16, uint64_t a17)
{
  int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;

  a17 = a12;
  a15 = v19 + 3804331 * (((&a15 | 0xACDD9CED) + (~&a15 | 0x53226312)) ^ 0x829C1F20) - 226;
  v20 = sub_1D24BC170((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18 + 8 * (((a16 == v17) * (v19 + 931)) ^ v19)) - 8))(v20);
}

uint64_t sub_1D24B5F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v14;
  uint64_t v15;
  unsigned int v16;

  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (((a14 == v14) * ((v16 - 1801733394) & 0x447DF ^ 0x8D)) ^ v16))
                            - 8))();
}

uint64_t sub_1D24B5FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  unsigned int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  _BOOL4 v17;

  v17 = (*(uint64_t (**)(_QWORD, uint64_t))(v16 + 8 * (v15 - 722)))(a13 ^ v13, 691728023) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((v17 * (((v15 ^ 0x6D2) - 256) ^ (v15 - 453))) ^ v15)) - 8))();
}

uint64_t sub_1D24B601C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int v13;
  uint64_t v14;
  int v15;
  int v16;

  v16 = (a13 ^ v13) - ((((v15 + 1298) | 0xA1) ^ 0x7E10749D) & (2 * (a13 ^ v13))) - 1089980110;
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * ((1014
                                * ((v15 ^ 0x22105342 ^ (2 * v16) & 0xA29D5B96) + (v16 ^ 0x6E4694F9) + 1861875646 != 1078502793)) ^ v15)))();
}

uint64_t sub_1D24B60B4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((v1 - 620) | 0x10) - 1176) * ((v2 + v0 + 783372853) > 7)) ^ v1))
                            + 1889256331
                            - ((v1 + 1082309785) | 0x30190005u)))();
}

uint64_t sub_1D24B6128(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (57 * ((unint64_t)(v1 - a1) < 0x20))))
                            - (((v2 ^ 0x709BC70Au) - 1889254722) ^ 0x651)))();
}

uint64_t sub_1D24B6178(uint64_t a1, int a2, uint64_t a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (int)((((a2 + 47780962) & 0xFD26E5DF ^ 0x64) * (v4 < 0x20)) ^ a2))
                            - ((a2 - v3 - 1704) ^ (unint64_t)(a3 + 8))))();
}

uint64_t sub_1D24B61C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v15 = v11 + ((v13 - a8) ^ (v10 - 418));
  v16 = *(_OWORD *)(v9 + v15 - 15);
  v17 = *(_OWORD *)(v9 + v15 - 31);
  v18 = a1 + v15;
  *(_OWORD *)(v18 - 15) = v16;
  *(_OWORD *)(v18 - 31) = v17;
  return (*(uint64_t (**)(void))(v14 + 8 * ((109 * ((v12 & 0xFFFFFFE0) == 32)) ^ (v8 + v13 + 776))))();
}

void sub_1D24B6220()
{
  JUMPOUT(0x1D24B61E4);
}

uint64_t sub_1D24B622C()
{
  unsigned int v0;
  int v1;
  void (*v2)(_DWORD *);
  int v3;
  uint64_t v5;
  _DWORD v6[2];
  uint64_t v7;

  v7 = v5;
  v6[1] = v3
        + 535753261 * ((1855094208 - (v6 | 0x6E927DC0) + (v6 | 0x916D823F)) ^ 0x9B998C10)
        + 686;
  v2(v6);
  return v1 ^ v0;
}

void sub_1D24B64CC(uint64_t a1, uint64_t a2)
{
  int v3;
  _BOOL4 v4;
  int v5;
  _BYTE v6[4];
  int v7;
  unint64_t *v8;
  int v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  v3 = 628203409 * ((v6 - 2049255028 - 2 * ((unint64_t)v6 & 0x85DAD98C)) ^ 0x752D5BF);
  v8 = &STACK[0x5C256D3C5DC22354];
  v9 = v3 - 1882357464;
  v7 = 1023944139 - v3;
  sub_1D24A6CC8((uint64_t)v6);
  v4 = *(_DWORD *)(a2 + 16) + 2125529242 + ((2 * v5) & 0x5E ^ 8) + (v5 & 0x3F ^ 0x6FD5FFEBu) > 0xFFFFFFBF;
  __asm { BR              X9 }
}

uint64_t sub_1D24B6678@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  uint64_t v7;
  _BOOL4 v8;

  v8 = v6 - 1120430380 < (a6 - 1217712019);
  if ((a6 - 1217712019) < 0xC8E42FA4 != v6 - 1120430380 < ((a1 - 105) ^ 0xC8E42F94))
    v8 = (a6 - 1217712019) < 0xC8E42FA4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((42 * !v8) ^ a1)) - 8))();
}

uint64_t sub_1D24B66E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v15 = 1224239923 * ((v14 - 120) ^ 0xF2B3FDD7);
  *(_QWORD *)(v14 - 120) = a10;
  *(_DWORD *)(v14 - 112) = v15 + a3 + 355;
  *(_DWORD *)(v14 - 108) = (a13 + 461214272) ^ v15;
  v16 = sub_1D24C871C(v14 - 120);
  v17 = *(_DWORD *)(v14 - 152) & 0x3F;
  *(_BYTE *)(v14 - 220 + (v17 ^ 4)) = -25;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13 + 8 * ((1264 * ((v17 ^ 4) > 0x37)) ^ a3))
                                          - 12))(v16);
}

uint64_t sub_1D24B67B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v7 + 8 * (v6 ^ (2009 * (v5 == 63))))
                                          - ((9 * (v6 ^ (a5 + 207) ^ (a5 + 57))) ^ 0x32DLL)))(-1328523229);
}

uint64_t sub_1D24B6804(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;
  _BOOL4 v6;

  v6 = ((5 * (v4 ^ 0x3E9) - 941) ^ v3) < 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((2 * v6) | (4 * v6)) ^ v4))
                            + 3042266504
                            - (v4 - a3 + 67)))();
}

uint64_t sub_1D24B684C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 220 + a2 + a1) = 0x6767676767676767;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1750 * ((v2 & 0x38) == 8)) ^ v3))
                            - (((v3 - 966) | 0x305u) ^ 0x32FLL)))();
}

void sub_1D24B68A0()
{
  JUMPOUT(0x1D24B6880);
}

uint64_t sub_1D24B68A8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W8>)
{
  unsigned int v4;
  int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  unsigned int v12;
  int v13;
  _BOOL4 v14;

  v11 = v4 < v7;
  *(_BYTE *)(v10 - 220 + ((a4 - 1066924571) & 0x3F97F9B1 ^ 0x9CAE114C) + a3) = *(_BYTE *)(v8 + (v6 + a1))
                                                                             - ((2
                                                                               * *(_BYTE *)(v8 + (v6 + a1))) & 0xCF)
                                                                             + 103;
  v12 = v6 + 1 + a2;
  v13 = v11 ^ (v12 < v7);
  v14 = v12 < v4;
  if (!v13)
    v11 = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((!v11 * v5) ^ a4)) - 8))();
}

uint64_t sub_1D24B693C@<X0>(int a1@<W2>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (a2 ^ (1742 * (v3 == v2))))
                            + 3042266504
                            - ((a2 - a1 + 1244140160) & 0xB5D7EDBC)))();
}

uint64_t sub_1D24B6990(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int32x4_t a27,int32x4_t a28,int32x4_t a29,int32x4_t a30)
{
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t (*v39)(__n128, __n128, __n128, __n128);
  __n128 v40;
  const char *v41;
  __n128 v42;
  __n128 v43;
  __n128 v44;
  unsigned int v45;
  uint64_t v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  uint64_t v51;
  int v52;
  int v53;
  uint8x16_t v54;
  uint16x8_t v55;
  int8x16_t v56;
  uint16x8_t v57;
  int8x16_t v58;
  uint8x16_t v59;
  uint16x8_t v60;
  uint16x8_t v61;
  int8x16_t v62;
  int8x16_t v63;
  int8x16_t v64;
  int8x16_t v65;
  uint8x16_t v66;
  int8x16_t v69;
  int8x16_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  unsigned int v78;
  unsigned int v79;
  int v81;
  uint8x16_t v82;
  uint16x8_t v83;
  uint16x8_t v84;
  uint8x16_t v85;
  uint8x16_t v90;
  uint16x8_t v91;
  uint16x8_t v92;
  uint64_t v93;
  _DWORD *v94;
  int v95;
  int v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  int8x16x4_t v101;
  int8x16x4_t v102;

  v39 = (uint64_t (*)(__n128, __n128, __n128, __n128))(*(_QWORD *)(v31 + 8 * (a3 + v30 - 820)) - 12);
  v40 = (__n128)vdupq_n_s32(0x10657DF6u);
  v41 = (const char *)(v38 - 220);
  v42 = (__n128)vdupq_n_s32(0x832BEFBu);
  v43.n128_u64[0] = 0x6767676767676767;
  v43.n128_u64[1] = 0x6767676767676767;
  v44.n128_u64[0] = 0xCECECECECECECECELL;
  v44.n128_u64[1] = 0xCECECECECECECECELL;
  v46 = *(unsigned int *)(v38 - 148);
  v45 = *(_DWORD *)(v38 - 144);
  v47 = *(_DWORD *)(v38 - 148);
  v48 = v45;
  v50 = *(_DWORD *)(v38 - 140);
  v49 = *(_DWORD *)(v38 - 136);
  v51 = v50;
  v52 = *(_BYTE *)(v38 - 124) ^ 0xC7;
  LODWORD(v98) = *(unsigned __int8 *)(v38 - 124) ^ 0xFFFFFFC7;
  if (v52 == 2)
  {
    a19 = *(_QWORD *)(v31 + 8 * (a3 + v30 - 820)) - 12;
    v81 = 298 * (a5 ^ (a5 + 3));
    v102 = vld4q_s8(v41);
    v82 = (uint8x16_t)veorq_s8(v102.val[0], (int8x16_t)v43);
    v83 = vmovl_u8(*(uint8x8_t *)v82.i8);
    v84 = vmovl_high_u8(v82);
    v85 = (uint8x16_t)veorq_s8(v102.val[1], (int8x16_t)v43);
    _Q21 = vmovl_u8(*(uint8x8_t *)v85.i8);
    _Q20 = vmovl_high_u8(v85);
    __asm
    {
      SHLL2           V22.4S, V20.8H, #0x10
      SHLL2           V23.4S, V21.8H, #0x10
    }
    v90 = (uint8x16_t)veorq_s8(v102.val[2], (int8x16_t)v43);
    v91 = vmovl_high_u8(v90);
    v92 = vmovl_u8(*(uint8x8_t *)v90.i8);
    v102.val[0] = veorq_s8(v102.val[3], (int8x16_t)v43);
    v102.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v102.val[0]);
    v102.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v102.val[1]);
    v102.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v102.val[0].i8);
    v102.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v102.val[0]);
    v102.val[0] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v92.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v83.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v102.val[0].i8));
    v102.val[3] = vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v92, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v83), 0x18uLL)), v102.val[3]);
    v102.val[1] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v91.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v84.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v102.val[1].i8));
    v102.val[2] = vorrq_s8(vorrq_s8(vorrq_s8(_Q22, (int8x16_t)vshll_high_n_u16(v91, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v84), 0x18uLL)), v102.val[2]);
    a29 = vaddq_s32(vsubq_s32((int32x4_t)v102.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v102.val[1], (int32x4_t)v102.val[1]), (int8x16_t)v40)), (int32x4_t)v42);
    a30 = vaddq_s32(vsubq_s32((int32x4_t)v102.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v102.val[2], (int32x4_t)v102.val[2]), (int8x16_t)v40)), (int32x4_t)v42);
    a27 = vaddq_s32(vsubq_s32((int32x4_t)v102.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v102.val[0], (int32x4_t)v102.val[0]), (int8x16_t)v40)), (int32x4_t)v42);
    a28 = vaddq_s32(vsubq_s32((int32x4_t)v102.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v102.val[3], (int32x4_t)v102.val[3]), (int8x16_t)v40)), (int32x4_t)v42);
    v93 = (v81 - 254) | 0x120u;
    v94 = (_DWORD *)&a27 + v35 + 83539809;
    v95 = *(v94 - 8) ^ *(v94 - 3);
    v96 = *(v94 - 16);
    HIDWORD(v97) = v96 ^ (v95 + v34 - ((2 * v95) & 0x10657DF6)) ^ *((_DWORD *)&a27 + v35 + v93 + 83538867) ^ v34;
    LODWORD(v97) = v96 ^ (v95 + v34 - ((2 * v95) & 0x10657DF6)) ^ *((_DWORD *)&a27 + v35 + v93 + 83538867);
    *v94 = (v97 >> 31) + v34 - ((2 * (v97 >> 31)) & 0x10657DF6);
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v31 + 8 * ((1484 * (v36 == 83539746)) ^ v81)) - 12))(v51);
  }
  else if (v52 == 1)
  {
    v99 = __PAIR64__(v45, v46);
    v100 = __PAIR64__(v49, v50);
    a19 = *(_QWORD *)(v31 + 8 * (a3 + v30 - 820)) - 12;
    v101 = vld4q_s8(v41);
    v53 = 9 * (a5 ^ (a5 + 54));
    v54 = (uint8x16_t)veorq_s8(v101.val[0], (int8x16_t)v43);
    v55 = vmovl_high_u8(v54);
    v56 = (int8x16_t)vmovl_high_u16(v55);
    v57 = vmovl_u8(*(uint8x8_t *)v54.i8);
    v58 = (int8x16_t)vmovl_high_u16(v57);
    v59 = (uint8x16_t)veorq_s8(v101.val[1], (int8x16_t)v43);
    v60 = vmovl_u8(*(uint8x8_t *)v59.i8);
    v61 = vmovl_high_u8(v59);
    v62 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v60.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v57.i8));
    v63 = vorrq_s8((int8x16_t)vshll_high_n_u16(v60, 8uLL), v58);
    v64 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v61.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v55.i8));
    v65 = vorrq_s8((int8x16_t)vshll_high_n_u16(v61, 8uLL), v56);
    v66 = (uint8x16_t)veorq_s8(v101.val[2], (int8x16_t)v43);
    _Q21 = (int8x16_t)vmovl_high_u8(v66);
    _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v66.i8);
    v69 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
    __asm { SHLL2           V20.4S, V20.8H, #0x10 }
    v74 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    v101.val[0] = veorq_s8(v101.val[3], (int8x16_t)v43);
    v101.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v101.val[0].i8);
    v101.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v101.val[0]);
    v101.val[2] = vorrq_s8(vorrq_s8(v62, v69), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v101.val[1].i8), 0x18uLL));
    v101.val[1] = vorrq_s8(vorrq_s8(v63, _Q20), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v101.val[1]), 0x18uLL));
    v101.val[3] = vorrq_s8(vorrq_s8(v64, v74), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v101.val[0].i8), 0x18uLL));
    v101.val[0] = vorrq_s8(vorrq_s8(v65, _Q21), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v101.val[0]), 0x18uLL));
    a29 = vaddq_s32(vsubq_s32((int32x4_t)v101.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v101.val[3], (int32x4_t)v101.val[3]), (int8x16_t)v40)), (int32x4_t)v42);
    a30 = vaddq_s32(vsubq_s32((int32x4_t)v101.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v101.val[0], (int32x4_t)v101.val[0]), (int8x16_t)v40)), (int32x4_t)v42);
    a27 = vaddq_s32(vsubq_s32((int32x4_t)v101.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v101.val[2], (int32x4_t)v101.val[2]), (int8x16_t)v40)), (int32x4_t)v42);
    a28 = vaddq_s32(vsubq_s32((int32x4_t)v101.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v101.val[1], (int32x4_t)v101.val[1]), (int8x16_t)v40)), (int32x4_t)v42);
    v75 = (v53 - 1575003951) & 0x5DE0A73F;
    v76 = (v75 ^ (v35 + 777)) + v36 - 16;
    v77 = (char *)*(&off_1E93A7480 + v53 - 648) - 12;
    v78 = (v47 ^ v32)
        + v33
        + ((v48 ^ 0x85463422) & (v49 ^ v32) | (v48 ^ v32) & (v50 ^ v32))
        + *((_DWORD *)*(&off_1E93A7480 + (v53 ^ 0x357)) + v76 - 3)
        + (a27.i32[(v77[v76] - 59)] ^ v34);
    LOBYTE(v76) = *((_BYTE *)*(&off_1E93A7480 + (v53 ^ 0x32E)) + v76 - 4) - 53;
    v79 = (v78 + v32 - (v37 & (2 * v78))) ^ v32;
    HIDWORD(v98) = HIDWORD(a12) - 1320067525;
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t (**)(int, int, int, int, int, int, int, int, uint64_t, uint64_t), uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * v53))(v51, v79 << v76, -v76, ((v79 << v76) | (v79 >> -(char)v76))+ (v48 ^ v32)+ v32- (v37 & (2 * (((v79 << v76) | (v79 >> -(char)v76)) + (v48 ^ v32)))), &off_1E93A7480, v46, v75, v77, a9, a10, a11, a12, a13, a14, a15, v98,
             v99,
             v100,
             v39,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26);
  }
  else
  {
    *(_DWORD *)(v38 - 148) = (v47 ^ v32) + (v46 ^ v32) + v32 - (v37 & (2 * ((v47 ^ v32) + (v46 ^ v32))));
    *(_DWORD *)(v38 - 144) = 2 * (v45 ^ v32) + v32 - (v37 & (4 * (v45 ^ v32)));
    *(_DWORD *)(v38 - 140) = 2 * (v50 ^ v32) + v32 - (v37 & (4 * (v50 ^ v32)));
    *(_DWORD *)(v38 - 136) = 2 * (v49 ^ v32) + v32 - (v37 & (4 * (v49 ^ v32)));
    return v39(v40, v42, v43, v44);
  }
}

uint64_t sub_1D24B7710(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, int a17, unsigned int a18)
{
  uint64_t v18;
  BOOL v19;

  if (a18 < 0xC2CA5D72 != (a15 - 1222785822) < 0xC2CA5D72)
    v19 = (a15 - 1222785822) < 0xC2CA5D72;
  else
    v19 = a15 - 1222785822 > a18;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8
                                                      * ((1618
                                                        * (((((a3 + a5 - 83) | 0x88) + 74) ^ v19) & 1)) ^ (a3 + a5 - 277)))
                                          - 12))(4099106608);
}

uint64_t sub_1D24B77AC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((((v6 - 1860894035) | 0x24404800) ^ (a5 - 1053))
                                * (v5 + a1 + 63 >= (v5 + a1))) ^ v6)))();
}

uint64_t sub_1D24B77F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  return (*(uint64_t (**)(void))(v16
                              + 8
                              * (((((v14 ^ (a5 + 483) ^ ((unint64_t)(a13 + v13 - v15) < 0x10)) & 1) == 0)
                                * ((v14 - a3 + 129) ^ (a5 - 285))) ^ v14)))();
}

uint64_t sub_1D24B783C(int a1, double a2, double a3, int8x16_t a4, int8x16_t a5, uint64_t a6, int a7)
{
  int v7;
  int8x16_t *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *v8 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v10 + (v7 + a1)), vandq_s8(vaddq_s8(*(int8x16_t *)(v10 + (v7 + a1)), *(int8x16_t *)(v10 + (v7 + a1))), a5)), a4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (a7 + v9 - 253)) - 4))();
}

uint64_t sub_1D24B78A0@<X0>(int a1@<W0>, int a2@<W2>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v8 = *(_BYTE *)(v6 + (((a2 + v3 - 812) | 1) ^ (a1 - 39)) + v4);
  *(_BYTE *)(v5 + a3) = v8 - ((2 * v8) & 0xCF) + 103;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((4 * (a3 == 63)) | (16 * (a3 == 63))) ^ (a2 + v3 + 392))) - 4))();
}

uint64_t sub_1D24B7900@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3
                                                               + 8
                                                               * ((529 * ((a3 - 1328523229) < 0x38)) ^ (a2 + v4 - 424)))
                                                   - ((v4 - 188120028) & 0x55E12FFF ^ 0x1B8)))(a1, -1328523229);
}

uint64_t sub_1D24B7964@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + a2;
  v5 = 56;
  if ((unint64_t)(v4 + 1) > 0x38)
    v5 = v4 + 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((v5 - (unint64_t)a2 + 1328523229 < 8) ^ (v2 + 67)) & 1)
                                          * ((v2 ^ 0x4E3) - 349)) ^ v2))
                            - 12))();
}

uint64_t sub_1D24B79C0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + v4 - 220 - 436 + ((v0 - 707) | 0x80)) = 0x6767676767676767;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1564 * ((v1 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ v0)) - 8))();
}

uint64_t sub_1D24B7A10(double a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(double *)(v5 + (v2 | 0x80)) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v4 == 0) * v3) ^ v1)) - 8))();
}

uint64_t sub_1D24B7A3C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 | (8 * (v0 == v1))))
                            + 3042266504
                            - ((v2 - 1254078900) | 0x150590u)
                            - ((v2 - 109) | 0x410u)
                            + 1363))();
}

void sub_1D24B7A8C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v5;
  int v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned int v13;
  unint64_t v14;

  v6 = *(unsigned __int8 *)(v5 - 124) ^ 0xC7;
  if (v6 == 1)
  {
    v7 = a3 + a5 + 48;
    v13 = *(_DWORD *)(v5 - 156);
    v12 = *(_DWORD *)(v5 - 152);
    *(_BYTE *)(v5 - 164) = ((8 * v12) ^ 0x20) + (v7 ^ 0x6B ^ (2 * ((8 * v12) ^ 0x20)) & 0xC0) + 104;
    v11 = -50;
    *(_BYTE *)(v5 - 163) = ((v12 >> 5) ^ 0x98) - ((v12 >> 4) & 0xCE) + 103;
    *(_BYTE *)(v5 - 162) = ((v12 >> 13) ^ 0xC7) - ((2 * ((v12 >> 13) ^ 0xC7)) & 0xCF) + 103;
    *(_BYTE *)(v5 - 161) = ((v12 >> 21) ^ 0x30) - 2 * (((v12 >> 21) ^ 0x30) & 0xEF ^ (v12 >> 21) & 8) + 103;
    HIDWORD(v14) = v13 ^ 0x12;
    LODWORD(v14) = v12;
    *(_BYTE *)(v5 - 160) = (v14 >> 29) - ((2 * (v14 >> 29)) & 0xCF) + 103;
    *(_BYTE *)(v5 - 159) = ((v13 >> 5) ^ 0xD) - ((2 * ((v13 >> 5) ^ 0xD)) & 0xCF) + 103;
    *(_BYTE *)(v5 - 158) = ((v13 >> 13) ^ 0xFD) - ((2 * ((v13 >> 13) ^ 0xFD)) & 0xCF) + 103;
    v10 = (v13 >> 21) ^ 0xFFFFFFF4;
  }
  else
  {
    if (v6 != 2)
      goto LABEL_6;
    v7 = a5 ^ (a5 + 116);
    v10 = *(_DWORD *)(v5 - 156);
    v8 = *(_DWORD *)(v5 - 152);
    *(_BYTE *)(v5 - 164) = ((v10 >> (v7 ^ 0x81)) ^ 0xF4)
                         - 2 * (((v10 >> (v7 ^ 0x81)) ^ 0xF4) & 0xEF ^ (v10 >> (v7 ^ 0x81)) & 8)
                         + 103;
    *(_BYTE *)(v5 - 163) = ((v10 >> 13) ^ 0xFD) - ((2 * ((v10 >> 13) ^ 0xFD)) & 0xCF) + 103;
    HIDWORD(v9) = v10 ^ 0x12;
    LODWORD(v9) = v8;
    *(_BYTE *)(v5 - 162) = ((v10 >> 5) ^ 0xD) - ((2 * ((v10 >> 5) ^ 0xD)) & 0xCF) + 103;
    *(_BYTE *)(v5 - 161) = (v9 >> 29) - ((2 * (v9 >> 29)) & 0xCF) + 103;
    *(_BYTE *)(v5 - 160) = ((v8 >> 21) ^ 0x30) - ((2 * ((v8 >> 21) ^ 0x30)) & 0xCF) + 103;
    *(_BYTE *)(v5 - 159) = ((v8 >> 13) ^ 0xC7) - ((2 * ((v8 >> 13) ^ 0xC7)) & 0xCF) + 103;
    *(_BYTE *)(v5 - 158) = ((v8 >> 5) ^ 0x98) - ((v8 >> 4) & 0xCE) + 103;
    LOBYTE(v10) = (8 * v8) ^ 0x20;
    v11 = -64;
  }
  *(_BYTE *)(v5 - 157) = v10 + v7 - a3 - 48 - (v11 & (2 * v10)) - 41;
LABEL_6:
  JUMPOUT(0x1D24B6C14);
}

uint64_t sub_1D24B7EEC@<X0>(uint64_t a1@<X3>, unsigned int a2@<W8>)
{
  int v2;
  unsigned int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  _BOOL4 v9;
  _BOOL4 v10;

  v7 = *(_DWORD *)(v6 - 220 + ((v4 + v2) & 0xFFFFFFFC) + 72);
  *(_BYTE *)(a1 + (v4 + v2 + 1)) = (BYTE2(v7) ^ 0xB9) - ((2 * (BYTE2(v7) ^ 0xB9)) & 0xCF) + 103;
  *(_BYTE *)(a1 + (v4 + v2)) = (HIBYTE(v7) ^ 0x7A)
                                           - ((((v3 - 84) | 0x80) + 62) & (2 * (HIBYTE(v7) ^ 0x7A)))
                                           + 103;
  *(_BYTE *)(a1 + (v4 + v2 + 2)) = (BYTE1(v7) ^ 0xCB) - ((2 * (BYTE1(v7) ^ 0xCB)) & 0xCF) + 103;
  *(_BYTE *)(a1 + (v4 + v2 + 3)) = v7 ^ 0xBA;
  v8 = *(_DWORD *)(v6 - 128) - 606903098;
  v9 = v8 < a2;
  v10 = v4 - 1441727671 < v8;
  if (v4 - 1441727671 < a2 != v9)
    v10 = v9;
  return (*(uint64_t (**)(void))(v5 + 8 * ((28 * v10) ^ v3)))();
}

void sub_1D24B8090()
{
  JUMPOUT(0x1D24B8058);
}

uint64_t sub_1D24B809C()
{
  return 0;
}

void sub_1D24B80DC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X8 }
}

uint64_t sub_1D24B8164(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1654 * (**(_BYTE **)(a2 + 8) == 0)) ^ 0x385u)) - 8))();
}

uint64_t sub_1D24B81C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;

  *(_QWORD *)(*(_QWORD *)(a16 + 96) + 504) = v18 + 1;
  *(_DWORD *)(*(_QWORD *)(a16 + 96) + 496) = a18 - 1;
  v22 = 628203409 * ((((v21 - 160) | 0xFE2E213D) - (v21 - 160) + ((v21 - 160) & 0x1D1DEC0)) ^ 0x7CA62D0E);
  *(_QWORD *)(v21 - 152) = &STACK[0x5C256D3C5DC223DC];
  *(_DWORD *)(v21 - 144) = v22 + v19 - 1882357813;
  *(_DWORD *)(v21 - 156) = 1023944139 - v22;
  v23 = sub_1D24A6CC8(v21 - 160);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * ((1421
                                              * (a18
                                               + 291141084
                                               + (((STACK[0x2F0] & 0x3F) << (((v19 - 61) | 0x11) ^ 0x30)) ^ 8)
                                               + (STACK[0x2F0] & 0x3F ^ 0x895EFBFB) < ((v19 + 976139144) & 0xC5D14F9B ^ 0xFFFFFB41))) ^ v19)))(v23);
}

uint64_t sub_1D24B83C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;

  v9 = v7 + (((a4 - 639) | 0x1B1) ^ 0x76A103C7 ^ (a4 - 461766027) & 0x1B85FD7F);
  if (v9 <= 0x40)
    v9 = 64;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((312 * (a5 - v5 - v6 + v9 > 0xE)) | a4)) - 12))();
}

uint64_t sub_1D24B8458(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;

  v11 = v6 + v5;
  v12 = v11 + v7 + ((v8 + 2048564931) ^ 0x7A1AA08A);
  if (v12 <= 0x40)
    v12 = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8
                                        * (int)(((a5 - v11 < a1 + v12) * (((v8 + 2048564931) & 0x85E55DFF) - 66)) ^ v8))
                            - 12))();
}

uint64_t sub_1D24B84B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  int v19;
  int v20;
  uint64_t v21;

  return ((uint64_t (*)(void))(*(_QWORD *)(v21
                                        + 8
                                        * ((120
                                          * ((unint64_t)&STACK[0x2AC] + ~a18 + (v19 + v18 + 946) < ((((v20 - 3) | 0x80u) + 509) ^ 0x3A3uLL))) ^ v20))
                            - 4))();
}

uint64_t sub_1D24B8504@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int8x16_t *v6;
  int8x16_t v7;
  int8x16_t v8;

  v7.i64[0] = 0xCECECECECECECECELL;
  v7.i64[1] = 0xCECECECECECECECELL;
  v8.i64[0] = 0x6767676767676767;
  v8.i64[1] = 0x6767676767676767;
  *(int8x16_t *)(v2 + (v1 + a1)) = vaddq_s8(vsubq_s8(*v6, vandq_s8(vaddq_s8(*v6, *v6), v7)), v8);
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((((v4 + 1) & 0x1FFFFFFF0) != 16)
                                     * (3 * ((v3 + 45566023) & 0xFD48B7B7 ^ 0x1DE) - 318)) ^ (v3 + 45566023) & 0xFD48B7B7)))();
}

void sub_1D24B8588()
{
  JUMPOUT(0x1D24B8550);
}

uint64_t sub_1D24B8594(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (a1 ^ (752 * (v1 == v2)))) - (((a1 ^ 0x170u) + 898) ^ 0x3B7)))();
}

uint64_t sub_1D24B85D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int32x4_t a35,int32x4_t a36,int32x4_t a37,int32x4_t a38)
{
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t (*v45)(__n128, __n128, __n128, __n128);
  __n128 v46;
  __n128 v47;
  __n128 v48;
  __n128 v49;
  unsigned int v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  uint8x16_t v59;
  uint16x8_t v60;
  int8x16_t v61;
  uint16x8_t v62;
  int8x16_t v63;
  uint8x16_t v64;
  uint16x8_t v65;
  uint16x8_t v66;
  int8x16_t v67;
  int8x16_t v68;
  int8x16_t v69;
  int8x16_t v70;
  uint8x16_t v71;
  int8x16_t v74;
  int8x16_t v79;
  uint8x16_t v81;
  uint16x8_t v82;
  uint16x8_t v83;
  uint8x16_t v84;
  uint8x16_t v89;
  uint16x8_t v90;
  uint16x8_t v91;
  _DWORD *v92;
  int v93;
  uint64_t v94;
  int v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  int8x16x4_t v101;
  int8x16x4_t v102;

  v45 = (uint64_t (*)(__n128, __n128, __n128, __n128))(*(_QWORD *)(v43 + 8 * v38) - 12);
  LODWORD(v98) = 1928183299;
  v46.n128_u64[0] = 0x6767676767676767;
  v46.n128_u64[1] = 0x6767676767676767;
  v47 = (__n128)vdupq_n_s32(0x10657DF6u);
  v48 = (__n128)vdupq_n_s32(0x832BEFBu);
  LODWORD(a27) = 270;
  a28 = v41 - 16;
  v49.n128_u64[0] = 0xCECECECECECECECELL;
  v49.n128_u64[1] = 0xCECECECECECECECELL;
  LODWORD(a26) = 59;
  v50 = STACK[0x2F4];
  v51 = STACK[0x2F8];
  v52 = LODWORD(STACK[0x2F4]);
  v53 = LODWORD(STACK[0x2F8]);
  v54 = STACK[0x2FC];
  v55 = STACK[0x300];
  v56 = STACK[0x2FC];
  v57 = STACK[0x300];
  HIDWORD(v97) = LOBYTE(STACK[0x30C]) ^ 0xFFFFFFC7;
  v58 = LOBYTE(STACK[0x30C]) ^ 0xC7;
  if (v58 == 2)
  {
    v99 = __PAIR64__(v51, v50);
    v100 = __PAIR64__(v55, v54);
    v102 = vld4q_s8((const char *)&STACK[0x2AC]);
    LODWORD(v97) = STACK[0x304];
    v81 = (uint8x16_t)veorq_s8(v102.val[0], (int8x16_t)v46);
    v82 = vmovl_u8(*(uint8x8_t *)v81.i8);
    v83 = vmovl_high_u8(v81);
    v84 = (uint8x16_t)veorq_s8(v102.val[1], (int8x16_t)v46);
    _Q21 = vmovl_u8(*(uint8x8_t *)v84.i8);
    _Q20 = vmovl_high_u8(v84);
    __asm
    {
      SHLL2           V22.4S, V20.8H, #0x10
      SHLL2           V23.4S, V21.8H, #0x10
    }
    v89 = (uint8x16_t)veorq_s8(v102.val[2], (int8x16_t)v46);
    v90 = vmovl_high_u8(v89);
    v91 = vmovl_u8(*(uint8x8_t *)v89.i8);
    v102.val[0] = veorq_s8(v102.val[3], (int8x16_t)v46);
    v102.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v102.val[0]);
    v102.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v102.val[1]);
    v102.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v102.val[0].i8);
    v102.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v102.val[0]);
    v102.val[0] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v91.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v82.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v102.val[0].i8));
    v102.val[3] = vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v91, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v82), 0x18uLL)), v102.val[3]);
    v102.val[1] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v90.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v83.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v102.val[1].i8));
    v102.val[2] = vorrq_s8(vorrq_s8(vorrq_s8(_Q22, (int8x16_t)vshll_high_n_u16(v90, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v83), 0x18uLL)), v102.val[2]);
    a37 = vaddq_s32(vsubq_s32((int32x4_t)v102.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v102.val[1], (int32x4_t)v102.val[1]), (int8x16_t)v47)), (int32x4_t)v48);
    a38 = vaddq_s32(vsubq_s32((int32x4_t)v102.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v102.val[2], (int32x4_t)v102.val[2]), (int8x16_t)v47)), (int32x4_t)v48);
    a35 = vaddq_s32(vsubq_s32((int32x4_t)v102.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v102.val[0], (int32x4_t)v102.val[0]), (int8x16_t)v47)), (int32x4_t)v48);
    a36 = vaddq_s32(vsubq_s32((int32x4_t)v102.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v102.val[3], (int32x4_t)v102.val[3]), (int8x16_t)v47)), (int32x4_t)v48);
    v92 = (_DWORD *)&a35 + v39 + 1432035360;
    v93 = *(v92 - 8) ^ *((_DWORD *)&a35 + v39 + (a27 ^ 0x9F) + 1432034956);
    v94 = *(v92 - 16);
    v95 = v94 ^ *(v92 - 14) ^ (v93 + v40 - ((2 * v93) & 0x10657DF6));
    HIDWORD(v96) = v95 ^ v40;
    LODWORD(v96) = v95;
    *v92 = (v96 >> 31) + v40 - ((2 * (v96 >> 31)) & 0x10657DF6);
    HIDWORD(v98) = HIDWORD(a17) + 229060638;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 8 * ((664 * (v41 == 1432035297)) ^ a27)))(v94, 275086838, 1, 316, v53, a6, 504348743, v52, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a3,
             v97,
             v98,
             v99,
             v100,
             v45,
             0x5100000028,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34);
  }
  else if (v58 == 1)
  {
    v101 = vld4q_s8((const char *)&STACK[0x2AC]);
    v59 = (uint8x16_t)veorq_s8(v101.val[0], (int8x16_t)v46);
    v60 = vmovl_high_u8(v59);
    v61 = (int8x16_t)vmovl_high_u16(v60);
    v62 = vmovl_u8(*(uint8x8_t *)v59.i8);
    v63 = (int8x16_t)vmovl_high_u16(v62);
    v64 = (uint8x16_t)veorq_s8(v101.val[1], (int8x16_t)v46);
    v65 = vmovl_u8(*(uint8x8_t *)v64.i8);
    v66 = vmovl_high_u8(v64);
    v67 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v65.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v62.i8));
    v68 = vorrq_s8((int8x16_t)vshll_high_n_u16(v65, 8uLL), v63);
    v69 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v66.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v60.i8));
    v70 = vorrq_s8((int8x16_t)vshll_high_n_u16(v66, 8uLL), v61);
    v71 = (uint8x16_t)veorq_s8(v101.val[2], (int8x16_t)v46);
    _Q21 = (int8x16_t)vmovl_high_u8(v71);
    _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v71.i8);
    v74 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
    __asm { SHLL2           V20.4S, V20.8H, #0x10 }
    v79 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    v101.val[0] = veorq_s8(v101.val[3], (int8x16_t)v46);
    v101.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v101.val[0].i8);
    v101.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v101.val[0]);
    v101.val[2] = vorrq_s8(vorrq_s8(v67, v74), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v101.val[1].i8), 0x18uLL));
    v101.val[1] = vorrq_s8(vorrq_s8(v68, _Q20), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v101.val[1]), 0x18uLL));
    v101.val[3] = vorrq_s8(vorrq_s8(v69, v79), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v101.val[0].i8), 0x18uLL));
    v101.val[0] = vorrq_s8(vorrq_s8(v70, _Q21), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v101.val[0]), 0x18uLL));
    a37 = vaddq_s32(vsubq_s32((int32x4_t)v101.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v101.val[3], (int32x4_t)v101.val[3]), (int8x16_t)v47)), (int32x4_t)v48);
    a38 = vaddq_s32(vsubq_s32((int32x4_t)v101.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v101.val[0], (int32x4_t)v101.val[0]), (int8x16_t)v47)), (int32x4_t)v48);
    a35 = vaddq_s32(vsubq_s32((int32x4_t)v101.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v101.val[2], (int32x4_t)v101.val[2]), (int8x16_t)v47)), (int32x4_t)v48);
    a36 = vaddq_s32(vsubq_s32((int32x4_t)v101.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v101.val[1], (int32x4_t)v101.val[1]), (int8x16_t)v47)), (int32x4_t)v48);
    return (*(uint64_t (**)(uint64_t))(v43 + 8 * ((8 * (a28 + 1 != v41)) | 0x407u)))(1432035360);
  }
  else
  {
    LODWORD(STACK[0x2F4]) = (v52 ^ v44) + (v50 ^ v44) + v44 - (v42 & (2 * ((v52 ^ v44) + (v50 ^ v44))));
    LODWORD(STACK[0x2F8]) = (v53 ^ v44) + (v51 ^ v44) + v44 - (v42 & (2 * ((v53 ^ v44) + (v51 ^ v44))));
    LODWORD(STACK[0x2FC]) = (v56 ^ v44) + (v54 ^ v44) + v44 - (v42 & (2 * ((v56 ^ v44) + (v54 ^ v44))));
    LODWORD(STACK[0x300]) = (v57 ^ v44) + (v55 ^ v44) + v44 - (v42 & (2 * ((v57 ^ v44) + (v55 ^ v44))));
    a33 = 0;
    return v45(v46, v47, v48, v49);
  }
}

uint64_t sub_1D24B91F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,unsigned int a21,unsigned int a22)
{
  int v22;
  uint64_t v23;
  _BOOL4 v24;

  if (a22 < a21 != a19 + 615275084 < ((((a6 + v22 - 56) | 0x582) + 1928181136) ^ ((a6 + v22 + 1192) | 0x31u)))
    v24 = a19 + 615275084 < ((((a6 + v22 - 56) | 0x582) + 1928181136) ^ ((a6 + v22 + 1192) | 0x31u));
  else
    v24 = a19 + 615275084 > a22;
  return (*(uint64_t (**)(void))(v23 + 8 * ((8 * v24) | (16 * v24) | (a6 + v22 + 237))))();
}

uint64_t sub_1D24B9280@<X0>(int a1@<W5>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * (((a2 + v5 + ((v2 - 703051192) & 0x29E7B5BDu) - 1385 < a2 + v5)
                                                       * (a1 + (v2 ^ (v3 + 674)) - 78)) ^ v2)))(2564783224, 1940);
}

uint64_t sub_1D24B92DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  return (*(uint64_t (**)(void))(v21
                              + 8
                              * (((a6 + ((v19 + 1224768104) | 0x104388) + 877)
                                * ((unint64_t)(~a18 + v18 - v20) > 0xF)) ^ v19)))();
}

uint64_t sub_1D24B9328@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W5>, int a4@<W6>, int a5@<W8>, int8x16_t a6@<Q0>, int8x16_t a7@<Q3>)
{
  int v7;
  int8x16_t *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  *v8 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v11 + (a5 + v10)), vandq_s8(vaddq_s8(*(int8x16_t *)(v11 + (a5 + v10)), *(int8x16_t *)(v11 + (a5 + v10))), a7)), a6);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((((v7 + a4) & a1 ^ 0x18) == 16) * a2) ^ (a3 + v7 + 812))) - 8))();
}

uint64_t sub_1D24B9388@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W5>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  *(_BYTE *)(v6 + v5) = *(_BYTE *)(v9 + (a4 + v8))
                      - ((2 * *(_BYTE *)(v9 + (a4 + v8))) & 0xCF)
                      + 103;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((a1 & ~((v4 + a3) ^ (v5 == 63))) * a2) ^ (v4 + a3 + 952))) - 8))();
}

uint64_t sub_1D24B93DC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  int v11;
  uint64_t v12;
  _BOOL4 v13;

  v13 = a1 + 296459895 < (a11 - 89754487);
  if (a11 - 89754487 < ((v11 - 1268) ^ 0x5FED0253u) != (a1 + 296459895) < 0x5FED026E)
    v13 = a11 - 89754487 < ((v11 - 1268) ^ 0x5FED0253u);
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (((2 * v13) | (8 * v13)) ^ v11)) - 12))();
}

uint64_t sub_1D24B9454(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v25;

  v25 = (a3 + 1225835355) ^ 0x4910C632;
  v20 = 1224239923 * ((((2 * (v19 - 160)) | 0xF7AB24B2) - (v19 - 160) + 69889447) ^ 0x9666F8E);
  *(_DWORD *)(v19 - 152) = v20 + a3 + 342;
  *(_DWORD *)(v19 - 148) = (a18 - 944766062) ^ v20;
  *(_QWORD *)(v19 - 160) = a15;
  v21 = sub_1D24C871C(v19 - 160);
  v22 = STACK[0x2F0] & 0x3F;
  *((_BYTE *)&STACK[0x2AC] + (v22 ^ 4)) = -25;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8 * ((((v22 ^ 4) > 0x37) * (v25 ^ 0x152)) ^ a3))
                                          - 12))(v21);
}

uint64_t sub_1D24B9554()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(((((v1 + 527939121) & 0xE08846AF) - 527) * (v0 == 63)) ^ v1))
                            + 1225835404
                            - ((v1 + 1073773270) | 0x9104318u)
                            + 8))();
}

uint64_t sub_1D24B95B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (((a6 + ((v7 + 1209024269) | 0x1008200) - 41) * ((v6 ^ 0x3Bu) < 8)) ^ v7))
                            - 12))();
}

uint64_t sub_1D24B95FC@<X0>(uint64_t a1@<X8>)
{
  char v1;
  int v2;
  uint64_t v3;

  *(unint64_t *)((char *)&STACK[0x2AC] + a1 - 903505655) = 0x6767676767676767;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1934 * (((v2 + 593) ^ 0xDu) - 668 == (v1 & 0x38))) ^ (v2 + 593))))();
}

uint64_t sub_1D24B9650@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  *(double *)(v5 + a1 + v6) = a2;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 + v4 - 668 == v3) * v7) ^ v2)))();
}

uint64_t sub_1D24B9678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((a6 + (v8 ^ 0x4910C13C) + 1661) * (v7 == v6)) ^ v8)) - 12))();
}

void sub_1D24B96AC()
{
  JUMPOUT(0x1D24B8658);
}

uint64_t sub_1D24B96BC@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  _BOOL4 v12;
  unsigned int v13;
  int v14;
  _BOOL4 v15;

  v12 = v5 < v6;
  v13 = a3 + a2 + a4;
  *((_BYTE *)&STACK[0x2AC] + (v4 + v7)) = *(_BYTE *)(v11 + (a4 + v10))
                                                      - ((2 * *(_BYTE *)(v11 + (a4 + v10))) & 0xCF)
                                                      + 103;
  v14 = v12 ^ (v13 < a1);
  v15 = v13 < v5;
  if (!v14)
    v12 = v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((2 * v12) | (8 * v12) | v8)) - 12))();
}

uint64_t sub_1D24B972C@<X0>(int a1@<W5>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((a2 - 903505655) < 0x38) * (v3 ^ (v2 - 917) ^ 0x729)) ^ (a1 + v3 + 124)))
                            - 12))();
}

uint64_t sub_1D24B976C@<X0>(int a1@<W5>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v4 = a2;
  v5 = (((v2 ^ 0x398u) - a1 + 85 - 2129340317) ^ (251 * (v2 ^ 0x398u))) + a2;
  if (v5 <= 0x38)
    v5 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1361 * (v5 - v4 + 903505655 > 7)) ^ v2)) - 12))();
}

uint64_t sub_1D24B97DC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(unint64_t *)((char *)&STACK[0x2AC] + v2 - 903505655) = 0x6767676767676767;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((2 * ((v1 & 0xFFFFFFFFFFFFFFF8) == 8)) | (4
                                                                                     * ((v1 & 0xFFFFFFFFFFFFFFF8) == 8)) | v0))
                            - ((v0 - 733) | 0xC0u)
                            + 204))();
}

uint64_t sub_1D24B9830(double a1)
{
  int v1;
  uint64_t v2;
  double *v3;
  uint64_t v4;
  uint64_t v5;

  *v3 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((2 * (v4 == 0)) | (4 * (v4 == 0)) | v1)) - v2 + 204))();
}

uint64_t sub_1D24B985C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v2 - 348462357) & 0x5DD5DFD8 ^ 0x4910C0D7) * (v0 != v1)) ^ v2))
                            + 1225835404
                            - (v2 ^ 0x4910C34Cu)))();
}

void sub_1D24B98B4()
{
  char v0;
  int v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unint64_t v5;
  char v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unint64_t v10;
  unsigned int v11;
  unsigned int v12;
  char v13;

  v1 = LOBYTE(STACK[0x30C]) ^ 0xC7;
  if (v1 == 1)
  {
    v8 = STACK[0x2F0];
    v9 = STACK[0x2EC];
    LOBYTE(STACK[0x2E4]) = ((8 * LOBYTE(STACK[0x2F0])) ^ 0x20)
                         - 2 * (((8 * LOBYTE(STACK[0x2F0])) ^ 0x20) & 0xEF ^ (8 * LOBYTE(STACK[0x2F0])) & 8)
                         + 103;
    LOBYTE(STACK[0x2E5]) = ((v8 >> 5) ^ 0x98) - ((v8 >> 4) & 0xCE) + 103;
    LOBYTE(STACK[0x2E6]) = ((v8 >> 13) ^ 0xC7) - ((2 * ((v8 >> 13) ^ 0xC7)) & 0xCF) + 103;
    LOBYTE(STACK[0x2E7]) = ((v8 >> 21) ^ 0x30) - ((2 * ((v8 >> 21) ^ 0x30)) & 0xCF) + 103;
    HIDWORD(v10) = v9 ^ 0x12;
    LODWORD(v10) = v8;
    LOBYTE(STACK[0x2E8]) = (v10 >> 29) - ((2 * (v10 >> 29)) & 0xCF) + 103;
    LOBYTE(STACK[0x2E9]) = ((v9 >> 5) ^ 0xD) - ((2 * ((v9 >> 5) ^ 0xD)) & 0xCF) + 103;
    LOBYTE(STACK[0x2EA]) = ((v9 >> 13) ^ 0xFD) - ((2 * ((v9 >> 13) ^ 0xFD)) & 0xCF) + 103;
    v11 = v9 >> 21;
    v12 = (v9 >> 21) ^ 0xFFFFFFF4;
    v13 = v12 & 0x6F;
    v7 = v12 + 103;
    v6 = 2 * (v13 ^ v11 & 8);
  }
  else
  {
    if (v1 != 2)
      goto LABEL_6;
    v2 = STACK[0x2EC];
    v3 = STACK[0x2F0];
    LOBYTE(STACK[0x2E4]) = ((LODWORD(STACK[0x2EC]) >> 21) ^ 0xF4)
                         + (~(2 * ((LODWORD(STACK[0x2EC]) >> 21) ^ 0xF4)) | 0x31)
                         + 104;
    v4 = (v2 >> ((v0 ^ (v0 + 88)) - 91)) ^ 0xFFFFFFFD;
    LOBYTE(STACK[0x2E5]) = v4 - ((2 * v4) & 0xCF) + 103;
    LOBYTE(STACK[0x2E6]) = ((v2 >> 5) ^ 0xD) + (~(2 * ((v2 >> 5) ^ 0xD)) | 0x31) + 104;
    HIDWORD(v5) = v2 ^ 0x12;
    LODWORD(v5) = v3;
    LOBYTE(STACK[0x2E7]) = (v5 >> 29) - ((2 * (v5 >> 29)) & 0xCF) + 103;
    LOBYTE(STACK[0x2E8]) = ((v3 >> 21) ^ 0x30) - ((2 * ((v3 >> 21) ^ 0x30)) & 0xCF) + 103;
    LOBYTE(STACK[0x2E9]) = ((v3 >> 13) ^ 0xC7) - ((2 * ((v3 >> 13) ^ 0xC7)) & 0xCF) + 103;
    LOBYTE(STACK[0x2EA]) = ((v3 >> 5) ^ 0x98) - ((v3 >> 4) & 0xCE) + 103;
    LOBYTE(v2) = (8 * v3) ^ 0x20;
    v6 = (2 * v2) & 0xC0;
    v7 = v2 + 103;
  }
  LOBYTE(STACK[0x2EB]) = v7 - v6;
LABEL_6:
  JUMPOUT(0x1D24B8658);
}

uint64_t sub_1D24B9D68(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  _BOOL4 v16;

  v13 = (v11 + v7);
  v14 = *(_DWORD *)((char *)&STACK[0x2AC] + v13 + 72);
  *(_BYTE *)(a7 + (v13 + 1)) = (BYTE2(v14) ^ 0xB9) - ((2 * (BYTE2(v14) ^ 0xB9)) & 0xCF) + 103;
  *(_BYTE *)(a7 + v13) = (v9 ^ (a4 + 21)) + (HIBYTE(v14) ^ 0x7A) - ((2 * (HIBYTE(v14) ^ 0x7A)) & 0xCF) - 49;
  *(_BYTE *)(a7 + (v13 + 2)) = (BYTE1(v14) ^ 0xCB) - ((2 * (BYTE1(v14) ^ 0xCB)) & 0xCF) + 103;
  *(_BYTE *)(a7 + (v13 + 3)) = v14 ^ 0xBA;
  LODWORD(v13) = LODWORD(STACK[0x308]) + 647236837;
  v15 = v13 < v8;
  v16 = v11 - 1388298761 < v13;
  if (v11 - 1388298761 < v8 != v15)
    v16 = v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((!v16 * v10) ^ v9)) - 8))();
}

void sub_1D24B9EF4()
{
  JUMPOUT(0x1D24B9EC4);
}

uint64_t sub_1D24B9F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  int v35;
  uint64_t v36;

  *(_DWORD *)(&a35 + a33) = 218003857;
  return (*(uint64_t (**)(uint64_t))(v36
                                            + 8
                                            * (((((v35 + 2071517540) & 0xCD97E7D9) != 1225835417) * ((v35 - 464) ^ 0x39C)) ^ (v35 - 464))))(2737033217);
}

uint64_t sub_1D24B9FBC@<X0>(int a1@<W1>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((221 * (v4 == ((14 * (a2 ^ (v2 + 88) ^ (v2 + 8))) ^ (a1 - 784)))) ^ a2))
                            - 12))();
}

uint64_t sub_1D24BA010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v18;
  int v19;
  uint64_t v20;

  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((44
                                * (((v19 - 1699122657) & 0xFFFFFFFC) - a18 != v18 - 1699124305 + ((v18 - 252) | 0x148))) ^ v18)))();
}

uint64_t sub_1D24BA060@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27)
{
  int v27;
  int v28;
  uint64_t v29;
  _BOOL4 v31;

  v31 = v27 == a1 || a27 - v28 != -70216466;
  return ((uint64_t (*)(void))(*(_QWORD *)(v29 + 8 * ((217 * v31) ^ a2))
                            + 1225835404
                            - ((19 * (a2 ^ 0x343) + 1074822579) | 0x9004398u)
                            + 4))();
}

uint64_t sub_1D24BA0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33)
{
  int v33;
  int v34;
  uint64_t v35;
  int v36;
  _BOOL4 v37;
  _BOOL4 v38;

  v36 = a6 + v33 + 1216;
  v37 = v34 + 875848707 < ((46 * ((v33 - 60314627) & 0xBA8793EA ^ 0x383)) ^ 0x997AF16D);
  v38 = a33 + 946065173 < (v34 + 875848707);
  if ((a33 + 946065173) < 0x997AF1E7 != v37)
    v38 = v37;
  return (*(uint64_t (**)(void))(v35 + 8 * ((60 * !v38) ^ v36)))();
}

uint64_t sub_1D24BA25C(int a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((19
                                          * (((*(_DWORD *)(v4 + 48 * (v3 + a1) + 36) == v3) ^ (((v1 + 5) ^ 0xF) + 1)) & 1)) ^ v1))
                            - 4))();
}

uint64_t sub_1D24BA2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  _QWORD *v22;

  v20 = (v15 - a6 - 50) ^ (v13 - 753);
  v21 = 628203409 * ((v19 - 160) ^ 0x82880C33);
  v22 = (_QWORD *)(v19 - 160);
  v22[3] = a13;
  v22[5] = v18;
  v22[6] = a11;
  *v22 = a12;
  v22[1] = a10;
  *(_DWORD *)(v19 - 144) = v15 - v21 + 27;
  *(_DWORD *)(v19 - 140) = v14 - v21 - 21657580;
  ((void (*)(uint64_t))((char *)*(&off_1E93A7480 + (v15 | 4)) - 12))(v19 - 160);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17
                                                              + 8
                                                              * (((*(_DWORD *)(v19 - 128) == v16) * (v20 ^ 0x102)) ^ v15)))(2737033217, 1557934078, 218003857);
}

uint64_t sub_1D24BA388(int a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;

  v5 = *(_DWORD *)(v4 + 48 * (v3 + a1)) != ((v1 - 693) ^ 0x7623556F);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((4 * v5) | (v5 << 6)) ^ v1)) - 8))();
}

uint64_t sub_1D24BA3D8@<X0>(int a1@<W5>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((((v2 - 44511405) ^ 0xB4480C45) - 2092693170) ^ a2) == v3 - 1998804453)
                                * (a1 + ((v2 - 44511405) & 0x4BB7F3BA) + 824)) ^ v2)))();
}

void sub_1D24BA440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  __asm { BR              X10 }
}

uint64_t sub_1D24BA4D8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,int a28,uint64_t a29,int a30,int a31)
{
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v40;

  v40 = v32 ^ (v31 - 134);
  *(_DWORD *)(a1 + 392) = a3;
  *(_DWORD *)(a1 + 396) = a31;
  *(_QWORD *)(a1 + 400) = a25;
  *(_DWORD *)(a1 + 408) = a28 - v35 + 293142327;
  *(_QWORD *)(a1 + 416) = v37 + ((v32 + 1168) ^ 0x9EE8D834) + v35;
  v38 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48 * v34 + 8))(a11, a21);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36
                                                              + 8
                                                              * ((505
                                                                * (v38 + v33 - ((v40 - 950748578) & (2 * v38)) == v33)) ^ v32)))(2737033217, 1557934078, 218003857);
}

uint64_t sub_1D24BA5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unint64_t a27)
{
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29
                                                                                + 8
                                                                                * (v27 ^ (4
                                                                                        * ((v27 ^ 0x9F ^ (a27 < (unint64_t)(17 * (v27 ^ 0x52Fu)) - 898)) & 1)))))(a1, a2, a3, v28, v30);
}

uint64_t sub_1D24BA5F0(uint64_t a1, uint64_t a2, uint64_t a3, _DWORD *a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((((v4 - 906182634) & 0x7F13FFFC ^ 0xBA1145F7) + *a4 < 0x10) * (v4 + 641)) ^ v4))
                            - 8))();
}

uint64_t sub_1D24BA644(uint64_t a1, uint64_t a2, uint64_t a3, _DWORD *a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33)
{
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  _DWORD *v42;

  v42 = &a4[6 * v35];
  v42[2] = v40;
  v42[3] = v37;
  *((_QWORD *)v42 + 2) = v41;
  v42[6] = a33;
  *a4 = v34 + 1;
  return (*(uint64_t (**)(void))(v39
                              + 8
                              * ((771
                                * (((v33 - 763 - a6 - 50) ^ (v36 - 480))
                                 + 589549569
                                 + *(_DWORD *)(a5 + 48 * v38 + 32)
                                 - 544 < 0x80000003)) ^ (v33 - 763))))();
}

uint64_t sub_1D24BA6C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v25;
  uint64_t v26;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 + 8 * ((1427 * (v25 + ((a9 + 235425902) & 0xF1F7ADFB) == 137543557)) ^ (a9 + 357))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1D24BA784(uint64_t a1, uint64_t a2, int a3, _DWORD *a4)
{
  int v4;
  uint64_t v5;
  int v6;
  _BOOL4 v8;

  v8 = v6 != ((v4 + 2071518004) & 0xCD97E7D9) + 332098662 || *a4 != a3;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v8 * (v4 ^ 0x39C)) ^ v4)))();
}

void sub_1D24BA7E0()
{
  JUMPOUT(0x1D24BA814);
}

void sub_1D24BA860(uint64_t a1)
{
  int v1;
  _BOOL4 v4;

  v4 = *(_QWORD *)(a1 + 24) != 0x1DC828355A88D5A7
    && *(_QWORD *)(a1 + 8) != 0x568E88F319231677
    && *(_QWORD *)(a1 + 16) != 0x59B893DEEB8F3DEDLL;
  v1 = *(_DWORD *)(a1 + 32) - 1178560073 * ((2 * (a1 & 0x908C2BF2) - a1 + 1869861901) ^ 0xC2E4E8A8);
  __asm { BR              X9 }
}

uint64_t sub_1D24BA970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  int v19;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18
                                                                                                  + 8 * (((*(_DWORD *)(a18 - 0x1DC828355A88D58FLL) == 137543419) * ((v19 + 1295) ^ 0x10)) ^ v19)))(a1, a2, a3, a4, a5, a6, 137543419);
}

uint64_t sub_1D24BA9B8(uint64_t a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v22;
  uint64_t v23;
  __n128 v24;
  __n128 v25;
  unsigned int v26;
  _BOOL4 v27;

  v24.n128_u64[0] = 0xCECECECECECECECELL;
  v24.n128_u64[1] = 0xCECECECECECECECELL;
  v25.n128_u64[0] = 0x6767676767676767;
  v25.n128_u64[1] = 0x6767676767676767;
  v26 = *(_DWORD *)(a22 - 0x1DC828355A88D597) - 949538554;
  v27 = v26 < 0x233480E9;
  if (v26 >= 0x233480E9)
    v27 = v26 > 0x233480E9;
  return ((uint64_t (*)(uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v23 + 8 * ((1008 * v27) ^ (14 * (v22 ^ 0x5AC)))) - ((2 * (((14 * (v22 ^ 0x5AC) - 1366) | 0x12) ^ 0xEBu)) ^ 0xB6)))(a1, 1364747155, a2, a3, a4, a5, v24, v25);
}

uint64_t sub_1D24BABBC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v1 + 8 * (v0 - 171)) - 8))(((((v0 ^ 0x427) - 1283466025) & 0x4C801FBF ^ 0x387u)
                                                                                     + 536870229) & *(_DWORD *)(v2 - 140));
}

uint64_t sub_1D24BB9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v14;
  int v15;
  uint64_t v16;
  _QWORD *v17;
  _BOOL4 v18;

  *(_BYTE *)(*v17 + (v14 + a8)) = -25;
  v18 = v14 + 1013350683 < (a14 - 1975525764);
  if ((a14 - 1975525764) < 0x9B018CFC != (v14 + 1013350683) < 0x9B018CFC)
    v18 = (a14 - 1975525764) < 0x9B018CFC;
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * (((v15 - 465) * !v18) ^ v15)) - 8))();
}

uint64_t sub_1D24BBA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  _QWORD *v14;
  _BOOL4 v15;
  int v16;

  v15 = v12 < v8;
  v16 = v9 + 1;
  *(_BYTE *)(*v14 + (v16 + a8)) = 103;
  if (v15 == v16 + v10 < v8)
    v15 = v16 + v10 < v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * (((16 * !v15) | (32 * !v15)) ^ v11))
                            - (((v11 - 351) | 0x10u) ^ 0xBALL)))();
}

void sub_1D24BBAA8(int a1@<W8>)
{
  _QWORD *v1;
  _DWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 - 0x568E88F319231677) = *v1;
  *(_DWORD *)(v4 - 0x59B893DEEB8F3DEDLL) = a1;
  *v1 = 0;
  *(_QWORD *)(v7 - 0x1DC828355A88D59FLL) = 0x4986A15D4986A15DLL;
  *v2 = 1540181987;
  *(_DWORD *)(v7 - 0x1DC828355A88D593) = (((2 * (*(_DWORD *)(v7 - 0x1DC828355A88D593) & 0xFFFFFFFE ^ 0xE607B54C)) | 0x78769316)
                                          - (*(_DWORD *)(v7 - 0x1DC828355A88D593) & 0xFFFFFFFE ^ 0xE607B54C)
                                          - 1010518411) ^ 0xDA3CFCC6;
  *(_DWORD *)(v6 + 4) = *v5;
}

void sub_1D24BBBB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void (*v5)(char *, void (*)());
  int v6;
  char v7;

  v2 = qword_1EFC7F978 - (_QWORD)&v7 + qword_1EFC7F970;
  v3 = 536075833 * v2 + 0x3076D37E12EEFF1CLL;
  v4 = 536075833 * (v2 ^ 0x86C548EE6B3237FCLL);
  qword_1EFC7F978 = v3;
  v5 = (void (*)(char *, void (*)()))*(&off_1E93A7480
                                                + ((57 * ((v4 + v3) ^ 0xFC)) ^ byte_1D24F2AF0[byte_1D24EE2B0[(57 * ((v4 + v3) ^ 0xFC))] ^ 0x9C])
                                                - 71);
  v6 = byte_1D24F94A0[(57 * (v3 ^ 0xFC ^ v4))];
  qword_1EFC7F970 = v4;
  v5((char *)*(&off_1E93A7480 + ((57 * (v3 ^ 0xFC ^ v4)) ^ byte_1D24EE4B0[v6 ^ 0x30]) - 167) - 12, sub_1D24DA534);
  __asm { BR              X9 }
}

uint64_t sub_1D24BBCD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BOOL4 v2;

  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 504) - 4) != 0;
  return (*(uint64_t (**)(void))(a1 + 8 * (((2 * v2) | (16 * v2)) ^ 0xEAu)))();
}

uint64_t sub_1D24BBCF8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 + 1608))(v0);
}

void sub_1D24BBD20(uint64_t a1, uint64_t a2)
{
  __asm { BR              X12 }
}

uint64_t sub_1D24BBD80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1511 * (**(_BYTE **)(a2 + 8) == 0)) ^ v3)) - 8))();
}

uint64_t sub_1D24BBDAC()
{
  uint64_t v0;
  int v1;
  int v2;

  v2 = v1 - ((2 * v1 + 896721974) & 0x6F2DD912) - 766484828;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((945
                                * (((2 * v2) & 0xFFFBEFEA ^ 0x6F29C902) + (v2 ^ 0xC86B1B7C) + 2012987072 == 2012853941)) ^ 0x197u)))();
}

uint64_t sub_1D24BBE48(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;

  *(_DWORD *)(*(_QWORD *)(a1 + 96) + 1424) = ((v4 + 419 - v2 - 794) ^ 0x3895AF7F) + v3;
  *(_QWORD *)(*(_QWORD *)(a1 + 96) + 520) = *(_QWORD *)(a2 + 8) + 1;
  return 0;
}

uint64_t sub_1D24BC170(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)a1 - 3804331 * (((a1 | 0x50C5005E) - (a1 & 0x50C5005E)) ^ 0x7E848392);
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1E93A7480 + v1 - 470)
                                        + 8 * ((440 * (*(_QWORD *)(a1 + 8) != 0x1DC828355A88D5A7)) ^ v1)
                                        - 4)
                            - 8))();
}

uint64_t sub_1D24BC1FC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * ((1172 * (*(_DWORD *)(v2 - 0x1DC828355A88D58FLL) == 137543419)) ^ v0))
                            - 8))();
}

uint64_t sub_1D24BC23C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = *(_DWORD *)(v2 - 0x1DC828355A88D597) + 1811730876;
  v4 = *(_DWORD *)(v2 - 0x1DC828355A88D59BLL) + 2118352962;
  v5 = v4 < 0xC7CA219F;
  v6 = v3 < v4;
  if (v3 < 0xC7CA219F != v5)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1659 * v6) ^ v0)) - 8))();
}

uint64_t sub_1D24BC2C8@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  _DWORD *v2;

  *v2 = a2;
  *(_DWORD *)(result + 4) = -137501234;
  return result;
}

void sub_1D24BC2DC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_1D24BC350@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((25
                                          * (((a1 - 1699122660) ^ 0xFDFCBF5FF7B8D38FLL)
                                           + 0x20340A07868AB28
                                           + ((2 * (a1 - 1699122660)) & 0x1EF71A71ELL) != 1881243319)) ^ 0x608u))
                            - 8))();
}

uint64_t sub_1D24BC3EC()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = (((v1 + 71003) | 0x950240C8) ^ 0xC1F918D8E802A3D8) + v4;
  LODWORD(v6) = *(unsigned __int8 *)(v3 + v6) - *(unsigned __int8 *)(v2 + v6);
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * ((1726 * (((2 * (_DWORD)v6) & 0xD9DFFFD4) + (v6 ^ v0) == v0)) ^ v1)))(4294925278);
}

uint64_t sub_1D24BC45C()
{
  unint64_t v0;
  unsigned int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v5;
  unint64_t v6;
  int v7;
  _BOOL4 v8;

  v5 = v2 < v0;
  v6 = v3 - 0x3E06E72712DC8ADDLL + v1;
  v7 = v5 ^ (v6 < v0);
  v8 = v6 < v2;
  if (!v7)
    v5 = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (int)((v5 * ((v1 - 55) ^ 0x38B)) ^ (v1 + 575))) - 8))();
}

uint64_t sub_1D24BC4C4@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * (((((v1 + 208) | 5) + ((v1 - 1794943398) ^ 0x6AFCA248))
                                                        * (a1 == 1699122669)) ^ v1))
                                          - 8))(4294925278);
}

uint64_t sub_1D24BC518()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((532
                                          * (((2 * (*v0 - 42)) & 0xF3FDFFAE) + ((*v0 - 42) ^ 0x79FEFFD7) == 2046754775)) ^ v1))
                            - ((v1 + 1475362647) & 0xA80FBD6B)
                            + 294))();
}

uint64_t sub_1D24BC584()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((324
                                          * ((((*(unsigned __int8 *)(v2 + 1) - 134) << (((v3 - 71) | 0xA) - 41)) & v1)
                                           + ((*(unsigned __int8 *)(v2 + 1) - 134) ^ v0) == v0)) ^ v3))
                            - 4))();
}

uint64_t sub_1D24BC5D0()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((581
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                           + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v0) == v0 + 149 * (v3 ^ 0x465) - 298)) ^ v3))
                            - 4))();
}

uint64_t sub_1D24BC620()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((391
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 3) - 134)))
                                           + ((*(unsigned __int8 *)(v2 + 3) - 134) ^ v0) == v0)) ^ v3))
                            - (((v3 - 1125) | 0x128u) ^ 0x12ELL)))();
}

uint64_t sub_1D24BC670()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)((((v1 & (2 * (*(unsigned __int8 *)(v2 + 4) - 247)))
                                                + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v0) == v0)
                                               * ((v3 + 1936091924) & 0x8C9991AE ^ 0x1C9)) ^ v3))
                            - 4))();
}

uint64_t sub_1D24BC6C4()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned int v5;

  v5 = *(unsigned __int8 *)(v2 + 5) + ((v3 - 829) ^ 0xFFFFFED9);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((300 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v3))
                            - (((v3 + 296) | 0x50u) ^ 0x5DBLL)))();
}

uint64_t sub_1D24BC71C()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;

  v5 = v3 - 1205 + *(unsigned __int8 *)(v2 + 6) - 299;
  return (*(uint64_t (**)(void))(v4 + 8 * ((924 * ((v1 & (2 * v5)) + (v5 ^ v0) == (v3 ^ 0x1B8 ^ (v0 - 1063)))) ^ v3)))();
}

uint64_t sub_1D24BC768()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((153
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 7) - 1)))
                                           + ((*(unsigned __int8 *)(v2 + 7) - 1) ^ v0) == v0 + v3 - 829 - 298)) ^ v3))
                            - 4))();
}

uint64_t sub_1D24BC7AC()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((733
                                          * (((((149 * (v3 ^ 0x465) + 246) | 0x118) ^ (v1 - 792)) & (2 * (*(unsigned __int8 *)(v2 + 8) - 4)))
                                           + ((*(unsigned __int8 *)(v2 + 8) - 4) ^ v0) == v0)) ^ v3))
                            - 4))();
}

uint64_t sub_1D24BC808(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v4 + 96) + 1428) = 1492528581;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((*(_DWORD *)(a2 + 4) == (((v3 - 468) | 0x12) ^ v2))
                                     * (((v3 + 187322482) & 0xF4D5AD7F) + 1469)) ^ v3)))();
}

uint64_t sub_1D24BC86C(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1000
                                * ((v3 & (2 * (**(unsigned __int8 **)(a2 + 8) - 42)))
                                 + ((**(unsigned __int8 **)(a2 + 8) - 42) ^ v2) == (((v4 - 20) | 9) ^ (v2 - 271)))) ^ v4)))();
}

uint64_t sub_1D24BC8B4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1225
                                * (((v2 ^ 0x35 ^ (v1 - 253)) & (2 * (*(unsigned __int8 *)(v3 + 1) - 134)))
                                 + ((*(unsigned __int8 *)(v3 + 1) - 134) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1D24BC8F4(int a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((121
                                * ((a1 & (2 * (*(unsigned __int8 *)(v3 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v3 + 2) - 72) ^ v1) == v1)) ^ v2)))();
}

uint64_t sub_1D24BC924()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((2021
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 3) - 134)))
                                 + (((v2 - 25) | 0xE) ^ v4 ^ (*(unsigned __int8 *)(v3 + 3) - 134)) == v0)) ^ v2)))();
}

uint64_t sub_1D24BC960()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v3 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ v0) == v0)
                                * ((v2 ^ 0x35) + 1230)) ^ v2)))();
}

uint64_t sub_1D24BC998()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2031
                                * ((((*(unsigned __int8 *)(v3 + 5) - 13) << (v2 - 41)) & v1)
                                 + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1D24BC9D8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((522
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 6) - 1) ^ v0) == ((v2 - 895119659) & 0x355A711F ^ v4))) ^ v2)))();
}

uint64_t sub_1D24BCA24(int a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((579
                                * (((a1 ^ v4) & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v1) == v1)) ^ v2)))();
}

uint64_t sub_1D24BCA5C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1934
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 8) - 5)))
                                 + ((*(unsigned __int8 *)(v3 + 8) - 5) ^ v0) == v0 + (v2 ^ 0x35) - 287)) ^ v2)))();
}

uint64_t sub_1D24BCA9C(int a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v4 + 96) + 1428) = 1492528585;
  return (*(uint64_t (**)(void))(v5 + 8 * (((*(_DWORD *)(a2 + 4) != ((v3 + 76) ^ v2)) * (a1 ^ 0x30D)) ^ v3)))();
}

uint64_t sub_1D24BCAEC(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;

  v6 = **(unsigned __int8 **)(a2 + 8) - 42;
  return (*(uint64_t (**)(void))(v5 + 8 * ((85 * (((v6 << (v4 - 30)) & v3) + (v6 ^ v2) == v2)) ^ v4)))();
}

uint64_t sub_1D24BCB2C()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((692
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 1) - 134)))
                                 + (((v3 + 257) | 0x118) ^ (v0 - 744) ^ (*(unsigned __int8 *)(v2 + 1) - 134)) == v0)) ^ v3)))();
}

uint64_t sub_1D24BCB70()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((711
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                 + (((v3 + 17) | 0x208) ^ v4 ^ (*(unsigned __int8 *)(v2 + 2) - 72)) == v0)) ^ v3)))();
}

uint64_t sub_1D24BCBB0()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((904
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 3) - 134)))
                                 + ((*(unsigned __int8 *)(v2 + 3) - 134) ^ v0) == ((((v3 + 206613216) & 0xF3AF5738) - 631) ^ (v0 - 193)))) ^ v3)))();
}

uint64_t sub_1D24BCC04()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;

  v5 = v3 + 94 + *(unsigned __int8 *)(v2 + 4) + ((v3 + 95) | 0x218) - 1358;
  return (*(uint64_t (**)(void))(v4 + 8 * ((478 * ((v1 & (2 * v5)) + (v5 ^ v0) != v0)) ^ v3)))();
}

uint64_t sub_1D24BCC4C()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;

  v5 = v3 + 537 + *(unsigned __int8 *)(v2 + 5) - 837;
  return (*(uint64_t (**)(void))(v4 + 8 * ((792 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_1D24BCC84()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned int v5;

  v5 = ((v3 + 2031923737) & 0x86E34FFF) + *(unsigned __int8 *)(v2 + 6) - 825;
  return (*(uint64_t (**)(void))(v4 + 8 * ((983 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_1D24BCCD0()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1310
                                * (((((v3 + 249) | 0x120) ^ (v1 - 792)) & (2 * (*(unsigned __int8 *)(v2 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v2 + 7) - 1) ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_1D24BCD14()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1119
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 8) - 11)))
                                 + ((v3 + 537) ^ v0 ^ (v3 + 2003940893) & 0x888E4BFB ^ (*(unsigned __int8 *)(v2 + 8) - 11)) == v0)) ^ v3)))();
}

void sub_1D24BCD68()
{
  int v0;
  uint64_t v1;
  uint64_t v3;
  int v4;
  int v5;

  *(_DWORD *)(*(_QWORD *)(v1 + 96) + 1428) = 1492528597;
  v5 = v0 ^ 0x24E;
  v4 = 31 * (v0 ^ 0x309);
  *(_DWORD *)(v3 - 104) = 628203409 * ((v3 + 2138252286 - 2 * ((v3 - 120) & 0x7F732476)) ^ 0xFDFB2845)
                        + (v0 ^ 0x24E)
                        - 1882357838;
  *(_DWORD *)(v3 - 116) = -628203409 * ((v3 + 2138252286 - 2 * ((v3 - 120) & 0x7F732476)) ^ 0xFDFB2845) + 1023944138;
  *(_QWORD *)(v3 - 112) = v3 + 0x5C256D3C5DC22054;
  sub_1D24A6CC8(v3 - 120);
  __asm { BR              X10 }
}

uint64_t sub_1D24BCFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;

  v19 = *(unsigned __int8 *)(v17 + (a14 + a6));
  *(_BYTE *)(v18 - 220 + (v14 - 1340684673)) = v19 - ((v19 << (((v15 - 102) & 0xEE) + 21)) & 0xCE) + 103;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16
                                                                                          + 8
                                                                                          * ((2000
                                                                                            * ((v14 & 0xFFFFFFC0) != 1340684672)) ^ v15))
                                                                              - 8))(a1, a2, a3, a4, a5);
}

uint64_t sub_1D24BD038@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, uint64_t (*a12)(__n128, __n128, __n128, __n128), uint64_t a13, uint64_t a14, uint64_t a15, int32x4_t a16, int32x4_t a17, int32x4_t a18, int32x4_t a19)
{
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t (*v27)(__n128, __n128, __n128, __n128);
  const char *v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  uint64_t v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  uint8x16_t v38;
  uint16x8_t v39;
  int8x16_t v40;
  uint16x8_t v41;
  int8x16_t v42;
  uint8x16_t v43;
  uint16x8_t v44;
  uint16x8_t v45;
  int8x16_t v46;
  int8x16_t v47;
  int8x16_t v48;
  int8x16_t v49;
  uint8x16_t v50;
  int8x16_t v53;
  int8x16_t v58;
  int v60;
  uint64_t v61;
  uint8x16_t v62;
  uint16x8_t v63;
  uint16x8_t v64;
  uint8x16_t v65;
  uint8x16_t v70;
  uint16x8_t v71;
  uint16x8_t v72;
  uint64_t v73;
  _DWORD *v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t);
  int v83;
  int8x16x4_t v84;
  int8x16x4_t v85;

  v27 = *(uint64_t (**)(__n128, __n128, __n128, __n128))(v20 + 8 * (a1 + a3 - 380));
  HIDWORD(a10) = a8 + 599105848;
  LODWORD(a10) = 892248175;
  v28 = (const char *)(v26 - 220);
  v29.n128_u64[0] = 0x6767676767676767;
  v29.n128_u64[1] = 0x6767676767676767;
  v30 = (__n128)vdupq_n_s32(0x10657DF6u);
  a14 = v23 - 16;
  v31 = (__n128)vdupq_n_s32(0x832BEFBu);
  v32.n128_u64[0] = 0xCECECECECECECECELL;
  v32.n128_u64[1] = 0xCECECECECECECECELL;
  v33 = *(unsigned int *)(v26 - 148);
  v34 = *(_DWORD *)(v26 - 144);
  LODWORD(a13) = *(_DWORD *)(v26 - 148);
  HIDWORD(a13) = v34;
  v36 = *(_DWORD *)(v26 - 140);
  v35 = *(_DWORD *)(v26 - 136);
  v37 = *(_BYTE *)(v26 - 124) ^ 0xC7;
  HIDWORD(a9) = *(unsigned __int8 *)(v26 - 124) ^ 0xFFFFFFC7;
  if (v37 == 2)
  {
    a11 = __PAIR64__(v35, v36);
    a12 = v27;
    v60 = a1 + a2 + 750;
    v85 = vld4q_s8(v28);
    HIDWORD(a8) = *(_DWORD *)(v26 - 132);
    v61 = HIDWORD(a8);
    v62 = (uint8x16_t)veorq_s8(v85.val[0], (int8x16_t)v29);
    v63 = vmovl_u8(*(uint8x8_t *)v62.i8);
    v64 = vmovl_high_u8(v62);
    v65 = (uint8x16_t)veorq_s8(v85.val[1], (int8x16_t)v29);
    _Q21 = vmovl_u8(*(uint8x8_t *)v65.i8);
    _Q20 = vmovl_high_u8(v65);
    __asm
    {
      SHLL2           V22.4S, V20.8H, #0x10
      SHLL2           V23.4S, V21.8H, #0x10
    }
    v70 = (uint8x16_t)veorq_s8(v85.val[2], (int8x16_t)v29);
    v71 = vmovl_high_u8(v70);
    v72 = vmovl_u8(*(uint8x8_t *)v70.i8);
    v85.val[0] = veorq_s8(v85.val[3], (int8x16_t)v29);
    v85.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v85.val[0]);
    v85.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v85.val[1]);
    v85.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v85.val[0].i8);
    v85.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v85.val[0]);
    v85.val[0] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v72.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v63.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v85.val[0].i8));
    v85.val[3] = vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v72, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v63), 0x18uLL)), v85.val[3]);
    v85.val[1] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v71.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v64.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v85.val[1].i8));
    v85.val[2] = vorrq_s8(vorrq_s8(vorrq_s8(_Q22, (int8x16_t)vshll_high_n_u16(v71, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v64), 0x18uLL)), v85.val[2]);
    a18 = vaddq_s32(vsubq_s32((int32x4_t)v85.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v85.val[1], (int32x4_t)v85.val[1]), (int8x16_t)v30)), (int32x4_t)v31);
    a19 = vaddq_s32(vsubq_s32((int32x4_t)v85.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v85.val[2], (int32x4_t)v85.val[2]), (int8x16_t)v30)), (int32x4_t)v31);
    a16 = vaddq_s32(vsubq_s32((int32x4_t)v85.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v85.val[0], (int32x4_t)v85.val[0]), (int8x16_t)v30)), (int32x4_t)v31);
    a17 = vaddq_s32(vsubq_s32((int32x4_t)v85.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v85.val[3], (int32x4_t)v85.val[3]), (int8x16_t)v30)), (int32x4_t)v31);
    v73 = (2 * v60) ^ 0xDBEu;
    v74 = (_DWORD *)&a16 + v24 + 1872625556;
    v75 = *(v74 - 8) ^ *(v74 - 3);
    v76 = (v21 + v73);
    v77 = *(v74 - 16);
    v78 = v77 ^ *(v74 - 14) ^ (v76 + v75 - (v19 & (2 * v75)) - 1198);
    HIDWORD(v80) = v78 ^ v21;
    LODWORD(v80) = v78;
    v79 = v80 >> 31;
    v81 = v19 & (2 * v79);
    *v74 = v79 + v21 - v81;
    v82 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8 * ((38 * (v23 == 1872625493)) ^ v60)) - 4);
    return v82(1872625557, v82, v33, v61, v81, v73, v77, v76, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
  }
  else if (v37 == 1)
  {
    a11 = __PAIR64__(v35, v36);
    a12 = v27;
    v84 = vld4q_s8(v28);
    v38 = (uint8x16_t)veorq_s8(v84.val[0], (int8x16_t)v29);
    v39 = vmovl_high_u8(v38);
    v40 = (int8x16_t)vmovl_high_u16(v39);
    v41 = vmovl_u8(*(uint8x8_t *)v38.i8);
    v42 = (int8x16_t)vmovl_high_u16(v41);
    v43 = (uint8x16_t)veorq_s8(v84.val[1], (int8x16_t)v29);
    v44 = vmovl_u8(*(uint8x8_t *)v43.i8);
    v45 = vmovl_high_u8(v43);
    v46 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v44.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v41.i8));
    v47 = vorrq_s8((int8x16_t)vshll_high_n_u16(v44, 8uLL), v42);
    v48 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v45.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v39.i8));
    v49 = vorrq_s8((int8x16_t)vshll_high_n_u16(v45, 8uLL), v40);
    v50 = (uint8x16_t)veorq_s8(v84.val[2], (int8x16_t)v29);
    _Q21 = (int8x16_t)vmovl_high_u8(v50);
    _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v50.i8);
    v53 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
    __asm { SHLL2           V20.4S, V20.8H, #0x10 }
    v58 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    v84.val[0] = veorq_s8(v84.val[3], (int8x16_t)v29);
    v84.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v84.val[0].i8);
    v84.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v84.val[0]);
    v84.val[2] = vorrq_s8(vorrq_s8(v46, v53), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v84.val[1].i8), 0x18uLL));
    v84.val[1] = vorrq_s8(vorrq_s8(v47, _Q20), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v84.val[1]), 0x18uLL));
    v84.val[3] = vorrq_s8(vorrq_s8(v48, v58), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v84.val[0].i8), 0x18uLL));
    v84.val[0] = vorrq_s8(vorrq_s8(v49, _Q21), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v84.val[0]), 0x18uLL));
    a18 = vaddq_s32(vsubq_s32((int32x4_t)v84.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v84.val[3], (int32x4_t)v84.val[3]), (int8x16_t)v30)), (int32x4_t)v31);
    a19 = vaddq_s32(vsubq_s32((int32x4_t)v84.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v84.val[0], (int32x4_t)v84.val[0]), (int8x16_t)v30)), (int32x4_t)v31);
    a16 = vaddq_s32(vsubq_s32((int32x4_t)v84.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v84.val[2], (int32x4_t)v84.val[2]), (int8x16_t)v30)), (int32x4_t)v31);
    a17 = vaddq_s32(vsubq_s32((int32x4_t)v84.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v84.val[1], (int32x4_t)v84.val[1]), (int8x16_t)v30)), (int32x4_t)v31);
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * ((333 * (a14 + 1 != v23)) ^ (a1 + a2 - 210))) - 8))(1872625556);
  }
  else
  {
    v83 = (v34 ^ v22) + (HIDWORD(a13) ^ v22) + v22 - (v25 & (2 * ((v34 ^ v22) + (HIDWORD(a13) ^ v22))));
    *(_DWORD *)(v26 - 148) = (v33 ^ v22) + (a13 ^ v22) + v22 - (v25 & (2 * ((v33 ^ v22) + (a13 ^ v22))));
    *(_DWORD *)(v26 - 144) = v83;
    *(_DWORD *)(v26 - 140) = 2 * (v36 ^ v22) + v22 - (v25 & (4 * (v36 ^ v22)));
    *(_DWORD *)(v26 - 136) = 2 * (v35 ^ v22) + v22 - (v25 & (4 * (v35 ^ v22)));
    return v27(v29, v30, v31, v32);
  }
}

void sub_1D24BD0C4()
{
  JUMPOUT(0x1D24BD0E0);
}

void sub_1D24BD31C()
{
  JUMPOUT(0x1D24BD224);
}

uint64_t sub_1D24BD338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((44 * (a1 + 1 == v7 + 16)) ^ a6)) - 8))();
}

uint64_t sub_1D24BD410()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1166 * (v1 + 1 == v3 + 32)) ^ v0)) - 8))();
}

uint64_t sub_1D24BD4DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * ((200 * (a1 + 1 == v4 + 48)) ^ v2)) - 8))(a2);
}

void sub_1D24BD5CC()
{
  JUMPOUT(0x1D24BDB40);
}

uint64_t sub_1D24BD7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((358 * (v6 + 1 == v8 + 4)) ^ a6)) - 4))();
}

uint64_t sub_1D24BD870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((220 * (a2 + 1 != v6 + 24)) ^ a5)) - 4))();
}

uint64_t sub_1D24BD934(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1443 * (a1 + 1 != v5 + 44)) ^ a4)) - 4))();
}

uint64_t sub_1D24BDA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((a2 + 1 != v6 + 64) | a5)) - 4))();
}

void sub_1D24BDAD8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v18 = (v14 ^ 0xEFBA9231 ^ (a1 - 1794943670)) + (a14 ^ v15);
  *(_DWORD *)(v17 - 132) = v18 + v15 - (v16 & (2 * v18));
  JUMPOUT(0x1D24BDB38);
}

uint64_t sub_1D24BDBC0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, unsigned int a16, unsigned int a17)
{
  uint64_t v17;
  _BOOL4 v18;

  if (a17 < a16 != a14 - 104030881 < (a5 ^ (a5 + 535)) + 892246656)
    v18 = a14 - 104030881 < (a5 ^ (a5 + 535)) + 892246656;
  else
    v18 = a14 - 104030881 > a17;
  return ((uint64_t (*)(BOOL))(*(_QWORD *)(v17 + 8 * (!v18 | (a4 + a5 - 36))) - 8))(a14 - 104030881 > a17);
}

uint64_t sub_1D24BDC48@<X0>(int a1@<W3>, int a2@<W5>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = a3 + 798663427 + v3 - a1 - 170 < (a3 + a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((2 * v5) | (16 * v5)) ^ v3)) - 46 * (v3 ^ 0x249u) + 590))();
}

uint64_t sub_1D24BDCA4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a2 ^ (1207 * ((unint64_t)(v5 - v7 - a1) > 0xF))))
                            + 2500024800
                            - (a2 ^ (a5 + 462))
                            + 4))();
}

uint64_t sub_1D24BDCF0@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W7>, int a5@<W8>, int8x16_t a6@<Q0>, int8x16_t a7@<Q3>)
{
  int v7;
  int8x16_t *v8;
  uint64_t v9;
  uint64_t v10;

  *v8 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v10 + (a5 + a3)), vandq_s8(vaddq_s8(*(int8x16_t *)(v10 + (a5 + a3)), *(int8x16_t *)(v10 + (a5 + a3))), a7)), a6);
  return (*(uint64_t (**)(void))(v9
                              + 8 * (((((4 * (v7 ^ (a2 - 9))) ^ 0x2CLL) == 64) * a4) ^ (a1 + v7 + 323))))();
}

uint64_t sub_1D24BDD54@<X0>(int a1@<W3>, int a2@<W5>, int a3@<W6>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v6 + v5) = *(_BYTE *)(v10 + (a4 + a2))
                      - ((2 * *(_BYTE *)(v10 + (a4 + a2))) & 0xCF)
                      + 103;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v5 + ((v4 + a3) & v7) == 123) * v8) ^ (a1 + v4 + 902))))();
}

uint64_t sub_1D24BDDA8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  int v7;
  _BOOL4 v8;

  v8 = a1 + 727567805 < (a6 + 1430704598);
  if (a6 + 1430704598 < ((v7 + 1773291525) & 0x964DB2FF) + 1723846681 != (a1 + 727567805) < 0x66BFD10D)
    v8 = a6 + 1430704598 < ((v7 + 1773291525) & 0x964DB2FF) + 1723846681;
  return (*(uint64_t (**)(void))(v6 + 8 * ((983 * !v8) ^ v7)))();
}

uint64_t sub_1D24BDE28(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v19;

  v19 = (a2 - 180) | 0x2A2;
  v15 = 1224239923 * ((v14 + 1499836869 - 2 * ((v14 - 120) & 0x5965B23D)) ^ 0xABD64FEA);
  *(_QWORD *)(v14 - 120) = a11;
  *(_DWORD *)(v14 - 112) = v15 + a2 + 159;
  *(_DWORD *)(v14 - 108) = (a13 + 461214272) ^ v15;
  v16 = sub_1D24C871C(v14 - 120);
  v17 = *(_DWORD *)(v14 - 152) & (v19 - 675);
  *(_BYTE *)(v14 - 220 + (v17 ^ 4)) = -25;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13 + 8 * ((11 * ((v17 ^ 4) > 0x37)) | a2)) - 8))(v16);
}

uint64_t sub_1D24BDF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (v6 ^ (7 * (v5 == 63))))
                            + 2500024800
                            - ((4 * v6) ^ 0x900 ^ (a5 + 376))))();
}

uint64_t sub_1D24BDF68()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((115 * ((v1 ^ 0x3Bu) < (v0 ^ (v2 - 1255146635) & 0xDFD35BEE ^ 8))) ^ v2))
                            - 12))();
}

uint64_t sub_1D24BDFB0@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 220 + a3 - 600720616) = 0x6767676767676767;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((1294 * ((v3 ^ (a2 + 285) ^ 0x2EDLL) == (v4 & 0x38))) ^ (a1 + v3 + 387)))
                            - 8))();
}

uint64_t sub_1D24BE018@<X0>(int a1@<W0>, int a2@<W5>, int a3@<W8>)
{
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  unsigned int v13;
  int v14;
  _BOOL4 v15;

  v12 = v4 < v5;
  *(_BYTE *)(v11 - 220 + (v3 - 1340684673)) = *(_BYTE *)(v10 + (a3 + a2))
                                                          - ((2 * *(_BYTE *)(v10 + (a3 + a2))) & 0xCF)
                                                          + 103;
  v13 = a3 + 1 + a1;
  v14 = v12 ^ (v13 < v7);
  v15 = v13 < v4;
  if (!v14)
    v12 = v15;
  return (*(uint64_t (**)(void))(v8 + 8 * ((!v12 * v6) ^ v9)))();
}

uint64_t sub_1D24BE0A8@<X0>(int a1@<W3>, int a2@<W8>)
{
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((a2 - 600720616) < 0x38) * (a1 + v3 + 1090)) ^ (a1 + v3 + 96)))
                            - 4))();
}

uint64_t sub_1D24BE0DC@<X0>(char a1@<W3>, int a2@<W4>, unsigned int a3@<W8>)
{
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  int v7;
  uint64_t v8;

  v5 = v3 + 1111;
  v6 = v3 + 87 - a1;
  v7 = (v3 + 1111) ^ (a2 + 561);
  v8 = 56;
  if ((unint64_t)a3 - 600720615 > 0x38)
    v8 = a3 - 600720615;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v8 - (unint64_t)a3 + 600720616 < 8) ^ (v6 - 86)) & 1)
                                * (v7 ^ (a2 - 3))) ^ v5)))();
}

uint64_t sub_1D24BE148(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v7 + v9 - 220 - 506 + 11 * ((v6 - 1111) ^ (a5 - 42))) = 0x6767676767676767;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8
                                             * ((26 * ((v5 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ (a4 + v6 - 1111 + 425)))
                            - 4))();
}

void sub_1D24BE1A4()
{
  JUMPOUT(0x1D24BE17CLL);
}

uint64_t sub_1D24BE1B0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((999 * ((((v2 + 268566126) ^ (v2 + 335546254) ^ (v0 == v1)) & 1) == 0)) ^ v2))
                            - 4))();
}

void sub_1D24BE204(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  char v8;
  unint64_t v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned int v13;
  unint64_t v14;

  v6 = *(unsigned __int8 *)(v5 - 124) ^ 0xC7;
  if (v6 == 1)
  {
    v8 = 27 * (a5 ^ (a5 - 14));
    v13 = *(_DWORD *)(v5 - 156);
    v12 = *(_DWORD *)(v5 - 152);
    *(_BYTE *)(v5 - 164) = ((8 * v12) ^ 0x20) + ~((v8 + 122) & (2 * ((8 * v12) ^ 0x20))) + 104;
    v11 = -50;
    *(_BYTE *)(v5 - 163) = ((v12 >> 5) ^ 0x98) - ((v12 >> 4) & 0xCE) + 103;
    *(_BYTE *)(v5 - 162) = ((v12 >> 13) ^ 0xC7) - ((2 * ((v12 >> 13) ^ 0xC7)) & 0xCF) + 103;
    *(_BYTE *)(v5 - 161) = ((v12 >> 21) ^ 0x30) - 2 * (((v12 >> 21) ^ 0x30) & 0xEF ^ (v12 >> 21) & 8) + 103;
    HIDWORD(v14) = v13 ^ 0x12;
    LODWORD(v14) = v12;
    *(_BYTE *)(v5 - 160) = (v14 >> 29) - ((2 * (v14 >> 29)) & 0xCF) + 103;
    *(_BYTE *)(v5 - 159) = ((v13 >> 5) ^ 0xD) - ((2 * ((v13 >> 5) ^ 0xD)) & 0xCF) + 103;
    *(_BYTE *)(v5 - 158) = ((v13 >> 13) ^ 0xFD) - ((2 * ((v13 >> 13) ^ 0xFD)) & 0xCF) + 103;
    v10 = (v13 >> 21) ^ 0xFFFFFFF4;
  }
  else
  {
    if (v6 != 2)
      goto LABEL_6;
    v10 = *(_DWORD *)(v5 - 156);
    v7 = *(_DWORD *)(v5 - 152);
    v8 = a4 + a5 - 84;
    *(_BYTE *)(v5 - 164) = ((v10 >> 21) ^ 0xF4) - 2 * (((v10 >> 21) ^ 0xF4) & 0xEF ^ (v10 >> 21) & 8) + 103;
    *(_BYTE *)(v5 - 163) = ((a4 + a5 + 99) ^ (v10 >> 13)) - ((2 * ((a4 + a5 + 99) ^ (v10 >> 13))) & 0xCF) + 103;
    *(_BYTE *)(v5 - 162) = ((v10 >> 5) ^ 0xD) + (~(2 * ((v10 >> 5) ^ 0xD)) | 0x31) + 104;
    HIDWORD(v9) = v10 ^ 0x12;
    LODWORD(v9) = v7;
    *(_BYTE *)(v5 - 161) = (v9 >> 29) - ((2 * (v9 >> 29)) & 0xCF) + 103;
    *(_BYTE *)(v5 - 160) = ((v7 >> 21) ^ 0x30) + ~(2 * (((v7 >> 21) ^ 0x30) & 0xEF ^ (v7 >> 21) & 8)) + 104;
    *(_BYTE *)(v5 - 159) = ((v7 >> 13) ^ 0xC7) - ((2 * ((v7 >> 13) ^ 0xC7)) & 0xCF) + 103;
    *(_BYTE *)(v5 - 158) = ((v7 >> 5) ^ 0x98) - ((v7 >> 4) & 0xCE) + 103;
    LOBYTE(v10) = (8 * v7) ^ 0x20;
    v11 = -64;
  }
  *(_BYTE *)(v5 - 157) = v10 - (((_BYTE)v10 << (~(v8 - 72) & 0xED)) & v11) + 103;
LABEL_6:
  JUMPOUT(0x1D24BD0E0);
}

uint64_t sub_1D24BE620()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (30 * (v1 != v0))))
                            - ((((v2 - 2063383257) | 0x100011E0u) - 12) ^ (v2 - 1748796646) & 0xFD3FDBEC)))();
}

void sub_1D24BE67C()
{
  JUMPOUT(0x1D24BD0E0);
}

uint64_t sub_1D24BE694@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 220 + a2 - 600720616) = 103;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((488 * ((unint64_t)(a2 - 600720615) < 0x40)) ^ (a1 + v2 + 331)))
                            - 12))();
}

uint64_t sub_1D24BE738(uint64_t a1, uint64_t a2)
{
  int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  _BOOL4 v11;
  _BOOL4 v12;

  v8 = v5 + 1762234958 + ((v4 - 710156700) & 0x950379ED);
  v9 = *(_DWORD *)(v7 - 220 + (v8 & 0xFFFFFFFC) + 72);
  *(_BYTE *)(a2 + v8) = (HIBYTE(v9) ^ 0x7A) - ((2 * (HIBYTE(v9) ^ 0x7A)) & 0xCF) + 103;
  *(_BYTE *)(a2 + (v5 + v2)) = (BYTE2(v9) ^ 0xB9) - ((2 * (BYTE2(v9) ^ 0xB9)) & 0xCF) + 103;
  *(_BYTE *)(a2 + (v5 + v2 + 1)) = (BYTE1(v9) ^ 0xCB) - ((2 * (BYTE1(v9) ^ 0xCB)) & 0xCF) + 103;
  *(_BYTE *)(a2 + (v5 + v2 + 2)) = v9 ^ 0xBA;
  v10 = *(_DWORD *)(v7 - 128) - 2136109933;
  v11 = v10 < v3;
  v12 = v5 - 2060642777 < v10;
  if (v5 - 2060642777 < v3 != v11)
    v12 = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((62 * v12) ^ v4)) - 4))();
}

void sub_1D24BE8F8()
{
  JUMPOUT(0x1D24BE8B8);
}

void sub_1D24BE900(uint64_t a1)
{
  int v1;
  _BOOL4 v3;

  v1 = 3804331 * ((-817769123 - (a1 ^ 0xD605E992 | 0xCF41D55D) + (a1 ^ 0xD605E992 | 0x30BE2AA2)) ^ 0xC8FA40FC);
  v3 = *(_OWORD *)(a1 + 32) == 0 || *(_DWORD *)(a1 + 68) - v1 == 1405208126;
  __asm { BR              X9 }
}

uint64_t sub_1D24BEA70@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  _BOOL4 v4;

  v4 = v1[1] != 0x16896D9F80386FBALL && (v1[7] | v1[2]) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1936 * v4) ^ a1)) - ((a1 - 315) | 0x112u) + 423))();
}

uint64_t sub_1D24BEAC8@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *v3;
  *(_DWORD *)(v2 - 0x16896D9F80386FBALL) = 0;
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v4
                                                             + 8 * ((57 * (v5 != 0x454517534C5DD3E5)) ^ (a2 + 505))))((5 * ((a2 + 505) ^ 0x382)) ^ 0x1B1u, a1, 1759421093);
}

uint64_t sub_1D24BEB94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>)
{
  uint64_t v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * ((a9 + 672) ^ (39 * (v9 != 0)))) - ((a9 - 395) | 0x202u) + 542))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1D24BEBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  int v31;
  _BOOL4 v32;

  v31 = v19;
  v27 = 17 * (v18 ^ 0x27B);
  v28 = (((v26 - 144) & 0xCE5FC59B | ~((v26 - 144) | 0xCE5FC59B)) ^ 0x3B54344B) * v19;
  *(_QWORD *)(v26 - 144) = v25;
  *(_QWORD *)(v26 - 128) = v22;
  *(_DWORD *)(v26 - 120) = ((v27 ^ 0xE5D281EF) + v20) ^ v28;
  *(_DWORD *)(v26 - 116) = v28 + v18 + 502;
  v32 = a2 == 0;
  ((void (*)(uint64_t))(*(_QWORD *)(v23 + 8 * (v18 - 422)) - 8))(v26 - 144);
  *(_DWORD *)(v26 - 144) = v27
                         - 1224239923 * ((((v26 - 144) | 0xE0AE54F6) - ((v26 - 144) & 0xE0AE54F6)) ^ 0x121DA921)
                         - 1288;
  *(_QWORD *)(v26 - 136) = a17;
  *(_QWORD *)(v26 - 128) = v21;
  (*(void (**)(uint64_t))(v23 + 8 * (v27 - 1247)))(v26 - 144);
  *(_QWORD *)(v26 - 120) = a16;
  *(_QWORD *)(v26 - 112) = v21;
  *(_DWORD *)(v26 - 128) = v27
                         - (((((v26 - 144) | 0x29DA8444) ^ 0xFFFFFFFE) - (~(v26 - 144) | 0xD6257BBB)) ^ 0xDCD17594)
                         * v31
                         - 848;
  *(_QWORD *)(v26 - 144) = a17;
  *(_QWORD *)(v26 - 136) = a12;
  *(_QWORD *)(v26 - 104) = a18;
  v29 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v27 ^ 0x5EA)))(v26 - 144);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (((((v27 - 1365) | 0x483) + ((v27 - 1968094674) & 0x754EBCFF) - 2322) * v32) ^ v27)))(v29);
}

uint64_t sub_1D24BEEE0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;
  int v9;
  _DWORD *v10;

  v6 = 1755732067 * ((((v5 - 144) | 0xA3F7C6DB) - (v5 - 144) + ((v5 - 144) & 0x5C083920)) ^ 0x7D317B00);
  *(_DWORD *)(v5 - 116) = v1 - v6 + ((v4 - 691) ^ 0xCB1C8204);
  *(_DWORD *)(v5 - 144) = (v4 - 558) ^ v6;
  *(_QWORD *)(v5 - 136) = v8;
  *(_QWORD *)(v5 - 128) = v2;
  result = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (v4 - 1022)) - 8))(v5 - 144);
  *v10 = v9;
  *(_DWORD *)(v0 + 64) = 137543419;
  return result;
}

void sub_1D24BF040(unint64_t a1)
{
  unsigned int v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  char v8;
  char *v9;
  int v10;
  _QWORD v11[4];
  int v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  int v17;
  int v18;
  unint64_t v19;
  unint64_t *v20;
  int32x4_t v21;
  int32x4_t v22;
  int v23;
  uint64_t *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  _BYTE v34[7];
  _BYTE v36[4];
  unsigned int v37;
  unint64_t *v38;
  int v39;
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v2 = 1225351577 * ((~(_DWORD)a1 & 0xE76E553A | a1 & 0x1891AAC5) ^ 0xC4F48D2C);
  v3 = *(_DWORD *)(a1 + 4) ^ v2;
  v4 = 628203409 * ((2 * (v36 & 0x317E21C8) - v36 - 830349772) ^ 0x4C09D207);
  v5 = *(_DWORD *)(a1 + 28);
  v6 = *(_DWORD *)(a1 + 24) ^ v2;
  v14 = 1225351577 * ((~a1 & 0x4629EE80E76E553ALL | a1 & 0xB9D6117F1891AAC5) ^ 0xABBF46D8C4F48D2CLL);
  v7 = v5 ^ v2;
  v37 = 1023944139 - v4;
  v39 = v3 + v4 - 1882357516;
  v20 = &STACK[0x5C256D3C5DC223C0];
  v38 = &STACK[0x5C256D3C5DC223C0];
  sub_1D24A6CC8((uint64_t)v36);
  v26 = v7 - 407528451;
  v13 = v7 - 1292467144;
  v17 = v7 + 573627540;
  v18 = v7 + 265065958;
  v24 = &v33;
  v11[1] = v34;
  v11[2] = (char *)&v11[-93782982] + 2;
  v8 = (v3 + 121) & 0xDE;
  v16 = (v3 + 1237674890) & 0xB63A95C5;
  v23 = v3 ^ 0xF1;
  v21 = vdupq_n_s32(0x832BEFBu);
  v22 = vdupq_n_s32(0x10657DF6u);
  v28 = v3 ^ 0xF1u;
  v27 = v28;
  v25 = v3;
  v15 = a1;
  v12 = (v3 - 316756615) & 0x12E153DE;
  v9 = (char *)*(&off_1E93A7480 + v3 + 31) - 4;
  v19 = *(_QWORD *)&v9[8 * v3] + ((v3 + 567) ^ 0xFFFFFFFFFFFFFD97);
  v10 = v6 - (((v6 << (v8 + 117)) + 735232478) & 0x7CED5280) + 1415580207;
  v29 = (HIBYTE(v10) ^ 0xBE) - ((2 * (HIBYTE(v10) ^ 0xBE)) & 0xCF) + 103;
  v30 = (BYTE2(v10) ^ 0x76) - ((2 * (BYTE2(v10) ^ 0x76)) & 0xCF) + 103;
  v31 = (BYTE1(v10) ^ 0xA9) - ((2 * (BYTE1(v10) ^ 0xA9)) & 0xCF) + 103;
  v32 = (v6 - ((((_BYTE)v6 << (v8 + 117)) - 34) & 0x80) + 47) ^ 0x27;
  __asm { BR              X13 }
}

uint64_t sub_1D24BF3D4@<X0>(int a1@<W2>, uint64_t a2@<X3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,char a29,char a30)
{
  int v30;
  uint64_t v31;

  *(_BYTE *)(a2 + (v30 + a1 - 233 - 164)) = a29;
  *(_BYTE *)(a2 + (a1 - 344 + a3 - 730294675)) = a30;
  return ((uint64_t (*)(void))(*(_QWORD *)(v31 + 8 * ((a1 - 233) ^ 0x4D)) - 4))();
}

uint64_t sub_1D24BF460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,char a34)
{
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;

  *(_BYTE *)(a4 + (v37 + 53)) = *(&a34 + v36 + ((v34 - 131) | 0x14u) - 826072673);
  return ((uint64_t (*)(void))(*(_QWORD *)(v39 + 8 * (v34 ^ (1525 * ((v35 & 0xFFFFFFFC) == v38)))) - 4))();
}

uint64_t sub_1D24BF4B0@<X0>(uint64_t a1@<X3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(uint64_t), unint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28)
{
  int v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  int v32;
  uint64_t v33;

  v31 = (v28 + 66506969) & 0xFC092EB7;
  *(_BYTE *)(a1 + (v31 ^ 0xD4789697) + a2) = *(&a28 + (v29 - 826072620));
  v32 = 1224239923 * ((2 * ((v30 - 168) & 0x6865AE28) - (v30 - 168) - 1751494190) ^ 0x6529AC05);
  STACK[0x318] = a14;
  *(_DWORD *)(v30 - 160) = v32 + v31 + 351;
  *(_DWORD *)(v30 - 156) = v32 ^ 0x2CF6917B;
  v33 = sub_1D24C871C(v30 - 168);
  return a13(v33);
}

uint64_t sub_1D24BF568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30)
{
  uint64_t v30;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * ((239 * (a14 + (STACK[0x2D4] & 0x3F ^ a18 ^ 0x2FDF7E77) + ((2 * LODWORD(STACK[0x2D4])) & 0x6E ^ 8u) > 0xFFFFFFBF)) ^ (a30 + 575)))
                                                                                                  - 4))(a1, 3279722779, a3, &STACK[0x290], 43, 566);
}

uint64_t sub_1D24BF600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17)
{
  int v17;
  int v18;
  uint64_t v19;
  _BOOL4 v20;

  v20 = a17 < 0x3F5AD825;
  if (v20 == (v17 + 47673664) < 0x3F5AD825)
    v20 = v17 + 47673664 < a17;
  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * ((!v20 * (v18 + 261)) ^ v18)) - 4))();
}

uint64_t sub_1D24BF668@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  _BOOL4 v14;

  *(_BYTE *)(a4 + (a6 + v8)) = *(_BYTE *)(v11 + (v6 + a2))
                                           - ((2 * *(_BYTE *)(v11 + (v6 + a2))) & 0xCF)
                                           + 103;
  v12 = a1 + v6 + 1;
  v13 = (a3 < v9) ^ (v12 < v9);
  v14 = v12 < a3;
  if (v13)
    v14 = a3 < v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((!v14 * a5) ^ v7)) - 4))();
}

uint64_t sub_1D24BF6DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,unint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v27;

  v27 = ((a6 + 1277927792) & 0xB3D4587F) + 525;
  v23 = 1224239923 * ((((v22 - 168) | 0x31BDA1EC) - ((v22 - 168) & 0x31BDA1EC)) ^ 0xC30E5C3B);
  *(_DWORD *)(v22 - 160) = v23 + a6 - 1201;
  *(_DWORD *)(v22 - 156) = v23 ^ a18;
  STACK[0x318] = a21;
  v24 = sub_1D24C871C(v22 - 168);
  v25 = STACK[0x2D4] & 0x3F;
  *((_BYTE *)&STACK[0x290] + (v25 ^ 4)) = -25;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v21
                                                     + 8
                                                     * (((2 * ((v25 ^ 4) > (v27 ^ 0x276))) | (8 * ((v25 ^ 4) > (v27 ^ 0x276)))) ^ a6)))(v24, 3279722779);
}

uint64_t sub_1D24BF7D8@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * ((7 * (a1 == ((((v1 - 1764520811) & 0x692C713F) + 565) ^ 0x274))) ^ v1))
                                          - 8))(29);
}

uint64_t sub_1D24BF82C()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((198
                                          * ((v0 ^ 0x1CC ^ ((v1 - 357) | 0x111)) < ((v1 + 1105989353) & 0xBE13EEFF) - 44)) ^ v1))
                            - 8))();
}

uint64_t sub_1D24BF888@<X0>(int a1@<W0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(a4 + a2) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((((v5 - 13) ^ 0x1D2) & v4) != 8) * a1) ^ (v5 - 13)))
                            - (v5 + 79)
                            + 574))();
}

uint64_t sub_1D24BF8D8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + v5) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v4 != v5) * a1) ^ v2)) - a2 + 574))();
}

uint64_t sub_1D24BF900@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((203 * ((((a1 - 530) ^ (v2 == v1)) & 1) == 0)) ^ a1))
                            - ((a1 - 580) | 0x14u)
                            + 14))();
}

uint64_t sub_1D24BF950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  char v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v4 + v8 + a4 - 1) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((((unint64_t)(v4 + v8) < 0x40) * v7) ^ (v5 + 530))) - 8))();
}

uint64_t sub_1D24BF988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned __int8 a25,unint64_t a26)
{
  int v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  uint64_t result;
  uint64_t v38;
  _BOOL4 v40;
  uint64_t (*v41)(uint64_t, uint64_t, unint64_t *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  BOOL v43;

  v31 = STACK[0x2DC];
  v32 = STACK[0x2DC];
  v33 = STACK[0x2E0];
  v34 = STACK[0x2E4];
  v35 = STACK[0x2E0];
  v36 = STACK[0x2E4];
  result = LOBYTE(STACK[0x2F0]) ^ 0xC7u;
  if ((_DWORD)result == 2)
  {
    v43 = (unint64_t)&STACK[0x290] < a26 && v27 < (unint64_t)&STACK[0x2D0];
    return (*(uint64_t (**)(uint64_t))(v28 + 8 * (int)((((v43 ^ a25) & 1) * (a7 + 589)) ^ (a7 + 346))))(45730781);
  }
  else if ((_DWORD)result == 1)
  {
    v38 = 111 * (a7 ^ 0x38);
    v40 = (unint64_t)&STACK[0x290] < a26 && v27 < (unint64_t)&STACK[0x2D0];
    v41 = (uint64_t (*)(uint64_t, uint64_t, unint64_t *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 + 8 * (int)((a7 + 1538) ^ (104 * v40))) - (v38 ^ 0x53C));
    return v41(v38, 962523476, &STACK[0x290], v41, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, v30 - 204, a19,
             a20,
             a21,
             a22);
  }
  else
  {
    LODWORD(STACK[0x2D8]) = 2 * (LODWORD(STACK[0x2D8]) ^ v26) + v26 - (v29 & (4 * (LODWORD(STACK[0x2D8]) ^ v26)));
    LODWORD(STACK[0x2DC]) = (v32 ^ v26) + (v31 ^ v26) + v26 - (v29 & (2 * ((v32 ^ v26) + (v31 ^ v26))));
    LODWORD(STACK[0x2E0]) = (v35 ^ v26) + (v33 ^ v26) + v26 - (v29 & (2 * ((v35 ^ v26) + (v33 ^ v26))));
    LODWORD(STACK[0x2E4]) = (v36 ^ v26) + (v34 ^ v26) + v26 - (v29 & (2 * ((v36 ^ v26) + (v34 ^ v26))));
  }
  return result;
}

uint64_t sub_1D24C0A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unsigned int a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  uint64_t v32;
  unsigned int v33;
  _BOOL4 v34;
  _BOOL4 v35;
  _BOOL4 v36;

  v33 = a32 - 933482820 + (a7 ^ 0xD7) + 330;
  v34 = v33 < 0x4DF978E;
  v35 = v33 > a28;
  if (a28 < 0x4DF978E != v34)
    v36 = v34;
  else
    v36 = v35;
  return ((uint64_t (*)(void))(*(_QWORD *)(v32 + 8 * ((1982 * !v36) ^ (a7 + 616))) - 4))();
}

uint64_t sub_1D24C0AFC(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8 * ((213 * (((v3 - 505) ^ (a2 + 83)) + v2 >= v2 + a2)) ^ v3))
                            - 8))();
}

uint64_t sub_1D24C0B34(uint64_t a1, int a2, uint64_t a3, int8x16_t *a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;

  v11 = *(int8x16_t *)(v8 + v5 + (v6 ^ a5 ^ (a2 - 23)));
  *a4 = vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), v9)), v10);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (v6 + 15)) - 8))();
}

uint64_t sub_1D24C0B90(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(a4 + v10) = v9
                       - 14
                       + *(_BYTE *)(v12 + (v8 + a2))
                       - ((2 * *(_BYTE *)(v12 + (v8 + a2))) & 0xCF)
                       + 72;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((v10 == 63) * a8) ^ v9)) - 8))();
}

uint64_t sub_1D24C0BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  uint64_t v31;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31
                                                                                 + 8
                                                                                 * ((13
                                                                                   * ((((a7 ^ 0x97) - 95) ^ 0xCEC32248)
                                                                                    + a31 < 0xFFFFFFFB)) ^ (a7 + 1202)))
                                                                     - 8))(a1, a2, a3, a4);
}

uint64_t sub_1D24C0C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13
                                                                                 + 8
                                                                                 * ((13
                                                                                   * ((((a7 ^ 0x97) - 95) ^ 0xCEC32248)
                                                                                    + a13 < 0xFFFFFFFB)) ^ (a7 + 1202)))
                                                                     - 8))(a1, a2, a3, a4);
}

void sub_1D24C0C84()
{
  JUMPOUT(0x1D24BFDE8);
}

uint64_t sub_1D24C0CBC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1572 * ((v0 - 750264510) < 0x38)) ^ (v1 + 583)))
                            - ((v1 + 1032) ^ 0x430)))();
}

uint64_t sub_1D24C0D08@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v4 = v1;
  v5 = v1 + v2;
  if (v5 <= 0x38)
    v5 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((82 * (v5 - v4 + (a1 ^ 0x426u) + 613 + 750263871 > 7)) ^ a1))
                            - 8))();
}

uint64_t sub_1D24C0D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(a11 + v13) = v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((((v12 & 0xFFFFFFFFFFFFFFF8) == 8) * (v11 + 1095)) ^ v11)) - 8))();
}

uint64_t sub_1D24C0DA0()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *v1 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v3 == 0) * v2) ^ v0)) - 8))();
}

uint64_t sub_1D24C0DC4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((165 * (((v0 == v1) ^ (v2 - 70)) & 1)) ^ v2))
                            - 12))();
}

uint64_t sub_1D24C0DFC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  int v2;
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(a2 + v5 + a1 - 1) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((unint64_t)(a2 + v5) > 0x37) * v4) | (v2 + 468))) - 12))();
}

void sub_1D24C0E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  int v7;
  unsigned int v8;
  char v9;
  unint64_t v10;
  unsigned int v11;
  char v12;
  unsigned int v13;
  unsigned int v14;
  unint64_t v15;

  v7 = LOBYTE(STACK[0x2F0]) ^ 0xC7;
  if (v7 == 1)
  {
    v9 = a7 - 76;
    v13 = STACK[0x2D4];
    v14 = STACK[0x2D0];
    LOBYTE(STACK[0x2C8]) = ((8 * LOBYTE(STACK[0x2D4])) ^ 0x20)
                         - ((2 * ((8 * LOBYTE(STACK[0x2D4])) ^ 0x20)) & 0xC0)
                         + 103;
    LOBYTE(STACK[0x2C9]) = ((v13 >> (a7 - 47)) ^ 0x98) - ((2 * (v13 >> (a7 - 47))) & 0xCF) + 103;
    LOBYTE(STACK[0x2CA]) = ((v13 >> 13) ^ 0xC7) + (~(2 * ((v13 >> 13) ^ 0xC7)) | 0x31) + 104;
    LOBYTE(STACK[0x2CB]) = ((v13 >> 21) ^ 0x30) - ((2 * ((v13 >> 21) ^ 0x30)) & 0xCF) + 103;
    HIDWORD(v15) = v14 ^ 0x12;
    LODWORD(v15) = v13;
    LOBYTE(STACK[0x2CC]) = (v15 >> 29) - ((2 * (v15 >> 29)) & 0xCF) + 103;
    LOBYTE(STACK[0x2CD]) = ((v14 >> 5) ^ 0xD) - ((2 * ((v14 >> 5) ^ 0xD)) & 0xCF) + 103;
    LOBYTE(STACK[0x2CE]) = ((v14 >> 13) ^ 0xFD) - ((2 * ((v14 >> 13) ^ 0xFD)) & 0xCF) + 103;
    v12 = -50;
    v11 = (v14 >> 21) ^ 0xFFFFFFF4;
  }
  else
  {
    if (v7 != 2)
      goto LABEL_6;
    v11 = STACK[0x2D0];
    v8 = STACK[0x2D4];
    LOBYTE(STACK[0x2C8]) = ((LODWORD(STACK[0x2D0]) >> 21) ^ 0xF4)
                         - ((((LODWORD(STACK[0x2D0]) >> 21) ^ 0xFFFFFFF4) << (a7 - 51)) & 0xCE)
                         + 103;
    LOBYTE(STACK[0x2C9]) = ((v11 >> 13) ^ 0xFD) - ((2 * ((v11 >> 13) ^ 0xFD)) & 0xCF) + 103;
    v9 = a7 - 76;
    LOBYTE(STACK[0x2CA]) = ((v11 >> 5) ^ 0xD) - ((2 * ((v11 >> 5) ^ 0xD)) & 0xCF) + 103;
    HIDWORD(v10) = v11 ^ 0x12;
    LODWORD(v10) = v8;
    LOBYTE(STACK[0x2CB]) = (v10 >> 29) - ((2 * (v10 >> 29)) & 0xCF) + 103;
    LOBYTE(STACK[0x2CC]) = ((v8 >> 21) ^ 0x30) + (~(2 * ((v8 >> 21) ^ 0x30)) | 0x31) + 104;
    LOBYTE(STACK[0x2CD]) = ((v8 >> 13) ^ 0xC7) - ((2 * ((v8 >> 13) ^ 0xC7)) & 0xCF) + 103;
    LOBYTE(STACK[0x2CE]) = ((v8 >> 5) ^ 0x98) - ((v8 >> 4) & 0xCE) + 103;
    LOBYTE(v11) = (8 * v8) ^ 0x20;
    v12 = -64;
  }
  LOBYTE(STACK[0x2CF]) = v11 - (v12 & (2 * v11)) + (((v9 + 24) | 0x34) ^ 0x53);
LABEL_6:
  JUMPOUT(0x1D24BFDE4);
}

uint64_t sub_1D24C1050()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1046 * (v1 + v2 + 13 * (v0 ^ 0xA7u) < 4)) ^ v0)) - 4))();
}

uint64_t sub_1D24C1088@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27)
{
  int v27;
  int v28;
  uint64_t v29;

  LOBYTE(STACK[0x290]) = *(&a27 + a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v29 + 8 * ((303 * (((v27 - 111) ^ 0xCEC321E6) + v28 < 4)) ^ v27)) - 4))();
}

void sub_1D24C10CC()
{
  JUMPOUT(0x1D24BF3FCLL);
}

uint64_t sub_1D24C10DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  if (a29 == 2)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35
                                                                          + 8
                                                                          * ((1859
                                                                            * (LODWORD(STACK[0x2EC]) != a7 + 108174626)) ^ (a7 + 726)))
                                                              - 4))(a1, a2, a18);
  if (a29 == 1)
    return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v35
                                                                 + 8
                                                                 * ((465 * (LODWORD(STACK[0x2EC]) == 108174678)) ^ (a7 + 679)))
                                                     - (a7 + 679)
                                                     + 727))(a1, a18);
  v37 = 7 * (a7 ^ 0x97u);
  v38 = ((unint64_t)&a35 ^ 0x72F0DFCF8D96DBDBLL)
      + ((2 * (_QWORD)&a35) & 0xE5E1BF9F1B2DB7B0)
      - 0x1080004801028450
      + v37;
  v39 = 13 * (v37 ^ 0x471);
  *((_BYTE *)&STACK[0x290] + v39 + 39) = (v38 ^ 0xBA) * (v38 + 17);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v35 + 8 * (int)((685 * (v39 == -39)) ^ v37)) - 8))(a1, a18);
}

void sub_1D24C1414()
{
  JUMPOUT(0x1D24C13E4);
}

uint64_t sub_1D24C141C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t result;

  v3 = 235795823 * ((((v2 - 168) | 0x51267A54) - (v2 - 168) + ((v2 - 168) & 0xAED985A8)) ^ 0xC58B330D);
  *(_DWORD *)(v2 - 132) = (a1 + 1741) ^ v3;
  *(_DWORD *)(v2 - 160) = v3 + 603303772;
  result = ((uint64_t (*)(uint64_t))*(&off_1E93A7480 + a1 + 43))(v2 - 168);
  *(_DWORD *)(v1 + 32) = *(_DWORD *)(v2 - 136);
  return result;
}

void sub_1D24C1520(uint64_t a1)
{
  int v1;

  v1 = 1759421093 * ((2 * (a1 & 0x6BD6573D) - a1 - 1809209150) ^ 0x27541896);
  __asm { BR              X9 }
}

uint64_t sub_1D24C15C4@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((v2 != 2039145732) * (a1 - 467)) | a1)) - 12))();
}

uint64_t sub_1D24C160C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(a3
                                                                                + 8
                                                                                * ((((a2 + 556) | 0x11) - 172932322) & 0xA4EBADA))
                                                                    - 8))(a1, 103, (v3 - 881), 1047953042);
}

uint64_t sub_1D24C1734@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((((v3 - 410) ^ v3 ^ a1) * (v2 == 0)) ^ v3)) - 8))();
}

uint64_t sub_1D24C1764@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(a1 + 8 * ((199 * (v1 != ((2 * v2) ^ 0xFFFFFFB3) + 239 * (v2 ^ 0x365))) ^ v2)))();
}

uint64_t sub_1D24C17A0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;

  v6 = 7 * (v4 ^ 0x62B);
  v7 = (v6 ^ v1) + v2;
  v8 = v2 + 1;
  *(_DWORD *)(*(_QWORD *)(v3 - 0x454517534C5DD3DDLL) + 4 * v7) = v5;
  v9 = 3 * (v6 ^ 0x7DB);
  *(_DWORD *)(v3 - 0x454517534C5DD3E1) = v8;
  v10 = (v9 ^ (v1 + 1395)) + v8;
  if (v10 < 0)
    v10 = -v10;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)((2020
                                     * (((v10 ^ 0xFFFF7BFD) + ((2 * v10) & 0xFFFEF7FA) + 32752 + ((v9 - 1014) | 0x412)) >> 31)) ^ v9)))();
}

uint64_t sub_1D24C1884@<X0>(unsigned int a1@<W1>, uint64_t a2@<X8>)
{
  int v2;
  _QWORD *v3;
  int v4;

  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((667 * (*(_DWORD *)(*v3 + 4 * a1) == v2 + 39 * (((v4 - 1008) | 0x54) ^ 0x6C) - 1014)) ^ v4)))();
}

uint64_t sub_1D24C18CC@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  int v2;

  return (*(uint64_t (**)(void))(a2 + 8 * (int)((2020 * ((v2 - 1 + ((a1 - 1014) | 0x412u)) >> 31)) ^ a1)))();
}

uint64_t sub_1D24C1900(uint64_t result)
{
  int v1;
  int v2;
  int v3;
  int *v4;
  int v5;
  int v6;

  if ((v1 + v2 + 648) >= 0x7FFFFFFF)
    v6 = -v3;
  else
    v6 = v5;
  *v4 = v6;
  *(_DWORD *)(result + 28) = -683864848;
  return result;
}

uint64_t sub_1D24C193C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) - 1178560073 * ((-2 - ((a1 | 0x4D53A28B) + (~(_DWORD)a1 | 0xB2AC5D74))) ^ 0x1F3B61D1);
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1E93A7480 + (v1 ^ 0x2F2))
                                        + 8
                                        * (((*(_QWORD *)a1 == *(_QWORD *)(a1 + 16)) * (((v1 - 47) | 0x108) - 469)) ^ v1)
                                        - 4)
                            - 4))();
}

uint64_t sub_1D24C19C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;

  v4 = *(_DWORD *)(v2 - 0x454517534C5DD3E1);
  v5 = (((v3 ^ 0x1DB) - 472) ^ 0xA2208C46) + v4;
  if (v5 < 0)
    v5 = -v5;
  *(_DWORD *)(v1 - 0x454517534C5DD3E1) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((241 * ((v5 ^ 0x5AF9CDDF) - 14745867 + ((2 * v5) & 0xB5F39BBE) == 1511574740)) ^ v3))
                            - 8))();
}

uint64_t sub_1D24C1A50@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  *(_DWORD *)(*(_QWORD *)(v3 - 0x454517534C5DD3DDLL) + 4 * (v5 - 1511574741)) = *(_DWORD *)(*(_QWORD *)(v4 - 0x454517534C5DD3DDLL)
                                                                                            + 4 * (v5 - 1511574741));
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((973 * (((v2 + 1617728988) & 0x9F936BFB ^ 0xFFFFFD5E) + v5 == v1)) ^ v2))
                            - 4))();
}

void sub_1D24C1ACC()
{
  JUMPOUT(0x1D24C1A94);
}

uint64_t sub_1D24C1AD4(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))(*((_QWORD *)&unk_1E93A39F0
                                            + ((361 * (*(_DWORD *)(a2 + 4) == 1699122673)) ^ 0x441u))
                                          - 4))(4294925278);
}

uint64_t sub_1D24C1B1C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(a2 + 96) + 468) = *(_BYTE *)(*(_QWORD *)(a1 + 8) + 12);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2 + 8688) - 4))(0);
}

uint64_t sub_1D24C1B74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  int v6;

  *(_BYTE *)(a1 + (v6 + v4)) = *(_BYTE *)(v3 + (v6 + v4));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v1 + 8 * ((127 * (v6 - 1 == v2)) ^ v5)) - 4))(0);
}

void sub_1D24C1BAC(_DWORD *a1)
{
  unsigned int v1;

  v1 = (*a1 + 1224239923 * (((a1 | 0xBAA17AAE) - (a1 & 0xBAA17AAE)) ^ 0x48128779)) ^ 0x3CD;
  __asm { BR              X12 }
}

uint64_t sub_1D24C1DA4(int a1, int a2, int a3, int a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7
                              + 8 * (((a4 + 1 == ((a6 + a1) & (v6 + 700) ^ a3)) * (((a6 + a1 + v6) | a2) - 766)) ^ a6)))();
}

uint64_t sub_1D24C1DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  *(_DWORD *)(a11 - 0x61CDA04F11127EA2) = ((v21 - 797) | 0x20E) - v16 - 1192717514;
  v23 = 1759421093 * ((v22 - 136) ^ 0xB37DB054);
  *(_QWORD *)(v22 - 136) = v17;
  *(_DWORD *)(v22 - 128) = 483381751 - v23;
  *(_DWORD *)(v22 - 124) = v23 + v21 - 270;
  sub_1D24ADF74(v22 - 136);
  v24 = 1755732067 * ((2 * ((v22 - 136) & 0x4DEE2648) - (v22 - 136) - 1307453004) ^ 0x6CD7646F);
  *(_QWORD *)(v22 - 128) = v17;
  *(_DWORD *)(v22 - 136) = v24 + v21 + 708;
  *(_DWORD *)(v22 - 132) = (((v18 << 6) & 0xFF7FDFC0) + ((32 * v18) ^ 0xFFBFEFFC) + 1465892536) ^ v24;
  sub_1D24C4858((_DWORD *)(v22 - 136));
  *(_QWORD *)(v22 - 136) = a16;
  *(_QWORD *)(v22 - 120) = &STACK[0x454517534C5DD425];
  *(_DWORD *)(v22 - 128) = v21 + 1178560073 * ((v22 - 136) ^ 0xAD973CA5) - 284;
  sub_1D24C193C(v22 - 136);
  *(_QWORD *)(v22 - 136) = a16;
  *(_QWORD *)(v22 - 128) = v17;
  *(_DWORD *)(v22 - 116) = v21
                         + 1374699841 * (((v22 - 136) & 0x4C5E16CD | ~((v22 - 136) | 0x4C5E16CD)) ^ 0xDE55F13B)
                         + 427;
  v25 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v21 ^ 0x30B)))(v22 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * ((127
                                                        * (*(_DWORD *)(v22 - 120) - 1098373452 >= (v21 ^ 0xEE50A0E8))) ^ v21))
                                          - 12))(v25);
}

uint64_t sub_1D24C1FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v15 - 120) = v12;
  *(_DWORD *)(v15 - 128) = v14
                         + 1178560073
                         * ((-1856491855 - ((v15 - 136) | 0x91582EB1) + ((v15 - 136) | 0x6EA7D14E)) ^ 0xC330EDEB)
                         + 479;
  *(_QWORD *)(v15 - 136) = v11;
  v16 = sub_1D24C193C(v15 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13 + 8 * ((((105 * (v14 ^ 0xCC)) ^ 0xC2) * (a11 > 0)) ^ v14))
                                          - 8))(v16);
}

uint64_t sub_1D24C2090@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((940
                                          * ((int)((((v4 - 1381) ^ (2 * a1) ^ 0x86F372B1)
                                                  + v3
                                                  - 2
                                                  * (((v4 - 1381) ^ (2 * a1) ^ 0x86F372B1) & (v3 + 2) ^ (2 * a1) & 2)) ^ v3) > v1)) ^ v4))
                            - 8))();
}

uint64_t sub_1D24C20E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  *(_QWORD *)(v20 - 120) = a15;
  *(_DWORD *)(v20 - 128) = v19 + 1178560073 * ((v20 - 136) ^ 0xAD973CA5) + 584;
  *(_QWORD *)(v20 - 136) = a16;
  sub_1D24C193C(v20 - 136);
  v21 = 1755732067 * (((~(v20 - 136) & 0x2D87648E) - (~(v20 - 136) | 0x2D87648F)) ^ 0xF341D954);
  *(_DWORD *)(v20 - 136) = v21 + v19 + 1576;
  *(_DWORD *)(v20 - 132) = v21 ^ 0x571FAEB5;
  *(_QWORD *)(v20 - 128) = v16;
  sub_1D24C4858((_DWORD *)(v20 - 136));
  *(_QWORD *)(v20 - 136) = a16;
  *(_QWORD *)(v20 - 128) = v16;
  *(_DWORD *)(v20 - 116) = v19
                         + 1374699841 * (((v20 - 136) & 0x3FDFE35E | ~((v20 - 136) | 0x3FDFE35E)) ^ 0xADD404A8)
                         + 1295;
  v22 = v17(v20 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8
                                                      * (((*(_DWORD *)(v20 - 120) <= 0x4177D94Bu)
                                                        * (((v19 + 184) | 0xC2) - 383)) ^ (v19 + 218)))
                                          - 12))(v22);
}

uint64_t sub_1D24C252C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;
  int v14;

  return (*(uint64_t (**)(void))(v13
                              + 8
                              * ((491
                                * ((a13 ^ 0xDFD63A18) + 594399232 + ((2 * a13) & 0xBFAC7430) + v14 - 54790921 > 0x7FFFFFFD)) ^ v14)))();
}

void sub_1D24C2DD8(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t *v5;
  unint64_t *v6;
  unint64_t *v7;
  uint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 16) + 535753261 * ((-2 - ((a1 | 0x65A1D1FF) + (~(_DWORD)a1 | 0x9A5E2E00))) ^ 0x90AA202F);
  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v5 = *(unint64_t **)(a1 + 24);
  v4 = *(unint64_t **)(a1 + 32);
  v10 = *(_QWORD *)(*(_QWORD *)a1 - 0x61CDA04F11127EAALL);
  v11 = v2;
  v7 = &STACK[0x454517534C5DD425];
  v8 = v3;
  v9 = v4;
  v12 = v1
      + 628203409 * ((1211618388 - (&v7 | 0x4837D454) + (&v7 | 0xB7C82BAB)) ^ 0x35402798)
      + 1055;
  ((void (*)(unint64_t **))((char *)*(&off_1E93A7480 + v1 - 371) - 8))(&v7);
  v6 = *(unint64_t **)(v3 - 0x61CDA04F11127EB2);
  LODWORD(v8) = v1
              + 1178560073 * (((&v7 | 0x7EF1CB1F) + (~&v7 | 0x810E34E0)) ^ 0xD366F7BB)
              + 144;
  v9 = &STACK[0x454517534C5DD415];
  v7 = v6;
  sub_1D24C193C((uint64_t)&v7);
  HIDWORD(v8) = v1
              + 1224239923 * ((&v7 - 1055940362 - 2 * (&v7 & 0xC10FA0F6)) ^ 0x33BC5D21)
              - 142;
  v7 = v5;
  sub_1D24ACAAC((uint64_t)&v7);
  __asm { BR              X8 }
}

uint64_t sub_1D24C3024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t), uint64_t a12)
{
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_DWORD *)(v19 - 104) = v13
                         + 628203409
                         * ((-2117829029 - ((v19 - 144) | 0x81C47E5B) + ((v19 - 144) | 0x7E3B81A4)) ^ 0xFCB38D97)
                         + 1001;
  *(_QWORD *)(v19 - 120) = v18;
  *(_QWORD *)(v19 - 112) = a12;
  *(_QWORD *)(v19 - 144) = v18;
  *(_QWORD *)(v19 - 136) = v16;
  *(_QWORD *)(v19 - 128) = v14;
  v20 = a11(v19 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v15
                                                      + 8
                                                      * ((99
                                                        * (v12
                                                         + v17
                                                         + ((((v13 - 715745032) & 0x2AA966D1) - 1430663866) & 0x554632EAu)
                                                         - 579 > 0x7FFFFFFE)) ^ (v13 - 715745032) & 0x2AA966D1))
                                          - 4))(v20);
}

uint64_t sub_1D24C30F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;

  *(_DWORD *)(v19 - 112) = (v13 + 353) ^ (1374699841
                                        * ((((v19 - 144) | 0xA42EBFDA) - ((v19 - 144) & 0xA42EBFDA)) ^ 0xC9DAA7D3));
  *(_QWORD *)(v19 - 128) = v18;
  *(_QWORD *)(v19 - 120) = v16;
  *(_QWORD *)(v19 - 144) = v14;
  *(_QWORD *)(v19 - 136) = v18;
  ((void (*)(uint64_t))*(&off_1E93A7480 + v13 - 522))(v19 - 144);
  v20 = 1374699841 * ((((v19 - 144) | 0xA95C0B48) - (v19 - 144) + ((v19 - 144) & 0x56A3F4B0)) ^ 0xC4A81341);
  *(_DWORD *)(v19 - 140) = (v13 + 244) ^ v20;
  *(_DWORD *)(v19 - 128) = -135985008 - v20 + v17;
  *(_QWORD *)(v19 - 136) = a13;
  v21 = sub_1D24C5680(v19 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v15
                                                      + 8
                                                      * (((*(_DWORD *)(v19 - 144) == -868706597) * ((v13 - 49) ^ 0x214)) | v13))
                                          - 4))(v21);
}

uint64_t sub_1D24C320C()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((99 * (v0 + v2 + ((v3 - 1430663866) & 0x554632EAu) - 579 > 0x7FFFFFFE)) ^ v3))
                            - 4))();
}

uint64_t sub_1D24C3258()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;

  v5 = *(_QWORD *)(v8 + 40);
  v6 = 1759421093 * ((2 * ((v4 - 144) & 0x7AB93DF8) - (v4 - 144) + 88523270) ^ 0xB63B7252);
  *(_QWORD *)(v4 - 144) = v10;
  *(_DWORD *)(v4 - 136) = 483381751 - v6;
  *(_DWORD *)(v4 - 132) = v6 + v2 + 158;
  sub_1D24ADF74(v4 - 144);
  *(_QWORD *)(v4 - 120) = v3;
  *(_QWORD *)(v4 - 112) = v10;
  *(_QWORD *)(v4 - 144) = v3;
  *(_QWORD *)(v4 - 136) = v1;
  *(_DWORD *)(v4 - 104) = v2
                        + 628203409
                        * ((((v4 - 144) ^ 0xD4AAEF75 | 0x3F0CA017)
                          - ((v4 - 144) ^ 0xD4AAEF75)
                          + (((v4 - 144) ^ 0xD4AAEF75) & 0xC0F35FE8)) ^ 0x692E4351)
                        + 1055;
  *(_QWORD *)(v4 - 128) = v0;
  v9(v4 - 144);
  *(_DWORD *)(v4 - 136) = v2
                        + 1178560073 * ((((v4 - 144) | 0xDA22FAE3) + (~(v4 - 144) | 0x25DD051C)) ^ 0x77B5C647)
                        + 144;
  *(_QWORD *)(v4 - 128) = v5;
  *(_QWORD *)(v4 - 144) = v3;
  return sub_1D24C193C(v4 - 144);
}

void sub_1D24C33B0(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) - 535753261 * (a1 ^ 0xAF40E2F);
  __asm { BR              X9 }
}

void sub_1D24C343C()
{
  _DWORD *v0;

  *v0 = -1322557230;
}

uint64_t sub_1D24C36D8(uint64_t a1, uint64_t a2)
{
  return (*((uint64_t (**)(uint64_t))&unk_1E93A39F0 + ((22 * (*(_DWORD *)(a2 + 4) == 1699122673)) ^ 0x2A7u)))(4294925278);
}

uint64_t sub_1D24C371C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(a2 + 96) + 448) = *(_BYTE *)(*(_QWORD *)(a1 + 8) + 12);
  return (*(uint64_t (**)(_QWORD))(v2 + 1928))(0);
}

uint64_t sub_1D24C3770@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;

  *(_BYTE *)(a1 + (v6 + v4)) = *(_BYTE *)(v3 + (v6 + v4));
  return (*(uint64_t (**)(_QWORD))(v1 + 8 * (((v6 - 1 == v2) * v5) ^ v7)))(0);
}

void sub_1D24C37A0(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  v2 = *(_QWORD *)((char *)*(&off_1E93A7480 + v1 - 391)
                 + 8
                 * ((985
                   * (((uint64_t (*)(uint64_t, uint64_t))*(&off_1E93A7480 + v1 - 417))(32, 0x101004023FF3BD5) == 0)) ^ v1)- 4)- ((v1 + 1327572017) & 0xB0DEDBF7)+ 503;
  __asm { BR              X8 }
}

void sub_1D24C385C()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 8) = -137501393;
}

void sub_1D24C38DC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) ^ (1374699841 * ((-2 - ((a1 | 0x5548FCDC) + (~(_DWORD)a1 | 0xAAB70323))) ^ 0xC7431B2A));
  __asm { BR              X15 }
}

void sub_1D24C3A00(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  *(_DWORD *)(a2 + v3) = v2;
}

void sub_1D24C4858(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;

  v1 = 1755732067 * (a1 ^ 0xDEC6BDDB);
  v2 = *a1 - v1;
  __asm { BR              X13 }
}

uint64_t sub_1D24C48F8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  int v6;
  uint64_t v7;
  int v8;

  v4 = 1225351577 * (&v6 ^ 0x239AD816);
  v8 = v4 + v3 + 1064;
  v7 = v2;
  v6 = (224312909 - v1 - (((v3 - 262974002) & 0xFACAFBC ^ 0x6C7E19B2) & (775904616 - 2 * v1))) ^ v4;
  return ((uint64_t (*)(int *))(*(_QWORD *)(a1 + 8 * (v3 & 0xA1EAC31)) - 4))(&v6);
}

void sub_1D24C4A3C(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 ^ (235795823 * (((a1 | 0x10ED3232) - (_DWORD)a1 + (a1 & 0xEF12CDCD)) ^ 0x84407B6B));
  __asm { BR              X14 }
}

uint64_t sub_1D24C4B4C(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  _BOOL4 v6;

  if (v5 > 0x664FA029 != v2 - 1143935899 < -1716494378)
    v6 = v5 > 0x664FA029;
  else
    v6 = v2 - 1143935899 < (int)(v5 + 430989270);
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v3
                                                             + 8
                                                             * (int)((!v6
                                                                    * ((((v4 + 1967010602) & 0x8AC1CAFB ^ 0x62A) - 444) ^ 0x239)) ^ (v4 + 1967010602) & 0x8AC1CAFB)))(0x7CA636B2C008B778, a2, (a2 + 1040647000));
}

uint64_t sub_1D24C4C98@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, int a3@<W2>, _QWORD *a4@<X5>, unsigned int a5@<W6>, int a6@<W7>, uint64_t a7@<X8>)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  char v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  _BOOL4 v21;
  unint64_t v22;

  v20 = a1
      - 0x7CA636B2C008B778
      + (v11 ^ 0x9F3B3F49)
      + a5 * (unint64_t)(*(_DWORD *)(*a4 + 4 * (v14 + (((v16 - 523) | v19) ^ v7))) ^ v11);
  *(_DWORD *)(v17 + 4 * v18) = v20 + v11 - (((_DWORD)v20 << ((v16 + 28) & 0xD2 ^ v13)) & 0x3E767E92);
  v21 = a2 > 0x41F8FCA7;
  v22 = (v10 ^ HIDWORD(v20)) + (a7 & (v20 >> 31));
  if (v21 == a6 < v12)
    v21 = a6 < a3;
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(v8 + 8 * (v16 ^ (!v21 * v15))) - 12))(v22 + v9);
}

void sub_1D24C4D78()
{
  JUMPOUT(0x1D24C4C1CLL);
}

uint64_t sub_1D24C4D84(uint64_t a1)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v2 ^ (11 * (a1 == 0x7CA636B2C008B778))))
                            - ((v2 + 696) ^ 0xFFFFFFFFFFFFFAFFLL)
                            - 41 * (v2 ^ 0x209u)))();
}

uint64_t sub_1D24C4DD8()
{
  int v0;
  uint64_t v1;
  int v2;
  _DWORD *v3;
  int v4;
  int v5;
  _BOOL4 v6;

  v4 = *v3 + 1657400450;
  v5 = (v0 + 1657400450 < 1084841971) ^ (v4 < 1084841971);
  v6 = v0 + 1657400450 > v4;
  if (v5)
    v6 = v0 + 1657400450 < 1084841971;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v6 * (((v2 - 451) | 0x209) ^ 0x587)) ^ v2)))();
}

void sub_1D24C4E3C()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
}

uint64_t sub_1D24C4E60@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  _BOOL4 v9;

  v5 = a2 ^ 0x4EB;
  v6 = v4 + (a2 ^ 0x4EB) - 1017891163;
  v7 = v2 + 1702150524 + ((v5 + 432) | 8);
  v9 = v7 > 1129592565 || v7 < v6;
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * ((771 * v9) ^ v5))
                                                                                                - 4))(a1, 960200149, 0xFDFF36F3E29EFF29, 0x1C53DFEF4, 0x7EA6FFBEDD69B7FELL, 1715);
}

uint64_t sub_1D24C4F24(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v13 = a1 - 0x7CA636B2C008B778 + (*(_DWORD *)(v10 + 4 * v11) ^ v8);
  *(_DWORD *)(v10 + 4 * v11) = v13 + v8 - ((2 * v13) & 0x3E767E92);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (((((((a7 + 440 + v9) & a2) + a3) ^ HIDWORD(v13)) + (a4 & (v13 >> 31)) + a5 != v12)
                                          * a6) ^ (a7 + 440)))
                            - 8))();
}

void sub_1D24C4FB0(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1D24C4FF4(uint64_t a1)
{
  uint64_t v1;
  int v3;
  unsigned int v4;
  uint64_t v5;

  v3 = (*(uint64_t (**)(void))(v1 + 1352))();
  if (v3 == 16)
    v4 = -42029;
  else
    v4 = -42030;
  if (v3)
    v5 = v4;
  else
    v5 = 0;
  (*(void (**)(uint64_t))(v1 + 208))(a1);
  return v5;
}

void sub_1D24C503C(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v1 = 235795823 * ((2 * (a1 & 0x5AD4AFC8) - a1 + 623595575) ^ 0xB186196E);
  v2 = *(_DWORD *)(a1 + 16) + v1;
  v3 = (*(_BYTE *)(a1 + 32) ^ v1);
  ((void (*)(char *, void (*)()))*(&off_1E93A7480 + (v2 ^ 0x602)))((char *)*(&off_1E93A7480 + (v2 ^ 0x6C9)) - 4, sub_1D24DA304);
  v4 = *(_QWORD *)*(&off_1E93A7480 + v2 - 1417);
  v5 = (1178560073 * ((1571867190 - (&v5 | 0x5DB0CA36) + (&v5 | 0xA24F35C9)) ^ 0xFD8096C)) ^ (v2 - 1485);
  v6 = v4;
  sub_1D24B5984((uint64_t)&v5);
  __asm { BR              X8 }
}

uint64_t sub_1D24C518C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, char a17)
{
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v20 = (v17 - 557970430) & 0x2141EFBD;
  a17 = (-125 * ((2 * (&a16 & 0xF0) - &a16 + 14) ^ 0x73)) ^ 0x16;
  a16 = (v17 - 550) ^ (460628867
                     * ((2 * (&a16 & 0x7CF621F0) - &a16 - 2096505330) ^ 0xCF9F5C73));
  sub_1D24D4D10((uint64_t)&a16);
  v21 = **(_DWORD **)(v19 + 8 * (v20 - 449)) != ((((v20 + 24) | 0x428) - 592) ^ 0x418);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * ((2 * v21) | (4 * v21) | v20))
                                                                                                - 8))(v22, v23, v24, v25, v26, v27, v28);
}

uint64_t sub_1D24C5260@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _DWORD *v2;
  _DWORD *v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  _QWORD *v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t (*v13)(uint64_t, _BYTE *, _DWORD *);
  int v14;
  unsigned int v15;
  uint64_t v16;
  _BYTE *v17;
  int v18;
  unsigned int v19;
  uint64_t result;
  uint64_t v21;
  _BYTE v22[30];
  _BYTE v23[140];

  v8 = *(unsigned int **)(v6 + 8 * (a1 ^ 0x609));
  v9 = *v8;
  v10 = *(_QWORD **)(v6 + 8 * (a1 - 1516));
  v11 = (_BYTE *)*v10;
  v22[0] = *(_BYTE *)*v10 - 78;
  v22[1] = v11[1] - 78;
  v22[2] = v11[2] - 78;
  v22[3] = v11[3] - 78;
  v22[4] = v11[4] - 78;
  v22[5] = v11[5] - 78;
  v22[6] = v11[6] - 78;
  v22[7] = v11[7] - 78;
  v22[8] = v11[8] - 78;
  v22[9] = v11[9] - 78;
  v22[10] = v11[10] - 78;
  v22[11] = v11[11] - 78;
  v22[12] = v11[12] - 78;
  v22[13] = v11[13] - 78;
  v22[14] = v11[14] - 78;
  v22[15] = v11[15] - 78;
  v22[16] = v11[16] - 78;
  v22[17] = v11[17] - 78;
  v22[18] = v11[18] - 78;
  v22[19] = v11[19] - 78;
  v22[20] = v11[20] - 78;
  v22[21] = v11[21] - 78;
  v12 = (_BYTE *)*v10;
  v22[22] = v12[22] - 78;
  v22[23] = v12[23] - 78;
  v22[24] = v12[24] - 78;
  v22[25] = v12[25] - 78;
  v22[26] = v12[26] - 78;
  v22[27] = v12[27] - 78;
  v22[28] = v12[28] - 78;
  v22[29] = v12[29] - 78;
  v13 = *(uint64_t (**)(uint64_t, _BYTE *, _DWORD *))(v6 + 8 * (a1 ^ 0x6A4));
  v14 = v13(v9, v22, v2);
  v15 = ((2 * v14) & 0xFF1FDFFE) + (v14 ^ 0xFF8FEFFF);
  if (v15 != -7344129)
  {
    if (v15 == -7343027)
    {
      v16 = *v8;
      v17 = **(_BYTE ***)(v6 + 8 * (v4 - 1601));
      v23[0] = *v17 - 116;
      v23[1] = v17[1] - 116;
      v23[2] = v17[2] - 116;
      v23[3] = v17[3] - 116;
      v23[4] = v17[4] - 116;
      v23[5] = v17[5] - 116;
      v23[6] = v17[6] - 116;
      v23[7] = v17[7] - 116;
      v23[8] = v17[8] - 116;
      v23[9] = v17[9] - 116;
      v23[10] = v17[10] - 116;
      v23[11] = v17[11] - 116;
      v23[12] = v17[12] - 116;
      v23[13] = v17[13] - 116;
      v23[14] = v17[14] - 116;
      v23[15] = v17[15] - 116;
      v23[16] = v17[16] - 116;
      v23[17] = v17[17] - 116;
      v23[18] = v17[18] - 116;
      v23[19] = v17[19] - 116;
      v18 = v13(v16, v23, v2);
      v19 = (2 * v18) & 0xDBBBDFD6;
      v15 = (v18 ^ 0xEDDDEFEB) + 2142150367;
    }
    else
    {
      v19 = 1845272267;
    }
    __asm { BR              X8 }
  }
  *(_DWORD *)(v7 + 344) |= (v4 - 592) ^ 0x412;
  *(_DWORD *)(v7 + 44) = 490784367;
  result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, _DWORD *))(v6 + 8 * (v4 - 1533)))(*v2, v7 + 332, v7 + 336, v7 + 340, v3);
  v21 = *(_QWORD *)(v1 + 24);
  *(_DWORD *)(*(_QWORD *)(v1 + 8) - 0x5A44814FB8AF6522) = *v2;
  *(_DWORD *)(v21 - 0x7E1C560B8B6B6F7DLL) = *v3;
  *(_DWORD *)v1 = 137543419;
  return result;
}

uint64_t sub_1D24C5680(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;

  v1 = 1374699841 * ((a1 + 2125213654 - 2 * (a1 & 0x7EAC2FD6)) ^ 0x135837DF);
  v2 = *(_DWORD *)(a1 + 4) ^ v1;
  v3 = *(_DWORD *)(a1 + 16) + v1;
  if (v3 < 0)
    v3 = -v3;
  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x454517534C5DD3E1);
  v6 = v4 - 1574925169;
  v5 = v4 - 1574925169 < 0;
  v7 = 1574925169 - v4;
  if (!v5)
    v7 = v6;
  return (*(uint64_t (**)(void))((char *)*(&off_1E93A7480 + v2 - 739)
                              + 8 * (((v3 >> 5 >= v7) * (v2 ^ 0x376)) | v2)
                              - 4))();
}

_DWORD *sub_1D24C5734(_DWORD *result)
{
  *result = -868706597;
  return result;
}

unsigned int *sub_1D24C5744@<X0>(unsigned int *result@<X0>, char a2@<W8>)
{
  uint64_t v2;
  int v3;
  unsigned int v4;
  unsigned int v5;

  v5 = ((*(_DWORD *)(*(_QWORD *)(v2 - 0x454517534C5DD3DDLL) + 4 * v4) ^ 0x9F3B3F49) >> a2) ^ 0x3D8E84F3;
  *result = v5 & 0xCE0F150F ^ 0xB88A0D6D ^ ((((v3 ^ 0x40) - 64) ^ 0x24FA36EE | (2 * (v5 & 0xCE0F150E ^ 0x66CF815B)))
                                          - (v5 & 0xCE0F150E ^ 0x66CF815B)
                                          - 310188780);
  return result;
}

void sub_1D24C57D8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 40) - 628203409 * (a1 ^ 0x82880C33);
  __asm { BR              X13 }
}

void sub_1D24C58E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_DWORD *)(a3 + v3) = 1574925169;
}

uint64_t sub_1D24C689C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))((char *)&unk_1E93A39F4 + 8 * ((212 * (*(_DWORD *)(a2 + 4) == 1699122661)) ^ 0x615u) - 4))();
}

uint64_t sub_1D24C68D8(uint64_t a1, uint64_t a2)
{
  char v2;

  if (**(_BYTE **)(a2 + 8))
    v2 = 53;
  else
    v2 = 52;
  *(_BYTE *)(a1 + 88) = v2;
  return 0;
}

uint64_t sub_1D24C68FC()
{
  return 4294925278;
}

uint64_t sub_1D24C6904(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;

  v1 = 1755732067 * ((2 * ((a1 ^ 0xFDCA5AD1) & 0x4699B354) - (a1 ^ 0xFDCA5AD1) - 1184478037) ^ 0x9A6AABA1);
  v2 = *(_DWORD *)a1 ^ v1;
  v3 = *(_DWORD *)(a1 + 28) + v1;
  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0x454517534C5DD3E1);
  v6 = v4 - 1574925169;
  v5 = v4 - 1574925169 < 0;
  v7 = 1574925169 - v4;
  if (v5)
    v8 = v7;
  else
    v8 = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1E93A7480 + (v2 ^ 0x232))
                                        + 8
                                        * ((14
                                          * ((((v2 + 31) ^ ((v3 - 517884438) < 4 * (unint64_t)v8)) & 1) == 0)) | v2)
                                        - 4)
                            - 4))();
}

uint64_t sub_1D24C69EC(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * ((v3 | 0x2C) ^ (124 * (v1 != 517884438))))
                                                   - (((v3 | 0x2C) + 1631139817) & 0x9EC6C5FF ^ 0x99)))(a1, 1720235092);
}

uint64_t sub_1D24C6A48()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((1895 * (((v1 - 1264099582) & 0x4B58A0FD) == 149)) ^ (v1 + 174)))
                            - 8))();
}

uint64_t sub_1D24C6ACC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W8>)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  char v8;

  *(_BYTE *)(*(_QWORD *)(a1 + 8) + (a4 + a5)) = (a3 ^ v7) >> v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((756 * (a4 - 1 == (((a2 - 149) | 0x261) ^ v6))) ^ a2))
                            - ((a2 - 149) ^ 0x143u)
                            + 319))();
}

uint64_t sub_1D24C6B28()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((1895 * (v1 + 8 == ((v2 - 1264099756) & 0x4B58A0FD) - 117)) ^ v2))
                            - 8))();
}

uint64_t sub_1D24C6B6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  _BOOL4 v7;

  v7 = v4 + 1899450042 > 1036392489 || v4 + 1899450042 < v3;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2
                                                                                + 8
                                                                                * ((((v5 - 174) ^ 0x324) * v7) ^ v5))
                                                                    - 8))(a1, (v5 - 174), 2671460169, v1);
}

uint64_t sub_1D24C6BBC@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  _QWORD *v3;
  int v4;
  int v5;

  return sub_1D24C6ACC(a1, (v5 + 1932012434) & 0x8CD7D3BF, *(_DWORD *)(*v3 + 4 * (int)(((v5 + 1932012434) & 0x8CD7D3BF ^ 0xB3713605) + v4)), v2, a2);
}

uint64_t sub_1D24C6BFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_1D24C6C04(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1D24C6C80(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v3;

  return v3 ^ a3;
}

void sub_1D24C7814(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D24C7870()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((16 * (v1 != 1699122660)) | 0x66Cu)) - 12))();
}

uint64_t sub_1D24C7894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;

  v4 = v3 - (**(_BYTE **)(a2 + 8) == 0);
  *(_DWORD *)(*(_QWORD *)(a1 + 96) + 800) = 2031918701;
  *(_DWORD *)(*(_QWORD *)(a1 + 96) + 804) = 1574925169;
  *(_QWORD *)(*(_QWORD *)(a1 + 96) + 808) = *(_QWORD *)(a1 + 96) + 816;
  v5 = *(_QWORD *)(a1 + 96) + 0x454517534C5DD705;
  v6 = 535753261
     * ((-2 - ((&v8 ^ 0x8C848800 | 0x722B62D9) + (&v8 ^ 0x300B6258 | 0x8DD49D26))) ^ 0x49841B88);
  v10 = *(_QWORD *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v4);
  v8 = v5;
  v11 = (v4 - 733102872) ^ v6;
  v12 = v6 + 1056;
  ((void (*)(uint64_t *))(*(_QWORD *)(a3 + 1056) - 8))(&v8);
  return (v9 - 1310800152);
}

void sub_1D24C79E0(uint64_t a1)
{
  int v1;
  BOOL v3;

  v3 = *(_DWORD *)(*(_QWORD *)a1 - 0x454517534C5DD3E1) == 1574925169
    || *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0x454517534C5DD3E1) == 1574925169;
  v1 = *(_DWORD *)(a1 + 8) - 1374699841 * ((2 * (a1 & 0x61E99D06) - a1 + 504783609) ^ 0x73E27AF0);
  __asm { BR              X14 }
}

uint64_t sub_1D24C7AF4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((1745
                                     * ((((v3 & 0xF7) + 104) ^ ((((v3 & 0xE2195BF7) - 1896117398) & 0x710475FF ^ 0xFFFFFB84)
                                                                               + v2
                                                                               + a1 < 0x7FFFFF7D)) & 1)) ^ v3 & 0xE2195BF7)))();
}

uint64_t sub_1D24C7B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3
                                                                        + 8 * (int)(v4 & 0xA8CA6DAB | (2 * (v5 > 0))))
                                                            - (((v4 & 0xA8CA6DAB) - 425) | 0x59)
                                                            + 1109))(a1, a2, a3);
}

uint64_t sub_1D24C7BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  _BOOL4 v20;

  *(_DWORD *)(a14 + 4 * (v18 - 206429006)) = v15;
  v20 = v18 + 61034074 <= 207 * (v16 ^ 0x5AC) - 1880022019 || v18 + 61034074 >= v17;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((930 * v20) ^ v16)) - 4))();
}

uint64_t sub_1D24C7C3C()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((((v2 - 1025) ^ (v2 - 336) ^ 0x646) * (v1 == 0)) ^ v2)) - 4))();
}

uint64_t sub_1D24C7C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  uint64_t v10;
  int v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((((v11 - 1808319145) & 0x6BC8C5FF) - 1261) * (a10 < 1)) ^ v11))
                            - ((v11 + 493) ^ 0x39DLL)))();
}

uint64_t sub_1D24C7CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((1438
                                          * (*(_DWORD *)(a14 + 4 * (((v16 - 837) ^ (v17 + 1350)) + v18)) == v15)) ^ (v16 - 837)))
                            - (v16 - 362)
                            + 909))();
}

uint64_t sub_1D24C7D20()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;

  v5 = v2 + v4 + ((v1 + 826) | 0xBu) < ((v1 + 346) | 0x81u) + v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (((4 * v5) | (v5 << 6)) ^ v1)) - 8))();
}

uint64_t sub_1D24C7D68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((1438
                                          * (*(_DWORD *)(a1 + 4 * (((v3 - 837) ^ (v4 + 1350)) + v5)) == v2)) ^ (v3 - 837)))
                            - (v3 - 362)
                            + 909))();
}

uint64_t sub_1D24C7DA8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(v2 - 108) = v1
                        + 215
                        - 1178560073 * ((((2 * (v2 - 120)) | 0xAEF778DA) - (v2 - 120) - 1467726957) ^ 0xFAEC80C8);
  *(_QWORD *)(v2 - 120) = v4;
  sub_1D24C843C(v2 - 120);
  *(_QWORD *)(v2 - 120) = v5;
  *(_DWORD *)(v2 - 108) = v1
                        + 215
                        - 1178560073
                        * ((((v2 - 120) | 0xDC63DF64) - (v2 - 120) + ((v2 - 120) & 0x239C2098)) ^ 0x71F4E3C1);
  sub_1D24C843C(v2 - 120);
  *(_DWORD *)(v2 - 112) = v1 + 1178560073 * (((v2 - 120) & 0x67AE094A | ~((v2 - 120) | 0x67AE094A)) ^ 0x35C6CA10) - 244;
  *(_QWORD *)(v2 - 104) = v5;
  *(_QWORD *)(v2 - 120) = v0;
  return sub_1D24C193C(v2 - 120);
}

uint64_t sub_1D24C8198(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;

  v1 = 1225351577 * ((a1 & 0xAF7C96C5 | ~(a1 | 0xAF7C96C5)) ^ 0x7319B12C);
  v2 = *(_DWORD *)(a1 + 20) - v1;
  v3 = *(_DWORD *)(a1 + 16) ^ v1;
  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 24) - 0x454517534C5DD3E1);
  v6 = v4 - 1574925169;
  v5 = v4 - 1574925169 < 0;
  v7 = 1574925169 - v4;
  if (v5)
    v8 = v7;
  else
    v8 = v6;
  return (*(uint64_t (**)(void))((char *)*(&off_1E93A7480 + v2 - 196)
                              + 8 * ((35 * ((v3 - 487988419) >= 4 * (unint64_t)v8)) ^ v2)
                              - 4))();
}

uint64_t sub_1D24C8254(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2
                                                              + 8
                                                              * ((1267 * (v3 != ((47 * (v4 ^ 0x108)) ^ 0x1D161972))) ^ v4)))(a1, a2, 2031453690);
}

uint64_t sub_1D24C8294(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v1 + 8 * ((v3 - 1307) ^ 0x26))
                                                                    - (v3 - 1178)
                                                                    + 271))(a1, 2671460169, (v3 - 1178), v2);
}

uint64_t sub_1D24C8304@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W8>)
{
  uint64_t v5;
  int v6;
  int v7;
  char v8;

  *(_BYTE *)(*(_QWORD *)(a1 + 8) + (a4 + a5)) = (((v7 + 3 * (a3 ^ 0x125) - 150) ^ a2) >> v8)
                                                            - ((2 * (((v7 + 3 * (a3 ^ 0x125) - 150) ^ a2) >> v8)) & 0xCF)
                                                            + 103;
  return (*(uint64_t (**)(void))(v5 + 8 * (a3 ^ (1190 * (a4 - 1 != v6 + 849)))))();
}

uint64_t sub_1D24C8368(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 + 8 * ((38 * (v4 == 24)) ^ v5))
                                                                    - (v5 + 129)
                                                                    + 271))(a1, a2, (v5 + 129), v3);
}

uint64_t sub_1D24C8398(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  _BOOL4 v7;

  v7 = v4 - 904372773 > 1318906839 || v4 - 904372773 < v3;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v1 + 8 * (v5 ^ (1041 * v7)))
                                                                    - ((v5 + 110) | 0x13u)
                                                                    + 271))(a1, 2671460169, (v5 + 110) | 0x13u, v2);
}

uint64_t sub_1D24C83F0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  _QWORD *v3;
  int v4;
  int v5;

  return sub_1D24C8304(a1, *(_DWORD *)(*v3 + 4 * (v4 - 75795965)), (v5 - 610905311) & 0x2469AD5F, v2, a2);
}

_DWORD *sub_1D24C8434(_DWORD *result, uint64_t a2, int a3)
{
  *result = a3;
  return result;
}

void sub_1D24C843C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  unsigned int v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 12) + 1178560073 * ((525534974 - (a1 | 0x1F5306FE) + (a1 | 0xE0ACF901)) ^ 0x4D3BC5A4);
  v2 = *(_QWORD *)a1;
  v4 = v1 + 460628867 * ((&v2 & 0x3D7BEA1D | ~(&v2 | 0x3D7BEA1D)) ^ 0x8E12979F) - 933;
  sub_1D24D9068((uint64_t)&v2);
  __asm { BR              X8 }
}

void sub_1D24C8544()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;

  if ((*(_DWORD *)(v2 - 0x454517534C5DD3E1) - 1574925170) >= 0x7FFFFFFF)
    v3 = v1;
  else
    v3 = v1 + 2;
  *(_DWORD *)(v0 + 8) = v3;
}

void sub_1D24C85B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  char v6;

  v2 = qword_1EFC7F970 - qword_1EFC7EF78 - (_QWORD)&v6;
  v3 = 536075833 * v2 - 0x793AB71194CDC804;
  v4 = 536075833 * (v2 ^ 0x86C548EE6B3237FCLL);
  qword_1EFC7EF78 = v3;
  v5 = byte_1D24EE3B0[byte_1D24F92A0[(57 * ((v4 - v3) ^ 0xFC))] ^ 0xA3];
  qword_1EFC7F970 = v4;
  ((void (*)(char *, void (*)()))*(&off_1E93A7480 + ((57 * ((v4 - v3) ^ 0xFC)) ^ v5) - 44))((char *)*(&off_1E93A7480+ ((57 * ((v4 + v3) ^ 0xFC)) ^ byte_1D24EE3B0[byte_1D24F92A0[(57 * ((v4 + v3) ^ 0xFC))] ^ 0x2A])- 194)- 12, sub_1D24DA534);
  __asm { BR              X10 }
}

uint64_t sub_1D24C86C4()
{
  uint64_t v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8
                                             * ((859 * (*(_QWORD *)(*(_QWORD *)(v1 + 504) - 4) == 0)) ^ 0x194u))
                            - 8))();
}

uint64_t sub_1D24C8700@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 - 572)))(v1);
}

uint64_t sub_1D24C871C(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;

  v1 = 1224239923 * (((a1 ^ 0x84C2A454) & 0x3874D31 | ~(a1 ^ 0x84C2A454 | 0x3874D31)) ^ 0x8A09EB4D);
  v2 = *(_DWORD *)(a1 + 8) - v1;
  v3 = (*(_DWORD *)(a1 + 12) ^ v1) - 754356599;
  v4 = v3 + (*(_DWORD *)(*(_QWORD *)a1 - 0x5C256D3C5DC220ECLL) ^ 0x618F304);
  v5 = v4 - ((2 * v4) & 0xC31E608) + 102298372;
  *(_DWORD *)(*(_QWORD *)a1 - 0x5C256D3C5DC220ECLL) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1E93A7480 + (v2 ^ 0x1C0))
                                        + 8 * ((1976 * ((v5 ^ 0x618F304u) < v3)) ^ v2)
                                        - 4)
                            - 4))();
}

void sub_1D24C87EC(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x5C256D3C5DC220F0) = (*(_DWORD *)(a1 - 0x5C256D3C5DC220F0) ^ 0x9E9FA1B2)
                                         - 1633705550
                                         - ((2 * (*(_DWORD *)(a1 - 0x5C256D3C5DC220F0) ^ 0x9E9FA1B2) + 2) & 0x3D3F4364)
                                         + 1;
}

void jEHf8Xzsv8K(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1D24C8870@<X0>(uint64_t a1@<X8>)
{
  (*(void (**)(void))(a1 + 208))();
  return 0;
}

uint64_t sub_1D24C8884()
{
  return 4294925273;
}

void sub_1D24C8890()
{
  uint64_t v0;
  int v1;
  BOOL v2;
  int v3;

  v0 = MEMORY[0x1E0C80A78]();
  if (*(_QWORD *)(v0 + 24))
    v2 = *(_QWORD *)(v0 + 16) == 0x308D9258D9195679;
  else
    v2 = 1;
  v3 = v2;
  v1 = *(_DWORD *)(v0 + 4) ^ (1755732067 * ((-2 - ((~(_DWORD)v0 | 0x8E5EE2FA) + (v0 | 0x71A11D05))) ^ 0x50985F21));
  __asm { BR              X8 }
}

void sub_1D24C89B0()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 32) = v0 | 4;
}

uint64_t sub_1D24C89B8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  int v6;

  STACK[0x280] = (unint64_t)&STACK[0x5A44814FB8AF6B36];
  *(_QWORD *)(v3 - 184) = &STACK[0x5A44814FB8AF6B36];
  *(_DWORD *)(v3 - 176) = v1
                        - 235795823 * ((-2 - ((~(v3 - 192) | 0xD50FCEE3) + ((v3 - 192) | 0x2AF0311C))) ^ 0x41A287BA)
                        + 641;
  STACK[0x288] = (unint64_t)&STACK[0x7E1C560B8B6B73E9];
  *(_QWORD *)(v3 - 168) = &STACK[0x7E1C560B8B6B73E9];
  *(_BYTE *)(v3 - 160) = (111 * ((-2 - ((~(v3 + 64) | 0xE3) + ((v3 + 64) | 0x1C))) ^ 0xBA)) ^ 0x46;
  v4 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v0 + 8 * (v1 - 968)) - 12);
  STACK[0x278] = (unint64_t)v4;
  v5 = v4(v3 - 192);
  v6 = *(_DWORD *)(v3 - 192);
  LODWORD(STACK[0x560]) = v6;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * ((1640 * (v6 == ((v1 + 25) | 8) + 137542387)) ^ v1))
                                          - ((v1 + 383) ^ 0x56ALL)))(v5);
}

#error "1D24C9240: call analysis failed (funcsize=332)"

uint64_t sub_1D24C9244()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  ++*(_DWORD *)(v3 + 52);
  STACK[0x420] = v1 - 2432;
  STACK[0x5F0] = v1 - 2432;
  LODWORD(STACK[0x560]) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((STACK[0x638] == 0) * (((v0 + 928321969) & 0xC8AAED6F) - 1101)) ^ v0))
                            - 12))();
}

uint64_t sub_1D24C92A0()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  int v11;

  v6 = v0 - 926;
  v7 = 1178560073 * ((((2 * v4) | 0x26DCC90) - v4 - 20375112) ^ 0xACA1DAED);
  v8 = STACK[0x258];
  *(_QWORD *)(v5 - 184) = STACK[0x260];
  *(_QWORD *)(v5 - 176) = v8;
  v9 = LODWORD(STACK[0x254]) ^ v7;
  *(_DWORD *)(v5 - 160) = v7 + v6 - 254;
  *(_DWORD *)(v5 - 156) = v9;
  *(_QWORD *)(v5 - 168) = STACK[0x268];
  *(_DWORD *)(v5 - 192) = v1 - v7 - 481509014;
  v10 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v6 ^ 0x130)))(v5 - 192);
  v11 = *(_DWORD *)(v5 - 188);
  LODWORD(STACK[0x560]) = v11;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * (((v11 == 679 * (v6 ^ 0x1B2) + 137542061)
                                                        * (19 * (v6 ^ 0x186) + 292)) ^ v6))
                                          - 8))(v10);
}

uint64_t sub_1D24C9388()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((((((v0 - 471670367) & 0x1C1D1D7F) - 109) ^ 0x5B2) + 841) ^ (((v0 - 471670367) & 0x1C1D1D7F) - 109))
                                          * ((v1 - 1226222109) < 2)) ^ (v0 - 471670367) & 0x1C1D1D7F))
                            - 8))();
}

uint64_t sub_1D24C93E8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;

  STACK[0x2A8] = v0;
  LODWORD(STACK[0x2EC]) = v4;
  STACK[0x478] = 0;
  v6 = 1374699841 * ((((2 * (v5 - 192)) | 0x501C8142) - (v5 - 192) - 672022689) ^ 0x45FA58A8);
  *(_DWORD *)(v5 - 192) = 2146919497 - v6;
  *(_DWORD *)(v5 - 188) = v3 - v6 - 35;
  v7 = STACK[0x290];
  *(_QWORD *)(v5 - 184) = STACK[0x298];
  *(_QWORD *)(v5 - 168) = 0x4B3CE51708B10BB0;
  *(_QWORD *)(v5 - 160) = v7;
  v8 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v3 ^ 0x158)))(v5 - 192);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v3 ^ (4 * (*(_DWORD *)(v5 - 176) == 137543419))))
                                          - ((v3 ^ 0x51Bu)
                                           - 607)
                                          + 411))(v8);
}

uint64_t sub_1D24C94B0()
{
  uint64_t v0;
  unint64_t v1;
  int v2;
  unint64_t v3;

  STACK[0x230] = v1;
  STACK[0x388] = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((937
                                          * (((v2 - 1478456420) & 0x581F76C2)
                                           + LODWORD(STACK[0x4CC])
                                           + ((v2 + 1205718548) & 0xB82235FB ^ 0x9AB963AA) < 0xFFFFF7FF)) ^ v2))
                            - 12))();
}

uint64_t sub_1D24C9524()
{
  int v0;
  uint64_t v1;
  int v2;
  unsigned int *v3;
  uint64_t (*v4)(void);

  v3 = (unsigned int *)STACK[0x2F0];
  ((void (*)(_QWORD, unint64_t *, uint64_t))STACK[0x2F8])(*(unsigned int *)STACK[0x2F0], &STACK[0x4C0], 2048);
  v4 = (uint64_t (*)(void))(*(_QWORD *)(v1
                                     + 8
                                     * (int)(((((unsigned int (*)(_QWORD, unint64_t *, _QWORD, uint64_t))*(&off_1E93A7480 + v0 - 1254))(*v3, &STACK[0x4D8], (LODWORD(STACK[0x4CC]) + v2), 1) == 0)* ((v0 ^ 0xFFFFFA82) + (v0 ^ 0x66A))) ^ v0))- 4);
  return v4();
}

uint64_t sub_1D24C95C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;
  int v7;

  STACK[0x4C0] = STACK[0x4D8];
  v7 = LODWORD(STACK[0x4CC]) - ((2 * LODWORD(STACK[0x4CC]) + 896721976) & 0x7E107264) + 1505864526;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((921
                                          * (((2 * v7) & 0xA29D5B96 ^ 0x22105204)
                                           + ((v6 + 41) ^ 0x6E4690FB ^ v7)
                                           + 1861875646 != a5)) ^ (v6 + 474)))
                            - 4))();
}

uint64_t sub_1D24C9D38()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((v2 ^ 0x55E) - 175) * ((v1 + v0 + 783372853) < 8)) ^ v2))
                            - ((v2 - 2139099028) & 0x7F800DAE)
                            + 1018))();
}

uint64_t sub_1D24C9DA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (121 * ((unint64_t)(v1 - a1) < 0x20))))
                            - ((v2 + 621) ^ (v2 + 1478964461) & 0xA7D8CE5B ^ 0x728)))();
}

uint64_t sub_1D24C9DF4(int a1)
{
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (a1 ^ (8 * (v1 < (a1 ^ 0x724 ^ (a1 - 409) ^ 0x5AFu))))) - 12))();
}

uint64_t sub_1D24C9E28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v7 = v3 + 783372852 + v4;
  v8 = v1 + v7;
  v9 = *(_OWORD *)(v8 - 31);
  v10 = a1 + v7;
  *(_OWORD *)(v10 - 15) = *(_OWORD *)(v8 - 15);
  *(_OWORD *)(v10 - 31) = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((1364 * ((v2 & 0xFFFFFFE0) == 32)) ^ (v5 - 78)))
                            - ((v5 + 247) ^ 0x4F1)))();
}

void sub_1D24C9E8C()
{
  JUMPOUT(0x1D24C9E48);
}

uint64_t sub_1D24C9E98(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8 * (int)(((((a1 - 1271) ^ 0xFFFFFDF6) + ((a1 - 1271) | 0x400)) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1D24C9ECC()
{
  char v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ 0xC2 ^ (1006 * ((v0 & 0x18) != 0))))
                            - ((v1 ^ 0x400u)
                             - 629)
                            + 385))();
}

uint64_t sub_1D24C9F08@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v9 = v4 + 1861875646 + v5 - v6 + (((v7 + 635) | 0x1B4) ^ (a1 + 1364));
  *(_QWORD *)(a2 - 7 + v9) = *(_QWORD *)(v2 - 7 + v9);
  return (*(uint64_t (**)(void))(v8 + 8 * ((90 * (v6 - (v3 & 0xFFFFFFF8) == -8)) ^ v7)))();
}

void sub_1D24C9F70()
{
  JUMPOUT(0x1D24C9F3CLL);
}

uint64_t sub_1D24C9F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((((v7 == v9) ^ (v8 - 1)) & 1) * a7) ^ v8))
                            - (v8 - 442)
                            + 1018))();
}

uint64_t sub_1D24C9FC8@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W6>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(a4 + (v5 + a2)) = *(_BYTE *)(v4 + (v5 + a2));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 - 1 != a1) * a3) ^ (v6 + 269))))();
}

uint64_t sub_1D24C9FF8()
{
  int v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v2 = *(uint64_t (**)(void))(v1 + 8 * ((1799 * (STACK[0x478] != 0)) ^ (v0 - 251)));
  STACK[0x2E0] = (unint64_t)*(&off_1E93A7480 + v0 - 1000);
  return v2();
}

uint64_t sub_1D24CA040()
{
  uint64_t (*v0)(void);
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v5 = v0();
  LODWORD(STACK[0x528]) = v2;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (((v1 ^ 0x796) * v4) ^ (v1 + 504))) - 12))(v5);
}

uint64_t sub_1D24CA080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  int v41;
  uint64_t v42;
  unint64_t v43;

  v43 = STACK[0x2A8] + 2048;
  LODWORD(STACK[0x474]) = 2;
  STACK[0x518] = 0;
  LODWORD(STACK[0x604]) = 0;
  LODWORD(STACK[0x5C0]) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * ((1375 * ((((v40 + 802665920) & 0xD0284BAA ^ (((((v40 + 579) | 2) - 1024) & v41) == 0)) & 1) == 0)) ^ v40)))(a1, a2, a3, a4, a5, v43, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1D24CA0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  unint64_t v67;
  char *v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, unint64_t *, unint64_t *, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int v71;
  int v72;
  uint64_t v73;
  unint64_t v74;

  *(_DWORD *)(STACK[0x388] + 360) = 1226222110;
  v61 = ((uint64_t (*)(uint64_t, uint64_t, unint64_t *, unint64_t, _QWORD, uint64_t, unint64_t *, unint64_t *))*(&off_1E93A7480 + v55 - 953))(v58, 2, &STACK[0x474], STACK[0x4C0], (v59 - 1699122660), a6, &STACK[0x518], &STACK[0x604]);
  v65 = ((2 * v61) & 0x89BF7D6E) + (v61 ^ 0x44DFBEB7);
  if (v65 == 1423949498)
  {
    LODWORD(STACK[0x528]) = -137501245;
    return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v56
                                                                                  + 8
                                                                                  * (((STACK[0x518] == 0)
                                                                                    * ((LODWORD(STACK[0x454]) - 684) ^ 0x1B3 ^ ((LODWORD(STACK[0x454]) - 966) | 0xC0))) ^ (LODWORD(STACK[0x454]) - 797))))(v61, STACK[0x518], 4157465890, v64);
  }
  else if (v65 == 1155514039)
  {
    v66 = (LODWORD(STACK[0x454]) - 770) | 0x228;
    STACK[0x3B8] = STACK[0x518];
    LODWORD(STACK[0x3B0]) = STACK[0x604];
    v74 = STACK[0x2A8] + 2176;
    STACK[0x2B8] = STACK[0x2A8] + 2304;
    LODWORD(STACK[0x534]) = 430450907;
    v67 = STACK[0x420];
    v68 = (char *)&STACK[0x6B0] + STACK[0x420] - 0x15EFEB794FDA229ALL;
    STACK[0x2C8] = STACK[0x420] + 4144;
    STACK[0x5F0] = v67 + 4144;
    *(_QWORD *)v68 = 0x6370646600;
    v68[8] = 1;
    STACK[0x220] = (unint64_t)v68;
    STACK[0x3C0] = (unint64_t)&v68[((((v66 + 55) ^ 0xF) + 16 * ((_BYTE)v68 - 80)) & 0x20) + 1728];
    STACK[0x400] = (unint64_t)(v68 + 9);
    v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, unint64_t *, unint64_t *, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8 * (int)((v66 + 1422639316) & 0xAB343F2B ^ 0x7EC ^ (v66 - 457)));
    STACK[0x3E8] = (unint64_t)*(&off_1E93A7480 + ((v66 - 457) ^ 0x166));
    STACK[0x420] = (unint64_t)*(&off_1E93A7480 + ((v66 - 457) & 0x3B3B46C0));
    STACK[0x418] = (unint64_t)*(&off_1E93A7480 + ((v66 - 457) ^ 0x139));
    return v69(v61, v62, v63, v64, 1026, 136, 1247652205, 3161673438, &STACK[0x4A4], &STACK[0x494], &STACK[0x4F8], &STACK[0x5C0], a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             v74,
             a48,
             a49,
             a50,
             a51,
             a52,
             a53,
             a54,
             a55);
  }
  else
  {
    v71 = 1225351577 * ((v57 & 0x948469F2 | ~(v57 | 0x948469F2)) ^ 0x48E14E1B);
    *(_QWORD *)(v60 - 184) = a54;
    v72 = STACK[0x454];
    *(_DWORD *)(v60 - 192) = LODWORD(STACK[0x454]) - v71 + 652;
    *(_DWORD *)(v60 - 188) = (v65 - ((2 * v65 + 373326482) & 0x10657DF6) - 1017970620) ^ v71;
    v73 = sub_1D24A1FF0((_DWORD *)(v60 - 192));
    return (*(uint64_t (**)(uint64_t))(v56
                                              + 8
                                              * (((STACK[0x518] == 0) * ((v72 - 684) ^ 0x1B3 ^ ((v72 - 966) | 0xC0))) ^ (v72 - 797))))(v73);
  }
}

uint64_t sub_1D24CA1E0()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  LODWORD(STACK[0x528]) = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v0 ^ 0x796) * v3) ^ (v0 + 504))) - 12))();
}

void sub_1D24CA270()
{
  LODWORD(STACK[0x3B0]) = 0;
  STACK[0x3B8] = 0;
  JUMPOUT(0x1D24CA29CLL);
}

uint64_t sub_1D24CA3D0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  LODWORD(STACK[0x408]) = v3;
  v5 = 628203409 * ((v4 - 0x200D548A32FE688DLL - 2 * ((v4 - 192) & 0xDFF2AB75CD019833)) ^ 0xE0AE01604F899400);
  STACK[0x1978] = 0x1C71C160857971BFLL;
  LODWORD(STACK[0x5B4]) = **(_DWORD **)(v1 + 8 * ((v0 + 675) ^ 0x49A)) - 1730004587;
  v6 = **(unsigned int **)(v1 + 8 * ((v0 + 675) ^ 0x4D6));
  v7 = v0 + 804300415 + v5;
  *(_DWORD *)(v4 - 184) = 2104631364 - v5 + v0 + 675;
  *(_DWORD *)(v4 - 180) = v7 - 175;
  *(_QWORD *)(v4 - 160) = 42246443 - v5;
  *(_DWORD *)(v4 - 172) = v7 - 51;
  *(_DWORD *)(v4 - 168) = v7;
  *(_DWORD *)(v4 - 164) = v5;
  *(_QWORD *)(v4 - 192) = v6 ^ v5;
  v8 = ((uint64_t (*)(uint64_t))STACK[0x398])(v4 - 192);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * *(int *)(v4 - 176)) - 8))(v8);
}

uint64_t sub_1D24CA4DC()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int *v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;

  STACK[0x3F8] = v0;
  v4 = STACK[0x454];
  v5 = LODWORD(STACK[0x454]) + 380;
  ((void (*)(unint64_t, uint64_t))STACK[0x3E8])(STACK[0x2C0], 2965982036);
  v6 = (*(uint64_t (**)(void))(v1 + 8 * (v4 - 852)))();
  v7 = v6 + 1409224802 - ((v6 << (v5 ^ 0x7F)) & 0xA7FE20C4);
  *v3 = v7;
  v8 = (((v7 >> 30) ^ 1) + 1409224802 - ((v7 >> 30 << ((-50 * (v5 ^ 0x7C)) ^ 0x9D)) & 4)) ^ v7;
  v3[1] = 1812433253 * v8 - ((2 - 670100790 * v8) & 0xA7FE20C4) + 1409224803;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * (v5 | 1)) - 12))(413, 1812433253, 3624866506);
}

void sub_1D24CA5C8()
{
  JUMPOUT(0x1D24CA558);
}

uint64_t sub_1D24CA5D8@<X0>(char a1@<W8>)
{
  int v1;
  unsigned int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _BYTE *v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  char v12;

  v8 = (_BYTE *)(v6 + (v7 - 593524735));
  v9 = -599734641
     * ((*(_DWORD *)(*(_QWORD *)STACK[0x418] + (*(int *)STACK[0x420] & 0xFFFFFFFFB535DD78)) ^ v8) & 0x7FFFFFFF);
  v10 = -599734641 * (v9 ^ HIWORD(v9));
  v11 = v10 >> ((39 * (v1 ^ 0x21)) ^ 0x47u);
  v12 = *(_BYTE *)(*(_QWORD *)(v4 + 8 * (v1 ^ 0x378)) + v11) ^ ((((v1 - 808) | 0x48) ^ (v3 - 56) ^ v2) >> a1) ^ *(_BYTE *)(*(_QWORD *)(v4 + 8 * (v1 - 742)) + v11 - 9) ^ *(_BYTE *)(*(_QWORD *)(v4 + 8 * (v1 ^ 0x383)) + v11 - 7) ^ v10 ^ (127 * v11);
  *v8 = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((1761 * (v7 - (v12 != 0) == 593524734)) ^ v1)) - 4))();
}

void sub_1D24CB31C()
{
  JUMPOUT(0x1D24CA364);
}

uint64_t sub_1D24CB324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  BOOL v68;
  int v69;

  STACK[0x568] = v63;
  STACK[0x5A8] = v66;
  STACK[0x4A8] = *(_QWORD *)(v65 + 8 * v64);
  v67 = STACK[0x3B8];
  STACK[0x5F0] = ((((_DWORD)v64 - 70) | 0x400u) ^ 0x472) + STACK[0x2C8];
  STACK[0x540] = v67;
  if (v67)
    v68 = a63 == 0;
  else
    v68 = 1;
  v69 = v68;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65
                                                                                 + 8
                                                                                 * (int)((v64 + 1338) ^ (v69 << 6)))
                                                                     - 12))(1133293857, 48, 4157465890, 2595844636);
}

uint64_t sub_1D24CB404@<X0>(uint64_t (*a1)(void)@<X8>)
{
  int v1;
  unint64_t v2;
  uint64_t v3;

  STACK[0x3A8] = v2;
  STACK[0x2C8] = v2 - 112;
  STACK[0x5F0] = v2 - 112;
  STACK[0x420] = *(_QWORD *)(v3 + 8 * (v1 ^ 0x498)) - 8;
  return a1();
}

uint64_t sub_1D24CB434()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;

  v5 = v0 & (v1 + 873);
  v6 = (char *)&STACK[0x6B0] + v2 + v5 - 0x15EFEB794FDA2F86;
  *(_DWORD *)v6 = 293142327;
  *((_QWORD *)v6 + 1) = 0;
  *((_DWORD *)v6 + 4) = 105251810;
  *((_DWORD *)v6 + 6) = 1699122660;
  *((_QWORD *)v6 + 4) = 0;
  *(_DWORD *)((char *)&STACK[0x6B0] + v2 + v5 - 0x15EFEB794FDA2F5ELL) = 1699122660;
  STACK[0x458] = (unint64_t)&STACK[0x6B0] + v2 + v5 - 0x15EFEB794FDA2F5ELL;
  *(unint64_t *)((char *)&STACK[0x6B0] + v2 + v5 - 0x15EFEB794FDA2F56) = 0;
  *(_DWORD *)((char *)&STACK[0x6B0] + v2 + v5 - 0x15EFEB794FDA2F4ELL) = 1699122660;
  STACK[0x5D0] = (unint64_t)&STACK[0x6B0] + v2 + v5 - 0x15EFEB794FDA2F56;
  STACK[0x5A0] = (unint64_t)&STACK[0x6B0] + v2 + v5 - 0x15EFEB794FDA2F4ELL;
  *(unint64_t *)((char *)&STACK[0x6B0] + v2 + v5 - 0x15EFEB794FDA2F46) = 0;
  STACK[0x5F8] = (unint64_t)&STACK[0x6B0] + v2 + v5 - 0x15EFEB794FDA2F46;
  *(_DWORD *)((char *)&STACK[0x6B0] + v2 + v5 - 0x15EFEB794FDA2F3ELL) = 1699122660;
  *(unint64_t *)((char *)&STACK[0x6B0] + v2 + v5 - 0x15EFEB794FDA2F36) = 0;
  STACK[0x538] = (unint64_t)&STACK[0x6B0] + v2 + v5 - 0x15EFEB794FDA2F3ELL;
  STACK[0x510] = (unint64_t)&STACK[0x6B0] + v2 + v5 - 0x15EFEB794FDA2F36;
  v6[88] = 52;
  *(_DWORD *)v3 = 293142327;
  *(_OWORD *)(v3 + 4) = 0u;
  *(_DWORD *)(v3 + 28) = 1951399677;
  STACK[0x308] = v3 + 28;
  *(_OWORD *)(v3 + 436) = 0u;
  *(_OWORD *)(v3 + 452) = 0u;
  *(_QWORD *)(v3 + 468) = 0;
  *(_DWORD *)(v3 + 232) = 1951399677;
  STACK[0x300] = v3 + 232;
  *(_DWORD *)(v3 + 20) = 0;
  *(_DWORD *)(v3 + 24) = 1699122660;
  strcpy((char *)(v3 + 1128), "gggggggggggggggggggg");
  *(_BYTE *)(v3 + 1149) = 0;
  *(_WORD *)(v3 + 1150) = 0;
  *(_QWORD *)(v3 + 1152) = 0;
  *(_QWORD *)(v3 + 1160) = 0;
  *(_OWORD *)(v3 + 1168) = 0u;
  *(_OWORD *)(v3 + 1184) = 0u;
  return ((uint64_t (*)(__n128))(*(_QWORD *)(v4
                                                     + 8
                                                     * (int)((1767 * ((((_DWORD)v5 + 1351123794) & 0xAF777BF5) == 468)) ^ v5))
                                         - 8))((__n128)0);
}

uint64_t sub_1D24CB5A8(__n128 a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(v4 + 1424) = 1780120389;
  *(_DWORD *)(v4 + 1428) = 1492528565;
  *(_QWORD *)(v4 + 1432) = v2;
  *(_QWORD *)(v4 + 1440) = v2;
  *(_DWORD *)(v4 + 1448) = v3;
  *(__n128 *)(v4 + 1452) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * v1) - (((v1 - 692) | 0x20u) ^ 0x24)))();
}

void sub_1D24CB608()
{
  JUMPOUT(0x1D24CB5D0);
}

uint64_t sub_1D24CB610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  uint64_t v64;
  int v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  int v74;
  _BOOL4 v76;
  uint64_t (*v77)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  STACK[0x2C8] = v66;
  v71 = (4 * (_DWORD)a9) ^ 0x438u;
  *(_QWORD *)(v67 + 1516) = v64;
  *(_QWORD *)(v67 + 1524) = v64;
  *(_DWORD *)(v67 + 1532) = v65;
  *(_QWORD *)(v68 + 96) = v67;
  STACK[0x270] = v67;
  *(_DWORD *)(v67 + 476) = 1357639563;
  STACK[0x3F8] = *(_QWORD *)(v69 + 8 * a9) - 8;
  v72 = STACK[0x5F0];
  v73 = (char *)&STACK[0x6B0] + STACK[0x5F0] + v71 - 0x15EFEB794FDA2C1ALL;
  STACK[0x3A8] = STACK[0x5F0];
  STACK[0x3A0] = v72 + 432;
  STACK[0x2A0] = (unint64_t)(v73 - 816);
  STACK[0x408] = STACK[0x540];
  STACK[0x3B0] = v68;
  v74 = (v71 + 1043334407) & 0xC1CFF6F1;
  STACK[0x5F0] = STACK[0x3A0];
  LODWORD(STACK[0x470]) = -866857754;
  LODWORD(STACK[0x5EC]) = 1699122660;
  STACK[0x5D8] = 0;
  LODWORD(STACK[0x4BC]) = 1628906194;
  *((_DWORD *)v73 - 302) = a7;
  LODWORD(STACK[0x3F0]) = -1916379316;
  LODWORD(STACK[0x420]) = -1733902779;
  LODWORD(STACK[0x418]) = (v74 ^ 0x7235C865) + 1747298708;
  LODWORD(STACK[0x3B8]) = -1574850659;
  LODWORD(STACK[0x3C0]) = -530675426;
  v76 = *((_DWORD *)v73 - 302) != (_DWORD)a7
     || (_DWORD)a1 + 1 != ((((v74 + 677025094) & 0xD7A56E0A) - 106) ^ ((_DWORD)a1 + 408));
  v77 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8 * ((376 * v76) ^ v74));
  LODWORD(STACK[0x400]) = v70;
  return v77(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

uint64_t sub_1D24CB7C4(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * (((v2 + 18 + ((v2 - 814138305) & 0x3086C5BE) - 399) * (v1 == a1)) ^ v2))
                            - 4))();
}

uint64_t sub_1D24CB80C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((((a4 + v5 + 3) & 0xFFFFFFFC) - LODWORD(STACK[0x400]) == a4 + ((v4 - 1339) | 0x24) - 127)
                                          * (((v4 - 1405) | 0x66) - 28)) ^ v4))
                            - 12))();
}

uint64_t sub_1D24CB860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(v9 + 8 * ((254 * (v7 != a7)) ^ v8)))();
}

uint64_t sub_1D24CB890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  _BOOL4 v12;

  v12 = LODWORD(STACK[0x4BC]) - v9 == -70216466 && v8 != ((v7 + 742) ^ (a7 + 155));
  return (*(uint64_t (**)(void))(v10 + 8 * ((254 * v12) ^ v7)))();
}

uint64_t sub_1D24CB8D0(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  int v14;

  *v12 = v9 - 1;
  v13 = &v12[6 * (v9 - 1247652206)];
  v14 = v13[2];
  STACK[0x408] = *((_QWORD *)v13 + 2);
  LODWORD(STACK[0x4BC]) = v13[6];
  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * (int)((253
                                               * (*(_DWORD *)(v10
                                                            + (int)(((v8 + 1430674286) & 0xAAB9A777 ^ (a8 - 291)) + v14)
                                                            * (uint64_t)a2
                                                            + 36) != a1 + ((v8 + 1430674286) & 0xAAB9A777) - 692 - 177)) ^ (v8 + 1430674286) & 0xAAB9A777))
                            - 4))();
}

uint64_t sub_1D24CB9A4()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  _BOOL4 v6;

  v3 = LODWORD(STACK[0x4BC]) - 1368794115;
  v4 = ((v0 + 1190625317) & 0xB9087EF7) + v1 - 1439011292;
  v5 = (v4 < 0xF80FECF) ^ (v3 < 0xF80FECF);
  v6 = v3 < v4;
  if (v5)
    v6 = v4 < 0xF80FECF;
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v6) | (4 * v6)) ^ v0)))();
}

uint64_t sub_1D24CBA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unint64_t v13;
  unint64_t v14;

  v9 = v5 - 761;
  v10 = (v5 - 938) | a5;
  v11 = (v5 - 1179120579) & 0x4647F55F;
  v12 = 628203409 * ((((v8 - 192) | 0x96D41AAA) - ((v8 - 192) & 0x96D41AAA)) ^ 0x145C1699);
  *(_DWORD *)(v8 - 176) = v5 - 761 - v12 - 12;
  *(_DWORD *)(v8 - 172) = v6 - v12 - 21657580;
  *(_QWORD *)(v8 - 168) = STACK[0x3E0];
  v13 = STACK[0x3D0];
  *(_QWORD *)(v8 - 152) = STACK[0x408];
  *(_QWORD *)(v8 - 144) = v13;
  v14 = STACK[0x3C8];
  *(_QWORD *)(v8 - 192) = STACK[0x3D8];
  *(_QWORD *)(v8 - 184) = v14;
  ((void (*)(uint64_t))((char *)*(&off_1E93A7480 + ((v5 - 761) ^ 0x3F)) - 12))(v8 - 192);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8 * (((*(_DWORD *)(v8 - 160) == (v10 ^ 0x832BAF9)) * (v11 - 1237)) ^ v9)))(1133293857, 48, 4157465890, 2595844636, 1026, 136, 1247652205, 3161673438);
}

uint64_t sub_1D24CBB48(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  return (*(uint64_t (**)(void))(v11
                              + 8 * (((*(_DWORD *)(v10 + (v12 + a8) * (uint64_t)a2) != 585919675) * v8) ^ v9 ^ 0x61F)))();
}

uint64_t sub_1D24CBB9C@<X0>(int a1@<W1>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;

  v8 = STACK[0x454];
  if ((a2 + 866857750) <= 0x10 && ((1 << (a2 + 22)) & 0x14901) != 0)
    return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                          + 8
                                          * ((28
                                            * ((((v8 - 172) ^ ((((v8 ^ 0x530) - 305) & *(_DWORD *)(v5
                                                                                                 + v7 * (uint64_t)a1
                                                                                                 + 40)) == 0)) & 1) == 0)) ^ (v8 + 66)))
                              - 4))();
  else
    return (*(uint64_t (**)(void))(v6
                                + 8
                                * ((793 * (((((v8 ^ v2) * v4) ^ v3) & *(_DWORD *)(v5 + v7 * (uint64_t)a1 + 40)) == 0)) ^ (v8 - 849))))();
}

uint64_t sub_1D24CC3B8(int a1, int a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((756
                                * (*(_DWORD *)(v3 + v5 * (uint64_t)a2 + 36) != ((v2 + 1601928498) & 0xA084861E ^ (a1 + 1026)))) ^ v2)))();
}

uint64_t sub_1D24CC3FC()
{
  int v0;
  uint64_t v1;
  int v2;
  signed int v3;
  _BOOL4 v5;

  v3 = ((v0 + 1805729253) & 0x945EC56B ^ 0x96CEC52E) + v2;
  v5 = v3 > (int)(((v0 + 1613352779) & 0x9FD6335B) + 1515941621) || v3 < SLODWORD(STACK[0x418]);
  return (*(uint64_t (**)(void))(v1 + 8 * ((1526 * v5) ^ v0)))();
}

uint64_t sub_1D24CC474()
{
  STACK[0x5F0] = STACK[0x3A8];
  return ((uint64_t (*)(void))STACK[0x3F8])();
}

uint64_t sub_1D24CC488()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((((8 * v0) ^ 0x26A0) * (v2 == v3)) | (v0 - 1014))) - 4))();
}

void sub_1D24CC4B4(int a1@<W8>)
{
  uint64_t v1;
  unint64_t *v2;

  v2 = (unint64_t *)STACK[0x5D0];
  STACK[0x3B0] = STACK[0x308];
  STACK[0x408] = *v2;
  STACK[0x3F8] = *(_QWORD *)(v1 + 8 * (a1 ^ 0x2008)) + ((((a1 ^ 0x2008) + 1016) | 0xA8u) ^ 0xFFFFFFFFFFFFFB44);
  JUMPOUT(0x1D24CB6B4);
}

uint64_t sub_1D24CC55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a70;
  uint64_t a71;
  char a72;
  int v72;
  uint64_t v73;
  unint64_t v74;

  v74 = STACK[0x270];
  *(_QWORD *)(v74 + 1560) = *(_QWORD *)STACK[0x510];
  *(_DWORD *)(v74 + 1552) = *(_DWORD *)STACK[0x538];
  *(_QWORD *)(*(_QWORD *)(a70 + 96) + 488) = *(_QWORD *)(a70 + 8);
  *(_DWORD *)(*(_QWORD *)(a70 + 96) + 480) = *(_DWORD *)a70;
  *(_BYTE *)(STACK[0x200] + STACK[0x2C8] + a71) = (STACK[0x208] ^ 0xBA) * a72;
  return ((uint64_t (*)(void))(*(_QWORD *)(v73 + 8 * (v72 - 879)) - (((v72 - 704) | 0x480u) ^ 0x5C6)))();
}

uint64_t sub_1D24CC61C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  STACK[0x608] = 104 - a1;
  v4 = (uint64_t (*)(void))STACK[0x4A8];
  STACK[0x2C8] = v2 - 112;
  STACK[0x5F0] = v2 - 112;
  STACK[0x420] = *(_QWORD *)(v3 + 8 * (((v1 - 450) | 2) ^ 0x498)) - 8;
  return v4();
}

uint64_t sub_1D24CC658()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((LODWORD(STACK[0x454]) - 906) ^ (254 * (v1 != v2))))
                            - STACK[0x228]
                            + 183))();
}

uint64_t sub_1D24CC68C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int v4;

  v3 = STACK[0x228];
  v4 = STACK[0x228] + 1456;
  STACK[0x580] = 0;
  LODWORD(STACK[0x4F4]) = 1699122660;
  STACK[0x598] = 0;
  LODWORD(STACK[0x5E8]) = 1699122660;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 8 * ((30 * (((17 * (v4 ^ 0x60)) ^ ((*(_BYTE *)(v2 - 0x7CB023D175D06682) - **(_BYTE **)(v0 + 8 * ((int)v3 + 31))) == 219)) & 1)) ^ v4)))(1546897003, 4050291219, 244675915, 912939779, 3382027355, 75, 223, 1632);
}

uint64_t sub_1D24CC75C(int a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * (((((v1 + v3) & a1) - 919) * (v2 == 54)) ^ v1)))();
}

void sub_1D24CC780()
{
  JUMPOUT(0x1D24CC720);
}

uint64_t sub_1D24CC790()
{
  uint64_t v0;
  int v1;
  int v2;

  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * ((((LODWORD(STACK[0x454]) - 173) ^ 0x358) * (v1 == v2)) ^ (LODWORD(STACK[0x454]) - 413))))(1133293857);
}

uint64_t sub_1D24CC7C4()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  v4 = (*(unsigned __int8 *)(STACK[0x500] + 1516) ^ v3) - (*(_BYTE *)STACK[0x508] - 21);
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((336
                                * (((v4 << ((-45 * ((v0 - 94) & 0x6D ^ 0x61)) ^ (((v0 - 94) & 0x6D) + 77) & 0x4F ^ 0x4F)) & 0xB7FF7D7C)
                                 + (v4 ^ v2) == v2)) ^ (v0 - 609639518) & 0x24565B6D)))();
}

uint64_t sub_1D24CC86C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((a1 == 19) ^ (v1 + 21)) & 1)
                                     * ((v1 + 935536763) & 0xC83CD439 ^ 0x18)) ^ v1)))();
}

void sub_1D24CC8B4()
{
  JUMPOUT(0x1D24CC7ECLL);
}

uint64_t sub_1D24CC8BC@<X0>(int a1@<W6>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;

  v10 = a2 ^ 0x269;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((((v10 + v3 + v8) | v6) ^ v7) & a1) != (*(_BYTE *)(v9 + v2)
                                                                                           - **(_BYTE **)(v4 + 8 * (v10 - 1023))
                                                                                           - 12))
                                * (((v10 + v3) & (v8 + 1252)) - 1173)) ^ (v10 + 657))))();
}

uint64_t sub_1D24CC970(uint64_t a1, int a2, unsigned int a3, int a4, unsigned int a5, int a6)
{
  int v6;
  int v7;
  unint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (v6 ^ ((v7 == 54) * a6))) - ((v6 + a2) & a3) - ((v6 + a4) & a5 ^ v8)))();
}

void sub_1D24CC9A4()
{
  JUMPOUT(0x1D24CC924);
}

uint64_t sub_1D24CC9B0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v5 = (v0 - 232) | 2;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3
                                                               + 8
                                                               * ((50
                                                                 * ((((v5 + 6) ^ 0xFC)
                                                                                    + *(_BYTE *)(v4 + v1)
                                                                                    - *(_BYTE *)(*(_QWORD *)(v2 + 8 * (v5 ^ 0x4D2))
                                                                                               - 8)) == 207)) ^ (v5 + 268)))
                                                   - ((v5 - 762) | 5u)
                                                   + 265))(447, 139);
}

uint64_t sub_1D24CCA9C(uint64_t a1, char a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5 + 8 * ((29 * (v2 != (((v3 ^ v4) - 80) ^ a2))) ^ v3 ^ v4)))();
}

void sub_1D24CCAC4()
{
  JUMPOUT(0x1D24CCA58);
}

uint64_t sub_1D24CCAD4()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  v2 = (v0 + 1175) | 0x19;
  v3 = ((uint64_t (*)(uint64_t, uint64_t))STACK[0x3E8])(1576, 2940923044);
  STACK[0x500] = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((((((v2 - 703) ^ (v3 == 0)) & 1) == 0) * (v2 - 1349)) ^ v2)))();
}

uint64_t sub_1D24CCB90(unint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  STACK[0x270] = a1;
  v3 = ((uint64_t (*)(uint64_t, uint64_t))STACK[0x3E8])(1576, 3012117910);
  STACK[0x488] = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((((((v2 - 1119075816) & 0x42B3BEEB) - 218) ^ ((v2 - 244) | 0xC0)) * (v3 == 0)) ^ v2))
                            - 4))();
}

uint64_t sub_1D24CCBF8()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((((v2 - 192) | 0x120) - 767) * (v0 != 1756409276)) ^ v2))
                            - ((v2 - 604358035) & 0x2405C3CF ^ 0x10FLL)))();
}

uint64_t sub_1D24CCC5C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((39 * (a1 ^ 0x32D)) ^ 0x16B) * (v2 == v1)) ^ a1))
                            - ((a1 ^ 0x32Du)
                             + 256)
                            + 259))();
}

uint64_t sub_1D24CCCB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  uint64_t a69;
  uint64_t v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t);

  v74 = ((2 * ((v73 - 192) & 0x7D6F46C0) - (v73 - 192) + 43039034) ^ 0x6F64A133) * v70;
  *(_QWORD *)(v73 - 168) = v69;
  *(_QWORD *)(v73 - 160) = a68;
  *(_QWORD *)(v73 - 184) = a69;
  *(_DWORD *)(v73 - 192) = 2146919502 - v74;
  *(_DWORD *)(v73 - 188) = v71 - v74 - 17;
  v75 = ((uint64_t (*)(uint64_t))STACK[0x230])(v73 - 192);
  v76 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v72
                                                    + 8 * ((22 * (*(_DWORD *)(v73 - 176) != v71 + 137543156)) ^ v71))
                                        - 8);
  STACK[0x418] = (unint64_t)*(&off_1E93A7480 + v71 - 101) - 12;
  return v76(v75);
}

uint64_t sub_1D24CCD70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  uint64_t a69;
  unint64_t v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;

  STACK[0x418] = v69;
  v73 = 1374699841 * ((2 * ((v72 - 192) & 0x7D4C2088) - (v72 - 192) - 2102141071) ^ 0xEF47C778);
  *(_QWORD *)(v72 - 168) = 0x4B3CE51708B10BB0;
  *(_QWORD *)(v72 - 184) = a69;
  *(_QWORD *)(v72 - 160) = a68;
  *(_DWORD *)(v72 - 192) = 2146919500 - v73;
  *(_DWORD *)(v72 - 188) = v70 - v73 - 17;
  v74 = ((uint64_t (*)(uint64_t))STACK[0x230])(v72 - 192);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v71
                                                      + 8
                                                      * (((*(_DWORD *)(v72 - 176) != 137543419)
                                                        * ((v70 - 559265184) & 0x2155B6FD ^ 0x273)) ^ v70))
                                          - 8))(v74);
}

uint64_t sub_1D24CCE48()
{
  int v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  int v4;

  STACK[0x418] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((224 * (v4 == v1 + ((v0 + 271) | 0x45) - 350 - 263)) ^ v0)) - 8))();
}

uint64_t sub_1D24CCE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  uint64_t a69;
  uint64_t v69;
  int v70;
  int v71;
  int v72;
  uint64_t v73;
  int v74;
  uint64_t (*v75)(uint64_t);
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;

  v77 = (((v71 | 0xD628455C) - v71 + (v71 & 0x29D7BAA0)) ^ 0xBBDC5D55) * v70;
  *(_QWORD *)(v76 - 184) = a69;
  *(_DWORD *)(v76 - 192) = 2146919500 - v77;
  *(_DWORD *)(v76 - 188) = v72 - v77 - 17;
  *(_QWORD *)(v76 - 168) = v69;
  *(_QWORD *)(v76 - 160) = a68;
  v78 = v75(v76 - 192);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v73
                                                      + 8
                                                      * ((22 * (*(_DWORD *)(v76 - 176) != v74 + v72 + 350 - 613)) ^ v72))
                                          - (v72 + 350)
                                          + 605))(v78);
}

uint64_t sub_1D24CCF34@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v60;
  int v61;
  uint64_t v62;
  int v63;
  void (*v64)(uint64_t);
  uint64_t v65;
  int v66;
  int v67;

  v66 = 1374699841 * ((v61 + 1870203168 - 2 * (v61 & 0x6F790920)) ^ 0x28D1129);
  *(_QWORD *)(v65 - 184) = a60;
  *(_QWORD *)(v65 - 168) = 0x4B3CE51708B10BB0;
  *(_QWORD *)(v65 - 160) = a59;
  *(_DWORD *)(v65 - 192) = a1 - v66;
  *(_DWORD *)(v65 - 188) = v60 - v66 - 367;
  v64(v65 - 192);
  v67 = *(_DWORD *)(v65 - 176);
  STACK[0x508] = STACK[0x418];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8 * (((v67 == v63) * ((3 * ((v60 + 413) ^ 0x415)) ^ 0x1D2)) ^ v60)))(1133293857, 48, 4157465890, 2595844636, 1026, 136, 1247652205, 3161673438);
}

void sub_1D24CD024()
{
  JUMPOUT(0x1D24CD044);
}

uint64_t sub_1D24CD0C4(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v4 = (v2 - 248) | 0x152;
  v5 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD))STACK[0x2F8])(*(unsigned int *)STACK[0x2F0], a2, LODWORD(STACK[0x604]));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * (((LODWORD(STACK[0x528]) != 14 * (v4 ^ 0x137) + 137542061)
                                                        * (v4 + 337)) ^ v4))
                                          - 12))(v5);
}

uint64_t sub_1D24CD200()
{
  int v0;
  uint64_t v1;

  STACK[0x508] = STACK[0x418];
  return (*(uint64_t (**)(void))(v1 + 8 * ((28 * (STACK[0x598] == 0)) ^ (v0 + 924))))();
}

uint64_t sub_1D24CDBCC()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8 * (((8 * (STACK[0x580] != 0)) | (16 * (STACK[0x580] != 0))) ^ (v1 + 525)))
                            - 8))();
}

uint64_t sub_1D24CDBF4()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((2008 * (STACK[0x500] != 0)) ^ (v1 - 38))) - 4))();
}

uint64_t sub_1D24CDC24()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(v0 + 8 * ((1999 * (STACK[0x488] != 0)) ^ (v1 - 434))))();
}

uint64_t sub_1D24CDC48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2
                                                                        + 8
                                                                        * ((v4 - 892) ^ (1286 * (v3 == 137543419))))
                                                            - (((v4 - 614) | 0x421u) ^ 0x5B9)))(a1, a2, 4157465890);
}

uint64_t sub_1D24CDC94()
{
  uint64_t v0;
  int v1;

  ((void (*)(void))STACK[0x2E0])();
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8 * (((8 * (STACK[0x580] != 0)) | (16 * (STACK[0x580] != 0))) ^ (v1 + 525)))
                            - 8))();
}

uint64_t sub_1D24CDCC4()
{
  uint64_t v0;
  int v1;

  ((void (*)(void))STACK[0x2E0])();
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((2008 * (STACK[0x500] != 0)) ^ (v1 - 38))) - 4))();
}

uint64_t sub_1D24CDCFC()
{
  uint64_t v0;
  int v1;

  ((void (*)(void))STACK[0x2E0])();
  return (*(uint64_t (**)(void))(v0 + 8 * ((1999 * (STACK[0x488] != 0)) ^ (v1 - 434))))();
}

uint64_t sub_1D24CDD28()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;

  v3 = ((uint64_t (*)(void))STACK[0x2E0])();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v0 + 8 * ((v2 - 892) ^ (1286 * (v1 == 137543419))))
                                          - (((v2 - 614) | 0x421u) ^ 0x5B9)))(v3);
}

uint64_t sub_1D24CDD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;

  LODWORD(STACK[0x534]) = 430450627;
  LODWORD(STACK[0x490]) = 128;
  *(_QWORD *)(v59 - 192) = v56 + 0x454517534C5DD785;
  *(_QWORD *)(v59 - 184) = a56;
  v60 = 3804331 * ((((v59 - 192) | 0x7FE222DF) - (v59 - 192) + ((v59 - 192) & 0x801DDD20)) ^ 0x51A3A113);
  *(_DWORD *)(v59 - 124) = v60 + 1405208254;
  *(_QWORD *)(v59 - 176) = 0;
  *(_QWORD *)(v59 - 168) = v56 + 0x454517534C5DD675;
  *(_QWORD *)(v59 - 136) = a47;
  *(_DWORD *)(v59 - 144) = v57 - v60 - 1034;
  *(_QWORD *)(v59 - 160) = v56;
  *(_QWORD *)(v59 - 152) = 0;
  v61 = ((uint64_t (*)(uint64_t))STACK[0x420])(v59 - 192);
  return (*(uint64_t (**)(uint64_t))(v58
                                            + 8
                                            * (((*(_DWORD *)(v59 - 128) == 137543419) * (((v57 - 284) | 8) - 268)) ^ v57)))(v61);
}

uint64_t sub_1D24CDE78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  uint64_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int8x16_t v13;

  v4 = ((23 * (v2 ^ 0x4E9u)) ^ 0x5BFLL) - a1;
  v5 = vrev64q_s8(*(int8x16_t *)(v1 + v4 - 15));
  v6 = vrev64q_s8(*(int8x16_t *)(v1 + v4 - 31));
  v7 = vextq_s8(v5, v5, 8uLL);
  v8 = vextq_s8(v6, v6, 8uLL);
  v9.i64[0] = 0xCECECECECECECECELL;
  v9.i64[1] = 0xCECECECECECECECELL;
  v10 = STACK[0x2B8] + v4;
  v11.i64[0] = 0x6767676767676767;
  v11.i64[1] = 0x6767676767676767;
  v12 = vrev64q_s8(vaddq_s8(vsubq_s8(v7, vandq_s8(vaddq_s8(v7, v7), v9)), v11));
  *(int8x16_t *)(v10 - 15) = vextq_s8(v12, v12, 8uLL);
  v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v8, vandq_s8(vaddq_s8(v8, v8), v9)), v11));
  *(int8x16_t *)(v10 - 31) = vextq_s8(v13, v13, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((125 * (a1 == 96)) ^ v2)) - 4))();
}

uint64_t sub_1D24CDF1C()
{
  int v0;
  uint64_t v1;
  int v2;

  LODWORD(STACK[0x528]) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((((((*(_DWORD *)(STACK[0x388] + 360) - 1226222110) < 0xFFFFFFFE) ^ (v0 - 1)) & 1)
                                          * (((v0 - 448) | 2) ^ 0x42E)) ^ v0))
                            - 4))();
}

uint64_t sub_1D24CDF70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>)
{
  uint64_t v9;
  unint64_t v10;
  int v11;
  char *v12;

  v10 = STACK[0x3A8];
  v11 = a9 - 104;
  v12 = (char *)&STACK[0x6B0] + STACK[0x3A8] - 0x15EFEB794FDA2C1ALL;
  STACK[0x558] = (unint64_t)(v12 - 1824);
  STACK[0x420] = (unint64_t)(v12 - 1596);
  LODWORD(STACK[0x468]) = 1550691517;
  STACK[0x5F0] = v10 - 192;
  STACK[0x628] = 0;
  LODWORD(STACK[0x57C]) = 1699122660;
  STACK[0x408] = (unint64_t)(v12 - 1824);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * (v11 ^ (1392 * (v12 - 1824 != (char *)-248)))))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1D24CE0EC()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  BOOL v4;

  *(_DWORD *)(v3 - 188) = 2 * (v0 ^ 0x3F6)
                        - 1734042137 * ((((v2 | 0x731CCB0A) ^ 0xFFFFFFFE) - (~v2 | 0x8CE334F5)) ^ 0xD02DF7B8)
                        - 231790120;
  VSWaitForDebuggerUntilDate(v3 - 192);
  v4 = ((uint64_t (*)(uint64_t, uint64_t))STACK[0x3E8])(336, 318119320) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((113 * (((2 * (v0 ^ 0xF6) + 104) ^ 0x35 ^ v4) & 1)) ^ (2 * (v0 ^ 0x3F6u))))
                            - 8))();
}

uint64_t sub_1D24CE1A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                                 + 8
                                                                                 * ((808
                                                                                   * ((unint64_t)*(&off_1E93A7480 + v3 - 129)
                                                                                    + -((v3 - 33) ^ 0x3FD)
                                                                                    - a1
                                                                                    + 875 < 0x20)) ^ v3))
                                                                     - 8))(1263671740, 244, a3, 182);
}

uint64_t sub_1D24CE22C@<X0>(int a1@<W1>, unint64_t a2@<X3>, int a3@<W4>, uint64_t a4@<X8>)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v8 + (v5 + v6)) = *(_BYTE *)(a4 + (v5 + v6));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v5 - 1 != a3) * a1) ^ v4)) - ((v4 - 693) ^ a2)))();
}

uint64_t sub_1D24CE260()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v1 + 8 * (((((v0 ^ 0x508) - 540) ^ 0x3FA) * (v2 == 0)) ^ v0)))();
}

uint64_t sub_1D24CE290()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = (unint64_t *)((char *)&STACK[0x6B0] + STACK[0x3A8] + (v0 ^ 0xEA101486B025D624));
  STACK[0x4B0] = v4 + 0x1EC2B0D13B667C62;
  *v6 = 0x9898989898989898;
  v6[1] = 0x6767676761676775;
  v7 = 235795823 * (v3 ^ 0x94AD4959);
  *(_DWORD *)(v5 - 192) = v7 ^ 0x1532BCDE;
  *(_DWORD *)(v5 - 184) = v1 - v7 + 1064655229;
  VSWaitForDebuggerUntilDate(v5 - 192);
  LODWORD(STACK[0x484]) = 1699122996;
  v8 = ((uint64_t (*)(uint64_t, uint64_t))STACK[0x3E8])(336, 1690680581);
  STACK[0x4E8] = v8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * (((v8 != 0) * (v1 - 1360)) ^ v1))
                                                                                                - ((73 * (v1 ^ 0x5B1u)) ^ 0x1FBLL)))(v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_1D24CE394(unint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  STACK[0x5F0] = ((v1 + 25) ^ 0xFFFFFFFFFFFFFD48) + v2;
  STACK[0x590] = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ (699 * (v4 > a1)))) - 12))();
}

uint64_t sub_1D24CE44C@<X0>(uint64_t a1@<X0>, char a2@<W6>, int a3@<W7>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = (v7 + v8);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(v4 + (v11 & 0xF)) ^ *(_BYTE *)(v5 + (v11 & 0xF)) ^ *(_BYTE *)((v11 & 0xF) + a4 + 2) ^ ((v11 & 0xF) * a2) ^ (((2 * *(_BYTE *)(v10 + v11)) & 0x70) + (*(_BYTE *)(v10 + v11) ^ ((v6 - 24) | 0x48) ^ 0x70) - 101);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((((v7 + 1 + v8) < 0x150) * a3) ^ v6)) - 12))();
}

uint64_t sub_1D24CE4C8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v6 = (v3 - v1);
  v7 = *(_OWORD *)(a1 + v6 - 15);
  v8 = *(_OWORD *)(a1 + v6 - 31);
  v9 = v5 + v6;
  *(_OWORD *)(v9 - 15) = v7;
  *(_OWORD *)(v9 - 31) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v1 != 288) | (32 * (v1 != 288)) | v2))
                            - (v2 + 884)
                            + 1018))();
}

uint64_t sub_1D24CE50C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v2;
  unsigned int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 7 + ((v2 + a1) & v3) - 175) = *(_QWORD *)(a2 + ((v2 + a1) & v3) - 175 - 7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v4 ^ (v2 - 143))) - 8))();
}

uint64_t sub_1D24CE558@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, char a6@<W6>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v14 = (v9 + a4);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(v8 + (v14 & 0xF)) ^ (*(_BYTE *)(v13 + v14) - 45) ^ *(_BYTE *)(v7 + (v14 & 0xF)) ^ *(_BYTE *)((v14 & 0xF) + a7 + 2) ^ ((v14 & 0xF) * a6);
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (((v9 - 1 == ((v10 + a2) & a3) + v11) * a5) ^ v10)) - 12))();
}

uint64_t sub_1D24CE5BC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int8x16_t *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int8x16_t a37)
{
  int v37;
  uint64_t v38;
  int8x16_t *v39;

  v39 = (int8x16_t *)((char *)&STACK[0x6B0] + STACK[0x3A8] - 0x15EFEB794FDA2C1ALL);
  v39[-12] = veorq_s8(*a15, a37);
  STACK[0x640] += ((v37 - 1080) | 0x18Du) ^ 0x3BDLL;
  STACK[0x650] = a1;
  STACK[0x648] = a1;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38
                                                                                                  + 8 * (((v37 - 1601) * (&v39[-12] != (int8x16_t *)a1)) | v37)))(a1, a2, 34, a4, 19, a6);
}

uint64_t sub_1D24CE640(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, int a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  unsigned __int8 *v68;
  unsigned __int8 v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  int v77;
  uint64_t v78;
  unsigned int v79;
  int v80;
  int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unint64_t v89;
  unint64_t v90;
  unsigned __int8 *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  int v96;
  int v97;
  unsigned __int8 v98;
  int v99;
  unsigned int v100;
  int v101;
  unint64_t v102;
  unint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  char v108;
  int v109;
  unsigned int v110;
  unsigned __int8 v111;
  int v112;
  int v113;
  int v114;
  char v115;
  int v116;
  char v117;
  int v118;
  unsigned int v119;
  int v120;
  uint64_t v121;
  int v122;
  char v123;
  int v124;
  uint64_t v125;
  int v126;
  unint64_t v127;
  uint64_t v128;
  int v129;
  unsigned int v130;
  uint64_t v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  unsigned __int8 v149;
  unsigned int v150;
  int v151;
  int v152;
  int v153;
  unsigned int v154;
  unsigned int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  unsigned int v177;
  int v178;
  int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  unsigned __int8 v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  int v190;
  unsigned int v191;
  unsigned int v192;
  int v193;
  int v194;
  unsigned int v195;
  int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  int v200;
  unsigned int v201;
  unint64_t v202;
  unsigned int v203;
  unsigned int v204;
  int v205;
  unsigned int v206;
  int v207;
  int v208;
  unsigned int v209;
  int v210;
  unsigned int v211;
  int v212;
  unsigned int v213;
  int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  unsigned int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  unsigned int v227;
  unsigned int v228;
  int v229;
  int v230;
  unsigned int v231;
  int v232;
  int v233;
  int v234;
  unsigned int v235;
  int v236;
  unsigned int v237;
  unsigned int v238;
  int v239;
  int v240;
  unsigned int v241;
  int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  int v246;
  int v247;
  unsigned int v248;
  unsigned int v249;
  int v250;
  int v251;
  unsigned int v252;
  unsigned int v253;
  int v254;
  int v255;
  unsigned int v256;
  unsigned int v257;
  int v258;
  int v259;
  unsigned int v260;
  int v261;
  int v262;
  int v263;
  unsigned int v264;
  int v265;
  int v266;
  unsigned int v267;
  unsigned int v268;
  int v269;
  int v270;
  int v271;
  int v272;
  int v273;
  int v274;
  BOOL v275;
  unsigned int v276;
  int v277;
  int v278;
  unsigned int v279;
  int v280;
  int v281;
  unsigned int v282;
  unsigned int v283;
  int v284;
  unint64_t v285;
  int v286;
  unsigned int v287;
  int v288;
  unsigned int v289;
  int v290;
  unsigned int v291;
  uint64_t v292;
  unsigned int v293;
  int v294;
  char *v295;
  unsigned int v296;
  char *v297;
  unsigned int v298;
  int v299;
  unsigned int v300;
  char *v301;
  int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  uint64_t v310;
  unsigned int v311;
  char *v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  uint64_t v316;
  uint64_t v317;
  unsigned int v318;
  char *v319;
  int v320;
  int v321;
  int v322;
  int v323;
  uint64_t v324;
  char *v325;
  int v326;
  unint64_t v327;
  unint64_t v328;
  int v329;
  int v330;
  int v331;
  unsigned int v332;
  int v333;
  unsigned int v334;
  int v335;
  unint64_t v336;
  unsigned int v337;
  int v338;
  _BOOL4 v339;
  _BYTE *v341;
  unint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  unint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  int v355;
  uint64_t v356;
  int v357;
  int v358;
  uint64_t v359;

  v67 = (v62 - 1327) | 0x284;
  v68 = (unsigned __int8 *)(v66 - 256 + v63);
  v69 = *(_BYTE *)a1;
  *(_QWORD *)(v68 + 17) = *(_QWORD *)(a1 + 1);
  *(_DWORD *)(v68 + 25) = *(_DWORD *)(a1 + 9);
  *(_WORD *)(v68 + 29) = *(_WORD *)(a1 + 13);
  v68[31] = *(_BYTE *)(a1 + 15);
  v70 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v68 = *(_QWORD *)a1;
  *((_QWORD *)v68 + 1) = v70;
  v68[16] = v69;
  v68 += 16;
  v71 = v67 + 299;
  v72 = *(_QWORD *)(v64 + 8 * (v67 ^ 0x34A)) - 8;
  v73 = *(_QWORD *)(v64 + 8 * (v67 - 877)) - 8;
  v74 = *(_QWORD *)(v64 + 8 * (v67 ^ 0x39B));
  LOBYTE(v70) = *(_BYTE *)(v74 + (v68[14] ^ 0x86));
  v75 = v68[8];
  v76 = v75 ^ 0x34;
  v77 = *(unsigned __int8 *)(v73 + (v75 ^ 0x65));
  LODWORD(v75) = ((v70 ^ (16 * v70)) ^ 0xEB) << 8;
  LOBYTE(v70) = *(_BYTE *)(v74 + (v68[10] ^ 0xCBLL));
  v78 = *(_QWORD *)(v64 + 8 * (v67 - 878)) - 8;
  v79 = *(unsigned __int8 *)(v78 + (v68[1] ^ 0x1ALL));
  v80 = ((((v79 ^ 0x63) + (v79 & 0xD5 ^ 0xBE) + 1) ^ v79 & 0xDF) >> 4) ^ (v79 >> 1);
  v81 = ((v68[3] ^ 0xB8) + *(_BYTE *)(v72 + (v68[3] ^ 0x54)) - 116) | ((v79 ^ 0x5B ^ ((v80 ^ 0x52) + ((2 * v80) & 0xF7 ^ 0x5B) - 4)) << 16);
  LOBYTE(v79) = *(_BYTE *)(v74 + (v68[6] ^ 0x2ELL));
  v82 = (((v77 + v76 - 51) ^ 0xF5) << 24) | (((v70 ^ (16 * v70)) ^ 0x27) << 8) | ((v68[11] ^ 0x3E) + *(_BYTE *)(v72 + (v68[11] ^ 0xD2)) - 116);
  v83 = *(_BYTE *)(v78 + (v68[13] ^ 0x5BLL)) ^ 0xB6;
  LODWORD(v70) = ((v68[7] ^ 0x90) + *(_BYTE *)(v72 + (v68[7] ^ 0x7CLL)) - 116) | ((((v71 ^ 0xDB ^ v68[4]) + *(unsigned __int8 *)(v73 + (v68[4] ^ 0x42)) - 51) ^ 0xE6) << 24) | ((v79 ^ (16 * v79) ^ a6) << 8);
  v84 = *(unsigned __int8 *)(v78 + (v68[13] ^ 0x5BLL)) ^ 0xFFFFFFB6 ^ (v83 >> 4) ^ (v83 >> 1);
  LODWORD(v75) = v75 & 0xFF00FFFF | ((v84 - ((2 * v84) & 0x2E) + 23) << 16);
  v85 = v81 | (((*(unsigned __int8 *)(v73 + (*v68 ^ 0x81)) + (*v68 ^ 0xD0) - 51) ^ 0x3C) << 24);
  LOBYTE(v81) = *(_BYTE *)(v78 + (v68[5] ^ 0xEDLL));
  v86 = ((v81 ^ 0xB6) >> 4) ^ ((v81 ^ 0xB6) >> 1);
  v343 = v78;
  v345 = v73;
  v346 = v72;
  v87 = v82 & 0xFF00FFFF | (((*(_BYTE *)(v78 + (v68[9] ^ 0x38)) ^ ((*(_BYTE *)(v78 + (v68[9] ^ 0x38)) ^ 0xB6) >> 4) ^ ((*(_BYTE *)(v78 + (v68[9] ^ 0x38)) ^ 0xB6) >> 1)) ^ 0x1D) << 16);
  v344 = v74;
  v88 = v85 & 0xFFFF00FF | (((*(_BYTE *)(v74 + (v68[2] ^ a3)) ^ (16 * *(_BYTE *)(v74 + (v68[2] ^ a3)))) ^ 0x15) << 8);
  LODWORD(STACK[0x400]) = (v75 & 0xFFFFFF00 | ((((v68[12] ^ a5) + *(unsigned __int8 *)(v73 + (v68[12] ^ 0x42)) - 51) ^ 0xE6) << 24) | (*(_BYTE *)(v72 + (v68[15] ^ 0x38)) + (v68[15] ^ 0xD4) - 116)) ^ 0x4BCE8F78;
  LODWORD(STACK[0x3B0]) = v88 ^ 0x15D339B6;
  v89 = STACK[0x650];
  LODWORD(STACK[0x2DC]) = (v70 & 0xFF00FFFF | ((v81 ^ 0x6C ^ (v86
                                                                                              + (~(2 * v86) | 0x15)
                                                                                              - 10)) << 16)) ^ 0xB8A07FB7;
  LODWORD(STACK[0x3C0]) = v87 ^ HIDWORD(a36);
  v341 = (_BYTE *)STACK[0x648];
  v342 = v89;
  HIDWORD(v353) = v71 ^ 0x755;
  v90 = v71 ^ 0x4C6u;
  STACK[0x3F8] = v90;
  v91 = (unsigned __int8 *)v89;
  v93 = v74;
  v92 = v73;
  LODWORD(v90) = *(unsigned __int8 *)(v74 + (*(unsigned __int8 *)(v89 + v90) ^ 0xD9));
  HIDWORD(a17) = v71 - 237;
  v94 = (v71 - 237) ^ 0x3DFu;
  STACK[0x308] = v94;
  v95 = v91[v94];
  v96 = (16 * v90 - 32 * (v90 & 1) - 104) ^ v90;
  LOBYTE(v90) = v95 ^ 0xB7;
  LOBYTE(v87) = *(_BYTE *)(v92 + (v95 ^ 0xE6));
  STACK[0x418] = 15;
  v97 = v91[15];
  v98 = (v87 + v90 - 51) ^ 0xE5;
  if ((v97 & 0x20) != 0)
    v99 = -32;
  else
    v99 = 32;
  v100 = v71;
  v358 = *(unsigned __int8 *)(v72 + ((v99 + v97) ^ 0xDDLL)) + ((v99 + v97) ^ 0x31);
  STACK[0x3F0] = 6;
  v101 = *(unsigned __int8 *)(v74 + (v91[6] ^ 0x51));
  STACK[0x300] = 12;
  STACK[0x2C8] = 0;
  HIDWORD(v102) = v101 ^ 0x3F;
  LODWORD(v102) = (v101 ^ 0x3F ^ (16 * v101 - 32 * (v101 & 1) - 104)) & 0xF8;
  v103 = ((v102 >> 3) | ((unint64_t)v98 << 13)) ^ 0x58F620A6;
  v104 = (v103 >> 21) | ((_DWORD)v103 << 11);
  v357 = *(unsigned __int8 *)(v92 + (v91[12] ^ 0xF7) - 2 * ((v91[12] ^ 0xF7) & 0xAEu) + 174) - (v91[12] ^ 0xF7);
  v105 = *v91;
  STACK[0x3A8] = 3;
  v106 = v91[3];
  v107 = *(unsigned __int8 *)(v92 + (v105 ^ 0xD8)) + (v105 ^ 0x76) - 2 * (v105 ^ 0x76);
  STACK[0x3B8] = 8;
  v355 = (v106 ^ 0xFFFFFFBB) + *(unsigned __int8 *)(v72 + (v106 ^ 0x57));
  v108 = (v91[8] ^ 0xA7) + *(_BYTE *)(v92 + (v91[8] ^ 0xF6));
  STACK[0x3A0] = 7;
  LOBYTE(v106) = (v91[7] ^ 0xE9) + *(_BYTE *)(v72 + (v91[7] ^ 5));
  STACK[0x2A0] = 13;
  v109 = *(unsigned __int8 *)(v78 + (v91[13] ^ 0x12));
  v110 = v109 ^ ((((v109 ^ 0xB6) >> 3) & 4 ^ v109 & 0xA4 | ((v109 ^ 0xB6) >> 3) & 0xFB ^ (v109 ^ 0xFFFFFFB6) & 0x5A) >> 1);
  v111 = *(_BYTE *)(v78 + (v91[5] ^ 0x9CLL));
  v112 = ((v111 ^ 0xB6) >> 4) ^ ((v111 ^ 0xB6) >> 1);
  STACK[0x270] = 9;
  v113 = (v106 - 116) | ((v111 ^ 0xE6 ^ (v112 - ((2 * v112) & 0xEA) - 11)) << 16);
  v114 = *(unsigned __int8 *)(v78 + (v91[9] ^ 0x76));
  v115 = v114 & 8 | 0x46;
  if ((((v114 ^ 0xB6) >> 3) & v114 & 8) != 0)
    v115 = -116 - v115;
  v116 = v114 ^ ((((((v114 ^ 0xB6) >> 3) + v115 - 70) ^ (v114 ^ 0xB6) & 0xF7) & 0xFE) >> 1);
  v117 = *(_BYTE *)(v72 + (v91[11] ^ 0x12)) + (v91[11] ^ 0xFE);
  v118 = *(unsigned __int8 *)(v78 + (v91[1] ^ 0xCFLL));
  v119 = v118 & 0xFFFFFFBF ^ 0xFFFFFFB5 ^ ((v118 | 0xFFFFFFBF) + 68);
  v120 = v119 ^ (v119 >> 4) ^ (v119 >> 1);
  v121 = *(_QWORD *)(v64 + 8 * (int)(v100 ^ 0x460));
  HIDWORD(v352) = v110;
  v122 = *(_DWORD *)(v121 + 4 * (v110 ^ 0x91));
  LODWORD(STACK[0x220]) = 170726136;
  STACK[0x230] = 10;
  v123 = *(_BYTE *)(v74 + (v91[10] ^ 0xFBLL));
  v124 = (v123 ^ (16 * v123)) ^ 0x21;
  v125 = *(_QWORD *)(v64 + 8 * (int)(v100 ^ 0x47D));
  v126 = *(_DWORD *)(v125 + 4 * ((v123 ^ (16 * v123)) ^ 0xAEu));
  HIDWORD(v127) = v126 ^ 0xEB01;
  LODWORD(v127) = v126 ^ 0x67F0000;
  HIDWORD(v350) = v107 - 52;
  v351 = __PAIR64__(v120, v124);
  HIDWORD(v359) = v100;
  v128 = *(_QWORD *)(v64 + 8 * (int)(v100 - 1059));
  v129 = (v127 >> 16) ^ *(_DWORD *)(v128 + 4 * ((v107 - 52) ^ 0xF9u)) ^ (16 * (v122 ^ 0x881C46C4)
                                                                                          - 2118857880
                                                                                          - ((32 * (v122 ^ 0x881C46C4)) & 0x36996C0));
  LODWORD(v350) = v113 ^ v104;
  v130 = v113 ^ v104 ^ 0xDD03A24B;
  v131 = *(_QWORD *)(v64 + 8 * (int)(v100 ^ 0x4C9));
  v132 = *(_DWORD *)(v131 + 4 * (v130 ^ 0x33u)) ^ v122 ^ (v129
                                                                           + 1708175236
                                                                           - ((2 * v129) & 0xCBA15F08));
  LODWORD(v353) = v96;
  v133 = *(_DWORD *)(v125 + 4 * (v96 ^ 0x71u));
  HIDWORD(v127) = v133 ^ 0xEB01;
  LODWORD(v127) = v133 ^ 0x67F0000;
  v134 = *(_DWORD *)(v121 + 4 * (v120 ^ 0xBFu)) ^ 0x881C46C4;
  v135 = (v127 >> 16) ^ (16 * v134 - 2118857880 - ((32 * v134) & 0x36996C0)) ^ *(_DWORD *)(v128 + 4 * HIBYTE(v130));
  HIDWORD(v349) = (v117 - 116);
  v136 = *(_DWORD *)(v131 + 4 * (HIDWORD(v349) ^ 0xB9u)) ^ v134 ^ (v135 + 1708175236 - ((2 * v135) & 0xCBA15F08));
  v137 = *(_DWORD *)(v121 + 4 * BYTE2(v130)) ^ 0x881C46C4;
  v138 = *(unsigned __int8 *)(v93 + (v91[2] ^ 0x26));
  HIDWORD(v348) = v138 ^ (16 * v138);
  v139 = *(_DWORD *)(v125 + 4 * (BYTE4(v348) ^ 0x5Bu));
  HIDWORD(v127) = v139 ^ 0xEB01;
  LODWORD(v127) = v139 ^ 0x67F0000;
  LODWORD(v348) = (v108 - ((2 * v108 + 26) & 0x4E) - 12);
  v140 = (v127 >> 16) ^ *(_DWORD *)(v128 + 4 * (v348 ^ 0x40)) ^ (16 * v137
                                                                               - 2118857880
                                                                               - ((32 * v137) & 0x36996C0));
  LODWORD(v349) = v358 - 116;
  v141 = *(_DWORD *)(v131 + 4 * ((v358 - 116) ^ 0xEBu)) ^ v137;
  v142 = *(_DWORD *)(v125 + 4 * (BYTE1(v104) ^ 0x31u));
  HIDWORD(v127) = v142 ^ 0xEB01;
  LODWORD(v127) = v142 ^ 0x67F0000;
  v143 = v141 ^ (v140 + 1708175236 - ((2 * v140) & 0xCBA15F08));
  HIDWORD(v347) = v357 - 52;
  LODWORD(v352) = v116;
  v144 = *(_DWORD *)(v121 + 4 * (v116 ^ 0xCAu)) ^ 0x881C46C4;
  v145 = (v127 >> 16) ^ *(_DWORD *)(v128 + 4 * ((v357 - 52) ^ 0xF7u)) ^ (16 * v144
                                                                                          - 2118857880
                                                                                          - ((32 * v144) & 0x36996C0));
  LODWORD(v347) = v355 - 116;
  v146 = *(_DWORD *)(v131 + 4 * ((v355 - 116) ^ 0x33u)) ^ v144 ^ (v145
                                                                                   + 1708175236
                                                                                   - ((2 * v145) & 0xCBA15F08));
  v147 = *(_DWORD *)(v121 + 4 * (BYTE2(v146) ^ 0xBBu)) ^ 0x881C46C4;
  v148 = *(_DWORD *)(v125 + 4 * (BYTE1(v143) ^ 0xF4u));
  HIDWORD(v127) = v148 ^ 0xEB01;
  LODWORD(v127) = v148 ^ 0x67F0000;
  v149 = BYTE1(v136) ^ 0xAD;
  v150 = v147 ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v132) ^ 0xDF)) ^ *(_DWORD *)(v131
                                                                            + 4 * (v136 ^ 0xDBu)) ^ (16 * v147 - 2118857880 - ((32 * v147) & 0x36996C0)) ^ (v127 >> 16);
  v151 = *(_DWORD *)(v121 + 4 * (BYTE2(v132) ^ 0xF0u));
  v152 = *(_DWORD *)(v125 + 4 * ((unsigned __int16)(v146 ^ 0x22E) >> 8));
  HIDWORD(v127) = v152 ^ 0xEB01;
  LODWORD(v127) = v152 ^ 0x67F0000;
  v153 = (16 * (v151 ^ 0x881C46C4) - 2118857880 - ((32 * (v151 ^ 0x881C46C4)) & 0x36996C0)) ^ *(_DWORD *)(v128 + 4 * ((v136 ^ 0xF15ADDB) >> 24)) ^ (v127 >> 16);
  v154 = *(_DWORD *)(v131 + 4 * (v143 ^ 0x80u)) ^ v151 ^ (v153
                                                                           + 1708175236
                                                                           - ((2 * v153) & 0xCBA15F08));
  v155 = *(_DWORD *)(v121 + 4 * (BYTE2(v136) ^ 0xD6u)) ^ 0x881C46C4;
  v156 = (16 * v155 - 2118857880 - ((32 * v155) & 0x36996C0)) ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v143) ^ 0x19));
  v157 = *(_DWORD *)(v125 + 4 * (BYTE1(v132) ^ 0xA0u));
  HIDWORD(v127) = v157 ^ 0xEB01;
  LODWORD(v127) = v157 ^ 0x67F0000;
  v158 = *(_DWORD *)(v131 + 4 * (v146 ^ 0x2Eu)) ^ v155 ^ (v127 >> 16);
  v159 = *(_DWORD *)(v121 + 4 * (BYTE2(v143) ^ 0x32u));
  v160 = *(_DWORD *)(v125 + 4 * v149);
  HIDWORD(v127) = v160 ^ 0xEB01;
  LODWORD(v127) = v160 ^ 0x67F0000;
  v161 = (v127 >> 16) ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v146) ^ 0xBD)) ^ (16 * (v159 ^ 0x881C46C4)
                                                                         - 2118857880
                                                                         - ((32 * (v159 ^ 0x881C46C4)) & 0x36996C0));
  v162 = v159 ^ *(_DWORD *)(v131 + 4 * (v132 ^ 0x64u)) ^ 0xF9D59000 ^ (v161
                                                                                        + 1708175236
                                                                                        - ((2 * v161) & 0xCBA15F08));
  v163 = v162
       - ((2 * v162) & 0x5F186BF6)
       + 797718011
       - ((2 * (v162 - ((2 * v162) & 0x5F186BF6) + 797718011)) & 0x3FE8C764)
       - 1611373646;
  v164 = *(_DWORD *)(v121 + 4 * (BYTE2(v163) ^ 0x37u));
  v165 = v158 ^ (v156 + 1708175236 - ((2 * v156) & 0xCBA15F08));
  BYTE2(v161) = BYTE2(v165) ^ 0xEB;
  v166 = *(_DWORD *)(v125 + 4 * ((unsigned __int16)(v165 ^ 0xDFF9) >> 8));
  v167 = (16 * (v164 ^ 0x881C46C4) - 2118857880 - ((32 * (v164 ^ 0x881C46C4)) & 0x36996C0)) ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v150) ^ 0xF3)) ^ (((v166 ^ 0x67FEB01u) >> (v150 & 0x10) >> (v150 & 0x10 ^ 0x10)) + ((v166 << 16) ^ 0xEB010000));
  v168 = *(_DWORD *)(v131 + 4 * (v154 ^ 0x1Du)) ^ v164 ^ (v167
                                                                           + 1708175236
                                                                           - ((2 * v167) & 0xCBA15F08));
  LOWORD(v167) = v150 ^ 0x7BA4;
  v169 = *(_DWORD *)(v121 + 4 * ((v150 ^ 0x1A8A7BA4) >> 16)) ^ 0x881C46C4;
  v170 = *(_DWORD *)(v125 + 4 * (BYTE1(v163) ^ 0xF0u));
  HIDWORD(v127) = v170 ^ 0xEB01;
  LODWORD(v127) = v170 ^ 0x67F0000;
  v171 = (16 * v169 - 2118857880 - ((32 * v169) & 0x36996C0)) ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v154) ^ 0xC3)) ^ (v127 >> 16);
  v172 = *(_DWORD *)(v131 + 4 * (v165 ^ 0xF9u));
  v173 = *(_DWORD *)(v128 + 4 * (HIBYTE(v165) ^ 5));
  HIDWORD(v127) = v173 ^ 0x368;
  LODWORD(v127) = v173 ^ 0x81B4C800;
  v174 = v172 ^ v169 ^ (v171 + 1708175236 - ((2 * v171) & 0xCBA15F08));
  v175 = *(_DWORD *)(v121 + 4 * (BYTE2(v154) ^ 0x29u)) ^ 0x881C46C4;
  v176 = *(_DWORD *)(v125 + 4 * BYTE1(v167));
  v177 = (((v127 >> 10) ^ 0x25EB099C) << 10) ^ (16 * v175) ^ (((v127 >> 10) ^ 0x25EB099C) >> 22);
  HIDWORD(v127) = v176 ^ 0xEB01;
  LODWORD(v127) = v176 ^ 0x67F0000;
  v178 = *(_DWORD *)(v125 + 4 * (BYTE1(v154) ^ 0x8Bu));
  v179 = *(_DWORD *)(v131 + 4 * (v163 ^ 0x81u)) ^ v175 ^ (v127 >> 16) ^ (v177
                                                                                          + 1708175236
                                                                                          - ((2 * v177) & 0xCBA15F08));
  HIDWORD(v127) = v178 ^ 0xEB01;
  LODWORD(v127) = v178 ^ 0x67F0000;
  v180 = *(_DWORD *)(v121 + 4 * BYTE2(v161)) ^ 0x881C46C4;
  v181 = (v127 >> 16) ^ (16 * v180 - 2118857880 - ((32 * v180) & 0x36996C0)) ^ *(_DWORD *)(v128
                                                                                         + 4 * (HIBYTE(v163) ^ 0x76));
  v182 = *(_DWORD *)(v131 + 4 * (v167 ^ 0x33u)) ^ v180 ^ (v181
                                                                           + 1708175236
                                                                           - ((2 * v181) & 0xCBA15F08));
  v183 = *(_DWORD *)(v121 + 4 * (BYTE2(v182) ^ 0x62u)) ^ 0x881C46C4;
  v184 = (16 * v183 - 2118857880 - ((32 * v183) & 0x36996C0)) ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v168) ^ 0x55));
  v185 = BYTE2(v179) ^ 0xF7;
  v186 = *(_DWORD *)(v125 + 4 * ((unsigned __int16)(v179 ^ 0xE4A6) >> 8));
  HIDWORD(v127) = v186 ^ 0xEB01;
  LODWORD(v127) = v186 ^ 0x67F0000;
  v187 = *(_DWORD *)(v131 + 4 * (v174 ^ 0x68u)) ^ v183 ^ (v127 >> 16) ^ (v184
                                                                                          + 1708175236
                                                                                          - ((2 * v184) & 0xCBA15F08));
  v188 = *(_DWORD *)(v121 + 4 * (BYTE2(v168) ^ 0x47u)) ^ 0x881C46C4;
  v189 = *(_DWORD *)(v125 + 4 * ((unsigned __int16)(v182 ^ 0x2957) >> 8));
  HIDWORD(v127) = v189 ^ 0xEB01;
  LODWORD(v127) = v189 ^ 0x67F0000;
  v190 = (16 * v188 - 2118857880 - ((32 * v188) & 0x36996C0)) ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v174) ^ 0xCE)) ^ (v127 >> 16);
  v191 = *(_DWORD *)(v131 + 4 * (v179 ^ 0x15u)) ^ v188 ^ (v190
                                                                           + 1708175236
                                                                           - ((2 * v190) & 0xCBA15F08));
  v192 = *(_DWORD *)(v121 + 4 * (BYTE2(v174) ^ 0x60u)) ^ 0x881C46C4;
  v193 = *(_DWORD *)(v125 + 4 * (BYTE1(v168) ^ 0xDDu));
  HIDWORD(v127) = v193 ^ 0xEB01;
  LODWORD(v127) = v193 ^ 0x67F0000;
  v194 = (16 * v192 - 2118857880 - ((32 * v192) & 0x36996C0)) ^ *(_DWORD *)(v128 + 4 * ((v179 ^ 0xF1F7E4A6) >> 24)) ^ (v127 >> 16);
  v195 = *(_DWORD *)(v131 + 4 * (v182 ^ 0x57u)) ^ v192 ^ (v194
                                                                           + 1708175236
                                                                           - ((2 * v194) & 0xCBA15F08));
  if ((v174 & 0x1000) != 0)
    v196 = -16;
  else
    v196 = 16;
  v197 = *(_DWORD *)(v121 + 4 * v185) ^ 0x881C46C4;
  v198 = *(_DWORD *)(v125 + 4 * (((BYTE1(v174) ^ 0xC) + v196) ^ 0x83u));
  v199 = *(_DWORD *)(v128 + 4 * (HIBYTE(v182) ^ 0xA1)) ^ 0xEB01067F ^ HIWORD(v198) ^ (v198 << 16) ^ (16 * v197 - 2118857880 - ((32 * v197) & 0x36996C0));
  v200 = *(_DWORD *)(v125 + 4 * ((unsigned __int16)(v195 ^ 0x8D48) >> 8));
  v201 = *(_DWORD *)(v131 + 4 * (v168 ^ 0xA7u)) ^ v197 ^ (v199
                                                                           + 1708175236
                                                                           - ((2 * v199) & 0xCBA15F08));
  HIDWORD(v202) = v200 ^ 0xEB01;
  LODWORD(v202) = v200 ^ 0x67F0000;
  v203 = v201 ^ 0xEFBC3B44;
  v204 = *(_DWORD *)(v121 + 4 * ((v201 ^ 0xEFBC3B44) >> 16)) ^ 0x881C46C4;
  v205 = (v202 >> 16) ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v187) ^ 0xCC)) ^ (16 * v204
                                                                         - 2118857880
                                                                         - ((32 * v204) & 0x36996C0));
  v206 = *(_DWORD *)(v131 + 4 * (v191 ^ 0xA9u)) ^ v204 ^ (v205
                                                                           + 1708175236
                                                                           - ((2 * v205) & 0xCBA15F08));
  v207 = *(_DWORD *)(v125 + 4 * ((unsigned __int16)(v201 ^ 0x3B44) >> 8));
  HIDWORD(v202) = v207 ^ 0xEB01;
  LODWORD(v202) = v207 ^ 0x67F0000;
  v208 = v187 ^ 0x255FD583;
  v209 = *(_DWORD *)(v121 + 4 * (BYTE2(v208) ^ 0xC3u)) ^ 0x881C46C4;
  v210 = (v202 >> 16) ^ *(_DWORD *)(v128 + 4 * HIBYTE(v191)) ^ (16 * v209 - 2118857880 - ((32 * v209) & 0x36996C0));
  v211 = *(_DWORD *)(v131 + 4 * (v195 ^ 0x48u)) ^ v209 ^ (v210
                                                                           + 1708175236
                                                                           - ((2 * v210) & 0xCBA15F08));
  v212 = *(_DWORD *)(v125 + 4 * BYTE1(v208));
  HIDWORD(v202) = v212 ^ 0xEB01;
  LODWORD(v202) = v212 ^ 0x67F0000;
  v213 = *(_DWORD *)(v121 + 4 * ((v191 ^ 0xE93411A9) >> 16)) ^ 0x881C46C4;
  v214 = (16 * v213 - 2118857880 - ((32 * v213) & 0x36996C0)) ^ *(_DWORD *)(v128 + 4 * ((v195 ^ 0x807D8D48) >> 24)) ^ (v202 >> 16);
  v215 = *(_DWORD *)(v131 + 4 * (v201 ^ 0x77u)) ^ v213 ^ (v214
                                                                           + 1708175236
                                                                           - ((2 * v214) & 0xCBA15F08));
  v216 = *(_DWORD *)(v125 + 4 * (BYTE1(v191) ^ 0x82u));
  HIDWORD(v202) = v216 ^ 0xEB01;
  LODWORD(v202) = v216 ^ 0x67F0000;
  v217 = *(_DWORD *)(v121 + 4 * (BYTE2(v195) ^ 0xBEu)) ^ 0x881C46C4;
  v218 = (v202 >> 16) ^ *(_DWORD *)(v128 + 4 * HIBYTE(v203)) ^ (16 * v217 - 2118857880 - ((32 * v217) & 0x36996C0));
  v219 = *(_DWORD *)(v131 + 4 * v208) ^ v217 ^ (v218 + 1708175236 - ((2 * v218) & 0xCBA15F08));
  v220 = *(_DWORD *)(v121 + 4 * ((v219 ^ 0x950DA39D) >> 16)) ^ 0x881C46C4;
  v221 = (16 * v220 - 2118857880 - ((32 * v220) & 0x36996C0)) ^ *(_DWORD *)(v128 + 4 * ((v206 ^ 0x11521BCA) >> 24));
  v222 = *(_DWORD *)(v125 + 4 * (BYTE1(v215) ^ 0x89u));
  HIDWORD(v202) = v222 ^ 0xEB01;
  LODWORD(v202) = v222 ^ 0x67F0000;
  BYTE1(v222) = BYTE1(v211) ^ 0xD1;
  v223 = *(_DWORD *)(v131 + 4 * (v211 ^ 0x88u)) ^ v220 ^ (v202 >> 16) ^ 0x71C9D6C4 ^ (v221 + 1708175236 - ((2 * v221) & 0xCBA15F08));
  v224 = *(_DWORD *)(v121 + 4 * ((v206 ^ 0x11521BCA) >> 16));
  v225 = *(_DWORD *)(v125 + 4 * (BYTE1(v219) ^ 0x30u));
  HIDWORD(v202) = v225 ^ 0xEB01;
  LODWORD(v202) = v225 ^ 0x67F0000;
  v226 = (16 * (v224 ^ 0x881C46C4) - 2118857880 - ((32 * (v224 ^ 0x881C46C4)) & 0x36996C0)) ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v211) ^ 0xDF)) ^ (v202 >> 16);
  v215 ^= 0x7A851A70u;
  v227 = *(_DWORD *)(v131 + 4 * (v215 ^ 0x33u)) ^ v224 ^ (v226
                                                                           + 1708175236
                                                                           - ((2 * v226) & 0xCBA15F08));
  v228 = *(_DWORD *)(v121 + 4 * (BYTE2(v211) ^ 0xA7u)) ^ 0x881C46C4;
  v229 = *(_DWORD *)(v125 + 4 * (BYTE1(v206) ^ 0x88u));
  HIDWORD(v202) = v229 ^ 0xEB01;
  LODWORD(v202) = v229 ^ 0x67F0000;
  v230 = (16 * v228 - 2118857880 - ((32 * v228) & 0x36996C0)) ^ *(_DWORD *)(v128
                                                                          + 4
                                                                          * ((HIBYTE(v215) ^ -HIBYTE(v215) ^ ((HIBYTE(v215) ^ 0xFFFFFF16) + 234))
                                                                           + 233)) ^ (v202 >> 16);
  v231 = *(_DWORD *)(v131 + 4 * (v219 ^ 0x9Du)) ^ v228 ^ (v230
                                                                           + 1708175236
                                                                           - ((2 * v230) & 0xCBA15F08));
  v232 = *(_DWORD *)(v121 + 4 * BYTE2(v215));
  v233 = *(_DWORD *)(v125 + 4 * BYTE1(v222));
  HIDWORD(v202) = v233 ^ 0xEB01;
  LODWORD(v202) = v233 ^ 0x67F0000;
  v234 = (v202 >> 16) ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v219) ^ 0x7C)) ^ (16 * (v232 ^ 0x881C46C4)
                                                                         - 2118857880
                                                                         - ((32 * (v232 ^ 0x881C46C4)) & 0x36996C0));
  v235 = *(_DWORD *)(v131 + 4 * (v206 ^ 0xF9u)) ^ v232 ^ (v234
                                                                           + 1708175236
                                                                           - ((2 * v234) & 0xCBA15F08));
  v236 = *(_DWORD *)(v125 + 4 * ((unsigned __int16)(v231 ^ 0xDE69) >> 8));
  HIDWORD(v202) = v236 ^ 0xEB01;
  LODWORD(v202) = v236 ^ 0x67F0000;
  v237 = HIBYTE(v235) ^ 0xFFFFFF9D;
  v238 = v223 - ((2 * v223) & 0x30D60784) - 1737817150;
  v239 = *(_DWORD *)(v121 + 4 * (BYTE2(v235) ^ 0x9Bu));
  v240 = (v202 >> 16) ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v238) ^ 0xF1)) ^ (16 * (v239 ^ 0x881C46C4)
                                                                         - 2118857880
                                                                         - ((32 * (v239 ^ 0x881C46C4)) & 0x36996C0));
  v241 = *(_DWORD *)(v131 + 4 * (v227 ^ 0x17u)) ^ v239 ^ (v240
                                                                           + 1708175236
                                                                           - ((2 * v240) & 0xCBA15F08));
  v242 = *(_DWORD *)(v125 + 4 * (BYTE1(v235) ^ 0x79u));
  HIDWORD(v202) = v242 ^ 0xEB01;
  LODWORD(v202) = v242 ^ 0x67F0000;
  v243 = *(_DWORD *)(v121 + 4 * (BYTE2(v238) ^ 1u)) ^ 0x881C46C4;
  v244 = v243 ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v227) ^ 0x55)) ^ *(_DWORD *)(v131
                                                                            + 4 * (v231 ^ 0x69u)) ^ ((v202 >> 16) + 1708175236 - ((2 * (v202 >> 16)) & 0xCBA15F08)) ^ (16 * v243 - 2118857880 - ((32 * v243) & 0x36996C0));
  v245 = *(_DWORD *)(v121 + 4 * (BYTE2(v227) ^ 0xE6u)) ^ 0x881C46C4;
  v246 = *(_DWORD *)(v125 + 4 * (BYTE1(v238) ^ 0x68u));
  HIDWORD(v202) = v246 ^ 0xEB01;
  LODWORD(v202) = v246 ^ 0x67F0000;
  v247 = (16 * v245 - 2118857880 - ((32 * v245) & 0x36996C0)) ^ *(_DWORD *)(v128 + 4 * ((v231 ^ 0x5FEEDE69) >> 24)) ^ (v202 >> 16);
  v248 = *(_DWORD *)(v131
                   + 4
                   * ((((v235 ^ 0x8B) + (v235 ^ 0xFFFFFF47) + 1) ^ 0xFFFFFFFE)
                    + (v235 ^ 0x8B))) ^ v245 ^ (v247 + 1708175236 - ((2 * v247) & 0xCBA15F08));
  v249 = *(_DWORD *)(v121 + 4 * (BYTE2(v231) ^ 0x2Du)) ^ 0x881C46C4;
  v250 = *(_DWORD *)(v125 + 4 * (BYTE1(v227) ^ 0x99u));
  HIDWORD(v202) = v250 ^ 0xEB01;
  LODWORD(v202) = v250 ^ 0x67F0000;
  v251 = (v202 >> 16) ^ (16 * v249 - 2118857880 - ((32 * v249) & 0x36996C0)) ^ *(_DWORD *)(v128
                                                                                         + 4
                                                                                         * (v237 & 0x90 ^ 0x86 ^ (~(2 * (v237 | 0x90)) + (v237 | 0x90))));
  v252 = *(_DWORD *)(v131 + 4 * (v238 ^ 0x99u)) ^ v249 ^ (v251
                                                                           + 1708175236
                                                                           - ((2 * v251) & 0xCBA15F08));
  v253 = *(_DWORD *)(v121 + 4 * ((v252 ^ 0x59A5F4B7) >> 16)) ^ 0x881C46C4;
  v254 = *(_DWORD *)(v125 + 4 * ((unsigned __int16)(v248 ^ 0x872B) >> 8));
  HIDWORD(v202) = v254 ^ 0xEB01;
  LODWORD(v202) = v254 ^ 0x67F0000;
  v255 = (16 * v253 - 2118857880 - ((32 * v253) & 0x36996C0)) ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v241) ^ 0x5A)) ^ (v202 >> 16);
  v256 = *(_DWORD *)(v131 + 4 * (v244 ^ 0xEEu)) ^ v253 ^ (v255
                                                                           + 1708175236
                                                                           - ((2 * v255) & 0xCBA15F08));
  v257 = *(_DWORD *)(v121 + 4 * (BYTE2(v241) ^ 0x39u)) ^ 0x881C46C4;
  v258 = *(_DWORD *)(v125 + 4 * (BYTE1(v252) ^ 0x67u));
  HIDWORD(v202) = v258 ^ 0xEB01;
  LODWORD(v202) = v258 ^ 0x67F0000;
  v259 = v257 ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v244) ^ 0xD6)) ^ *(_DWORD *)(v131
                                                                            + 4 * (v248 ^ 0x18u)) ^ (16 * v257 - 2118857880 - ((32 * v257) & 0x36996C0)) ^ ((v202 >> 16) + 1708175236 - ((2 * (v202 >> 16)) & 0xCBA15F08));
  v260 = *(_DWORD *)(v121 + 4 * (BYTE2(v244) ^ 0x56u)) ^ 0x881C46C4;
  v261 = *(_DWORD *)(v125 + 4 * (BYTE1(v241) ^ 0xFDu));
  HIDWORD(v202) = v261 ^ 0xEB01;
  LODWORD(v202) = v261 ^ 0x67F0000;
  v262 = *(_DWORD *)(v128 + 4 * ((v248 ^ 0x911B872B) >> 24)) ^ v260 ^ 0x6D41727E ^ (16 * v260
                                                                                    - 2118857880
                                                                                    - ((32 * v260) & 0x36996C0)) ^ (v202 >> 16);
  HIDWORD(v202) = *(_DWORD *)(v131 + 4 * (v252 ^ 0xB7u)) ^ 0x79580B3E;
  LODWORD(v202) = HIDWORD(v202);
  v263 = (v202 >> 21) ^ __ROR4__(v262, 21);
  v264 = *(_DWORD *)(v121 + 4 * (BYTE2(v248) ^ 0xD8u)) ^ 0x881C46C4;
  v265 = *(_DWORD *)(v125 + 4 * (BYTE1(v244) ^ 0xE4u));
  HIDWORD(v202) = v265 ^ 0xEB01;
  LODWORD(v202) = v265 ^ 0x67F0000;
  v266 = (v202 >> 16) ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v252) ^ 0xB0)) ^ (16 * v264
                                                                         - 2118857880
                                                                         - ((32 * v264) & 0x36996C0));
  v267 = *(_DWORD *)(v131 + 4 * (v241 ^ 0x62u)) ^ v264 ^ (v266
                                                                           + 1708175236
                                                                           - ((2 * v266) & 0xCBA15F08));
  v268 = *(_DWORD *)(v121 + 4 * (BYTE2(v256) ^ 0x74u)) ^ 0x881C46C4;
  v269 = *(_DWORD *)(v125 + 4 * (BYTE1(v267) ^ 0x66u));
  HIDWORD(v202) = v269 ^ 0xEB01;
  LODWORD(v202) = v269 ^ 0x67F0000;
  v270 = v259 ^ 0x177CD9D9;
  v271 = *(_DWORD *)(v128 + 4 * ((v259 ^ 0x177CD9D9u) >> 24)) ^ 0x6D41727E ^ v268 ^ (v202 >> 16) ^ (16 * v268 - 2118857880 - ((32 * v268) & 0x36996C0));
  HIDWORD(v202) = v263 ^ 0x549BF9D9;
  LODWORD(v202) = v263 ^ 0x549BF9D9;
  v272 = v202 >> 11;
  v273 = (v271 & 0x200 ^ 0x3BE9BEBD) + 2 * (v271 & 0x200);
  v274 = *(_DWORD *)(v131 + 4 * ((v202 >> 11) ^ 0xEFu));
  v275 = ((v273 - 1005174461) & (v274 ^ 0x65D0AF84)) == 0;
  v276 = *(_DWORD *)(v121 + 4 * (BYTE2(v267) ^ 0x72u)) ^ 0x881C46C4;
  v277 = *(_DWORD *)(v125 + 4 * (BYTE1(v272) ^ 0xA0u));
  HIDWORD(v202) = v277 ^ 0xEB01;
  LODWORD(v202) = v277 ^ 0x67F0000;
  v278 = (v202 >> 16) ^ *(_DWORD *)(v128 + 4 * ((v256 ^ 0xD4B73D47) >> 24)) ^ (16 * v276
                                                                               - 2118857880
                                                                               - ((32 * v276) & 0x36996C0));
  v279 = *(_DWORD *)(v131 + 4 * (v259 ^ 0xEAu)) ^ v276 ^ (v278
                                                                           + 1708175236
                                                                           - ((2 * v278) & 0xCBA15F08));
  v280 = v273 - 46212;
  v281 = 2010302710 - v273;
  if (v275)
    v281 = v280;
  v282 = ((v274 ^ 0x79580B3E) - 1005128249 + v281) ^ v271 & 0xFFFFFDFF;
  v283 = *(_DWORD *)(v121 + 4 * BYTE2(v270)) ^ 0x881C46C4;
  v284 = *(_DWORD *)(v125 + 4 * (BYTE1(v256) ^ 0xAEu));
  HIDWORD(v285) = v284 ^ 0xEB01;
  LODWORD(v285) = v284 ^ 0x67F0000;
  v286 = (16 * v283 - 2118857880 - ((32 * v283) & 0x36996C0)) ^ *(_DWORD *)(v128 + 4 * ((v272 ^ 0x1EA133EFu) >> 24));
  v287 = *(_DWORD *)(v131 + 4 * (v267 ^ 0xDu)) ^ v283 ^ (v285 >> 16) ^ (v286
                                                                                         + 1708175236
                                                                                         - 2
                                                                                         * (v286 & 0x65D0AF85 ^ *(_DWORD *)(v128 + 4 * ((v272 ^ 0x1EA133EFu) >> 24)) & 1));
  v288 = *(_DWORD *)(v125 + 4 * BYTE1(v270));
  HIDWORD(v285) = v288 ^ 0xEB01;
  LODWORD(v285) = v288 ^ 0x67F0000;
  v289 = *(_DWORD *)(v121 + 4 * (BYTE2(v272) ^ 0x62u)) ^ 0x881C46C4;
  v290 = (16 * v289 - 2118857880 - ((32 * v289) & 0x36996C0)) ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v267) ^ 0x32)) ^ (v285 >> 16);
  v291 = *(_DWORD *)(v131 + 4 * (v256 ^ 0x74u)) ^ v289 ^ (v290
                                                                           + 1708175236
                                                                           - ((2 * v290) & 0xCBA15F08));
  v292 = (uint64_t)*(&off_1E93A7480 + (int)(v100 ^ 0x4EC));
  v293 = v282 ^ 0xF137909F;
  v294 = v287 ^ 0xBC37B;
  v295 = (char *)*(&off_1E93A7480 + (int)(v100 - 1014)) - 8;
  v296 = *(_DWORD *)&v295[4 * (BYTE2(v279) ^ 0x99)] ^ 0x3BE28D4A;
  v297 = (char *)*(&off_1E93A7480 + (int)(v100 - 1029)) - 4;
  v298 = v279 ^ 0x6792B6A6;
  v299 = *(_DWORD *)(v292 + 4 * (((v279 ^ 0x6792B6A6) >> 24) ^ 0xB4));
  v300 = ((v287 ^ 0x7B) + 1005823391 + ((2 * (v287 ^ 0x7B) + 224) & 0x25C ^ 0x87FFDFFF)) ^ v296 ^ (*(_DWORD *)(v292 + 4 * (((v282 ^ 0xF137909F) >> 24) ^ 0xB4)) + (((v282 ^ 0xF137909F) >> 24) ^ 0x9FD52929) - 2047936514) ^ (v296 >> 2) ^ *(_DWORD *)&v297[4 * (v287 ^ 0x79)] ^ (v296 >> 4);
  v301 = (char *)*(&off_1E93A7480 + (int)(v100 ^ 0x4F2)) - 4;
  v287 >>= 24;
  v302 = *(_DWORD *)&v301[4 * ((unsigned __int16)(v291 ^ 0x7C9C) >> 8)] ^ 0x56751A6C;
  HIDWORD(v354) = *(_DWORD *)(v292 + 4 * (v287 ^ 0xB4));
  LODWORD(v359) = (v291 ^ 0x250E7C9C) >> 24;
  HIDWORD(v356) = *(_DWORD *)(v292 + 4 * (v359 ^ 0xB4));
  v303 = *(_DWORD *)&v295[4 * (BYTE2(v291) ^ 5)];
  v304 = *(_DWORD *)&v295[4 * ((v282 ^ 0xF137909F) >> 16)];
  LODWORD(v356) = *(_DWORD *)&v295[4 * BYTE2(v294)];
  v305 = *(_DWORD *)&v301[4 * BYTE1(v294)];
  v306 = v300 ^ v302 ^ (1515496080 * v302);
  v307 = *(_DWORD *)&v301[4 * ((unsigned __int16)(v279 ^ 0xB6A6) >> 8)];
  v308 = *(_DWORD *)&v301[4 * (BYTE1(v282) ^ 0x5E)];
  v309 = *(_DWORD *)&v297[4 * (v282 ^ 0x9D)];
  v310 = *(unsigned int *)&v297[4 * (v291 ^ 0x9E)];
  LODWORD(v354) = *(_DWORD *)&v297[4 * (v279 ^ 0xA4)];
  v311 = (v306 - 1197441121 - ((2 * v306) & 0x7140FF3E)) ^ LODWORD(STACK[0x2DC]);
  v312 = (char *)*(&off_1E93A7480 + (int)(v100 - 1076)) - 8;
  v341[5] = v312[((v311 ^ 0x5244C6B3) >> 16) ^ 0x5ELL] ^ ((v311 ^ 0x5244C6B3) >> 16) ^ 0x8A ^ ((((v311 ^ 0x5244C6B3) >> 16) ^ 0x8A) - ((2 * (((v311 ^ 0x5244C6B3) >> 16) ^ 0x8A) - 18) & 0x83) + 56) ^ 0xB9;
  v313 = v303 ^ 0x3BE28D4A ^ ((HIBYTE(v298) ^ 0x9FD52929) - 2047936514 + v299) ^ ((v303 ^ 0x3BE28D4Au) >> 2) ^ ((v303 ^ 0x3BE28D4Au) >> 4) ^ v305 ^ 0x56751A6C ^ v309 ^ (1515496080 * (v305 ^ 0x56751A6C)) ^ (v293 + 1005823391 + ((2 * ((v293 + 112) & 0x12F ^ (v293 | 0x7FFFFFFE))) ^ 0x78002003));
  v314 = (v313 + 366164237 - ((2 * v313) & 0x2BA6721A)) ^ LODWORD(STACK[0x3B0]);
  v315 = v314 ^ 0x22A932A6;
  v316 = (BYTE1(v315) | 0x88) ^ (v315 >> 8) & 0x88;
  v317 = (uint64_t)*(&off_1E93A7480 + (int)(v100 ^ 0x4F3));
  v341[2] = (((unsigned __int16)(v314 ^ 0x32A6) >> 8) | 0x88) ^ ((unsigned __int16)(v314 ^ 0x32A6) >> 8) & 0x88 ^ 0x35 ^ ((*(_BYTE *)(v317 + (v316 ^ 0x14)) ^ 0xE3) - ((2 * *(_BYTE *)(v317 + (v316 ^ 0x14))) & 0x20) - 112);
  v318 = v304 ^ 0x3BE28D4A ^ ((v287 ^ 0x9FD52929) - 2047936514 + HIDWORD(v354)) ^ ((v304 ^ 0x3BE28D4Au) >> 2) ^ ((v304 ^ 0x3BE28D4Au) >> 4);
  LODWORD(v316) = (v318 & 0x1000000 ^ 0x6FDFDFEF) + 2 * (v318 & 0x1000000);
  v275 = (((_DWORD)v316 - 1876942831) & (v310 ^ 0xBF000000)) == 0;
  v319 = (char *)*(&off_1E93A7480 + (int)(v100 ^ 0x4C4)) - 4;
  v320 = v319[HIBYTE(v311) ^ 0xEFLL];
  HIDWORD(v285) = ~v320;
  LODWORD(v285) = (v320 ^ 0x40) << 24;
  v341[STACK[0x308]] = (v285 >> 29) ^ 0x83;
  v321 = v316 - 1104576576;
  v322 = -1645658210 - v316;
  if (v275)
    v322 = v321;
  v323 = v318 & 0xFEFFFFFF ^ (1515496080 * (v307 ^ 0x56751A6C)) ^ ((v310 ^ ((v291 ^ 0x9C)
                                                                          + 1005823391
                                                                          + ((2 * (v291 ^ 0x9C) + 224) & 0x25C ^ 0x87FFDFFF)))
                                                                 - 772366255
                                                                 + v322);
  v324 = v307 ^ 0x56751A6C ^ LODWORD(STACK[0x3C0]) ^ (v323 - 69448140 + (~(2 * v323) | 0x8476399u));
  v325 = (char *)*(&off_1E93A7480 + (int)(v100 ^ 0x4F4)) - 8;
  LOBYTE(v323) = v325[v307 ^ 0x6Cu ^ LOBYTE(STACK[0x3C0]) ^ (v323
                                                                                             + 52
                                                                                             + (~(2 * v323) | 0x99)) ^ 0x28];
  v341[11] = v323 & 0xFB ^ 0x4B ^ ((v323 | 0xFB) + 24);
  v326 = v319[HIBYTE(v314) ^ 0xF9];
  HIDWORD(v327) = ~v326;
  LODWORD(v327) = (v326 ^ 0x40) << 24;
  v328 = STACK[0x2C8];
  v341[STACK[0x2C8]] = (v327 >> 29) ^ 0xFB;
  v341[1] = BYTE2(v315) ^ 0x61 ^ ((BYTE2(v315) ^ 0x61) - ((2 * (BYTE2(v315) ^ 0x61) - 18) & 0x82) + 56) ^ 0xB8 ^ v312[BYTE2(v315) ^ 0xB5];
  v329 = (v359 ^ 0x9FD52929) - 2047936514 + HIDWORD(v356);
  v330 = v356 ^ 0x3BE28D4A ^ ((v356 ^ 0x3BE28D4A) >> 4) ^ ((v356 ^ 0x3BE28D4A) >> 2);
  v331 = v330 & 0x80000 | 0x5F0457B8;
  if ((v330 & 0x80000 & v329) != 0)
    v331 = -1106727056 - v331;
  v332 = v330 & 0xFFF7FFFF ^ (v329 - 1594120120 + v331) ^ (1515496080 * (v308 ^ 0x56751A6C));
  v333 = v354 ^ (v298 + 2096205936) ^ (v332 - ((2 * v332) & 0x7E042A5C) - 1090382546);
  v334 = v308 ^ LODWORD(STACK[0x400]) ^ (v333 + 1271828296 - ((2 * v333) & 0x979D1E90));
  v341[STACK[0x2A0]] = v312[(BYTE2(v334) ^ 0xEE) + 213 + ((v334 >> 15) & 0x1A8 ^ 0xFFFFFE77)] ^ BYTE2(v334) ^ ((BYTE2(v334) ^ 0xEE) - ((2 * (BYTE2(v334) ^ 0xEE) - 18) & 0x83) + 56) ^ 0x68;
  v335 = v319[HIBYTE(v334) ^ 0xACLL];
  HIDWORD(v336) = ~v335;
  LODWORD(v336) = (v335 ^ 0x40) << 24;
  v341[STACK[0x300]] = (v336 >> 29) ^ 0x50;
  v341[STACK[0x270]] = ((v324 ^ 0xCFDDD967) >> 16) ^ 0x94 ^ ((((v324 ^ 0xCFDDD967) >> 16) ^ 0x94)
                                                                         - ((2
                                                                           * (((v324 ^ 0xCFDDD967) >> 16) ^ 0x94)
                                                                           - 18) & 0x83)
                                                                         + 56) ^ v312[((v324 ^ 0xCFDDD967) >> 16) ^ 0x40] ^ 0xC;
  v337 = (((v334 ^ 0x9408843) >> 4) & 0xF0 | ((unsigned __int16)(v334 ^ 0x8843) >> 12)) ^ 0xE6;
  v341[STACK[0x3F8]] = *(_BYTE *)(v317 + (((v337 >> 4) & 0xFFFFFF0F | (16 * (v337 & 0xF))) ^ 0xAELL)) ^ (((v337 >> 4) & 0xF | (16 * (v337 & 0xF))) - ((2 * ((v337 >> 4) & 0xF | (16 * (v337 & 0xF)))) & 0xC7) - 29) ^ 0x2B;
  v341[STACK[0x230]] = (((unsigned __int16)(v324 ^ 0xD967) >> 8) - (((v324 ^ 0xCFDDD967) >> 7) & 0xC6) - 29) ^ 0xDB ^ *(_BYTE *)(v317 + (((unsigned __int16)(v324 ^ 0xD967) >> 8) ^ 0xA0));
  v341[STACK[0x3F0]] = (((unsigned __int16)(v311 ^ 0xC6B3) >> 8) + (~((v311 ^ 0x5244C6B3) >> 7) | 0x39) - 28) ^ *(_BYTE *)(v317 + (((unsigned __int16)(v311 ^ 0xC6B3) >> 8) ^ 0x75)) ^ 0x80;
  v341[STACK[0x3A8]] = v325[v314 ^ 0x95] ^ 0xF5;
  v341[STACK[0x3A0]] = v325[v311 ^ 0x7FLL] ^ 0x64;
  v341[STACK[0x418]] = v325[v334 ^ 0xECLL] ^ 0xCB;
  v338 = v319[BYTE3(v324) ^ 0x49];
  HIDWORD(v336) = ~v338;
  LODWORD(v336) = (v338 ^ 0x40) << 24;
  v341[STACK[0x3B8]] = (v336 >> 29) ^ 0x2E;
  v339 = (((_DWORD)v328 + 170726152 - 2 * (((_DWORD)v328 + 16) & 0xA2D12FA ^ STACK[0x220] & 2)) ^ 0xA2D12F0u) > 0x14F;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 8 * (int)((2 * v339) | (4 * v339) | v100)))(v312, 1450515052, v310, v317, v324, v325, 2247030782, v100, a9, a10, a11, a12, a13, a14, a15, a16, a17, v341, v342,
           v343,
           v344,
           v345,
           v346,
           v347,
           v348,
           v349,
           v350,
           v351,
           v352,
           v353,
           v354,
           v356,
           v359,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           2,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

void sub_1D24D088C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unsigned __int8 a24,int a25,int a26,unsigned __int8 a27,__int16 a28,unsigned __int8 a29,int a30,int a31,unsigned __int8 a32,int a33,unsigned __int8 a34,int a35,int a36,char a37,__int16 a38,char a39)
{
  char v39;

  LODWORD(STACK[0x3B0]) = (a24 | ((a27 ^ 0x4F) << 8) | ((a34 ^ 0x92) << 16) | ((a32 ^ 0xC) << (a39 ^ 0x85))) ^ 0x8D53EA6D;
  LODWORD(STACK[0x2DC]) = a31 ^ 0xBF210B1C;
  LODWORD(STACK[0x3C0]) = ((a33 << 8) | (a26 << 24) | ((a35 ^ 0xB3) << 16) | a30) ^ 0xD202648C;
  LODWORD(STACK[0x400]) = ((((a36 ^ 0x3A) << 16) + ((a25 ^ 0x1A) << 24)) | a29 | ((a37 ^ v39) << 8)) ^ 0x585F26D9;
  JUMPOUT(0x1D24CE9D4);
}

uint64_t sub_1D24D0994@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;

  STACK[0x5F0] = a2 - 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((a1 == v4) * (v2 - 351)) ^ v2)) - 12))();
}

uint64_t sub_1D24D09C8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  v2 = ((uint64_t (*)(unint64_t))STACK[0x2E0])(STACK[0x270]);
  LODWORD(STACK[0x528]) = -137501393;
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * (((STACK[0x518] == 0) * ((v1 - 684) ^ 0x1B3 ^ ((v1 - 966) | 0xC0))) ^ (v1 - 797))))(v2);
}

uint64_t sub_1D24D0A38@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((LODWORD(STACK[0x528]) != v2 + 14 * (a1 ^ 0x137) - 1358) * (a1 + 337)) ^ a1))
                            - 12))();
}

uint64_t sub_1D24D0B48()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x660]) = -137501393;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((STACK[0x4B0] != 0x1EC2B0D13B667C62) * ((2 * (v0 - 436)) ^ 0xC41)) ^ (v0 - 1240))))();
}

uint64_t sub_1D24D1B28@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = ((uint64_t (*)(uint64_t))STACK[0x2E0])(a1 - 0x1EC2B0D13B667C62);
  STACK[0x5F0] -= 16;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * (((v2 == 137543419) * (((v1 - 1771562567) & 0x6997E776) - 1314)) ^ (((v1 - 1771562567) & 0x6997E776) - 963)))
                                          - 12))(v4);
}

uint64_t sub_1D24D1BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  int v53;

  v51 = 3804331 * ((2 * ((v50 - 192) & 0x54056770) - (v50 - 192) + 737843337) ^ 0x5BB1B45);
  *(_QWORD *)(v50 - 136) = a46;
  *(_QWORD *)(v50 - 128) = a48;
  *(_DWORD *)(v50 - 144) = v48 - v51 - 74;
  *(_QWORD *)(v50 - 152) = a16;
  *(_DWORD *)(v50 - 192) = v51 ^ 0x5C6DACBD;
  *(_QWORD *)(v50 - 176) = STACK[0x408];
  *(_QWORD *)(v50 - 168) = 0;
  *(_QWORD *)(v50 - 184) = 0;
  v52 = ((uint64_t (*)(uint64_t))((char *)*(&off_1E93A7480 + (v48 ^ 0x1EC)) - 8))(v50 - 192);
  v53 = *(_DWORD *)(v50 - 160);
  LODWORD(STACK[0x664]) = v53;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v49 + 8 * ((2026 * (v53 == 137543419)) ^ v48))
                                          - ((((v48 - 365) | 0x400u) + 12) ^ (v48 - 707607236) & 0x2A2D3D56)))(v52);
}

void sub_1D24D1C9C()
{
  JUMPOUT(0x1D24D1CF0);
}

void sub_1D24D1D38()
{
  JUMPOUT(0x1D24D1D5CLL);
}

void sub_1D24D1DC4()
{
  int v0;

  LODWORD(STACK[0x658]) = v0;
  JUMPOUT(0x1D24D1D58);
}

uint64_t sub_1D24D1DF8()
{
  unint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;

  STACK[0x418] = v0;
  v4 = 570 * (LODWORD(STACK[0x454]) ^ 0x401);
  v5 = STACK[0x564];
  *(_DWORD *)(STACK[0x688] + ((v5 + v3) & 0xFFFFFFFC)) = v1;
  v6 = (v4 ^ 0x6AA) + v5;
  LODWORD(STACK[0x564]) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((114 * (((v4 + 98728713) & 0xFA1D7E4E ^ (v3 - 2)) + v6 < 0x40)) ^ v4))
                            - 8))();
}

uint64_t sub_1D24D354C@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unint64_t v14;

  v11 = v9 + v4;
  v12 = *(_DWORD *)(a2 + 4 * (v11 - 8)) ^ *(_DWORD *)(a2 + 4 * (v11 + ((v2 + v5) & v6) - 149));
  v13 = *(_DWORD *)(a2 + 4 * (v11 - 16)) ^ *(_DWORD *)(a2 + 4 * (v11 - 14)) ^ (v12 + v10 - (v7 & (2 * v12)));
  HIDWORD(v14) = v13 ^ v10;
  LODWORD(v14) = v13;
  *(_DWORD *)(a2 + 4 * (v3 + v9)) = (v14 >> 31) + v10 - (v7 & (2 * (v14 >> 31)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((((v3 + 1 + v9) > 0x4F) * a1) ^ v2)) - 8))();
}

uint64_t sub_1D24D35D8()
{
  unsigned int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * v0) - 8))();
}

void sub_1D24D36D0()
{
  JUMPOUT(0x1D24D35F4);
}

uint64_t sub_1D24D36E8(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(v3 + 8 * ((1710 * ((a2 + 1 + v4) > 0x27)) ^ v2)))();
}

uint64_t sub_1D24D37AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  int v6;

  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((91 * ((a3 + 1 + v6) > 0x3B)) ^ v4)))(a4);
}

uint64_t sub_1D24D387C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;

  return (*(uint64_t (**)(void))(v7 + 8 * ((464 * ((a6 + 1 + v8) > 0x4F)) ^ v6)))();
}

void sub_1D24D3934()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  unint64_t v9;
  int v10;

  LODWORD(STACK[0x5E4]) = v0;
  LODWORD(STACK[0x5C4]) = v3;
  LODWORD(STACK[0x634]) = v1;
  LODWORD(STACK[0x58C]) = v4;
  LODWORD(STACK[0x564]) = v6 + 80;
  v9 = STACK[0x678];
  v10 = *(_DWORD *)(STACK[0x678] - 0x5C256D3C5DC220D8);
  LODWORD(STACK[0x4F0]) = v2;
  *(_DWORD *)(v9 - 0x5C256D3C5DC220D8) = v7
                                         + v5
                                         + (v10 ^ v7)
                                         + (v2 ^ v7)
                                         - (v8 & (2 * ((v10 ^ v7) + (v2 ^ v7))))
                                         - 1158;
  JUMPOUT(0x1D24D39A0);
}

uint64_t sub_1D24D3A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,unsigned int a53,unsigned __int8 a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
  int v62;
  uint64_t v63;
  unint64_t v64;
  int v65;

  v64 = STACK[0x520];
  v65 = *(unsigned __int8 *)(STACK[0x520] - 0x5C256D3C5DC220D0) ^ 0xC7;
  if (v65 == 2)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v63 + 8 * ((1585 * (((*(_DWORD *)(v64 - 0x5C256D3C5DC220D4) == 108174678) ^ a54) & 1)) ^ (v62 - 194))) - 12))(3971668122, a2, a3, 19, 171, 195, a7, a53);
  if (v65 == 1)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 + 8 * (((*(_DWORD *)(v64 - 0x5C256D3C5DC220D4) == 108174678) * (((v62 - 474) | 0x101) - 780)) ^ (v62 + 616))) - 4))(a1, a2, a3, 19, 171, 4294967241, a7, 942588818);
  STACK[0x620] = 91;
  *(_BYTE *)(v64 - 0x5C256D3C5DC220D5) = (a62 ^ 0xBA) * (a62 + 17);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 + 8 * ((50 * (((19 * (v62 ^ 0x34) + 1) ^ (STACK[0x620] == 0)) & 1)) ^ v62 ^ 0x150)) - 4))(a1, a2, a3, 19, 171, 4294967241, a7, 2495972268);
}

void sub_1D24D43A4()
{
  JUMPOUT(0x1D24D4358);
}

uint64_t sub_1D24D43AC()
{
  return ((uint64_t (*)(void))STACK[0x4D0])();
}

uint64_t sub_1D24D43E0()
{
  int v0;
  uint64_t v1;
  unsigned int v2;
  int v3;
  int v4;

  v3 = LODWORD(STACK[0x454]) - 429;
  *(_DWORD *)(STACK[0x388] + 52) = 199 * (LODWORD(STACK[0x454]) ^ 0x401)
                                 + ((((LODWORD(STACK[0x65C]) ^ v2) + (v0 ^ v2)) % 0x2710) ^ 0x3F9FF7B9)
                                 + ((2 * (((LODWORD(STACK[0x65C]) ^ v2) + (v0 ^ v2)) % 0x2710)) & 0x6F72)
                                 - 68412293;
  v4 = STACK[0x664];
  LODWORD(STACK[0x528]) = STACK[0x664];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1648 * (v4 == v2)) ^ v3)) - 4))();
}

uint64_t sub_1D24D4480@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _DWORD *v2;

  *v2 = STACK[0x5C0];
  v2[85] = STACK[0x534];
  v2[86] = STACK[0x4A4];
  v2[87] = STACK[0x494];
  v2[88] = STACK[0x4F8];
  return (*(uint64_t (**)(void))(v1
                              + 8 * (((STACK[0x518] == 0) * ((a1 - 255) ^ 0x1B3 ^ ((a1 - 537) | 0xC0))) ^ (a1 - 368))))();
}

uint64_t sub_1D24D44EC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;

  v4 = STACK[0x454];
  STACK[0x5F0] -= 1616;
  LODWORD(STACK[0x528]) = a3 + 170;
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((STACK[0x518] == 0) * ((v4 - 684) ^ 0x1B3 ^ ((v4 - 966) | 0xC0))) ^ (v4 - 797))))();
}

uint64_t sub_1D24D4550()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8 * (((STACK[0x518] == 0) * ((v0 - 684) ^ 0x1B3 ^ ((v0 - 966) | 0xC0))) ^ (v0 - 797))))();
}

uint64_t sub_1D24D4590(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t v3;
  uint64_t v4;
  int v5;

  STACK[0x390] = v3;
  LODWORD(STACK[0x560]) = a3 - 14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8 * (int)(((STACK[0x390] == 0) * ((v5 ^ 0xFFFFF844) + v5 - 27)) ^ (v5 - 56)))
                            - 12))();
}

uint64_t sub_1D24D4714()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((92
                                          * (v0 - 1226222109 < ((77 * ((v2 + 90816973) & 0xFA963F1F ^ 0x400)) ^ 0x98))) ^ v2))
                            - 4))();
}

uint64_t sub_1D24D476C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  unint64_t v50;
  unsigned int v51;
  int v52;
  uint64_t v53;
  int v54;

  v50 = STACK[0x550];
  v51 = (LODWORD(STACK[0x4FC]) ^ 0x79FF5ACE) - 136708170 + ((2 * LODWORD(STACK[0x4FC])) & 0xF3FEB59C);
  v52 = 460628867 * ((((v49 - 192) | 0xD8825E3C) - (v49 - 192) + ((v49 - 192) & 0x277DA1C0)) ^ 0x9414DC41);
  *(_DWORD *)(v49 - 180) = v52 + v48 + 801;
  *(_QWORD *)(v49 - 176) = v46;
  *(_QWORD *)(v49 - 136) = a44;
  *(_BYTE *)(v49 - 144) = 43 - -125 * ((((v49 + 64) | 0x3C) - (v49 + 64) + ((v49 + 64) & 0xC0)) ^ 0x41);
  *(_DWORD *)(v49 - 168) = (v45 - 884659231) ^ v52;
  *(_DWORD *)(v49 - 164) = v51 ^ v52;
  *(_QWORD *)(v49 - 160) = v44;
  *(_QWORD *)(v49 - 152) = v50;
  *(_QWORD *)(v49 - 192) = a43;
  v53 = ((uint64_t (*)(uint64_t))((char *)*(&off_1E93A7480 + (v48 ^ 0xD2)) - 12))(v49 - 192);
  v54 = *(_DWORD *)(v49 - 184);
  LODWORD(STACK[0x560]) = v54;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v47
                                                      + 8
                                                      * (((((v48 - 121) ^ (v54 == 137543419)) & 1)
                                                        * ((v48 + 872) ^ 0x404)) ^ v48))
                                          - 12))(v53);
}

uint64_t sub_1D24D4888(uint64_t a1)
{
  uint64_t v1;
  int v2;
  unint64_t v3;
  _BOOL4 v4;

  v3 = STACK[0x550];
  v4 = LODWORD(STACK[0x4FC]) != 0;
  STACK[0x4E0] = LODWORD(STACK[0x4FC]);
  return ((uint64_t (*)(uint64_t, unint64_t))(*(_QWORD *)(v1
                                                                        + 8
                                                                        * ((v4 * (((v2 - 1041720592) & 0x3E17658D) - 325)) ^ (v2 - 576)))
                                                            - 8))(a1, v3);
}

uint64_t sub_1D24D490C@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v4 = ((unint64_t)&STACK[0x4E0] ^ 0xE5FDFD77E5C8B7DELL)
     + 0x5BFBB3CEBE77DF22
     + ((2 * (_QWORD)&STACK[0x4E0]) & 0xCBFBFAEFCB916FB0);
  v5 = v2 - 1;
  STACK[0x4E0] = v5;
  *(_BYTE *)(a1 + v5) = (v4 ^ 0xBA) * (v4 + 17);
  return (*(uint64_t (**)(void))(v3 + 8 * ((615 * (STACK[0x4E0] == (((a2 - 894) | 0xC0) ^ 0x1C2))) | a2)))();
}

void sub_1D24D499C()
{
  JUMPOUT(0x1D24D4968);
}

uint64_t sub_1D24D49A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  v6 = 3 * ((v3 + 31) ^ 0x577);
  ((void (*)(_QWORD, uint64_t, _QWORD))STACK[0x2F8])(*(unsigned int *)STACK[0x2F0], a2, 0);
  v7 = LODWORD(STACK[0x560]);
  v8 = 628203409 * (v4 ^ 0x3F5CAA1582880C33);
  *(_QWORD *)(v5 - 192) = v8 ^ 0xF7CDE521;
  v9 = v6 - 976199290 + v8;
  *(_DWORD *)(v5 - 172) = ((v6 - 976199290) ^ 0x73) + v8;
  *(_DWORD *)(v5 - 168) = v9;
  *(_DWORD *)(v5 - 164) = v8;
  *(_QWORD *)(v5 - 160) = v7 - v8;
  *(_DWORD *)(v5 - 184) = v6 - v8 + 2104631364;
  *(_DWORD *)(v5 - 180) = v9 + 106;
  v10 = ((uint64_t (*)(uint64_t))STACK[0x398])(v5 - 192);
  STACK[0x390] = 0;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v5 - 176)))(v10);
}

uint64_t sub_1D24D4A84()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;

  STACK[0x390] = 0;
  v2 = STACK[0x454];
  v3 = *(_DWORD *)(v1 + 56);
  *(_DWORD *)(v1 + 56) = v3 + 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8 * ((37 * (v3 - 490784804 + 6 * (v2 ^ 0x44Au) > 0xFFFFFFF9)) ^ (v2 - 621)))
                            - 8))();
}

void sub_1D24D4AE0()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 192) = 235795823
                        * ((((v1 - 192) | 0x8BE4F887) - (v1 - 192) + ((v1 - 192) & 0x741B0778)) ^ 0x1F49B1DE)
                        + 2138962328
                        + v0
                        + 600;
  sub_1D24DAA7C((_DWORD *)(v1 - 192));
  *(_BYTE *)(v1 - 160) = (111 * ((v1 + 64) ^ 0x59)) ^ 0x47;
  *(_QWORD *)(v1 - 184) = STACK[0x280];
  *(_DWORD *)(v1 - 176) = v0 - 235795823 * ((v1 - 192) ^ 0x94AD4959) + 1208;
  *(_QWORD *)(v1 - 168) = STACK[0x288];
  ((void (*)(uint64_t))STACK[0x278])(v1 - 192);
  STACK[0x390] = 0;
  JUMPOUT(0x1D24D4B8CLL);
}

void sub_1D24D4BCC(uint64_t a1@<X1>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;

  v4 = (a2 - 999) | 0x408;
  ((void (*)(_QWORD, uint64_t, _QWORD))STACK[0x2F8])(*(unsigned int *)STACK[0x2F0], a1, (v4 ^ 0xEF3E5588) + v2);
  *(_DWORD *)(v3 - 192) = 235795823
                        * ((((v3 - 192) | 0xA56AA89E) - (v3 - 192) + ((v3 - 192) & 0x5A955760)) ^ 0x31C7E1C7)
                        + 2138962328
                        + v4;
  sub_1D24DAA7C((_DWORD *)(v3 - 192));
  JUMPOUT(0x1D24D4C54);
}

uint64_t sub_1D24D4C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42)
{
  int v42;
  uint64_t v43;
  int v44;

  return ((uint64_t (*)(void))(*(_QWORD *)(v43
                                        + 8
                                        * ((656 * (((v42 + v44 - 31 - 1026) ^ LODWORD(STACK[0x52C])) != a42 - 1973213313)) | v44))
                            - ((v44 - 1951192131) & 0x744CD423 ^ 0x40ELL)))();
}

void sub_1D24D4CFC()
{
  int v0;

  LODWORD(STACK[0x560]) = v0 - 125;
  JUMPOUT(0x1D24D49E4);
}

void sub_1D24D4D10(uint64_t a1)
{
  int v1;

  v1 = 460628867 * ((~(_DWORD)a1 & 0x515CA2D5 | a1 & 0xAEA35D2A) ^ 0x1DCA20A8);
  __asm { BR              X11 }
}

uint64_t sub_1D24D4DD4@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((*v1 == ((a1 + 4) ^ 0x2EA)) * (a1 - 730)) ^ a1)))();
}

uint64_t sub_1D24D4E18@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((*v1 == ((a1 - 742) | 0x442) - 1090) * (a1 - 615)) ^ (a1 + 343)))
                            - 8))();
}

uint64_t sub_1D24D4E50()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  unsigned int *v4;
  int v5;
  uint64_t v6;

  v5 = v0 + 339;
  v6 = v3(*v4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * (((*v1 == ((v5 - 1085) | 0x442) - 1090) * (v5 - 958)) ^ v5))
                                          - 8))(v6);
}

uint64_t sub_1D24D4E90()
{
  uint64_t v0;
  _DWORD *v1;
  uint64_t (*v2)(_QWORD);
  unsigned int *v3;
  uint64_t result;

  result = v2(*v3);
  *v1 = 0;
  *(_DWORD *)v0 = 0;
  *(_QWORD *)(v0 + 344) = 0;
  *(_QWORD *)(v0 + 352) = 0;
  *(_DWORD *)(v0 + 360) = 1226222108;
  *(_DWORD *)(v0 + 56) = 490784367;
  return result;
}

void sub_1D24D4ED0(unint64_t a1)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  int v6;
  unsigned int v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  unint64_t v23;
  unsigned int v24;
  unint64_t v25;
  int32x4_t v26;
  int32x4_t v27;
  unint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int v33;
  char v34;
  char v35;
  char v36;
  char v37;
  int v38;
  _BYTE v39[4];
  unsigned int v40;
  unint64_t *v41;
  unsigned int v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v2 = 1178560073 * (((a1 | 0x5D6FE364) - (a1 | 0xA2901C9B) - 1567613797) ^ 0xF0F8DFC1);
  v3 = *(_DWORD *)a1 + v2;
  v4 = 628203409 * ((v39 + 69161288 - 2 * (v39 & 0x41F5148)) ^ 0x86975D7B);
  v5 = *(_DWORD *)(a1 + 36);
  v33 = *(_DWORD *)(a1 + 40) - v2;
  v23 = 1178560073
      * (((a1 | 0x291B24D45D6FE364) - (a1 | 0xD6E4DB2BA2901C9BLL) - 0x291B24D45D6FE365) ^ 0x8F1E909AF0F8DFC1);
  v6 = v5 ^ v2;
  v42 = v3 + v4 - 1882357543;
  v40 = 1023944139 - v4;
  v28 = &STACK[0x5C256D3C5DC221FC];
  v41 = &STACK[0x5C256D3C5DC221FC];
  sub_1D24A6CC8((uint64_t)v39);
  v7 = v33;
  v8 = a1;
  v9 = (char *)*(&off_1E93A7480 + (int)(v3 ^ 0x1C)) - 4;
  v29 = *(_QWORD *)&v9[8 * v3] - 12;
  v19 = v6 - 1251519168;
  v18 = (v3 + 740) ^ 0xDB191C21;
  v22 = v6 + 1515112127;
  v15 = v6 + 178817908;
  v14 = v6 + 121948069;
  v13 = (char *)&v13 - 967645852;
  v16 = v3 - 999479186;
  v17 = -619110638;
  v21 = v3 ^ 0x58;
  v24 = 69 * (v3 ^ 0x58);
  v20 = v24;
  v32 = v24;
  v25 = v8;
  v31 = v3;
  v26 = vdupq_n_s32(0x832BEFBu);
  v27 = vdupq_n_s32(0x10657DF6u);
  v10 = *(_QWORD *)(v8 + 8);
  v11 = v7 - 2 * ((v7 + 333555888) & 0x3E76A947 ^ v7 & 7) - 1839705616;
  v34 = ((((v3 + 32) & 0xF2) + 92) ^ HIBYTE(v11)) - ((2 * ((((v3 + 32) & 0xF2) + 92) ^ HIBYTE(v11))) & 0xCF) + 103;
  v35 = (BYTE2(v11) ^ 0x76) - ((2 * (BYTE2(v11) ^ 0x76)) & 0xCF) + 103;
  v36 = (BYTE1(v11) ^ 0xA9) - ((2 * (BYTE1(v11) ^ 0xA9)) & 0xCF) + 103;
  v37 = (v7 - 2 * ((v7 - 80) & 0x47 ^ v7 & 7) - 16) ^ 0x27;
  v12 = *(_QWORD *)&v9[8
                     * ((113 * (((2 * v38) & 0x3C ^ 8) + (v38 & 0x3F ^ 0xB766BEDA) + 1218003174 < 0xFFFFFFC0)) ^ (v3 + 740))]
      - 12;
  v30 = v10;
  __asm { BR              X14 }
}

uint64_t sub_1D24D52B4(int a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;

  v7 = v4 + (((v1 - 318) | 0x83) ^ (a1 + 1182));
  if (v7 <= 0x40)
    v7 = 64;
  return (*(uint64_t (**)(void))(v6 + 8 * ((196 * (v5 - v2 - v3 + v7 < 0xF)) ^ v1)))();
}

uint64_t sub_1D24D5320(int a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;

  v6 = (v1 - 833) | 4;
  v7 = a1 + v3 + v2;
  v8 = v7 + 61;
  if ((v7 + 61) <= 0x40)
    v8 = 64;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((370 * (v4 + v8 <= ((3 * (v6 ^ 0x3A8) - 1192) ^ (v7 + 60)))) ^ v6))
                            - 4))();
}

uint64_t sub_1D24D5384@<X0>(uint64_t a1@<X3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,arg26_1D24D5384 a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_OWORD *)(a1 + a2 + (v26 ^ 0xD9B96165)) = *(_OWORD *)&a26.arr[4];
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v28
                                                      + 8
                                                      * (int)((1486 * (((v27 + (v26 ^ 0x224)) & 0x1FFFFFFF0) == 16)) ^ v26 ^ 0x1C6))
                                          - 4))(529);
}

void sub_1D24D53F4()
{
  JUMPOUT(0x1D24D53B8);
}

uint64_t sub_1D24D5400@<X0>(int a1@<W0>, uint64_t a2@<X3>, uint64_t a3@<X5>, int a4@<W8>)
{
  char v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;

  v8 = (4 * (v6 - 455)) ^ 0x538;
  *(_BYTE *)(a2 + (v8 ^ (a1 + 196)) + v5) = v4;
  *(_BYTE *)(a2 + (a4 - 642161855)) = *(_BYTE *)(a3 + ((v8 + 1415928695) & 0xAB9AA44F) - 78);
  return (*(uint64_t (**)(void))(v7 + 8 * ((4 * (v6 - 455)) ^ 0x135)))();
}

uint64_t sub_1D24D65F0@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)(a1 + (v7 + a3 + 1)) = *(_BYTE *)(a2 + (v5 - 544568608));
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)((((v3 + 2092930887) & 0x8340687F ^ 0x1E) * ((v6 + v4 + 82) < 4)) ^ v3)))();
}

uint64_t sub_1D24D664C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t a19, uint64_t (*a20)(uint64_t))
{
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;

  *(_BYTE *)(a1 + (v20 ^ 0xC7 ^ (v22 - 53)) + a3) = *(_BYTE *)(a2 + (v21 - 544568607));
  v24 = 1224239923 * ((-1189047003 - ((v23 - 168) | 0xB9209525) + ((v23 - 168) | 0x46DF6ADA)) ^ 0xB46C970D);
  STACK[0x318] = a19;
  *(_DWORD *)(v23 - 160) = v24 + (v20 ^ 0xC7) + 324;
  *(_DWORD *)(v23 - 156) = v24 ^ 0x2CF6917B;
  v25 = sub_1D24C871C(v23 - 168);
  return a20(v25);
}

uint64_t sub_1D24D66F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11)
{
  int v11;
  int v12;
  uint64_t v13;
  _BOOL4 v14;

  v14 = a11 < 0x305A5546;
  if (v14 == (v11 - 592374191) < 0x305A5546)
    LOBYTE(v14) = v11 - 592374191 < a11;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13
                                                      + 8 * (v12 ^ (2 * ((v12 ^ 0x87 ^ v14) & 1))))
                                          - 12))(2335086804);
}

uint64_t sub_1D24D6774@<X0>(int a1@<W0>, unsigned int a2@<W1>, unsigned int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X7>, int a8@<W8>)
{
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  _BOOL4 v13;
  unsigned int v14;
  int v15;
  _BOOL4 v16;

  v13 = a3 < a2;
  *(_BYTE *)(a4 + (a8 + a1)) = *(_BYTE *)(a7 + (v8 + v11))
                                           - ((2 * *(_BYTE *)(a7 + (v8 + v11))) & 0xCF)
                                           + 103;
  v14 = ((v9 + a5) & a6) + v10 + v8;
  v15 = v13 ^ (v14 < a2);
  v16 = v14 < a3;
  if (!v15)
    v13 = v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (v9 ^ (2 * !v13))) - 12))();
}

uint64_t sub_1D24D67E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,unsigned int a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,unsigned int a45)
{
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;

  v48 = 1224239923 * ((((v47 - 168) | 0xB5513BC8) - ((v47 - 168) & 0xB5513BC8)) ^ 0x47E2C61F);
  STACK[0x318] = a24;
  *(_DWORD *)(v47 - 160) = v48 + v46 + 312;
  *(_DWORD *)(v47 - 156) = v48 ^ a10;
  v49 = sub_1D24C871C(v47 - 168);
  v50 = a45 & ((v46 + 494) ^ 0x276);
  *(&a36 + (v50 ^ 4)) = -25;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v45
                                                                       + 8
                                                                       * (int)((((v50 ^ 4) > 0x37)
                                                                              * ((v46 + 1499472116) & 0xA69FDEFF ^ 0x1CD)) ^ v46))
                                                           - 4))(v49, a29, 3750398607);
}

uint64_t sub_1D24D68FC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * ((43 * (a1 != v1 - 522)) ^ v1))
                                          - ((v1 - 1943995532) & 0x73DF07F6 ^ 0x5B0)))(95);
}

uint64_t sub_1D24D6964()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v0 ^ v1 ^ 0x58F) > 7) * (v1 ^ 0x5CF)) ^ v1)) - 4))();
}

uint64_t sub_1D24D69A0@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(a1 + v3 + ((a2 + 506) ^ 0xFFFFFFFFC652E6D1)) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((41 * ((v2 & 0x38) != 8)) ^ (a2 + 701))) - 4))();
}

void sub_1D24D69EC()
{
  JUMPOUT(0x1D24D69B8);
}

uint64_t sub_1D24D69F8()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((175 * ((v0 - 967646056) < 0x38)) ^ (v2 + 1301)))
                            - (((v2 + 189) | 0x232u) ^ 0x336)))();
}

uint64_t sub_1D24D6A48@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v4 = v1;
  v5 = v2 + v1 + ((a1 - 762) | 0x18Bu) - 462;
  if (v5 <= 0x38)
    v5 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((76 * (v5 - v4 + 967646056 < (unint64_t)(a1 ^ 0x371u) - 71)) ^ a1))
                            - 8))();
}

uint64_t sub_1D24D6AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(a9 + v11) = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8
                                        * (int)((((v10 & 0xFFFFFFFFFFFFFFF8) == 8)
                                               * (((v9 + 2016032172) & 0x87D5CBF6) + 1122)) ^ v9))
                            - 8))();
}

uint64_t sub_1D24D6B04()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *v1 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v3 == 0) * v2) ^ v0)) - 8))();
}

uint64_t sub_1D24D6B28()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v2 - 807) | 4) ^ 0x659) * (v0 == v1)) ^ v2))
                            - (v2 - 803)
                            + 71))();
}

uint64_t sub_1D24D6B6C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a1 + a2 + v3) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((unint64_t)(a2 + 1 + v3) < 0x38) * v5) ^ (v2 + 1301)))
                            - 8))();
}

void sub_1D24D6B9C()
{
  JUMPOUT(0x1D24D5828);
}

uint64_t sub_1D24D6DDC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (v2 ^ (2045 * (v1 != v0))))
                                          - (v2 - 494)
                                          - ((v2 - 506) ^ 0xFFFFFFFFFFFFFFE6)))(95);
}

uint64_t sub_1D24D6E3C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  char v8;
  uint64_t v9;

  *(_BYTE *)(a2 + v3 + v5) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((((unint64_t)(v3 + 1 + v5) < 0x40) * v4) ^ (a3 + 506)))
                            - ((a3 + v6) & v7 ^ a1)))();
}

void sub_1D24D6E78()
{
  JUMPOUT(0x1D24D5828);
}

void sub_1D24D74D4(uint64_t a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v1 = 628203409 * (((a1 | 0x89B748DF) - a1 + (a1 & 0x7648B720)) ^ 0xB3F44EC);
  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 24) - 0x5B5679071D0B1248) + 1187900955;
  v3 = *(_DWORD *)(a1 + 20) + v1 + 1139342068;
  v4 = v2 < 0xA7E510EC;
  v5 = v2 > v3;
  if (v3 < 0xA7E510EC != v4)
    v5 = v4;
  __asm { BR              X10 }
}

uint64_t sub_1D24D75D0(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v1
                                                               + 8
                                                               * (((((*(unsigned __int8 *)(*(_QWORD *)(a1 + 40)
                                                                                         + (v2 - 1628906194))
                                                                    - (((v3 - 655) ^ 0x169) & (2
                                                                                             * *(unsigned __int8 *)(*(_QWORD *)(a1 + 40) + (v2 - 1628906194))))
                                                                    - 866857754) & 0x1F) != 25)
                                                                 * ((v3 - 655) ^ 0xE0)) ^ v3))
                                                   - 8))(a1, 4157465893);
}

uint64_t sub_1D24D7630(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  _BOOL4 v5;

  v5 = v3 + 346999653 > (v1 + 298440765);
  if ((v1 + 298440765) < 0x75C5EE35 != (v3 + 346999653) < 0x75C5EE35)
    v5 = (v3 + 346999653) < 0x75C5EE35;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * (((((v4 + 157) | 0xA1) ^ 0xD4) * !v5) ^ v4))
                                                   - 12))(a1, 4157465893);
}

uint64_t sub_1D24D76A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * ((((*(unsigned __int8 *)(v1 + (v4 + 1)) >> 7) ^ 1)
                                                        * ((v3 - 318) ^ 0xB2)) ^ v3))
                                          - 8))(a1);
}

uint64_t sub_1D24D7724(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  _BOOL4 v9;

  v6 = v5 + a3 + 1930483689;
  v7 = v3 - 439056276;
  v8 = (v7 < 0x49D09E64) ^ (v6 < 0x49D09E64);
  v9 = v6 > v7;
  if (v8)
    v9 = v6 < 0x49D09E64;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * (((2 * !v9) | (8 * !v9)) ^ (a2 + 319))) - 4))(a1, 4157465893);
}

uint64_t *sub_1D24D7794@<X0>(uint64_t *result@<X0>, int a2@<W2>, _DWORD *a3@<X8>)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = result[6];
  v9 = *result;
  v8 = result[1];
  *a3 = v5 - 1973986217;
  *(_DWORD *)(v9 - 0x3DD4ED798559EACCLL) = v4;
  *(_DWORD *)(v7 - 0x1DC7FF2F8115AFC3) = v6;
  *(_QWORD *)(v8 - 0x88E58A0589091FCLL) = v3 + (a2 - 1903769751);
  *((_DWORD *)result + 8) = 137543419;
  return result;
}

uint64_t sub_1D24D79E4(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;

  return sub_1D24D7724(a1, a2, v2 + v3 + v4 - 1541777843);
}

void sub_1D24D79FC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 24) + 1225351577 * (((a1 | 0xD93F93E1) - a1 + (a1 & 0x26C06C1E)) ^ 0xFAA54BF7);
  __asm { BR              X15 }
}

uint64_t sub_1D24D7B28@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  _BOOL4 v18;

  v15 = v13 - 988785567;
  v16 = v11 - 9;
  *(_DWORD *)(a9 + 4 * (v9 + a1)) = *(_DWORD *)(*(_QWORD *)(v12 - 0x454517534C5DD3DDLL) + 4 * (v9 + a1));
  v18 = v9 + 1927289148 < 1158698081 && v9 + 1927289148 >= v15;
  return (*(uint64_t (**)(void))(v14 + 8 * ((v18 * (v10 ^ 0x3BC)) ^ v16)))();
}

uint64_t sub_1D24D7BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  _BOOL4 v9;

  if (a6 > 0xBF4142D != v6 + 568045740 < -200545326)
    v9 = a6 > 0xBF4142D;
  else
    v9 = v6 + 568045740 < (int)(((27 * (v7 ^ 0x3B1)) ^ 0x740BEBBE) + a6);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((113 * v9) ^ v7)) - 8))();
}

uint64_t sub_1D24D7C38@<X0>(int a1@<W0>, int a2@<W4>, unsigned int a3@<W5>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  uint64_t v18;
  _BOOL4 v19;
  int v20;
  int v21;
  _BOOL4 v22;

  v19 = a3 > v17;
  *(_DWORD *)(a12 + 4 * (v12 + a4)) = a2;
  v20 = v12 + 1 + v15;
  v21 = v19 ^ (v20 < v14);
  v22 = v20 < v16;
  if (!v21)
    v19 = v22;
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * ((v19 * a1) ^ v13)) - ((v13 - 917) | 0x4Cu) + 100))();
}

uint64_t sub_1D24D7C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                          + 8
                                                                                          * (v6 ^ (166 * (v5 == 0))))
                                                                              - 8))(a1, a2, a3, a4, a5);
}

uint64_t sub_1D24D7CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;

  v16 = 3804331 * ((((2 * (v15 - 128)) | 0xAFC6C6EE) - (v15 - 128) + 672963721) ^ 0xF9A2E0BB);
  *(_QWORD *)(v15 - 128) = a13;
  *(_DWORD *)(v15 - 120) = ((a6 << 6) & 0xFF7E5A80) - v16 + ((32 * a6) ^ 0x7FBF2D5F) - 36703237;
  *(_DWORD *)(v15 - 116) = v14 - v16 - 494;
  sub_1D24B5788(v15 - 128);
  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8
                                        * ((((*a10 - 1574925170) < 0x7FFFFFFF)
                                          * (((2 * v14) ^ 0xA9A) - 948)) ^ v14))
                            - 4))();
}

uint64_t sub_1D24D7D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_DWORD *)(v17 - 120) = v15
                         + 1178560073 * ((2 * ((v17 - 128) & 0x78B54030) - (v17 - 128) - 2025144375) ^ 0x2ADD836C)
                         - 521;
  *(_QWORD *)(v17 - 128) = a14;
  *(_QWORD *)(v17 - 112) = &STACK[0x454517534C5DD425];
  sub_1D24C193C(v17 - 128);
  *(_DWORD *)(v17 - 108) = v15
                         + 1374699841 * ((2 * ((v17 - 128) & 0x3EE63A40) - (v17 - 128) + 1092208056) ^ 0x2CEDDDB1)
                         + 190;
  *(_QWORD *)(v17 - 128) = a14;
  *(_QWORD *)(v17 - 120) = v16;
  v18 = ((uint64_t (*)(uint64_t))*(&off_1E93A7480 + (v15 ^ 0x41C)))(v17 - 128);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14
                                                      + 8 * ((499 * (*(_DWORD *)(v17 - 112) > 0x4177D94Bu)) ^ v15))
                                          - ((v15 - 220) ^ (109 * (v15 ^ 0x4A7u)) ^ 0x643)))(v18);
}

uint64_t sub_1D24D7EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  uint64_t v16;
  int v17;
  int v18;

  if (a16 - 1574925169 >= 0)
    v18 = a16 - 1574925169;
  else
    v18 = ~(a16 - 1574925170);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16
                                                      + 8
                                                      * ((229
                                                        * (((((v17 + 114) | 7) + 104) ^ ((int)((v18 ^ (((v17 - 654) | 7) - 539004360)) + ((2 * v18) & 0xBFBEE6FE) + 539004032) > ((((v17 - 654) | 7) + 59) | 0x20) - 419)) & 1)) ^ ((v17 - 654) | 7)))
                                          - 12))(2671460169);
}

uint64_t sub_1D24D7F48(int a1)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((620 * (*(_DWORD *)(v1 + 4 * v3) == a1)) ^ v2)) - 12))();
}

uint64_t sub_1D24D7F7C(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((229
                                          * ((((v4 ^ v5) + 104) ^ (v2 + v3 - 1200 + a2 > (((v4 ^ v5) + 59) | 0x20) - 419)) & 1)) ^ v4 ^ v5))
                            - 12))();
}

uint64_t sub_1D24D7FC4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v3 = *(_QWORD *)(v5 + 32);
  *(_DWORD *)(v2 - 120) = v0
                        + 1178560073 * (((~(v2 - 128) & 0x1CB9E6A6) - (~(v2 - 128) | 0x1CB9E6A7)) ^ 0xB12EDA02)
                        - 526;
  *(_QWORD *)(v2 - 112) = v3;
  *(_QWORD *)(v2 - 128) = v1;
  return sub_1D24C193C(v2 - 128);
}

void sub_1D24D84D4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16)
     - 1178560073 * (((a1 ^ 0x8E5DD809) & 0x35218925 | ~(a1 ^ 0x8E5DD809 | 0x35218925)) ^ 0xE9149276);
  __asm { BR              X10 }
}

uint64_t sub_1D24D8594(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8
                                             * (((*(_DWORD *)(*(_QWORD *)(a1 + 8) + v4) == v2) * (v3 - 1169)) | v3))
                            - (v3 + 523)
                            + 1695))();
}

uint64_t sub_1D24D85C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  _DWORD *v4;
  uint64_t result;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;

  v6 = a1;
  v7 = v3
     - 498
     + ((1960339960 - (&v6 | 0x74D869F8) + (&v6 | 0x8B279607)) ^ 0x26B0AAA2) * v2
     - 5;
  v8 = v1;
  result = sub_1D24C193C((uint64_t)&v6);
  *v4 = -1145116958 - *v4;
  return result;
}

uint64_t sub_1D24D876C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * ((a1 - 2 * (a1 & 0x7A08EF3) + 127962867) ^ 0xD9663328));
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_1E93A7480 + v1 - 130)
                                        + 8 * ((1630 * (*(_QWORD *)(a1 + 8) != 0x1DC828355A88D5A7)) ^ v1)
                                        - 4)
                            - 8))();
}

uint64_t sub_1D24D87F8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((863 * (*(_DWORD *)(v2 - 0x1DC828355A88D58FLL) == v1 + 137543206)) ^ v1))
                            - 8))();
}

uint64_t sub_1D24D8844@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = *(_DWORD *)(v1 - 0x1DC828355A88D597) - 79473960;
  v4 = *(_DWORD *)(v1 - 0x1DC828355A88D59BLL) + (v2 ^ 0xD8A0536);
  v5 = v3 < 0x5710A2B3;
  v6 = v3 > v4;
  if (v5 != v4 < ((v2 - 585) ^ 0x5710A0A4u))
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((26 * v6) | v2)) - 8))();
}

uint64_t sub_1D24D88DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;

  v7 = *(_QWORD *)(v4 - 0x1DC828355A88D5A7);
  v8 = ((*(unsigned __int8 *)(v7 + (v3 - 1540181987)) ^ 0x67) << (((v6 + 100) & 0xCD) - 49)) | ((*(unsigned __int8 *)(v7 + (v3 - 1540181986)) ^ 0x67) << 16) | ((*(unsigned __int8 *)(v7 + (v3 - 1540181985)) ^ 0x67) << 8) | *(unsigned __int8 *)(v7 + (v3 - 1540181984)) ^ 0x67;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((60
                                          * (((v8 + v2 - ((2 * v8) & 0x10657DF6)) & 0xFFFFFF ^ 0x32BEFB)
                                           - (*(_DWORD *)(a1 + 32) ^ v5) != -1261507126)) ^ v6))
                            - 4))();
}

void sub_1D24D89B0()
{
  _DWORD *v0;

  *v0 = -137501234;
}

uint64_t sub_1D24D8C3C(_DWORD *a1, uint64_t a2)
{
  return ((uint64_t (*)(void))(*((_QWORD *)&unk_1E93A39F0
                              + ((93 * ((*a1 + *(_DWORD *)(a2 + 4) + 644444960) < 0xC9)) ^ 0x51Cu))
                            - 4))();
}

uint64_t sub_1D24D8C88@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return (*(uint64_t (**)(void))(a1 + 8 * ((90 * (v1 == 1699122660)) ^ 0x13Bu)))();
}

uint64_t sub_1D24D8CC4(_DWORD *a1)
{
  int v1;
  int v2;
  int v3;

  *((_BYTE *)a1 + ((v3 + v2) ^ 0x844E1EC1) + v1 + 4) = 54;
  *a1 = v1;
  return 0;
}

uint64_t sub_1D24D8CF0()
{
  return 4294925278;
}

uint64_t sub_1D24D8CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v6;

  *(_BYTE *)(a1 + (v3 - 1951399677) + 4) = (**(_BYTE **)(a2 + 8) ^ 0x7F) + 2 * **(_BYTE **)(a2 + 8) - 73;
  v5 = *(_DWORD *)(a2 + 4) - 536938800;
  v6 = 109 * (v4 ^ 0x137u) + 1162182553 < v5;
  if (v5 < 0x454584B4)
    v6 = 1;
  return (*(uint64_t (**)(void))(a3 + 8 * ((73 * !v6) ^ v4 ^ 0x13u)))();
}

void sub_1D24D8DAC()
{
  JUMPOUT(0x1D24D8D38);
}

void sub_1D24D8DB4(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 ^ (1374699841 * ((((2 * (_DWORD)a1) | 0x97E9331C) - (_DWORD)a1 + 873162354) ^ 0xA6008187));
  __asm { BR              X10 }
}

uint64_t sub_1D24D8E88@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 1755732067 * (((&a4 | 0x9A98CFED) - (&a4 & 0x9A98CFED)) ^ 0x445E7236);
  a6 = (v10 - 696) ^ v12;
  a7 = &STACK[0x7FBF06AA705C9927];
  a4 = &STACK[0x7897A35BDEA4E5E4];
  a5 = v11;
  a8 = v12 ^ 0x4C2C2B8E;
  v13 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(a1 + 8 * (v10 - 868)) - 4))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * ((((v10 ^ (*(_DWORD *)(v11 - 0x1DC828355A88D58FLL) == v8)) & 1)
                                              * ((v10 + 532) ^ 0x585)) ^ v10)))(v13);
}

uint64_t sub_1D24D8F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  int v11;
  uint64_t v12;
  int v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8
                                              * (((a11 != v11 + 4) * (((v13 - 64564728) & 0x3D92BFF) - 869)) ^ v13))
                            - (v13 - 504)
                            + 925))();
}

void sub_1D24D8FB4(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;

  *a1 = v2;
  *(_DWORD *)(v1 + 4) = -137501234;
}

uint64_t sub_1D24D9068(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;
  int v5;

  v1 = *(_DWORD *)(*(_QWORD *)a1 - 0x454517534C5DD3E1);
  v4 = v1 - 1574925169;
  v3 = v1 - 1574925169 < 0;
  v5 = 1574925169 - v1;
  if (!v3)
    v5 = v4;
  v2 = (*(_DWORD *)(a1 + 12) - 460628867 * ((a1 - 865980286 - 2 * (a1 & 0xCC623082)) ^ 0x80F4B2FF)) ^ 0x2C8;
  return (*(uint64_t (**)(void))((char *)*(&off_1E93A7480 + (v2 ^ 0x25C))
                              + 8
                              * ((58
                                * ((v5 ^ (v2 + 2082340207)) - 68158016 + ((2 * v5) & 0xF83BFEFC) + (v2 ^ 0x87F200CE) < (v2 ^ 0x7FFFFDF0u))) ^ v2)
                              - 4))();
}

uint64_t sub_1D24D9184(uint64_t a1, int a2, int a3, unsigned int a4, uint64_t a5)
{
  int v5;
  int v6;
  _QWORD *v7;

  return (*(uint64_t (**)(void))(a5 + 8 * (((*(_DWORD *)(*v7 + 4 * a4) != a2) * (((v6 ^ v5) + 328) ^ a3)) ^ v6 ^ v5)))();
}

void sub_1D24D91B8()
{
  JUMPOUT(0x1D24D9150);
}

uint64_t sub_1D24D91C0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(_DWORD *)(result + 8) = a6;
  return result;
}

void sub_1D24D91C8(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v5;

  v1 = 1374699841 * ((-2 - ((a1 | 0x32995F76) + (~(_DWORD)a1 | 0xCD66A089))) ^ 0xA092B880);
  v2 = a1[1] + v1;
  v3 = *a1 + v1;
  v5 = (v3 & 0x30000000) == 0x10000000 || (v3 & 0x3F000000) == 1056964608;
  __asm { BR              X11 }
}

uint64_t sub_1D24D92A0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, unint64_t *a5, int a6, unint64_t *a7, int a8, uint64_t a9, int a10, char a11)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;

  v15 = *(_QWORD *)(v12 + 24);
  v16 = 1225351577 * ((((2 * &a4) | 0x96C5D156) - &a4 - 1264773291) ^ 0x68F830BD);
  a10 = ((2 * v11) & 0x7FBD7EE0 ^ 0x7DAC4880) - v16 + (v11 ^ 0x4129DBC4 ^ (v14 + 5)) - 151028240;
  a8 = v16 + v14 + 1172345189;
  a7 = &STACK[0x24BE3CE75D4801EC];
  a11 = 43 - -103 * ((((2 * &a4) | 0x56) - &a4 + 85) ^ 0xBD);
  a9 = v15;
  a4 = &STACK[0x32EA55C0FCEA2C8A];
  a5 = &STACK[0x1F0FEF8EC8A3A0C8];
  v17 = (*(uint64_t (**)(unint64_t **))(a1 + 8 * (v14 - 194)))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13 + 8 * ((1759 * (a6 == 137543419)) ^ v14)) - 4))(v17);
}

uint64_t sub_1D24D93D0()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v2 ^ (918 * (v1 == 1056964608))))
                            - ((30 * (v2 ^ 0xE7u) + 779) ^ (v2 + 1980284260) & 0x89F747F7)))();
}

uint64_t sub_1D24D9424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  int v10;
  uint64_t v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((209 * (a10 + 4 >= a10)) ^ v10)) - 8))();
}

uint64_t sub_1D24D9498()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * (((((v1 ^ 0x3B3 ^ (v0 == 0xA69EB0D2)) & 1) == 0) * (v1 ^ 0x122)) ^ v1))
                            - 4))();
}

uint64_t sub_1D24D94F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unsigned int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  _BOOL4 v8;
  unsigned int v9;
  int v10;
  _BOOL4 v11;

  v8 = v4 > 0x7E7F0D5E;
  *(_BYTE *)(a1 + (v6 - 1295489515)) = *(_BYTE *)(v1 + (v6 - 1295489515));
  v9 = ((30 * (v3 ^ 0x181)) ^ 0x34495BFF) + v6;
  v10 = v8 ^ (v9 < v2);
  v11 = v9 < v5;
  if (!v10)
    v8 = v11;
  return (*(uint64_t (**)(void))(v7 + 8 * ((1470 * v8) ^ v3)))();
}

uint64_t sub_1D24D9570()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((44
                                * (((2 * v1) & 0xCC9BDFD6 ^ 0x4C194184)
                                 + (v1 ^ 0x40D35F39)
                                 + ((v0 - 1683290561) & 0x6454FB6B ^ 0x5DFBF4F6) != 1145694121)) ^ v0)))();
}

uint64_t sub_1D24D95E4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = v2 + v1 + (((v0 + 615) | 0x178) ^ 0x19B21569u) >= (((v0 - 365) | 0xC6) ^ 0xFAu);
  return (*(uint64_t (**)(void))(v3 + 8 * (((2 * v4) | (16 * v4)) ^ (v0 + 712))))();
}

uint64_t sub_1D24D9648(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((169
                                          * (((a2 + ((v3 - 36) ^ (v4 + 1333)) - ((v3 - 1401) & v2)) & 0xFFFFFFFC) <= a2 + v4)) ^ v3))
                            - 12))();
}

uint64_t sub_1D24D9694@<X0>(int a1@<W0>, unsigned int a2@<W2>, uint64_t a3@<X8>, uint8x8_t a4@<D0>)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (a1 - 806);
  a4.i32[0] = *(_DWORD *)(v8 + a2 + a3 - 561);
  *(_DWORD *)(a3 - 3 + (v6 + v4)) = vmovn_s16((int16x8_t)vmovl_u8(a4)).u32[0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (int)((1898 * (v5 != 4)) ^ v8))
                            - ((v8 - 149) ^ 0x191)))();
}

uint64_t sub_1D24D96F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_DWORD *)(a1 - 3 + (v5 + v2)) = *(_DWORD *)(v1 - 3 + (v5 + v2));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v4 == 4) * (v3 - 440)) ^ (v3 - 902))) - 12))();
}

uint64_t sub_1D24D9744(uint64_t a1, int a2, int a3, int a4)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  *(_DWORD *)(a1 + (v6 - a3)) = *(_DWORD *)(v4 + (v6 - a3));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((a3 + 4 == v5) * a4) ^ a2)) - 12))();
}

uint64_t sub_1D24D9770()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((v2 + 427) ^ (v0 == v1)) & 1) == 0) * ((v2 - 1070910366) & 0x3FD4CAF6 ^ 0x50E)) ^ v2)))();
}

uint64_t sub_1D24D97B8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a2 + (v5 + v4)) = *(_BYTE *)(v2 + (v5 + v4));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((430 * (v5 - 1 != v3)) ^ (a1 + 5)))
                            - ((a1 + 594) ^ 0x34CLL)))();
}

uint64_t sub_1D24D97F8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1433
                                          * (((*(_QWORD *)(v1 + 32) == 0x6E28D77B6004A3B1) ^ (v0 - 1)) & 1)) ^ v0))
                            - 12))();
}

uint64_t sub_1D24D983C@<X0>(int a1@<W8>, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(v2 - 0x6E28D77B6004A3B1) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((*(_QWORD *)(v3 + 8) == 0x1D4346AF7299FD1BLL) * (a1 + 41 * (a1 ^ 0xDC) - 420)) ^ a1))
                            - 4))();
}

void sub_1D24D98A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 - 0x1D4346AF7299FD1BLL) = v2;
  *(_DWORD *)(v1 + 16) = 137543419;
}

void sub_1D24D9944(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1759421093 * ((a1 + 1535483482 - 2 * (a1 & 0x5B859E5A)) ^ 0xE8F82E0E));
  __asm { BR              X15 }
}

uint64_t sub_1D24D99F4(_QWORD *a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((v1 + 1771289963) & 0x966C42F8)
                                    + 4
                                    * (*(_DWORD *)(*a1 + v4) == ((((v1 + 1771289963) & 0x966C42F8) - 100) ^ 0x4A6) + v2))))();
}

uint64_t sub_1D24D9A38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;

  v5 = v2 + 1178560073 * (((~&v4 & 0x3FC20E62) - (~&v4 | 0x3FC20E63)) ^ 0x925532C6) + 37;
  v6 = v1;
  v4 = a1;
  return sub_1D24C193C((uint64_t)&v4);
}

uint64_t sub_1D24D9B9C(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  _BOOL4 v5;
  int v6;
  _DWORD *v7;

  v1 = 1224239923
     * ((2 * ((result ^ 0x63D94C3FED8F81CCLL) & 0x7D26FA604C1E86EELL)
       - (result ^ 0x63D94C3FED8F81CCLL)
       - 0x7D26FA604C1E86EFLL) ^ 0xC95AFCC9ACDD050ALL);
  v2 = *(_QWORD *)(result + 24) ^ v1;
  v3 = *(_QWORD *)(result + 32) - v1;
  v4 = v2 >= v3;
  v5 = (uint64_t)v2 < (uint64_t)v3;
  v6 = !v4;
  if (((*(_DWORD *)(result + 40) ^ v1) & 1) == 0)
    v5 = v6;
  if (v5)
    v7 = (_DWORD *)result;
  else
    v7 = (_DWORD *)(result + 4);
  *(_DWORD *)(result + 16) = *v7 ^ v1 ^ (*(_DWORD *)(result + 8) + v1);
  return result;
}

uint64_t sub_1D24D9C50(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;
  BOOL v8;
  _BOOL4 v9;
  int v10;
  int v11;
  int v12;

  v1 = 460628867 * ((2 * (result & 0x7A45FB8C54F2057FLL) - result - 0x7A45FB8C54F20580) ^ 0xC725491DE79B78FDLL);
  v2 = *(_QWORD *)result ^ v1;
  v3 = *(_DWORD *)(result + 16) ^ v1;
  v4 = *(_DWORD *)(result + 12) - v1;
  v5 = *(_DWORD *)(result + 20) - v1;
  v6 = *(_QWORD *)(result + 32) + v1;
  v7 = *(_DWORD *)(result + 8) ^ v1;
  v8 = v6 == v2;
  v9 = v6 > v2;
  v10 = v8;
  if ((v7 & 1) != 0)
    v11 = v9;
  else
    v11 = v10;
  if (v11)
    v12 = v5;
  else
    v12 = v3;
  *(_DWORD *)(result + 28) = v12 ^ v4;
  return result;
}

uint64_t sub_1D24D9CF0(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v1 = *(_QWORD *)a1;
  v2 = (*(_DWORD *)(a1 + 16) ^ (235795823 * ((348304330 - (a1 | 0x14C2B3CA) + (a1 | 0xEB3D4C35)) ^ 0x7F90056C)))
     - 426522946;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = v2
     + 1374699841
     * (((&v4 ^ 0xFFEF5A43) & 0x762C0D61 | ~(&v4 ^ 0xFFEF5A43 | 0x762C0D61)) ^ 0x1BC8B0D4)
     + 1208;
  v6 = v1;
  return ((uint64_t (*)(uint64_t *))((char *)*(&off_1E93A7480 + v2) - 8))(&v4);
}

uint64_t sub_1D24D9DF8(uint64_t a1)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t result;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v2 = 3804331 * (a1 ^ 0x2E4183CC);
  v3 = *(_DWORD *)a1 - v2;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = -1013316525 * (*(_DWORD *)(a1 + 40) ^ v2) - 173028774;
  v8 = 1224239923 * ((1202267949 - (&v10 | 0x47A9272D) + (&v10 | 0xB856D8D2)) ^ 0x4AE52505);
  v3 -= 1695027255;
  v12 = *(_QWORD *)(a1 + 48);
  v13 = v4;
  v11 = (v7 ^ 0x166DD7F9) - v8 + ((2 * v7) & 0x2CDBAFF2) - 67469696;
  v16 = v3 + v8 + 819;
  v14 = v5;
  v10 = v6;
  result = ((uint64_t (*)(uint64_t *))((char *)*(&off_1E93A7480 + v3) - 4))(&v10);
  *(_DWORD *)(a1 + 16) = v15;
  return result;
}

uint64_t sub_1D24D9F48(uint64_t a1)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t result;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v2 = 1224239923 * (((a1 | 0x53DFEB40) - (a1 & 0x53DFEB40)) ^ 0xA16C1697);
  v3 = *(_DWORD *)(a1 + 48) - v2;
  v5 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_DWORD *)a1 ^ v2;
  v8 = 235795823
     * (((&v10 | 0xE8ABEFB3) - &v10 + (&v10 & 0x17541048)) ^ 0x7C06A6EA);
  v10 = *(_QWORD *)(a1 + 24);
  v15 = v8 ^ (v3 - 368398384);
  v16 = v6;
  v11 = v8 + (v7 ^ 0x97AE29A8) + 1744813952 + ((2 * v7) & 0x77EBDF98 ^ 0x50A38C88);
  v12 = v5;
  v13 = v4;
  result = ((uint64_t (*)(uint64_t *))*(&off_1E93A7480 + (v3 ^ 0x15F5576E)))(&v10);
  *(_DWORD *)(a1 + 4) = v14;
  return result;
}

uint64_t sub_1D24DA0A4(char a1, unsigned int a2)
{
  return byte_1D24F29F0[(byte_1D24EE1B0[a2] ^ a1)] ^ a2;
}

uint64_t sub_1D24DA0D0(unsigned int a1)
{
  return byte_1D24F29F0[byte_1D24EE1B0[a1] ^ 0x85] ^ a1;
}

uint64_t sub_1D24DA0FC(char a1, unsigned int a2)
{
  return byte_1D24F2AF0[(byte_1D24EE2B0[a2] ^ a1)] ^ a2;
}

uint64_t sub_1D24DA128(char a1, unsigned int a2)
{
  return byte_1D24EE3B0[(byte_1D24F92A0[a2] ^ a1)] ^ a2;
}

uint64_t sub_1D24DA154(char a1, unsigned int a2)
{
  return byte_1D24F93A0[(byte_1D24F6670[a2] ^ a1)] ^ a2;
}

uint64_t sub_1D24DA180(char a1, unsigned int a2)
{
  return byte_1D24F6770[(byte_1D24F2BF0[a2] ^ a1)] ^ a2;
}

uint64_t sub_1D24DA1AC(char a1, unsigned int a2)
{
  return byte_1D24EE4B0[(byte_1D24F94A0[a2] ^ a1)] ^ a2;
}

uint64_t sub_1D24DA1D8(unsigned int a1)
{
  return byte_1D24F6770[byte_1D24F2BF0[a1] ^ 0xC9] ^ a1;
}

uint64_t sub_1D24DA204(unsigned int a1)
{
  return byte_1D24EE3B0[byte_1D24F92A0[a1] ^ 0x2A] ^ a1;
}

uint64_t sub_1D24DA230(unsigned int a1)
{
  return byte_1D24F6770[byte_1D24F2BF0[a1] ^ 0xC4] ^ a1;
}

uint64_t sub_1D24DA25C(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _BOOL4 v5;
  _BOOL4 v6;
  _BOOL4 v7;
  _DWORD *v8;

  v1 = 235795823 * (((result | 0x496F45A7F70D82F4) - result + (result & 0xB690BA5808F27D0BLL)) ^ 0x41DFFF5963A0CBADLL);
  v2 = *(_QWORD *)(result + 16);
  v3 = v2 + v1;
  v4 = *(_QWORD *)(result + 32);
  v5 = v4 != v2;
  v6 = v4 + v1 >= v3;
  if (((*(_DWORD *)(result + 40) + (_DWORD)v1) & 1) != 0)
    v7 = v6;
  else
    v7 = v5;
  if (v7)
    v8 = (_DWORD *)result;
  else
    v8 = (_DWORD *)(result + 4);
  *(_DWORD *)(result + 12) = *v8 ^ v1 ^ (*(_DWORD *)(result + 24) + v1);
  return result;
}

void sub_1D24DA304()
{
  uint64_t v0;
  char v1;
  unsigned int v2;
  char v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v0 = qword_1EFC7F970 - qword_1EFC7EF58 - (_QWORD)&v1;
  qword_1EFC7EF58 = (536075833 * v0) ^ 0x86C548EE6B3237FCLL;
  qword_1EFC7F970 = 536075833 * (v0 ^ 0x86C548EE6B3237FCLL);
  v4 = (uint64_t)*(&off_1E93A7480
                + ((57 * ((57 * v0) ^ qword_1EFC7F970)) ^ byte_1D24EE3B0[byte_1D24F92A0[(57 * ((57 * v0) ^ qword_1EFC7F970))] ^ 2])
                + 208);
  v5 = 1374699841 * ((&v2 & 0xF6A24752 | ~(&v2 | 0xF6A24752)) ^ 0x64A9A0A4) + 658;
  sub_1D24A06F8((uint64_t)&v2);
  v5 = 1374699841 * (((&v2 | 0x6755CF04) - (&v2 & 0x6755CF04)) ^ 0xAA1D70D) + 658;
  v4 = (uint64_t)*(&off_1E93A7480
                + ((57 * ((qword_1EFC7F970 - qword_1EFC7EF58) ^ 0xFC)) ^ byte_1D24F93A0[byte_1D24F6670[(57 * ((qword_1EFC7F970 - qword_1EFC7EF58) ^ 0xFC))] ^ 0xEA])
                + 64);
  sub_1D24A06F8((uint64_t)&v2);
  v3 = (-125 * (((&v2 ^ 0xAB | 8) - (&v2 ^ 0xAB | 0xF7) - 9) ^ 0xDE)) ^ 0x15;
  v2 = (460628867
      * (((&v2 ^ 0xB2203FAB | 0xA2B48608) - (&v2 ^ 0xB2203FAB | 0x5D4B79F7) + 1565227511) ^ 0x5C023BDE)) ^ 0x442;
  sub_1D24D4D10((uint64_t)&v2);
}

void sub_1D24DA534()
{
  _BYTE v0[8];
  _BYTE v1[8];
  char *v2;
  unsigned int v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  qword_1EFC7EF80 = 536075833 * ((unint64_t)&v0[qword_1EFC7EF80 + qword_1EFC7F970] ^ 0x86C548EE6B3237FCLL);
  qword_1EFC7F970 = qword_1EFC7EF80;
  v2 = (char *)*(&off_1E93A7480
               + ((57 * ((2 * qword_1EFC7EF80) ^ 0xFC)) ^ byte_1D24EE4B0[byte_1D24F94A0[(57 * ((2 * qword_1EFC7EF80) ^ 0xFC))] ^ 0xCD])
               - 6)
     - 4;
  v3 = 1374699841 * ((2 * (v1 & 0x4A5519C0) - v1 + 900392510) ^ 0x585EFE37) + 658;
  sub_1D24A06F8((uint64_t)v1);
}

void sub_1D24DA658(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = 535753261 * ((2 * (&v1 & 0x646DB7C8) - &v1 + 462571572) ^ 0x1166461B) + 605;
  sub_1D24A6BB8((uint64_t)&v1);
}

uint64_t sub_1D24DA6EC(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t result;
  _DWORD v10[4];
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v2 = 1374699841 * (((a1 | 0x6A54D4C0) - a1 + (a1 & 0x95AB2B3F)) ^ 0x7A0CCC9);
  v3 = *(_DWORD *)(a1 + 4) ^ v2;
  v4 = *(_DWORD *)(a1 + 8) + v2;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = 1291939467 * (*(_DWORD *)a1 - v2) + 494060743;
  v3 += 2024873255;
  v8 = 1755732067 * (v10 ^ 0xDEC6BDDB);
  v10[0] = 244523975 * v4 - ((489047950 * v4 + 726811548) & 0xEB8E1FEE) - v8 + 191902149;
  v10[1] = v8 ^ (v3 + 854);
  v10[2] = v8 + (v7 ^ 0xF7DDF9E5) + ((2 * v7) & 0xEFBBF3CA) + 2109660828;
  v11 = v6;
  v12 = v5;
  result = ((uint64_t (*)(_DWORD *))((char *)*(&off_1E93A7480 + v3) - 4))(v10);
  *(_DWORD *)(a1 + 24) = v13;
  return result;
}

uint64_t sub_1D24DA86C(unsigned int a1)
{
  return byte_1D24F2AF0[byte_1D24EE2B0[a1] ^ 0x9C] ^ a1;
}

uint64_t sub_1D24DA898(unsigned int a1)
{
  return byte_1D24EE3B0[byte_1D24F92A0[a1] ^ 0xA3] ^ a1;
}

uint64_t sub_1D24DA8C4(unsigned int a1)
{
  return byte_1D24F93A0[byte_1D24F6670[a1] ^ 0xEA] ^ a1;
}

uint64_t sub_1D24DA8F0(unsigned int a1)
{
  return byte_1D24F6770[byte_1D24F2BF0[a1] ^ 0x20] ^ a1;
}

uint64_t sub_1D24DA918(unsigned int a1)
{
  return byte_1D24EE4B0[byte_1D24F94A0[a1] ^ 0xCD] ^ a1;
}

uint64_t sub_1D24DA944(unsigned int a1)
{
  return byte_1D24EE3B0[byte_1D24F92A0[a1] ^ 2] ^ a1;
}

uint64_t sub_1D24DA96C(unsigned int a1)
{
  return byte_1D24EE4B0[byte_1D24F94A0[a1] ^ 0x30] ^ a1;
}

uint64_t sub_1D24DA994(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_1D24DA9AC(int *a1)
{
  unsigned int v2;
  signed int v3;
  uint64_t result;
  int v5;

  v2 = a1[1] - 3804331 * ((((2 * (_DWORD)a1) | 0xF295491C) - (_DWORD)a1 + 112548722) ^ 0xD70B2742);
  v3 = v2 + 504207114;
  result = ((uint64_t (*)(_QWORD, char *))*(&off_1E93A7480 + (int)(v2 + 504207136)))(*(&off_1E93A7480 + (int)(v2 ^ 0xE1F26956)), (char *)*(&off_1E93A7480 + (int)(v2 ^ 0xE1F269D6)) - 4);
  v5 = *(_DWORD *)*(&off_1E93A7480 + v3);
  if ((_DWORD)result)
    v5 = -137501627;
  *a1 = v5;
  return result;
}

uint64_t sub_1D24DAA64(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 8);
  return 0;
}

void sub_1D24DAA7C(_DWORD *a1)
{
  unsigned int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v1 = *a1 - 235795823 * ((-2 - ((a1 | 0xAD0CA1C3) + (~(_DWORD)a1 | 0x52F35E3C))) ^ 0xC65E1765);
  v2 = *(_QWORD *)*(&off_1E93A7480 + (int)(v1 ^ 0x7F7DFD7F));
  v3 = v1 + 535753261 * ((&v2 & 0x31794F88 | ~(&v2 | 0x31794F88)) ^ 0xC472BE58) - 2138962755;
  sub_1D24A6BB8((uint64_t)&v2);
}

uint64_t sub_1D24DAB70(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 88) = 52;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_1D24DAB90(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_1D24DABA8(uint64_t a1)
{
  unsigned int v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = 1374699841 * ((657856293 - (&v2 | 0x27361725) + (&v2 | 0xD8C9E8DA)) ^ 0xB53DF0D3)
     + 658;
  sub_1D24A06F8((uint64_t)&v2);
  return v2;
}

uint64_t sub_1D24DAC48(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  _BOOL4 v5;
  int v6;
  BOOL v7;
  uint64_t v8;

  v1 = 628203409 * ((2 * (result & 0x1BF1622518597E72) - result - 0x1BF1622518597E73) ^ 0xDB5237CF652E8DBELL);
  v2 = *(_QWORD *)(result + 32) + v1;
  v3 = *(_QWORD *)result ^ v1;
  v4 = v2 > v3;
  v5 = v2 == v3;
  v6 = v4;
  if (((*(_DWORD *)(result + 28) ^ v1) & 1) != 0)
    v5 = v6;
  v7 = !v5;
  v8 = 12;
  if (!v7)
    v8 = 24;
  *(_DWORD *)(result + 16) = (*(_DWORD *)(result + v8) - v1) ^ (*(_DWORD *)(result + 20) - v1);
  return result;
}

uint64_t sub_1D24DACF0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 24);
  return 0;
}

void sub_1D24DAD08(uint64_t a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v2 = a1;
  v1 = (1178560073 * ((((2 * &v1) | 0x856349AA) - &v1 - 1118938325) ^ 0xEF269870)) ^ 0x9B;
  sub_1D24B5984((uint64_t)&v1);
}

_BYTE *sub_1D24DAD9C(_BYTE *result, char a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = -(int)result & 7;
  if (v3 > a3)
    LODWORD(v3) = a3;
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  v4 = a3 - v3;
  v6 = v4;
  v5 = v4 & 7;
  switch(v6)
  {
    case 0uLL:
      return result;
    case 1uLL:
      goto LABEL_20;
    case 2uLL:
      goto LABEL_19;
    case 3uLL:
      goto LABEL_18;
    case 4uLL:
      goto LABEL_17;
    case 5uLL:
      goto LABEL_16;
    case 6uLL:
      goto LABEL_15;
    case 7uLL:
      *result++ = a2;
LABEL_15:
      *result++ = a2;
LABEL_16:
      *result++ = a2;
LABEL_17:
      *result++ = a2;
LABEL_18:
      *result++ = a2;
LABEL_19:
      *result++ = a2;
LABEL_20:
      *result = a2;
      break;
    default:
      result = (_BYTE *)((uint64_t (*)(void))((char *)&loc_1D24DAE2C + 4 * byte_1D24F6877[(v5 >> 3) & 7]))();
      break;
  }
  return result;
}

void VSCheckEntitlementForTask_cold_1()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1D2419000, v0, v1, "The task %@ does NOT have the %@ entitlement.");
  OUTLINED_FUNCTION_3();
}

void VSCheckEntitlementForTask_cold_2()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1D2419000, v0, v1, "Task %@ did not have any value for the %@ entitlement.");
  OUTLINED_FUNCTION_3();
}

void VSCheckEntitlementForTask_cold_3()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1D2419000, v0, v1, "Task %@ has a false value for the %@ entitlement.");
  OUTLINED_FUNCTION_3();
}

void VSCheckEntitlementForTask_cold_4()
{
  uint64_t v0;
  os_log_t v1;

  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_1D2419000, v0, v1, "The value for the %@ entitlement of %@ is not a BOOLean value.");
  OUTLINED_FUNCTION_3();
}

void VSDisplayNameForBundleWithIdentifier_cold_1(uint64_t a1, void *a2, NSObject *a3)
{
  void *v5;
  int v6;
  uint64_t v7;
  __int16 v8;
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a2, "localizedDescription");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = 138412546;
  v7 = a1;
  v8 = 2112;
  v9 = v5;
  _os_log_error_impl(&dword_1D2419000, a3, OS_LOG_TYPE_ERROR, "Error finding bundle record for bundleID %@ : %@", (uint8_t *)&v6, 0x16u);

}

void VSLoadBundleAtPath_cold_1(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_fault_impl(&dword_1D2419000, a2, OS_LOG_TYPE_FAULT, "Failed to lookup bundle at path %@", (uint8_t *)&v2, 0xCu);
}

void VSLocalizedDescriptionForPublicErrorCode_cold_1(int a1, int a2, os_log_t log)
{
  _DWORD v3[2];
  __int16 v4;
  int v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v3[0] = 67109376;
  v3[1] = a1;
  v4 = 1024;
  v5 = a2;
  _os_log_fault_impl(&dword_1D2419000, log, OS_LOG_TYPE_FAULT, "No error string found for error with type %d and code %d", (uint8_t *)v3, 0xEu);
}

uint64_t sub_1D24DFC14()
{
  return MEMORY[0x1E0CAE9C8]();
}

uint64_t sub_1D24DFC20()
{
  return MEMORY[0x1E0CAEAB0]();
}

uint64_t sub_1D24DFC2C()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1D24DFC38()
{
  return MEMORY[0x1E0CAFDA0]();
}

uint64_t sub_1D24DFC44()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1D24DFC50()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1D24DFC5C()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1D24DFC68()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1D24DFC74()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_1D24DFC80()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t sub_1D24DFC8C()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1D24DFC98()
{
  return MEMORY[0x1E0CB0FB0]();
}

uint64_t sub_1D24DFCA4()
{
  return MEMORY[0x1E0CB10C8]();
}

uint64_t sub_1D24DFCB0()
{
  return MEMORY[0x1E0CB11B8]();
}

uint64_t sub_1D24DFCBC()
{
  return MEMORY[0x1E0CB11F0]();
}

uint64_t sub_1D24DFCC8()
{
  return MEMORY[0x1E0D20EF8]();
}

uint64_t sub_1D24DFCD4()
{
  return MEMORY[0x1E0CA9B98]();
}

uint64_t sub_1D24DFCE0()
{
  return MEMORY[0x1E0CA9BA8]();
}

uint64_t sub_1D24DFCEC()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1D24DFCF8()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1D24DFD04()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1D24DFD10()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1D24DFD1C()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1D24DFD28()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1D24DFD34()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1D24DFD40()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1D24DFD4C()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1D24DFD58()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1D24DFD64()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1D24DFD70()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1D24DFD7C()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1D24DFD88()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1D24DFD94()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1D24DFDA0()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1D24DFDAC()
{
  return MEMORY[0x1E0DEAC88]();
}

uint64_t sub_1D24DFDB8()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1D24DFDC4()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1D24DFDD0()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1D24DFDDC()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_1D24DFDE8()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_1D24DFDF4()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1D24DFE00()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1D24DFE0C()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_1D24DFE18()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1D24DFE24()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1D24DFE30()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1D24DFE3C()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1D24DFE48()
{
  return MEMORY[0x1E0DEFCE8]();
}

uint64_t sub_1D24DFE54()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1D24DFE60()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1D24DFE6C()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1D24DFE78()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1D24DFE84()
{
  return MEMORY[0x1E0DEC160]();
}

uint64_t sub_1D24DFE90()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1D24DFE9C()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1D24DFEA8()
{
  return MEMORY[0x1E0DEC180]();
}

uint64_t sub_1D24DFEB4()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1D24DFEC0()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1D24DFECC()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1D24DFED8()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1D24DFEE4()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1D24DFEF0()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1D24DFEFC()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1D24DFF08()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1D24DFF14()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1D24DFF20()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1D24DFF2C()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1D24DFF38()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1D24DFF44()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1D24DFF50()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1D24DFF5C()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1D24DFF68()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1D24DFF74()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1D24DFF80()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_1D24DFF8C()
{
  return MEMORY[0x1E0DED9C8]();
}

uint64_t sub_1D24DFF98()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1D24DFFA4()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1D24DFFB0()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1D24DFFBC()
{
  return MEMORY[0x1E0DEDF40]();
}

int CC_SHA256_Final(unsigned __int8 *md, CC_SHA256_CTX *c)
{
  return MEMORY[0x1E0C80370](md, c);
}

int CC_SHA256_Init(CC_SHA256_CTX *c)
{
  return MEMORY[0x1E0C80378](c);
}

int CC_SHA256_Update(CC_SHA256_CTX *c, const void *data, CC_LONG len)
{
  return MEMORY[0x1E0C80380](c, data, *(_QWORD *)&len);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return MEMORY[0x1E0C97D60](theArray);
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return (const void *)MEMORY[0x1E0C97D98](theArray, idx);
}

CFTypeID CFBooleanGetTypeID(void)
{
  return MEMORY[0x1E0C97FC8]();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x1E0C97FE0](BOOLean);
}

CFStringRef CFBundleGetIdentifier(CFBundleRef bundle)
{
  return (CFStringRef)MEMORY[0x1E0C98120](bundle);
}

Boolean CFDictionaryContainsKey(CFDictionaryRef theDict, const void *key)
{
  return MEMORY[0x1E0C98518](theDict, key);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFMutableDictionaryRef)MEMORY[0x1E0C98550](allocator, capacity, keyCallBacks, valueCallBacks);
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x1E0C985B8](theDict, key);
}

Boolean CFDictionaryGetValueIfPresent(CFDictionaryRef theDict, const void *key, const void **value)
{
  return MEMORY[0x1E0C985C8](theDict, key, value);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
  MEMORY[0x1E0C98610](theDict, key, value);
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return MEMORY[0x1E0C98620](cf1, cf2);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1E0C98738](cf);
}

CFDictionaryRef CFNetworkCopySystemProxySettings(void)
{
  return (CFDictionaryRef)MEMORY[0x1E0C928C8]();
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A40](key, applicationID);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1E0C98BD0](cf);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
  MEMORY[0x1E0C98BF8](rl, source, mode);
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return (CFRunLoopRef)MEMORY[0x1E0C98C30]();
}

void CFRunLoopRemoveSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
  MEMORY[0x1E0C98C90](rl, source, mode);
}

CFRunLoopRunResult CFRunLoopRunInMode(CFRunLoopMode mode, CFTimeInterval seconds, Boolean returnAfterSourceHandled)
{
  return MEMORY[0x1E0C98CB0](mode, returnAfterSourceHandled, seconds);
}

CFRunLoopSourceRef CFRunLoopSourceCreate(CFAllocatorRef allocator, CFIndex order, CFRunLoopSourceContext *context)
{
  return (CFRunLoopSourceRef)MEMORY[0x1E0C98CC8](allocator, order, context);
}

void CFRunLoopSourceInvalidate(CFRunLoopSourceRef source)
{
  MEMORY[0x1E0C98CE0](source);
}

void CFRunLoopSourceSignal(CFRunLoopSourceRef source)
{
  MEMORY[0x1E0C98CF0](source);
}

void CFRunLoopStop(CFRunLoopRef rl)
{
  MEMORY[0x1E0C98D00](rl);
}

void CFRunLoopWakeUp(CFRunLoopRef rl)
{
  MEMORY[0x1E0C98D68](rl);
}

CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions)
{
  return MEMORY[0x1E0C98F10](theString1, theString2, compareOptions);
}

CFStringRef CFStringCreateCopy(CFAllocatorRef alloc, CFStringRef theString)
{
  return (CFStringRef)MEMORY[0x1E0C98F78](alloc, theString);
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x1E0C99170]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1E0CB28A0](aClassName);
}

void NSLog(NSString *format, ...)
{
  MEMORY[0x1E0CB2D88](format);
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return (SEL)MEMORY[0x1E0CB3190](aSelectorName);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1E0CB3230](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB3250]();
}

OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef *result)
{
  return MEMORY[0x1E0CD6290](attributes, result);
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return MEMORY[0x1E0CD6298](query, result);
}

OSStatus SecItemDelete(CFDictionaryRef query)
{
  return MEMORY[0x1E0CD62A0](query);
}

OSStatus SecItemUpdate(CFDictionaryRef query, CFDictionaryRef attributesToUpdate)
{
  return MEMORY[0x1E0CD62D8](query, attributesToUpdate);
}

CFArrayRef SecTrustCopyCertificateChain(SecTrustRef trust)
{
  return (CFArrayRef)MEMORY[0x1E0CD6648](trust);
}

uint64_t SecTrustCopyInfo()
{
  return MEMORY[0x1E0CD6668]();
}

BOOL SecTrustEvaluateWithError(SecTrustRef trust, CFErrorRef *error)
{
  return MEMORY[0x1E0CD66C8](trust, error);
}

uint64_t SecTrustStoreContains()
{
  return MEMORY[0x1E0CD6768]();
}

uint64_t SecTrustStoreForDomain()
{
  return MEMORY[0x1E0CD6778]();
}

uint64_t TCCAccessCheckAuditToken()
{
  return MEMORY[0x1E0DB0F90]();
}

uint64_t TCCAccessCopyInformation()
{
  return MEMORY[0x1E0DB0FB0]();
}

uint64_t TCCAccessCopyInformationForBundle()
{
  return MEMORY[0x1E0DB0FC0]();
}

uint64_t TCCAccessCopyInformationForBundleId()
{
  return MEMORY[0x1E0DB0FC8]();
}

uint64_t TCCAccessReset()
{
  return MEMORY[0x1E0DB1020]();
}

uint64_t TCCAccessSetForAuditToken()
{
  return MEMORY[0x1E0DB1058]();
}

uint64_t TCCAccessSetForBundleId()
{
  return MEMORY[0x1E0DB1070]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _CFBundleCopyBundleURLForExecutableURL()
{
  return MEMORY[0x1E0C99F70]();
}

uint64_t _CFBundleCreateUnique()
{
  return MEMORY[0x1E0C99FF0]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

int *__error(void)
{
  return (int *)MEMORY[0x1E0C80AC0]();
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1E0C81010]();
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81040](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

void abort(void)
{
  MEMORY[0x1E0C813A8]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

compression_status compression_stream_destroy(compression_stream *stream)
{
  return MEMORY[0x1E0DE5290](stream);
}

compression_status compression_stream_init(compression_stream *stream, compression_stream_operation operation, compression_algorithm algorithm)
{
  return MEMORY[0x1E0DE52A0](stream, *(_QWORD *)&operation, *(_QWORD *)&algorithm);
}

compression_status compression_stream_process(compression_stream *stream, int flags)
{
  return MEMORY[0x1E0DE52B0](stream, *(_QWORD *)&flags);
}

uint64_t container_system_group_path_for_identifier()
{
  return MEMORY[0x1E0C82A90]();
}

void dispatch_activate(dispatch_object_t object)
{
  MEMORY[0x1E0C82BC0](object);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BE8](queue);
}

void dispatch_assert_queue_not_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BF8](queue);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82D48](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA0](object);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1E0C82EC8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82ED8](dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
  MEMORY[0x1E0C82F10](source);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1E0C82F20](type, handle, mask, queue);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F48](source, handler);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F58](source, handler);
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
  MEMORY[0x1E0C82F78](source, start, interval, leeway);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

uint64_t dyld_program_sdk_at_least()
{
  return MEMORY[0x1E0C83158]();
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

char *__cdecl getenv(const char *a1)
{
  return (char *)MEMORY[0x1E0C83660](a1);
}

mach_msg_return_t mach_msg(mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify)
{
  return MEMORY[0x1E0C83CB0](msg, *(_QWORD *)&option, *(_QWORD *)&send_size, *(_QWORD *)&rcv_size, *(_QWORD *)&rcv_name, *(_QWORD *)&timeout, *(_QWORD *)&notify);
}

void mach_msg_destroy(mach_msg_header_t *a1)
{
  MEMORY[0x1E0C83CC0](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F00](size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

void mig_dealloc_reply_port(mach_port_t reply_port)
{
  MEMORY[0x1E0C840E8](*(_QWORD *)&reply_port);
}

mach_port_t mig_get_reply_port(void)
{
  return MEMORY[0x1E0C84100]();
}

void mig_put_reply_port(mach_port_t reply_port)
{
  MEMORY[0x1E0C84110](*(_QWORD *)&reply_port);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

BOOL notify_is_valid_token(int val)
{
  return MEMORY[0x1E0C843F0](*(_QWORD *)&val);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x1E0C843F8](name);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1E0DE7CA8](object, key);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1E0DE7CD0](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D28](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
  MEMORY[0x1E0DE7F40](object, key, value, policy);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F88](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1E0DE7FC8](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1E0DE7FD0](obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

int proc_pidpath(int pid, void *buffer, uint32_t buffersize)
{
  return MEMORY[0x1E0C84C50](*(_QWORD *)&pid, buffer, *(_QWORD *)&buffersize);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1E0C85578](__s);
}

unint64_t strtoull(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x1E0C856A8](__str, __endptr, *(_QWORD *)&__base);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

BOOLean_t voucher_mach_msg_set(mach_msg_header_t *msg)
{
  return MEMORY[0x1E0C85B60](msg);
}

